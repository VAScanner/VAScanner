{
    "org.apache.catalina.servlets.CGIServlet:void init(javax.servlet.ServletConfig)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.catalina.core.StandardWrapper:void initServlet(javax.servlet.Servlet)",
            "org.apache.catalina.startup.Tomcat$ExistingStandardWrapper:javax.servlet.Servlet loadServlet()"
        ]
    },
    "org.apache.catalina.core.StandardWrapper:void initServlet(javax.servlet.Servlet)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardWrapper:javax.servlet.Servlet allocate()",
            "org.apache.catalina.core.StandardWrapper:javax.servlet.Servlet loadServlet()"
        ]
    },
    "org.apache.catalina.startup.Tomcat$ExistingStandardWrapper:javax.servlet.Servlet loadServlet()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardWrapper:boolean isSingleThreadModel()",
            "org.apache.catalina.core.StandardWrapper:java.lang.String[] getServletMethods()",
            "org.apache.catalina.core.StandardWrapper:javax.servlet.Servlet allocate()",
            "org.apache.catalina.core.StandardWrapper:void load()"
        ]
    },
    "org.apache.catalina.core.StandardWrapper:javax.servlet.Servlet allocate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void invoke(javax.servlet.ServletRequest,javax.servlet.ServletResponse,org.apache.catalina.core.ApplicationDispatcher$State)",
            "org.apache.catalina.core.StandardWrapperValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardWrapperValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)"
        ]
    },
    "org.apache.catalina.core.StandardWrapper:javax.servlet.Servlet loadServlet()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardWrapper:boolean isSingleThreadModel()",
            "org.apache.catalina.core.StandardWrapper:java.lang.String[] getServletMethods()",
            "org.apache.catalina.core.StandardWrapper:javax.servlet.Servlet allocate()",
            "org.apache.catalina.core.StandardWrapper:void load()"
        ]
    },
    "org.apache.catalina.core.StandardWrapper:boolean isSingleThreadModel()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardWrapper:java.lang.String[] getServletMethods()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean postParseRequest(org.apache.coyote.Request,org.apache.catalina.connector.Request,org.apache.coyote.Response,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.core.StandardWrapper:void load()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:void loadOnStartup(org.apache.catalina.Container[])"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher:void invoke(javax.servlet.ServletRequest,javax.servlet.ServletResponse,org.apache.catalina.core.ApplicationDispatcher$State)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void processRequest(javax.servlet.ServletRequest,javax.servlet.ServletResponse,org.apache.catalina.core.ApplicationDispatcher$State)",
            "org.apache.catalina.core.ApplicationDispatcher:void doInclude(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.DispatcherType)"
        ]
    },
    "org.apache.catalina.core.StandardWrapperValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.core.ContainerBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CrawlerSessionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.core.StandardWrapperValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean event(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.core.StandardContextValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.core.StandardEngineValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.core.StandardHostValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void lifecycleEvent(org.apache.catalina.LifecycleEvent)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.valves.ValveBase:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)"
        ]
    },
    "org.apache.catalina.connector.CoyoteAdapter:boolean postParseRequest(org.apache.coyote.Request,org.apache.catalina.connector.Request,org.apache.coyote.Response,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)"
        ]
    },
    "org.apache.catalina.core.StandardContext:void loadOnStartup(org.apache.catalina.Container[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext$3:java.lang.Void call()"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher:void processRequest(javax.servlet.ServletRequest,javax.servlet.ServletResponse,org.apache.catalina.core.ApplicationDispatcher$State)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void doForward(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher:void doInclude(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.DispatcherType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void include(javax.servlet.ServletRequest,javax.servlet.ServletResponse)",
            "org.apache.catalina.core.ApplicationDispatcher:void access$100(org.apache.catalina.core.ApplicationDispatcher,javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.DispatcherType)"
        ]
    },
    "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.core.ContainerBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CrawlerSessionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.core.ContainerBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CrawlerSessionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.ajp.AjpAprProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState asyncDispatch(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.coyote.ajp.AjpProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState asyncDispatch(org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.coyote.http11.Http11AprProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState asyncDispatch(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.coyote.http11.Http11NioProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState asyncDispatch(org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.coyote.http11.Http11Processor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState asyncDispatch(org.apache.tomcat.util.net.SocketStatus)"
        ]
    },
    "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.ajp.AjpAprProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.coyote.ajp.AjpProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.coyote.http11.Http11AprProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.coyote.http11.Http11NioProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.NioChannel)",
            "org.apache.coyote.http11.Http11Processor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)"
        ]
    },
    "org.apache.catalina.core.ContainerBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.core.ContainerBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CrawlerSessionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.core.ContainerBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CrawlerSessionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.core.ContainerBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CrawlerSessionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.valves.AccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.core.ContainerBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CrawlerSessionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.core.ContainerBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CrawlerSessionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.valves.CrawlerSessionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.core.ContainerBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CrawlerSessionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.core.ContainerBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CrawlerSessionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.core.ContainerBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CrawlerSessionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.core.ContainerBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CrawlerSessionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.core.ContainerBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CrawlerSessionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.valves.RemoteAddrValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.core.ContainerBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CrawlerSessionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.core.ContainerBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CrawlerSessionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.connector.CoyoteAdapter:boolean event(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.coyote.http11.Http11AprProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState event(org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.coyote.http11.Http11NioProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState event(org.apache.tomcat.util.net.SocketStatus)"
        ]
    },
    "org.apache.catalina.core.StandardContextValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean event(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.core.StandardContextValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.core.StandardEngineValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.core.StandardHostValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void lifecycleEvent(org.apache.catalina.LifecycleEvent)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.valves.ValveBase:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)"
        ]
    },
    "org.apache.catalina.core.StandardEngineValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean event(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.core.StandardContextValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.core.StandardEngineValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.core.StandardHostValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void lifecycleEvent(org.apache.catalina.LifecycleEvent)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.valves.ValveBase:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)"
        ]
    },
    "org.apache.catalina.core.StandardHostValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean event(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.core.StandardContextValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.core.StandardEngineValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.core.StandardHostValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void lifecycleEvent(org.apache.catalina.LifecycleEvent)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.valves.ValveBase:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)"
        ]
    },
    "org.apache.catalina.valves.CometConnectionManagerValve:void lifecycleEvent(org.apache.catalina.LifecycleEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleSupport:void fireLifecycleEvent(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.catalina.valves.CometConnectionManagerValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean event(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.core.StandardContextValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.core.StandardEngineValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.core.StandardHostValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void lifecycleEvent(org.apache.catalina.LifecycleEvent)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.valves.ValveBase:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)"
        ]
    },
    "org.apache.catalina.valves.ValveBase:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean event(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.core.StandardContextValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.core.StandardEngineValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.core.StandardHostValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void lifecycleEvent(org.apache.catalina.LifecycleEvent)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.valves.ValveBase:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)"
        ]
    },
    "org.apache.catalina.core.StandardContext$3:java.lang.Void call()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext$3:java.lang.Object call()"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher:void doForward(javax.servlet.ServletRequest,javax.servlet.ServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void forward(javax.servlet.ServletRequest,javax.servlet.ServletResponse)",
            "org.apache.catalina.core.ApplicationDispatcher:void access$000(org.apache.catalina.core.ApplicationDispatcher,javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher:void include(javax.servlet.ServletRequest,javax.servlet.ServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.AsyncContextImpl$1:void run()",
            "org.apache.catalina.core.StandardHostValve:boolean custom(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.deploy.ErrorPage)",
            "org.apache.catalina.manager.HTMLManagerServlet:void displaySessionsListPage(org.apache.catalina.util.ContextName,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.HTMLManagerServlet:void displaySessionDetailPage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.catalina.util.ContextName,java.lang.String,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:java.lang.String getFileText(java.lang.String,boolean)"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher:void access$100(org.apache.catalina.core.ApplicationDispatcher,javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.DispatcherType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher$PrivilegedInclude:java.lang.Void run()"
        ]
    },
    "org.apache.coyote.ajp.AjpAprProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState asyncDispatch(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.ajp.AjpAprProtocol$AjpConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState asyncDispatch(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)"
        ]
    },
    "org.apache.coyote.ajp.AjpProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState asyncDispatch(org.apache.tomcat.util.net.SocketStatus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.ajp.AjpProtocol$AjpConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)"
        ]
    },
    "org.apache.coyote.http11.Http11AprProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState asyncDispatch(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.Http11AprProtocol$Http11ConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState asyncDispatch(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)"
        ]
    },
    "org.apache.coyote.http11.Http11NioProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState asyncDispatch(org.apache.tomcat.util.net.SocketStatus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState event(org.apache.tomcat.util.net.NioChannel,org.apache.tomcat.util.net.SocketStatus)"
        ]
    },
    "org.apache.coyote.http11.Http11Processor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState asyncDispatch(org.apache.tomcat.util.net.SocketStatus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)"
        ]
    },
    "org.apache.coyote.ajp.AjpAprProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.ajp.AjpAprProtocol$AjpConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)"
        ]
    },
    "org.apache.coyote.ajp.AjpProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.ajp.AjpProtocol$AjpConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)"
        ]
    },
    "org.apache.coyote.http11.Http11AprProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.Http11AprProtocol$Http11ConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)"
        ]
    },
    "org.apache.coyote.http11.Http11NioProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.NioChannel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.NioChannel)"
        ]
    },
    "org.apache.coyote.http11.Http11Processor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)"
        ]
    },
    "org.apache.catalina.valves.RemoteAddrValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.core.ContainerBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CrawlerSessionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.valves.RemoteHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.core.ContainerBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CrawlerSessionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.coyote.http11.Http11AprProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState event(org.apache.tomcat.util.net.SocketStatus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.Http11AprProtocol$Http11ConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState event(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)"
        ]
    },
    "org.apache.coyote.http11.Http11NioProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState event(org.apache.tomcat.util.net.SocketStatus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState event(org.apache.tomcat.util.net.NioChannel,org.apache.tomcat.util.net.SocketStatus)"
        ]
    },
    "org.apache.catalina.util.LifecycleSupport:void fireLifecycleEvent(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void fireLifecycleEvent(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.catalina.core.StandardContext$3:java.lang.Object call()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.ApplicationDispatcher:void forward(javax.servlet.ServletRequest,javax.servlet.ServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.FormAuthenticator:void forwardToLoginPage(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.authenticator.FormAuthenticator:void forwardToErrorPage(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.core.StandardHostValve:boolean custom(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.deploy.ErrorPage)"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher:void access$000(org.apache.catalina.core.ApplicationDispatcher,javax.servlet.ServletRequest,javax.servlet.ServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher$PrivilegedForward:java.lang.Void run()"
        ]
    },
    "org.apache.catalina.core.AsyncContextImpl$1:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.AsyncContextImpl$RunnableWrapper:void run()",
            "org.apache.catalina.core.AsyncContextImpl:void doInternalDispatch()",
            "org.apache.catalina.core.StandardThreadExecutor:void execute(java.lang.Runnable)",
            "org.apache.coyote.AsyncStateMachine:void asyncRun(java.lang.Runnable)",
            "org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller:boolean events()",
            "org.apache.tomcat.util.net.NioEndpoint$Poller:boolean events()",
            "org.apache.tomcat.util.net.SecureNioChannel:javax.net.ssl.SSLEngineResult$HandshakeStatus tasks()",
            "org.apache.tomcat.util.threads.ThreadPoolExecutor:void execute(java.lang.Runnable,long,java.util.concurrent.TimeUnit)"
        ]
    },
    "org.apache.catalina.core.StandardHostValve:boolean custom(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.deploy.ErrorPage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardHostValve:void throwable(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,java.lang.Throwable)",
            "org.apache.catalina.core.StandardHostValve:void status(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.manager.HTMLManagerServlet:void displaySessionsListPage(org.apache.catalina.util.ContextName,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.tomcat.util.res.StringManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.HTMLManagerServlet:void doSessions(org.apache.catalina.util.ContextName,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.tomcat.util.res.StringManager)"
        ]
    },
    "org.apache.catalina.manager.HTMLManagerServlet:void displaySessionDetailPage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.catalina.util.ContextName,java.lang.String,org.apache.tomcat.util.res.StringManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.HTMLManagerServlet:void doSessions(org.apache.catalina.util.ContextName,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.tomcat.util.res.StringManager)"
        ]
    },
    "org.apache.catalina.ssi.SSIServletExternalResolver:java.lang.String getFileText(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIMediator:java.lang.String getFileText(java.lang.String,boolean)"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher$PrivilegedInclude:java.lang.Void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher$PrivilegedInclude:java.lang.Object run()"
        ]
    },
    "org.apache.coyote.ajp.AjpAprProtocol$AjpConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState asyncDispatch(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.net.AprEndpoint$SocketProcessor:void run()"
        ]
    },
    "org.apache.coyote.ajp.AjpProtocol$AjpConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.ajp.AjpProtocol$AjpConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor:void run()"
        ]
    },
    "org.apache.coyote.http11.Http11AprProtocol$Http11ConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState asyncDispatch(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.Http11AprProtocol$Http11ConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState event(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.tomcat.util.net.AprEndpoint$SocketProcessor:void run()"
        ]
    },
    "org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState event(org.apache.tomcat.util.net.NioChannel,org.apache.tomcat.util.net.SocketStatus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.net.NioEndpoint$SocketProcessor:void run()"
        ]
    },
    "org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor:void run()"
        ]
    },
    "org.apache.coyote.ajp.AjpAprProtocol$AjpConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.net.AprEndpoint$SocketProcessor:void run()",
            "org.apache.tomcat.util.net.AprEndpoint$SocketWithOptionsProcessor:void run()"
        ]
    },
    "org.apache.coyote.http11.Http11AprProtocol$Http11ConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.net.AprEndpoint$SocketProcessor:void run()",
            "org.apache.tomcat.util.net.AprEndpoint$SocketWithOptionsProcessor:void run()"
        ]
    },
    "org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.NioChannel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.net.NioEndpoint$SocketProcessor:void run()"
        ]
    },
    "org.apache.coyote.http11.Http11AprProtocol$Http11ConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState event(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.net.AprEndpoint$SocketEventProcessor:void run()"
        ]
    },
    "org.apache.catalina.util.LifecycleBase:void fireLifecycleEvent(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ContainerBase:void backgroundProcess()",
            "org.apache.catalina.core.StandardContext:void startInternal()",
            "org.apache.catalina.core.StandardContext:void stopInternal()",
            "org.apache.catalina.core.StandardServer:void startInternal()",
            "org.apache.catalina.core.StandardServer:void stopInternal()",
            "org.apache.catalina.deploy.NamingResources:void startInternal()",
            "org.apache.catalina.deploy.NamingResources:void stopInternal()",
            "org.apache.catalina.util.LifecycleBase:void stop()",
            "org.apache.catalina.util.LifecycleBase:void setStateInternal(org.apache.catalina.LifecycleState,java.lang.Object,boolean)"
        ]
    },
    "org.apache.catalina.authenticator.FormAuthenticator:void forwardToLoginPage(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.FormAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)"
        ]
    },
    "org.apache.catalina.authenticator.FormAuthenticator:void forwardToErrorPage(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.FormAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher$PrivilegedForward:java.lang.Void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher$PrivilegedForward:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.core.AsyncContextImpl$RunnableWrapper:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.AsyncContextImpl$RunnableWrapper:void run()",
            "org.apache.catalina.core.AsyncContextImpl:void doInternalDispatch()",
            "org.apache.catalina.core.StandardThreadExecutor:void execute(java.lang.Runnable)",
            "org.apache.coyote.AsyncStateMachine:void asyncRun(java.lang.Runnable)",
            "org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller:boolean events()",
            "org.apache.tomcat.util.net.NioEndpoint$Poller:boolean events()",
            "org.apache.tomcat.util.net.SecureNioChannel:javax.net.ssl.SSLEngineResult$HandshakeStatus tasks()",
            "org.apache.tomcat.util.threads.ThreadPoolExecutor:void execute(java.lang.Runnable,long,java.util.concurrent.TimeUnit)"
        ]
    },
    "org.apache.catalina.core.AsyncContextImpl:void doInternalDispatch()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardWrapperValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.core.StandardThreadExecutor:void execute(java.lang.Runnable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.AsyncStateMachine:void asyncRun(java.lang.Runnable)",
            "org.apache.tomcat.util.net.AprEndpoint$SocketProcessor:void run()",
            "org.apache.tomcat.util.net.AprEndpoint$SocketWithOptionsProcessor:void run()",
            "org.apache.tomcat.util.net.AprEndpoint:boolean processSocketWithOptions(long)",
            "org.apache.tomcat.util.net.AprEndpoint:boolean processSocket(long)",
            "org.apache.tomcat.util.net.AprEndpoint:boolean processSocket(long,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.tomcat.util.net.AprEndpoint:boolean processSocketAsync(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor:void run()",
            "org.apache.tomcat.util.net.JIoEndpoint:boolean processSocket(java.net.Socket)",
            "org.apache.tomcat.util.net.JIoEndpoint:boolean processSocketAsync(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.tomcat.util.net.NioEndpoint$SocketProcessor:void run()",
            "org.apache.tomcat.util.net.NioEndpoint:boolean processSocket(org.apache.tomcat.util.net.NioChannel,org.apache.tomcat.util.net.SocketStatus,boolean)"
        ]
    },
    "org.apache.coyote.AsyncStateMachine:void asyncRun(java.lang.Runnable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void action(org.apache.coyote.ActionCode,java.lang.Object)",
            "org.apache.coyote.http11.AbstractHttp11Processor:void action(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller:boolean events()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller:void run()"
        ]
    },
    "org.apache.tomcat.util.net.NioEndpoint$Poller:boolean events()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.net.NioEndpoint$Poller:void run()"
        ]
    },
    "org.apache.tomcat.util.net.SecureNioChannel:javax.net.ssl.SSLEngineResult$HandshakeStatus tasks()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.net.SecureNioChannel:int handshake(boolean,boolean)",
            "org.apache.tomcat.util.net.SecureNioChannel:javax.net.ssl.SSLEngineResult handshakeUnwrap(boolean)",
            "org.apache.tomcat.util.net.SecureNioChannel:int read(java.nio.ByteBuffer)",
            "org.apache.tomcat.util.net.SecureNioChannel:int write(java.nio.ByteBuffer)"
        ]
    },
    "org.apache.tomcat.util.threads.ThreadPoolExecutor:void execute(java.lang.Runnable,long,java.util.concurrent.TimeUnit)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardThreadExecutor:void execute(java.lang.Runnable,long,java.util.concurrent.TimeUnit)",
            "org.apache.tomcat.util.threads.ThreadPoolExecutor:void execute(java.lang.Runnable)"
        ]
    },
    "org.apache.catalina.core.StandardHostValve:void throwable(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)"
        ]
    },
    "org.apache.catalina.core.StandardHostValve:void status(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.core.StandardHostValve:void throwable(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,java.lang.Throwable)"
        ]
    },
    "org.apache.catalina.manager.HTMLManagerServlet:void doSessions(org.apache.catalina.util.ContextName,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.tomcat.util.res.StringManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.HTMLManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.ssi.SSIMediator:java.lang.String getFileText(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIInclude:long process(org.apache.catalina.ssi.SSIMediator,java.lang.String,java.lang.String[],java.lang.String[],java.io.PrintWriter)"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher$PrivilegedInclude:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void include(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.tomcat.util.net.AprEndpoint$SocketProcessor:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.AsyncContextImpl$RunnableWrapper:void run()",
            "org.apache.catalina.core.AsyncContextImpl:void doInternalDispatch()",
            "org.apache.catalina.core.StandardThreadExecutor:void execute(java.lang.Runnable)",
            "org.apache.coyote.AsyncStateMachine:void asyncRun(java.lang.Runnable)",
            "org.apache.tomcat.util.net.AprEndpoint$SocketProcessor:void run()",
            "org.apache.tomcat.util.net.AprEndpoint$SocketWithOptionsProcessor:void run()",
            "org.apache.tomcat.util.net.AprEndpoint:boolean processSocket(long)",
            "org.apache.tomcat.util.net.AprEndpoint:boolean processSocketAsync(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller:boolean events()",
            "org.apache.tomcat.util.net.NioEndpoint$Poller:boolean events()",
            "org.apache.tomcat.util.net.SecureNioChannel:javax.net.ssl.SSLEngineResult$HandshakeStatus tasks()",
            "org.apache.tomcat.util.threads.ThreadPoolExecutor:void execute(java.lang.Runnable,long,java.util.concurrent.TimeUnit)"
        ]
    },
    "org.apache.coyote.ajp.AjpProtocol$AjpConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor:void run()"
        ]
    },
    "org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.AsyncContextImpl$RunnableWrapper:void run()",
            "org.apache.catalina.core.AsyncContextImpl:void doInternalDispatch()",
            "org.apache.catalina.core.StandardThreadExecutor:void execute(java.lang.Runnable)",
            "org.apache.coyote.AsyncStateMachine:void asyncRun(java.lang.Runnable)",
            "org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor:void run()",
            "org.apache.tomcat.util.net.JIoEndpoint:boolean processSocket(java.net.Socket)",
            "org.apache.tomcat.util.net.JIoEndpoint:boolean processSocketAsync(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller:boolean events()",
            "org.apache.tomcat.util.net.NioEndpoint$Poller:boolean events()",
            "org.apache.tomcat.util.net.SecureNioChannel:javax.net.ssl.SSLEngineResult$HandshakeStatus tasks()",
            "org.apache.tomcat.util.threads.ThreadPoolExecutor:void execute(java.lang.Runnable,long,java.util.concurrent.TimeUnit)"
        ]
    },
    "org.apache.tomcat.util.net.NioEndpoint$SocketProcessor:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.AsyncContextImpl$RunnableWrapper:void run()",
            "org.apache.catalina.core.AsyncContextImpl:void doInternalDispatch()",
            "org.apache.catalina.core.StandardThreadExecutor:void execute(java.lang.Runnable)",
            "org.apache.coyote.AsyncStateMachine:void asyncRun(java.lang.Runnable)",
            "org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller:boolean events()",
            "org.apache.tomcat.util.net.NioEndpoint$Poller:boolean events()",
            "org.apache.tomcat.util.net.NioEndpoint$SocketProcessor:void run()",
            "org.apache.tomcat.util.net.NioEndpoint:boolean processSocket(org.apache.tomcat.util.net.NioChannel,org.apache.tomcat.util.net.SocketStatus,boolean)",
            "org.apache.tomcat.util.net.SecureNioChannel:javax.net.ssl.SSLEngineResult$HandshakeStatus tasks()",
            "org.apache.tomcat.util.threads.ThreadPoolExecutor:void execute(java.lang.Runnable,long,java.util.concurrent.TimeUnit)"
        ]
    },
    "org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor:void run()"
        ]
    },
    "org.apache.tomcat.util.net.AprEndpoint$SocketWithOptionsProcessor:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.AsyncContextImpl$RunnableWrapper:void run()",
            "org.apache.catalina.core.AsyncContextImpl:void doInternalDispatch()",
            "org.apache.catalina.core.StandardThreadExecutor:void execute(java.lang.Runnable)",
            "org.apache.coyote.AsyncStateMachine:void asyncRun(java.lang.Runnable)",
            "org.apache.tomcat.util.net.AprEndpoint:boolean processSocketWithOptions(long)",
            "org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller:boolean events()",
            "org.apache.tomcat.util.net.NioEndpoint$Poller:boolean events()",
            "org.apache.tomcat.util.net.SecureNioChannel:javax.net.ssl.SSLEngineResult$HandshakeStatus tasks()",
            "org.apache.tomcat.util.threads.ThreadPoolExecutor:void execute(java.lang.Runnable,long,java.util.concurrent.TimeUnit)"
        ]
    },
    "org.apache.tomcat.util.net.AprEndpoint$SocketEventProcessor:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.AsyncContextImpl$RunnableWrapper:void run()",
            "org.apache.catalina.core.AsyncContextImpl:void doInternalDispatch()",
            "org.apache.catalina.core.StandardThreadExecutor:void execute(java.lang.Runnable)",
            "org.apache.coyote.AsyncStateMachine:void asyncRun(java.lang.Runnable)",
            "org.apache.tomcat.util.net.AprEndpoint:boolean processSocket(long,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller:boolean events()",
            "org.apache.tomcat.util.net.NioEndpoint$Poller:boolean events()",
            "org.apache.tomcat.util.net.SecureNioChannel:javax.net.ssl.SSLEngineResult$HandshakeStatus tasks()",
            "org.apache.tomcat.util.threads.ThreadPoolExecutor:void execute(java.lang.Runnable,long,java.util.concurrent.TimeUnit)"
        ]
    },
    "org.apache.catalina.core.ContainerBase:void backgroundProcess()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor:void processChildren(org.apache.catalina.Container,java.lang.ClassLoader)",
            "org.apache.catalina.core.StandardWrapper:void backgroundProcess()"
        ]
    },
    "org.apache.catalina.core.StandardContext:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.core.StandardContext:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.core.StandardServer:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.core.StandardServer:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.deploy.NamingResources:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.deploy.NamingResources:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.util.LifecycleBase:void stop()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Connector:void stopInternal()",
            "org.apache.catalina.core.ContainerBase:void setLoader(org.apache.catalina.Loader)",
            "org.apache.catalina.core.ContainerBase:void setManager(org.apache.catalina.Manager)",
            "org.apache.catalina.core.ContainerBase:void setCluster(org.apache.catalina.Cluster)",
            "org.apache.catalina.core.ContainerBase:void setRealm(org.apache.catalina.Realm)",
            "org.apache.catalina.core.ContainerBase:void removeChild(org.apache.catalina.Container)",
            "org.apache.catalina.core.ContainerBase:void stopInternal()",
            "org.apache.catalina.core.StandardContext$4:java.lang.Void call()",
            "org.apache.catalina.core.StandardContext:void setNamingResources(org.apache.catalina.deploy.NamingResources)",
            "org.apache.catalina.core.StandardContext:void reload()",
            "org.apache.catalina.core.StandardContext:boolean resourcesStop()",
            "org.apache.catalina.core.StandardContext:void stopInternal()",
            "org.apache.catalina.core.StandardPipeline:void stopInternal()",
            "org.apache.catalina.core.StandardPipeline:void setBasic(org.apache.catalina.Valve)",
            "org.apache.catalina.core.StandardPipeline:void removeValve(org.apache.catalina.Valve)",
            "org.apache.catalina.core.StandardServer:void removeService(org.apache.catalina.Service)",
            "org.apache.catalina.core.StandardServer:void stopInternal()",
            "org.apache.catalina.core.StandardService:void setContainer(org.apache.catalina.Container)",
            "org.apache.catalina.core.StandardService:void removeConnector(org.apache.catalina.connector.Connector)",
            "org.apache.catalina.core.StandardService:void removeExecutor(org.apache.catalina.Executor)",
            "org.apache.catalina.core.StandardService:void stopInternal()",
            "org.apache.catalina.manager.host.HostManagerServlet:void stop(java.io.PrintWriter,java.lang.String,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.ManagerServlet:void stop(java.io.PrintWriter,org.apache.catalina.util.ContextName,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.ManagerServlet:void undeploy(java.io.PrintWriter,org.apache.catalina.util.ContextName,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.realm.CombinedRealm:void stopInternal()",
            "org.apache.catalina.session.PersistentManagerBase:void stopInternal()",
            "org.apache.catalina.startup.Catalina:void stopServer(java.lang.String[])",
            "org.apache.catalina.startup.Catalina:void stop()",
            "org.apache.catalina.startup.Embedded:void removeEngine(org.apache.catalina.Engine)",
            "org.apache.catalina.startup.Embedded:void stopInternal()",
            "org.apache.catalina.startup.HostConfig:void checkResources(org.apache.catalina.startup.HostConfig$DeployedApplication)",
            "org.apache.catalina.startup.Tomcat:void stop()",
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.util.LifecycleBase:void setStateInternal(org.apache.catalina.LifecycleState,java.lang.Object,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void init()",
            "org.apache.catalina.util.LifecycleBase:void start()",
            "org.apache.catalina.util.LifecycleBase:void stop()",
            "org.apache.catalina.util.LifecycleBase:void destroy()",
            "org.apache.catalina.util.LifecycleBase:void setState(org.apache.catalina.LifecycleState)",
            "org.apache.catalina.util.LifecycleBase:void setState(org.apache.catalina.LifecycleState,java.lang.Object)"
        ]
    },
    "org.apache.catalina.authenticator.FormAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.Request:boolean authenticate(javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher$PrivilegedForward:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void forward(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.tomcat.util.net.AprEndpoint:boolean processSocketWithOptions(long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.net.AprEndpoint$Acceptor:void run()"
        ]
    },
    "org.apache.tomcat.util.net.AprEndpoint:boolean processSocket(long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.net.AprEndpoint$Poller:void run()"
        ]
    },
    "org.apache.tomcat.util.net.AprEndpoint:boolean processSocket(long,org.apache.tomcat.util.net.SocketStatus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.net.AprEndpoint$Poller:void destroy()",
            "org.apache.tomcat.util.net.AprEndpoint$Poller:void add(long)",
            "org.apache.tomcat.util.net.AprEndpoint$Poller:void run()"
        ]
    },
    "org.apache.tomcat.util.net.AprEndpoint:boolean processSocketAsync(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.ajp.AjpAprProcessor:void actionInternal(org.apache.coyote.ActionCode,java.lang.Object)",
            "org.apache.coyote.http11.Http11AprProcessor:void actionInternal(org.apache.coyote.ActionCode,java.lang.Object)",
            "org.apache.tomcat.util.net.AprEndpoint$AsyncTimeout:void run()"
        ]
    },
    "org.apache.tomcat.util.net.JIoEndpoint:boolean processSocket(java.net.Socket)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.net.JIoEndpoint$Acceptor:void run()"
        ]
    },
    "org.apache.tomcat.util.net.JIoEndpoint:boolean processSocketAsync(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.ajp.AjpProcessor:void actionInternal(org.apache.coyote.ActionCode,java.lang.Object)",
            "org.apache.coyote.http11.Http11Processor:void actionInternal(org.apache.coyote.ActionCode,java.lang.Object)",
            "org.apache.tomcat.util.net.JIoEndpoint$AsyncTimeout:void run()"
        ]
    },
    "org.apache.tomcat.util.net.NioEndpoint:boolean processSocket(org.apache.tomcat.util.net.NioChannel,org.apache.tomcat.util.net.SocketStatus,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.Http11NioProcessor:void actionInternal(org.apache.coyote.ActionCode,java.lang.Object)",
            "org.apache.tomcat.util.net.NioEndpoint$Poller:void cancelledKey(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.SocketStatus,boolean)",
            "org.apache.tomcat.util.net.NioEndpoint$Poller:boolean processKey(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.NioEndpoint$KeyAttachment)",
            "org.apache.tomcat.util.net.NioEndpoint$Poller:void timeout(int,boolean)"
        ]
    },
    "org.apache.coyote.ajp.AbstractAjpProcessor:void action(org.apache.coyote.ActionCode,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.Request:void action(org.apache.coyote.ActionCode,java.lang.Object)",
            "org.apache.coyote.Response:void action(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.coyote.http11.AbstractHttp11Processor:void action(org.apache.coyote.ActionCode,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.Request:void action(org.apache.coyote.ActionCode,java.lang.Object)",
            "org.apache.coyote.Response:void action(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.AsyncContextImpl$RunnableWrapper:void run()",
            "org.apache.catalina.core.AsyncContextImpl:void doInternalDispatch()",
            "org.apache.catalina.core.ContainerBase:void threadStart()",
            "org.apache.catalina.core.StandardThreadExecutor:void execute(java.lang.Runnable)",
            "org.apache.coyote.AsyncStateMachine:void asyncRun(java.lang.Runnable)",
            "org.apache.tomcat.util.http.fileupload.FileCleaningTracker:void addTracker(java.lang.String,java.lang.Object,org.apache.tomcat.util.http.fileupload.FileDeleteStrategy)",
            "org.apache.tomcat.util.net.AprEndpoint:void startInternal()",
            "org.apache.tomcat.util.net.JIoEndpoint:void startInternal()",
            "org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller:boolean events()",
            "org.apache.tomcat.util.net.NioBlockingSelector:void open(java.nio.channels.Selector)",
            "org.apache.tomcat.util.net.NioEndpoint$Poller:boolean events()",
            "org.apache.tomcat.util.net.NioEndpoint:void startInternal()",
            "org.apache.tomcat.util.net.SecureNioChannel:javax.net.ssl.SSLEngineResult$HandshakeStatus tasks()",
            "org.apache.tomcat.util.threads.ThreadPoolExecutor:void execute(java.lang.Runnable,long,java.util.concurrent.TimeUnit)"
        ]
    },
    "org.apache.tomcat.util.net.NioEndpoint$Poller:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.AsyncContextImpl$RunnableWrapper:void run()",
            "org.apache.catalina.core.AsyncContextImpl:void doInternalDispatch()",
            "org.apache.catalina.core.StandardThreadExecutor:void execute(java.lang.Runnable)",
            "org.apache.coyote.AsyncStateMachine:void asyncRun(java.lang.Runnable)",
            "org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller:boolean events()",
            "org.apache.tomcat.util.net.NioEndpoint$Poller:boolean events()",
            "org.apache.tomcat.util.net.SecureNioChannel:javax.net.ssl.SSLEngineResult$HandshakeStatus tasks()",
            "org.apache.tomcat.util.threads.ThreadPoolExecutor:void execute(java.lang.Runnable,long,java.util.concurrent.TimeUnit)"
        ]
    },
    "org.apache.tomcat.util.net.SecureNioChannel:int handshake(boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.net.NioEndpoint$SocketProcessor:void run()",
            "org.apache.tomcat.util.net.SecureNioChannel:void rehandshake(long)"
        ]
    },
    "org.apache.tomcat.util.net.SecureNioChannel:javax.net.ssl.SSLEngineResult handshakeUnwrap(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.net.SecureNioChannel:int handshake(boolean,boolean)"
        ]
    },
    "org.apache.tomcat.util.net.SecureNioChannel:int read(java.nio.ByteBuffer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.InternalNioInputBuffer:int readSocket(boolean,boolean)",
            "org.apache.tomcat.util.net.NioBlockingSelector:int read(java.nio.ByteBuffer,org.apache.tomcat.util.net.NioChannel,long)",
            "org.apache.tomcat.util.net.NioSelectorPool:int read(java.nio.ByteBuffer,org.apache.tomcat.util.net.NioChannel,java.nio.channels.Selector,long,boolean)"
        ]
    },
    "org.apache.tomcat.util.net.SecureNioChannel:int write(java.nio.ByteBuffer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.net.NioBlockingSelector:int write(java.nio.ByteBuffer,org.apache.tomcat.util.net.NioChannel,long,org.apache.tomcat.util.MutableInteger)",
            "org.apache.tomcat.util.net.NioSelectorPool:int write(java.nio.ByteBuffer,org.apache.tomcat.util.net.NioChannel,java.nio.channels.Selector,long,boolean,org.apache.tomcat.util.MutableInteger)"
        ]
    },
    "org.apache.catalina.core.StandardThreadExecutor:void execute(java.lang.Runnable,long,java.util.concurrent.TimeUnit)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.tomcat.util.threads.ThreadPoolExecutor:void execute(java.lang.Runnable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardThreadExecutor:void execute(java.lang.Runnable)",
            "org.apache.coyote.AsyncStateMachine:void asyncRun(java.lang.Runnable)",
            "org.apache.tomcat.util.net.AprEndpoint$SocketProcessor:void run()",
            "org.apache.tomcat.util.net.AprEndpoint$SocketWithOptionsProcessor:void run()",
            "org.apache.tomcat.util.net.AprEndpoint:boolean processSocketWithOptions(long)",
            "org.apache.tomcat.util.net.AprEndpoint:boolean processSocket(long)",
            "org.apache.tomcat.util.net.AprEndpoint:boolean processSocket(long,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.tomcat.util.net.AprEndpoint:boolean processSocketAsync(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor:void run()",
            "org.apache.tomcat.util.net.JIoEndpoint:boolean processSocket(java.net.Socket)",
            "org.apache.tomcat.util.net.JIoEndpoint:boolean processSocketAsync(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.tomcat.util.net.NioEndpoint$SocketProcessor:void run()",
            "org.apache.tomcat.util.net.NioEndpoint:boolean processSocket(org.apache.tomcat.util.net.NioChannel,org.apache.tomcat.util.net.SocketStatus,boolean)"
        ]
    },
    "org.apache.catalina.manager.HTMLManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.HTMLManagerServlet:void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.ssi.SSIInclude:long process(org.apache.catalina.ssi.SSIMediator,java.lang.String,java.lang.String[],java.lang.String[],java.io.PrintWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIExec:long process(org.apache.catalina.ssi.SSIMediator,java.lang.String,java.lang.String[],java.lang.String[],java.io.PrintWriter)",
            "org.apache.catalina.ssi.SSIProcessor:long process(java.io.Reader,long,java.io.PrintWriter)"
        ]
    },
    "org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor:void processChildren(org.apache.catalina.Container,java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor:void run()",
            "org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor:void processChildren(org.apache.catalina.Container,java.lang.ClassLoader)"
        ]
    },
    "org.apache.catalina.core.StandardWrapper:void backgroundProcess()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor:void processChildren(org.apache.catalina.Container,java.lang.ClassLoader)"
        ]
    },
    "org.apache.catalina.util.LifecycleBase:void start()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Connector:void startInternal()",
            "org.apache.catalina.core.ContainerBase:void setLoader(org.apache.catalina.Loader)",
            "org.apache.catalina.core.ContainerBase:void setManager(org.apache.catalina.Manager)",
            "org.apache.catalina.core.ContainerBase:void setCluster(org.apache.catalina.Cluster)",
            "org.apache.catalina.core.ContainerBase:void setRealm(org.apache.catalina.Realm)",
            "org.apache.catalina.core.ContainerBase:void addChildInternal(org.apache.catalina.Container)",
            "org.apache.catalina.core.ContainerBase:void startInternal()",
            "org.apache.catalina.core.StandardContext:void setNamingResources(org.apache.catalina.deploy.NamingResources)",
            "org.apache.catalina.core.StandardContext:void reload()",
            "org.apache.catalina.core.StandardContext:void startInternal()",
            "org.apache.catalina.core.StandardContext:void startRecursive()",
            "org.apache.catalina.core.StandardPipeline:void startInternal()",
            "org.apache.catalina.core.StandardPipeline:void setBasic(org.apache.catalina.Valve)",
            "org.apache.catalina.core.StandardPipeline:void addValve(org.apache.catalina.Valve)",
            "org.apache.catalina.core.StandardServer:void addService(org.apache.catalina.Service)",
            "org.apache.catalina.core.StandardServer:void startInternal()",
            "org.apache.catalina.core.StandardService:void setContainer(org.apache.catalina.Container)",
            "org.apache.catalina.core.StandardService:void addConnector(org.apache.catalina.connector.Connector)",
            "org.apache.catalina.core.StandardService:void addExecutor(org.apache.catalina.Executor)",
            "org.apache.catalina.core.StandardService:void startInternal()",
            "org.apache.catalina.manager.host.HostManagerServlet:void start(java.io.PrintWriter,java.lang.String,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.ManagerServlet:void start(java.io.PrintWriter,org.apache.catalina.util.ContextName,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.realm.CombinedRealm:void startInternal()",
            "org.apache.catalina.session.PersistentManagerBase:void startInternal()",
            "org.apache.catalina.startup.Catalina:void start()",
            "org.apache.catalina.startup.Embedded:void addEngine(org.apache.catalina.Engine)",
            "org.apache.catalina.startup.Embedded:void startInternal()",
            "org.apache.catalina.startup.HostConfig:void checkResources(org.apache.catalina.startup.HostConfig$DeployedApplication)",
            "org.apache.catalina.startup.Tomcat:void start()"
        ]
    },
    "org.apache.catalina.connector.Connector:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.core.ContainerBase:void setLoader(org.apache.catalina.Loader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:void setLoader(org.apache.catalina.Loader)",
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createWebappLoader(java.lang.String)",
            "org.apache.catalina.mbeans.MBeanFactory:void removeLoader(java.lang.String)"
        ]
    },
    "org.apache.catalina.core.ContainerBase:void setManager(org.apache.catalina.Manager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:void startInternal()",
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createStandardManager(java.lang.String)",
            "org.apache.catalina.mbeans.MBeanFactory:void removeManager(java.lang.String)",
            "org.apache.catalina.startup.Tomcat:void initWebappDefaults(org.apache.catalina.Context)"
        ]
    },
    "org.apache.catalina.core.ContainerBase:void setCluster(org.apache.catalina.Cluster)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.ContainerBase:void setRealm(org.apache.catalina.Realm)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardEngine:org.apache.catalina.Realm getRealm()",
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createDataSourceRealm(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createJDBCRealm(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createJNDIRealm(java.lang.String)",
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createMemoryRealm(java.lang.String)",
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createUserDatabaseRealm(java.lang.String,java.lang.String)",
            "org.apache.catalina.mbeans.MBeanFactory:void removeRealm(java.lang.String)",
            "org.apache.catalina.startup.Embedded:org.apache.catalina.Engine createEngine()",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Context addWebapp(org.apache.catalina.Host,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.core.ContainerBase:void removeChild(org.apache.catalina.Container)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ContainerBase:void destroyInternal()",
            "org.apache.catalina.core.StandardContext:void removeChild(org.apache.catalina.Container)",
            "org.apache.catalina.manager.host.HostManagerServlet:void remove(java.io.PrintWriter,java.lang.String,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.mbeans.ContainerMBean:void removeChild(java.lang.String)",
            "org.apache.catalina.mbeans.MBeanFactory:void removeContext(java.lang.String)",
            "org.apache.catalina.mbeans.MBeanFactory:void removeHost(java.lang.String)",
            "org.apache.catalina.startup.Embedded:void removeContext(org.apache.catalina.Context)",
            "org.apache.catalina.startup.Embedded:void removeHost(org.apache.catalina.Host)",
            "org.apache.catalina.startup.HostConfig:void checkResources(org.apache.catalina.startup.HostConfig$DeployedApplication)",
            "org.apache.catalina.startup.HostConfig:void unmanageApp(java.lang.String)"
        ]
    },
    "org.apache.catalina.core.ContainerBase:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardWrapper:void stopInternal()",
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.core.StandardContext$4:java.lang.Void call()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext$4:java.lang.Object call()"
        ]
    },
    "org.apache.catalina.core.StandardContext:void setNamingResources(org.apache.catalina.deploy.NamingResources)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:org.apache.catalina.deploy.NamingResources getNamingResources()"
        ]
    },
    "org.apache.catalina.core.StandardContext:void reload()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.loader.WebappLoader:void backgroundProcess()",
            "org.apache.catalina.manager.ManagerServlet:void reload(java.io.PrintWriter,org.apache.catalina.util.ContextName,org.apache.tomcat.util.res.StringManager)"
        ]
    },
    "org.apache.catalina.core.StandardContext:boolean resourcesStop()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:void stopInternal()"
        ]
    },
    "org.apache.catalina.core.StandardPipeline:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.core.StandardPipeline:void setBasic(org.apache.catalina.Valve)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:void <init>()",
            "org.apache.catalina.core.StandardEngine:void <init>()",
            "org.apache.catalina.core.StandardHost:void <init>()",
            "org.apache.catalina.core.StandardWrapper:void <init>()"
        ]
    },
    "org.apache.catalina.core.StandardPipeline:void removeValve(org.apache.catalina.Valve)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardPipeline:void destroyInternal()",
            "org.apache.catalina.mbeans.ContainerMBean:void removeValve(java.lang.String)",
            "org.apache.catalina.mbeans.MBeanFactory:void removeValve(java.lang.String)"
        ]
    },
    "org.apache.catalina.core.StandardServer:void removeService(org.apache.catalina.Service)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.MBeanFactory:void removeService(java.lang.String)"
        ]
    },
    "org.apache.catalina.core.StandardService:void setContainer(org.apache.catalina.Container)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createStandardServiceEngine(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Engine getEngine()"
        ]
    },
    "org.apache.catalina.core.StandardService:void removeConnector(org.apache.catalina.connector.Connector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Connector:void destroyInternal()",
            "org.apache.catalina.mbeans.MBeanFactory:void removeConnector(java.lang.String)",
            "org.apache.catalina.startup.Embedded:void removeEngine(org.apache.catalina.Engine)"
        ]
    },
    "org.apache.catalina.core.StandardService:void removeExecutor(org.apache.catalina.Executor)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardService:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.manager.host.HostManagerServlet:void stop(java.io.PrintWriter,java.lang.String,org.apache.tomcat.util.res.StringManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.host.HTMLHostManagerServlet:java.lang.String stop(java.lang.String,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.host.HostManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.manager.ManagerServlet:void stop(java.io.PrintWriter,org.apache.catalina.util.ContextName,org.apache.tomcat.util.res.StringManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.HTMLManagerServlet:java.lang.String stop(org.apache.catalina.util.ContextName,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.ManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.manager.ManagerServlet:void undeploy(java.io.PrintWriter,org.apache.catalina.util.ContextName,org.apache.tomcat.util.res.StringManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.HTMLManagerServlet:java.lang.String undeploy(org.apache.catalina.util.ContextName,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.ManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.ManagerServlet:void deploy(java.io.PrintWriter,org.apache.catalina.util.ContextName,java.lang.String,boolean,javax.servlet.http.HttpServletRequest,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.ManagerServlet:void deploy(java.io.PrintWriter,org.apache.catalina.util.ContextName,java.lang.String,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.ManagerServlet:void deploy(java.io.PrintWriter,java.lang.String,org.apache.catalina.util.ContextName,java.lang.String,boolean,org.apache.tomcat.util.res.StringManager)"
        ]
    },
    "org.apache.catalina.realm.CombinedRealm:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.session.PersistentManagerBase:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.startup.Catalina:void stopServer(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Catalina:void stopServer()"
        ]
    },
    "org.apache.catalina.startup.Catalina:void stop()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Catalina$CatalinaShutdownHook:void run()",
            "org.apache.catalina.startup.Catalina:void start()"
        ]
    },
    "org.apache.catalina.startup.Embedded:void removeEngine(org.apache.catalina.Engine)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.Embedded:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.startup.HostConfig:void checkResources(org.apache.catalina.startup.HostConfig$DeployedApplication)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.HostConfig:void check()",
            "org.apache.catalina.startup.HostConfig:void check(java.lang.String)"
        ]
    },
    "org.apache.catalina.startup.Tomcat:void stop()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.util.LifecycleBase:void init()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Connector:void initInternal()",
            "org.apache.catalina.core.StandardContext:void setNamingResources(org.apache.catalina.deploy.NamingResources)",
            "org.apache.catalina.core.StandardContext:void initInternal()",
            "org.apache.catalina.core.StandardServer:void initInternal()",
            "org.apache.catalina.core.StandardService:void initInternal()",
            "org.apache.catalina.mbeans.ContainerMBean:void addChild(java.lang.String,java.lang.String)",
            "org.apache.catalina.startup.Catalina:void load()",
            "org.apache.catalina.startup.Tomcat:void init()",
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.util.LifecycleBase:void destroy()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Connector:void destroyInternal()",
            "org.apache.catalina.core.ContainerBase:void removeChild(org.apache.catalina.Container)",
            "org.apache.catalina.core.ContainerBase:void destroyInternal()",
            "org.apache.catalina.core.StandardContext:void setNamingResources(org.apache.catalina.deploy.NamingResources)",
            "org.apache.catalina.core.StandardContext:void destroyInternal()",
            "org.apache.catalina.core.StandardPipeline:void removeValve(org.apache.catalina.Valve)",
            "org.apache.catalina.core.StandardServer:void destroyInternal()",
            "org.apache.catalina.core.StandardService:void destroyInternal()",
            "org.apache.catalina.manager.host.HostManagerServlet:void remove(java.io.PrintWriter,java.lang.String,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.mbeans.MBeanFactory:void removeConnector(java.lang.String)",
            "org.apache.catalina.mbeans.MBeanFactory:void removeContext(java.lang.String)",
            "org.apache.catalina.startup.Tomcat:void destroy()",
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.util.LifecycleBase:void setState(org.apache.catalina.LifecycleState)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Connector:void startInternal()",
            "org.apache.catalina.connector.Connector:void stopInternal()",
            "org.apache.catalina.connector.MapperListener:void startInternal()",
            "org.apache.catalina.connector.MapperListener:void stopInternal()",
            "org.apache.catalina.core.ContainerBase:void startInternal()",
            "org.apache.catalina.core.ContainerBase:void stopInternal()",
            "org.apache.catalina.core.StandardContext:void startInternal()",
            "org.apache.catalina.core.StandardContext:void stopInternal()",
            "org.apache.catalina.core.StandardPipeline:void startInternal()",
            "org.apache.catalina.core.StandardPipeline:void stopInternal()",
            "org.apache.catalina.core.StandardServer:void startInternal()",
            "org.apache.catalina.core.StandardServer:void stopInternal()",
            "org.apache.catalina.core.StandardService:void startInternal()",
            "org.apache.catalina.core.StandardService:void stopInternal()",
            "org.apache.catalina.core.StandardThreadExecutor:void startInternal()",
            "org.apache.catalina.core.StandardThreadExecutor:void stopInternal()",
            "org.apache.catalina.deploy.NamingResources:void startInternal()",
            "org.apache.catalina.deploy.NamingResources:void stopInternal()",
            "org.apache.catalina.loader.WebappLoader:void startInternal()",
            "org.apache.catalina.loader.WebappLoader:void stopInternal()",
            "org.apache.catalina.realm.RealmBase:void startInternal()",
            "org.apache.catalina.realm.RealmBase:void stopInternal()",
            "org.apache.catalina.session.PersistentManagerBase:void startInternal()",
            "org.apache.catalina.session.PersistentManagerBase:void stopInternal()",
            "org.apache.catalina.session.StandardManager:void startInternal()",
            "org.apache.catalina.session.StandardManager:void stopInternal()",
            "org.apache.catalina.session.StoreBase:void startInternal()",
            "org.apache.catalina.session.StoreBase:void stopInternal()",
            "org.apache.catalina.startup.Embedded:void startInternal()",
            "org.apache.catalina.startup.Embedded:void stopInternal()",
            "org.apache.catalina.valves.AccessLogValve:void startInternal()",
            "org.apache.catalina.valves.AccessLogValve:void stopInternal()",
            "org.apache.catalina.valves.CometConnectionManagerValve:void startInternal()",
            "org.apache.catalina.valves.CometConnectionManagerValve:void stopInternal()",
            "org.apache.catalina.valves.JDBCAccessLogValve:void startInternal()",
            "org.apache.catalina.valves.JDBCAccessLogValve:void stopInternal()",
            "org.apache.catalina.valves.SemaphoreValve:void startInternal()",
            "org.apache.catalina.valves.SemaphoreValve:void stopInternal()",
            "org.apache.catalina.valves.ValveBase:void startInternal()",
            "org.apache.catalina.valves.ValveBase:void stopInternal()"
        ]
    },
    "org.apache.catalina.util.LifecycleBase:void setState(org.apache.catalina.LifecycleState,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.connector.Request:boolean authenticate(javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:boolean authenticate(javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.tomcat.util.net.AprEndpoint$Acceptor:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.AsyncContextImpl$RunnableWrapper:void run()",
            "org.apache.catalina.core.AsyncContextImpl:void doInternalDispatch()",
            "org.apache.catalina.core.ContainerBase:void threadStart()",
            "org.apache.catalina.core.StandardThreadExecutor:void execute(java.lang.Runnable)",
            "org.apache.coyote.AsyncStateMachine:void asyncRun(java.lang.Runnable)",
            "org.apache.tomcat.util.http.fileupload.FileCleaningTracker:void addTracker(java.lang.String,java.lang.Object,org.apache.tomcat.util.http.fileupload.FileDeleteStrategy)",
            "org.apache.tomcat.util.net.AprEndpoint:void startInternal()",
            "org.apache.tomcat.util.net.JIoEndpoint:void startInternal()",
            "org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller:boolean events()",
            "org.apache.tomcat.util.net.NioEndpoint$Poller:boolean events()",
            "org.apache.tomcat.util.net.NioEndpoint:void startInternal()",
            "org.apache.tomcat.util.net.SecureNioChannel:javax.net.ssl.SSLEngineResult$HandshakeStatus tasks()",
            "org.apache.tomcat.util.threads.ThreadPoolExecutor:void execute(java.lang.Runnable,long,java.util.concurrent.TimeUnit)"
        ]
    },
    "org.apache.tomcat.util.net.AprEndpoint$Poller:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.AsyncContextImpl$RunnableWrapper:void run()",
            "org.apache.catalina.core.AsyncContextImpl:void doInternalDispatch()",
            "org.apache.catalina.core.ContainerBase:void threadStart()",
            "org.apache.catalina.core.StandardThreadExecutor:void execute(java.lang.Runnable)",
            "org.apache.coyote.AsyncStateMachine:void asyncRun(java.lang.Runnable)",
            "org.apache.tomcat.util.http.fileupload.FileCleaningTracker:void addTracker(java.lang.String,java.lang.Object,org.apache.tomcat.util.http.fileupload.FileDeleteStrategy)",
            "org.apache.tomcat.util.net.AprEndpoint:void startInternal()",
            "org.apache.tomcat.util.net.JIoEndpoint:void startInternal()",
            "org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller:boolean events()",
            "org.apache.tomcat.util.net.NioEndpoint$Poller:boolean events()",
            "org.apache.tomcat.util.net.NioEndpoint:void startInternal()",
            "org.apache.tomcat.util.net.SecureNioChannel:javax.net.ssl.SSLEngineResult$HandshakeStatus tasks()",
            "org.apache.tomcat.util.threads.ThreadPoolExecutor:void execute(java.lang.Runnable,long,java.util.concurrent.TimeUnit)"
        ]
    },
    "org.apache.tomcat.util.net.AprEndpoint$Poller:void destroy()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.net.AprEndpoint$Poller:void run()",
            "org.apache.tomcat.util.net.AprEndpoint:void stopInternal()"
        ]
    },
    "org.apache.tomcat.util.net.AprEndpoint$Poller:void add(long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.ajp.AjpAprProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.coyote.ajp.AjpAprProtocol$AjpConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState asyncDispatch(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.coyote.http11.Http11AprProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.coyote.http11.Http11AprProtocol$Http11ConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState event(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.coyote.http11.Http11AprProtocol$Http11ConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.coyote.http11.Http11AprProtocol$Http11ConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState asyncDispatch(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.tomcat.util.net.AprEndpoint$Sendfile:void run()",
            "org.apache.tomcat.util.net.AprEndpoint$SocketWithOptionsProcessor:void run()"
        ]
    },
    "org.apache.coyote.ajp.AjpAprProcessor:void actionInternal(org.apache.coyote.ActionCode,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void action(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.coyote.http11.Http11AprProcessor:void actionInternal(org.apache.coyote.ActionCode,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.AbstractHttp11Processor:void action(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.tomcat.util.net.AprEndpoint$AsyncTimeout:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.AsyncContextImpl$RunnableWrapper:void run()",
            "org.apache.catalina.core.AsyncContextImpl:void doInternalDispatch()",
            "org.apache.catalina.core.StandardThreadExecutor:void execute(java.lang.Runnable)",
            "org.apache.coyote.AsyncStateMachine:void asyncRun(java.lang.Runnable)",
            "org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller:boolean events()",
            "org.apache.tomcat.util.net.NioEndpoint$Poller:boolean events()",
            "org.apache.tomcat.util.net.SecureNioChannel:javax.net.ssl.SSLEngineResult$HandshakeStatus tasks()",
            "org.apache.tomcat.util.threads.ThreadPoolExecutor:void execute(java.lang.Runnable,long,java.util.concurrent.TimeUnit)"
        ]
    },
    "org.apache.tomcat.util.net.JIoEndpoint$Acceptor:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.AsyncContextImpl$RunnableWrapper:void run()",
            "org.apache.catalina.core.AsyncContextImpl:void doInternalDispatch()",
            "org.apache.catalina.core.StandardThreadExecutor:void execute(java.lang.Runnable)",
            "org.apache.coyote.AsyncStateMachine:void asyncRun(java.lang.Runnable)",
            "org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller:boolean events()",
            "org.apache.tomcat.util.net.NioEndpoint$Poller:boolean events()",
            "org.apache.tomcat.util.net.SecureNioChannel:javax.net.ssl.SSLEngineResult$HandshakeStatus tasks()",
            "org.apache.tomcat.util.threads.ThreadPoolExecutor:void execute(java.lang.Runnable,long,java.util.concurrent.TimeUnit)"
        ]
    },
    "org.apache.coyote.ajp.AjpProcessor:void actionInternal(org.apache.coyote.ActionCode,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void action(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.coyote.http11.Http11Processor:void actionInternal(org.apache.coyote.ActionCode,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.AbstractHttp11Processor:void action(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.tomcat.util.net.JIoEndpoint$AsyncTimeout:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.AsyncContextImpl$RunnableWrapper:void run()",
            "org.apache.catalina.core.AsyncContextImpl:void doInternalDispatch()",
            "org.apache.catalina.core.StandardThreadExecutor:void execute(java.lang.Runnable)",
            "org.apache.coyote.AsyncStateMachine:void asyncRun(java.lang.Runnable)",
            "org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller:boolean events()",
            "org.apache.tomcat.util.net.NioEndpoint$Poller:boolean events()",
            "org.apache.tomcat.util.net.SecureNioChannel:javax.net.ssl.SSLEngineResult$HandshakeStatus tasks()",
            "org.apache.tomcat.util.threads.ThreadPoolExecutor:void execute(java.lang.Runnable,long,java.util.concurrent.TimeUnit)"
        ]
    },
    "org.apache.coyote.http11.Http11NioProcessor:void actionInternal(org.apache.coyote.ActionCode,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.AbstractHttp11Processor:void action(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.tomcat.util.net.NioEndpoint$Poller:void cancelledKey(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.SocketStatus,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.net.NioEndpoint$Poller:boolean processKey(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.NioEndpoint$KeyAttachment)",
            "org.apache.tomcat.util.net.NioEndpoint$Poller:boolean processSendfile(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.NioEndpoint$KeyAttachment,boolean,boolean)",
            "org.apache.tomcat.util.net.NioEndpoint$Poller:void timeout(int,boolean)",
            "org.apache.tomcat.util.net.NioEndpoint$PollerEvent:void run()",
            "org.apache.tomcat.util.net.NioEndpoint$SocketProcessor:void run()"
        ]
    },
    "org.apache.tomcat.util.net.NioEndpoint$Poller:boolean processKey(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.NioEndpoint$KeyAttachment)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.net.NioEndpoint$Poller:void run()",
            "org.apache.tomcat.util.net.NioEndpoint$Poller:void timeout(int,boolean)"
        ]
    },
    "org.apache.tomcat.util.net.NioEndpoint$Poller:void timeout(int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.net.NioEndpoint$Poller:void run()"
        ]
    },
    "org.apache.coyote.Request:void action(org.apache.coyote.ActionCode,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.FormAuthenticator:boolean restoreRequest(org.apache.catalina.connector.Request,org.apache.catalina.Session)",
            "org.apache.catalina.authenticator.SSLAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.connector.InputBuffer:int available()",
            "org.apache.catalina.connector.Request:java.lang.Object getAttribute(java.lang.String)",
            "org.apache.catalina.connector.Request:java.lang.String getRemoteAddr()",
            "org.apache.catalina.connector.Request:java.lang.String getRemoteHost()",
            "org.apache.catalina.connector.Request:int getRemotePort()",
            "org.apache.catalina.connector.Request:java.lang.String getLocalName()",
            "org.apache.catalina.connector.Request:java.lang.String getLocalAddr()",
            "org.apache.catalina.connector.Request:int getLocalPort()",
            "org.apache.catalina.connector.Request:boolean isAsyncDispatching()",
            "org.apache.catalina.connector.Request:boolean isAsync()",
            "org.apache.catalina.connector.Request:void checkSwallowInput()",
            "org.apache.catalina.connector.Request:void cometClose()",
            "org.apache.catalina.connector.Request:void setCometTimeout(long)",
            "org.apache.catalina.core.AsyncContextImpl$1:void run()",
            "org.apache.catalina.core.AsyncContextImpl:void complete()",
            "org.apache.catalina.core.AsyncContextImpl:boolean timeout()",
            "org.apache.catalina.core.AsyncContextImpl:void dispatch(javax.servlet.ServletContext,java.lang.String)",
            "org.apache.catalina.core.AsyncContextImpl:void start(java.lang.Runnable)",
            "org.apache.catalina.core.AsyncContextImpl:boolean isStarted()",
            "org.apache.catalina.core.AsyncContextImpl:void setStarted(org.apache.catalina.Context,javax.servlet.ServletRequest,javax.servlet.ServletResponse,boolean)",
            "org.apache.catalina.core.AsyncContextImpl:void setTimeout(long)",
            "org.apache.catalina.core.AsyncContextImpl:void setErrorState(java.lang.Throwable)",
            "org.apache.coyote.RequestInfo:java.lang.String getRemoteAddr()"
        ]
    },
    "org.apache.coyote.Response:void action(org.apache.coyote.ActionCode,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean event(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean postParseRequest(org.apache.coyote.Request,org.apache.catalina.connector.Request,org.apache.coyote.Response,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.OutputBuffer:void doFlush(boolean)",
            "org.apache.catalina.connector.Response:void finishResponse()",
            "org.apache.coyote.http11.AbstractOutputBuffer:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)",
            "org.apache.coyote.http11.AbstractOutputBuffer:void flush()",
            "org.apache.coyote.http11.AbstractOutputBuffer:void endRequest()",
            "org.apache.coyote.http11.InternalAprOutputBuffer:void endRequest()",
            "org.apache.coyote.Response:void reset()",
            "org.apache.coyote.Response:void finish()",
            "org.apache.coyote.Response:void acknowledge()",
            "org.apache.coyote.Response:void sendHeaders()",
            "org.apache.coyote.Response:long getBytesWritten(boolean)"
        ]
    },
    "org.apache.catalina.core.ContainerBase:void threadStart()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ContainerBase:void startInternal()",
            "org.apache.catalina.core.StandardContext:void startInternal()"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.FileCleaningTracker:void addTracker(java.lang.String,java.lang.Object,org.apache.tomcat.util.http.fileupload.FileDeleteStrategy)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.FileCleaningTracker:void track(java.io.File,java.lang.Object,org.apache.tomcat.util.http.fileupload.FileDeleteStrategy)",
            "org.apache.tomcat.util.http.fileupload.FileCleaningTracker:void track(java.lang.String,java.lang.Object,org.apache.tomcat.util.http.fileupload.FileDeleteStrategy)"
        ]
    },
    "org.apache.tomcat.util.net.AprEndpoint:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.net.AbstractEndpoint:void start()"
        ]
    },
    "org.apache.tomcat.util.net.JIoEndpoint:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.net.AbstractEndpoint:void start()"
        ]
    },
    "org.apache.tomcat.util.net.NioBlockingSelector:void open(java.nio.channels.Selector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.net.NioSelectorPool:void open()"
        ]
    },
    "org.apache.tomcat.util.net.NioEndpoint:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.net.AbstractEndpoint:void start()"
        ]
    },
    "org.apache.tomcat.util.net.SecureNioChannel:void rehandshake(long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.Http11NioProcessor:void actionInternal(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.coyote.http11.InternalNioInputBuffer:int readSocket(boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.InternalNioInputBuffer:int nbRead()",
            "org.apache.coyote.http11.InternalNioInputBuffer:boolean parseRequestLine(boolean)",
            "org.apache.coyote.http11.InternalNioInputBuffer:boolean fill(boolean,boolean)"
        ]
    },
    "org.apache.tomcat.util.net.NioBlockingSelector:int read(java.nio.ByteBuffer,org.apache.tomcat.util.net.NioChannel,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.net.NioSelectorPool:int read(java.nio.ByteBuffer,org.apache.tomcat.util.net.NioChannel,java.nio.channels.Selector,long,boolean)"
        ]
    },
    "org.apache.tomcat.util.net.NioSelectorPool:int read(java.nio.ByteBuffer,org.apache.tomcat.util.net.NioChannel,java.nio.channels.Selector,long,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.net.NioSelectorPool:int read(java.nio.ByteBuffer,org.apache.tomcat.util.net.NioChannel,java.nio.channels.Selector,long)"
        ]
    },
    "org.apache.tomcat.util.net.NioBlockingSelector:int write(java.nio.ByteBuffer,org.apache.tomcat.util.net.NioChannel,long,org.apache.tomcat.util.MutableInteger)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.net.NioSelectorPool:int write(java.nio.ByteBuffer,org.apache.tomcat.util.net.NioChannel,java.nio.channels.Selector,long,boolean,org.apache.tomcat.util.MutableInteger)"
        ]
    },
    "org.apache.tomcat.util.net.NioSelectorPool:int write(java.nio.ByteBuffer,org.apache.tomcat.util.net.NioChannel,java.nio.channels.Selector,long,boolean,org.apache.tomcat.util.MutableInteger)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.InternalNioOutputBuffer:int writeToSocket(java.nio.ByteBuffer,boolean,boolean)",
            "org.apache.tomcat.util.net.NioSelectorPool:int write(java.nio.ByteBuffer,org.apache.tomcat.util.net.NioChannel,java.nio.channels.Selector,long)",
            "org.apache.tomcat.util.net.SecureNioChannel:boolean flush(boolean,java.nio.channels.Selector,long,org.apache.tomcat.util.MutableInteger)"
        ]
    },
    "org.apache.catalina.manager.HTMLManagerServlet:void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.ssi.SSIExec:long process(org.apache.catalina.ssi.SSIMediator,java.lang.String,java.lang.String[],java.lang.String[],java.io.PrintWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIProcessor:long process(java.io.Reader,long,java.io.PrintWriter)"
        ]
    },
    "org.apache.catalina.ssi.SSIProcessor:long process(java.io.Reader,long,java.io.PrintWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.ssi.SSIServlet:void processSSI(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.net.URL)"
        ]
    },
    "org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.AsyncContextImpl$RunnableWrapper:void run()",
            "org.apache.catalina.core.AsyncContextImpl:void doInternalDispatch()",
            "org.apache.catalina.core.StandardThreadExecutor:void execute(java.lang.Runnable)",
            "org.apache.coyote.AsyncStateMachine:void asyncRun(java.lang.Runnable)",
            "org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller:boolean events()",
            "org.apache.tomcat.util.net.NioEndpoint$Poller:boolean events()",
            "org.apache.tomcat.util.net.SecureNioChannel:javax.net.ssl.SSLEngineResult$HandshakeStatus tasks()",
            "org.apache.tomcat.util.threads.ThreadPoolExecutor:void execute(java.lang.Runnable,long,java.util.concurrent.TimeUnit)"
        ]
    },
    "org.apache.catalina.connector.Connector:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.core.ContainerBase:void addChildInternal(org.apache.catalina.Container)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ContainerBase:void addChild(org.apache.catalina.Container)",
            "org.apache.catalina.core.ContainerBase:void access$000(org.apache.catalina.core.ContainerBase,org.apache.catalina.Container)"
        ]
    },
    "org.apache.catalina.core.ContainerBase:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardEngine:void startInternal()",
            "org.apache.catalina.core.StandardHost:void startInternal()",
            "org.apache.catalina.core.StandardWrapper:void startInternal()"
        ]
    },
    "org.apache.catalina.core.StandardContext:void startRecursive()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardPipeline:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.core.StandardPipeline:void addValve(org.apache.catalina.Valve)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ContainerBase:void addValve(org.apache.catalina.Valve)",
            "org.apache.catalina.core.StandardHost:void startInternal()",
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createAccessLoggerValve(java.lang.String)",
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createRemoteAddrValve(java.lang.String)",
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createRemoteHostValve(java.lang.String)",
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createSingleSignOn(java.lang.String)",
            "org.apache.catalina.startup.ContextConfig:void authenticatorConfig()",
            "org.apache.catalina.startup.Tomcat$FixContextListener:void lifecycleEvent(org.apache.catalina.LifecycleEvent)"
        ]
    },
    "org.apache.catalina.core.StandardServer:void addService(org.apache.catalina.Service)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createStandardServiceEngine(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Server getServer()"
        ]
    },
    "org.apache.catalina.core.StandardService:void addConnector(org.apache.catalina.connector.Connector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createConnector(java.lang.String,java.lang.String,int,boolean,boolean)",
            "org.apache.catalina.mbeans.ServiceMBean:void addConnector(java.lang.String,int,boolean,boolean)",
            "org.apache.catalina.startup.Embedded:void addConnector(org.apache.catalina.connector.Connector)",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.connector.Connector getConnector()"
        ]
    },
    "org.apache.catalina.core.StandardService:void addExecutor(org.apache.catalina.Executor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.ServiceMBean:void addExecutor(java.lang.String)"
        ]
    },
    "org.apache.catalina.core.StandardService:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.manager.host.HostManagerServlet:void start(java.io.PrintWriter,java.lang.String,org.apache.tomcat.util.res.StringManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.host.HTMLHostManagerServlet:java.lang.String start(java.lang.String,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.host.HostManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.manager.ManagerServlet:void start(java.io.PrintWriter,org.apache.catalina.util.ContextName,org.apache.tomcat.util.res.StringManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.HTMLManagerServlet:java.lang.String start(org.apache.catalina.util.ContextName,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.ManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.realm.CombinedRealm:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.realm.LockOutRealm:void startInternal()",
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.session.PersistentManagerBase:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.startup.Catalina:void start()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.Embedded:void addEngine(org.apache.catalina.Engine)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.Embedded:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.startup.Tomcat:void start()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardContext:void setLoader(org.apache.catalina.Loader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:void startInternal()",
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createWebappLoader(java.lang.String)",
            "org.apache.catalina.mbeans.MBeanFactory:void removeLoader(java.lang.String)"
        ]
    },
    "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createWebappLoader(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanFactory:void removeLoader(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createStandardManager(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanFactory:void removeManager(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.Tomcat:void initWebappDefaults(org.apache.catalina.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Tomcat$DefaultWebXmlListener:void lifecycleEvent(org.apache.catalina.LifecycleEvent)",
            "org.apache.catalina.startup.Tomcat:void initWebappDefaults(java.lang.String)"
        ]
    },
    "org.apache.catalina.core.StandardEngine:org.apache.catalina.Realm getRealm()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:boolean reauthenticateFromSSO(java.lang.String,org.apache.catalina.connector.Request)",
            "org.apache.catalina.core.ContainerBase:org.apache.catalina.Realm getRealm()"
        ]
    },
    "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createDataSourceRealm(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createJDBCRealm(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createJNDIRealm(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createMemoryRealm(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createUserDatabaseRealm(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanFactory:void removeRealm(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.Embedded:org.apache.catalina.Engine createEngine()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.Tomcat:org.apache.catalina.Context addWebapp(org.apache.catalina.Host,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Context addWebapp(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.core.ContainerBase:void destroyInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:void destroyInternal()",
            "org.apache.catalina.util.LifecycleBase:void destroy()"
        ]
    },
    "org.apache.catalina.core.StandardContext:void removeChild(org.apache.catalina.Container)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ContainerBase:void destroyInternal()",
            "org.apache.catalina.core.StandardContext:void addChild(org.apache.catalina.Container)",
            "org.apache.catalina.mbeans.ContainerMBean:void removeChild(java.lang.String)",
            "org.apache.catalina.startup.ContextConfig:void configureStop()",
            "org.apache.catalina.startup.Embedded:void removeContext(org.apache.catalina.Context)",
            "org.apache.catalina.startup.Embedded:void removeHost(org.apache.catalina.Host)"
        ]
    },
    "org.apache.catalina.manager.host.HostManagerServlet:void remove(java.io.PrintWriter,java.lang.String,org.apache.tomcat.util.res.StringManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.host.HTMLHostManagerServlet:java.lang.String remove(java.lang.String,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.host.HostManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.mbeans.ContainerMBean:void removeChild(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanFactory:void removeContext(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanFactory:void removeHost(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.Embedded:void removeContext(org.apache.catalina.Context)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.Embedded:void removeHost(org.apache.catalina.Host)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.HostConfig:void unmanageApp(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardWrapper:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.core.StandardContext$4:java.lang.Object call()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardContext:org.apache.catalina.deploy.NamingResources getNamingResources()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.NamingContextListener:void lifecycleEvent(org.apache.catalina.LifecycleEvent)",
            "org.apache.catalina.core.StandardContext:void startInternal()",
            "org.apache.catalina.deploy.WebXml:void configureContext(org.apache.catalina.Context)",
            "org.apache.catalina.startup.SetNextNamingRule:void end(java.lang.String,java.lang.String)",
            "org.apache.catalina.startup.WebAnnotationSet:void addResource(org.apache.catalina.Context,javax.'annotation'.Resource)"
        ]
    },
    "org.apache.catalina.loader.WebappLoader:void backgroundProcess()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ContainerBase:void backgroundProcess()"
        ]
    },
    "org.apache.catalina.manager.ManagerServlet:void reload(java.io.PrintWriter,org.apache.catalina.util.ContextName,org.apache.tomcat.util.res.StringManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.HTMLManagerServlet:java.lang.String reload(org.apache.catalina.util.ContextName,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.ManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.core.StandardContext:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createStandardContext(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)",
            "org.apache.catalina.startup.Embedded:org.apache.catalina.Context createContext(java.lang.String,java.lang.String)",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Context addContext(org.apache.catalina.Host,java.lang.String,java.lang.String)",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Context addWebapp(org.apache.catalina.Host,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.core.StandardEngine:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createStandardServiceEngine(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.catalina.startup.Embedded:org.apache.catalina.Engine createEngine()",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Engine getEngine()"
        ]
    },
    "org.apache.catalina.core.StandardHost:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.host.HostManagerServlet:void add(java.io.PrintWriter,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean,boolean,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createStandardHost(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)",
            "org.apache.catalina.startup.Embedded:org.apache.catalina.Host createHost(java.lang.String,java.lang.String)",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Host getHost()"
        ]
    },
    "org.apache.catalina.core.StandardWrapper:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:org.apache.catalina.Wrapper createWrapper()",
            "org.apache.catalina.startup.Tomcat$ExistingStandardWrapper:void <init>(javax.servlet.Servlet)"
        ]
    },
    "org.apache.catalina.core.StandardPipeline:void destroyInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void destroy()"
        ]
    },
    "org.apache.catalina.mbeans.ContainerMBean:void removeValve(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanFactory:void removeValve(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanFactory:void removeService(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createStandardServiceEngine(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.Tomcat:org.apache.catalina.Engine getEngine()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Host getHost()"
        ]
    },
    "org.apache.catalina.connector.Connector:void destroyInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void destroy()"
        ]
    },
    "org.apache.catalina.mbeans.MBeanFactory:void removeConnector(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.manager.host.HTMLHostManagerServlet:java.lang.String stop(java.lang.String,org.apache.tomcat.util.res.StringManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.host.HTMLHostManagerServlet:void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.manager.host.HostManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.manager.HTMLManagerServlet:java.lang.String stop(org.apache.catalina.util.ContextName,org.apache.tomcat.util.res.StringManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.HTMLManagerServlet:void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.manager.ManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.manager.HTMLManagerServlet:java.lang.String undeploy(org.apache.catalina.util.ContextName,org.apache.tomcat.util.res.StringManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.HTMLManagerServlet:void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.manager.ManagerServlet:void deploy(java.io.PrintWriter,org.apache.catalina.util.ContextName,java.lang.String,boolean,javax.servlet.http.HttpServletRequest,org.apache.tomcat.util.res.StringManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.ManagerServlet:void doPut(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.manager.ManagerServlet:void deploy(java.io.PrintWriter,org.apache.catalina.util.ContextName,java.lang.String,org.apache.tomcat.util.res.StringManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.ManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.manager.ManagerServlet:void deploy(java.io.PrintWriter,java.lang.String,org.apache.catalina.util.ContextName,java.lang.String,boolean,org.apache.tomcat.util.res.StringManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.HTMLManagerServlet:java.lang.String deployInternal(java.lang.String,org.apache.catalina.util.ContextName,java.lang.String,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.ManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.startup.Catalina:void stopServer()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.Catalina$CatalinaShutdownHook:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.AsyncContextImpl$RunnableWrapper:void run()",
            "org.apache.catalina.core.AsyncContextImpl:void doInternalDispatch()",
            "org.apache.catalina.core.ContainerBase:void threadStart()",
            "org.apache.catalina.core.StandardThreadExecutor:void execute(java.lang.Runnable)",
            "org.apache.coyote.AsyncStateMachine:void asyncRun(java.lang.Runnable)",
            "org.apache.tomcat.util.http.fileupload.FileCleaningTracker:void addTracker(java.lang.String,java.lang.Object,org.apache.tomcat.util.http.fileupload.FileDeleteStrategy)",
            "org.apache.tomcat.util.net.AprEndpoint:void startInternal()",
            "org.apache.tomcat.util.net.JIoEndpoint:void startInternal()",
            "org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller:boolean events()",
            "org.apache.tomcat.util.net.NioEndpoint$Poller:boolean events()",
            "org.apache.tomcat.util.net.NioEndpoint:void startInternal()",
            "org.apache.tomcat.util.net.SecureNioChannel:javax.net.ssl.SSLEngineResult$HandshakeStatus tasks()",
            "org.apache.tomcat.util.threads.ThreadPoolExecutor:void execute(java.lang.Runnable,long,java.util.concurrent.TimeUnit)"
        ]
    },
    "org.apache.catalina.startup.HostConfig:void check()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.HostConfig:void lifecycleEvent(org.apache.catalina.LifecycleEvent)"
        ]
    },
    "org.apache.catalina.startup.HostConfig:void check(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.connector.Connector:void initInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void init()"
        ]
    },
    "org.apache.catalina.core.StandardContext:void initInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void init()"
        ]
    },
    "org.apache.catalina.core.StandardServer:void initInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void init()"
        ]
    },
    "org.apache.catalina.core.StandardService:void initInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void init()"
        ]
    },
    "org.apache.catalina.mbeans.ContainerMBean:void addChild(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.Catalina:void load()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Catalina:void load(java.lang.String[])",
            "org.apache.catalina.startup.Catalina:void start()"
        ]
    },
    "org.apache.catalina.startup.Tomcat:void init()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardContext:void destroyInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void destroy()"
        ]
    },
    "org.apache.catalina.core.StandardServer:void destroyInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void destroy()"
        ]
    },
    "org.apache.catalina.core.StandardService:void destroyInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void destroy()"
        ]
    },
    "org.apache.catalina.startup.Tomcat:void destroy()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.connector.MapperListener:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.connector.MapperListener:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.core.StandardThreadExecutor:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.core.StandardThreadExecutor:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.loader.WebappLoader:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.loader.VirtualWebappLoader:void startInternal()",
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.loader.WebappLoader:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.realm.RealmBase:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.realm.CombinedRealm:void startInternal()",
            "org.apache.catalina.realm.DataSourceRealm:void startInternal()",
            "org.apache.catalina.realm.JAASRealm:void startInternal()",
            "org.apache.catalina.realm.JDBCRealm:void startInternal()",
            "org.apache.catalina.realm.JNDIRealm:void startInternal()",
            "org.apache.catalina.realm.MemoryRealm:void startInternal()",
            "org.apache.catalina.realm.UserDatabaseRealm:void startInternal()",
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.realm.RealmBase:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.realm.CombinedRealm:void stopInternal()",
            "org.apache.catalina.realm.JDBCRealm:void stopInternal()",
            "org.apache.catalina.realm.JNDIRealm:void stopInternal()",
            "org.apache.catalina.realm.UserDatabaseRealm:void stopInternal()",
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.session.StandardManager:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.session.StandardManager:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.session.StoreBase:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.JDBCStore:void startInternal()",
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.session.StoreBase:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.JDBCStore:void stopInternal()",
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.valves.AccessLogValve:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.valves.AccessLogValve:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.valves.CometConnectionManagerValve:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.valves.CometConnectionManagerValve:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.valves.JDBCAccessLogValve:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.valves.JDBCAccessLogValve:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.valves.SemaphoreValve:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.valves.SemaphoreValve:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.valves.ValveBase:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void startInternal()",
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.valves.ValveBase:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void stopInternal()",
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:boolean authenticate(javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.tomcat.util.net.AprEndpoint:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.net.AbstractEndpoint:void stop()"
        ]
    },
    "org.apache.tomcat.util.net.AprEndpoint$Sendfile:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.AsyncContextImpl$RunnableWrapper:void run()",
            "org.apache.catalina.core.AsyncContextImpl:void doInternalDispatch()",
            "org.apache.catalina.core.ContainerBase:void threadStart()",
            "org.apache.catalina.core.StandardThreadExecutor:void execute(java.lang.Runnable)",
            "org.apache.coyote.AsyncStateMachine:void asyncRun(java.lang.Runnable)",
            "org.apache.tomcat.util.http.fileupload.FileCleaningTracker:void addTracker(java.lang.String,java.lang.Object,org.apache.tomcat.util.http.fileupload.FileDeleteStrategy)",
            "org.apache.tomcat.util.net.AprEndpoint:void startInternal()",
            "org.apache.tomcat.util.net.JIoEndpoint:void startInternal()",
            "org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller:boolean events()",
            "org.apache.tomcat.util.net.NioEndpoint$Poller:boolean events()",
            "org.apache.tomcat.util.net.NioEndpoint:void startInternal()",
            "org.apache.tomcat.util.net.SecureNioChannel:javax.net.ssl.SSLEngineResult$HandshakeStatus tasks()",
            "org.apache.tomcat.util.threads.ThreadPoolExecutor:void execute(java.lang.Runnable,long,java.util.concurrent.TimeUnit)"
        ]
    },
    "org.apache.tomcat.util.net.NioEndpoint$Poller:boolean processSendfile(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.NioEndpoint$KeyAttachment,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.Http11NioProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.NioChannel)",
            "org.apache.tomcat.util.net.NioEndpoint$Poller:boolean processKey(java.nio.channels.SelectionKey,org.apache.tomcat.util.net.NioEndpoint$KeyAttachment)"
        ]
    },
    "org.apache.tomcat.util.net.NioEndpoint$PollerEvent:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.AsyncContextImpl$RunnableWrapper:void run()",
            "org.apache.catalina.core.AsyncContextImpl:void doInternalDispatch()",
            "org.apache.catalina.core.StandardThreadExecutor:void execute(java.lang.Runnable)",
            "org.apache.coyote.AsyncStateMachine:void asyncRun(java.lang.Runnable)",
            "org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller:boolean events()",
            "org.apache.tomcat.util.net.NioEndpoint$Poller:boolean events()",
            "org.apache.tomcat.util.net.SecureNioChannel:javax.net.ssl.SSLEngineResult$HandshakeStatus tasks()",
            "org.apache.tomcat.util.threads.ThreadPoolExecutor:void execute(java.lang.Runnable,long,java.util.concurrent.TimeUnit)"
        ]
    },
    "org.apache.catalina.authenticator.FormAuthenticator:boolean restoreRequest(org.apache.catalina.connector.Request,org.apache.catalina.Session)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.FormAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)"
        ]
    },
    "org.apache.catalina.authenticator.SSLAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.Request:boolean authenticate(javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.connector.InputBuffer:int available()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteInputStream$2:java.lang.Integer run()",
            "org.apache.catalina.connector.CoyoteInputStream:int available()",
            "org.apache.catalina.connector.InputBuffer:boolean ready()",
            "org.apache.catalina.connector.Request:boolean getAvailable()"
        ]
    },
    "org.apache.catalina.connector.Request:java.lang.Object getAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.SSLAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.connector.CometEventImpl:void setTimeout(int)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean event(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:void parseSessionSslId(org.apache.catalina.connector.Request)",
            "org.apache.catalina.connector.Request:java.util.Enumeration getAttributeNames()",
            "org.apache.catalina.connector.Request:javax.servlet.RequestDispatcher getRequestDispatcher(java.lang.String)",
            "org.apache.catalina.connector.RequestFacade:java.lang.Object getAttribute(java.lang.String)",
            "org.apache.catalina.core.ApplicationDispatcher:void doForward(javax.servlet.ServletRequest,javax.servlet.ServletResponse)",
            "org.apache.catalina.core.ApplicationDispatcher:void processRequest(javax.servlet.ServletRequest,javax.servlet.ServletResponse,org.apache.catalina.core.ApplicationDispatcher$State)",
            "org.apache.catalina.core.ApplicationDispatcher:javax.servlet.ServletRequest wrapRequest(org.apache.catalina.core.ApplicationDispatcher$State)",
            "org.apache.catalina.core.ApplicationFilterFactory:org.apache.catalina.core.ApplicationFilterChain createFilterChain(javax.servlet.ServletRequest,org.apache.catalina.Wrapper,javax.servlet.Servlet)",
            "org.apache.catalina.core.ApplicationHttpRequest:java.lang.Object getAttribute(java.lang.String)",
            "org.apache.catalina.core.ApplicationHttpRequest:void setRequest(javax.servlet.http.HttpServletRequest)",
            "org.apache.catalina.core.ApplicationRequest:void setRequest(javax.servlet.ServletRequest)",
            "org.apache.catalina.core.AsyncContextImpl$1:void run()",
            "org.apache.catalina.core.AsyncContextImpl:void dispatch(javax.servlet.ServletContext,java.lang.String)",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.core.StandardWrapperValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.servlets.CGIServlet$CGIEnvironment:void setupFromRequest(javax.servlet.http.HttpServletRequest)",
            "org.apache.catalina.servlets.CGIServlet:void printServletEnvironment(javax.servlet.ServletOutputStream,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.DefaultServlet:java.lang.String getRelativePath(javax.servlet.http.HttpServletRequest)",
            "org.apache.catalina.servlets.DefaultServlet:void serveResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,boolean)",
            "org.apache.catalina.servlets.DefaultServlet:boolean checkSendfile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.naming.resources.CacheEntry,long,org.apache.catalina.servlets.DefaultServlet$Range)",
            "org.apache.catalina.servlets.WebdavServlet:java.lang.String getRelativePath(javax.servlet.http.HttpServletRequest)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:java.lang.Object getReqAttributeIgnoreCase(java.lang.String)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:java.lang.String getCGIVariable(java.lang.String)",
            "org.apache.catalina.ssi.SSIServletRequestUtil:java.lang.String getRelativePath(javax.servlet.http.HttpServletRequest)",
            "org.apache.catalina.valves.AccessLogValve$HostElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.valves.AccessLogValve$LocalPortElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.valves.AccessLogValve$ProtocolElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.valves.AccessLogValve$RemoteAddrElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.valves.AccessLogValve$RequestAttributeElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.valves.AccessLogValve:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ExtendedAccessLogValve$RequestAttributeElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)"
        ]
    },
    "org.apache.catalina.connector.Request:java.lang.String getRemoteAddr()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.DigestAuthenticator:java.lang.String generateNOnce(org.apache.catalina.connector.Request)",
            "org.apache.catalina.connector.Request:java.lang.String getRemoteHost()",
            "org.apache.catalina.connector.RequestFacade:java.lang.String getRemoteAddr()",
            "org.apache.catalina.filters.RemoteAddrFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.filters.RemoteIpFilter$XForwardedRequest:void <init>(javax.servlet.http.HttpServletRequest)",
            "org.apache.catalina.filters.RemoteIpFilter:void doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.filters.RequestDumperFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.servlets.CGIServlet$CGIEnvironment:boolean setCGIEnvironment(javax.servlet.http.HttpServletRequest)",
            "org.apache.catalina.servlets.CGIServlet:void printServletEnvironment(javax.servlet.ServletOutputStream,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:java.lang.String getCGIVariable(java.lang.String)",
            "org.apache.catalina.valves.AccessLogValve$RemoteAddrElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.valves.CrawlerSessionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.valves.RemoteAddrValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.connector.Request:java.lang.String getRemoteHost()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:java.lang.String getRemoteHost()",
            "org.apache.catalina.filters.RemoteAddrFilter:void doFilterEvent(org.apache.catalina.comet.CometEvent,org.apache.catalina.comet.CometFilterChain)",
            "org.apache.catalina.filters.RemoteHostFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.filters.RemoteHostFilter:void doFilterEvent(org.apache.catalina.comet.CometEvent,org.apache.catalina.comet.CometFilterChain)",
            "org.apache.catalina.filters.RemoteIpFilter$XForwardedRequest:void <init>(javax.servlet.http.HttpServletRequest)",
            "org.apache.catalina.filters.RemoteIpFilter:void doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.filters.RequestDumperFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.servlets.CGIServlet$CGIEnvironment:boolean setCGIEnvironment(javax.servlet.http.HttpServletRequest)",
            "org.apache.catalina.servlets.CGIServlet:void printServletEnvironment(javax.servlet.ServletOutputStream,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:java.lang.String getCGIVariable(java.lang.String)",
            "org.apache.catalina.valves.AccessLogValve$HostElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.valves.RemoteHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.connector.Request:int getRemotePort()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:int getRemotePort()",
            "org.apache.catalina.ssi.SSIServletExternalResolver:java.lang.String getCGIVariable(java.lang.String)"
        ]
    },
    "org.apache.catalina.connector.Request:java.lang.String getLocalName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:java.lang.String getLocalName()"
        ]
    },
    "org.apache.catalina.connector.Request:java.lang.String getLocalAddr()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:java.lang.String getLocalAddr()",
            "org.apache.catalina.ssi.SSIServletExternalResolver:java.lang.String getCGIVariable(java.lang.String)"
        ]
    },
    "org.apache.catalina.connector.Request:int getLocalPort()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:int getLocalPort()"
        ]
    },
    "org.apache.catalina.connector.Request:boolean isAsyncDispatching()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.core.StandardWrapperValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.connector.Request:boolean isAsync()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.connector.Request:void checkSwallowInput()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Request:void parseParts()",
            "org.apache.catalina.connector.Request:void parseParameters()",
            "org.apache.catalina.connector.Request:byte[] readChunkedPostBody()"
        ]
    },
    "org.apache.catalina.connector.Request:void cometClose()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CometEventImpl:void close()"
        ]
    },
    "org.apache.catalina.connector.Request:void setCometTimeout(long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CometEventImpl:void setTimeout(int)"
        ]
    },
    "org.apache.catalina.core.AsyncContextImpl:void complete()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.AsyncContextImpl:boolean timeout()"
        ]
    },
    "org.apache.catalina.core.AsyncContextImpl:boolean timeout()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)"
        ]
    },
    "org.apache.catalina.core.AsyncContextImpl:void dispatch(javax.servlet.ServletContext,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.AsyncContextImpl:void dispatch(java.lang.String)"
        ]
    },
    "org.apache.catalina.core.AsyncContextImpl:void start(java.lang.Runnable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.AsyncContextImpl:boolean isStarted()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Request:boolean isAsyncStarted()"
        ]
    },
    "org.apache.catalina.core.AsyncContextImpl:void setStarted(org.apache.catalina.Context,javax.servlet.ServletRequest,javax.servlet.ServletResponse,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Request:javax.servlet.AsyncContext startAsync(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.core.AsyncContextImpl:void setTimeout(long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Request:javax.servlet.AsyncContext startAsync(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.core.AsyncContextImpl:void setErrorState(java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)"
        ]
    },
    "org.apache.coyote.RequestInfo:java.lang.String getRemoteAddr()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.connector.OutputBuffer:void doFlush(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.OutputBuffer:void close()",
            "org.apache.catalina.connector.OutputBuffer:void flush()"
        ]
    },
    "org.apache.catalina.connector.Response:void finishResponse()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CometEventImpl:void close()",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)"
        ]
    },
    "org.apache.coyote.http11.AbstractOutputBuffer:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.filters.ChunkedOutputFilter:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)",
            "org.apache.coyote.http11.filters.ChunkedOutputFilter:long end()",
            "org.apache.coyote.http11.filters.GzipOutputFilter$FakeOutputStream:void write(int)",
            "org.apache.coyote.http11.filters.GzipOutputFilter$FakeOutputStream:void write(byte[],int,int)",
            "org.apache.coyote.http11.filters.IdentityOutputFilter:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)",
            "org.apache.coyote.http11.AbstractOutputBuffer:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)",
            "org.apache.coyote.Response:void doWrite(org.apache.tomcat.util.buf.ByteChunk)"
        ]
    },
    "org.apache.coyote.http11.AbstractOutputBuffer:void flush()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.InternalAprOutputBuffer:void flush()",
            "org.apache.coyote.http11.InternalNioOutputBuffer:void flush()",
            "org.apache.coyote.http11.InternalOutputBuffer:void flush()"
        ]
    },
    "org.apache.coyote.http11.AbstractOutputBuffer:void endRequest()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.InternalNioOutputBuffer:void endRequest()",
            "org.apache.coyote.http11.InternalOutputBuffer:void endRequest()"
        ]
    },
    "org.apache.coyote.http11.InternalAprOutputBuffer:void endRequest()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.AbstractHttp11Processor:void endRequest()",
            "org.apache.coyote.http11.Http11AprProcessor:void actionInternal(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.coyote.Response:void reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Response:void reset()"
        ]
    },
    "org.apache.coyote.Response:void finish()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.OutputBuffer:void close()"
        ]
    },
    "org.apache.coyote.Response:void acknowledge()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Response:void sendAcknowledgement()"
        ]
    },
    "org.apache.coyote.Response:void sendHeaders()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.OutputBuffer:void doFlush(boolean)"
        ]
    },
    "org.apache.coyote.Response:long getBytesWritten(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Response:long getBytesWritten(boolean)"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.FileCleaningTracker:void track(java.io.File,java.lang.Object,org.apache.tomcat.util.http.fileupload.FileDeleteStrategy)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.FileCleaningTracker:void track(java.io.File,java.lang.Object)"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.FileCleaningTracker:void track(java.lang.String,java.lang.Object,org.apache.tomcat.util.http.fileupload.FileDeleteStrategy)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.FileCleaningTracker:void track(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.tomcat.util.net.AbstractEndpoint:void start()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.AbstractProtocolHandler:void start()"
        ]
    },
    "org.apache.tomcat.util.net.NioSelectorPool:void open()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.net.NioEndpoint:void bind()"
        ]
    },
    "org.apache.coyote.http11.InternalNioInputBuffer:int nbRead()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.coyote.http11.InternalNioInputBuffer:boolean parseRequestLine(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.Http11NioProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.NioChannel)"
        ]
    },
    "org.apache.coyote.http11.InternalNioInputBuffer:boolean fill(boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.InternalNioInputBuffer$SocketInputBuffer:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.InternalNioInputBuffer:boolean parseRequestLine(boolean)",
            "org.apache.coyote.http11.InternalNioInputBuffer:org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseStatus parseHeader()",
            "org.apache.coyote.http11.InternalNioInputBuffer:boolean fill(boolean)"
        ]
    },
    "org.apache.tomcat.util.net.NioSelectorPool:int read(java.nio.ByteBuffer,org.apache.tomcat.util.net.NioChannel,java.nio.channels.Selector,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.InternalNioInputBuffer:int readSocket(boolean,boolean)"
        ]
    },
    "org.apache.coyote.http11.InternalNioOutputBuffer:int writeToSocket(java.nio.ByteBuffer,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.InternalNioOutputBuffer:void sendAck()",
            "org.apache.coyote.http11.InternalNioOutputBuffer:void flushBuffer()"
        ]
    },
    "org.apache.tomcat.util.net.NioSelectorPool:int write(java.nio.ByteBuffer,org.apache.tomcat.util.net.NioChannel,java.nio.channels.Selector,long)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.tomcat.util.net.SecureNioChannel:boolean flush(boolean,java.nio.channels.Selector,long,org.apache.tomcat.util.MutableInteger)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.InternalNioOutputBuffer:int writeToSocket(java.nio.ByteBuffer,boolean,boolean)"
        ]
    },
    "org.apache.catalina.ssi.SSIFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.ssi.SSIServlet:void processSSI(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.net.URL)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIServlet:void requestHandler(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.core.ContainerBase:void addChild(org.apache.catalina.Container)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:void addChild(org.apache.catalina.Container)",
            "org.apache.catalina.core.StandardEngine:void addChild(org.apache.catalina.Container)",
            "org.apache.catalina.core.StandardHost:void addChild(org.apache.catalina.Container)"
        ]
    },
    "org.apache.catalina.core.ContainerBase:void access$000(org.apache.catalina.core.ContainerBase,org.apache.catalina.Container)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ContainerBase$PrivilegedAddChild:java.lang.Void run()"
        ]
    },
    "org.apache.catalina.core.StandardEngine:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.core.StandardHost:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.core.StandardWrapper:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.core.ContainerBase:void addValve(org.apache.catalina.Valve)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.ContainerMBean:java.lang.String addValve(java.lang.String)"
        ]
    },
    "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createAccessLoggerValve(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createRemoteAddrValve(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createRemoteHostValve(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createSingleSignOn(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.ContextConfig:void authenticatorConfig()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void configureStart()"
        ]
    },
    "org.apache.catalina.startup.Tomcat$FixContextListener:void lifecycleEvent(org.apache.catalina.LifecycleEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleSupport:void fireLifecycleEvent(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.catalina.startup.Tomcat:org.apache.catalina.Server getServer()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Tomcat:void init()",
            "org.apache.catalina.startup.Tomcat:void start()",
            "org.apache.catalina.startup.Tomcat:void stop()",
            "org.apache.catalina.startup.Tomcat:void destroy()",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.connector.Connector getConnector()",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Service getService()",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Engine getEngine()",
            "org.apache.catalina.startup.Tomcat:void enableNaming()"
        ]
    },
    "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createConnector(java.lang.String,java.lang.String,int,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createAjpConnector(java.lang.String,java.lang.String,int)",
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createHttpConnector(java.lang.String,java.lang.String,int)",
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createHttpsConnector(java.lang.String,java.lang.String,int)"
        ]
    },
    "org.apache.catalina.mbeans.ServiceMBean:void addConnector(java.lang.String,int,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.Embedded:void addConnector(org.apache.catalina.connector.Connector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createConnector(java.lang.String,java.lang.String,int,boolean,boolean)",
            "org.apache.catalina.mbeans.ServiceMBean:void addConnector(java.lang.String,int,boolean,boolean)",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.connector.Connector getConnector()"
        ]
    },
    "org.apache.catalina.startup.Tomcat:org.apache.catalina.connector.Connector getConnector()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Tomcat:void init()",
            "org.apache.catalina.startup.Tomcat:void start()"
        ]
    },
    "org.apache.catalina.mbeans.ServiceMBean:void addExecutor(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.manager.host.HTMLHostManagerServlet:java.lang.String start(java.lang.String,org.apache.tomcat.util.res.StringManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.host.HTMLHostManagerServlet:void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.manager.HTMLManagerServlet:java.lang.String start(org.apache.catalina.util.ContextName,org.apache.tomcat.util.res.StringManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.HTMLManagerServlet:void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.realm.LockOutRealm:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.startup.Tomcat$DefaultWebXmlListener:void lifecycleEvent(org.apache.catalina.LifecycleEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleSupport:void fireLifecycleEvent(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.catalina.startup.Tomcat:void initWebappDefaults(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.authenticator.AuthenticatorBase:boolean reauthenticateFromSSO(java.lang.String,org.apache.catalina.connector.Request)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.BasicAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.authenticator.FormAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)"
        ]
    },
    "org.apache.catalina.core.ContainerBase:org.apache.catalina.Realm getRealm()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.AuthenticatorBase:boolean reauthenticateFromSSO(java.lang.String,org.apache.catalina.connector.Request)",
            "org.apache.catalina.authenticator.AuthenticatorBase:java.security.Principal doLogin(org.apache.catalina.connector.Request,java.lang.String,java.lang.String)",
            "org.apache.catalina.authenticator.BasicAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.authenticator.DigestAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.authenticator.FormAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.authenticator.SSLAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.connector.Request:boolean isUserInRole(java.lang.String)",
            "org.apache.catalina.core.ContainerBase:org.apache.catalina.Realm getRealm()",
            "org.apache.catalina.core.StandardEngine:org.apache.catalina.Realm getRealm()",
            "org.apache.catalina.startup.ContextConfig:void authenticatorConfig()"
        ]
    },
    "org.apache.catalina.startup.Tomcat:org.apache.catalina.Context addWebapp(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardContext:void addChild(org.apache.catalina.Container)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationContext:javax.servlet.ServletRegistration$Dynamic addServlet(java.lang.String,java.lang.String,javax.servlet.Servlet)",
            "org.apache.catalina.deploy.WebXml:void configureContext(org.apache.catalina.Context)",
            "org.apache.catalina.mbeans.ContainerMBean:void addChild(java.lang.String,java.lang.String)",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Wrapper addServlet(org.apache.catalina.Context,java.lang.String,java.lang.String)",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Wrapper addServlet(org.apache.catalina.Context,java.lang.String,javax.servlet.Servlet)"
        ]
    },
    "org.apache.catalina.startup.ContextConfig:void configureStop()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void lifecycleEvent(org.apache.catalina.LifecycleEvent)"
        ]
    },
    "org.apache.catalina.manager.host.HTMLHostManagerServlet:java.lang.String remove(java.lang.String,org.apache.tomcat.util.res.StringManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.host.HTMLHostManagerServlet:void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.core.NamingContextListener:void lifecycleEvent(org.apache.catalina.LifecycleEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleSupport:void fireLifecycleEvent(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.catalina.deploy.WebXml:void configureContext(org.apache.catalina.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void webConfig()"
        ]
    },
    "org.apache.catalina.startup.SetNextNamingRule:void end(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.digester.Digester:void endElement(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.startup.WebAnnotationSet:void addResource(org.apache.catalina.Context,javax.'annotation'.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.WebAnnotationSet:void loadClassAnnotation(org.apache.catalina.Context,java.lang.String)"
        ]
    },
    "org.apache.catalina.manager.HTMLManagerServlet:java.lang.String reload(org.apache.catalina.util.ContextName,org.apache.tomcat.util.res.StringManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.HTMLManagerServlet:void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createStandardContext(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createStandardContext(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.startup.Embedded:org.apache.catalina.Context createContext(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.Tomcat:org.apache.catalina.Context addContext(org.apache.catalina.Host,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Context addContext(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.manager.host.HostManagerServlet:void add(java.io.PrintWriter,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean,boolean,org.apache.tomcat.util.res.StringManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.host.HostManagerServlet:void add(javax.servlet.http.HttpServletRequest,java.io.PrintWriter,java.lang.String,boolean,org.apache.tomcat.util.res.StringManager)"
        ]
    },
    "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createStandardHost(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.Embedded:org.apache.catalina.Host createHost(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.Tomcat:org.apache.catalina.Host getHost()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Context addWebapp(java.lang.String,java.lang.String)",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Context addContext(java.lang.String,java.lang.String)",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Wrapper addServlet(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Wrapper addServlet(java.lang.String,java.lang.String,javax.servlet.Servlet)",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Context addContext(org.apache.catalina.Host,java.lang.String,java.lang.String)",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Context addWebapp(org.apache.catalina.Host,java.lang.String,java.lang.String)",
            "org.apache.catalina.startup.Tomcat:void silence(java.lang.String)",
            "org.apache.catalina.startup.Tomcat:void initWebappDefaults(java.lang.String)"
        ]
    },
    "org.apache.catalina.core.StandardContext:org.apache.catalina.Wrapper createWrapper()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationContext:javax.servlet.ServletRegistration$Dynamic addServlet(java.lang.String,java.lang.String,javax.servlet.Servlet)",
            "org.apache.catalina.deploy.WebXml:void configureContext(org.apache.catalina.Context)",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Wrapper addServlet(org.apache.catalina.Context,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.startup.Tomcat$ExistingStandardWrapper:void <init>(javax.servlet.Servlet)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Wrapper addServlet(org.apache.catalina.Context,java.lang.String,javax.servlet.Servlet)"
        ]
    },
    "org.apache.catalina.manager.host.HTMLHostManagerServlet:void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.manager.ManagerServlet:void doPut(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.manager.HTMLManagerServlet:java.lang.String deployInternal(java.lang.String,org.apache.catalina.util.ContextName,java.lang.String,org.apache.tomcat.util.res.StringManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.HTMLManagerServlet:void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.startup.HostConfig:void lifecycleEvent(org.apache.catalina.LifecycleEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleSupport:void fireLifecycleEvent(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.catalina.startup.Catalina:void load(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.loader.VirtualWebappLoader:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.realm.DataSourceRealm:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.realm.JAASRealm:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.realm.JDBCRealm:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.realm.JNDIRealm:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.realm.MemoryRealm:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.realm.UserDatabaseRealm:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.realm.JDBCRealm:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.realm.JNDIRealm:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.realm.UserDatabaseRealm:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.session.JDBCStore:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.session.JDBCStore:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.authenticator.AuthenticatorBase:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.authenticator.AuthenticatorBase:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.tomcat.util.net.AbstractEndpoint:void stop()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.AbstractProtocolHandler:void stop()",
            "org.apache.tomcat.util.net.AprEndpoint:void unbind()",
            "org.apache.tomcat.util.net.JIoEndpoint:void unbind()",
            "org.apache.tomcat.util.net.NioEndpoint:void unbind()"
        ]
    },
    "org.apache.catalina.connector.CoyoteInputStream$2:java.lang.Integer run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteInputStream$2:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.connector.CoyoteInputStream:int available()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.connector.InputBuffer:boolean ready()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteReader:boolean ready()"
        ]
    },
    "org.apache.catalina.connector.Request:boolean getAvailable()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean event(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)"
        ]
    },
    "org.apache.catalina.connector.CometEventImpl:void setTimeout(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.connector.CoyoteAdapter:void parseSessionSslId(org.apache.catalina.connector.Request)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean postParseRequest(org.apache.coyote.Request,org.apache.catalina.connector.Request,org.apache.coyote.Response,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.connector.Request:java.util.Enumeration getAttributeNames()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade$GetAttributePrivilegedAction:java.util.Enumeration run()",
            "org.apache.catalina.connector.RequestFacade:java.util.Enumeration getAttributeNames()",
            "org.apache.catalina.core.ApplicationHttpRequest$AttributeNamesEnumerator:void <init>(org.apache.catalina.core.ApplicationHttpRequest)",
            "org.apache.catalina.core.ApplicationRequest:void setRequest(javax.servlet.ServletRequest)",
            "org.apache.catalina.servlets.CGIServlet:void printServletEnvironment(javax.servlet.ServletOutputStream,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:void addVariableNames(java.util.Collection)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:java.lang.Object getReqAttributeIgnoreCase(java.lang.String)"
        ]
    },
    "org.apache.catalina.connector.Request:javax.servlet.RequestDispatcher getRequestDispatcher(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade$GetRequestDispatcherPrivilegedAction:javax.servlet.RequestDispatcher run()",
            "org.apache.catalina.connector.RequestFacade:javax.servlet.RequestDispatcher getRequestDispatcher(java.lang.String)"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:java.lang.Object getAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void doForward(javax.servlet.ServletRequest,javax.servlet.ServletResponse)",
            "org.apache.catalina.core.ApplicationDispatcher:void processRequest(javax.servlet.ServletRequest,javax.servlet.ServletResponse,org.apache.catalina.core.ApplicationDispatcher$State)",
            "org.apache.catalina.core.ApplicationDispatcher:javax.servlet.ServletRequest wrapRequest(org.apache.catalina.core.ApplicationDispatcher$State)",
            "org.apache.catalina.core.ApplicationFilterFactory:org.apache.catalina.core.ApplicationFilterChain createFilterChain(javax.servlet.ServletRequest,org.apache.catalina.Wrapper,javax.servlet.Servlet)",
            "org.apache.catalina.core.ApplicationHttpRequest:java.lang.Object getAttribute(java.lang.String)",
            "org.apache.catalina.core.ApplicationHttpRequest:void setRequest(javax.servlet.http.HttpServletRequest)",
            "org.apache.catalina.core.ApplicationRequest:void setRequest(javax.servlet.ServletRequest)",
            "org.apache.catalina.servlets.CGIServlet$CGIEnvironment:void setupFromRequest(javax.servlet.http.HttpServletRequest)",
            "org.apache.catalina.servlets.CGIServlet:void printServletEnvironment(javax.servlet.ServletOutputStream,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.DefaultServlet:java.lang.String getRelativePath(javax.servlet.http.HttpServletRequest)",
            "org.apache.catalina.servlets.DefaultServlet:void serveResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,boolean)",
            "org.apache.catalina.servlets.DefaultServlet:boolean checkSendfile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.naming.resources.CacheEntry,long,org.apache.catalina.servlets.DefaultServlet$Range)",
            "org.apache.catalina.servlets.WebdavServlet:java.lang.String getRelativePath(javax.servlet.http.HttpServletRequest)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:java.lang.Object getReqAttributeIgnoreCase(java.lang.String)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:java.lang.String getCGIVariable(java.lang.String)",
            "org.apache.catalina.ssi.SSIServletRequestUtil:java.lang.String getRelativePath(javax.servlet.http.HttpServletRequest)",
            "org.apache.catalina.valves.AccessLogValve:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher:javax.servlet.ServletRequest wrapRequest(org.apache.catalina.core.ApplicationDispatcher$State)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void doForward(javax.servlet.ServletRequest,javax.servlet.ServletResponse)",
            "org.apache.catalina.core.ApplicationDispatcher:void doInclude(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.DispatcherType)"
        ]
    },
    "org.apache.catalina.core.ApplicationFilterFactory:org.apache.catalina.core.ApplicationFilterChain createFilterChain(javax.servlet.ServletRequest,org.apache.catalina.Wrapper,javax.servlet.Servlet)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void invoke(javax.servlet.ServletRequest,javax.servlet.ServletResponse,org.apache.catalina.core.ApplicationDispatcher$State)",
            "org.apache.catalina.core.StandardWrapperValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.core.ApplicationHttpRequest:java.lang.Object getAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void doForward(javax.servlet.ServletRequest,javax.servlet.ServletResponse)",
            "org.apache.catalina.core.ApplicationDispatcher:void processRequest(javax.servlet.ServletRequest,javax.servlet.ServletResponse,org.apache.catalina.core.ApplicationDispatcher$State)",
            "org.apache.catalina.core.ApplicationDispatcher:javax.servlet.ServletRequest wrapRequest(org.apache.catalina.core.ApplicationDispatcher$State)",
            "org.apache.catalina.core.ApplicationFilterFactory:org.apache.catalina.core.ApplicationFilterChain createFilterChain(javax.servlet.ServletRequest,org.apache.catalina.Wrapper,javax.servlet.Servlet)",
            "org.apache.catalina.core.ApplicationHttpRequest$AttributeNamesEnumerator:void <init>(org.apache.catalina.core.ApplicationHttpRequest)",
            "org.apache.catalina.core.ApplicationHttpRequest$AttributeNamesEnumerator:java.lang.String nextElement()",
            "org.apache.catalina.core.ApplicationHttpRequest:java.lang.Object getAttribute(java.lang.String)",
            "org.apache.catalina.core.ApplicationHttpRequest:javax.servlet.RequestDispatcher getRequestDispatcher(java.lang.String)",
            "org.apache.catalina.core.ApplicationHttpRequest:void setRequest(javax.servlet.http.HttpServletRequest)",
            "org.apache.catalina.core.ApplicationRequest:void setRequest(javax.servlet.ServletRequest)",
            "org.apache.catalina.servlets.CGIServlet$CGIEnvironment:void setupFromRequest(javax.servlet.http.HttpServletRequest)",
            "org.apache.catalina.servlets.CGIServlet:void printServletEnvironment(javax.servlet.ServletOutputStream,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.DefaultServlet:java.lang.String getRelativePath(javax.servlet.http.HttpServletRequest)",
            "org.apache.catalina.servlets.DefaultServlet:void serveResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,boolean)",
            "org.apache.catalina.servlets.DefaultServlet:boolean checkSendfile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.naming.resources.CacheEntry,long,org.apache.catalina.servlets.DefaultServlet$Range)",
            "org.apache.catalina.servlets.WebdavServlet:java.lang.String getRelativePath(javax.servlet.http.HttpServletRequest)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:java.lang.Object getReqAttributeIgnoreCase(java.lang.String)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:java.lang.String getCGIVariable(java.lang.String)",
            "org.apache.catalina.ssi.SSIServletRequestUtil:java.lang.String getRelativePath(javax.servlet.http.HttpServletRequest)",
            "org.apache.catalina.valves.AccessLogValve:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)"
        ]
    },
    "org.apache.catalina.core.ApplicationHttpRequest:void setRequest(javax.servlet.http.HttpServletRequest)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationHttpRequest:void <init>(javax.servlet.http.HttpServletRequest,org.apache.catalina.Context,boolean)"
        ]
    },
    "org.apache.catalina.core.ApplicationRequest:void setRequest(javax.servlet.ServletRequest)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void unwrapRequest(org.apache.catalina.core.ApplicationDispatcher$State)",
            "org.apache.catalina.core.ApplicationDispatcher:javax.servlet.ServletRequest wrapRequest(org.apache.catalina.core.ApplicationDispatcher$State)",
            "org.apache.catalina.core.ApplicationRequest:void <init>(javax.servlet.ServletRequest)"
        ]
    },
    "org.apache.catalina.servlets.CGIServlet$CGIEnvironment:void setupFromRequest(javax.servlet.http.HttpServletRequest)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.CGIServlet$CGIEnvironment:void <init>(org.apache.catalina.servlets.CGIServlet,javax.servlet.http.HttpServletRequest,javax.servlet.ServletContext)"
        ]
    },
    "org.apache.catalina.servlets.CGIServlet:void printServletEnvironment(javax.servlet.ServletOutputStream,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.CGIServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.servlets.DefaultServlet:java.lang.String getRelativePath(javax.servlet.http.HttpServletRequest)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.DefaultServlet:void doPut(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.DefaultServlet:void doDelete(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.DefaultServlet:void serveResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,boolean)"
        ]
    },
    "org.apache.catalina.servlets.DefaultServlet:void serveResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.DefaultServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.DefaultServlet:void doHead(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.servlets.DefaultServlet:boolean checkSendfile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.naming.resources.CacheEntry,long,org.apache.catalina.servlets.DefaultServlet$Range)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.DefaultServlet:void serveResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,boolean)"
        ]
    },
    "org.apache.catalina.servlets.WebdavServlet:java.lang.String getRelativePath(javax.servlet.http.HttpServletRequest)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.DefaultServlet:void doPut(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.DefaultServlet:void doDelete(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.DefaultServlet:void serveResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,boolean)",
            "org.apache.catalina.servlets.WebdavServlet:void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.WebdavServlet:void doPropfind(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.WebdavServlet:void doMkcol(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.WebdavServlet:void doPut(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.WebdavServlet:void doMove(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.WebdavServlet:void doLock(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.WebdavServlet:void doUnlock(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.WebdavServlet:boolean isLocked(javax.servlet.http.HttpServletRequest)",
            "org.apache.catalina.servlets.WebdavServlet:boolean copyResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.WebdavServlet:boolean deleteResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.WebdavServlet:void sendReport(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Hashtable)",
            "org.apache.catalina.servlets.WebdavServlet:void parseLockNullProperties(javax.servlet.http.HttpServletRequest,org.apache.catalina.util.XMLWriter,java.lang.String,int,java.util.Vector)",
            "org.apache.catalina.servlets.WebdavServlet:java.lang.StringBuilder determineMethodsAllowed(javax.naming.directory.DirContext,javax.servlet.http.HttpServletRequest)"
        ]
    },
    "org.apache.catalina.ssi.SSIServletExternalResolver:java.lang.Object getReqAttributeIgnoreCase(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIServletExternalResolver:java.lang.String getVariableValue(java.lang.String)"
        ]
    },
    "org.apache.catalina.ssi.SSIServletExternalResolver:java.lang.String getCGIVariable(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIServletExternalResolver:java.lang.String getVariableValue(java.lang.String)"
        ]
    },
    "org.apache.catalina.ssi.SSIServletRequestUtil:java.lang.String getRelativePath(javax.servlet.http.HttpServletRequest)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIServlet:void requestHandler(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:java.lang.String getAbsolutePath(java.lang.String)"
        ]
    },
    "org.apache.catalina.valves.AccessLogValve$HostElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.valves.AccessLogValve:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)"
        ]
    },
    "org.apache.catalina.valves.AccessLogValve$LocalPortElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.valves.AccessLogValve:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)"
        ]
    },
    "org.apache.catalina.valves.AccessLogValve$ProtocolElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.valves.AccessLogValve:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)"
        ]
    },
    "org.apache.catalina.valves.AccessLogValve$RemoteAddrElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.valves.AccessLogValve:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)"
        ]
    },
    "org.apache.catalina.valves.AccessLogValve$RequestAttributeElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.valves.AccessLogValve:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)"
        ]
    },
    "org.apache.catalina.valves.AccessLogValve:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ContainerBase:void logAccess(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long,boolean)",
            "org.apache.catalina.core.StandardEngine:void logAccess(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long,boolean)"
        ]
    },
    "org.apache.catalina.valves.ExtendedAccessLogValve$RequestAttributeElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.valves.AccessLogValve:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)"
        ]
    },
    "org.apache.catalina.valves.JDBCAccessLogValve:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ContainerBase:void logAccess(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long,boolean)",
            "org.apache.catalina.core.StandardEngine:void logAccess(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long,boolean)"
        ]
    },
    "org.apache.catalina.authenticator.DigestAuthenticator:java.lang.String generateNOnce(org.apache.catalina.connector.Request)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.DigestAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:java.lang.String getRemoteAddr()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.filters.RemoteAddrFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.filters.RemoteIpFilter$XForwardedRequest:void <init>(javax.servlet.http.HttpServletRequest)",
            "org.apache.catalina.filters.RemoteIpFilter:void doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.filters.RequestDumperFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.servlets.CGIServlet$CGIEnvironment:boolean setCGIEnvironment(javax.servlet.http.HttpServletRequest)",
            "org.apache.catalina.servlets.CGIServlet:void printServletEnvironment(javax.servlet.ServletOutputStream,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:java.lang.String getCGIVariable(java.lang.String)",
            "org.apache.catalina.valves.RemoteAddrValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.filters.RemoteAddrFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.filters.RemoteIpFilter$XForwardedRequest:void <init>(javax.servlet.http.HttpServletRequest)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.filters.RemoteIpFilter:void doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)"
        ]
    },
    "org.apache.catalina.filters.RemoteIpFilter:void doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.filters.RemoteIpFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)"
        ]
    },
    "org.apache.catalina.filters.RequestDumperFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.servlets.CGIServlet$CGIEnvironment:boolean setCGIEnvironment(javax.servlet.http.HttpServletRequest)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.CGIServlet$CGIEnvironment:void <init>(org.apache.catalina.servlets.CGIServlet,javax.servlet.http.HttpServletRequest,javax.servlet.ServletContext)"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:java.lang.String getRemoteHost()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.filters.RemoteAddrFilter:void doFilterEvent(org.apache.catalina.comet.CometEvent,org.apache.catalina.comet.CometFilterChain)",
            "org.apache.catalina.filters.RemoteHostFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.filters.RemoteHostFilter:void doFilterEvent(org.apache.catalina.comet.CometEvent,org.apache.catalina.comet.CometFilterChain)",
            "org.apache.catalina.filters.RemoteIpFilter$XForwardedRequest:void <init>(javax.servlet.http.HttpServletRequest)",
            "org.apache.catalina.filters.RemoteIpFilter:void doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.filters.RequestDumperFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.servlets.CGIServlet$CGIEnvironment:boolean setCGIEnvironment(javax.servlet.http.HttpServletRequest)",
            "org.apache.catalina.servlets.CGIServlet:void printServletEnvironment(javax.servlet.ServletOutputStream,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:java.lang.String getCGIVariable(java.lang.String)",
            "org.apache.catalina.valves.RemoteHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.filters.RemoteAddrFilter:void doFilterEvent(org.apache.catalina.comet.CometEvent,org.apache.catalina.comet.CometFilterChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilterEvent(org.apache.catalina.comet.CometEvent)"
        ]
    },
    "org.apache.catalina.filters.RemoteHostFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.filters.RemoteHostFilter:void doFilterEvent(org.apache.catalina.comet.CometEvent,org.apache.catalina.comet.CometFilterChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilterEvent(org.apache.catalina.comet.CometEvent)"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:int getRemotePort()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIServletExternalResolver:java.lang.String getCGIVariable(java.lang.String)"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:java.lang.String getLocalName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.connector.RequestFacade:java.lang.String getLocalAddr()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIServletExternalResolver:java.lang.String getCGIVariable(java.lang.String)"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:int getLocalPort()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.connector.Request:void parseParts()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Request:java.util.Collection getParts()",
            "org.apache.catalina.connector.Request:void parseParameters()"
        ]
    },
    "org.apache.catalina.connector.Request:void parseParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Request:java.lang.String getParameter(java.lang.String)",
            "org.apache.catalina.connector.Request:java.util.Enumeration getParameterNames()",
            "org.apache.catalina.connector.Request:java.lang.String[] getParameterValues(java.lang.String)"
        ]
    },
    "org.apache.catalina.connector.Request:byte[] readChunkedPostBody()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Request:void parseParameters()"
        ]
    },
    "org.apache.catalina.connector.CometEventImpl:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.filters.RequestFilter:void processCometEvent(java.lang.String,org.apache.catalina.comet.CometEvent,org.apache.catalina.comet.CometFilterChain)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void lifecycleEvent(org.apache.catalina.LifecycleEvent)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void sessionDestroyed(javax.servlet.http.HttpSessionEvent)"
        ]
    },
    "org.apache.catalina.core.AsyncContextImpl:void dispatch(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.AsyncContextImpl:void dispatch()"
        ]
    },
    "org.apache.catalina.connector.Request:boolean isAsyncStarted()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean postParseRequest(org.apache.coyote.Request,org.apache.catalina.connector.Request,org.apache.coyote.Response,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.RequestFacade:boolean isAsyncStarted()",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.connector.Request:javax.servlet.AsyncContext startAsync(javax.servlet.ServletRequest,javax.servlet.ServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Request:javax.servlet.AsyncContext startAsync()",
            "org.apache.catalina.connector.RequestFacade:javax.servlet.AsyncContext startAsync(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.connector.OutputBuffer:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteOutputStream:void close()",
            "org.apache.catalina.connector.CoyoteWriter:void close()",
            "org.apache.catalina.connector.Response:void finishResponse()"
        ]
    },
    "org.apache.catalina.connector.OutputBuffer:void flush()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteOutputStream:void flush()",
            "org.apache.catalina.connector.CoyoteWriter:void flush()",
            "org.apache.catalina.connector.Response:long getBytesWritten(boolean)",
            "org.apache.catalina.connector.Response:void flushBuffer()"
        ]
    },
    "org.apache.coyote.http11.filters.ChunkedOutputFilter:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.filters.ChunkedOutputFilter:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)",
            "org.apache.coyote.http11.filters.ChunkedOutputFilter:long end()",
            "org.apache.coyote.http11.filters.GzipOutputFilter$FakeOutputStream:void write(int)",
            "org.apache.coyote.http11.filters.GzipOutputFilter$FakeOutputStream:void write(byte[],int,int)",
            "org.apache.coyote.http11.filters.IdentityOutputFilter:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)",
            "org.apache.coyote.http11.AbstractOutputBuffer:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)",
            "org.apache.coyote.Response:void doWrite(org.apache.tomcat.util.buf.ByteChunk)"
        ]
    },
    "org.apache.coyote.http11.filters.ChunkedOutputFilter:long end()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.filters.GzipOutputFilter:long end()",
            "org.apache.coyote.http11.AbstractOutputBuffer:void endRequest()",
            "org.apache.coyote.http11.InternalAprOutputBuffer:void endRequest()"
        ]
    },
    "org.apache.coyote.http11.filters.GzipOutputFilter$FakeOutputStream:void write(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Catalina:void stopServer(java.lang.String[])",
            "org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream:void write(int)"
        ]
    },
    "org.apache.coyote.http11.filters.GzipOutputFilter$FakeOutputStream:void write(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.loader.WebappLoader:boolean copy(java.io.InputStream,java.io.OutputStream)",
            "org.apache.catalina.util.IOTools:void flow(java.io.InputStream,java.io.OutputStream,byte[])",
            "org.apache.coyote.ajp.AjpProcessor$SocketOutputBuffer:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)",
            "org.apache.coyote.ajp.AjpProcessor:void output(byte[],int,int)",
            "org.apache.coyote.http11.filters.FlushableGZIPOutputStream:void deflate()",
            "org.apache.coyote.http11.InternalOutputBuffer$OutputStreamOutputBuffer:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)",
            "org.apache.coyote.http11.InternalOutputBuffer:void commit()",
            "org.apache.coyote.http11.InternalOutputBuffer:void realWriteBytes(byte[],int,int)",
            "org.apache.tomcat.util.http.fileupload.util.Streams:long copy(java.io.InputStream,java.io.OutputStream,boolean,byte[])",
            "org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream:void writeTo(java.io.OutputStream)",
            "org.apache.tomcat.util.http.fileupload.IOUtils:long copyLarge(java.io.InputStream,java.io.OutputStream)",
            "org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream:void write(byte[],int,int)"
        ]
    },
    "org.apache.coyote.http11.filters.IdentityOutputFilter:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.filters.ChunkedOutputFilter:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)",
            "org.apache.coyote.http11.filters.ChunkedOutputFilter:long end()",
            "org.apache.coyote.http11.filters.GzipOutputFilter$FakeOutputStream:void write(int)",
            "org.apache.coyote.http11.filters.GzipOutputFilter$FakeOutputStream:void write(byte[],int,int)",
            "org.apache.coyote.http11.filters.IdentityOutputFilter:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)",
            "org.apache.coyote.http11.AbstractOutputBuffer:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)",
            "org.apache.coyote.Response:void doWrite(org.apache.tomcat.util.buf.ByteChunk)"
        ]
    },
    "org.apache.coyote.Response:void doWrite(org.apache.tomcat.util.buf.ByteChunk)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.OutputBuffer:void realWriteBytes(byte[],int,int)"
        ]
    },
    "org.apache.coyote.http11.InternalAprOutputBuffer:void flush()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.AbstractHttp11Processor:void action(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.coyote.http11.InternalNioOutputBuffer:void flush()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.AbstractHttp11Processor:void action(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.coyote.http11.InternalOutputBuffer:void flush()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.AbstractHttp11Processor:void action(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.coyote.http11.InternalNioOutputBuffer:void endRequest()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.AbstractHttp11Processor:void endRequest()",
            "org.apache.coyote.http11.Http11NioProcessor:void actionInternal(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.coyote.http11.InternalOutputBuffer:void endRequest()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.AbstractHttp11Processor:void endRequest()",
            "org.apache.coyote.http11.Http11Processor:void actionInternal(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.coyote.http11.AbstractHttp11Processor:void endRequest()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.Http11AprProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.coyote.http11.Http11NioProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.NioChannel)",
            "org.apache.coyote.http11.Http11Processor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)"
        ]
    },
    "org.apache.catalina.connector.Response:void reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Response:void reset(int,java.lang.String)",
            "org.apache.catalina.connector.ResponseFacade:void reset()",
            "org.apache.catalina.core.ApplicationHttpResponse:void reset()",
            "org.apache.catalina.core.ApplicationResponse:void reset()",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.connector.Response:void sendAcknowledgement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.FormAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.authenticator.FormAuthenticator:void saveRequest(org.apache.catalina.connector.Request,org.apache.catalina.Session)",
            "org.apache.catalina.core.StandardWrapperValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.connector.Response:long getBytesWritten(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.valves.AccessLogValve$ByteSentElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.FileCleaningTracker:void track(java.io.File,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.disk.DiskFileItemFactory:org.apache.tomcat.util.http.fileupload.FileItem createItem(java.lang.String,java.lang.String,boolean,java.lang.String)"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.FileCleaningTracker:void track(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.coyote.AbstractProtocolHandler:void start()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Connector:void startInternal()"
        ]
    },
    "org.apache.tomcat.util.net.NioEndpoint:void bind()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.net.AbstractEndpoint:void init()",
            "org.apache.tomcat.util.net.AbstractEndpoint:void start()"
        ]
    },
    "org.apache.coyote.http11.InternalNioInputBuffer$SocketInputBuffer:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.filters.BufferedInputFilter:void setRequest(org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int readBytes()",
            "org.apache.coyote.http11.filters.IdentityInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.IdentityInputFilter:long end()",
            "org.apache.coyote.http11.AbstractInputBuffer:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.InternalAprInputBuffer:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.Request:int doRead(org.apache.tomcat.util.buf.ByteChunk)"
        ]
    },
    "org.apache.coyote.http11.InternalNioInputBuffer:org.apache.coyote.http11.InternalNioInputBuffer$HeaderParseStatus parseHeader()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.InternalNioInputBuffer:boolean parseHeaders()"
        ]
    },
    "org.apache.coyote.http11.InternalNioInputBuffer:boolean fill(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.coyote.http11.InternalNioOutputBuffer:void sendAck()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.AbstractHttp11Processor:void action(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.coyote.http11.InternalNioOutputBuffer:void flushBuffer()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.InternalNioOutputBuffer:void flush()",
            "org.apache.coyote.http11.InternalNioOutputBuffer:void endRequest()",
            "org.apache.coyote.http11.InternalNioOutputBuffer:void addToBB(byte[],int,int)"
        ]
    },
    "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)",
            "org.apache.catalina.core.ApplicationFilterChain:void access$000(org.apache.catalina.core.ApplicationFilterChain,javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.ssi.SSIServlet:void requestHandler(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.ssi.SSIServlet:void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.core.StandardEngine:void addChild(org.apache.catalina.Container)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.host.HostManagerServlet:void add(java.io.PrintWriter,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean,boolean,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.mbeans.ContainerMBean:void addChild(java.lang.String,java.lang.String)",
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createStandardHost(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Host getHost()"
        ]
    },
    "org.apache.catalina.core.StandardHost:void addChild(org.apache.catalina.Container)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.ContainerMBean:void addChild(java.lang.String,java.lang.String)",
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createStandardContext(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)",
            "org.apache.catalina.startup.HostConfig:void deployDescriptor(org.apache.catalina.util.ContextName,java.io.File,java.lang.String)",
            "org.apache.catalina.startup.HostConfig:void deployWAR(org.apache.catalina.util.ContextName,java.io.File,java.lang.String)",
            "org.apache.catalina.startup.HostConfig:void deployDirectory(org.apache.catalina.util.ContextName,java.io.File,java.lang.String)",
            "org.apache.catalina.startup.HostConfig:void manageApp(org.apache.catalina.Context)",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Context addContext(org.apache.catalina.Host,java.lang.String,java.lang.String)",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Context addWebapp(org.apache.catalina.Host,java.lang.String,java.lang.String)",
            "org.apache.catalina.startup.UserConfig:void deploy(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.core.ContainerBase$PrivilegedAddChild:java.lang.Void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ContainerBase$PrivilegedAddChild:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.mbeans.ContainerMBean:java.lang.String addValve(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.ContextConfig:void configureStart()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void lifecycleEvent(org.apache.catalina.LifecycleEvent)"
        ]
    },
    "org.apache.catalina.startup.Tomcat:org.apache.catalina.Service getService()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.Tomcat:void enableNaming()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createAjpConnector(java.lang.String,java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createHttpConnector(java.lang.String,java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createHttpsConnector(java.lang.String,java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.authenticator.BasicAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.Request:boolean authenticate(javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.authenticator.AuthenticatorBase:java.security.Principal doLogin(org.apache.catalina.connector.Request,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void login(java.lang.String,java.lang.String,org.apache.catalina.connector.Request)"
        ]
    },
    "org.apache.catalina.authenticator.DigestAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.Request:boolean authenticate(javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.connector.Request:boolean isUserInRole(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:boolean isUserInRole(java.lang.String)"
        ]
    },
    "org.apache.catalina.core.ApplicationContext:javax.servlet.ServletRegistration$Dynamic addServlet(java.lang.String,java.lang.String,javax.servlet.Servlet)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationContext:javax.servlet.ServletRegistration$Dynamic addServlet(java.lang.String,java.lang.String)",
            "org.apache.catalina.core.ApplicationContext:javax.servlet.ServletRegistration$Dynamic addServlet(java.lang.String,javax.servlet.Servlet)",
            "org.apache.catalina.core.ApplicationContext:javax.servlet.ServletRegistration$Dynamic addServlet(java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.catalina.startup.Tomcat:org.apache.catalina.Wrapper addServlet(org.apache.catalina.Context,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Wrapper addServlet(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.catalina.startup.Tomcat:void initWebappDefaults(org.apache.catalina.Context)"
        ]
    },
    "org.apache.catalina.startup.Tomcat:org.apache.catalina.Wrapper addServlet(org.apache.catalina.Context,java.lang.String,javax.servlet.Servlet)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Wrapper addServlet(java.lang.String,java.lang.String,javax.servlet.Servlet)"
        ]
    },
    "org.apache.catalina.startup.ContextConfig:void lifecycleEvent(org.apache.catalina.LifecycleEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleSupport:void fireLifecycleEvent(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.catalina.startup.ContextConfig:void webConfig()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void configureStart()"
        ]
    },
    "org.apache.tomcat.util.digester.Digester:void endElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.digester.NodeCreateRule$NodeBuilder:void endElement(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.startup.WebAnnotationSet:void loadClassAnnotation(org.apache.catalina.Context,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.WebAnnotationSet:void loadApplicationListenerAnnotations(org.apache.catalina.Context)",
            "org.apache.catalina.startup.WebAnnotationSet:void loadApplicationFilterAnnotations(org.apache.catalina.Context)",
            "org.apache.catalina.startup.WebAnnotationSet:void loadApplicationServletAnnotations(org.apache.catalina.Context)"
        ]
    },
    "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createStandardContext(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.Tomcat:org.apache.catalina.Context addContext(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.manager.host.HostManagerServlet:void add(javax.servlet.http.HttpServletRequest,java.io.PrintWriter,java.lang.String,boolean,org.apache.tomcat.util.res.StringManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.host.HTMLHostManagerServlet:java.lang.String add(javax.servlet.http.HttpServletRequest,java.lang.String,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.host.HostManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.startup.Tomcat:org.apache.catalina.Wrapper addServlet(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.Tomcat:org.apache.catalina.Wrapper addServlet(java.lang.String,java.lang.String,javax.servlet.Servlet)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.Tomcat:void silence(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Context addContext(org.apache.catalina.Host,java.lang.String,java.lang.String)",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Context addWebapp(org.apache.catalina.Host,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.coyote.AbstractProtocolHandler:void stop()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Connector:void stopInternal()"
        ]
    },
    "org.apache.tomcat.util.net.AprEndpoint:void unbind()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.net.AbstractEndpoint:void stop()",
            "org.apache.tomcat.util.net.AbstractEndpoint:void destroy()"
        ]
    },
    "org.apache.tomcat.util.net.JIoEndpoint:void unbind()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.net.AbstractEndpoint:void stop()",
            "org.apache.tomcat.util.net.AbstractEndpoint:void destroy()"
        ]
    },
    "org.apache.tomcat.util.net.NioEndpoint:void unbind()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.net.AbstractEndpoint:void stop()",
            "org.apache.tomcat.util.net.AbstractEndpoint:void destroy()"
        ]
    },
    "org.apache.catalina.connector.CoyoteInputStream$2:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteInputStream:int available()"
        ]
    },
    "org.apache.catalina.connector.CoyoteReader:boolean ready()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.connector.RequestFacade$GetAttributePrivilegedAction:java.util.Enumeration run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade$GetAttributePrivilegedAction:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:java.util.Enumeration getAttributeNames()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationHttpRequest$AttributeNamesEnumerator:void <init>(org.apache.catalina.core.ApplicationHttpRequest)",
            "org.apache.catalina.core.ApplicationRequest:void setRequest(javax.servlet.ServletRequest)",
            "org.apache.catalina.servlets.CGIServlet:void printServletEnvironment(javax.servlet.ServletOutputStream,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:void addVariableNames(java.util.Collection)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:java.lang.Object getReqAttributeIgnoreCase(java.lang.String)"
        ]
    },
    "org.apache.catalina.core.ApplicationHttpRequest$AttributeNamesEnumerator:void <init>(org.apache.catalina.core.ApplicationHttpRequest)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationHttpRequest:java.util.Enumeration getAttributeNames()"
        ]
    },
    "org.apache.catalina.ssi.SSIServletExternalResolver:void addVariableNames(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIMediator:java.util.Collection getVariableNames()"
        ]
    },
    "org.apache.catalina.connector.RequestFacade$GetRequestDispatcherPrivilegedAction:javax.servlet.RequestDispatcher run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade$GetRequestDispatcherPrivilegedAction:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:javax.servlet.RequestDispatcher getRequestDispatcher(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.ApplicationHttpRequest$AttributeNamesEnumerator:java.lang.String nextElement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationHttpRequest$AttributeNamesEnumerator:java.lang.Object nextElement()"
        ]
    },
    "org.apache.catalina.core.ApplicationHttpRequest:javax.servlet.RequestDispatcher getRequestDispatcher(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.ApplicationHttpRequest:void <init>(javax.servlet.http.HttpServletRequest,org.apache.catalina.Context,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:javax.servlet.ServletRequest wrapRequest(org.apache.catalina.core.ApplicationDispatcher$State)"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher:void unwrapRequest(org.apache.catalina.core.ApplicationDispatcher$State)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void invoke(javax.servlet.ServletRequest,javax.servlet.ServletResponse,org.apache.catalina.core.ApplicationDispatcher$State)"
        ]
    },
    "org.apache.catalina.core.ApplicationRequest:void <init>(javax.servlet.ServletRequest)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:javax.servlet.ServletRequest wrapRequest(org.apache.catalina.core.ApplicationDispatcher$State)"
        ]
    },
    "org.apache.catalina.servlets.CGIServlet$CGIEnvironment:void <init>(org.apache.catalina.servlets.CGIServlet,javax.servlet.http.HttpServletRequest,javax.servlet.ServletContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.CGIServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.servlets.CGIServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.CGIServlet:void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.servlets.DefaultServlet:void doPut(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.WebdavServlet:void doPut(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.servlets.DefaultServlet:void doDelete(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.servlets.DefaultServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.DefaultServlet:void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.servlets.DefaultServlet:void doHead(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.servlets.WebdavServlet:void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.servlets.WebdavServlet:void doPropfind(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.WebdavServlet:void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.servlets.WebdavServlet:void doMkcol(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.WebdavServlet:void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.servlets.WebdavServlet:void doPut(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.servlets.WebdavServlet:void doMove(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.WebdavServlet:void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.servlets.WebdavServlet:void doLock(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.WebdavServlet:void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.servlets.WebdavServlet:void doUnlock(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.WebdavServlet:void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.servlets.WebdavServlet:boolean isLocked(javax.servlet.http.HttpServletRequest)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.WebdavServlet:void doProppatch(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.WebdavServlet:void doMkcol(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.WebdavServlet:void doDelete(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.WebdavServlet:void doPut(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.WebdavServlet:void doMove(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.WebdavServlet:void doLock(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.WebdavServlet:void doUnlock(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.servlets.WebdavServlet:boolean copyResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.WebdavServlet:void doCopy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.WebdavServlet:void doMove(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.servlets.WebdavServlet:boolean deleteResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.WebdavServlet:void doDelete(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.servlets.WebdavServlet:void sendReport(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.WebdavServlet:boolean copyResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.WebdavServlet:boolean deleteResource(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,boolean)"
        ]
    },
    "org.apache.catalina.servlets.WebdavServlet:void parseLockNullProperties(javax.servlet.http.HttpServletRequest,org.apache.catalina.util.XMLWriter,java.lang.String,int,java.util.Vector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.WebdavServlet:void doPropfind(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.servlets.WebdavServlet:java.lang.StringBuilder determineMethodsAllowed(javax.naming.directory.DirContext,javax.servlet.http.HttpServletRequest)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.WebdavServlet:void doOptions(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.WebdavServlet:void doPropfind(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.WebdavServlet:void doMkcol(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.ssi.SSIServletExternalResolver:java.lang.String getVariableValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIMediator:java.lang.String getVariableValue(java.lang.String,java.lang.String)",
            "org.apache.catalina.ssi.SSIMediator:void setDateVariables(boolean)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:void addVariableNames(java.util.Collection)"
        ]
    },
    "org.apache.catalina.ssi.SSIServletExternalResolver:java.lang.String getAbsolutePath(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIServletExternalResolver:org.apache.catalina.ssi.SSIServletExternalResolver$ServletContextAndPath getServletContextAndPathFromNonVirtualPath(java.lang.String)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:org.apache.catalina.ssi.SSIServletExternalResolver$ServletContextAndPath getServletContextAndPathFromVirtualPath(java.lang.String)"
        ]
    },
    "org.apache.catalina.core.ContainerBase:void logAccess(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:void log(org.apache.coyote.Request,org.apache.coyote.Response,long)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean postParseRequest(org.apache.coyote.Request,org.apache.catalina.connector.Request,org.apache.coyote.Response,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.ContainerBase:void logAccess(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long,boolean)"
        ]
    },
    "org.apache.catalina.core.StandardEngine:void logAccess(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:void log(org.apache.coyote.Request,org.apache.coyote.Response,long)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean postParseRequest(org.apache.coyote.Request,org.apache.catalina.connector.Request,org.apache.coyote.Response,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.ContainerBase:void logAccess(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long,boolean)"
        ]
    },
    "org.apache.catalina.filters.RemoteIpFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilterEvent(org.apache.catalina.comet.CometEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain:void doFilterEvent(org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.core.ApplicationFilterChain:void access$100(org.apache.catalina.core.ApplicationFilterChain,org.apache.catalina.comet.CometEvent)"
        ]
    },
    "org.apache.catalina.connector.Request:java.util.Collection getParts()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Request:javax.servlet.http.Part getPart(java.lang.String)",
            "org.apache.catalina.connector.RequestFacade:java.util.Collection getParts()",
            "org.apache.catalina.manager.HTMLManagerServlet:java.lang.String upload(javax.servlet.http.HttpServletRequest,org.apache.tomcat.util.res.StringManager)"
        ]
    },
    "org.apache.catalina.connector.Request:java.lang.String getParameter(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.FormAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.connector.RequestFacade$GetParameterPrivilegedAction:java.lang.String run()",
            "org.apache.catalina.connector.RequestFacade:java.lang.String getParameter(java.lang.String)",
            "org.apache.catalina.filters.CsrfPreventionFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.manager.host.HTMLHostManagerServlet:void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.host.HostManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.host.HostManagerServlet:void add(javax.servlet.http.HttpServletRequest,java.io.PrintWriter,java.lang.String,boolean,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.host.HostManagerServlet:boolean booleanParameter(javax.servlet.http.HttpServletRequest,java.lang.String,boolean,boolean)",
            "org.apache.catalina.manager.HTMLManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.HTMLManagerServlet:void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.HTMLManagerServlet:java.lang.String expireSessions(org.apache.catalina.util.ContextName,javax.servlet.http.HttpServletRequest,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.HTMLManagerServlet:void doSessions(org.apache.catalina.util.ContextName,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.HTMLManagerServlet:void displaySessionsListPage(org.apache.catalina.util.ContextName,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.JMXProxyServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.ManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.ManagerServlet:void doPut(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.ManagerServlet:void expireSessions(java.io.PrintWriter,org.apache.catalina.util.ContextName,javax.servlet.http.HttpServletRequest,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.StatusManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.valves.ExtendedAccessLogValve$RequestParameterElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)"
        ]
    },
    "org.apache.catalina.connector.Request:java.util.Enumeration getParameterNames()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Request:java.util.Map getParameterMap()",
            "org.apache.catalina.connector.RequestFacade$GetParameterNamesPrivilegedAction:java.util.Enumeration run()",
            "org.apache.catalina.connector.RequestFacade:java.util.Enumeration getParameterNames()",
            "org.apache.catalina.filters.RequestDumperFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.servlets.CGIServlet:void printServletEnvironment(javax.servlet.ServletOutputStream,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.connector.Request:java.lang.String[] getParameterValues(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Request:java.util.Map getParameterMap()",
            "org.apache.catalina.connector.RequestFacade$GetParameterValuePrivilegedAction:java.lang.String[] run()",
            "org.apache.catalina.connector.RequestFacade:java.lang.String[] getParameterValues(java.lang.String)",
            "org.apache.catalina.filters.RequestDumperFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.manager.HTMLManagerServlet:void doSessions(org.apache.catalina.util.ContextName,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.servlets.CGIServlet:void printServletEnvironment(javax.servlet.ServletOutputStream,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.filters.RequestFilter:void processCometEvent(java.lang.String,org.apache.catalina.comet.CometEvent,org.apache.catalina.comet.CometFilterChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.filters.RemoteAddrFilter:void doFilterEvent(org.apache.catalina.comet.CometEvent,org.apache.catalina.comet.CometFilterChain)",
            "org.apache.catalina.filters.RemoteHostFilter:void doFilterEvent(org.apache.catalina.comet.CometEvent,org.apache.catalina.comet.CometFilterChain)"
        ]
    },
    "org.apache.catalina.valves.CometConnectionManagerValve:void sessionDestroyed(javax.servlet.http.HttpSessionEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.StandardSession:void expire(boolean)"
        ]
    },
    "org.apache.catalina.core.AsyncContextImpl:void dispatch()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.connector.RequestFacade:boolean isAsyncStarted()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.connector.Request:javax.servlet.AsyncContext startAsync()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:javax.servlet.AsyncContext startAsync()"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:javax.servlet.AsyncContext startAsync(javax.servlet.ServletRequest,javax.servlet.ServletResponse)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.connector.CoyoteOutputStream:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void doForward(javax.servlet.ServletRequest,javax.servlet.ServletResponse)",
            "org.apache.catalina.filters.ExpiresFilter$XServletOutputStream:void close()",
            "org.apache.catalina.loader.WebappLoader:boolean copy(java.io.InputStream,java.io.OutputStream)",
            "org.apache.catalina.startup.Catalina:void stopServer(java.lang.String[])",
            "org.apache.tomcat.util.http.fileupload.disk.DiskFileItem:void readObject(java.io.ObjectInputStream)",
            "org.apache.tomcat.util.http.fileupload.util.Streams:long copy(java.io.InputStream,java.io.OutputStream,boolean,byte[])",
            "org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream:void close()"
        ]
    },
    "org.apache.catalina.connector.CoyoteWriter:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void doForward(javax.servlet.ServletRequest,javax.servlet.ServletResponse)",
            "org.apache.catalina.filters.ExpiresFilter$XPrintWriter:void close()",
            "org.apache.catalina.manager.host.HTMLHostManagerServlet:void list(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.host.HostManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.HTMLManagerServlet:void list(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.ManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.ManagerServlet:void doPut(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.WebdavServlet:void doLock(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.WebdavServlet:void sendReport(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Hashtable)",
            "org.apache.catalina.users.MemoryUserDatabase:void save()",
            "org.apache.catalina.valves.AccessLogValve:void close()"
        ]
    },
    "org.apache.catalina.connector.CoyoteOutputStream:void flush()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.filters.ExpiresFilter$XServletOutputStream:void flush()",
            "org.apache.catalina.ssi.ResponseIncludeWrapper:void flushOutputStreamOrWriter()",
            "org.apache.catalina.startup.Catalina:void stopServer(java.lang.String[])",
            "org.apache.coyote.http11.filters.FlushableGZIPOutputStream:void flush()",
            "org.apache.tomcat.util.http.fileupload.util.Streams:long copy(java.io.InputStream,java.io.OutputStream,boolean,byte[])",
            "org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream:void flush()"
        ]
    },
    "org.apache.catalina.connector.CoyoteWriter:void flush()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteWriter:boolean checkError()",
            "org.apache.catalina.filters.ExpiresFilter$XPrintWriter:void flush()",
            "org.apache.catalina.filters.RequestFilter:void sendErrorWhenNotHttp(javax.servlet.ServletResponse)",
            "org.apache.catalina.manager.host.HTMLHostManagerServlet:void list(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.host.HostManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.HTMLManagerServlet:void list(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.ManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.ManagerServlet:void doPut(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.DefaultServlet:java.io.InputStream renderHtml(java.lang.String,org.apache.naming.resources.CacheEntry)",
            "org.apache.catalina.ssi.ResponseIncludeWrapper:void flushOutputStreamOrWriter()",
            "org.apache.catalina.ssi.SSIFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.ssi.SSIServlet:void processSSI(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.net.URL)",
            "org.apache.catalina.util.DOMWriter:void print(org.w3c.dom.Node)",
            "org.apache.catalina.valves.AccessLogValve:void backgroundProcess()",
            "org.apache.catalina.valves.AccessLogValve:void close()",
            "org.apache.catalina.valves.AccessLogValve:void log(java.lang.String)"
        ]
    },
    "org.apache.catalina.connector.Response:void flushBuffer()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.ResponseFacade$1:java.lang.Void run()",
            "org.apache.catalina.connector.ResponseFacade:void flushBuffer()",
            "org.apache.catalina.core.StandardHostValve:void throwable(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,java.lang.Throwable)",
            "org.apache.catalina.core.StandardHostValve:void status(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.coyote.http11.filters.GzipOutputFilter:long end()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.filters.GzipOutputFilter:long end()",
            "org.apache.coyote.http11.AbstractOutputBuffer:void endRequest()",
            "org.apache.coyote.http11.InternalAprOutputBuffer:void endRequest()"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream:void write(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Catalina:void stopServer(java.lang.String[])",
            "org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream:void write(int)"
        ]
    },
    "org.apache.catalina.loader.WebappLoader:boolean copy(java.io.InputStream,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.loader.WebappLoader:void setRepositories()",
            "org.apache.catalina.loader.WebappLoader:boolean copyDir(javax.naming.directory.DirContext,java.io.File)"
        ]
    },
    "org.apache.catalina.util.IOTools:void flow(java.io.InputStream,java.io.OutputStream,byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.IOTools:void flow(java.io.InputStream,java.io.OutputStream)"
        ]
    },
    "org.apache.coyote.ajp.AjpProcessor$SocketOutputBuffer:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.filters.ChunkedOutputFilter:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)",
            "org.apache.coyote.http11.filters.ChunkedOutputFilter:long end()",
            "org.apache.coyote.http11.filters.GzipOutputFilter$FakeOutputStream:void write(int)",
            "org.apache.coyote.http11.filters.GzipOutputFilter$FakeOutputStream:void write(byte[],int,int)",
            "org.apache.coyote.http11.filters.IdentityOutputFilter:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)",
            "org.apache.coyote.http11.AbstractOutputBuffer:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)",
            "org.apache.coyote.Response:void doWrite(org.apache.tomcat.util.buf.ByteChunk)"
        ]
    },
    "org.apache.coyote.ajp.AjpProcessor:void output(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareResponse()"
        ]
    },
    "org.apache.coyote.http11.filters.FlushableGZIPOutputStream:void deflate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.filters.FlushableGZIPOutputStream:void flush()"
        ]
    },
    "org.apache.coyote.http11.InternalOutputBuffer$OutputStreamOutputBuffer:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.filters.ChunkedOutputFilter:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)",
            "org.apache.coyote.http11.filters.ChunkedOutputFilter:long end()",
            "org.apache.coyote.http11.filters.GzipOutputFilter$FakeOutputStream:void write(int)",
            "org.apache.coyote.http11.filters.GzipOutputFilter$FakeOutputStream:void write(byte[],int,int)",
            "org.apache.coyote.http11.filters.IdentityOutputFilter:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)",
            "org.apache.coyote.http11.AbstractOutputBuffer:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)",
            "org.apache.coyote.Response:void doWrite(org.apache.tomcat.util.buf.ByteChunk)"
        ]
    },
    "org.apache.coyote.http11.InternalOutputBuffer:void commit()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.AbstractHttp11Processor:void action(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.coyote.http11.InternalOutputBuffer:void realWriteBytes(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.buf.ByteChunk:void append(byte[],int,int)",
            "org.apache.tomcat.util.buf.ByteChunk:void flushBuffer()"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.util.Streams:long copy(java.io.InputStream,java.io.OutputStream,boolean,byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.util.Streams:long copy(java.io.InputStream,java.io.OutputStream,boolean)"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream:void writeTo(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.DeferredFileOutputStream:void thresholdReached()",
            "org.apache.tomcat.util.http.fileupload.DeferredFileOutputStream:void writeTo(java.io.OutputStream)"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.IOUtils:long copyLarge(java.io.InputStream,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.IOUtils:int copy(java.io.InputStream,java.io.OutputStream)"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream:void write(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.loader.WebappLoader:boolean copy(java.io.InputStream,java.io.OutputStream)",
            "org.apache.catalina.util.IOTools:void flow(java.io.InputStream,java.io.OutputStream,byte[])",
            "org.apache.coyote.ajp.AjpProcessor$SocketOutputBuffer:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)",
            "org.apache.coyote.ajp.AjpProcessor:void output(byte[],int,int)",
            "org.apache.coyote.http11.filters.FlushableGZIPOutputStream:void deflate()",
            "org.apache.coyote.http11.InternalOutputBuffer$OutputStreamOutputBuffer:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)",
            "org.apache.coyote.http11.InternalOutputBuffer:void commit()",
            "org.apache.coyote.http11.InternalOutputBuffer:void realWriteBytes(byte[],int,int)",
            "org.apache.tomcat.util.http.fileupload.util.Streams:long copy(java.io.InputStream,java.io.OutputStream,boolean,byte[])",
            "org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream:void writeTo(java.io.OutputStream)",
            "org.apache.tomcat.util.http.fileupload.IOUtils:long copyLarge(java.io.InputStream,java.io.OutputStream)",
            "org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream:void write(byte[],int,int)"
        ]
    },
    "org.apache.catalina.connector.OutputBuffer:void realWriteBytes(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.buf.ByteChunk:void append(byte[],int,int)",
            "org.apache.tomcat.util.buf.ByteChunk:void flushBuffer()"
        ]
    },
    "org.apache.catalina.connector.Response:void reset(int,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.connector.ResponseFacade:void reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationHttpResponse:void reset()",
            "org.apache.catalina.core.ApplicationResponse:void reset()"
        ]
    },
    "org.apache.catalina.core.ApplicationHttpResponse:void reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationHttpResponse:void reset()",
            "org.apache.catalina.core.ApplicationResponse:void reset()"
        ]
    },
    "org.apache.catalina.core.ApplicationResponse:void reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationHttpResponse:void reset()",
            "org.apache.catalina.core.ApplicationResponse:void reset()"
        ]
    },
    "org.apache.catalina.authenticator.FormAuthenticator:void saveRequest(org.apache.catalina.connector.Request,org.apache.catalina.Session)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.FormAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)"
        ]
    },
    "org.apache.catalina.valves.AccessLogValve$ByteSentElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.valves.AccessLogValve:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.disk.DiskFileItemFactory:org.apache.tomcat.util.http.fileupload.FileItem createItem(java.lang.String,java.lang.String,boolean,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.FileUploadBase:java.util.List parseRequest(org.apache.tomcat.util.http.fileupload.RequestContext)"
        ]
    },
    "org.apache.tomcat.util.net.AbstractEndpoint:void init()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.AbstractProtocolHandler:void init()"
        ]
    },
    "org.apache.coyote.http11.filters.BufferedInputFilter:void setRequest(org.apache.coyote.Request)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.AbstractInputBuffer:void addActiveFilter(org.apache.coyote.http11.InputFilter)"
        ]
    },
    "org.apache.coyote.http11.filters.ChunkedInputFilter:int readBytes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseCRLF()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()"
        ]
    },
    "org.apache.coyote.http11.filters.IdentityInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.filters.BufferedInputFilter:void setRequest(org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int readBytes()",
            "org.apache.coyote.http11.filters.IdentityInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.IdentityInputFilter:long end()",
            "org.apache.coyote.http11.AbstractInputBuffer:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.InternalAprInputBuffer:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.Request:int doRead(org.apache.tomcat.util.buf.ByteChunk)"
        ]
    },
    "org.apache.coyote.http11.filters.IdentityInputFilter:long end()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.AbstractInputBuffer:void endRequest()"
        ]
    },
    "org.apache.coyote.http11.AbstractInputBuffer:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.filters.BufferedInputFilter:void setRequest(org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int readBytes()",
            "org.apache.coyote.http11.filters.IdentityInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.IdentityInputFilter:long end()",
            "org.apache.coyote.http11.AbstractInputBuffer:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.InternalAprInputBuffer:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.Request:int doRead(org.apache.tomcat.util.buf.ByteChunk)"
        ]
    },
    "org.apache.coyote.http11.InternalAprInputBuffer:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.filters.BufferedInputFilter:void setRequest(org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int readBytes()",
            "org.apache.coyote.http11.filters.IdentityInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.IdentityInputFilter:long end()",
            "org.apache.coyote.http11.AbstractInputBuffer:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.InternalAprInputBuffer:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.Request:int doRead(org.apache.tomcat.util.buf.ByteChunk)"
        ]
    },
    "org.apache.coyote.Request:int doRead(org.apache.tomcat.util.buf.ByteChunk)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.InputBuffer:int realReadBytes(byte[],int,int)"
        ]
    },
    "org.apache.coyote.http11.InternalNioInputBuffer:boolean parseHeaders()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.Http11NioProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.NioChannel)"
        ]
    },
    "org.apache.coyote.http11.InternalNioOutputBuffer:void addToBB(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.InternalNioOutputBuffer:void commit()",
            "org.apache.coyote.http11.InternalNioOutputBuffer:void access$000(org.apache.coyote.http11.InternalNioOutputBuffer,byte[],int,int)"
        ]
    },
    "org.apache.catalina.core.ApplicationFilterChain:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void invoke(javax.servlet.ServletRequest,javax.servlet.ServletResponse,org.apache.catalina.core.ApplicationDispatcher$State)",
            "org.apache.catalina.core.StandardWrapperValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.filters.AddDefaultCharsetFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.filters.CsrfPreventionFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.filters.ExpiresFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.filters.RemoteIpFilter:void doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.filters.RemoteIpFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.filters.RequestDumperFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.filters.RequestFilter:void process(java.lang.String,javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.filters.WebdavFixFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.ssi.SSIFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)"
        ]
    },
    "org.apache.catalina.core.ApplicationFilterChain:void access$000(org.apache.catalina.core.ApplicationFilterChain,javax.servlet.ServletRequest,javax.servlet.ServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain$1:java.lang.Void run()"
        ]
    },
    "org.apache.catalina.ssi.SSIServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.ssi.SSIServlet:void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.HostConfig:void deployDescriptor(org.apache.catalina.util.ContextName,java.io.File,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.HostConfig:void deployApps(java.lang.String)",
            "org.apache.catalina.startup.HostConfig:void deployDescriptors(java.io.File,java.lang.String[])"
        ]
    },
    "org.apache.catalina.startup.HostConfig:void deployWAR(org.apache.catalina.util.ContextName,java.io.File,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.HostConfig:void deployApps(java.lang.String)",
            "org.apache.catalina.startup.HostConfig:void deployWARs(java.io.File,java.lang.String[])"
        ]
    },
    "org.apache.catalina.startup.HostConfig:void deployDirectory(org.apache.catalina.util.ContextName,java.io.File,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.HostConfig:void deployApps(java.lang.String)",
            "org.apache.catalina.startup.HostConfig:void deployDirectories(java.io.File,java.lang.String[])"
        ]
    },
    "org.apache.catalina.startup.HostConfig:void manageApp(org.apache.catalina.Context)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.UserConfig:void deploy(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.UserConfig:void deploy()"
        ]
    },
    "org.apache.catalina.core.ContainerBase$PrivilegedAddChild:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ContainerBase:void addChild(org.apache.catalina.Container)"
        ]
    },
    "org.apache.catalina.authenticator.AuthenticatorBase:void login(java.lang.String,java.lang.String,org.apache.catalina.connector.Request)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Request:void login(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:boolean isUserInRole(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.ApplicationContext:javax.servlet.ServletRegistration$Dynamic addServlet(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationContextFacade:javax.servlet.ServletRegistration$Dynamic addServlet(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.core.ApplicationContext:javax.servlet.ServletRegistration$Dynamic addServlet(java.lang.String,javax.servlet.Servlet)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationContextFacade:javax.servlet.ServletRegistration$Dynamic addServlet(java.lang.String,javax.servlet.Servlet)"
        ]
    },
    "org.apache.catalina.core.ApplicationContext:javax.servlet.ServletRegistration$Dynamic addServlet(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationContextFacade:javax.servlet.ServletRegistration$Dynamic addServlet(java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.tomcat.util.digester.NodeCreateRule$NodeBuilder:void endElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.WebAnnotationSet:void loadApplicationListenerAnnotations(org.apache.catalina.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.WebAnnotationSet:void loadApplicationAnnotations(org.apache.catalina.Context)"
        ]
    },
    "org.apache.catalina.startup.WebAnnotationSet:void loadApplicationFilterAnnotations(org.apache.catalina.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.WebAnnotationSet:void loadApplicationAnnotations(org.apache.catalina.Context)"
        ]
    },
    "org.apache.catalina.startup.WebAnnotationSet:void loadApplicationServletAnnotations(org.apache.catalina.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.WebAnnotationSet:void loadApplicationAnnotations(org.apache.catalina.Context)"
        ]
    },
    "org.apache.catalina.manager.host.HTMLHostManagerServlet:java.lang.String add(javax.servlet.http.HttpServletRequest,java.lang.String,org.apache.tomcat.util.res.StringManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.host.HTMLHostManagerServlet:void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.tomcat.util.net.AbstractEndpoint:void destroy()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.AbstractProtocolHandler:void destroy()"
        ]
    },
    "org.apache.catalina.connector.RequestFacade$GetAttributePrivilegedAction:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:java.util.Enumeration getAttributeNames()"
        ]
    },
    "org.apache.catalina.core.ApplicationHttpRequest:java.util.Enumeration getAttributeNames()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationHttpRequest$AttributeNamesEnumerator:void <init>(org.apache.catalina.core.ApplicationHttpRequest)",
            "org.apache.catalina.core.ApplicationRequest:void setRequest(javax.servlet.ServletRequest)",
            "org.apache.catalina.servlets.CGIServlet:void printServletEnvironment(javax.servlet.ServletOutputStream,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:void addVariableNames(java.util.Collection)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:java.lang.Object getReqAttributeIgnoreCase(java.lang.String)"
        ]
    },
    "org.apache.catalina.ssi.SSIMediator:java.util.Collection getVariableNames()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIPrintenv:long process(org.apache.catalina.ssi.SSIMediator,java.lang.String,java.lang.String[],java.lang.String[],java.io.PrintWriter)"
        ]
    },
    "org.apache.catalina.connector.RequestFacade$GetRequestDispatcherPrivilegedAction:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:javax.servlet.RequestDispatcher getRequestDispatcher(java.lang.String)"
        ]
    },
    "org.apache.catalina.core.ApplicationHttpRequest$AttributeNamesEnumerator:java.lang.Object nextElement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.FormAuthenticator:void saveRequest(org.apache.catalina.connector.Request,org.apache.catalina.Session)",
            "org.apache.catalina.connector.Request:java.util.Map getParameterMap()",
            "org.apache.catalina.connector.Request:void parseLocales()",
            "org.apache.catalina.connector.Response:java.util.Collection getHeaders(java.lang.String)",
            "org.apache.catalina.core.ApplicationHttpRequest$AttributeNamesEnumerator:java.lang.String findNext()",
            "org.apache.catalina.core.ApplicationRequest:void setRequest(javax.servlet.ServletRequest)",
            "org.apache.catalina.filters.ExpiresFilter:void init(javax.servlet.FilterConfig)",
            "org.apache.catalina.filters.FilterBase:void init(javax.servlet.FilterConfig)",
            "org.apache.catalina.filters.RemoteIpFilter$XForwardedRequest:void <init>(javax.servlet.http.HttpServletRequest)",
            "org.apache.catalina.filters.RemoteIpFilter:void doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.filters.RequestDumperFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.loader.JdbcLeakPrevention:java.util.List clearJdbcDriverRegistrations()",
            "org.apache.catalina.loader.WebappClassLoader:java.util.Enumeration findResources(java.lang.String)",
            "org.apache.catalina.loader.WebappClassLoader:org.apache.catalina.loader.ResourceEntry findResourceInternal(java.lang.String,java.lang.String)",
            "org.apache.catalina.manager.host.HostManagerServlet:org.apache.tomcat.util.res.StringManager getStringManager(javax.servlet.http.HttpServletRequest)",
            "org.apache.catalina.manager.util.SessionUtils:java.util.Locale guessLocaleFromSession(javax.servlet.http.HttpSession)",
            "org.apache.catalina.manager.util.SessionUtils:java.lang.Object guessUserFromSession(org.apache.catalina.Session)",
            "org.apache.catalina.manager.ManagerServlet:org.apache.tomcat.util.res.StringManager getStringManager(javax.servlet.http.HttpServletRequest)",
            "org.apache.catalina.manager.StatusManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.StatusTransformer:void writeConnectorState(java.io.PrintWriter,javax.management.ObjectName,java.lang.String,javax.management.MBeanServer,java.util.Vector,java.util.Vector,int)",
            "org.apache.catalina.servlets.CGIServlet$CGIEnvironment:boolean setCGIEnvironment(javax.servlet.http.HttpServletRequest)",
            "org.apache.catalina.servlets.CGIServlet$CGIEnvironment:java.lang.String toString()",
            "org.apache.catalina.servlets.CGIServlet$CGIRunner:java.lang.String[] hashToStringArray(java.util.Hashtable)",
            "org.apache.catalina.servlets.CGIServlet:void printServletEnvironment(javax.servlet.ServletOutputStream,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.WebdavServlet$LockInfo:java.lang.String toString()",
            "org.apache.catalina.servlets.WebdavServlet$LockInfo:void toXML(org.apache.catalina.util.XMLWriter)",
            "org.apache.catalina.servlets.WebdavServlet:void doPropfind(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.WebdavServlet:void doLock(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.WebdavServlet:void doUnlock(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.WebdavServlet:boolean isLocked(java.lang.String,java.lang.String)",
            "org.apache.catalina.servlets.WebdavServlet:boolean copyResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.WebdavServlet:void sendReport(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Hashtable)",
            "org.apache.catalina.servlets.WebdavServlet:void parseProperties(javax.servlet.http.HttpServletRequest,org.apache.catalina.util.XMLWriter,java.lang.String,int,java.util.Vector)",
            "org.apache.catalina.servlets.WebdavServlet:void parseLockNullProperties(javax.servlet.http.HttpServletRequest,org.apache.catalina.util.XMLWriter,java.lang.String,int,java.util.Vector)",
            "org.apache.catalina.servlets.WebdavServlet:boolean generateLockDiscovery(java.lang.String,org.apache.catalina.util.XMLWriter)",
            "org.apache.catalina.session.ManagerBase:java.util.HashMap getSession(java.lang.String)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:void addVariableNames(java.util.Collection)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:java.lang.Object getReqAttributeIgnoreCase(java.lang.String)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:java.lang.String getCGIVariable(java.lang.String)",
            "org.apache.catalina.startup.CatalinaProperties:void loadProperties()",
            "org.apache.catalina.startup.ContextConfig:void processAnnotationsJar(java.net.URL,org.apache.catalina.deploy.WebXml)",
            "org.apache.catalina.startup.ContextConfig:void processAnnotationsJndi(java.net.URL,org.apache.catalina.deploy.WebXml)",
            "org.apache.catalina.startup.ExpandWar:java.lang.String expand(org.apache.catalina.Host,java.net.URL,java.lang.String)",
            "org.apache.catalina.startup.ExpandWar:void validate(org.apache.catalina.Host,java.net.URL,java.lang.String)",
            "org.apache.catalina.startup.TldConfig:void tldScanJar(java.net.JarURLConnection)",
            "org.apache.catalina.startup.UserConfig:void deploy()",
            "org.apache.catalina.valves.CrawlerSessionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.naming.factory.BeanFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.MailSessionFactory$1:javax.mail.Session run()",
            "org.apache.naming.factory.SendMailFactory$1:javax.mail.internet.MimePartDataSource run()",
            "org.apache.naming.resources.RecyclableNamingEnumeration:java.lang.Object nextElement()",
            "org.apache.naming.resources.WARDirContext:void loadEntries()",
            "org.apache.naming.HandlerRef:java.lang.String toString()",
            "org.apache.naming.NamingContext:void <init>(java.util.Hashtable,java.lang.String)",
            "org.apache.naming.ResourceRef:java.lang.String toString()",
            "org.apache.naming.ServiceRef:java.lang.String toString()",
            "org.apache.tomcat.util.http.MimeHeaders:java.lang.String toString()",
            "org.apache.tomcat.util.http.Parameters:java.lang.String paramsAsString()",
            "org.apache.tomcat.util.modeler.modules.MbeansDescriptorsIntrospectionSource:org.apache.tomcat.util.modeler.ManagedBean createManagedBean(org.apache.tomcat.util.modeler.Registry,java.lang.String,java.lang.Class,java.lang.String)"
        ]
    },
    "org.apache.catalina.servlets.CGIServlet:void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.servlets.DefaultServlet:void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.servlets.WebdavServlet:void doProppatch(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.WebdavServlet:void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.servlets.WebdavServlet:void doDelete(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.servlets.WebdavServlet:void doCopy(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.WebdavServlet:void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.servlets.WebdavServlet:boolean deleteResource(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.WebdavServlet:void doMove(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.WebdavServlet:boolean copyResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.WebdavServlet:boolean deleteResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.servlets.WebdavServlet:void doOptions(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.ssi.SSIMediator:java.lang.String getVariableValue(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIEcho:long process(org.apache.catalina.ssi.SSIMediator,java.lang.String,java.lang.String[],java.lang.String[],java.io.PrintWriter)",
            "org.apache.catalina.ssi.SSIMediator:java.lang.String getVariableValue(java.lang.String)"
        ]
    },
    "org.apache.catalina.ssi.SSIMediator:void setDateVariables(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIMediator:void setConfigTimeFmt(java.lang.String,boolean)"
        ]
    },
    "org.apache.catalina.ssi.SSIServletExternalResolver:org.apache.catalina.ssi.SSIServletExternalResolver$ServletContextAndPath getServletContextAndPathFromNonVirtualPath(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIServletExternalResolver:org.apache.catalina.ssi.SSIServletExternalResolver$ServletContextAndPath getServletContextAndPath(java.lang.String,boolean)"
        ]
    },
    "org.apache.catalina.ssi.SSIServletExternalResolver:org.apache.catalina.ssi.SSIServletExternalResolver$ServletContextAndPath getServletContextAndPathFromVirtualPath(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIServletExternalResolver:org.apache.catalina.ssi.SSIServletExternalResolver$ServletContextAndPath getServletContextAndPath(java.lang.String,boolean)"
        ]
    },
    "org.apache.catalina.connector.CoyoteAdapter:void log(org.apache.coyote.Request,org.apache.coyote.Response,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()",
            "org.apache.coyote.ajp.AbstractAjpProcessor:void parseHost(org.apache.tomcat.util.buf.MessageBytes)",
            "org.apache.coyote.ajp.AjpAprProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.coyote.ajp.AjpAprProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState asyncDispatch(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.coyote.ajp.AjpProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.coyote.ajp.AjpProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState asyncDispatch(org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.coyote.http11.AbstractHttp11Processor:void endRequest()",
            "org.apache.coyote.http11.Http11AprProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState event(org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.coyote.http11.Http11AprProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.coyote.http11.Http11AprProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState asyncDispatch(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.coyote.http11.Http11AprProcessor:void prepareRequest()",
            "org.apache.coyote.http11.Http11AprProcessor:void parseHost(org.apache.tomcat.util.buf.MessageBytes)",
            "org.apache.coyote.http11.Http11NioProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState event(org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.coyote.http11.Http11NioProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState asyncDispatch(org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.coyote.http11.Http11NioProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.NioChannel)",
            "org.apache.coyote.http11.Http11NioProcessor:void prepareRequest()",
            "org.apache.coyote.http11.Http11NioProcessor:void parseHost(org.apache.tomcat.util.buf.MessageBytes)",
            "org.apache.coyote.http11.Http11Processor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.coyote.http11.Http11Processor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState asyncDispatch(org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()",
            "org.apache.coyote.http11.Http11Processor:void parseHost(org.apache.tomcat.util.buf.MessageBytes)"
        ]
    },
    "org.apache.catalina.core.ApplicationFilterChain:void doFilterEvent(org.apache.catalina.comet.CometEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardWrapperValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardWrapperValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.filters.RequestFilter:void processCometEvent(java.lang.String,org.apache.catalina.comet.CometEvent,org.apache.catalina.comet.CometFilterChain)"
        ]
    },
    "org.apache.catalina.core.ApplicationFilterChain:void access$100(org.apache.catalina.core.ApplicationFilterChain,org.apache.catalina.comet.CometEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain$2:java.lang.Void run()"
        ]
    },
    "org.apache.catalina.connector.Request:javax.servlet.http.Part getPart(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:javax.servlet.http.Part getPart(java.lang.String)"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:java.util.Collection getParts()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.HTMLManagerServlet:java.lang.String upload(javax.servlet.http.HttpServletRequest,org.apache.tomcat.util.res.StringManager)"
        ]
    },
    "org.apache.catalina.manager.HTMLManagerServlet:java.lang.String upload(javax.servlet.http.HttpServletRequest,org.apache.tomcat.util.res.StringManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.HTMLManagerServlet:void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.connector.RequestFacade$GetParameterPrivilegedAction:java.lang.String run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade$GetParameterPrivilegedAction:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:java.lang.String getParameter(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.filters.CsrfPreventionFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.manager.host.HTMLHostManagerServlet:void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.host.HostManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.host.HostManagerServlet:void add(javax.servlet.http.HttpServletRequest,java.io.PrintWriter,java.lang.String,boolean,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.host.HostManagerServlet:boolean booleanParameter(javax.servlet.http.HttpServletRequest,java.lang.String,boolean,boolean)",
            "org.apache.catalina.manager.HTMLManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.HTMLManagerServlet:void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.HTMLManagerServlet:java.lang.String expireSessions(org.apache.catalina.util.ContextName,javax.servlet.http.HttpServletRequest,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.HTMLManagerServlet:void doSessions(org.apache.catalina.util.ContextName,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.HTMLManagerServlet:void displaySessionsListPage(org.apache.catalina.util.ContextName,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.JMXProxyServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.ManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.ManagerServlet:void doPut(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.ManagerServlet:void expireSessions(java.io.PrintWriter,org.apache.catalina.util.ContextName,javax.servlet.http.HttpServletRequest,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.StatusManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.filters.CsrfPreventionFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.manager.host.HostManagerServlet:boolean booleanParameter(javax.servlet.http.HttpServletRequest,java.lang.String,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.host.HostManagerServlet:void add(javax.servlet.http.HttpServletRequest,java.io.PrintWriter,java.lang.String,boolean,org.apache.tomcat.util.res.StringManager)"
        ]
    },
    "org.apache.catalina.manager.HTMLManagerServlet:java.lang.String expireSessions(org.apache.catalina.util.ContextName,javax.servlet.http.HttpServletRequest,org.apache.tomcat.util.res.StringManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.HTMLManagerServlet:void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.manager.JMXProxyServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.manager.ManagerServlet:void expireSessions(java.io.PrintWriter,org.apache.catalina.util.ContextName,javax.servlet.http.HttpServletRequest,org.apache.tomcat.util.res.StringManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.ManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.manager.StatusManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.valves.ExtendedAccessLogValve$RequestParameterElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.valves.AccessLogValve:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)"
        ]
    },
    "org.apache.catalina.connector.Request:java.util.Map getParameterMap()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade$GetParameterMapPrivilegedAction:java.util.Map run()",
            "org.apache.catalina.connector.RequestFacade:java.util.Map getParameterMap()",
            "org.apache.catalina.core.ApplicationHttpRequest:void parseParameters()"
        ]
    },
    "org.apache.catalina.connector.RequestFacade$GetParameterNamesPrivilegedAction:java.util.Enumeration run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade$GetParameterNamesPrivilegedAction:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:java.util.Enumeration getParameterNames()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.filters.RequestDumperFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.servlets.CGIServlet:void printServletEnvironment(javax.servlet.ServletOutputStream,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.connector.RequestFacade$GetParameterValuePrivilegedAction:java.lang.String[] run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade$GetParameterValuePrivilegedAction:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:java.lang.String[] getParameterValues(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.filters.RequestDumperFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.manager.HTMLManagerServlet:void doSessions(org.apache.catalina.util.ContextName,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.servlets.CGIServlet:void printServletEnvironment(javax.servlet.ServletOutputStream,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.session.StandardSession:void expire(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.StandardManager:void doUnload()",
            "org.apache.catalina.session.StandardSession:boolean isValid()",
            "org.apache.catalina.session.StandardSession:void expire()"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:javax.servlet.AsyncContext startAsync()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.filters.ExpiresFilter$XServletOutputStream:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void doForward(javax.servlet.ServletRequest,javax.servlet.ServletResponse)",
            "org.apache.catalina.filters.ExpiresFilter$XServletOutputStream:void close()",
            "org.apache.catalina.loader.WebappLoader:boolean copy(java.io.InputStream,java.io.OutputStream)",
            "org.apache.catalina.startup.Catalina:void stopServer(java.lang.String[])",
            "org.apache.tomcat.util.http.fileupload.disk.DiskFileItem:void readObject(java.io.ObjectInputStream)",
            "org.apache.tomcat.util.http.fileupload.util.Streams:long copy(java.io.InputStream,java.io.OutputStream,boolean,byte[])",
            "org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream:void close()"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.disk.DiskFileItem:void readObject(java.io.ObjectInputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.DeferredFileOutputStream:void close()"
        ]
    },
    "org.apache.catalina.filters.ExpiresFilter$XPrintWriter:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void doForward(javax.servlet.ServletRequest,javax.servlet.ServletResponse)",
            "org.apache.catalina.filters.ExpiresFilter$XPrintWriter:void close()",
            "org.apache.catalina.manager.host.HTMLHostManagerServlet:void list(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.host.HostManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.HTMLManagerServlet:void list(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.ManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.ManagerServlet:void doPut(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.WebdavServlet:void doLock(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.WebdavServlet:void sendReport(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Hashtable)",
            "org.apache.catalina.users.MemoryUserDatabase:void save()",
            "org.apache.catalina.valves.AccessLogValve:void close()"
        ]
    },
    "org.apache.catalina.manager.host.HTMLHostManagerServlet:void list(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,org.apache.tomcat.util.res.StringManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.host.HTMLHostManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.host.HTMLHostManagerServlet:void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.manager.HTMLManagerServlet:void list(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,org.apache.tomcat.util.res.StringManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.HTMLManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.HTMLManagerServlet:void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.users.MemoryUserDatabase:void save()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.users.MemoryUserDatabase:void close()",
            "org.apache.catalina.users.MemoryUserDatabaseFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)"
        ]
    },
    "org.apache.catalina.valves.AccessLogValve:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.valves.AccessLogValve:boolean rotate(java.lang.String)",
            "org.apache.catalina.valves.AccessLogValve:void log(java.lang.String)",
            "org.apache.catalina.valves.AccessLogValve:void stopInternal()"
        ]
    },
    "org.apache.catalina.filters.ExpiresFilter$XServletOutputStream:void flush()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.filters.ExpiresFilter$XServletOutputStream:void flush()",
            "org.apache.catalina.ssi.ResponseIncludeWrapper:void flushOutputStreamOrWriter()",
            "org.apache.catalina.startup.Catalina:void stopServer(java.lang.String[])",
            "org.apache.coyote.http11.filters.FlushableGZIPOutputStream:void flush()",
            "org.apache.tomcat.util.http.fileupload.util.Streams:long copy(java.io.InputStream,java.io.OutputStream,boolean,byte[])",
            "org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream:void flush()"
        ]
    },
    "org.apache.catalina.ssi.ResponseIncludeWrapper:void flushOutputStreamOrWriter()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:java.lang.String getFileText(java.lang.String,boolean)"
        ]
    },
    "org.apache.coyote.http11.filters.FlushableGZIPOutputStream:void flush()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Catalina:void stopServer(java.lang.String[])",
            "org.apache.coyote.http11.filters.FlushableGZIPOutputStream:void flush()",
            "org.apache.coyote.http11.filters.GzipOutputFilter:void flush()",
            "org.apache.tomcat.util.http.fileupload.util.Streams:long copy(java.io.InputStream,java.io.OutputStream,boolean,byte[])",
            "org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream:void flush()"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream:void flush()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Catalina:void stopServer(java.lang.String[])",
            "org.apache.coyote.http11.filters.FlushableGZIPOutputStream:void flush()",
            "org.apache.tomcat.util.http.fileupload.util.Streams:long copy(java.io.InputStream,java.io.OutputStream,boolean,byte[])",
            "org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream:void flush()",
            "org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream:void close()"
        ]
    },
    "org.apache.catalina.connector.CoyoteWriter:boolean checkError()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.users.MemoryUserDatabase:void save()"
        ]
    },
    "org.apache.catalina.filters.ExpiresFilter$XPrintWriter:void flush()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.filters.ExpiresFilter$XPrintWriter:void flush()",
            "org.apache.catalina.filters.RequestFilter:void sendErrorWhenNotHttp(javax.servlet.ServletResponse)",
            "org.apache.catalina.manager.host.HTMLHostManagerServlet:void list(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.host.HostManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.HTMLManagerServlet:void list(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.ManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.ManagerServlet:void doPut(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.DefaultServlet:java.io.InputStream renderHtml(java.lang.String,org.apache.naming.resources.CacheEntry)",
            "org.apache.catalina.ssi.ResponseIncludeWrapper:void flushOutputStreamOrWriter()",
            "org.apache.catalina.ssi.SSIFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.ssi.SSIServlet:void processSSI(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.net.URL)",
            "org.apache.catalina.util.DOMWriter:void print(org.w3c.dom.Node)",
            "org.apache.catalina.valves.AccessLogValve:void backgroundProcess()",
            "org.apache.catalina.valves.AccessLogValve:void close()",
            "org.apache.catalina.valves.AccessLogValve:void log(java.lang.String)"
        ]
    },
    "org.apache.catalina.filters.RequestFilter:void sendErrorWhenNotHttp(javax.servlet.ServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.filters.RequestFilter:void process(java.lang.String,javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)"
        ]
    },
    "org.apache.catalina.servlets.DefaultServlet:java.io.InputStream renderHtml(java.lang.String,org.apache.naming.resources.CacheEntry)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.DefaultServlet:java.io.InputStream render(java.lang.String,org.apache.naming.resources.CacheEntry)"
        ]
    },
    "org.apache.catalina.util.DOMWriter:void print(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.WebdavServlet:void doLock(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.util.DOMWriter:void print(org.w3c.dom.Node)"
        ]
    },
    "org.apache.catalina.valves.AccessLogValve:void backgroundProcess()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ContainerBase:void backgroundProcess()"
        ]
    },
    "org.apache.catalina.valves.AccessLogValve:void log(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.valves.AccessLogValve:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)"
        ]
    },
    "org.apache.catalina.connector.ResponseFacade$1:java.lang.Void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.ResponseFacade$1:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.connector.ResponseFacade:void flushBuffer()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.loader.WebappLoader:void setRepositories()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.loader.WebappLoader:void startInternal()"
        ]
    },
    "org.apache.catalina.loader.WebappLoader:boolean copyDir(javax.naming.directory.DirContext,java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.loader.WebappLoader:void setRepositories()",
            "org.apache.catalina.loader.WebappLoader:boolean copyDir(javax.naming.directory.DirContext,java.io.File)"
        ]
    },
    "org.apache.catalina.util.IOTools:void flow(java.io.InputStream,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.CGIServlet$CGIEnvironment:void expandCGIScript()",
            "org.apache.catalina.servlets.CGIServlet$CGIRunner:void run()",
            "org.apache.catalina.startup.HostConfig:void deployDirectory(org.apache.catalina.util.ContextName,java.io.File,java.lang.String)"
        ]
    },
    "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareResponse()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void action(org.apache.coyote.ActionCode,java.lang.Object)",
            "org.apache.coyote.ajp.AjpAprProcessor$SocketOutputBuffer:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)",
            "org.apache.coyote.ajp.AjpAprProcessor:void finish()",
            "org.apache.coyote.ajp.AjpProcessor$SocketOutputBuffer:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)",
            "org.apache.coyote.ajp.AjpProcessor:void finish()"
        ]
    },
    "org.apache.tomcat.util.buf.ByteChunk:void append(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.FormAuthenticator:void saveRequest(org.apache.catalina.connector.Request,org.apache.catalina.Session)",
            "org.apache.catalina.connector.OutputBuffer:void writeBytes(byte[],int,int)",
            "org.apache.catalina.connector.Request:byte[] readChunkedPostBody()",
            "org.apache.catalina.realm.JNDIRealm:boolean compareCredentials(javax.naming.directory.DirContext,org.apache.catalina.realm.JNDIRealm$User,java.lang.String)",
            "org.apache.coyote.http11.InternalOutputBuffer$OutputStreamOutputBuffer:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)",
            "org.apache.coyote.http11.InternalOutputBuffer:void commit()",
            "org.apache.tomcat.util.buf.ByteChunk:void append(org.apache.tomcat.util.buf.ByteChunk)",
            "org.apache.tomcat.util.buf.ByteChunk:int substract(org.apache.tomcat.util.buf.ByteChunk)",
            "org.apache.tomcat.util.buf.IntermediateOutputStream:void write(byte[],int,int)",
            "org.apache.tomcat.util.http.Parameters:void processParameters(byte[],int,int,java.lang.String)"
        ]
    },
    "org.apache.tomcat.util.buf.ByteChunk:void flushBuffer()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.OutputBuffer:void doFlush(boolean)",
            "org.apache.catalina.connector.OutputBuffer:void writeBytes(byte[],int,int)",
            "org.apache.coyote.http11.InternalOutputBuffer:void flush()",
            "org.apache.coyote.http11.InternalOutputBuffer:void endRequest()",
            "org.apache.tomcat.util.buf.ByteChunk:void append(byte)",
            "org.apache.tomcat.util.buf.ByteChunk:void append(byte[],int,int)"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.util.Streams:long copy(java.io.InputStream,java.io.OutputStream,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.util.Streams:java.lang.String asString(java.io.InputStream)",
            "org.apache.tomcat.util.http.fileupload.util.Streams:java.lang.String asString(java.io.InputStream,java.lang.String)",
            "org.apache.tomcat.util.http.fileupload.FileUploadBase:java.util.List parseRequest(org.apache.tomcat.util.http.fileupload.RequestContext)",
            "org.apache.tomcat.util.http.fileupload.MultipartStream:int readBodyData(java.io.OutputStream)"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.DeferredFileOutputStream:void thresholdReached()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream:void checkThreshold(int)"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.DeferredFileOutputStream:void writeTo(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.tomcat.util.http.fileupload.IOUtils:int copy(java.io.InputStream,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.disk.DiskFileItem:void write(java.io.File)",
            "org.apache.tomcat.util.http.fileupload.disk.DiskFileItem:void readObject(java.io.ObjectInputStream)",
            "org.apache.tomcat.util.http.fileupload.DeferredFileOutputStream:void writeTo(java.io.OutputStream)"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.FileUploadBase:java.util.List parseRequest(org.apache.tomcat.util.http.fileupload.RequestContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.servlet.ServletFileUpload:java.util.List parseRequest(javax.servlet.http.HttpServletRequest)"
        ]
    },
    "org.apache.coyote.AbstractProtocolHandler:void init()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Connector:void initInternal()",
            "org.apache.coyote.http11.AbstractHttp11JsseProtocol:void init()"
        ]
    },
    "org.apache.coyote.http11.AbstractInputBuffer:void addActiveFilter(org.apache.coyote.http11.InputFilter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.AbstractHttp11Processor:boolean addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)",
            "org.apache.coyote.http11.AbstractHttp11Processor:void action(org.apache.coyote.ActionCode,java.lang.Object)",
            "org.apache.coyote.http11.Http11AprProcessor:void actionInternal(org.apache.coyote.ActionCode,java.lang.Object)",
            "org.apache.coyote.http11.Http11AprProcessor:void prepareRequest()",
            "org.apache.coyote.http11.Http11NioProcessor:void actionInternal(org.apache.coyote.ActionCode,java.lang.Object)",
            "org.apache.coyote.http11.Http11NioProcessor:void prepareRequest()",
            "org.apache.coyote.http11.Http11Processor:void actionInternal(org.apache.coyote.ActionCode,java.lang.Object)",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ]
    },
    "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.filters.BufferedInputFilter:void setRequest(org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int readBytes()",
            "org.apache.coyote.http11.filters.IdentityInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.IdentityInputFilter:long end()",
            "org.apache.coyote.http11.AbstractInputBuffer:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.InternalAprInputBuffer:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.Request:int doRead(org.apache.tomcat.util.buf.ByteChunk)"
        ]
    },
    "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseChunkHeader()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)"
        ]
    },
    "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseCRLF()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)"
        ]
    },
    "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseEndChunk()"
        ]
    },
    "org.apache.coyote.http11.AbstractInputBuffer:void endRequest()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.AbstractHttp11Processor:void endRequest()"
        ]
    },
    "org.apache.catalina.connector.InputBuffer:int realReadBytes(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.InputBuffer:int realReadChars(char[],int,int)",
            "org.apache.catalina.connector.Request:boolean read()",
            "org.apache.tomcat.util.buf.ByteChunk:int substract()",
            "org.apache.tomcat.util.buf.ByteChunk:int substract(org.apache.tomcat.util.buf.ByteChunk)",
            "org.apache.tomcat.util.buf.ByteChunk:int substract(byte[],int,int)"
        ]
    },
    "org.apache.coyote.http11.InternalNioOutputBuffer:void commit()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.AbstractHttp11Processor:void action(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.coyote.http11.InternalNioOutputBuffer:void access$000(org.apache.coyote.http11.InternalNioOutputBuffer,byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.InternalNioOutputBuffer$SocketOutputBuffer:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)"
        ]
    },
    "org.apache.catalina.filters.AddDefaultCharsetFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.filters.ExpiresFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.filters.RequestFilter:void process(java.lang.String,javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.filters.RemoteAddrFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.filters.RemoteHostFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)"
        ]
    },
    "org.apache.catalina.filters.WebdavFixFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.core.ApplicationFilterChain$1:java.lang.Void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain$1:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.startup.HostConfig:void deployApps(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.HostConfig:void check(java.lang.String)"
        ]
    },
    "org.apache.catalina.startup.HostConfig:void deployDescriptors(java.io.File,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.HostConfig:void deployApps()"
        ]
    },
    "org.apache.catalina.startup.HostConfig:void deployWARs(java.io.File,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.HostConfig:void deployApps()"
        ]
    },
    "org.apache.catalina.startup.HostConfig:void deployDirectories(java.io.File,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.HostConfig:void deployApps()"
        ]
    },
    "org.apache.catalina.startup.UserConfig:void deploy()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.UserConfig:void start()"
        ]
    },
    "org.apache.catalina.connector.Request:void login(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:void login(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.core.ApplicationContextFacade:javax.servlet.ServletRegistration$Dynamic addServlet(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.ApplicationContextFacade:javax.servlet.ServletRegistration$Dynamic addServlet(java.lang.String,javax.servlet.Servlet)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.ApplicationContextFacade:javax.servlet.ServletRegistration$Dynamic addServlet(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.WebAnnotationSet:void loadApplicationAnnotations(org.apache.catalina.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void applicationAnnotationsConfig()"
        ]
    },
    "org.apache.coyote.AbstractProtocolHandler:void destroy()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Connector:void destroyInternal()"
        ]
    },
    "org.apache.catalina.ssi.SSIPrintenv:long process(org.apache.catalina.ssi.SSIMediator,java.lang.String,java.lang.String[],java.lang.String[],java.io.PrintWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIProcessor:long process(java.io.Reader,long,java.io.PrintWriter)"
        ]
    },
    "org.apache.catalina.connector.Request:void parseLocales()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Request:java.util.Locale getLocale()",
            "org.apache.catalina.connector.Request:java.util.Enumeration getLocales()"
        ]
    },
    "org.apache.catalina.connector.Response:java.util.Collection getHeaders(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.ResponseFacade:java.util.Collection getHeaders(java.lang.String)",
            "org.apache.catalina.filters.RequestDumperFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.valves.AccessLogValve$ResponseHeaderElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.valves.ExtendedAccessLogValve$ResponseAllHeaderElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)"
        ]
    },
    "org.apache.catalina.core.ApplicationHttpRequest$AttributeNamesEnumerator:java.lang.String findNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationHttpRequest$AttributeNamesEnumerator:boolean hasMoreElements()",
            "org.apache.catalina.core.ApplicationHttpRequest$AttributeNamesEnumerator:java.lang.String nextElement()"
        ]
    },
    "org.apache.catalina.filters.ExpiresFilter:void init(javax.servlet.FilterConfig)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterConfig:void initFilter()"
        ]
    },
    "org.apache.catalina.filters.FilterBase:void init(javax.servlet.FilterConfig)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterConfig:void initFilter()",
            "org.apache.catalina.filters.AddDefaultCharsetFilter:void init(javax.servlet.FilterConfig)",
            "org.apache.catalina.filters.CsrfPreventionFilter:void init(javax.servlet.FilterConfig)"
        ]
    },
    "org.apache.catalina.loader.JdbcLeakPrevention:java.util.List clearJdbcDriverRegistrations()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.loader.WebappClassLoader:java.util.Enumeration findResources(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.loader.WebappClassLoader:org.apache.catalina.loader.ResourceEntry findResourceInternal(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.loader.WebappClassLoader$PrivilegedFindResourceByName:org.apache.catalina.loader.ResourceEntry run()",
            "org.apache.catalina.loader.WebappClassLoader:java.net.URL findResource(java.lang.String)",
            "org.apache.catalina.loader.WebappClassLoader:java.lang.Class findClassInternal(java.lang.String)"
        ]
    },
    "org.apache.catalina.manager.host.HostManagerServlet:org.apache.tomcat.util.res.StringManager getStringManager(javax.servlet.http.HttpServletRequest)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.host.HTMLHostManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.host.HTMLHostManagerServlet:void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.host.HostManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.manager.util.SessionUtils:java.util.Locale guessLocaleFromSession(javax.servlet.http.HttpSession)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.util.SessionUtils:java.util.Locale guessLocaleFromSession(org.apache.catalina.Session)"
        ]
    },
    "org.apache.catalina.manager.util.SessionUtils:java.lang.Object guessUserFromSession(org.apache.catalina.Session)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.JspHelper:java.lang.String guessDisplayUserFromSession(org.apache.catalina.Session)"
        ]
    },
    "org.apache.catalina.manager.ManagerServlet:org.apache.tomcat.util.res.StringManager getStringManager(javax.servlet.http.HttpServletRequest)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.HTMLManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.HTMLManagerServlet:void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.ManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.ManagerServlet:void doPut(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.manager.StatusTransformer:void writeConnectorState(java.io.PrintWriter,javax.management.ObjectName,java.lang.String,javax.management.MBeanServer,java.util.Vector,java.util.Vector,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.StatusManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.servlets.CGIServlet$CGIEnvironment:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Connector:java.lang.String createObjectNameKeyProperties(java.lang.String)",
            "org.apache.catalina.connector.CoyoteAdapter:void parseSessionSslId(org.apache.catalina.connector.Request)",
            "org.apache.catalina.connector.MapperListener:void containerEvent(org.apache.catalina.ContainerEvent)",
            "org.apache.catalina.connector.Request:java.lang.Object getAttribute(java.lang.String)",
            "org.apache.catalina.core.ApplicationFilterFactory:org.apache.catalina.core.ApplicationFilterChain createFilterChain(javax.servlet.ServletRequest,org.apache.catalina.Wrapper,javax.servlet.Servlet)",
            "org.apache.catalina.core.ApplicationHttpRequest:java.lang.Object getAttribute(java.lang.String)",
            "org.apache.catalina.core.ApplicationHttpRequest:java.lang.String getParameter(java.lang.String)",
            "org.apache.catalina.core.ApplicationHttpRequest:java.lang.String[] getParameterValues(java.lang.String)",
            "org.apache.catalina.core.ApplicationHttpRequest:java.lang.String[] mergeValues(java.lang.Object,java.lang.Object)",
            "org.apache.catalina.core.NamingContextListener:void addResourceLink(org.apache.catalina.deploy.ContextResourceLink)",
            "org.apache.catalina.deploy.WebXml:void appendElement(java.lang.StringBuilder,java.lang.String,java.lang.String,java.lang.Object)",
            "org.apache.catalina.loader.WebappClassLoader:void checkThreadLocalMapForLeaks(java.lang.Object,java.lang.reflect.Field)",
            "org.apache.catalina.loader.WebappLoader:void propertyChange(java.beans.PropertyChangeEvent)",
            "org.apache.catalina.manager.JMXProxyServlet:void getAttribute(java.io.PrintWriter,java.lang.String,java.lang.String)",
            "org.apache.catalina.manager.JMXProxyServlet:void listBeans(java.io.PrintWriter,java.lang.String)",
            "org.apache.catalina.manager.JspHelper:java.lang.String escapeXml(java.lang.Object)",
            "org.apache.catalina.manager.StatusTransformer:java.lang.String filter(java.lang.Object)",
            "org.apache.catalina.mbeans.MBeanUtils:javax.management.ObjectName createObjectName(java.lang.String,org.apache.catalina.connector.Connector)",
            "org.apache.catalina.realm.JNDIRealm:java.lang.String getAttributeValue(java.lang.String,javax.naming.directory.Attributes)",
            "org.apache.catalina.servlets.CGIServlet$CGIRunner:java.lang.String[] hashToStringArray(java.util.Hashtable)",
            "org.apache.catalina.servlets.CGIServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.session.ManagerBase:java.lang.String getSessionAttribute(java.lang.String,java.lang.String)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:java.lang.String getVariableValue(java.lang.String)",
            "org.apache.catalina.users.MemoryUserDatabaseFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.catalina.valves.AccessLogValve$RequestAttributeElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.valves.AccessLogValve$SessionAttributeElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.valves.ExtendedAccessLogValve:java.lang.String wrap(java.lang.Object)",
            "org.apache.naming.factory.DataSourceLinkFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.EjbFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.OpenEjbFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.ResourceEnvFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.ResourceFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.ResourceLinkFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.TransactionFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.resources.DirContextURLConnection:java.lang.String getHeaderValueAsString(java.lang.Object)",
            "org.apache.naming.resources.ProxyDirContext:java.lang.Object lookup(java.lang.String)",
            "org.apache.naming.resources.ProxyDirContext:org.apache.naming.resources.CacheEntry lookupCache(java.lang.String)",
            "org.apache.naming.resources.ProxyDirContext:void cacheLoad(org.apache.naming.resources.CacheEntry)",
            "org.apache.naming.resources.ResourceAttributes:long getContentLength()",
            "org.apache.naming.resources.ResourceAttributes:long getCreation()",
            "org.apache.naming.resources.ResourceAttributes:java.util.Date getCreationDate()",
            "org.apache.naming.resources.ResourceAttributes:long getLastModified()",
            "org.apache.naming.resources.ResourceAttributes:java.util.Date getLastModifiedDate()",
            "org.apache.naming.resources.ResourceAttributes:java.lang.String getName()",
            "org.apache.naming.resources.ResourceAttributes:java.lang.String getResourceType()",
            "org.apache.naming.resources.ResourceAttributes:java.lang.String getETag()",
            "org.apache.tomcat.util.bcel.classfile.JavaClass:java.lang.String indent(java.lang.Object)",
            "org.apache.tomcat.util.digester.CallMethodRule:void end(java.lang.String,java.lang.String)",
            "org.apache.tomcat.util.modeler.modules.MbeansSource:void updateField(javax.management.ObjectName,java.lang.String,java.lang.Object)",
            "org.apache.tomcat.util.modeler.BaseModelMBean:java.lang.String toString()"
        ]
    },
    "org.apache.catalina.servlets.CGIServlet$CGIRunner:java.lang.String[] hashToStringArray(java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.CGIServlet$CGIRunner:void run()"
        ]
    },
    "org.apache.catalina.servlets.WebdavServlet$LockInfo:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Connector:java.lang.String createObjectNameKeyProperties(java.lang.String)",
            "org.apache.catalina.connector.CoyoteAdapter:void parseSessionSslId(org.apache.catalina.connector.Request)",
            "org.apache.catalina.connector.MapperListener:void containerEvent(org.apache.catalina.ContainerEvent)",
            "org.apache.catalina.connector.Request:java.lang.Object getAttribute(java.lang.String)",
            "org.apache.catalina.core.ApplicationFilterFactory:org.apache.catalina.core.ApplicationFilterChain createFilterChain(javax.servlet.ServletRequest,org.apache.catalina.Wrapper,javax.servlet.Servlet)",
            "org.apache.catalina.core.ApplicationHttpRequest:java.lang.Object getAttribute(java.lang.String)",
            "org.apache.catalina.core.ApplicationHttpRequest:java.lang.String getParameter(java.lang.String)",
            "org.apache.catalina.core.ApplicationHttpRequest:java.lang.String[] getParameterValues(java.lang.String)",
            "org.apache.catalina.core.ApplicationHttpRequest:java.lang.String[] mergeValues(java.lang.Object,java.lang.Object)",
            "org.apache.catalina.core.NamingContextListener:void addResourceLink(org.apache.catalina.deploy.ContextResourceLink)",
            "org.apache.catalina.deploy.WebXml:void appendElement(java.lang.StringBuilder,java.lang.String,java.lang.String,java.lang.Object)",
            "org.apache.catalina.loader.WebappClassLoader:void checkThreadLocalMapForLeaks(java.lang.Object,java.lang.reflect.Field)",
            "org.apache.catalina.loader.WebappLoader:void propertyChange(java.beans.PropertyChangeEvent)",
            "org.apache.catalina.manager.JMXProxyServlet:void getAttribute(java.io.PrintWriter,java.lang.String,java.lang.String)",
            "org.apache.catalina.manager.JMXProxyServlet:void listBeans(java.io.PrintWriter,java.lang.String)",
            "org.apache.catalina.manager.JspHelper:java.lang.String escapeXml(java.lang.Object)",
            "org.apache.catalina.manager.StatusTransformer:java.lang.String filter(java.lang.Object)",
            "org.apache.catalina.mbeans.MBeanUtils:javax.management.ObjectName createObjectName(java.lang.String,org.apache.catalina.connector.Connector)",
            "org.apache.catalina.realm.JNDIRealm:java.lang.String getAttributeValue(java.lang.String,javax.naming.directory.Attributes)",
            "org.apache.catalina.servlets.CGIServlet$CGIRunner:java.lang.String[] hashToStringArray(java.util.Hashtable)",
            "org.apache.catalina.session.ManagerBase:java.lang.String getSessionAttribute(java.lang.String,java.lang.String)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:java.lang.String getVariableValue(java.lang.String)",
            "org.apache.catalina.users.MemoryUserDatabaseFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.catalina.valves.AccessLogValve$RequestAttributeElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.valves.AccessLogValve$SessionAttributeElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.valves.ExtendedAccessLogValve:java.lang.String wrap(java.lang.Object)",
            "org.apache.naming.factory.DataSourceLinkFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.EjbFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.OpenEjbFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.ResourceEnvFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.ResourceFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.ResourceLinkFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.TransactionFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.resources.DirContextURLConnection:java.lang.String getHeaderValueAsString(java.lang.Object)",
            "org.apache.naming.resources.ProxyDirContext:java.lang.Object lookup(java.lang.String)",
            "org.apache.naming.resources.ProxyDirContext:org.apache.naming.resources.CacheEntry lookupCache(java.lang.String)",
            "org.apache.naming.resources.ProxyDirContext:void cacheLoad(org.apache.naming.resources.CacheEntry)",
            "org.apache.naming.resources.ResourceAttributes:long getContentLength()",
            "org.apache.naming.resources.ResourceAttributes:long getCreation()",
            "org.apache.naming.resources.ResourceAttributes:java.util.Date getCreationDate()",
            "org.apache.naming.resources.ResourceAttributes:long getLastModified()",
            "org.apache.naming.resources.ResourceAttributes:java.util.Date getLastModifiedDate()",
            "org.apache.naming.resources.ResourceAttributes:java.lang.String getName()",
            "org.apache.naming.resources.ResourceAttributes:java.lang.String getResourceType()",
            "org.apache.naming.resources.ResourceAttributes:java.lang.String getETag()",
            "org.apache.tomcat.util.bcel.classfile.JavaClass:java.lang.String indent(java.lang.Object)",
            "org.apache.tomcat.util.digester.CallMethodRule:void end(java.lang.String,java.lang.String)",
            "org.apache.tomcat.util.modeler.modules.MbeansSource:void updateField(javax.management.ObjectName,java.lang.String,java.lang.Object)",
            "org.apache.tomcat.util.modeler.BaseModelMBean:java.lang.String toString()"
        ]
    },
    "org.apache.catalina.servlets.WebdavServlet$LockInfo:void toXML(org.apache.catalina.util.XMLWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.WebdavServlet:void doLock(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.WebdavServlet:boolean generateLockDiscovery(java.lang.String,org.apache.catalina.util.XMLWriter)"
        ]
    },
    "org.apache.catalina.servlets.WebdavServlet:boolean isLocked(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.WebdavServlet:boolean isLocked(javax.servlet.http.HttpServletRequest)",
            "org.apache.catalina.servlets.WebdavServlet:boolean deleteResource(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,boolean)",
            "org.apache.catalina.servlets.WebdavServlet:void deleteCollection(javax.servlet.http.HttpServletRequest,javax.naming.directory.DirContext,java.lang.String,java.util.Hashtable)"
        ]
    },
    "org.apache.catalina.servlets.WebdavServlet:void parseProperties(javax.servlet.http.HttpServletRequest,org.apache.catalina.util.XMLWriter,java.lang.String,int,java.util.Vector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.WebdavServlet:void doPropfind(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.servlets.WebdavServlet:boolean generateLockDiscovery(java.lang.String,org.apache.catalina.util.XMLWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.WebdavServlet:void parseProperties(javax.servlet.http.HttpServletRequest,org.apache.catalina.util.XMLWriter,java.lang.String,int,java.util.Vector)",
            "org.apache.catalina.servlets.WebdavServlet:void parseLockNullProperties(javax.servlet.http.HttpServletRequest,org.apache.catalina.util.XMLWriter,java.lang.String,int,java.util.Vector)"
        ]
    },
    "org.apache.catalina.session.ManagerBase:java.util.HashMap getSession(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.CatalinaProperties:void loadProperties()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.CatalinaProperties:void <clinit>()"
        ]
    },
    "org.apache.catalina.startup.ContextConfig:void processAnnotationsJar(java.net.URL,org.apache.catalina.deploy.WebXml)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void processAnnotationsUrl(java.net.URL,org.apache.catalina.deploy.WebXml)"
        ]
    },
    "org.apache.catalina.startup.ContextConfig:void processAnnotationsJndi(java.net.URL,org.apache.catalina.deploy.WebXml)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void processAnnotationsUrl(java.net.URL,org.apache.catalina.deploy.WebXml)",
            "org.apache.catalina.startup.ContextConfig:void processAnnotationsJndi(java.net.URL,org.apache.catalina.deploy.WebXml)"
        ]
    },
    "org.apache.catalina.startup.ExpandWar:java.lang.String expand(org.apache.catalina.Host,java.net.URL,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void fixDocBase()"
        ]
    },
    "org.apache.catalina.startup.ExpandWar:void validate(org.apache.catalina.Host,java.net.URL,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void fixDocBase()"
        ]
    },
    "org.apache.catalina.startup.TldConfig:void tldScanJar(java.net.JarURLConnection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.TldConfig:void access$100(org.apache.catalina.startup.TldConfig,java.net.JarURLConnection)"
        ]
    },
    "org.apache.naming.factory.BeanFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.factory.EjbFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.ResourceEnvFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.ResourceFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.TransactionFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)"
        ]
    },
    "org.apache.naming.factory.MailSessionFactory$1:javax.mail.Session run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.factory.MailSessionFactory$1:java.lang.Object run()"
        ]
    },
    "org.apache.naming.factory.SendMailFactory$1:javax.mail.internet.MimePartDataSource run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.factory.SendMailFactory$1:java.lang.Object run()"
        ]
    },
    "org.apache.naming.resources.RecyclableNamingEnumeration:java.lang.Object nextElement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.FormAuthenticator:void saveRequest(org.apache.catalina.connector.Request,org.apache.catalina.Session)",
            "org.apache.catalina.connector.Request:java.util.Map getParameterMap()",
            "org.apache.catalina.connector.Request:void parseLocales()",
            "org.apache.catalina.connector.Response:java.util.Collection getHeaders(java.lang.String)",
            "org.apache.catalina.core.ApplicationContext:void listCollectionPaths(java.util.Set,javax.naming.directory.DirContext,java.lang.String)",
            "org.apache.catalina.core.ApplicationHttpRequest$AttributeNamesEnumerator:java.lang.String findNext()",
            "org.apache.catalina.core.ApplicationRequest:void setRequest(javax.servlet.ServletRequest)",
            "org.apache.catalina.filters.ExpiresFilter:void init(javax.servlet.FilterConfig)",
            "org.apache.catalina.filters.FilterBase:void init(javax.servlet.FilterConfig)",
            "org.apache.catalina.filters.RemoteIpFilter$XForwardedRequest:void <init>(javax.servlet.http.HttpServletRequest)",
            "org.apache.catalina.filters.RemoteIpFilter:void doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.filters.RequestDumperFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.loader.JdbcLeakPrevention:java.util.List clearJdbcDriverRegistrations()",
            "org.apache.catalina.loader.WebappClassLoader:boolean modified()",
            "org.apache.catalina.loader.WebappClassLoader:java.util.Enumeration findResources(java.lang.String)",
            "org.apache.catalina.loader.WebappClassLoader:org.apache.catalina.loader.ResourceEntry findResourceInternal(java.lang.String,java.lang.String)",
            "org.apache.catalina.loader.WebappLoader:void setRepositories()",
            "org.apache.catalina.loader.WebappLoader:boolean copyDir(javax.naming.directory.DirContext,java.io.File)",
            "org.apache.catalina.manager.host.HostManagerServlet:org.apache.tomcat.util.res.StringManager getStringManager(javax.servlet.http.HttpServletRequest)",
            "org.apache.catalina.manager.util.SessionUtils:java.util.Locale guessLocaleFromSession(javax.servlet.http.HttpSession)",
            "org.apache.catalina.manager.util.SessionUtils:java.lang.Object guessUserFromSession(org.apache.catalina.Session)",
            "org.apache.catalina.manager.ManagerServlet:org.apache.tomcat.util.res.StringManager getStringManager(javax.servlet.http.HttpServletRequest)",
            "org.apache.catalina.manager.StatusManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.StatusTransformer:void writeConnectorState(java.io.PrintWriter,javax.management.ObjectName,java.lang.String,javax.management.MBeanServer,java.util.Vector,java.util.Vector,int)",
            "org.apache.catalina.servlets.CGIServlet$CGIEnvironment:boolean setCGIEnvironment(javax.servlet.http.HttpServletRequest)",
            "org.apache.catalina.servlets.CGIServlet$CGIEnvironment:java.lang.String toString()",
            "org.apache.catalina.servlets.CGIServlet$CGIRunner:java.lang.String[] hashToStringArray(java.util.Hashtable)",
            "org.apache.catalina.servlets.CGIServlet:void printServletEnvironment(javax.servlet.ServletOutputStream,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.DefaultServlet:java.io.InputStream renderXml(java.lang.String,org.apache.naming.resources.CacheEntry,java.io.InputStream)",
            "org.apache.catalina.servlets.DefaultServlet:java.io.InputStream renderHtml(java.lang.String,org.apache.naming.resources.CacheEntry)",
            "org.apache.catalina.servlets.WebdavServlet$LockInfo:java.lang.String toString()",
            "org.apache.catalina.servlets.WebdavServlet$LockInfo:void toXML(org.apache.catalina.util.XMLWriter)",
            "org.apache.catalina.servlets.WebdavServlet:void doPropfind(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.WebdavServlet:void doLock(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.WebdavServlet:void doUnlock(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.WebdavServlet:boolean isLocked(java.lang.String,java.lang.String)",
            "org.apache.catalina.servlets.WebdavServlet:boolean copyResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.WebdavServlet:boolean copyResource(javax.naming.directory.DirContext,java.util.Hashtable,java.lang.String,java.lang.String)",
            "org.apache.catalina.servlets.WebdavServlet:void deleteCollection(javax.servlet.http.HttpServletRequest,javax.naming.directory.DirContext,java.lang.String,java.util.Hashtable)",
            "org.apache.catalina.servlets.WebdavServlet:void sendReport(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Hashtable)",
            "org.apache.catalina.servlets.WebdavServlet:void parseProperties(javax.servlet.http.HttpServletRequest,org.apache.catalina.util.XMLWriter,java.lang.String,int,java.util.Vector)",
            "org.apache.catalina.servlets.WebdavServlet:void parseLockNullProperties(javax.servlet.http.HttpServletRequest,org.apache.catalina.util.XMLWriter,java.lang.String,int,java.util.Vector)",
            "org.apache.catalina.servlets.WebdavServlet:boolean generateLockDiscovery(java.lang.String,org.apache.catalina.util.XMLWriter)",
            "org.apache.catalina.session.ManagerBase:java.util.HashMap getSession(java.lang.String)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:void addVariableNames(java.util.Collection)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:java.lang.Object getReqAttributeIgnoreCase(java.lang.String)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:java.lang.String getCGIVariable(java.lang.String)",
            "org.apache.catalina.startup.CatalinaProperties:void loadProperties()",
            "org.apache.catalina.startup.ContextConfig:void processAnnotationsJar(java.net.URL,org.apache.catalina.deploy.WebXml)",
            "org.apache.catalina.startup.ContextConfig:void processAnnotationsJndi(java.net.URL,org.apache.catalina.deploy.WebXml)",
            "org.apache.catalina.startup.ExpandWar:java.lang.String expand(org.apache.catalina.Host,java.net.URL,java.lang.String)",
            "org.apache.catalina.startup.ExpandWar:void validate(org.apache.catalina.Host,java.net.URL,java.lang.String)",
            "org.apache.catalina.startup.TldConfig:void tldScanJar(java.net.JarURLConnection)",
            "org.apache.catalina.startup.UserConfig:void deploy()",
            "org.apache.catalina.util.ExtensionValidator:boolean validateApplication(javax.naming.directory.DirContext,org.apache.catalina.Context)",
            "org.apache.catalina.valves.CrawlerSessionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.naming.factory.BeanFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.MailSessionFactory$1:javax.mail.Session run()",
            "org.apache.naming.factory.SendMailFactory$1:javax.mail.internet.MimePartDataSource run()",
            "org.apache.naming.resources.DirContextURLConnection:java.util.Enumeration list()",
            "org.apache.naming.resources.RecyclableNamingEnumeration:java.lang.Object next()",
            "org.apache.naming.resources.RecyclableNamingEnumeration:java.lang.Object nextElement()",
            "org.apache.naming.resources.WARDirContext:void loadEntries()",
            "org.apache.naming.HandlerRef:java.lang.String toString()",
            "org.apache.naming.NamingContext:void <init>(java.util.Hashtable,java.lang.String)",
            "org.apache.naming.ResourceRef:java.lang.String toString()",
            "org.apache.naming.ServiceRef:java.lang.String toString()",
            "org.apache.tomcat.util.http.MimeHeaders:java.lang.String toString()",
            "org.apache.tomcat.util.http.Parameters:java.lang.String paramsAsString()",
            "org.apache.tomcat.util.modeler.modules.MbeansDescriptorsIntrospectionSource:org.apache.tomcat.util.modeler.ManagedBean createManagedBean(org.apache.tomcat.util.modeler.Registry,java.lang.String,java.lang.Class,java.lang.String)"
        ]
    },
    "org.apache.naming.resources.WARDirContext:void loadEntries()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.resources.BaseDirContext:void addResourcesJar(java.net.URL)",
            "org.apache.naming.resources.WARDirContext:void setDocBase(java.lang.String)"
        ]
    },
    "org.apache.naming.HandlerRef:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Connector:java.lang.String createObjectNameKeyProperties(java.lang.String)",
            "org.apache.catalina.connector.CoyoteAdapter:void parseSessionSslId(org.apache.catalina.connector.Request)",
            "org.apache.catalina.connector.MapperListener:void containerEvent(org.apache.catalina.ContainerEvent)",
            "org.apache.catalina.connector.Request:java.lang.Object getAttribute(java.lang.String)",
            "org.apache.catalina.core.ApplicationFilterFactory:org.apache.catalina.core.ApplicationFilterChain createFilterChain(javax.servlet.ServletRequest,org.apache.catalina.Wrapper,javax.servlet.Servlet)",
            "org.apache.catalina.core.ApplicationHttpRequest:java.lang.Object getAttribute(java.lang.String)",
            "org.apache.catalina.core.ApplicationHttpRequest:java.lang.String getParameter(java.lang.String)",
            "org.apache.catalina.core.ApplicationHttpRequest:java.lang.String[] getParameterValues(java.lang.String)",
            "org.apache.catalina.core.ApplicationHttpRequest:java.lang.String[] mergeValues(java.lang.Object,java.lang.Object)",
            "org.apache.catalina.core.NamingContextListener:void addResourceLink(org.apache.catalina.deploy.ContextResourceLink)",
            "org.apache.catalina.deploy.WebXml:void appendElement(java.lang.StringBuilder,java.lang.String,java.lang.String,java.lang.Object)",
            "org.apache.catalina.loader.WebappClassLoader:void checkThreadLocalMapForLeaks(java.lang.Object,java.lang.reflect.Field)",
            "org.apache.catalina.loader.WebappLoader:void propertyChange(java.beans.PropertyChangeEvent)",
            "org.apache.catalina.manager.JMXProxyServlet:void getAttribute(java.io.PrintWriter,java.lang.String,java.lang.String)",
            "org.apache.catalina.manager.JMXProxyServlet:void listBeans(java.io.PrintWriter,java.lang.String)",
            "org.apache.catalina.manager.JspHelper:java.lang.String escapeXml(java.lang.Object)",
            "org.apache.catalina.manager.StatusTransformer:java.lang.String filter(java.lang.Object)",
            "org.apache.catalina.mbeans.MBeanUtils:javax.management.ObjectName createObjectName(java.lang.String,org.apache.catalina.connector.Connector)",
            "org.apache.catalina.realm.JNDIRealm:java.lang.String getAttributeValue(java.lang.String,javax.naming.directory.Attributes)",
            "org.apache.catalina.servlets.CGIServlet$CGIRunner:java.lang.String[] hashToStringArray(java.util.Hashtable)",
            "org.apache.catalina.session.ManagerBase:java.lang.String getSessionAttribute(java.lang.String,java.lang.String)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:java.lang.String getVariableValue(java.lang.String)",
            "org.apache.catalina.users.MemoryUserDatabaseFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.catalina.valves.AccessLogValve$RequestAttributeElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.valves.AccessLogValve$SessionAttributeElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.valves.ExtendedAccessLogValve:java.lang.String wrap(java.lang.Object)",
            "org.apache.naming.factory.DataSourceLinkFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.EjbFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.OpenEjbFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.ResourceEnvFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.ResourceFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.ResourceLinkFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.TransactionFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.resources.DirContextURLConnection:java.lang.String getHeaderValueAsString(java.lang.Object)",
            "org.apache.naming.resources.ProxyDirContext:java.lang.Object lookup(java.lang.String)",
            "org.apache.naming.resources.ProxyDirContext:org.apache.naming.resources.CacheEntry lookupCache(java.lang.String)",
            "org.apache.naming.resources.ProxyDirContext:void cacheLoad(org.apache.naming.resources.CacheEntry)",
            "org.apache.naming.resources.ResourceAttributes:long getContentLength()",
            "org.apache.naming.resources.ResourceAttributes:long getCreation()",
            "org.apache.naming.resources.ResourceAttributes:java.util.Date getCreationDate()",
            "org.apache.naming.resources.ResourceAttributes:long getLastModified()",
            "org.apache.naming.resources.ResourceAttributes:java.util.Date getLastModifiedDate()",
            "org.apache.naming.resources.ResourceAttributes:java.lang.String getName()",
            "org.apache.naming.resources.ResourceAttributes:java.lang.String getResourceType()",
            "org.apache.naming.resources.ResourceAttributes:java.lang.String getETag()",
            "org.apache.tomcat.util.bcel.classfile.JavaClass:java.lang.String indent(java.lang.Object)",
            "org.apache.tomcat.util.digester.CallMethodRule:void end(java.lang.String,java.lang.String)",
            "org.apache.tomcat.util.modeler.modules.MbeansSource:void updateField(javax.management.ObjectName,java.lang.String,java.lang.Object)",
            "org.apache.tomcat.util.modeler.BaseModelMBean:java.lang.String toString()"
        ]
    },
    "org.apache.naming.NamingContext:void <init>(java.util.Hashtable,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.NamingContextListener:void lifecycleEvent(org.apache.catalina.LifecycleEvent)",
            "org.apache.naming.java.javaURLContextFactory:javax.naming.Context getInitialContext(java.util.Hashtable)",
            "org.apache.naming.NamingContext:void <init>(java.util.Hashtable,java.lang.String,java.util.HashMap)",
            "org.apache.naming.NamingContext:javax.naming.Context createSubcontext(javax.naming.Name)",
            "org.apache.naming.SelectorContext:javax.naming.Context getBoundContext()"
        ]
    },
    "org.apache.naming.ResourceRef:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Connector:java.lang.String createObjectNameKeyProperties(java.lang.String)",
            "org.apache.catalina.connector.CoyoteAdapter:void parseSessionSslId(org.apache.catalina.connector.Request)",
            "org.apache.catalina.connector.MapperListener:void containerEvent(org.apache.catalina.ContainerEvent)",
            "org.apache.catalina.connector.Request:java.lang.Object getAttribute(java.lang.String)",
            "org.apache.catalina.core.ApplicationFilterFactory:org.apache.catalina.core.ApplicationFilterChain createFilterChain(javax.servlet.ServletRequest,org.apache.catalina.Wrapper,javax.servlet.Servlet)",
            "org.apache.catalina.core.ApplicationHttpRequest:java.lang.Object getAttribute(java.lang.String)",
            "org.apache.catalina.core.ApplicationHttpRequest:java.lang.String getParameter(java.lang.String)",
            "org.apache.catalina.core.ApplicationHttpRequest:java.lang.String[] getParameterValues(java.lang.String)",
            "org.apache.catalina.core.ApplicationHttpRequest:java.lang.String[] mergeValues(java.lang.Object,java.lang.Object)",
            "org.apache.catalina.core.NamingContextListener:void addResourceLink(org.apache.catalina.deploy.ContextResourceLink)",
            "org.apache.catalina.deploy.WebXml:void appendElement(java.lang.StringBuilder,java.lang.String,java.lang.String,java.lang.Object)",
            "org.apache.catalina.loader.WebappClassLoader:void checkThreadLocalMapForLeaks(java.lang.Object,java.lang.reflect.Field)",
            "org.apache.catalina.loader.WebappLoader:void propertyChange(java.beans.PropertyChangeEvent)",
            "org.apache.catalina.manager.JMXProxyServlet:void getAttribute(java.io.PrintWriter,java.lang.String,java.lang.String)",
            "org.apache.catalina.manager.JMXProxyServlet:void listBeans(java.io.PrintWriter,java.lang.String)",
            "org.apache.catalina.manager.JspHelper:java.lang.String escapeXml(java.lang.Object)",
            "org.apache.catalina.manager.StatusTransformer:java.lang.String filter(java.lang.Object)",
            "org.apache.catalina.mbeans.MBeanUtils:javax.management.ObjectName createObjectName(java.lang.String,org.apache.catalina.connector.Connector)",
            "org.apache.catalina.realm.JNDIRealm:java.lang.String getAttributeValue(java.lang.String,javax.naming.directory.Attributes)",
            "org.apache.catalina.servlets.CGIServlet$CGIRunner:java.lang.String[] hashToStringArray(java.util.Hashtable)",
            "org.apache.catalina.session.ManagerBase:java.lang.String getSessionAttribute(java.lang.String,java.lang.String)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:java.lang.String getVariableValue(java.lang.String)",
            "org.apache.catalina.users.MemoryUserDatabaseFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.catalina.valves.AccessLogValve$RequestAttributeElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.valves.AccessLogValve$SessionAttributeElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.valves.ExtendedAccessLogValve:java.lang.String wrap(java.lang.Object)",
            "org.apache.naming.factory.DataSourceLinkFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.EjbFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.OpenEjbFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.ResourceEnvFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.ResourceFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.ResourceLinkFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.TransactionFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.resources.DirContextURLConnection:java.lang.String getHeaderValueAsString(java.lang.Object)",
            "org.apache.naming.resources.ProxyDirContext:java.lang.Object lookup(java.lang.String)",
            "org.apache.naming.resources.ProxyDirContext:org.apache.naming.resources.CacheEntry lookupCache(java.lang.String)",
            "org.apache.naming.resources.ProxyDirContext:void cacheLoad(org.apache.naming.resources.CacheEntry)",
            "org.apache.naming.resources.ResourceAttributes:long getContentLength()",
            "org.apache.naming.resources.ResourceAttributes:long getCreation()",
            "org.apache.naming.resources.ResourceAttributes:java.util.Date getCreationDate()",
            "org.apache.naming.resources.ResourceAttributes:long getLastModified()",
            "org.apache.naming.resources.ResourceAttributes:java.util.Date getLastModifiedDate()",
            "org.apache.naming.resources.ResourceAttributes:java.lang.String getName()",
            "org.apache.naming.resources.ResourceAttributes:java.lang.String getResourceType()",
            "org.apache.naming.resources.ResourceAttributes:java.lang.String getETag()",
            "org.apache.tomcat.util.bcel.classfile.JavaClass:java.lang.String indent(java.lang.Object)",
            "org.apache.tomcat.util.digester.CallMethodRule:void end(java.lang.String,java.lang.String)",
            "org.apache.tomcat.util.modeler.modules.MbeansSource:void updateField(javax.management.ObjectName,java.lang.String,java.lang.Object)",
            "org.apache.tomcat.util.modeler.BaseModelMBean:java.lang.String toString()"
        ]
    },
    "org.apache.naming.ServiceRef:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Connector:java.lang.String createObjectNameKeyProperties(java.lang.String)",
            "org.apache.catalina.connector.CoyoteAdapter:void parseSessionSslId(org.apache.catalina.connector.Request)",
            "org.apache.catalina.connector.MapperListener:void containerEvent(org.apache.catalina.ContainerEvent)",
            "org.apache.catalina.connector.Request:java.lang.Object getAttribute(java.lang.String)",
            "org.apache.catalina.core.ApplicationFilterFactory:org.apache.catalina.core.ApplicationFilterChain createFilterChain(javax.servlet.ServletRequest,org.apache.catalina.Wrapper,javax.servlet.Servlet)",
            "org.apache.catalina.core.ApplicationHttpRequest:java.lang.Object getAttribute(java.lang.String)",
            "org.apache.catalina.core.ApplicationHttpRequest:java.lang.String getParameter(java.lang.String)",
            "org.apache.catalina.core.ApplicationHttpRequest:java.lang.String[] getParameterValues(java.lang.String)",
            "org.apache.catalina.core.ApplicationHttpRequest:java.lang.String[] mergeValues(java.lang.Object,java.lang.Object)",
            "org.apache.catalina.core.NamingContextListener:void addResourceLink(org.apache.catalina.deploy.ContextResourceLink)",
            "org.apache.catalina.deploy.WebXml:void appendElement(java.lang.StringBuilder,java.lang.String,java.lang.String,java.lang.Object)",
            "org.apache.catalina.loader.WebappClassLoader:void checkThreadLocalMapForLeaks(java.lang.Object,java.lang.reflect.Field)",
            "org.apache.catalina.loader.WebappLoader:void propertyChange(java.beans.PropertyChangeEvent)",
            "org.apache.catalina.manager.JMXProxyServlet:void getAttribute(java.io.PrintWriter,java.lang.String,java.lang.String)",
            "org.apache.catalina.manager.JMXProxyServlet:void listBeans(java.io.PrintWriter,java.lang.String)",
            "org.apache.catalina.manager.JspHelper:java.lang.String escapeXml(java.lang.Object)",
            "org.apache.catalina.manager.StatusTransformer:java.lang.String filter(java.lang.Object)",
            "org.apache.catalina.mbeans.MBeanUtils:javax.management.ObjectName createObjectName(java.lang.String,org.apache.catalina.connector.Connector)",
            "org.apache.catalina.realm.JNDIRealm:java.lang.String getAttributeValue(java.lang.String,javax.naming.directory.Attributes)",
            "org.apache.catalina.servlets.CGIServlet$CGIRunner:java.lang.String[] hashToStringArray(java.util.Hashtable)",
            "org.apache.catalina.session.ManagerBase:java.lang.String getSessionAttribute(java.lang.String,java.lang.String)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:java.lang.String getVariableValue(java.lang.String)",
            "org.apache.catalina.users.MemoryUserDatabaseFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.catalina.valves.AccessLogValve$RequestAttributeElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.valves.AccessLogValve$SessionAttributeElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.valves.ExtendedAccessLogValve:java.lang.String wrap(java.lang.Object)",
            "org.apache.naming.factory.DataSourceLinkFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.EjbFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.OpenEjbFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.ResourceEnvFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.ResourceFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.ResourceLinkFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.TransactionFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.resources.DirContextURLConnection:java.lang.String getHeaderValueAsString(java.lang.Object)",
            "org.apache.naming.resources.ProxyDirContext:java.lang.Object lookup(java.lang.String)",
            "org.apache.naming.resources.ProxyDirContext:org.apache.naming.resources.CacheEntry lookupCache(java.lang.String)",
            "org.apache.naming.resources.ProxyDirContext:void cacheLoad(org.apache.naming.resources.CacheEntry)",
            "org.apache.naming.resources.ResourceAttributes:long getContentLength()",
            "org.apache.naming.resources.ResourceAttributes:long getCreation()",
            "org.apache.naming.resources.ResourceAttributes:java.util.Date getCreationDate()",
            "org.apache.naming.resources.ResourceAttributes:long getLastModified()",
            "org.apache.naming.resources.ResourceAttributes:java.util.Date getLastModifiedDate()",
            "org.apache.naming.resources.ResourceAttributes:java.lang.String getName()",
            "org.apache.naming.resources.ResourceAttributes:java.lang.String getResourceType()",
            "org.apache.naming.resources.ResourceAttributes:java.lang.String getETag()",
            "org.apache.tomcat.util.bcel.classfile.JavaClass:java.lang.String indent(java.lang.Object)",
            "org.apache.tomcat.util.digester.CallMethodRule:void end(java.lang.String,java.lang.String)",
            "org.apache.tomcat.util.modeler.modules.MbeansSource:void updateField(javax.management.ObjectName,java.lang.String,java.lang.Object)",
            "org.apache.tomcat.util.modeler.BaseModelMBean:java.lang.String toString()"
        ]
    },
    "org.apache.tomcat.util.http.MimeHeaders:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Connector:java.lang.String createObjectNameKeyProperties(java.lang.String)",
            "org.apache.catalina.connector.CoyoteAdapter:void parseSessionSslId(org.apache.catalina.connector.Request)",
            "org.apache.catalina.connector.MapperListener:void containerEvent(org.apache.catalina.ContainerEvent)",
            "org.apache.catalina.connector.Request:java.lang.Object getAttribute(java.lang.String)",
            "org.apache.catalina.core.ApplicationFilterFactory:org.apache.catalina.core.ApplicationFilterChain createFilterChain(javax.servlet.ServletRequest,org.apache.catalina.Wrapper,javax.servlet.Servlet)",
            "org.apache.catalina.core.ApplicationHttpRequest:java.lang.Object getAttribute(java.lang.String)",
            "org.apache.catalina.core.ApplicationHttpRequest:java.lang.String getParameter(java.lang.String)",
            "org.apache.catalina.core.ApplicationHttpRequest:java.lang.String[] getParameterValues(java.lang.String)",
            "org.apache.catalina.core.ApplicationHttpRequest:java.lang.String[] mergeValues(java.lang.Object,java.lang.Object)",
            "org.apache.catalina.core.NamingContextListener:void addResourceLink(org.apache.catalina.deploy.ContextResourceLink)",
            "org.apache.catalina.deploy.WebXml:void appendElement(java.lang.StringBuilder,java.lang.String,java.lang.String,java.lang.Object)",
            "org.apache.catalina.loader.WebappClassLoader:void checkThreadLocalMapForLeaks(java.lang.Object,java.lang.reflect.Field)",
            "org.apache.catalina.loader.WebappLoader:void propertyChange(java.beans.PropertyChangeEvent)",
            "org.apache.catalina.manager.JMXProxyServlet:void getAttribute(java.io.PrintWriter,java.lang.String,java.lang.String)",
            "org.apache.catalina.manager.JMXProxyServlet:void listBeans(java.io.PrintWriter,java.lang.String)",
            "org.apache.catalina.manager.JspHelper:java.lang.String escapeXml(java.lang.Object)",
            "org.apache.catalina.manager.StatusTransformer:java.lang.String filter(java.lang.Object)",
            "org.apache.catalina.mbeans.MBeanUtils:javax.management.ObjectName createObjectName(java.lang.String,org.apache.catalina.connector.Connector)",
            "org.apache.catalina.realm.JNDIRealm:java.lang.String getAttributeValue(java.lang.String,javax.naming.directory.Attributes)",
            "org.apache.catalina.servlets.CGIServlet$CGIRunner:java.lang.String[] hashToStringArray(java.util.Hashtable)",
            "org.apache.catalina.session.ManagerBase:java.lang.String getSessionAttribute(java.lang.String,java.lang.String)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:java.lang.String getVariableValue(java.lang.String)",
            "org.apache.catalina.users.MemoryUserDatabaseFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.catalina.valves.AccessLogValve$RequestAttributeElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.valves.AccessLogValve$SessionAttributeElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.valves.ExtendedAccessLogValve:java.lang.String wrap(java.lang.Object)",
            "org.apache.naming.factory.DataSourceLinkFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.EjbFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.OpenEjbFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.ResourceEnvFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.ResourceFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.ResourceLinkFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.TransactionFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.resources.DirContextURLConnection:java.lang.String getHeaderValueAsString(java.lang.Object)",
            "org.apache.naming.resources.ProxyDirContext:java.lang.Object lookup(java.lang.String)",
            "org.apache.naming.resources.ProxyDirContext:org.apache.naming.resources.CacheEntry lookupCache(java.lang.String)",
            "org.apache.naming.resources.ProxyDirContext:void cacheLoad(org.apache.naming.resources.CacheEntry)",
            "org.apache.naming.resources.ResourceAttributes:long getContentLength()",
            "org.apache.naming.resources.ResourceAttributes:long getCreation()",
            "org.apache.naming.resources.ResourceAttributes:java.util.Date getCreationDate()",
            "org.apache.naming.resources.ResourceAttributes:long getLastModified()",
            "org.apache.naming.resources.ResourceAttributes:java.util.Date getLastModifiedDate()",
            "org.apache.naming.resources.ResourceAttributes:java.lang.String getName()",
            "org.apache.naming.resources.ResourceAttributes:java.lang.String getResourceType()",
            "org.apache.naming.resources.ResourceAttributes:java.lang.String getETag()",
            "org.apache.tomcat.util.bcel.classfile.JavaClass:java.lang.String indent(java.lang.Object)",
            "org.apache.tomcat.util.digester.CallMethodRule:void end(java.lang.String,java.lang.String)",
            "org.apache.tomcat.util.modeler.modules.MbeansSource:void updateField(javax.management.ObjectName,java.lang.String,java.lang.Object)",
            "org.apache.tomcat.util.modeler.BaseModelMBean:java.lang.String toString()"
        ]
    },
    "org.apache.tomcat.util.http.Parameters:java.lang.String paramsAsString()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.tomcat.util.modeler.modules.MbeansDescriptorsIntrospectionSource:org.apache.tomcat.util.modeler.ManagedBean createManagedBean(org.apache.tomcat.util.modeler.Registry,java.lang.String,java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.modeler.modules.MbeansDescriptorsIntrospectionSource:void execute()"
        ]
    },
    "org.apache.catalina.ssi.SSIEcho:long process(org.apache.catalina.ssi.SSIMediator,java.lang.String,java.lang.String[],java.lang.String[],java.io.PrintWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIProcessor:long process(java.io.Reader,long,java.io.PrintWriter)"
        ]
    },
    "org.apache.catalina.ssi.SSIMediator:java.lang.String getVariableValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIMediator:java.lang.String substituteVariables(java.lang.String)",
            "org.apache.catalina.ssi.SSIPrintenv:long process(org.apache.catalina.ssi.SSIMediator,java.lang.String,java.lang.String[],java.lang.String[],java.io.PrintWriter)"
        ]
    },
    "org.apache.catalina.ssi.SSIMediator:void setConfigTimeFmt(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIMediator:void <init>(org.apache.catalina.ssi.SSIExternalResolver,long,int)",
            "org.apache.catalina.ssi.SSIMediator:void setConfigTimeFmt(java.lang.String)"
        ]
    },
    "org.apache.catalina.ssi.SSIServletExternalResolver:org.apache.catalina.ssi.SSIServletExternalResolver$ServletContextAndPath getServletContextAndPath(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIServletExternalResolver:java.net.URLConnection getURLConnection(java.lang.String,boolean)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:java.lang.String getFileText(java.lang.String,boolean)"
        ]
    },
    "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.ajp.AjpAprProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.coyote.ajp.AjpProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)"
        ]
    },
    "org.apache.coyote.ajp.AbstractAjpProcessor:void parseHost(org.apache.tomcat.util.buf.MessageBytes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void prepareRequest()"
        ]
    },
    "org.apache.coyote.http11.Http11AprProcessor:void prepareRequest()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.Http11AprProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)"
        ]
    },
    "org.apache.coyote.http11.Http11AprProcessor:void parseHost(org.apache.tomcat.util.buf.MessageBytes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.Http11AprProcessor:void prepareRequest()"
        ]
    },
    "org.apache.coyote.http11.Http11NioProcessor:void prepareRequest()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.Http11NioProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.NioChannel)"
        ]
    },
    "org.apache.coyote.http11.Http11NioProcessor:void parseHost(org.apache.tomcat.util.buf.MessageBytes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.Http11NioProcessor:void prepareRequest()"
        ]
    },
    "org.apache.coyote.http11.Http11Processor:void prepareRequest()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.Http11Processor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)"
        ]
    },
    "org.apache.coyote.http11.Http11Processor:void parseHost(org.apache.tomcat.util.buf.MessageBytes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ]
    },
    "org.apache.catalina.core.ApplicationFilterChain$2:java.lang.Void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain$2:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:javax.servlet.http.Part getPart(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.connector.RequestFacade$GetParameterPrivilegedAction:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:java.lang.String getParameter(java.lang.String)"
        ]
    },
    "org.apache.catalina.connector.RequestFacade$GetParameterMapPrivilegedAction:java.util.Map run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade$GetParameterMapPrivilegedAction:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:java.util.Map getParameterMap()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationHttpRequest:void parseParameters()"
        ]
    },
    "org.apache.catalina.core.ApplicationHttpRequest:void parseParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationHttpRequest:java.lang.String getParameter(java.lang.String)",
            "org.apache.catalina.core.ApplicationHttpRequest:java.util.Map getParameterMap()",
            "org.apache.catalina.core.ApplicationHttpRequest:java.util.Enumeration getParameterNames()",
            "org.apache.catalina.core.ApplicationHttpRequest:java.lang.String[] getParameterValues(java.lang.String)"
        ]
    },
    "org.apache.catalina.connector.RequestFacade$GetParameterNamesPrivilegedAction:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:java.util.Enumeration getParameterNames()"
        ]
    },
    "org.apache.catalina.connector.RequestFacade$GetParameterValuePrivilegedAction:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:java.lang.String[] getParameterValues(java.lang.String)"
        ]
    },
    "org.apache.catalina.session.StandardManager:void doUnload()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.StandardManager$PrivilegedDoUnload:java.lang.Void run()",
            "org.apache.catalina.session.StandardManager:void unload()"
        ]
    },
    "org.apache.catalina.session.StandardSession:boolean isValid()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Request:boolean isRequestedSessionIdValid()",
            "org.apache.catalina.connector.Request:org.apache.catalina.Session doGetSession(boolean)",
            "org.apache.catalina.core.ApplicationHttpRequest:javax.servlet.http.HttpSession getSession(boolean)",
            "org.apache.catalina.core.ApplicationHttpRequest:boolean isRequestedSessionIdValid()",
            "org.apache.catalina.session.JDBCStore:void save(org.apache.catalina.Session)",
            "org.apache.catalina.session.ManagerBase:void processExpires()",
            "org.apache.catalina.session.PersistentManagerBase:void processExpires()",
            "org.apache.catalina.session.PersistentManagerBase:org.apache.catalina.Session swapIn(java.lang.String)",
            "org.apache.catalina.session.PersistentManagerBase:void swapOut(org.apache.catalina.Session)",
            "org.apache.catalina.session.PersistentManagerBase:void writeSession(org.apache.catalina.Session)",
            "org.apache.catalina.session.PersistentManagerBase:void stopInternal()",
            "org.apache.catalina.session.PersistentManagerBase:void processMaxIdleSwaps()",
            "org.apache.catalina.session.PersistentManagerBase:void processMaxIdleBackups()",
            "org.apache.catalina.session.StandardManager:void stopInternal()",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.session.StandardSession:void expire()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.SingleSignOn:void deregister(java.lang.String)",
            "org.apache.catalina.manager.ManagerServlet:void sessions(java.io.PrintWriter,org.apache.catalina.util.ContextName,int,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.session.ManagerBase:void expireSession(java.lang.String)",
            "org.apache.catalina.session.PersistentManagerBase:org.apache.catalina.Session swapIn(java.lang.String)",
            "org.apache.catalina.session.PersistentManagerBase:void stopInternal()",
            "org.apache.catalina.session.StandardManager:void doLoad()",
            "org.apache.catalina.session.StandardManager:void stopInternal()",
            "org.apache.catalina.session.StandardSession:void setMaxInactiveInterval(int)",
            "org.apache.catalina.session.StandardSession:void invalidate()",
            "org.apache.catalina.session.StoreBase:void processExpires()",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.DeferredFileOutputStream:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.loader.WebappLoader:boolean copy(java.io.InputStream,java.io.OutputStream)",
            "org.apache.catalina.startup.Catalina:void stopServer(java.lang.String[])",
            "org.apache.tomcat.util.http.fileupload.disk.DiskFileItem:void readObject(java.io.ObjectInputStream)",
            "org.apache.tomcat.util.http.fileupload.util.Streams:long copy(java.io.InputStream,java.io.OutputStream,boolean,byte[])",
            "org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream:void close()"
        ]
    },
    "org.apache.catalina.manager.host.HTMLHostManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.host.HTMLHostManagerServlet:void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.users.MemoryUserDatabase:void close()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.users.MemoryUserDatabaseFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.factory.EjbFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.ResourceEnvFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.ResourceFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.TransactionFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)"
        ]
    },
    "org.apache.catalina.valves.AccessLogValve:boolean rotate(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.coyote.http11.filters.GzipOutputFilter:void flush()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.AbstractOutputBuffer:void flush()"
        ]
    },
    "org.apache.catalina.servlets.DefaultServlet:java.io.InputStream render(java.lang.String,org.apache.naming.resources.CacheEntry)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.DefaultServlet:void serveResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,boolean)"
        ]
    },
    "org.apache.catalina.connector.ResponseFacade$1:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.ResponseFacade:void flushBuffer()"
        ]
    },
    "org.apache.catalina.servlets.CGIServlet$CGIEnvironment:void expandCGIScript()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.CGIServlet$CGIEnvironment:boolean setCGIEnvironment(javax.servlet.http.HttpServletRequest)"
        ]
    },
    "org.apache.catalina.servlets.CGIServlet$CGIRunner:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.CGIServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.coyote.ajp.AjpAprProcessor$SocketOutputBuffer:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.filters.ChunkedOutputFilter:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)",
            "org.apache.coyote.http11.filters.ChunkedOutputFilter:long end()",
            "org.apache.coyote.http11.filters.GzipOutputFilter$FakeOutputStream:void write(int)",
            "org.apache.coyote.http11.filters.GzipOutputFilter$FakeOutputStream:void write(byte[],int,int)",
            "org.apache.coyote.http11.filters.IdentityOutputFilter:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)",
            "org.apache.coyote.http11.AbstractOutputBuffer:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)",
            "org.apache.coyote.Response:void doWrite(org.apache.tomcat.util.buf.ByteChunk)"
        ]
    },
    "org.apache.coyote.ajp.AjpAprProcessor:void finish()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void action(org.apache.coyote.ActionCode,java.lang.Object)",
            "org.apache.coyote.ajp.AjpAprProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)"
        ]
    },
    "org.apache.coyote.ajp.AjpProcessor:void finish()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void action(org.apache.coyote.ActionCode,java.lang.Object)",
            "org.apache.coyote.ajp.AjpProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)"
        ]
    },
    "org.apache.catalina.connector.OutputBuffer:void writeBytes(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.OutputBuffer:void write(byte[],int,int)"
        ]
    },
    "org.apache.catalina.realm.JNDIRealm:boolean compareCredentials(javax.naming.directory.DirContext,org.apache.catalina.realm.JNDIRealm$User,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.realm.JNDIRealm:boolean checkCredentials(javax.naming.directory.DirContext,org.apache.catalina.realm.JNDIRealm$User,java.lang.String)"
        ]
    },
    "org.apache.tomcat.util.buf.ByteChunk:void append(org.apache.tomcat.util.buf.ByteChunk)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.filters.BufferedInputFilter:void setRequest(org.apache.coyote.Request)",
            "org.apache.tomcat.util.buf.MessageBytes:void duplicate(org.apache.tomcat.util.buf.MessageBytes)"
        ]
    },
    "org.apache.tomcat.util.buf.ByteChunk:int substract(org.apache.tomcat.util.buf.ByteChunk)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.tomcat.util.buf.IntermediateOutputStream:void write(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.loader.WebappLoader:boolean copy(java.io.InputStream,java.io.OutputStream)",
            "org.apache.catalina.util.IOTools:void flow(java.io.InputStream,java.io.OutputStream,byte[])",
            "org.apache.coyote.ajp.AjpProcessor$SocketOutputBuffer:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)",
            "org.apache.coyote.ajp.AjpProcessor:void output(byte[],int,int)",
            "org.apache.coyote.http11.filters.FlushableGZIPOutputStream:void deflate()",
            "org.apache.coyote.http11.InternalOutputBuffer$OutputStreamOutputBuffer:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)",
            "org.apache.coyote.http11.InternalOutputBuffer:void commit()",
            "org.apache.coyote.http11.InternalOutputBuffer:void realWriteBytes(byte[],int,int)",
            "org.apache.tomcat.util.http.fileupload.util.Streams:long copy(java.io.InputStream,java.io.OutputStream,boolean,byte[])",
            "org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream:void writeTo(java.io.OutputStream)",
            "org.apache.tomcat.util.http.fileupload.IOUtils:long copyLarge(java.io.InputStream,java.io.OutputStream)",
            "org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream:void write(byte[],int,int)"
        ]
    },
    "org.apache.tomcat.util.http.Parameters:void processParameters(byte[],int,int,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.http.Parameters:void processParameters(byte[],int,int)",
            "org.apache.tomcat.util.http.Parameters:void processParameters(org.apache.tomcat.util.buf.MessageBytes,java.lang.String)"
        ]
    },
    "org.apache.tomcat.util.buf.ByteChunk:void append(byte)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.OutputBuffer:void writeByte(int)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:boolean parseHeader()",
            "org.apache.tomcat.util.buf.ByteChunk:void append(char)"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.util.Streams:java.lang.String asString(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.tomcat.util.http.fileupload.util.Streams:java.lang.String asString(java.io.InputStream,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.tomcat.util.http.fileupload.MultipartStream:int readBodyData(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.MultipartStream:int discardBodyData()"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream:void checkThreshold(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream:void write(int)",
            "org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream:void write(byte[])",
            "org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream:void write(byte[],int,int)"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.disk.DiskFileItem:void write(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationPart:void write(java.lang.String)"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.servlet.ServletFileUpload:java.util.List parseRequest(javax.servlet.http.HttpServletRequest)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Request:void parseParts()"
        ]
    },
    "org.apache.coyote.http11.AbstractHttp11JsseProtocol:void init()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Connector:void initInternal()"
        ]
    },
    "org.apache.coyote.http11.AbstractHttp11Processor:boolean addInputFilter(org.apache.coyote.http11.InputFilter[],java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.Http11AprProcessor:void prepareRequest()",
            "org.apache.coyote.http11.Http11NioProcessor:void prepareRequest()",
            "org.apache.coyote.http11.Http11Processor:void prepareRequest()"
        ]
    },
    "org.apache.coyote.http11.filters.ChunkedInputFilter:long end()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.AbstractInputBuffer:void endRequest()"
        ]
    },
    "org.apache.coyote.http11.filters.ChunkedInputFilter:void parseEndChunk()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)"
        ]
    },
    "org.apache.catalina.connector.InputBuffer:int realReadChars(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.InputBuffer:long skip(long)",
            "org.apache.tomcat.util.buf.CharChunk:int substract()",
            "org.apache.tomcat.util.buf.CharChunk:int substract(org.apache.tomcat.util.buf.CharChunk)",
            "org.apache.tomcat.util.buf.CharChunk:int substract(char[],int,int)"
        ]
    },
    "org.apache.catalina.connector.Request:boolean read()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean event(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)"
        ]
    },
    "org.apache.tomcat.util.buf.ByteChunk:int substract()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.InputBuffer:int readByte()",
            "org.apache.tomcat.util.buf.IntermediateInputStream:int read()"
        ]
    },
    "org.apache.tomcat.util.buf.ByteChunk:int substract(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.InputBuffer:int read(byte[],int,int)",
            "org.apache.coyote.http11.filters.SavedRequestInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.tomcat.util.buf.IntermediateInputStream:int read(byte[],int,int)"
        ]
    },
    "org.apache.coyote.http11.InternalNioOutputBuffer$SocketOutputBuffer:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.filters.ChunkedOutputFilter:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)",
            "org.apache.coyote.http11.filters.ChunkedOutputFilter:long end()",
            "org.apache.coyote.http11.filters.GzipOutputFilter$FakeOutputStream:void write(int)",
            "org.apache.coyote.http11.filters.GzipOutputFilter$FakeOutputStream:void write(byte[],int,int)",
            "org.apache.coyote.http11.filters.IdentityOutputFilter:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)",
            "org.apache.coyote.http11.AbstractOutputBuffer:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)",
            "org.apache.coyote.Response:void doWrite(org.apache.tomcat.util.buf.ByteChunk)"
        ]
    },
    "org.apache.catalina.core.ApplicationFilterChain$1:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.startup.HostConfig:void deployApps()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.HostConfig:void start()",
            "org.apache.catalina.startup.HostConfig:void check()"
        ]
    },
    "org.apache.catalina.startup.UserConfig:void start()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.UserConfig:void lifecycleEvent(org.apache.catalina.LifecycleEvent)"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:void login(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.ContextConfig:void applicationAnnotationsConfig()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void configureStart()"
        ]
    },
    "org.apache.catalina.connector.Request:java.util.Locale getLocale()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade$GetLocalePrivilegedAction:java.util.Locale run()",
            "org.apache.catalina.connector.RequestFacade:java.util.Locale getLocale()",
            "org.apache.catalina.filters.RequestDumperFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.valves.ExtendedAccessLogValve$11:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)"
        ]
    },
    "org.apache.catalina.connector.Request:java.util.Enumeration getLocales()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.FormAuthenticator:void saveRequest(org.apache.catalina.connector.Request,org.apache.catalina.Session)",
            "org.apache.catalina.connector.RequestFacade$GetLocalesPrivilegedAction:java.util.Enumeration run()",
            "org.apache.catalina.connector.RequestFacade:java.util.Enumeration getLocales()",
            "org.apache.catalina.manager.host.HostManagerServlet:org.apache.tomcat.util.res.StringManager getStringManager(javax.servlet.http.HttpServletRequest)",
            "org.apache.catalina.manager.ManagerServlet:org.apache.tomcat.util.res.StringManager getStringManager(javax.servlet.http.HttpServletRequest)",
            "org.apache.catalina.servlets.CGIServlet:void printServletEnvironment(javax.servlet.ServletOutputStream,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.connector.ResponseFacade:java.util.Collection getHeaders(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.filters.RequestDumperFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)"
        ]
    },
    "org.apache.catalina.valves.AccessLogValve$ResponseHeaderElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.valves.AccessLogValve:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)"
        ]
    },
    "org.apache.catalina.valves.ExtendedAccessLogValve$ResponseAllHeaderElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.valves.AccessLogValve:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)"
        ]
    },
    "org.apache.catalina.core.ApplicationHttpRequest$AttributeNamesEnumerator:boolean hasMoreElements()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.FormAuthenticator:void saveRequest(org.apache.catalina.connector.Request,org.apache.catalina.Session)",
            "org.apache.catalina.connector.Request:java.util.Map getParameterMap()",
            "org.apache.catalina.connector.Request:void parseLocales()",
            "org.apache.catalina.connector.Response:java.util.Collection getHeaders(java.lang.String)",
            "org.apache.catalina.core.ApplicationHttpRequest$AttributeNamesEnumerator:java.lang.String findNext()",
            "org.apache.catalina.core.ApplicationRequest:void setRequest(javax.servlet.ServletRequest)",
            "org.apache.catalina.filters.ExpiresFilter:void init(javax.servlet.FilterConfig)",
            "org.apache.catalina.filters.FilterBase:void init(javax.servlet.FilterConfig)",
            "org.apache.catalina.filters.RemoteIpFilter$XForwardedRequest:void <init>(javax.servlet.http.HttpServletRequest)",
            "org.apache.catalina.filters.RemoteIpFilter:void doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.filters.RequestDumperFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.loader.JdbcLeakPrevention:java.util.List clearJdbcDriverRegistrations()",
            "org.apache.catalina.loader.WebappClassLoader:java.util.Enumeration findResources(java.lang.String)",
            "org.apache.catalina.loader.WebappClassLoader:org.apache.catalina.loader.ResourceEntry findResourceInternal(java.lang.String,java.lang.String)",
            "org.apache.catalina.manager.host.HostManagerServlet:org.apache.tomcat.util.res.StringManager getStringManager(javax.servlet.http.HttpServletRequest)",
            "org.apache.catalina.manager.util.SessionUtils:java.util.Locale guessLocaleFromSession(javax.servlet.http.HttpSession)",
            "org.apache.catalina.manager.util.SessionUtils:java.lang.Object guessUserFromSession(org.apache.catalina.Session)",
            "org.apache.catalina.manager.ManagerServlet:org.apache.tomcat.util.res.StringManager getStringManager(javax.servlet.http.HttpServletRequest)",
            "org.apache.catalina.manager.StatusManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.StatusTransformer:void writeConnectorState(java.io.PrintWriter,javax.management.ObjectName,java.lang.String,javax.management.MBeanServer,java.util.Vector,java.util.Vector,int)",
            "org.apache.catalina.servlets.CGIServlet$CGIEnvironment:boolean setCGIEnvironment(javax.servlet.http.HttpServletRequest)",
            "org.apache.catalina.servlets.CGIServlet$CGIEnvironment:java.lang.String toString()",
            "org.apache.catalina.servlets.CGIServlet$CGIRunner:java.lang.String[] hashToStringArray(java.util.Hashtable)",
            "org.apache.catalina.servlets.CGIServlet:void printServletEnvironment(javax.servlet.ServletOutputStream,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.WebdavServlet$LockInfo:java.lang.String toString()",
            "org.apache.catalina.servlets.WebdavServlet$LockInfo:void toXML(org.apache.catalina.util.XMLWriter)",
            "org.apache.catalina.servlets.WebdavServlet:void doPropfind(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.WebdavServlet:void doLock(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.WebdavServlet:void doUnlock(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.WebdavServlet:boolean isLocked(java.lang.String,java.lang.String)",
            "org.apache.catalina.servlets.WebdavServlet:void sendReport(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Hashtable)",
            "org.apache.catalina.servlets.WebdavServlet:void parseProperties(javax.servlet.http.HttpServletRequest,org.apache.catalina.util.XMLWriter,java.lang.String,int,java.util.Vector)",
            "org.apache.catalina.servlets.WebdavServlet:void parseLockNullProperties(javax.servlet.http.HttpServletRequest,org.apache.catalina.util.XMLWriter,java.lang.String,int,java.util.Vector)",
            "org.apache.catalina.servlets.WebdavServlet:boolean generateLockDiscovery(java.lang.String,org.apache.catalina.util.XMLWriter)",
            "org.apache.catalina.session.ManagerBase:java.util.HashMap getSession(java.lang.String)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:void addVariableNames(java.util.Collection)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:java.lang.Object getReqAttributeIgnoreCase(java.lang.String)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:java.lang.String getCGIVariable(java.lang.String)",
            "org.apache.catalina.startup.CatalinaProperties:void loadProperties()",
            "org.apache.catalina.startup.ContextConfig:void processAnnotationsJar(java.net.URL,org.apache.catalina.deploy.WebXml)",
            "org.apache.catalina.startup.ContextConfig:void processAnnotationsJndi(java.net.URL,org.apache.catalina.deploy.WebXml)",
            "org.apache.catalina.startup.ExpandWar:java.lang.String expand(org.apache.catalina.Host,java.net.URL,java.lang.String)",
            "org.apache.catalina.startup.ExpandWar:void validate(org.apache.catalina.Host,java.net.URL,java.lang.String)",
            "org.apache.catalina.startup.TldConfig:void tldScanJar(java.net.JarURLConnection)",
            "org.apache.catalina.startup.UserConfig:void deploy()",
            "org.apache.catalina.valves.CrawlerSessionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.naming.factory.BeanFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.MailSessionFactory$1:javax.mail.Session run()",
            "org.apache.naming.factory.SendMailFactory$1:javax.mail.internet.MimePartDataSource run()",
            "org.apache.naming.resources.RecyclableNamingEnumeration:boolean hasMore()",
            "org.apache.naming.resources.RecyclableNamingEnumeration:boolean hasMoreElements()",
            "org.apache.naming.resources.WARDirContext:void loadEntries()",
            "org.apache.naming.HandlerRef:java.lang.String toString()",
            "org.apache.naming.NamingContext:void <init>(java.util.Hashtable,java.lang.String)",
            "org.apache.naming.ResourceRef:java.lang.String toString()",
            "org.apache.naming.ServiceRef:java.lang.String toString()",
            "org.apache.tomcat.util.http.MimeHeaders:java.lang.String toString()",
            "org.apache.tomcat.util.http.Parameters:java.lang.String paramsAsString()",
            "org.apache.tomcat.util.modeler.modules.MbeansDescriptorsIntrospectionSource:org.apache.tomcat.util.modeler.ManagedBean createManagedBean(org.apache.tomcat.util.modeler.Registry,java.lang.String,java.lang.Class,java.lang.String)"
        ]
    },
    "org.apache.catalina.core.ApplicationFilterConfig:void initFilter()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterConfig:void <init>(org.apache.catalina.Context,org.apache.catalina.deploy.FilterDef)",
            "org.apache.catalina.core.ApplicationFilterConfig:javax.servlet.Filter getFilter()"
        ]
    },
    "org.apache.catalina.filters.AddDefaultCharsetFilter:void init(javax.servlet.FilterConfig)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterConfig:void initFilter()"
        ]
    },
    "org.apache.catalina.filters.CsrfPreventionFilter:void init(javax.servlet.FilterConfig)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterConfig:void initFilter()"
        ]
    },
    "org.apache.catalina.loader.WebappClassLoader$PrivilegedFindResourceByName:org.apache.catalina.loader.ResourceEntry run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.loader.WebappClassLoader$PrivilegedFindResourceByName:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.loader.WebappClassLoader:java.net.URL findResource(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.loader.WebappClassLoader:java.net.URL getResource(java.lang.String)",
            "org.apache.catalina.loader.WebappClassLoader:java.io.InputStream getResourceAsStream(java.lang.String)"
        ]
    },
    "org.apache.catalina.loader.WebappClassLoader:java.lang.Class findClassInternal(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.loader.WebappClassLoader:java.lang.Class findClass(java.lang.String)"
        ]
    },
    "org.apache.catalina.manager.util.SessionUtils:java.util.Locale guessLocaleFromSession(org.apache.catalina.Session)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.JspHelper:java.lang.String guessDisplayLocaleFromSession(org.apache.catalina.Session)"
        ]
    },
    "org.apache.catalina.manager.JspHelper:java.lang.String guessDisplayUserFromSession(org.apache.catalina.Session)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.HTMLManagerServlet$7:java.lang.Comparable getComparableObject(org.apache.catalina.Session)"
        ]
    },
    "org.apache.catalina.connector.Connector:java.lang.String createObjectNameKeyProperties(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Connector:java.lang.String getObjectNameKeyProperties()",
            "org.apache.catalina.connector.MapperListener:java.lang.String getObjectNameKeyProperties()"
        ]
    },
    "org.apache.catalina.connector.MapperListener:void containerEvent(org.apache.catalina.ContainerEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ContainerBase:void fireContainerEvent(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.catalina.core.ApplicationHttpRequest:java.lang.String getParameter(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.filters.CsrfPreventionFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.manager.host.HTMLHostManagerServlet:void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.host.HostManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.host.HostManagerServlet:void add(javax.servlet.http.HttpServletRequest,java.io.PrintWriter,java.lang.String,boolean,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.host.HostManagerServlet:boolean booleanParameter(javax.servlet.http.HttpServletRequest,java.lang.String,boolean,boolean)",
            "org.apache.catalina.manager.HTMLManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.HTMLManagerServlet:void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.HTMLManagerServlet:java.lang.String expireSessions(org.apache.catalina.util.ContextName,javax.servlet.http.HttpServletRequest,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.HTMLManagerServlet:void doSessions(org.apache.catalina.util.ContextName,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.HTMLManagerServlet:void displaySessionsListPage(org.apache.catalina.util.ContextName,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.JMXProxyServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.ManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.ManagerServlet:void doPut(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.ManagerServlet:void expireSessions(java.io.PrintWriter,org.apache.catalina.util.ContextName,javax.servlet.http.HttpServletRequest,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.StatusManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.core.ApplicationHttpRequest:java.lang.String[] getParameterValues(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.filters.RequestDumperFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.manager.HTMLManagerServlet:void doSessions(org.apache.catalina.util.ContextName,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.servlets.CGIServlet:void printServletEnvironment(javax.servlet.ServletOutputStream,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.core.ApplicationHttpRequest:java.lang.String[] mergeValues(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationHttpRequest:void mergeParameters()"
        ]
    },
    "org.apache.catalina.core.NamingContextListener:void addResourceLink(org.apache.catalina.deploy.ContextResourceLink)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.NamingContextListener:void containerEvent(org.apache.catalina.ContainerEvent)",
            "org.apache.catalina.core.NamingContextListener:void processGlobalResourcesChange(java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.catalina.core.NamingContextListener:void createNamingContext()"
        ]
    },
    "org.apache.catalina.deploy.WebXml:void appendElement(java.lang.StringBuilder,java.lang.String,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.deploy.WebXml:java.lang.String toXml()"
        ]
    },
    "org.apache.catalina.loader.WebappClassLoader:void checkThreadLocalMapForLeaks(java.lang.Object,java.lang.reflect.Field)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.loader.WebappClassLoader:void checkThreadLocalsForLeaks()"
        ]
    },
    "org.apache.catalina.loader.WebappLoader:void propertyChange(java.beans.PropertyChangeEvent)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.manager.JMXProxyServlet:void getAttribute(java.io.PrintWriter,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.JMXProxyServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.manager.JMXProxyServlet:void listBeans(java.io.PrintWriter,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.JMXProxyServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.manager.JspHelper:java.lang.String escapeXml(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.JspHelper:java.lang.String guessDisplayUserFromSession(org.apache.catalina.Session)"
        ]
    },
    "org.apache.catalina.manager.StatusTransformer:java.lang.String filter(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.StatusTransformer:void writeProcessorState(java.io.PrintWriter,javax.management.ObjectName,javax.management.MBeanServer,int)",
            "org.apache.catalina.manager.StatusTransformer:void writeDetailedState(java.io.PrintWriter,javax.management.MBeanServer,int)",
            "org.apache.catalina.manager.StatusTransformer:void writeContext(java.io.PrintWriter,javax.management.ObjectName,javax.management.MBeanServer,int)",
            "org.apache.catalina.manager.StatusTransformer:void writeWrapper(java.io.PrintWriter,javax.management.ObjectName,javax.management.MBeanServer,int)"
        ]
    },
    "org.apache.catalina.mbeans.MBeanUtils:javax.management.ObjectName createObjectName(java.lang.String,org.apache.catalina.connector.Connector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.MBeanUtils:void destroyMBean(org.apache.catalina.connector.Connector,org.apache.catalina.Service)"
        ]
    },
    "org.apache.catalina.realm.JNDIRealm:java.lang.String getAttributeValue(java.lang.String,javax.naming.directory.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.realm.JNDIRealm:org.apache.catalina.realm.JNDIRealm$User getUserByPattern(javax.naming.directory.DirContext,java.lang.String,java.lang.String[],java.lang.String)",
            "org.apache.catalina.realm.JNDIRealm:org.apache.catalina.realm.JNDIRealm$User getUserBySearch(javax.naming.directory.DirContext,java.lang.String,java.lang.String[])",
            "org.apache.catalina.realm.JNDIRealm:java.util.List getRoles(javax.naming.directory.DirContext,org.apache.catalina.realm.JNDIRealm$User)"
        ]
    },
    "org.apache.catalina.session.ManagerBase:java.lang.String getSessionAttribute(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.ManagerBase:java.util.HashMap getSession(java.lang.String)"
        ]
    },
    "org.apache.catalina.valves.AccessLogValve$SessionAttributeElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.valves.AccessLogValve:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)"
        ]
    },
    "org.apache.catalina.valves.ExtendedAccessLogValve:java.lang.String wrap(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.valves.ExtendedAccessLogValve:java.lang.String access$300(org.apache.catalina.valves.ExtendedAccessLogValve,java.lang.Object)"
        ]
    },
    "org.apache.naming.factory.DataSourceLinkFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.factory.EjbFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.ResourceEnvFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.ResourceFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.TransactionFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)"
        ]
    },
    "org.apache.naming.factory.EjbFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.factory.EjbFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.ResourceEnvFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.ResourceFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.TransactionFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)"
        ]
    },
    "org.apache.naming.factory.OpenEjbFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.factory.EjbFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.ResourceEnvFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.ResourceFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.TransactionFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)"
        ]
    },
    "org.apache.naming.factory.ResourceEnvFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.factory.EjbFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.ResourceEnvFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.ResourceFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.TransactionFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)"
        ]
    },
    "org.apache.naming.factory.ResourceFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.factory.EjbFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.ResourceEnvFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.ResourceFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.TransactionFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)"
        ]
    },
    "org.apache.naming.factory.ResourceLinkFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.factory.DataSourceLinkFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.EjbFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.ResourceEnvFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.ResourceFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.TransactionFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)"
        ]
    },
    "org.apache.naming.factory.TransactionFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.factory.EjbFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.ResourceEnvFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.ResourceFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.TransactionFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)"
        ]
    },
    "org.apache.naming.resources.DirContextURLConnection:java.lang.String getHeaderValueAsString(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.resources.DirContextURLConnection:java.util.Map getHeaderFields()",
            "org.apache.naming.resources.DirContextURLConnection:java.lang.String getHeaderField(java.lang.String)"
        ]
    },
    "org.apache.naming.resources.ProxyDirContext:java.lang.Object lookup(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationContext:java.net.URL getResource(java.lang.String)",
            "org.apache.catalina.core.ApplicationContext:java.io.InputStream getResourceAsStream(java.lang.String)",
            "org.apache.catalina.core.DefaultInstanceManager:void lookupFieldResource(javax.naming.Context,java.lang.Object,java.lang.reflect.Field,java.lang.String,java.lang.Class)",
            "org.apache.catalina.core.DefaultInstanceManager:void lookupMethodResource(javax.naming.Context,java.lang.Object,java.lang.reflect.Method,java.lang.String,java.lang.Class)",
            "org.apache.catalina.core.NamingContextListener:void addResource(org.apache.catalina.deploy.ContextResource)",
            "org.apache.catalina.core.NamingContextListener:void createSubcontexts(javax.naming.Context,java.lang.String)",
            "org.apache.catalina.core.StandardContext:boolean resourcesStart()",
            "org.apache.catalina.deploy.NamingResources:void cleanUp()",
            "org.apache.catalina.loader.WebappClassLoader:java.util.Enumeration findResources(java.lang.String)",
            "org.apache.catalina.loader.WebappClassLoader:org.apache.catalina.loader.ResourceEntry findResourceInternal(java.lang.String,java.lang.String)",
            "org.apache.catalina.loader.WebappLoader:void setRepositories()",
            "org.apache.catalina.loader.WebappLoader:boolean copyDir(javax.naming.directory.DirContext,java.io.File)",
            "org.apache.catalina.mbeans.GlobalResourcesLifecycleListener:void createMBeans(java.lang.String,javax.naming.Context)",
            "org.apache.catalina.realm.DataSourceRealm:java.sql.Connection open()",
            "org.apache.catalina.realm.UserDatabaseRealm:void startInternal()",
            "org.apache.catalina.servlets.DefaultServlet:void doPut(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.DefaultServlet:java.io.File executePartialPut(javax.servlet.http.HttpServletRequest,org.apache.catalina.servlets.DefaultServlet$Range,java.lang.String)",
            "org.apache.catalina.servlets.DefaultServlet:void doDelete(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.DefaultServlet:java.lang.String getReadme(javax.naming.directory.DirContext)",
            "org.apache.catalina.servlets.DefaultServlet:java.io.InputStream findXsltInputStream(javax.naming.directory.DirContext)",
            "org.apache.catalina.servlets.WebdavServlet:void doPropfind(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.WebdavServlet:void doMkcol(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.WebdavServlet:void doLock(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.WebdavServlet:boolean copyResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.WebdavServlet:boolean copyResource(javax.naming.directory.DirContext,java.util.Hashtable,java.lang.String,java.lang.String)",
            "org.apache.catalina.servlets.WebdavServlet:boolean deleteResource(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,boolean)",
            "org.apache.catalina.servlets.WebdavServlet:void deleteCollection(javax.servlet.http.HttpServletRequest,javax.naming.directory.DirContext,java.lang.String,java.util.Hashtable)",
            "org.apache.catalina.servlets.WebdavServlet:java.lang.StringBuilder determineMethodsAllowed(javax.naming.directory.DirContext,javax.servlet.http.HttpServletRequest)",
            "org.apache.catalina.util.ExtensionValidator:boolean validateApplication(javax.naming.directory.DirContext,org.apache.catalina.Context)",
            "org.apache.naming.factory.ResourceLinkFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.resources.BaseDirContext:java.lang.Object lookup(java.lang.String)",
            "org.apache.naming.resources.DirContextURLConnection:void connect()",
            "org.apache.naming.resources.DirContextURLConnection:java.io.InputStream getInputStream()",
            "org.apache.naming.resources.ProxyDirContext:java.lang.Object lookup(java.lang.String)",
            "org.apache.naming.resources.ProxyDirContext:org.apache.naming.resources.CacheEntry lookupCache(java.lang.String)",
            "org.apache.naming.resources.ProxyDirContext:void cacheLoad(org.apache.naming.resources.CacheEntry)",
            "org.apache.naming.SelectorContext:java.lang.Object lookup(java.lang.String)",
            "org.apache.tomcat.util.http.mapper.Mapper:void internalMapWrapper(org.apache.tomcat.util.http.mapper.Mapper$ContextVersion,org.apache.tomcat.util.buf.CharChunk,org.apache.tomcat.util.http.mapper.MappingData)"
        ]
    },
    "org.apache.naming.resources.ProxyDirContext:org.apache.naming.resources.CacheEntry lookupCache(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.DefaultServlet:void serveResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,boolean)",
            "org.apache.catalina.servlets.DefaultServlet:java.io.InputStream renderXml(java.lang.String,org.apache.naming.resources.CacheEntry,java.io.InputStream)",
            "org.apache.catalina.servlets.DefaultServlet:java.io.InputStream renderHtml(java.lang.String,org.apache.naming.resources.CacheEntry)",
            "org.apache.catalina.servlets.WebdavServlet:void parseProperties(javax.servlet.http.HttpServletRequest,org.apache.catalina.util.XMLWriter,java.lang.String,int,java.util.Vector)"
        ]
    },
    "org.apache.naming.resources.ProxyDirContext:void cacheLoad(org.apache.naming.resources.CacheEntry)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.resources.ProxyDirContext:org.apache.naming.resources.CacheEntry cacheLookup(java.lang.String)"
        ]
    },
    "org.apache.naming.resources.ResourceAttributes:long getContentLength()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.loader.WebappClassLoader:org.apache.catalina.loader.ResourceEntry findResourceInternal(java.lang.String,java.lang.String)",
            "org.apache.catalina.servlets.DefaultServlet:void serveResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,boolean)",
            "org.apache.catalina.servlets.DefaultServlet:java.util.ArrayList parseRange(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.naming.resources.ResourceAttributes)",
            "org.apache.catalina.servlets.DefaultServlet:java.io.InputStream renderXml(java.lang.String,org.apache.naming.resources.CacheEntry,java.io.InputStream)",
            "org.apache.catalina.servlets.DefaultServlet:java.io.InputStream renderHtml(java.lang.String,org.apache.naming.resources.CacheEntry)",
            "org.apache.catalina.servlets.WebdavServlet:void parseProperties(javax.servlet.http.HttpServletRequest,org.apache.catalina.util.XMLWriter,java.lang.String,int,java.util.Vector)",
            "org.apache.naming.resources.ProxyDirContext:boolean revalidate(org.apache.naming.resources.CacheEntry)",
            "org.apache.naming.resources.ProxyDirContext:void cacheLoad(org.apache.naming.resources.CacheEntry)",
            "org.apache.naming.resources.ResourceAttributes:java.lang.String getETag()",
            "org.apache.naming.resources.ResourceAttributes:javax.naming.directory.Attribute get(java.lang.String)",
            "org.apache.naming.resources.ResourceAttributes:javax.naming.NamingEnumeration getAll()",
            "org.apache.naming.resources.ResourceAttributes:javax.naming.NamingEnumeration getIDs()",
            "org.apache.naming.resources.ResourceAttributes:int size()"
        ]
    },
    "org.apache.naming.resources.ResourceAttributes:long getCreation()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.WebdavServlet:void parseProperties(javax.servlet.http.HttpServletRequest,org.apache.catalina.util.XMLWriter,java.lang.String,int,java.util.Vector)"
        ]
    },
    "org.apache.naming.resources.ResourceAttributes:java.util.Date getCreationDate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.resources.FileDirContext$FileResourceAttributes:java.util.Date getCreationDate()",
            "org.apache.naming.resources.ResourceAttributes:java.lang.String getLastModifiedHttp()",
            "org.apache.naming.resources.ResourceAttributes:javax.naming.directory.Attribute get(java.lang.String)",
            "org.apache.naming.resources.ResourceAttributes:javax.naming.NamingEnumeration getAll()",
            "org.apache.naming.resources.ResourceAttributes:javax.naming.NamingEnumeration getIDs()",
            "org.apache.naming.resources.ResourceAttributes:int size()"
        ]
    },
    "org.apache.naming.resources.ResourceAttributes:long getLastModified()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.loader.WebappClassLoader:void addJar(java.lang.String,java.util.jar.JarFile,java.io.File)",
            "org.apache.catalina.loader.WebappClassLoader:boolean modified()",
            "org.apache.catalina.loader.WebappClassLoader:org.apache.catalina.loader.ResourceEntry findResourceInternal(java.lang.String,java.lang.String)",
            "org.apache.catalina.servlets.DefaultServlet:java.util.ArrayList parseRange(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.naming.resources.ResourceAttributes)",
            "org.apache.catalina.servlets.DefaultServlet:boolean checkIfModifiedSince(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.naming.resources.ResourceAttributes)",
            "org.apache.catalina.servlets.DefaultServlet:boolean checkIfUnmodifiedSince(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.naming.resources.ResourceAttributes)",
            "org.apache.catalina.servlets.WebdavServlet:void parseProperties(javax.servlet.http.HttpServletRequest,org.apache.catalina.util.XMLWriter,java.lang.String,int,java.util.Vector)",
            "org.apache.naming.resources.ProxyDirContext:boolean revalidate(org.apache.naming.resources.CacheEntry)",
            "org.apache.naming.resources.ResourceAttributes:java.lang.String getETag()"
        ]
    },
    "org.apache.naming.resources.ResourceAttributes:java.util.Date getLastModifiedDate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.resources.FileDirContext$FileResourceAttributes:java.util.Date getLastModifiedDate()",
            "org.apache.naming.resources.ResourceAttributes:java.lang.String getLastModifiedHttp()",
            "org.apache.naming.resources.ResourceAttributes:javax.naming.directory.Attribute get(java.lang.String)",
            "org.apache.naming.resources.ResourceAttributes:javax.naming.NamingEnumeration getAll()",
            "org.apache.naming.resources.ResourceAttributes:javax.naming.NamingEnumeration getIDs()",
            "org.apache.naming.resources.ResourceAttributes:int size()"
        ]
    },
    "org.apache.naming.resources.ResourceAttributes:java.lang.String getName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.resources.ResourceAttributes:javax.naming.directory.Attribute get(java.lang.String)",
            "org.apache.naming.resources.ResourceAttributes:javax.naming.NamingEnumeration getAll()",
            "org.apache.naming.resources.ResourceAttributes:javax.naming.NamingEnumeration getIDs()",
            "org.apache.naming.resources.ResourceAttributes:int size()"
        ]
    },
    "org.apache.naming.resources.ResourceAttributes:java.lang.String getResourceType()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.resources.FileDirContext$FileResourceAttributes:java.lang.String getResourceType()",
            "org.apache.naming.resources.ResourceAttributes:boolean isCollection()",
            "org.apache.naming.resources.ResourceAttributes:javax.naming.directory.Attribute get(java.lang.String)",
            "org.apache.naming.resources.ResourceAttributes:javax.naming.NamingEnumeration getAll()",
            "org.apache.naming.resources.ResourceAttributes:javax.naming.NamingEnumeration getIDs()",
            "org.apache.naming.resources.ResourceAttributes:int size()"
        ]
    },
    "org.apache.naming.resources.ResourceAttributes:java.lang.String getETag()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.DefaultServlet:void serveResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,boolean)",
            "org.apache.catalina.servlets.DefaultServlet:java.util.ArrayList parseRange(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.naming.resources.ResourceAttributes)",
            "org.apache.catalina.servlets.DefaultServlet:boolean checkIfMatch(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.naming.resources.ResourceAttributes)",
            "org.apache.catalina.servlets.DefaultServlet:boolean checkIfModifiedSince(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.naming.resources.ResourceAttributes)",
            "org.apache.catalina.servlets.DefaultServlet:boolean checkIfNoneMatch(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.naming.resources.ResourceAttributes)",
            "org.apache.catalina.servlets.WebdavServlet:void parseProperties(javax.servlet.http.HttpServletRequest,org.apache.catalina.util.XMLWriter,java.lang.String,int,java.util.Vector)",
            "org.apache.naming.resources.ResourceAttributes:javax.naming.directory.Attribute get(java.lang.String)",
            "org.apache.naming.resources.ResourceAttributes:javax.naming.NamingEnumeration getAll()",
            "org.apache.naming.resources.ResourceAttributes:javax.naming.NamingEnumeration getIDs()",
            "org.apache.naming.resources.ResourceAttributes:int size()"
        ]
    },
    "org.apache.tomcat.util.bcel.classfile.JavaClass:java.lang.String indent(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.bcel.classfile.JavaClass:java.lang.String toString()"
        ]
    },
    "org.apache.tomcat.util.digester.CallMethodRule:void end(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.CallMethodMultiRule:void end(java.lang.String,java.lang.String)",
            "org.apache.tomcat.util.digester.Digester:void endElement(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.tomcat.util.modeler.modules.MbeansSource:void updateField(javax.management.ObjectName,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.tomcat.util.modeler.BaseModelMBean:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Connector:java.lang.String createObjectNameKeyProperties(java.lang.String)",
            "org.apache.catalina.connector.CoyoteAdapter:void parseSessionSslId(org.apache.catalina.connector.Request)",
            "org.apache.catalina.connector.MapperListener:void containerEvent(org.apache.catalina.ContainerEvent)",
            "org.apache.catalina.connector.Request:java.lang.Object getAttribute(java.lang.String)",
            "org.apache.catalina.core.ApplicationFilterFactory:org.apache.catalina.core.ApplicationFilterChain createFilterChain(javax.servlet.ServletRequest,org.apache.catalina.Wrapper,javax.servlet.Servlet)",
            "org.apache.catalina.core.ApplicationHttpRequest:java.lang.Object getAttribute(java.lang.String)",
            "org.apache.catalina.core.ApplicationHttpRequest:java.lang.String getParameter(java.lang.String)",
            "org.apache.catalina.core.ApplicationHttpRequest:java.lang.String[] getParameterValues(java.lang.String)",
            "org.apache.catalina.core.ApplicationHttpRequest:java.lang.String[] mergeValues(java.lang.Object,java.lang.Object)",
            "org.apache.catalina.core.NamingContextListener:void addResourceLink(org.apache.catalina.deploy.ContextResourceLink)",
            "org.apache.catalina.deploy.WebXml:void appendElement(java.lang.StringBuilder,java.lang.String,java.lang.String,java.lang.Object)",
            "org.apache.catalina.loader.WebappClassLoader:void checkThreadLocalMapForLeaks(java.lang.Object,java.lang.reflect.Field)",
            "org.apache.catalina.loader.WebappLoader:void propertyChange(java.beans.PropertyChangeEvent)",
            "org.apache.catalina.manager.JMXProxyServlet:void getAttribute(java.io.PrintWriter,java.lang.String,java.lang.String)",
            "org.apache.catalina.manager.JMXProxyServlet:void listBeans(java.io.PrintWriter,java.lang.String)",
            "org.apache.catalina.manager.JspHelper:java.lang.String escapeXml(java.lang.Object)",
            "org.apache.catalina.manager.StatusTransformer:java.lang.String filter(java.lang.Object)",
            "org.apache.catalina.mbeans.MBeanUtils:javax.management.ObjectName createObjectName(java.lang.String,org.apache.catalina.connector.Connector)",
            "org.apache.catalina.realm.JNDIRealm:java.lang.String getAttributeValue(java.lang.String,javax.naming.directory.Attributes)",
            "org.apache.catalina.servlets.CGIServlet$CGIRunner:java.lang.String[] hashToStringArray(java.util.Hashtable)",
            "org.apache.catalina.session.ManagerBase:java.lang.String getSessionAttribute(java.lang.String,java.lang.String)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:java.lang.String getVariableValue(java.lang.String)",
            "org.apache.catalina.users.MemoryUserDatabaseFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.catalina.valves.AccessLogValve$RequestAttributeElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.valves.AccessLogValve$SessionAttributeElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.valves.ExtendedAccessLogValve:java.lang.String wrap(java.lang.Object)",
            "org.apache.naming.factory.DataSourceLinkFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.EjbFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.OpenEjbFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.ResourceEnvFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.ResourceFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.ResourceLinkFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.TransactionFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.resources.DirContextURLConnection:java.lang.String getHeaderValueAsString(java.lang.Object)",
            "org.apache.naming.resources.ProxyDirContext:java.lang.Object lookup(java.lang.String)",
            "org.apache.naming.resources.ProxyDirContext:org.apache.naming.resources.CacheEntry lookupCache(java.lang.String)",
            "org.apache.naming.resources.ProxyDirContext:void cacheLoad(org.apache.naming.resources.CacheEntry)",
            "org.apache.naming.resources.ResourceAttributes:long getContentLength()",
            "org.apache.naming.resources.ResourceAttributes:long getCreation()",
            "org.apache.naming.resources.ResourceAttributes:java.util.Date getCreationDate()",
            "org.apache.naming.resources.ResourceAttributes:long getLastModified()",
            "org.apache.naming.resources.ResourceAttributes:java.util.Date getLastModifiedDate()",
            "org.apache.naming.resources.ResourceAttributes:java.lang.String getName()",
            "org.apache.naming.resources.ResourceAttributes:java.lang.String getResourceType()",
            "org.apache.naming.resources.ResourceAttributes:java.lang.String getETag()",
            "org.apache.tomcat.util.bcel.classfile.JavaClass:java.lang.String indent(java.lang.Object)",
            "org.apache.tomcat.util.digester.CallMethodRule:void end(java.lang.String,java.lang.String)",
            "org.apache.tomcat.util.modeler.modules.MbeansSource:void updateField(javax.management.ObjectName,java.lang.String,java.lang.Object)",
            "org.apache.tomcat.util.modeler.BaseModelMBean:java.lang.String toString()"
        ]
    },
    "org.apache.catalina.servlets.WebdavServlet:void deleteCollection(javax.servlet.http.HttpServletRequest,javax.naming.directory.DirContext,java.lang.String,java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.WebdavServlet:boolean deleteResource(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,boolean)",
            "org.apache.catalina.servlets.WebdavServlet:void deleteCollection(javax.servlet.http.HttpServletRequest,javax.naming.directory.DirContext,java.lang.String,java.util.Hashtable)"
        ]
    },
    "org.apache.catalina.startup.CatalinaProperties:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.security.SecurityConfig:void <init>()",
            "org.apache.catalina.startup.Bootstrap:java.lang.ClassLoader createClassLoader(java.lang.String,java.lang.ClassLoader)",
            "org.apache.catalina.startup.CatalinaProperties:java.lang.String getProperty(java.lang.String)",
            "org.apache.catalina.startup.CatalinaProperties:java.lang.String getProperty(java.lang.String,java.lang.String)",
            "org.apache.catalina.startup.CatalinaProperties:void loadProperties()",
            "org.apache.catalina.startup.CatalinaProperties:java.lang.String getCatalinaBase()",
            "org.apache.catalina.startup.CatalinaProperties:void <clinit>()"
        ]
    },
    "org.apache.catalina.startup.ContextConfig:void processAnnotationsUrl(java.net.URL,org.apache.catalina.deploy.WebXml)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void webConfig()",
            "org.apache.catalina.startup.ContextConfig:void processAnnotations(java.util.Set)"
        ]
    },
    "org.apache.catalina.startup.ContextConfig:void fixDocBase()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void init()"
        ]
    },
    "org.apache.catalina.startup.TldConfig:void access$100(org.apache.catalina.startup.TldConfig,java.net.JarURLConnection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.TldConfig$TldJarScannerCallback:void scan(java.net.JarURLConnection)"
        ]
    },
    "org.apache.naming.factory.MailSessionFactory$1:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.factory.MailSessionFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)"
        ]
    },
    "org.apache.naming.factory.SendMailFactory$1:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.factory.SendMailFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)"
        ]
    },
    "org.apache.catalina.core.ApplicationContext:void listCollectionPaths(java.util.Set,javax.naming.directory.DirContext,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationContext:java.util.Set getResourcePathsInternal(javax.naming.directory.DirContext,java.lang.String)"
        ]
    },
    "org.apache.catalina.loader.WebappClassLoader:boolean modified()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.loader.WebappLoader:boolean modified()"
        ]
    },
    "org.apache.catalina.servlets.DefaultServlet:java.io.InputStream renderXml(java.lang.String,org.apache.naming.resources.CacheEntry,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.DefaultServlet:java.io.InputStream render(java.lang.String,org.apache.naming.resources.CacheEntry)"
        ]
    },
    "org.apache.catalina.servlets.WebdavServlet:boolean copyResource(javax.naming.directory.DirContext,java.util.Hashtable,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.WebdavServlet:boolean copyResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.WebdavServlet:boolean copyResource(javax.naming.directory.DirContext,java.util.Hashtable,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.util.ExtensionValidator:boolean validateApplication(javax.naming.directory.DirContext,org.apache.catalina.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:void startInternal()"
        ]
    },
    "org.apache.naming.resources.DirContextURLConnection:java.util.Enumeration list()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void processAnnotationsJndi(java.net.URL,org.apache.catalina.deploy.WebXml)"
        ]
    },
    "org.apache.naming.resources.RecyclableNamingEnumeration:java.lang.Object next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.ManagerServlet:void printResources(java.io.PrintWriter,java.lang.String,javax.naming.Context,java.lang.String,java.lang.Class,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.mbeans.GlobalResourcesLifecycleListener:void createMBeans(java.lang.String,javax.naming.Context)",
            "org.apache.catalina.realm.JNDIRealm:org.apache.catalina.realm.JNDIRealm$User getUserBySearch(javax.naming.directory.DirContext,java.lang.String,java.lang.String[])",
            "org.apache.catalina.realm.JNDIRealm:java.util.List getRoles(javax.naming.directory.DirContext,org.apache.catalina.realm.JNDIRealm$User)",
            "org.apache.catalina.realm.JNDIRealm:java.util.ArrayList addAttributeValues(java.lang.String,javax.naming.directory.Attributes,java.util.ArrayList)",
            "org.apache.naming.resources.DirContextURLConnection:java.util.Map getHeaderFields()",
            "org.apache.naming.resources.DirContextURLConnection:java.lang.String getHeaderField(java.lang.String)"
        ]
    },
    "org.apache.naming.resources.BaseDirContext:void addResourcesJar(java.net.URL)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:void addResourceJarUrl(java.net.URL)"
        ]
    },
    "org.apache.naming.resources.WARDirContext:void setDocBase(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:boolean resourcesStart()",
            "org.apache.naming.resources.BaseDirContext:void setAliases(java.lang.String)"
        ]
    },
    "org.apache.naming.java.javaURLContextFactory:javax.naming.Context getInitialContext(java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.naming.NamingContext:void <init>(java.util.Hashtable,java.lang.String,java.util.HashMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.NamingContext:java.lang.Object lookup(javax.naming.Name,boolean)"
        ]
    },
    "org.apache.naming.NamingContext:javax.naming.Context createSubcontext(javax.naming.Name)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.NamingContext:javax.naming.Context createSubcontext(java.lang.String)",
            "org.apache.naming.SelectorContext:javax.naming.Context createSubcontext(javax.naming.Name)"
        ]
    },
    "org.apache.naming.SelectorContext:javax.naming.Context getBoundContext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.SelectorContext:java.lang.Object lookup(javax.naming.Name)",
            "org.apache.naming.SelectorContext:java.lang.Object lookup(java.lang.String)",
            "org.apache.naming.SelectorContext:void bind(javax.naming.Name,java.lang.Object)",
            "org.apache.naming.SelectorContext:void bind(java.lang.String,java.lang.Object)",
            "org.apache.naming.SelectorContext:void rebind(javax.naming.Name,java.lang.Object)",
            "org.apache.naming.SelectorContext:void rebind(java.lang.String,java.lang.Object)",
            "org.apache.naming.SelectorContext:void unbind(javax.naming.Name)",
            "org.apache.naming.SelectorContext:void unbind(java.lang.String)",
            "org.apache.naming.SelectorContext:void rename(javax.naming.Name,javax.naming.Name)",
            "org.apache.naming.SelectorContext:void rename(java.lang.String,java.lang.String)",
            "org.apache.naming.SelectorContext:javax.naming.NamingEnumeration list(javax.naming.Name)",
            "org.apache.naming.SelectorContext:javax.naming.NamingEnumeration list(java.lang.String)",
            "org.apache.naming.SelectorContext:javax.naming.NamingEnumeration listBindings(javax.naming.Name)",
            "org.apache.naming.SelectorContext:javax.naming.NamingEnumeration listBindings(java.lang.String)",
            "org.apache.naming.SelectorContext:void destroySubcontext(javax.naming.Name)",
            "org.apache.naming.SelectorContext:void destroySubcontext(java.lang.String)",
            "org.apache.naming.SelectorContext:javax.naming.Context createSubcontext(javax.naming.Name)",
            "org.apache.naming.SelectorContext:javax.naming.Context createSubcontext(java.lang.String)",
            "org.apache.naming.SelectorContext:java.lang.Object lookupLink(javax.naming.Name)",
            "org.apache.naming.SelectorContext:java.lang.Object lookupLink(java.lang.String)",
            "org.apache.naming.SelectorContext:javax.naming.NameParser getNameParser(javax.naming.Name)",
            "org.apache.naming.SelectorContext:javax.naming.NameParser getNameParser(java.lang.String)",
            "org.apache.naming.SelectorContext:java.lang.Object addToEnvironment(java.lang.String,java.lang.Object)",
            "org.apache.naming.SelectorContext:java.lang.Object removeFromEnvironment(java.lang.String)",
            "org.apache.naming.SelectorContext:java.util.Hashtable getEnvironment()",
            "org.apache.naming.SelectorContext:void close()"
        ]
    },
    "org.apache.tomcat.util.modeler.modules.MbeansDescriptorsIntrospectionSource:void execute()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.modeler.modules.MbeansDescriptorsIntrospectionSource:java.util.List loadDescriptors(org.apache.tomcat.util.modeler.Registry,java.lang.String,java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.catalina.ssi.SSIMediator:java.lang.String substituteVariables(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.ExpressionParseTree$StringNode:java.lang.String getValue()",
            "org.apache.catalina.ssi.SSIConfig:long process(org.apache.catalina.ssi.SSIMediator,java.lang.String,java.lang.String[],java.lang.String[],java.io.PrintWriter)",
            "org.apache.catalina.ssi.SSIExec:long process(org.apache.catalina.ssi.SSIMediator,java.lang.String,java.lang.String[],java.lang.String[],java.io.PrintWriter)",
            "org.apache.catalina.ssi.SSIFlastmod:long process(org.apache.catalina.ssi.SSIMediator,java.lang.String,java.lang.String[],java.lang.String[],java.io.PrintWriter)",
            "org.apache.catalina.ssi.SSIFsize:long process(org.apache.catalina.ssi.SSIMediator,java.lang.String,java.lang.String[],java.lang.String[],java.io.PrintWriter)",
            "org.apache.catalina.ssi.SSIInclude:long process(org.apache.catalina.ssi.SSIMediator,java.lang.String,java.lang.String[],java.lang.String[],java.io.PrintWriter)",
            "org.apache.catalina.ssi.SSISet:long process(org.apache.catalina.ssi.SSIMediator,java.lang.String,java.lang.String[],java.lang.String[],java.io.PrintWriter)"
        ]
    },
    "org.apache.catalina.ssi.SSIMediator:void <init>(org.apache.catalina.ssi.SSIExternalResolver,long,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIProcessor:long process(java.io.Reader,long,java.io.PrintWriter)"
        ]
    },
    "org.apache.catalina.ssi.SSIMediator:void setConfigTimeFmt(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIConfig:long process(org.apache.catalina.ssi.SSIMediator,java.lang.String,java.lang.String[],java.lang.String[],java.io.PrintWriter)"
        ]
    },
    "org.apache.catalina.ssi.SSIServletExternalResolver:java.net.URLConnection getURLConnection(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIServletExternalResolver:long getFileLastModified(java.lang.String,boolean)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:long getFileSize(java.lang.String,boolean)"
        ]
    },
    "org.apache.catalina.core.ApplicationFilterChain$2:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain:void doFilterEvent(org.apache.catalina.comet.CometEvent)"
        ]
    },
    "org.apache.catalina.connector.RequestFacade$GetParameterMapPrivilegedAction:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:java.util.Map getParameterMap()"
        ]
    },
    "org.apache.catalina.core.ApplicationHttpRequest:java.util.Map getParameterMap()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationHttpRequest:void parseParameters()"
        ]
    },
    "org.apache.catalina.core.ApplicationHttpRequest:java.util.Enumeration getParameterNames()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.filters.RequestDumperFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.servlets.CGIServlet:void printServletEnvironment(javax.servlet.ServletOutputStream,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.session.StandardManager$PrivilegedDoUnload:java.lang.Void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.StandardManager$PrivilegedDoUnload:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.session.StandardManager:void unload()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.StandardManager:void stopInternal()"
        ]
    },
    "org.apache.catalina.connector.Request:boolean isRequestedSessionIdValid()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:void parseSessionCookiesId(org.apache.coyote.Request,org.apache.catalina.connector.Request)",
            "org.apache.catalina.connector.RequestFacade:boolean isRequestedSessionIdValid()",
            "org.apache.catalina.servlets.CGIServlet:void printServletEnvironment(javax.servlet.ServletOutputStream,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.valves.ExtendedAccessLogValve$8:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)"
        ]
    },
    "org.apache.catalina.connector.Request:org.apache.catalina.Session doGetSession(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Request:javax.servlet.http.HttpSession getSession()",
            "org.apache.catalina.connector.Request:javax.servlet.http.HttpSession getSession(boolean)",
            "org.apache.catalina.connector.Request:org.apache.catalina.Session getSessionInternal()",
            "org.apache.catalina.connector.Request:org.apache.catalina.Session getSessionInternal(boolean)"
        ]
    },
    "org.apache.catalina.core.ApplicationHttpRequest:javax.servlet.http.HttpSession getSession(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationHttpRequest:javax.servlet.http.HttpSession getSession()",
            "org.apache.catalina.filters.CsrfPreventionFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.security.SecurityUtil:void execute(java.lang.reflect.Method,java.lang.Object,java.lang.Object[],java.security.Principal)",
            "org.apache.catalina.servlets.CGIServlet:void printServletEnvironment(javax.servlet.ServletOutputStream,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.core.ApplicationHttpRequest:boolean isRequestedSessionIdValid()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.CGIServlet:void printServletEnvironment(javax.servlet.ServletOutputStream,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.session.JDBCStore:void save(org.apache.catalina.Session)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase$PrivilegedStoreSave:java.lang.Void run()",
            "org.apache.catalina.session.PersistentManagerBase:void writeSession(org.apache.catalina.Session)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.session.ManagerBase:void processExpires()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.ManagerBase:void backgroundProcess()"
        ]
    },
    "org.apache.catalina.session.PersistentManagerBase:void processExpires()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.ManagerBase:void backgroundProcess()"
        ]
    },
    "org.apache.catalina.session.PersistentManagerBase:org.apache.catalina.Session swapIn(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase:org.apache.catalina.Session findSession(java.lang.String)",
            "org.apache.catalina.session.PersistentManagerBase:void load()"
        ]
    },
    "org.apache.catalina.session.PersistentManagerBase:void swapOut(org.apache.catalina.Session)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase:void unload()",
            "org.apache.catalina.session.PersistentManagerBase:void processMaxIdleSwaps()",
            "org.apache.catalina.session.PersistentManagerBase:void processMaxActiveSwaps()"
        ]
    },
    "org.apache.catalina.session.PersistentManagerBase:void writeSession(org.apache.catalina.Session)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase:void swapOut(org.apache.catalina.Session)",
            "org.apache.catalina.session.PersistentManagerBase:void processMaxIdleBackups()"
        ]
    },
    "org.apache.catalina.session.PersistentManagerBase:void processMaxIdleSwaps()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase:void processPersistenceChecks()"
        ]
    },
    "org.apache.catalina.session.PersistentManagerBase:void processMaxIdleBackups()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase:void processPersistenceChecks()"
        ]
    },
    "org.apache.catalina.authenticator.SingleSignOn:void deregister(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void register(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,java.security.Principal,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.catalina.authenticator.SingleSignOn:void sessionEvent(org.apache.catalina.SessionEvent)",
            "org.apache.catalina.authenticator.SingleSignOn:void removeSession(java.lang.String,org.apache.catalina.Session)"
        ]
    },
    "org.apache.catalina.manager.ManagerServlet:void sessions(java.io.PrintWriter,org.apache.catalina.util.ContextName,int,org.apache.tomcat.util.res.StringManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.HTMLManagerServlet:java.lang.String sessions(org.apache.catalina.util.ContextName,int,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.ManagerServlet:void sessions(java.io.PrintWriter,org.apache.catalina.util.ContextName,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.ManagerServlet:void expireSessions(java.io.PrintWriter,org.apache.catalina.util.ContextName,javax.servlet.http.HttpServletRequest,org.apache.tomcat.util.res.StringManager)"
        ]
    },
    "org.apache.catalina.session.ManagerBase:void expireSession(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.session.StandardManager:void doLoad()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.StandardManager$PrivilegedDoLoad:java.lang.Void run()",
            "org.apache.catalina.session.StandardManager:void load()"
        ]
    },
    "org.apache.catalina.session.StandardSession:void setMaxInactiveInterval(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.ManagerBase:org.apache.catalina.Session createSession(java.lang.String)",
            "org.apache.catalina.session.StandardSessionFacade:void setMaxInactiveInterval(int)",
            "org.apache.catalina.valves.CrawlerSessionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.session.StandardSession:void invalidate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.HTMLManagerServlet:int invalidateSessions(org.apache.catalina.util.ContextName,java.lang.String[],org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.session.StandardSessionFacade:void invalidate()"
        ]
    },
    "org.apache.catalina.session.StoreBase:void processExpires()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase:void processExpires()"
        ]
    },
    "org.apache.catalina.connector.OutputBuffer:void write(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteOutputStream:void write(byte[],int,int)"
        ]
    },
    "org.apache.catalina.realm.JNDIRealm:boolean checkCredentials(javax.naming.directory.DirContext,org.apache.catalina.realm.JNDIRealm$User,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.realm.JNDIRealm:java.security.Principal authenticate(javax.naming.directory.DirContext,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.tomcat.util.buf.MessageBytes:void duplicate(org.apache.tomcat.util.buf.MessageBytes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean postParseRequest(org.apache.coyote.Request,org.apache.catalina.connector.Request,org.apache.coyote.Response,org.apache.catalina.connector.Response)",
            "org.apache.coyote.ajp.AbstractAjpProcessor:void parseHost(org.apache.tomcat.util.buf.MessageBytes)",
            "org.apache.tomcat.util.http.Parameters:void handleQueryParameters()"
        ]
    },
    "org.apache.tomcat.util.http.Parameters:void processParameters(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Request:void parseParameters()"
        ]
    },
    "org.apache.tomcat.util.http.Parameters:void processParameters(org.apache.tomcat.util.buf.MessageBytes,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.http.Parameters:void handleQueryParameters()"
        ]
    },
    "org.apache.catalina.connector.OutputBuffer:void writeByte(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteOutputStream:void write(int)"
        ]
    },
    "org.apache.tomcat.util.buf.ByteChunk:void append(char)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.tomcat.util.http.fileupload.MultipartStream:int discardBodyData()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl:boolean findNextItem()",
            "org.apache.tomcat.util.http.fileupload.MultipartStream:boolean skipPreamble()"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream:void write(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.ajp.AjpProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.coyote.ajp.AjpProcessor:void finish()",
            "org.apache.coyote.ajp.AjpProcessor:boolean refillReadBuffer()",
            "org.apache.coyote.ajp.AjpProcessor:void flush(boolean)",
            "org.apache.coyote.http11.InternalOutputBuffer:void sendAck()",
            "org.apache.tomcat.util.http.fileupload.disk.DiskFileItem:void readObject(java.io.ObjectInputStream)",
            "org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream:void write(byte[])"
        ]
    },
    "org.apache.catalina.core.ApplicationPart:void write(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.HTMLManagerServlet:java.lang.String upload(javax.servlet.http.HttpServletRequest,org.apache.tomcat.util.res.StringManager)"
        ]
    },
    "org.apache.catalina.connector.InputBuffer:long skip(long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteReader:long skip(long)",
            "org.apache.catalina.servlets.DefaultServlet:java.io.IOException copyRange(java.io.Reader,java.io.PrintWriter,long,long)"
        ]
    },
    "org.apache.tomcat.util.buf.CharChunk:int substract()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.InputBuffer:int read()"
        ]
    },
    "org.apache.tomcat.util.buf.CharChunk:int substract(org.apache.tomcat.util.buf.CharChunk)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.tomcat.util.buf.CharChunk:int substract(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.InputBuffer:int read(char[],int,int)"
        ]
    },
    "org.apache.catalina.connector.InputBuffer:int readByte()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteInputStream$1:java.lang.Integer run()",
            "org.apache.catalina.connector.CoyoteInputStream:int read()"
        ]
    },
    "org.apache.tomcat.util.buf.IntermediateInputStream:int read()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardServer:void await()",
            "org.apache.catalina.servlets.CGIServlet$HTTPHeaderInputStream:int read()"
        ]
    },
    "org.apache.catalina.connector.InputBuffer:int read(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteInputStream$3:java.lang.Integer run()",
            "org.apache.catalina.connector.CoyoteInputStream$4:java.lang.Integer run()",
            "org.apache.catalina.connector.CoyoteInputStream:int read(byte[])",
            "org.apache.catalina.connector.CoyoteInputStream:int read(byte[],int,int)"
        ]
    },
    "org.apache.coyote.http11.filters.SavedRequestInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.filters.BufferedInputFilter:void setRequest(org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int readBytes()",
            "org.apache.coyote.http11.filters.IdentityInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.IdentityInputFilter:long end()",
            "org.apache.coyote.http11.AbstractInputBuffer:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.InternalAprInputBuffer:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.Request:int doRead(org.apache.tomcat.util.buf.ByteChunk)"
        ]
    },
    "org.apache.tomcat.util.buf.IntermediateInputStream:int read(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Request:int readPostBody(byte[],int)",
            "org.apache.catalina.connector.Request:byte[] readChunkedPostBody()",
            "org.apache.catalina.loader.WebappClassLoader:void clearReferencesJdbc()",
            "org.apache.catalina.loader.WebappClassLoader:org.apache.catalina.loader.ResourceEntry findResourceInternal(java.lang.String,java.lang.String)",
            "org.apache.coyote.ajp.AjpProcessor:boolean read(byte[],int,int)",
            "org.apache.coyote.http11.InternalInputBuffer:boolean fill(boolean)",
            "org.apache.naming.resources.ProxyDirContext:void cacheLoad(org.apache.naming.resources.CacheEntry)",
            "org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream:int write(java.io.InputStream)",
            "org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream:int makeAvailable()",
            "org.apache.tomcat.util.http.fileupload.MultipartStream:byte readByte()"
        ]
    },
    "org.apache.catalina.startup.HostConfig:void start()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.HostConfig:void lifecycleEvent(org.apache.catalina.LifecycleEvent)"
        ]
    },
    "org.apache.catalina.startup.UserConfig:void lifecycleEvent(org.apache.catalina.LifecycleEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleSupport:void fireLifecycleEvent(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.catalina.connector.RequestFacade$GetLocalePrivilegedAction:java.util.Locale run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade$GetLocalePrivilegedAction:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:java.util.Locale getLocale()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.filters.RequestDumperFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)"
        ]
    },
    "org.apache.catalina.valves.ExtendedAccessLogValve$11:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.valves.AccessLogValve:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)"
        ]
    },
    "org.apache.catalina.connector.RequestFacade$GetLocalesPrivilegedAction:java.util.Enumeration run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade$GetLocalesPrivilegedAction:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:java.util.Enumeration getLocales()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.host.HostManagerServlet:org.apache.tomcat.util.res.StringManager getStringManager(javax.servlet.http.HttpServletRequest)",
            "org.apache.catalina.manager.ManagerServlet:org.apache.tomcat.util.res.StringManager getStringManager(javax.servlet.http.HttpServletRequest)",
            "org.apache.catalina.servlets.CGIServlet:void printServletEnvironment(javax.servlet.ServletOutputStream,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.naming.resources.RecyclableNamingEnumeration:boolean hasMore()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.ManagerServlet:void printResources(java.io.PrintWriter,java.lang.String,javax.naming.Context,java.lang.String,java.lang.Class,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.mbeans.GlobalResourcesLifecycleListener:void createMBeans(java.lang.String,javax.naming.Context)",
            "org.apache.catalina.realm.JNDIRealm:org.apache.catalina.realm.JNDIRealm$User getUserBySearch(javax.naming.directory.DirContext,java.lang.String,java.lang.String[])",
            "org.apache.catalina.realm.JNDIRealm:java.util.List getRoles(javax.naming.directory.DirContext,org.apache.catalina.realm.JNDIRealm$User)",
            "org.apache.catalina.realm.JNDIRealm:java.util.ArrayList addAttributeValues(java.lang.String,javax.naming.directory.Attributes,java.util.ArrayList)",
            "org.apache.naming.resources.DirContextURLConnection:java.util.Map getHeaderFields()",
            "org.apache.naming.resources.DirContextURLConnection:java.lang.String getHeaderField(java.lang.String)"
        ]
    },
    "org.apache.naming.resources.RecyclableNamingEnumeration:boolean hasMoreElements()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.FormAuthenticator:void saveRequest(org.apache.catalina.connector.Request,org.apache.catalina.Session)",
            "org.apache.catalina.connector.Request:java.util.Map getParameterMap()",
            "org.apache.catalina.connector.Request:void parseLocales()",
            "org.apache.catalina.connector.Response:java.util.Collection getHeaders(java.lang.String)",
            "org.apache.catalina.core.ApplicationContext:void listCollectionPaths(java.util.Set,javax.naming.directory.DirContext,java.lang.String)",
            "org.apache.catalina.core.ApplicationHttpRequest$AttributeNamesEnumerator:java.lang.String findNext()",
            "org.apache.catalina.core.ApplicationRequest:void setRequest(javax.servlet.ServletRequest)",
            "org.apache.catalina.filters.ExpiresFilter:void init(javax.servlet.FilterConfig)",
            "org.apache.catalina.filters.FilterBase:void init(javax.servlet.FilterConfig)",
            "org.apache.catalina.filters.RemoteIpFilter$XForwardedRequest:void <init>(javax.servlet.http.HttpServletRequest)",
            "org.apache.catalina.filters.RemoteIpFilter:void doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.filters.RequestDumperFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.loader.JdbcLeakPrevention:java.util.List clearJdbcDriverRegistrations()",
            "org.apache.catalina.loader.WebappClassLoader:boolean modified()",
            "org.apache.catalina.loader.WebappClassLoader:java.util.Enumeration findResources(java.lang.String)",
            "org.apache.catalina.loader.WebappClassLoader:org.apache.catalina.loader.ResourceEntry findResourceInternal(java.lang.String,java.lang.String)",
            "org.apache.catalina.loader.WebappLoader:void setRepositories()",
            "org.apache.catalina.loader.WebappLoader:boolean copyDir(javax.naming.directory.DirContext,java.io.File)",
            "org.apache.catalina.manager.host.HostManagerServlet:org.apache.tomcat.util.res.StringManager getStringManager(javax.servlet.http.HttpServletRequest)",
            "org.apache.catalina.manager.util.SessionUtils:java.util.Locale guessLocaleFromSession(javax.servlet.http.HttpSession)",
            "org.apache.catalina.manager.util.SessionUtils:java.lang.Object guessUserFromSession(org.apache.catalina.Session)",
            "org.apache.catalina.manager.ManagerServlet:org.apache.tomcat.util.res.StringManager getStringManager(javax.servlet.http.HttpServletRequest)",
            "org.apache.catalina.manager.StatusManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.StatusTransformer:void writeConnectorState(java.io.PrintWriter,javax.management.ObjectName,java.lang.String,javax.management.MBeanServer,java.util.Vector,java.util.Vector,int)",
            "org.apache.catalina.servlets.CGIServlet$CGIEnvironment:boolean setCGIEnvironment(javax.servlet.http.HttpServletRequest)",
            "org.apache.catalina.servlets.CGIServlet$CGIEnvironment:java.lang.String toString()",
            "org.apache.catalina.servlets.CGIServlet$CGIRunner:java.lang.String[] hashToStringArray(java.util.Hashtable)",
            "org.apache.catalina.servlets.CGIServlet:void printServletEnvironment(javax.servlet.ServletOutputStream,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.DefaultServlet:java.io.InputStream renderXml(java.lang.String,org.apache.naming.resources.CacheEntry,java.io.InputStream)",
            "org.apache.catalina.servlets.DefaultServlet:java.io.InputStream renderHtml(java.lang.String,org.apache.naming.resources.CacheEntry)",
            "org.apache.catalina.servlets.WebdavServlet$LockInfo:java.lang.String toString()",
            "org.apache.catalina.servlets.WebdavServlet$LockInfo:void toXML(org.apache.catalina.util.XMLWriter)",
            "org.apache.catalina.servlets.WebdavServlet:void doPropfind(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.WebdavServlet:void doLock(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.WebdavServlet:void doUnlock(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.WebdavServlet:boolean isLocked(java.lang.String,java.lang.String)",
            "org.apache.catalina.servlets.WebdavServlet:boolean copyResource(javax.naming.directory.DirContext,java.util.Hashtable,java.lang.String,java.lang.String)",
            "org.apache.catalina.servlets.WebdavServlet:void deleteCollection(javax.servlet.http.HttpServletRequest,javax.naming.directory.DirContext,java.lang.String,java.util.Hashtable)",
            "org.apache.catalina.servlets.WebdavServlet:void sendReport(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Hashtable)",
            "org.apache.catalina.servlets.WebdavServlet:void parseProperties(javax.servlet.http.HttpServletRequest,org.apache.catalina.util.XMLWriter,java.lang.String,int,java.util.Vector)",
            "org.apache.catalina.servlets.WebdavServlet:void parseLockNullProperties(javax.servlet.http.HttpServletRequest,org.apache.catalina.util.XMLWriter,java.lang.String,int,java.util.Vector)",
            "org.apache.catalina.servlets.WebdavServlet:boolean generateLockDiscovery(java.lang.String,org.apache.catalina.util.XMLWriter)",
            "org.apache.catalina.session.ManagerBase:java.util.HashMap getSession(java.lang.String)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:void addVariableNames(java.util.Collection)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:java.lang.Object getReqAttributeIgnoreCase(java.lang.String)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:java.lang.String getCGIVariable(java.lang.String)",
            "org.apache.catalina.startup.CatalinaProperties:void loadProperties()",
            "org.apache.catalina.startup.ContextConfig:void processAnnotationsJar(java.net.URL,org.apache.catalina.deploy.WebXml)",
            "org.apache.catalina.startup.ContextConfig:void processAnnotationsJndi(java.net.URL,org.apache.catalina.deploy.WebXml)",
            "org.apache.catalina.startup.ExpandWar:java.lang.String expand(org.apache.catalina.Host,java.net.URL,java.lang.String)",
            "org.apache.catalina.startup.ExpandWar:void validate(org.apache.catalina.Host,java.net.URL,java.lang.String)",
            "org.apache.catalina.startup.TldConfig:void tldScanJar(java.net.JarURLConnection)",
            "org.apache.catalina.startup.UserConfig:void deploy()",
            "org.apache.catalina.util.ExtensionValidator:boolean validateApplication(javax.naming.directory.DirContext,org.apache.catalina.Context)",
            "org.apache.catalina.valves.CrawlerSessionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.naming.factory.BeanFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.MailSessionFactory$1:javax.mail.Session run()",
            "org.apache.naming.factory.SendMailFactory$1:javax.mail.internet.MimePartDataSource run()",
            "org.apache.naming.resources.DirContextURLConnection:java.util.Enumeration list()",
            "org.apache.naming.resources.RecyclableNamingEnumeration:boolean hasMore()",
            "org.apache.naming.resources.RecyclableNamingEnumeration:boolean hasMoreElements()",
            "org.apache.naming.resources.WARDirContext:void loadEntries()",
            "org.apache.naming.HandlerRef:java.lang.String toString()",
            "org.apache.naming.NamingContext:void <init>(java.util.Hashtable,java.lang.String)",
            "org.apache.naming.ResourceRef:java.lang.String toString()",
            "org.apache.naming.ServiceRef:java.lang.String toString()",
            "org.apache.tomcat.util.http.MimeHeaders:java.lang.String toString()",
            "org.apache.tomcat.util.http.Parameters:java.lang.String paramsAsString()",
            "org.apache.tomcat.util.modeler.modules.MbeansDescriptorsIntrospectionSource:org.apache.tomcat.util.modeler.ManagedBean createManagedBean(org.apache.tomcat.util.modeler.Registry,java.lang.String,java.lang.Class,java.lang.String)"
        ]
    },
    "org.apache.catalina.core.ApplicationFilterConfig:void <init>(org.apache.catalina.Context,org.apache.catalina.deploy.FilterDef)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:boolean filterStart()"
        ]
    },
    "org.apache.catalina.core.ApplicationFilterConfig:javax.servlet.Filter getFilter()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)",
            "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilterEvent(org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.core.ApplicationFilterConfig:void setFilterDef(org.apache.catalina.deploy.FilterDef)",
            "org.apache.catalina.core.ApplicationFilterFactory:org.apache.catalina.core.ApplicationFilterChain createFilterChain(javax.servlet.ServletRequest,org.apache.catalina.Wrapper,javax.servlet.Servlet)"
        ]
    },
    "org.apache.catalina.loader.WebappClassLoader$PrivilegedFindResourceByName:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.loader.WebappClassLoader:java.net.URL findResource(java.lang.String)",
            "org.apache.catalina.loader.WebappClassLoader:java.lang.Class findClassInternal(java.lang.String)"
        ]
    },
    "org.apache.catalina.loader.WebappClassLoader:java.net.URL getResource(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.loader.WebappClassLoader:java.net.URL getResource(java.lang.String)",
            "org.apache.catalina.startup.Catalina:void load()",
            "org.apache.catalina.startup.ContextConfig:org.xml.sax.InputSource getWebXmlSource(java.lang.String,java.lang.String)",
            "org.apache.tomcat.util.modeler.Registry:void loadDescriptors(java.lang.String,java.lang.ClassLoader)"
        ]
    },
    "org.apache.catalina.loader.WebappClassLoader:java.io.InputStream getResourceAsStream(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.DefaultInstanceManager:void <init>(javax.naming.Context,java.util.Map,org.apache.catalina.Context,java.lang.ClassLoader)",
            "org.apache.catalina.loader.WebappClassLoader:java.io.InputStream getResourceAsStream(java.lang.String)",
            "org.apache.catalina.loader.WebappClassLoader:void clearReferencesJdbc()",
            "org.apache.catalina.startup.Catalina:void load()",
            "org.apache.catalina.startup.ContextConfig:void authenticatorConfig()",
            "org.apache.catalina.startup.ContextConfig:org.xml.sax.InputSource getWebXmlSource(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.loader.WebappClassLoader:java.lang.Class findClass(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.loader.WebappClassLoader:java.lang.Class loadClass(java.lang.String,boolean)"
        ]
    },
    "org.apache.catalina.manager.JspHelper:java.lang.String guessDisplayLocaleFromSession(org.apache.catalina.Session)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.HTMLManagerServlet$6:java.lang.Comparable getComparableObject(org.apache.catalina.Session)"
        ]
    },
    "org.apache.catalina.manager.HTMLManagerServlet$7:java.lang.Comparable getComparableObject(org.apache.catalina.Session)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.util.BaseSessionComparator:int compare(org.apache.catalina.Session,org.apache.catalina.Session)"
        ]
    },
    "org.apache.catalina.connector.Connector:java.lang.String getObjectNameKeyProperties()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleMBeanBase:void initInternal()"
        ]
    },
    "org.apache.catalina.connector.MapperListener:java.lang.String getObjectNameKeyProperties()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleMBeanBase:void initInternal()"
        ]
    },
    "org.apache.catalina.core.ContainerBase:void fireContainerEvent(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationContext:void removeAttribute(java.lang.String)",
            "org.apache.catalina.core.ApplicationContext:void setAttribute(java.lang.String,java.lang.Object)",
            "org.apache.catalina.core.ContainerBase:void addChildInternal(org.apache.catalina.Container)",
            "org.apache.catalina.core.ContainerBase:void removeChild(org.apache.catalina.Container)",
            "org.apache.catalina.core.StandardContext:void addApplicationListener(java.lang.String)",
            "org.apache.catalina.core.StandardContext:void addApplicationParameter(org.apache.catalina.deploy.ApplicationParameter)",
            "org.apache.catalina.core.StandardContext:void addErrorPage(org.apache.catalina.deploy.ErrorPage)",
            "org.apache.catalina.core.StandardContext:void addFilterDef(org.apache.catalina.deploy.FilterDef)",
            "org.apache.catalina.core.StandardContext:void addFilterMap(org.apache.catalina.deploy.FilterMap)",
            "org.apache.catalina.core.StandardContext:void addFilterMapBefore(org.apache.catalina.deploy.FilterMap)",
            "org.apache.catalina.core.StandardContext:void addInstanceListener(java.lang.String)",
            "org.apache.catalina.core.StandardContext:void addMessageDestination(org.apache.catalina.deploy.MessageDestination)",
            "org.apache.catalina.core.StandardContext:void addMessageDestinationRef(org.apache.catalina.deploy.MessageDestinationRef)",
            "org.apache.catalina.core.StandardContext:void addMimeMapping(java.lang.String,java.lang.String)",
            "org.apache.catalina.core.StandardContext:void addParameter(java.lang.String,java.lang.String)",
            "org.apache.catalina.core.StandardContext:void addRoleMapping(java.lang.String,java.lang.String)",
            "org.apache.catalina.core.StandardContext:void addSecurityRole(java.lang.String)",
            "org.apache.catalina.core.StandardContext:void addServletMapping(java.lang.String,java.lang.String,boolean)",
            "org.apache.catalina.core.StandardContext:void addWatchedResource(java.lang.String)",
            "org.apache.catalina.core.StandardContext:void addWelcomeFile(java.lang.String)",
            "org.apache.catalina.core.StandardContext:void addWrapperLifecycle(java.lang.String)",
            "org.apache.catalina.core.StandardContext:void addWrapperListener(java.lang.String)",
            "org.apache.catalina.core.StandardContext:void removeApplicationListener(java.lang.String)",
            "org.apache.catalina.core.StandardContext:void removeApplicationParameter(java.lang.String)",
            "org.apache.catalina.core.StandardContext:void removeConstraint(org.apache.catalina.deploy.SecurityConstraint)",
            "org.apache.catalina.core.StandardContext:void removeErrorPage(org.apache.catalina.deploy.ErrorPage)",
            "org.apache.catalina.core.StandardContext:void removeFilterDef(org.apache.catalina.deploy.FilterDef)",
            "org.apache.catalina.core.StandardContext:void removeFilterMap(org.apache.catalina.deploy.FilterMap)",
            "org.apache.catalina.core.StandardContext:void removeInstanceListener(java.lang.String)",
            "org.apache.catalina.core.StandardContext:void removeMessageDestination(java.lang.String)",
            "org.apache.catalina.core.StandardContext:void removeMessageDestinationRef(java.lang.String)",
            "org.apache.catalina.core.StandardContext:void removeMimeMapping(java.lang.String)",
            "org.apache.catalina.core.StandardContext:void removeParameter(java.lang.String)",
            "org.apache.catalina.core.StandardContext:void removeRoleMapping(java.lang.String)",
            "org.apache.catalina.core.StandardContext:void removeSecurityRole(java.lang.String)",
            "org.apache.catalina.core.StandardContext:void removeServletMapping(java.lang.String)",
            "org.apache.catalina.core.StandardContext:void removeWatchedResource(java.lang.String)",
            "org.apache.catalina.core.StandardContext:void removeWelcomeFile(java.lang.String)",
            "org.apache.catalina.core.StandardContext:void removeWrapperLifecycle(java.lang.String)",
            "org.apache.catalina.core.StandardContext:void removeWrapperListener(java.lang.String)",
            "org.apache.catalina.core.StandardContext:boolean listenerStart()",
            "org.apache.catalina.core.StandardContext:boolean listenerStop()",
            "org.apache.catalina.core.StandardHost:void addAlias(java.lang.String)",
            "org.apache.catalina.core.StandardHost:void removeAlias(java.lang.String)",
            "org.apache.catalina.core.StandardPipeline:void addValve(org.apache.catalina.Valve)",
            "org.apache.catalina.core.StandardPipeline:void removeValve(org.apache.catalina.Valve)",
            "org.apache.catalina.core.StandardWrapper:void addInitParameter(java.lang.String,java.lang.String)",
            "org.apache.catalina.core.StandardWrapper:void addMapping(java.lang.String)",
            "org.apache.catalina.core.StandardWrapper:void addSecurityReference(java.lang.String,java.lang.String)",
            "org.apache.catalina.core.StandardWrapper:javax.servlet.Servlet loadServlet()",
            "org.apache.catalina.core.StandardWrapper:void removeInitParameter(java.lang.String)",
            "org.apache.catalina.core.StandardWrapper:void removeMapping(java.lang.String)",
            "org.apache.catalina.core.StandardWrapper:void removeSecurityReference(java.lang.String)",
            "org.apache.catalina.core.StandardWrapper:void unload()",
            "org.apache.catalina.session.StandardSession:void fireContainerEvent(org.apache.catalina.Context,java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.catalina.core.ApplicationHttpRequest:void mergeParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationHttpRequest:void parseParameters()"
        ]
    },
    "org.apache.catalina.core.NamingContextListener:void containerEvent(org.apache.catalina.ContainerEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ContainerBase:void fireContainerEvent(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.catalina.core.NamingContextListener:void processGlobalResourcesChange(java.lang.String,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.NamingContextListener:void propertyChange(java.beans.PropertyChangeEvent)"
        ]
    },
    "org.apache.catalina.core.NamingContextListener:void createNamingContext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.NamingContextListener:void lifecycleEvent(org.apache.catalina.LifecycleEvent)"
        ]
    },
    "org.apache.catalina.deploy.WebXml:java.lang.String toXml()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void webConfig()"
        ]
    },
    "org.apache.catalina.loader.WebappClassLoader:void checkThreadLocalsForLeaks()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.loader.WebappClassLoader:void clearReferences()"
        ]
    },
    "org.apache.catalina.manager.StatusTransformer:void writeProcessorState(java.io.PrintWriter,javax.management.ObjectName,javax.management.MBeanServer,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.StatusTransformer:void writeConnectorState(java.io.PrintWriter,javax.management.ObjectName,java.lang.String,javax.management.MBeanServer,java.util.Vector,java.util.Vector,int)"
        ]
    },
    "org.apache.catalina.manager.StatusTransformer:void writeDetailedState(java.io.PrintWriter,javax.management.MBeanServer,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.StatusManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.manager.StatusTransformer:void writeContext(java.io.PrintWriter,javax.management.ObjectName,javax.management.MBeanServer,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.StatusTransformer:void writeDetailedState(java.io.PrintWriter,javax.management.MBeanServer,int)"
        ]
    },
    "org.apache.catalina.manager.StatusTransformer:void writeWrapper(java.io.PrintWriter,javax.management.ObjectName,javax.management.MBeanServer,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.StatusTransformer:void writeContext(java.io.PrintWriter,javax.management.ObjectName,javax.management.MBeanServer,int)"
        ]
    },
    "org.apache.catalina.mbeans.MBeanUtils:void destroyMBean(org.apache.catalina.connector.Connector,org.apache.catalina.Service)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.realm.JNDIRealm:org.apache.catalina.realm.JNDIRealm$User getUserByPattern(javax.naming.directory.DirContext,java.lang.String,java.lang.String[],java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.realm.JNDIRealm:org.apache.catalina.realm.JNDIRealm$User getUserByPattern(javax.naming.directory.DirContext,java.lang.String,java.lang.String,java.lang.String[],int)"
        ]
    },
    "org.apache.catalina.realm.JNDIRealm:org.apache.catalina.realm.JNDIRealm$User getUserBySearch(javax.naming.directory.DirContext,java.lang.String,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.realm.JNDIRealm:org.apache.catalina.realm.JNDIRealm$User getUser(javax.naming.directory.DirContext,java.lang.String,java.lang.String,int)"
        ]
    },
    "org.apache.catalina.realm.JNDIRealm:java.util.List getRoles(javax.naming.directory.DirContext,org.apache.catalina.realm.JNDIRealm$User)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.realm.JNDIRealm:java.security.Principal authenticate(javax.naming.directory.DirContext,java.lang.String,java.lang.String)",
            "org.apache.catalina.realm.JNDIRealm:java.security.Principal getPrincipal(javax.naming.directory.DirContext,java.lang.String)"
        ]
    },
    "org.apache.catalina.valves.ExtendedAccessLogValve:java.lang.String access$300(org.apache.catalina.valves.ExtendedAccessLogValve,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.valves.ExtendedAccessLogValve$10:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.valves.ExtendedAccessLogValve$11:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.valves.ExtendedAccessLogValve$12:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.valves.ExtendedAccessLogValve$14:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.valves.ExtendedAccessLogValve$4:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.valves.ExtendedAccessLogValve$5:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.valves.ExtendedAccessLogValve$6:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.valves.ExtendedAccessLogValve$7:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.valves.ExtendedAccessLogValve$8:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.valves.ExtendedAccessLogValve$9:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.valves.ExtendedAccessLogValve$CookieElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.valves.ExtendedAccessLogValve$RequestAttributeElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.valves.ExtendedAccessLogValve$RequestHeaderElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.valves.ExtendedAccessLogValve$RequestParameterElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.valves.ExtendedAccessLogValve$ResponseAllHeaderElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.valves.ExtendedAccessLogValve$ResponseHeaderElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.valves.ExtendedAccessLogValve$ServletContextElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.valves.ExtendedAccessLogValve$SessionAttributeElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)"
        ]
    },
    "org.apache.naming.resources.DirContextURLConnection:java.util.Map getHeaderFields()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.naming.resources.DirContextURLConnection:java.lang.String getHeaderField(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void processAnnotationsJndi(java.net.URL,org.apache.catalina.deploy.WebXml)",
            "org.apache.naming.resources.DirContextURLConnection:java.lang.String getContentType()"
        ]
    },
    "org.apache.catalina.core.ApplicationContext:java.net.URL getResource(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationContextFacade:java.net.URL getResource(java.lang.String)",
            "org.apache.catalina.core.NamingContextListener:void addService(org.apache.catalina.deploy.ContextService)",
            "org.apache.catalina.loader.WebappLoader:void setPermissions()",
            "org.apache.catalina.ssi.SSIServlet:void requestHandler(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:java.net.URLConnection getURLConnection(java.lang.String,boolean)",
            "org.apache.catalina.startup.ContextConfig:void webConfig()",
            "org.apache.catalina.startup.ContextConfig:org.xml.sax.InputSource getContextWebXmlSource()",
            "org.apache.tomcat.util.scan.StandardJarScanner:void scan(javax.servlet.ServletContext,java.lang.ClassLoader,org.apache.tomcat.JarScannerCallback,java.util.Set)"
        ]
    },
    "org.apache.catalina.core.ApplicationContext:java.io.InputStream getResourceAsStream(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationContextFacade:java.io.InputStream getResourceAsStream(java.lang.String)",
            "org.apache.catalina.core.StandardContext:java.lang.String getDeploymentDescriptor()",
            "org.apache.catalina.manager.host.HostManagerServlet:void add(java.io.PrintWriter,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean,boolean,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.servlets.CGIServlet$CGIEnvironment:void expandCGIScript()",
            "org.apache.catalina.servlets.DefaultServlet:java.io.InputStream findXsltInputStream(javax.naming.directory.DirContext)",
            "org.apache.catalina.startup.ContextConfig:org.xml.sax.InputSource getContextWebXmlSource()",
            "org.apache.catalina.startup.TldConfig:void tldScanWebXml()",
            "org.apache.catalina.startup.TldConfig:void tldScanResourcePaths(java.lang.String)"
        ]
    },
    "org.apache.catalina.core.DefaultInstanceManager:void lookupFieldResource(javax.naming.Context,java.lang.Object,java.lang.reflect.Field,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.DefaultInstanceManager:void processAnnotations(java.lang.Object,java.util.Map)"
        ]
    },
    "org.apache.catalina.core.DefaultInstanceManager:void lookupMethodResource(javax.naming.Context,java.lang.Object,java.lang.reflect.Method,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.DefaultInstanceManager:void processAnnotations(java.lang.Object,java.util.Map)"
        ]
    },
    "org.apache.catalina.core.NamingContextListener:void addResource(org.apache.catalina.deploy.ContextResource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.NamingContextListener:void containerEvent(org.apache.catalina.ContainerEvent)",
            "org.apache.catalina.core.NamingContextListener:void processGlobalResourcesChange(java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.catalina.core.NamingContextListener:void createNamingContext()"
        ]
    },
    "org.apache.catalina.core.NamingContextListener:void createSubcontexts(javax.naming.Context,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.NamingContextListener:void addEjb(org.apache.catalina.deploy.ContextEjb)",
            "org.apache.catalina.core.NamingContextListener:void addEnvironment(org.apache.catalina.deploy.ContextEnvironment)",
            "org.apache.catalina.core.NamingContextListener:void addService(org.apache.catalina.deploy.ContextService)",
            "org.apache.catalina.core.NamingContextListener:void addResource(org.apache.catalina.deploy.ContextResource)",
            "org.apache.catalina.core.NamingContextListener:void addResourceEnvRef(org.apache.catalina.deploy.ContextResourceEnvRef)",
            "org.apache.catalina.core.NamingContextListener:void addResourceLink(org.apache.catalina.deploy.ContextResourceLink)"
        ]
    },
    "org.apache.catalina.core.StandardContext:boolean resourcesStart()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:void startInternal()"
        ]
    },
    "org.apache.catalina.deploy.NamingResources:void cleanUp()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.deploy.NamingResources:void stopInternal()"
        ]
    },
    "org.apache.catalina.mbeans.GlobalResourcesLifecycleListener:void createMBeans(java.lang.String,javax.naming.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.GlobalResourcesLifecycleListener:void createMBeans()",
            "org.apache.catalina.mbeans.GlobalResourcesLifecycleListener:void createMBeans(java.lang.String,javax.naming.Context)"
        ]
    },
    "org.apache.catalina.realm.DataSourceRealm:java.sql.Connection open()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.realm.DataSourceRealm:java.security.Principal authenticate(java.lang.String,java.lang.String)",
            "org.apache.catalina.realm.DataSourceRealm:java.lang.String getPassword(java.lang.String)",
            "org.apache.catalina.realm.DataSourceRealm:java.security.Principal getPrincipal(java.lang.String)",
            "org.apache.catalina.realm.DataSourceRealm:java.util.ArrayList getRoles(java.lang.String)"
        ]
    },
    "org.apache.catalina.servlets.DefaultServlet:java.io.File executePartialPut(javax.servlet.http.HttpServletRequest,org.apache.catalina.servlets.DefaultServlet$Range,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.DefaultServlet:void doPut(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.servlets.DefaultServlet:java.lang.String getReadme(javax.naming.directory.DirContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.DefaultServlet:java.io.InputStream renderXml(java.lang.String,org.apache.naming.resources.CacheEntry,java.io.InputStream)",
            "org.apache.catalina.servlets.DefaultServlet:java.io.InputStream renderHtml(java.lang.String,org.apache.naming.resources.CacheEntry)"
        ]
    },
    "org.apache.catalina.servlets.DefaultServlet:java.io.InputStream findXsltInputStream(javax.naming.directory.DirContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.DefaultServlet:java.io.InputStream render(java.lang.String,org.apache.naming.resources.CacheEntry)"
        ]
    },
    "org.apache.naming.resources.BaseDirContext:java.lang.Object lookup(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationContext:java.net.URL getResource(java.lang.String)",
            "org.apache.catalina.core.ApplicationContext:java.io.InputStream getResourceAsStream(java.lang.String)",
            "org.apache.catalina.core.DefaultInstanceManager:void lookupFieldResource(javax.naming.Context,java.lang.Object,java.lang.reflect.Field,java.lang.String,java.lang.Class)",
            "org.apache.catalina.core.DefaultInstanceManager:void lookupMethodResource(javax.naming.Context,java.lang.Object,java.lang.reflect.Method,java.lang.String,java.lang.Class)",
            "org.apache.catalina.core.NamingContextListener:void addResource(org.apache.catalina.deploy.ContextResource)",
            "org.apache.catalina.core.NamingContextListener:void createSubcontexts(javax.naming.Context,java.lang.String)",
            "org.apache.catalina.core.StandardContext:boolean resourcesStart()",
            "org.apache.catalina.deploy.NamingResources:void cleanUp()",
            "org.apache.catalina.loader.WebappClassLoader:java.util.Enumeration findResources(java.lang.String)",
            "org.apache.catalina.loader.WebappClassLoader:org.apache.catalina.loader.ResourceEntry findResourceInternal(java.lang.String,java.lang.String)",
            "org.apache.catalina.loader.WebappLoader:void setRepositories()",
            "org.apache.catalina.loader.WebappLoader:boolean copyDir(javax.naming.directory.DirContext,java.io.File)",
            "org.apache.catalina.mbeans.GlobalResourcesLifecycleListener:void createMBeans(java.lang.String,javax.naming.Context)",
            "org.apache.catalina.realm.DataSourceRealm:java.sql.Connection open()",
            "org.apache.catalina.realm.UserDatabaseRealm:void startInternal()",
            "org.apache.catalina.servlets.DefaultServlet:java.lang.String getReadme(javax.naming.directory.DirContext)",
            "org.apache.catalina.servlets.DefaultServlet:java.io.InputStream findXsltInputStream(javax.naming.directory.DirContext)",
            "org.apache.catalina.servlets.WebdavServlet:boolean copyResource(javax.naming.directory.DirContext,java.util.Hashtable,java.lang.String,java.lang.String)",
            "org.apache.catalina.servlets.WebdavServlet:void deleteCollection(javax.servlet.http.HttpServletRequest,javax.naming.directory.DirContext,java.lang.String,java.util.Hashtable)",
            "org.apache.catalina.servlets.WebdavServlet:java.lang.StringBuilder determineMethodsAllowed(javax.naming.directory.DirContext,javax.servlet.http.HttpServletRequest)",
            "org.apache.catalina.util.ExtensionValidator:boolean validateApplication(javax.naming.directory.DirContext,org.apache.catalina.Context)",
            "org.apache.naming.factory.ResourceLinkFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.resources.BaseDirContext:java.lang.Object lookup(javax.naming.Name)",
            "org.apache.naming.resources.BaseDirContext:java.lang.Object lookup(java.lang.String)",
            "org.apache.naming.resources.DirContextURLConnection:void connect()",
            "org.apache.naming.resources.DirContextURLConnection:java.io.InputStream getInputStream()",
            "org.apache.naming.resources.FileDirContext:java.lang.Object lookupLink(java.lang.String)",
            "org.apache.naming.resources.FileDirContext:javax.naming.directory.DirContext createSubcontext(java.lang.String,javax.naming.directory.Attributes)",
            "org.apache.naming.resources.ProxyDirContext:java.lang.Object lookup(java.lang.String)",
            "org.apache.naming.resources.ProxyDirContext:org.apache.naming.resources.CacheEntry lookupCache(java.lang.String)",
            "org.apache.naming.resources.ProxyDirContext:void cacheLoad(org.apache.naming.resources.CacheEntry)",
            "org.apache.naming.resources.WARDirContext:java.lang.Object lookupLink(java.lang.String)",
            "org.apache.naming.SelectorContext:java.lang.Object lookup(java.lang.String)",
            "org.apache.tomcat.util.http.mapper.Mapper:void internalMapWrapper(org.apache.tomcat.util.http.mapper.Mapper$ContextVersion,org.apache.tomcat.util.buf.CharChunk,org.apache.tomcat.util.http.mapper.MappingData)"
        ]
    },
    "org.apache.naming.resources.DirContextURLConnection:void connect()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.resources.DirContextURLConnection:long getLastModified()",
            "org.apache.naming.resources.DirContextURLConnection:java.util.Map getHeaderFields()",
            "org.apache.naming.resources.DirContextURLConnection:java.lang.String getHeaderField(java.lang.String)",
            "org.apache.naming.resources.DirContextURLConnection:java.lang.Object getContent()",
            "org.apache.naming.resources.DirContextURLConnection:java.io.InputStream getInputStream()",
            "org.apache.naming.resources.DirContextURLConnection:java.util.Enumeration list()"
        ]
    },
    "org.apache.naming.resources.DirContextURLConnection:java.io.InputStream getInputStream()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIServlet:void processSSI(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.net.URL)",
            "org.apache.catalina.startup.ContextConfig:void processAnnotationsJndi(java.net.URL,org.apache.catalina.deploy.WebXml)",
            "org.apache.naming.resources.DirContextURLConnection:java.lang.Object getContent()"
        ]
    },
    "org.apache.naming.SelectorContext:java.lang.Object lookup(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.DefaultInstanceManager:void lookupFieldResource(javax.naming.Context,java.lang.Object,java.lang.reflect.Field,java.lang.String,java.lang.Class)",
            "org.apache.catalina.core.DefaultInstanceManager:void lookupMethodResource(javax.naming.Context,java.lang.Object,java.lang.reflect.Method,java.lang.String,java.lang.Class)",
            "org.apache.catalina.core.NamingContextListener:void addResource(org.apache.catalina.deploy.ContextResource)",
            "org.apache.catalina.core.NamingContextListener:void createSubcontexts(javax.naming.Context,java.lang.String)",
            "org.apache.catalina.deploy.NamingResources:void cleanUp()",
            "org.apache.catalina.mbeans.GlobalResourcesLifecycleListener:void createMBeans(java.lang.String,javax.naming.Context)",
            "org.apache.catalina.realm.DataSourceRealm:java.sql.Connection open()",
            "org.apache.catalina.realm.UserDatabaseRealm:void startInternal()",
            "org.apache.naming.factory.ResourceLinkFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.SelectorContext:java.lang.Object lookup(java.lang.String)",
            "org.apache.tomcat.util.http.mapper.Mapper:void internalMapWrapper(org.apache.tomcat.util.http.mapper.Mapper$ContextVersion,org.apache.tomcat.util.buf.CharChunk,org.apache.tomcat.util.http.mapper.MappingData)"
        ]
    },
    "org.apache.tomcat.util.http.mapper.Mapper:void internalMapWrapper(org.apache.tomcat.util.http.mapper.Mapper$ContextVersion,org.apache.tomcat.util.buf.CharChunk,org.apache.tomcat.util.http.mapper.MappingData)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.http.mapper.Mapper:void map(org.apache.tomcat.util.buf.MessageBytes,org.apache.tomcat.util.http.mapper.MappingData)",
            "org.apache.tomcat.util.http.mapper.Mapper:void internalMap(org.apache.tomcat.util.buf.CharChunk,org.apache.tomcat.util.buf.CharChunk,java.lang.String,org.apache.tomcat.util.http.mapper.MappingData)"
        ]
    },
    "org.apache.naming.resources.ProxyDirContext:org.apache.naming.resources.CacheEntry cacheLookup(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.resources.ProxyDirContext:java.lang.Object lookup(javax.naming.Name)",
            "org.apache.naming.resources.ProxyDirContext:java.lang.Object lookup(java.lang.String)",
            "org.apache.naming.resources.ProxyDirContext:javax.naming.directory.Attributes getAttributes(javax.naming.Name)",
            "org.apache.naming.resources.ProxyDirContext:javax.naming.directory.Attributes getAttributes(java.lang.String)",
            "org.apache.naming.resources.ProxyDirContext:org.apache.naming.resources.CacheEntry lookupCache(java.lang.String)"
        ]
    },
    "org.apache.catalina.servlets.DefaultServlet:java.util.ArrayList parseRange(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.naming.resources.ResourceAttributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.DefaultServlet:void serveResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,boolean)"
        ]
    },
    "org.apache.naming.resources.ProxyDirContext:boolean revalidate(org.apache.naming.resources.CacheEntry)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.resources.ProxyDirContext:org.apache.naming.resources.CacheEntry cacheLookup(java.lang.String)"
        ]
    },
    "org.apache.naming.resources.ResourceAttributes:javax.naming.directory.Attribute get(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.realm.JNDIRealm:java.lang.String getAttributeValue(java.lang.String,javax.naming.directory.Attributes)",
            "org.apache.catalina.realm.JNDIRealm:java.util.ArrayList addAttributeValues(java.lang.String,javax.naming.directory.Attributes,java.util.ArrayList)",
            "org.apache.naming.resources.DirContextURLConnection:long getLastModified()",
            "org.apache.naming.resources.DirContextURLConnection:java.util.Map getHeaderFields()",
            "org.apache.naming.resources.DirContextURLConnection:java.lang.String getHeaderField(java.lang.String)",
            "org.apache.naming.resources.ResourceAttributes:long getContentLength()",
            "org.apache.naming.resources.ResourceAttributes:long getCreation()",
            "org.apache.naming.resources.ResourceAttributes:java.util.Date getCreationDate()",
            "org.apache.naming.resources.ResourceAttributes:long getLastModified()",
            "org.apache.naming.resources.ResourceAttributes:java.util.Date getLastModifiedDate()",
            "org.apache.naming.resources.ResourceAttributes:java.lang.String getName()",
            "org.apache.naming.resources.ResourceAttributes:java.lang.String getResourceType()",
            "org.apache.naming.resources.ResourceAttributes:java.lang.String getETag()",
            "org.apache.naming.resources.ResourceAttributes:javax.naming.directory.Attribute get(java.lang.String)"
        ]
    },
    "org.apache.naming.resources.ResourceAttributes:javax.naming.NamingEnumeration getAll()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.resources.ResourceAttributes:javax.naming.NamingEnumeration getAll()"
        ]
    },
    "org.apache.naming.resources.ResourceAttributes:javax.naming.NamingEnumeration getIDs()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.resources.DirContextURLConnection:java.util.Map getHeaderFields()",
            "org.apache.naming.resources.DirContextURLConnection:java.lang.String getHeaderField(java.lang.String)",
            "org.apache.naming.resources.ResourceAttributes:javax.naming.NamingEnumeration getIDs()"
        ]
    },
    "org.apache.naming.resources.ResourceAttributes:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.resources.DirContextURLConnection:java.util.Map getHeaderFields()",
            "org.apache.naming.resources.ResourceAttributes:int size()"
        ]
    },
    "org.apache.naming.resources.FileDirContext$FileResourceAttributes:java.util.Date getCreationDate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.resources.ResourceAttributes:java.lang.String getLastModifiedHttp()",
            "org.apache.naming.resources.ResourceAttributes:javax.naming.directory.Attribute get(java.lang.String)",
            "org.apache.naming.resources.ResourceAttributes:javax.naming.NamingEnumeration getAll()",
            "org.apache.naming.resources.ResourceAttributes:javax.naming.NamingEnumeration getIDs()",
            "org.apache.naming.resources.ResourceAttributes:int size()"
        ]
    },
    "org.apache.naming.resources.ResourceAttributes:java.lang.String getLastModifiedHttp()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.DefaultServlet:void serveResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,boolean)",
            "org.apache.catalina.servlets.DefaultServlet:java.io.InputStream renderXml(java.lang.String,org.apache.naming.resources.CacheEntry,java.io.InputStream)",
            "org.apache.catalina.servlets.DefaultServlet:java.io.InputStream renderHtml(java.lang.String,org.apache.naming.resources.CacheEntry)"
        ]
    },
    "org.apache.catalina.loader.WebappClassLoader:void addJar(java.lang.String,java.util.jar.JarFile,java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.loader.WebappLoader:void setRepositories()"
        ]
    },
    "org.apache.catalina.servlets.DefaultServlet:boolean checkIfModifiedSince(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.naming.resources.ResourceAttributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.DefaultServlet:boolean checkIfHeaders(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.naming.resources.ResourceAttributes)"
        ]
    },
    "org.apache.catalina.servlets.DefaultServlet:boolean checkIfUnmodifiedSince(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.naming.resources.ResourceAttributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.DefaultServlet:boolean checkIfHeaders(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.naming.resources.ResourceAttributes)"
        ]
    },
    "org.apache.naming.resources.FileDirContext$FileResourceAttributes:java.util.Date getLastModifiedDate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.resources.ResourceAttributes:java.lang.String getLastModifiedHttp()",
            "org.apache.naming.resources.ResourceAttributes:javax.naming.directory.Attribute get(java.lang.String)",
            "org.apache.naming.resources.ResourceAttributes:javax.naming.NamingEnumeration getAll()",
            "org.apache.naming.resources.ResourceAttributes:javax.naming.NamingEnumeration getIDs()",
            "org.apache.naming.resources.ResourceAttributes:int size()"
        ]
    },
    "org.apache.naming.resources.FileDirContext$FileResourceAttributes:java.lang.String getResourceType()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.resources.ResourceAttributes:boolean isCollection()",
            "org.apache.naming.resources.ResourceAttributes:javax.naming.directory.Attribute get(java.lang.String)",
            "org.apache.naming.resources.ResourceAttributes:javax.naming.NamingEnumeration getAll()",
            "org.apache.naming.resources.ResourceAttributes:javax.naming.NamingEnumeration getIDs()",
            "org.apache.naming.resources.ResourceAttributes:int size()"
        ]
    },
    "org.apache.naming.resources.ResourceAttributes:boolean isCollection()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.resources.FileDirContext$FileResourceAttributes:boolean isCollection()"
        ]
    },
    "org.apache.catalina.servlets.DefaultServlet:boolean checkIfMatch(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.naming.resources.ResourceAttributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.DefaultServlet:boolean checkIfHeaders(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.naming.resources.ResourceAttributes)"
        ]
    },
    "org.apache.catalina.servlets.DefaultServlet:boolean checkIfNoneMatch(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.naming.resources.ResourceAttributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.DefaultServlet:boolean checkIfHeaders(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.naming.resources.ResourceAttributes)"
        ]
    },
    "org.apache.tomcat.util.bcel.classfile.JavaClass:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Connector:java.lang.String createObjectNameKeyProperties(java.lang.String)",
            "org.apache.catalina.connector.CoyoteAdapter:void parseSessionSslId(org.apache.catalina.connector.Request)",
            "org.apache.catalina.connector.MapperListener:void containerEvent(org.apache.catalina.ContainerEvent)",
            "org.apache.catalina.connector.Request:java.lang.Object getAttribute(java.lang.String)",
            "org.apache.catalina.core.ApplicationFilterFactory:org.apache.catalina.core.ApplicationFilterChain createFilterChain(javax.servlet.ServletRequest,org.apache.catalina.Wrapper,javax.servlet.Servlet)",
            "org.apache.catalina.core.ApplicationHttpRequest:java.lang.Object getAttribute(java.lang.String)",
            "org.apache.catalina.core.ApplicationHttpRequest:java.lang.String getParameter(java.lang.String)",
            "org.apache.catalina.core.ApplicationHttpRequest:java.lang.String[] getParameterValues(java.lang.String)",
            "org.apache.catalina.core.ApplicationHttpRequest:java.lang.String[] mergeValues(java.lang.Object,java.lang.Object)",
            "org.apache.catalina.core.NamingContextListener:void addResourceLink(org.apache.catalina.deploy.ContextResourceLink)",
            "org.apache.catalina.deploy.WebXml:void appendElement(java.lang.StringBuilder,java.lang.String,java.lang.String,java.lang.Object)",
            "org.apache.catalina.loader.WebappClassLoader:void checkThreadLocalMapForLeaks(java.lang.Object,java.lang.reflect.Field)",
            "org.apache.catalina.loader.WebappLoader:void propertyChange(java.beans.PropertyChangeEvent)",
            "org.apache.catalina.manager.JMXProxyServlet:void getAttribute(java.io.PrintWriter,java.lang.String,java.lang.String)",
            "org.apache.catalina.manager.JMXProxyServlet:void listBeans(java.io.PrintWriter,java.lang.String)",
            "org.apache.catalina.manager.JspHelper:java.lang.String escapeXml(java.lang.Object)",
            "org.apache.catalina.manager.StatusTransformer:java.lang.String filter(java.lang.Object)",
            "org.apache.catalina.mbeans.MBeanUtils:javax.management.ObjectName createObjectName(java.lang.String,org.apache.catalina.connector.Connector)",
            "org.apache.catalina.realm.JNDIRealm:java.lang.String getAttributeValue(java.lang.String,javax.naming.directory.Attributes)",
            "org.apache.catalina.servlets.CGIServlet$CGIRunner:java.lang.String[] hashToStringArray(java.util.Hashtable)",
            "org.apache.catalina.session.ManagerBase:java.lang.String getSessionAttribute(java.lang.String,java.lang.String)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:java.lang.String getVariableValue(java.lang.String)",
            "org.apache.catalina.users.MemoryUserDatabaseFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.catalina.valves.AccessLogValve$RequestAttributeElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.valves.AccessLogValve$SessionAttributeElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.valves.ExtendedAccessLogValve:java.lang.String wrap(java.lang.Object)",
            "org.apache.naming.factory.DataSourceLinkFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.EjbFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.OpenEjbFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.ResourceEnvFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.ResourceFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.ResourceLinkFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.TransactionFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.resources.DirContextURLConnection:java.lang.String getHeaderValueAsString(java.lang.Object)",
            "org.apache.naming.resources.ProxyDirContext:java.lang.Object lookup(java.lang.String)",
            "org.apache.naming.resources.ProxyDirContext:org.apache.naming.resources.CacheEntry lookupCache(java.lang.String)",
            "org.apache.naming.resources.ProxyDirContext:void cacheLoad(org.apache.naming.resources.CacheEntry)",
            "org.apache.naming.resources.ResourceAttributes:long getContentLength()",
            "org.apache.naming.resources.ResourceAttributes:long getCreation()",
            "org.apache.naming.resources.ResourceAttributes:java.util.Date getCreationDate()",
            "org.apache.naming.resources.ResourceAttributes:long getLastModified()",
            "org.apache.naming.resources.ResourceAttributes:java.util.Date getLastModifiedDate()",
            "org.apache.naming.resources.ResourceAttributes:java.lang.String getName()",
            "org.apache.naming.resources.ResourceAttributes:java.lang.String getResourceType()",
            "org.apache.naming.resources.ResourceAttributes:java.lang.String getETag()",
            "org.apache.tomcat.util.bcel.classfile.JavaClass:java.lang.String indent(java.lang.Object)",
            "org.apache.tomcat.util.digester.CallMethodRule:void end(java.lang.String,java.lang.String)",
            "org.apache.tomcat.util.modeler.modules.MbeansSource:void updateField(javax.management.ObjectName,java.lang.String,java.lang.Object)",
            "org.apache.tomcat.util.modeler.BaseModelMBean:java.lang.String toString()"
        ]
    },
    "org.apache.catalina.startup.CallMethodMultiRule:void end(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.digester.Digester:void endElement(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.security.SecurityConfig:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.security.SecurityConfig:org.apache.catalina.security.SecurityConfig newInstance()"
        ]
    },
    "org.apache.catalina.startup.Bootstrap:java.lang.ClassLoader createClassLoader(java.lang.String,java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Bootstrap:void initClassLoaders()"
        ]
    },
    "org.apache.catalina.startup.CatalinaProperties:java.lang.String getProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.security.SecurityConfig:void <init>()",
            "org.apache.catalina.startup.Bootstrap:java.lang.ClassLoader createClassLoader(java.lang.String,java.lang.ClassLoader)"
        ]
    },
    "org.apache.catalina.startup.CatalinaProperties:java.lang.String getProperty(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.CatalinaProperties:java.lang.String getCatalinaBase()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.CatalinaProperties:void loadProperties()"
        ]
    },
    "org.apache.catalina.startup.ContextConfig:void processAnnotations(java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void webConfig()"
        ]
    },
    "org.apache.catalina.startup.ContextConfig:void init()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void lifecycleEvent(org.apache.catalina.LifecycleEvent)"
        ]
    },
    "org.apache.catalina.startup.TldConfig$TldJarScannerCallback:void scan(java.net.JarURLConnection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.scan.StandardJarScanner:void process(org.apache.tomcat.JarScannerCallback,java.net.URL)"
        ]
    },
    "org.apache.naming.factory.MailSessionFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.factory.EjbFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.ResourceEnvFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.ResourceFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.TransactionFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)"
        ]
    },
    "org.apache.naming.factory.SendMailFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.factory.EjbFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.ResourceEnvFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.ResourceFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.TransactionFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)"
        ]
    },
    "org.apache.catalina.core.ApplicationContext:java.util.Set getResourcePathsInternal(javax.naming.directory.DirContext,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationContext:java.util.Set getResourcePaths(java.lang.String)"
        ]
    },
    "org.apache.catalina.loader.WebappLoader:boolean modified()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.loader.WebappLoader:void backgroundProcess()"
        ]
    },
    "org.apache.catalina.manager.ManagerServlet:void printResources(java.io.PrintWriter,java.lang.String,javax.naming.Context,java.lang.String,java.lang.Class,org.apache.tomcat.util.res.StringManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.ManagerServlet:void resources(java.io.PrintWriter,java.lang.String,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.ManagerServlet:void printResources(java.io.PrintWriter,java.lang.String,javax.naming.Context,java.lang.String,java.lang.Class,org.apache.tomcat.util.res.StringManager)"
        ]
    },
    "org.apache.catalina.realm.JNDIRealm:java.util.ArrayList addAttributeValues(java.lang.String,javax.naming.directory.Attributes,java.util.ArrayList)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.realm.JNDIRealm:org.apache.catalina.realm.JNDIRealm$User getUserByPattern(javax.naming.directory.DirContext,java.lang.String,java.lang.String[],java.lang.String)",
            "org.apache.catalina.realm.JNDIRealm:org.apache.catalina.realm.JNDIRealm$User getUserBySearch(javax.naming.directory.DirContext,java.lang.String,java.lang.String[])"
        ]
    },
    "org.apache.catalina.core.StandardContext:void addResourceJarUrl(java.net.URL)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void processResourceJARs(java.util.Set)"
        ]
    },
    "org.apache.naming.resources.BaseDirContext:void setAliases(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:void setResources(javax.naming.directory.DirContext)",
            "org.apache.catalina.core.StandardContext:boolean resourcesStart()"
        ]
    },
    "org.apache.naming.NamingContext:java.lang.Object lookup(javax.naming.Name,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.NamingContext:java.lang.Object lookup(javax.naming.Name)",
            "org.apache.naming.NamingContext:java.lang.Object lookup(java.lang.String)",
            "org.apache.naming.NamingContext:java.lang.Object lookupLink(javax.naming.Name)",
            "org.apache.naming.NamingContext:java.lang.Object lookupLink(java.lang.String)"
        ]
    },
    "org.apache.naming.NamingContext:javax.naming.Context createSubcontext(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.NamingContextListener:void createNamingContext()",
            "org.apache.catalina.core.NamingContextListener:void createSubcontexts(javax.naming.Context,java.lang.String)",
            "org.apache.naming.SelectorContext:javax.naming.Context createSubcontext(java.lang.String)"
        ]
    },
    "org.apache.naming.SelectorContext:javax.naming.Context createSubcontext(javax.naming.Name)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.SelectorContext:javax.naming.Context createSubcontext(javax.naming.Name)"
        ]
    },
    "org.apache.naming.SelectorContext:java.lang.Object lookup(javax.naming.Name)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.NamingContext:java.lang.Object lookup(javax.naming.Name,boolean)",
            "org.apache.naming.NamingContextBindingsEnumeration:javax.naming.Binding nextElementInternal()",
            "org.apache.naming.SelectorContext:java.lang.Object lookup(javax.naming.Name)"
        ]
    },
    "org.apache.naming.SelectorContext:void bind(javax.naming.Name,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.NamingContext:void bind(javax.naming.Name,java.lang.Object,boolean)",
            "org.apache.naming.SelectorContext:void bind(javax.naming.Name,java.lang.Object)"
        ]
    },
    "org.apache.naming.SelectorContext:void bind(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.NamingContextListener:void createNamingContext()",
            "org.apache.catalina.core.NamingContextListener:void addEjb(org.apache.catalina.deploy.ContextEjb)",
            "org.apache.catalina.core.NamingContextListener:void addEnvironment(org.apache.catalina.deploy.ContextEnvironment)",
            "org.apache.catalina.core.NamingContextListener:void addService(org.apache.catalina.deploy.ContextService)",
            "org.apache.catalina.core.NamingContextListener:void addResource(org.apache.catalina.deploy.ContextResource)",
            "org.apache.catalina.core.NamingContextListener:void addResourceEnvRef(org.apache.catalina.deploy.ContextResourceEnvRef)",
            "org.apache.catalina.core.NamingContextListener:void addResourceLink(org.apache.catalina.deploy.ContextResourceLink)",
            "org.apache.naming.SelectorContext:void bind(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.naming.SelectorContext:void rebind(javax.naming.Name,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.NamingContext:void bind(javax.naming.Name,java.lang.Object,boolean)",
            "org.apache.naming.SelectorContext:void rebind(javax.naming.Name,java.lang.Object)"
        ]
    },
    "org.apache.naming.SelectorContext:void rebind(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.SelectorContext:void rebind(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.naming.SelectorContext:void unbind(javax.naming.Name)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.NamingContext:void unbind(javax.naming.Name)",
            "org.apache.naming.SelectorContext:void unbind(javax.naming.Name)"
        ]
    },
    "org.apache.naming.SelectorContext:void unbind(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.NamingContextListener:void removeEjb(java.lang.String)",
            "org.apache.catalina.core.NamingContextListener:void removeEnvironment(java.lang.String)",
            "org.apache.catalina.core.NamingContextListener:void removeLocalEjb(java.lang.String)",
            "org.apache.catalina.core.NamingContextListener:void removeService(java.lang.String)",
            "org.apache.catalina.core.NamingContextListener:void removeResource(java.lang.String)",
            "org.apache.catalina.core.NamingContextListener:void removeResourceEnvRef(java.lang.String)",
            "org.apache.catalina.core.NamingContextListener:void removeResourceLink(java.lang.String)",
            "org.apache.naming.SelectorContext:void unbind(java.lang.String)"
        ]
    },
    "org.apache.naming.SelectorContext:void rename(javax.naming.Name,javax.naming.Name)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.SelectorContext:void rename(javax.naming.Name,javax.naming.Name)"
        ]
    },
    "org.apache.naming.SelectorContext:void rename(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.SelectorContext:void rename(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.naming.SelectorContext:javax.naming.NamingEnumeration list(javax.naming.Name)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.NamingContext:javax.naming.NamingEnumeration list(javax.naming.Name)",
            "org.apache.naming.SelectorContext:javax.naming.NamingEnumeration list(javax.naming.Name)"
        ]
    },
    "org.apache.naming.SelectorContext:javax.naming.NamingEnumeration list(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.SelectorContext:javax.naming.NamingEnumeration list(java.lang.String)"
        ]
    },
    "org.apache.naming.SelectorContext:javax.naming.NamingEnumeration listBindings(javax.naming.Name)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.NamingContext:javax.naming.NamingEnumeration listBindings(javax.naming.Name)",
            "org.apache.naming.SelectorContext:javax.naming.NamingEnumeration listBindings(javax.naming.Name)"
        ]
    },
    "org.apache.naming.SelectorContext:javax.naming.NamingEnumeration listBindings(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.ManagerServlet:void printResources(java.io.PrintWriter,java.lang.String,javax.naming.Context,java.lang.String,java.lang.Class,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.mbeans.GlobalResourcesLifecycleListener:void createMBeans(java.lang.String,javax.naming.Context)",
            "org.apache.naming.SelectorContext:javax.naming.NamingEnumeration listBindings(java.lang.String)"
        ]
    },
    "org.apache.naming.SelectorContext:void destroySubcontext(javax.naming.Name)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.NamingContext:void destroySubcontext(javax.naming.Name)",
            "org.apache.naming.SelectorContext:void destroySubcontext(javax.naming.Name)"
        ]
    },
    "org.apache.naming.SelectorContext:void destroySubcontext(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.SelectorContext:void destroySubcontext(java.lang.String)"
        ]
    },
    "org.apache.naming.SelectorContext:javax.naming.Context createSubcontext(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.NamingContextListener:void createNamingContext()",
            "org.apache.catalina.core.NamingContextListener:void createSubcontexts(javax.naming.Context,java.lang.String)",
            "org.apache.naming.SelectorContext:javax.naming.Context createSubcontext(java.lang.String)"
        ]
    },
    "org.apache.naming.SelectorContext:java.lang.Object lookupLink(javax.naming.Name)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.SelectorContext:java.lang.Object lookupLink(javax.naming.Name)"
        ]
    },
    "org.apache.naming.SelectorContext:java.lang.Object lookupLink(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.SelectorContext:java.lang.Object lookupLink(java.lang.String)"
        ]
    },
    "org.apache.naming.SelectorContext:javax.naming.NameParser getNameParser(javax.naming.Name)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.NamingContext:javax.naming.NameParser getNameParser(javax.naming.Name)",
            "org.apache.naming.SelectorContext:javax.naming.NameParser getNameParser(javax.naming.Name)"
        ]
    },
    "org.apache.naming.SelectorContext:javax.naming.NameParser getNameParser(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.SelectorContext:javax.naming.NameParser getNameParser(java.lang.String)"
        ]
    },
    "org.apache.naming.SelectorContext:java.lang.Object addToEnvironment(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.SelectorContext:java.lang.Object addToEnvironment(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.naming.SelectorContext:java.lang.Object removeFromEnvironment(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.SelectorContext:java.lang.Object removeFromEnvironment(java.lang.String)"
        ]
    },
    "org.apache.naming.SelectorContext:java.util.Hashtable getEnvironment()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.SelectorContext:java.util.Hashtable getEnvironment()"
        ]
    },
    "org.apache.naming.SelectorContext:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.NamingContext:void destroySubcontext(javax.naming.Name)",
            "org.apache.naming.SelectorContext:void close()"
        ]
    },
    "org.apache.tomcat.util.modeler.modules.MbeansDescriptorsIntrospectionSource:java.util.List loadDescriptors(org.apache.tomcat.util.modeler.Registry,java.lang.String,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.modeler.Registry:java.util.List load(java.lang.String,java.lang.Object,java.lang.String)"
        ]
    },
    "org.apache.catalina.ssi.ExpressionParseTree$StringNode:java.lang.String getValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.ExpressionParseTree$CompareNode:int compareBranches()",
            "org.apache.catalina.ssi.ExpressionParseTree$StringNode:boolean evaluate()"
        ]
    },
    "org.apache.catalina.ssi.SSIConfig:long process(org.apache.catalina.ssi.SSIMediator,java.lang.String,java.lang.String[],java.lang.String[],java.io.PrintWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIProcessor:long process(java.io.Reader,long,java.io.PrintWriter)"
        ]
    },
    "org.apache.catalina.ssi.SSIFlastmod:long process(org.apache.catalina.ssi.SSIMediator,java.lang.String,java.lang.String[],java.lang.String[],java.io.PrintWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIProcessor:long process(java.io.Reader,long,java.io.PrintWriter)"
        ]
    },
    "org.apache.catalina.ssi.SSIFsize:long process(org.apache.catalina.ssi.SSIMediator,java.lang.String,java.lang.String[],java.lang.String[],java.io.PrintWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIProcessor:long process(java.io.Reader,long,java.io.PrintWriter)"
        ]
    },
    "org.apache.catalina.ssi.SSISet:long process(org.apache.catalina.ssi.SSIMediator,java.lang.String,java.lang.String[],java.lang.String[],java.io.PrintWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIProcessor:long process(java.io.Reader,long,java.io.PrintWriter)"
        ]
    },
    "org.apache.catalina.ssi.SSIServletExternalResolver:long getFileLastModified(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIMediator:long getFileLastModified(java.lang.String,boolean)"
        ]
    },
    "org.apache.catalina.ssi.SSIServletExternalResolver:long getFileSize(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIMediator:long getFileSize(java.lang.String,boolean)"
        ]
    },
    "org.apache.catalina.session.StandardManager$PrivilegedDoUnload:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.StandardManager:void unload()"
        ]
    },
    "org.apache.catalina.connector.CoyoteAdapter:void parseSessionCookiesId(org.apache.coyote.Request,org.apache.catalina.connector.Request)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean postParseRequest(org.apache.coyote.Request,org.apache.catalina.connector.Request,org.apache.coyote.Response,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:boolean isRequestedSessionIdValid()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.CGIServlet:void printServletEnvironment(javax.servlet.ServletOutputStream,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.valves.ExtendedAccessLogValve$8:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.valves.AccessLogValve:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)"
        ]
    },
    "org.apache.catalina.connector.Request:javax.servlet.http.HttpSession getSession()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.filters.CsrfPreventionFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)"
        ]
    },
    "org.apache.catalina.connector.Request:javax.servlet.http.HttpSession getSession(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Request:void setUserPrincipal(java.security.Principal)",
            "org.apache.catalina.connector.RequestFacade$GetSessionPrivilegedAction:javax.servlet.http.HttpSession run()",
            "org.apache.catalina.connector.RequestFacade:javax.servlet.http.HttpSession getSession(boolean)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.filters.CsrfPreventionFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.security.SecurityUtil:void execute(java.lang.reflect.Method,java.lang.Object,java.lang.Object[],java.security.Principal)",
            "org.apache.catalina.servlets.CGIServlet:void printServletEnvironment(javax.servlet.ServletOutputStream,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.valves.AccessLogValve$SessionAttributeElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.valves.AccessLogValve$SessionIdElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void lifecycleEvent(org.apache.catalina.LifecycleEvent)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.valves.CrawlerSessionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ExtendedAccessLogValve$SessionAttributeElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)"
        ]
    },
    "org.apache.catalina.connector.Request:org.apache.catalina.Session getSessionInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Response:java.lang.String encodeRedirectURL(java.lang.String)",
            "org.apache.catalina.connector.Response:java.lang.String encodeURL(java.lang.String)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.connector.Request:org.apache.catalina.Session getSessionInternal(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.AuthenticatorBase:boolean reauthenticateFromSSO(java.lang.String,org.apache.catalina.connector.Request)",
            "org.apache.catalina.authenticator.AuthenticatorBase:void register(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,java.security.Principal,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.catalina.authenticator.BasicAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.authenticator.DigestAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.authenticator.FormAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.authenticator.FormAuthenticator:boolean matchRequest(org.apache.catalina.connector.Request)",
            "org.apache.catalina.authenticator.SSLAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.connector.Response:boolean isEncodeable(java.lang.String)",
            "org.apache.catalina.valves.AccessLogValve$SessionIdElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)"
        ]
    },
    "org.apache.catalina.core.ApplicationHttpRequest:javax.servlet.http.HttpSession getSession()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.filters.CsrfPreventionFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)"
        ]
    },
    "org.apache.catalina.security.SecurityUtil:void execute(java.lang.reflect.Method,java.lang.Object,java.lang.Object[],java.security.Principal)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.security.SecurityUtil:void doAsPrivilege(java.lang.String,javax.servlet.Servlet,java.lang.Class[],java.lang.Object[],java.security.Principal)",
            "org.apache.catalina.security.SecurityUtil:void doAsPrivilege(java.lang.String,javax.servlet.Filter,java.lang.Class[],java.lang.Object[],java.security.Principal)"
        ]
    },
    "org.apache.catalina.session.PersistentManagerBase$PrivilegedStoreSave:java.lang.Void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase$PrivilegedStoreSave:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.session.ManagerBase:void backgroundProcess()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ContainerBase:void backgroundProcess()"
        ]
    },
    "org.apache.catalina.session.PersistentManagerBase:org.apache.catalina.Session findSession(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean postParseRequest(org.apache.coyote.Request,org.apache.catalina.connector.Request,org.apache.coyote.Response,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.Request:boolean isRequestedSessionIdValid()",
            "org.apache.catalina.connector.Request:org.apache.catalina.Session doGetSession(boolean)",
            "org.apache.catalina.core.ApplicationHttpRequest:javax.servlet.http.HttpSession getSession(boolean)",
            "org.apache.catalina.core.ApplicationHttpRequest:boolean isRequestedSessionIdValid()",
            "org.apache.catalina.manager.HTMLManagerServlet:org.apache.catalina.Session getSessionForNameAndId(org.apache.catalina.util.ContextName,java.lang.String,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.session.StoreBase:void processExpires()",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.session.PersistentManagerBase:void load()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.session.PersistentManagerBase:void unload()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase:void stopInternal()"
        ]
    },
    "org.apache.catalina.session.PersistentManagerBase:void processMaxActiveSwaps()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase:void processPersistenceChecks()"
        ]
    },
    "org.apache.catalina.session.PersistentManagerBase:void processPersistenceChecks()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase:void processExpires()"
        ]
    },
    "org.apache.catalina.authenticator.AuthenticatorBase:void register(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,java.security.Principal,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void login(java.lang.String,java.lang.String,org.apache.catalina.connector.Request)",
            "org.apache.catalina.authenticator.AuthenticatorBase:void logout(org.apache.catalina.connector.Request)",
            "org.apache.catalina.authenticator.BasicAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.authenticator.DigestAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.authenticator.FormAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.authenticator.SSLAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)"
        ]
    },
    "org.apache.catalina.authenticator.SingleSignOn:void sessionEvent(org.apache.catalina.SessionEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.StandardSession:void fireSessionEvent(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.catalina.authenticator.SingleSignOn:void removeSession(java.lang.String,org.apache.catalina.Session)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.SingleSignOn:void sessionEvent(org.apache.catalina.SessionEvent)"
        ]
    },
    "org.apache.catalina.manager.HTMLManagerServlet:java.lang.String sessions(org.apache.catalina.util.ContextName,int,org.apache.tomcat.util.res.StringManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.HTMLManagerServlet:java.lang.String expireSessions(org.apache.catalina.util.ContextName,javax.servlet.http.HttpServletRequest,org.apache.tomcat.util.res.StringManager)"
        ]
    },
    "org.apache.catalina.manager.ManagerServlet:void sessions(java.io.PrintWriter,org.apache.catalina.util.ContextName,org.apache.tomcat.util.res.StringManager)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.session.StandardManager$PrivilegedDoLoad:java.lang.Void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.StandardManager$PrivilegedDoLoad:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.session.StandardManager:void load()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.StandardManager:void startInternal()"
        ]
    },
    "org.apache.catalina.session.ManagerBase:org.apache.catalina.Session createSession(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Request:org.apache.catalina.Session doGetSession(boolean)",
            "org.apache.catalina.core.ApplicationHttpRequest:javax.servlet.http.HttpSession getSession(boolean)"
        ]
    },
    "org.apache.catalina.session.StandardSessionFacade:void setMaxInactiveInterval(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.StandardSessionFacade:void setMaxInactiveInterval(int)",
            "org.apache.catalina.valves.CrawlerSessionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.manager.HTMLManagerServlet:int invalidateSessions(org.apache.catalina.util.ContextName,java.lang.String[],org.apache.tomcat.util.res.StringManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.HTMLManagerServlet:void doSessions(org.apache.catalina.util.ContextName,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.tomcat.util.res.StringManager)"
        ]
    },
    "org.apache.catalina.session.StandardSessionFacade:void invalidate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.HTMLManagerServlet:int invalidateSessions(org.apache.catalina.util.ContextName,java.lang.String[],org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.session.StandardSessionFacade:void invalidate()"
        ]
    },
    "org.apache.catalina.connector.CoyoteOutputStream:void write(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteOutputStream:void write(byte[])",
            "org.apache.catalina.filters.ExpiresFilter$XServletOutputStream:void write(byte[],int,int)",
            "org.apache.catalina.loader.WebappLoader:boolean copy(java.io.InputStream,java.io.OutputStream)",
            "org.apache.catalina.servlets.CGIServlet$CGIRunner:void run()",
            "org.apache.catalina.servlets.DefaultServlet:void copy(org.apache.naming.resources.CacheEntry,java.io.InputStream,javax.servlet.ServletOutputStream)",
            "org.apache.catalina.servlets.DefaultServlet:java.io.IOException copyRange(java.io.InputStream,javax.servlet.ServletOutputStream)",
            "org.apache.catalina.servlets.DefaultServlet:java.io.IOException copyRange(java.io.InputStream,javax.servlet.ServletOutputStream,long,long)",
            "org.apache.catalina.util.IOTools:void flow(java.io.InputStream,java.io.OutputStream,byte[])",
            "org.apache.coyote.ajp.AjpProcessor$SocketOutputBuffer:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)",
            "org.apache.coyote.ajp.AjpProcessor:void output(byte[],int,int)",
            "org.apache.coyote.http11.filters.FlushableGZIPOutputStream:void deflate()",
            "org.apache.coyote.http11.InternalOutputBuffer$OutputStreamOutputBuffer:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)",
            "org.apache.coyote.http11.InternalOutputBuffer:void commit()",
            "org.apache.coyote.http11.InternalOutputBuffer:void realWriteBytes(byte[],int,int)",
            "org.apache.tomcat.util.http.fileupload.util.Streams:long copy(java.io.InputStream,java.io.OutputStream,boolean,byte[])",
            "org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream:void writeTo(java.io.OutputStream)",
            "org.apache.tomcat.util.http.fileupload.IOUtils:long copyLarge(java.io.InputStream,java.io.OutputStream)",
            "org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream:void write(byte[],int,int)"
        ]
    },
    "org.apache.catalina.realm.JNDIRealm:java.security.Principal authenticate(javax.naming.directory.DirContext,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.realm.JNDIRealm:java.security.Principal authenticate(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.tomcat.util.http.Parameters:void handleQueryParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Request:void parseParameters()",
            "org.apache.tomcat.util.http.Parameters:java.lang.String[] getParameterValues(java.lang.String)",
            "org.apache.tomcat.util.http.Parameters:java.util.Enumeration getParameterNames()"
        ]
    },
    "org.apache.catalina.connector.CoyoteOutputStream:void write(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.filters.ExpiresFilter$XServletOutputStream:void write(int)",
            "org.apache.catalina.startup.Catalina:void stopServer(java.lang.String[])",
            "org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream:void write(int)"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl:boolean findNextItem()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl:void <init>(org.apache.tomcat.util.http.fileupload.FileUploadBase,org.apache.tomcat.util.http.fileupload.RequestContext)",
            "org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl:boolean hasNext()"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.MultipartStream:boolean skipPreamble()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl:boolean findNextItem()"
        ]
    },
    "org.apache.coyote.ajp.AjpProcessor:boolean refillReadBuffer()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.ajp.AbstractAjpProcessor$SocketInputBuffer:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)"
        ]
    },
    "org.apache.coyote.ajp.AjpProcessor:void flush(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.ajp.AbstractAjpProcessor:void action(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.coyote.http11.InternalOutputBuffer:void sendAck()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.AbstractHttp11Processor:void action(org.apache.coyote.ActionCode,java.lang.Object)"
        ]
    },
    "org.apache.catalina.connector.CoyoteReader:long skip(long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteReader:java.lang.String readLine()",
            "org.apache.catalina.servlets.DefaultServlet:java.io.IOException copyRange(java.io.Reader,java.io.PrintWriter,long,long)"
        ]
    },
    "org.apache.catalina.servlets.DefaultServlet:java.io.IOException copyRange(java.io.Reader,java.io.PrintWriter,long,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.DefaultServlet:void copy(org.apache.naming.resources.CacheEntry,java.io.PrintWriter,org.apache.catalina.servlets.DefaultServlet$Range)",
            "org.apache.catalina.servlets.DefaultServlet:void copy(org.apache.naming.resources.CacheEntry,java.io.PrintWriter,java.util.Iterator,java.lang.String)"
        ]
    },
    "org.apache.catalina.connector.InputBuffer:int read()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteReader:int read()"
        ]
    },
    "org.apache.catalina.connector.InputBuffer:int read(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteReader:int read(char[])",
            "org.apache.catalina.connector.CoyoteReader:int read(char[],int,int)",
            "org.apache.catalina.connector.InputBuffer:int read(char[])"
        ]
    },
    "org.apache.catalina.connector.CoyoteInputStream$1:java.lang.Integer run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteInputStream$1:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.connector.CoyoteInputStream:int read()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardServer:void await()",
            "org.apache.catalina.servlets.CGIServlet$HTTPHeaderInputStream:int read()"
        ]
    },
    "org.apache.catalina.core.StandardServer:void await()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Catalina:void await()"
        ]
    },
    "org.apache.catalina.servlets.CGIServlet$HTTPHeaderInputStream:int read()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardServer:void await()",
            "org.apache.catalina.servlets.CGIServlet$HTTPHeaderInputStream:int read()"
        ]
    },
    "org.apache.catalina.connector.CoyoteInputStream$3:java.lang.Integer run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteInputStream$3:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.connector.CoyoteInputStream$4:java.lang.Integer run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteInputStream$4:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.connector.CoyoteInputStream:int read(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.FormAuthenticator:boolean restoreRequest(org.apache.catalina.connector.Request,org.apache.catalina.Session)",
            "org.apache.catalina.authenticator.FormAuthenticator:void saveRequest(org.apache.catalina.connector.Request,org.apache.catalina.Session)",
            "org.apache.catalina.loader.WebappClassLoader:org.apache.catalina.loader.ResourceEntry findResourceInternal(java.lang.String,java.lang.String)",
            "org.apache.catalina.loader.WebappLoader:boolean copy(java.io.InputStream,java.io.OutputStream)",
            "org.apache.catalina.manager.host.HostManagerServlet:void add(java.io.PrintWriter,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean,boolean,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.ManagerServlet:void uploadWar(javax.servlet.http.HttpServletRequest,java.io.File)",
            "org.apache.catalina.servlets.CGIServlet$CGIRunner:void run()",
            "org.apache.catalina.servlets.DefaultServlet:java.io.IOException copyRange(java.io.InputStream,javax.servlet.ServletOutputStream)",
            "org.apache.catalina.servlets.DefaultServlet:java.io.IOException copyRange(java.io.InputStream,javax.servlet.ServletOutputStream,long,long)",
            "org.apache.catalina.startup.ExpandWar:void expand(java.io.InputStream,java.io.File)",
            "org.apache.catalina.startup.HostConfig:void deployWAR(org.apache.catalina.util.ContextName,java.io.File,java.lang.String)",
            "org.apache.catalina.util.IOTools:void flow(java.io.InputStream,java.io.OutputStream,byte[])",
            "org.apache.naming.resources.FileDirContext:void rebind(java.lang.String,java.lang.Object,javax.naming.directory.Attributes)",
            "org.apache.tomcat.util.http.fileupload.util.Streams:long copy(java.io.InputStream,java.io.OutputStream,boolean,byte[])",
            "org.apache.tomcat.util.http.fileupload.IOUtils:long copyLarge(java.io.InputStream,java.io.OutputStream)",
            "org.apache.tomcat.util.net.jsse.JSSESupport:void handShake()"
        ]
    },
    "org.apache.catalina.connector.CoyoteInputStream:int read(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Request:int readPostBody(byte[],int)",
            "org.apache.catalina.connector.Request:byte[] readChunkedPostBody()",
            "org.apache.catalina.loader.WebappClassLoader:void clearReferencesJdbc()",
            "org.apache.catalina.loader.WebappClassLoader:org.apache.catalina.loader.ResourceEntry findResourceInternal(java.lang.String,java.lang.String)",
            "org.apache.coyote.ajp.AjpProcessor:boolean read(byte[],int,int)",
            "org.apache.coyote.http11.InternalInputBuffer:boolean fill(boolean)",
            "org.apache.naming.resources.ProxyDirContext:void cacheLoad(org.apache.naming.resources.CacheEntry)",
            "org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream:int write(java.io.InputStream)",
            "org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream:int makeAvailable()",
            "org.apache.tomcat.util.http.fileupload.MultipartStream:byte readByte()"
        ]
    },
    "org.apache.catalina.connector.Request:int readPostBody(byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Request:void parseParameters()"
        ]
    },
    "org.apache.catalina.loader.WebappClassLoader:void clearReferencesJdbc()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.loader.WebappClassLoader:void clearReferences()"
        ]
    },
    "org.apache.coyote.ajp.AjpProcessor:boolean read(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.ajp.AjpProcessor:boolean readMessage(org.apache.coyote.ajp.AjpMessage)"
        ]
    },
    "org.apache.coyote.http11.InternalInputBuffer:boolean fill(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.InternalInputBuffer:boolean fill()"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream:int write(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream:int makeAvailable()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream:int read()",
            "org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream:int read(byte[],int,int)",
            "org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream:void close(boolean)",
            "org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream:long skip(long)"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.MultipartStream:byte readByte()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.MultipartStream:boolean readBoundary()",
            "org.apache.tomcat.util.http.fileupload.MultipartStream:java.lang.String readHeaders()"
        ]
    },
    "org.apache.catalina.connector.RequestFacade$GetLocalePrivilegedAction:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:java.util.Locale getLocale()"
        ]
    },
    "org.apache.catalina.connector.RequestFacade$GetLocalesPrivilegedAction:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:java.util.Enumeration getLocales()"
        ]
    },
    "org.apache.catalina.core.StandardContext:boolean filterStart()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext$2:java.lang.Boolean call()"
        ]
    },
    "org.apache.catalina.core.ApplicationFilterConfig:void setFilterDef(org.apache.catalina.deploy.FilterDef)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterConfig:void <init>(org.apache.catalina.Context,org.apache.catalina.deploy.FilterDef)"
        ]
    },
    "org.apache.catalina.startup.ContextConfig:org.xml.sax.InputSource getWebXmlSource(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:org.xml.sax.InputSource getGlobalWebXmlSource()",
            "org.apache.catalina.startup.ContextConfig:org.xml.sax.InputSource getHostWebXmlSource()"
        ]
    },
    "org.apache.tomcat.util.modeler.Registry:void loadDescriptors(java.lang.String,java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.MBeanUtils:org.apache.tomcat.util.modeler.Registry createRegistry()",
            "org.apache.tomcat.util.modeler.Registry:void findDescriptor(java.lang.Class,java.lang.String)"
        ]
    },
    "org.apache.catalina.core.DefaultInstanceManager:void <init>(javax.naming.Context,java.util.Map,org.apache.catalina.Context,java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterConfig:org.apache.tomcat.InstanceManager getInstanceManager()",
            "org.apache.catalina.core.AsyncContextImpl:org.apache.tomcat.InstanceManager getInstanceManager()",
            "org.apache.catalina.core.StandardContext:void startInternal()"
        ]
    },
    "org.apache.catalina.loader.WebappClassLoader:java.lang.Class loadClass(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.loader.WebappClassLoader:java.lang.Class loadClass(java.lang.String)"
        ]
    },
    "org.apache.catalina.manager.HTMLManagerServlet$6:java.lang.Comparable getComparableObject(org.apache.catalina.Session)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.util.BaseSessionComparator:int compare(org.apache.catalina.Session,org.apache.catalina.Session)"
        ]
    },
    "org.apache.catalina.manager.util.BaseSessionComparator:int compare(org.apache.catalina.Session,org.apache.catalina.Session)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.util.BaseSessionComparator:int compare(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.catalina.util.LifecycleMBeanBase:void initInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Connector:void initInternal()",
            "org.apache.catalina.core.StandardContext:void initInternal()",
            "org.apache.catalina.core.StandardServer:void initInternal()",
            "org.apache.catalina.core.StandardService:void initInternal()",
            "org.apache.catalina.core.StandardThreadExecutor:void initInternal()",
            "org.apache.catalina.deploy.NamingResources:void initInternal()",
            "org.apache.catalina.realm.RealmBase:void initInternal()",
            "org.apache.catalina.session.ManagerBase:void initInternal()",
            "org.apache.catalina.util.LifecycleBase:void init()",
            "org.apache.catalina.valves.ValveBase:void initInternal()"
        ]
    },
    "org.apache.catalina.core.ApplicationContext:void removeAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationContext:void setAttribute(java.lang.String,java.lang.Object)",
            "org.apache.catalina.core.ApplicationContext:void clearAttributes()",
            "org.apache.catalina.core.ApplicationContextFacade:void removeAttribute(java.lang.String)",
            "org.apache.catalina.loader.WebappLoader:void stopInternal()"
        ]
    },
    "org.apache.catalina.core.ApplicationContext:void setAttribute(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationContextFacade:void setAttribute(java.lang.String,java.lang.Object)",
            "org.apache.catalina.core.StandardContext:void setAltDDName(java.lang.String)",
            "org.apache.catalina.core.StandardContext:javax.servlet.ServletContext getServletContext()",
            "org.apache.catalina.core.StandardContext:void startInternal()",
            "org.apache.catalina.core.StandardContext:void postWorkDirectory()",
            "org.apache.catalina.loader.WebappLoader:void setClassPath()",
            "org.apache.catalina.startup.ContextConfig:void webConfig()"
        ]
    },
    "org.apache.catalina.core.StandardContext:void addApplicationListener(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.deploy.WebXml:void configureContext(org.apache.catalina.Context)",
            "org.apache.catalina.startup.TldConfig:void execute()"
        ]
    },
    "org.apache.catalina.core.StandardContext:void addApplicationParameter(org.apache.catalina.deploy.ApplicationParameter)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardContext:void addErrorPage(org.apache.catalina.deploy.ErrorPage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.deploy.WebXml:void configureContext(org.apache.catalina.Context)"
        ]
    },
    "org.apache.catalina.core.StandardContext:void addFilterDef(org.apache.catalina.deploy.FilterDef)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationContext:javax.servlet.FilterRegistration$Dynamic addFilter(java.lang.String,java.lang.String,javax.servlet.Filter)",
            "org.apache.catalina.deploy.WebXml:void configureContext(org.apache.catalina.Context)"
        ]
    },
    "org.apache.catalina.core.StandardContext:void addFilterMap(org.apache.catalina.deploy.FilterMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterRegistration:void addMappingForServletNames(java.util.EnumSet,boolean,java.lang.String[])",
            "org.apache.catalina.core.ApplicationFilterRegistration:void addMappingForUrlPatterns(java.util.EnumSet,boolean,java.lang.String[])",
            "org.apache.catalina.deploy.WebXml:void configureContext(org.apache.catalina.Context)"
        ]
    },
    "org.apache.catalina.core.StandardContext:void addFilterMapBefore(org.apache.catalina.deploy.FilterMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterRegistration:void addMappingForServletNames(java.util.EnumSet,boolean,java.lang.String[])",
            "org.apache.catalina.core.ApplicationFilterRegistration:void addMappingForUrlPatterns(java.util.EnumSet,boolean,java.lang.String[])"
        ]
    },
    "org.apache.catalina.core.StandardContext:void addInstanceListener(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardContext:void addMessageDestination(org.apache.catalina.deploy.MessageDestination)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardContext:void addMessageDestinationRef(org.apache.catalina.deploy.MessageDestinationRef)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardContext:void addMimeMapping(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.deploy.WebXml:void configureContext(org.apache.catalina.Context)",
            "org.apache.catalina.startup.Tomcat:void initWebappDefaults(org.apache.catalina.Context)"
        ]
    },
    "org.apache.catalina.core.StandardContext:void addParameter(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.deploy.WebXml:void configureContext(org.apache.catalina.Context)"
        ]
    },
    "org.apache.catalina.core.StandardContext:void addRoleMapping(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardContext:void addSecurityRole(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationContext:void declareRoles(java.lang.String[])",
            "org.apache.catalina.deploy.WebXml:void configureContext(org.apache.catalina.Context)",
            "org.apache.catalina.startup.ContextConfig:void validateSecurityRoles()",
            "org.apache.catalina.startup.WebAnnotationSet:void loadClassAnnotation(org.apache.catalina.Context,java.lang.String)"
        ]
    },
    "org.apache.catalina.core.StandardContext:void addServletMapping(java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:void addServletMapping(java.lang.String,java.lang.String)",
            "org.apache.catalina.deploy.WebXml:void configureContext(org.apache.catalina.Context)"
        ]
    },
    "org.apache.catalina.core.StandardContext:void addWatchedResource(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void processContextConfig(java.net.URL)",
            "org.apache.catalina.startup.ContextConfig:org.xml.sax.InputSource getWebXmlSource(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.core.StandardContext:void addWelcomeFile(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.deploy.WebXml:void configureContext(org.apache.catalina.Context)",
            "org.apache.catalina.startup.Tomcat:void initWebappDefaults(org.apache.catalina.Context)"
        ]
    },
    "org.apache.catalina.core.StandardContext:void addWrapperLifecycle(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardContext:void addWrapperListener(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardContext:void removeApplicationListener(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardContext:void removeApplicationParameter(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardContext:void removeConstraint(org.apache.catalina.deploy.SecurityConstraint)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:java.util.Set addServletSecurity(org.apache.catalina.core.ApplicationServletRegistration,javax.servlet.ServletSecurityElement)",
            "org.apache.catalina.startup.ContextConfig:void configureStop()"
        ]
    },
    "org.apache.catalina.core.StandardContext:void removeErrorPage(org.apache.catalina.deploy.ErrorPage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void configureStop()"
        ]
    },
    "org.apache.catalina.core.StandardContext:void removeFilterDef(org.apache.catalina.deploy.FilterDef)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void configureStop()"
        ]
    },
    "org.apache.catalina.core.StandardContext:void removeFilterMap(org.apache.catalina.deploy.FilterMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void configureStop()"
        ]
    },
    "org.apache.catalina.core.StandardContext:void removeInstanceListener(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardContext:void removeMessageDestination(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardContext:void removeMessageDestinationRef(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardContext:void removeMimeMapping(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void configureStop()"
        ]
    },
    "org.apache.catalina.core.StandardContext:void removeParameter(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void configureStop()"
        ]
    },
    "org.apache.catalina.core.StandardContext:void removeRoleMapping(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardContext:void removeSecurityRole(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void configureStop()"
        ]
    },
    "org.apache.catalina.core.StandardContext:void removeServletMapping(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void configureStop()"
        ]
    },
    "org.apache.catalina.core.StandardContext:void removeWatchedResource(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardContext:void removeWelcomeFile(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void configureStop()"
        ]
    },
    "org.apache.catalina.core.StandardContext:void removeWrapperLifecycle(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void configureStop()"
        ]
    },
    "org.apache.catalina.core.StandardContext:void removeWrapperListener(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void configureStop()"
        ]
    },
    "org.apache.catalina.core.StandardContext:boolean listenerStart()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext$1:java.lang.Boolean call()"
        ]
    },
    "org.apache.catalina.core.StandardContext:boolean listenerStop()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext$4:java.lang.Void call()"
        ]
    },
    "org.apache.catalina.core.StandardHost:void addAlias(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.host.HostManagerServlet:void add(java.io.PrintWriter,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean,boolean,org.apache.tomcat.util.res.StringManager)"
        ]
    },
    "org.apache.catalina.core.StandardHost:void removeAlias(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardWrapper:void addInitParameter(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationServletRegistration:boolean setInitParameter(java.lang.String,java.lang.String)",
            "org.apache.catalina.deploy.WebXml:void configureContext(org.apache.catalina.Context)",
            "org.apache.catalina.startup.Tomcat:void initWebappDefaults(org.apache.catalina.Context)"
        ]
    },
    "org.apache.catalina.core.StandardWrapper:void addMapping(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:void addServletMapping(java.lang.String,java.lang.String,boolean)"
        ]
    },
    "org.apache.catalina.core.StandardWrapper:void addSecurityReference(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.deploy.WebXml:void configureContext(org.apache.catalina.Context)"
        ]
    },
    "org.apache.catalina.core.StandardWrapper:void removeInitParameter(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardWrapper:void removeMapping(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:void addServletMapping(java.lang.String,java.lang.String,boolean)",
            "org.apache.catalina.core.StandardContext:void removeServletMapping(java.lang.String)"
        ]
    },
    "org.apache.catalina.core.StandardWrapper:void removeSecurityReference(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardWrapper:void unload()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardWrapper:void stopInternal()",
            "org.apache.catalina.core.StandardWrapperValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardWrapperValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)"
        ]
    },
    "org.apache.catalina.session.StandardSession:void fireContainerEvent(org.apache.catalina.Context,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.StandardSession:void tellNew()",
            "org.apache.catalina.session.StandardSession:void expire(boolean)",
            "org.apache.catalina.session.StandardSession:void setAttribute(java.lang.String,java.lang.Object,boolean)",
            "org.apache.catalina.session.StandardSession:void removeAttributeInternal(java.lang.String,boolean)"
        ]
    },
    "org.apache.catalina.core.NamingContextListener:void propertyChange(java.beans.PropertyChangeEvent)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.loader.WebappClassLoader:void clearReferences()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.loader.WebappClassLoader:void stop()"
        ]
    },
    "org.apache.catalina.realm.JNDIRealm:org.apache.catalina.realm.JNDIRealm$User getUserByPattern(javax.naming.directory.DirContext,java.lang.String,java.lang.String,java.lang.String[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.realm.JNDIRealm:org.apache.catalina.realm.JNDIRealm$User getUser(javax.naming.directory.DirContext,java.lang.String,java.lang.String,int)"
        ]
    },
    "org.apache.catalina.realm.JNDIRealm:org.apache.catalina.realm.JNDIRealm$User getUser(javax.naming.directory.DirContext,java.lang.String,java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.realm.JNDIRealm:java.security.Principal authenticate(javax.naming.directory.DirContext,java.lang.String,java.lang.String)",
            "org.apache.catalina.realm.JNDIRealm:org.apache.catalina.realm.JNDIRealm$User getUser(javax.naming.directory.DirContext,java.lang.String)",
            "org.apache.catalina.realm.JNDIRealm:org.apache.catalina.realm.JNDIRealm$User getUser(javax.naming.directory.DirContext,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.realm.JNDIRealm:java.security.Principal getPrincipal(javax.naming.directory.DirContext,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.realm.JNDIRealm:java.security.Principal getPrincipal(java.lang.String)"
        ]
    },
    "org.apache.catalina.valves.ExtendedAccessLogValve$10:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.valves.AccessLogValve:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)"
        ]
    },
    "org.apache.catalina.valves.ExtendedAccessLogValve$12:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.valves.AccessLogValve:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)"
        ]
    },
    "org.apache.catalina.valves.ExtendedAccessLogValve$14:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.valves.AccessLogValve:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)"
        ]
    },
    "org.apache.catalina.valves.ExtendedAccessLogValve$4:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.valves.AccessLogValve:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)"
        ]
    },
    "org.apache.catalina.valves.ExtendedAccessLogValve$5:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.valves.AccessLogValve:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)"
        ]
    },
    "org.apache.catalina.valves.ExtendedAccessLogValve$6:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.valves.AccessLogValve:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)"
        ]
    },
    "org.apache.catalina.valves.ExtendedAccessLogValve$7:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.valves.AccessLogValve:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)"
        ]
    },
    "org.apache.catalina.valves.ExtendedAccessLogValve$9:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.valves.AccessLogValve:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)"
        ]
    },
    "org.apache.catalina.valves.ExtendedAccessLogValve$CookieElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.valves.AccessLogValve:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)"
        ]
    },
    "org.apache.catalina.valves.ExtendedAccessLogValve$RequestHeaderElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.valves.AccessLogValve:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)"
        ]
    },
    "org.apache.catalina.valves.ExtendedAccessLogValve$ResponseHeaderElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.valves.AccessLogValve:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)"
        ]
    },
    "org.apache.catalina.valves.ExtendedAccessLogValve$ServletContextElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.valves.AccessLogValve:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)"
        ]
    },
    "org.apache.catalina.valves.ExtendedAccessLogValve$SessionAttributeElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.valves.AccessLogValve:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)"
        ]
    },
    "org.apache.naming.resources.DirContextURLConnection:java.lang.String getContentType()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.ApplicationContextFacade:java.net.URL getResource(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.NamingContextListener:void addService(org.apache.catalina.deploy.ContextService)",
            "org.apache.catalina.loader.WebappLoader:void setPermissions()",
            "org.apache.catalina.ssi.SSIServlet:void requestHandler(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:java.net.URLConnection getURLConnection(java.lang.String,boolean)",
            "org.apache.catalina.startup.ContextConfig:void webConfig()",
            "org.apache.catalina.startup.ContextConfig:org.xml.sax.InputSource getContextWebXmlSource()",
            "org.apache.tomcat.util.scan.StandardJarScanner:void scan(javax.servlet.ServletContext,java.lang.ClassLoader,org.apache.tomcat.JarScannerCallback,java.util.Set)"
        ]
    },
    "org.apache.catalina.core.NamingContextListener:void addService(org.apache.catalina.deploy.ContextService)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.NamingContextListener:void containerEvent(org.apache.catalina.ContainerEvent)",
            "org.apache.catalina.core.NamingContextListener:void processGlobalResourcesChange(java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.catalina.core.NamingContextListener:void createNamingContext()"
        ]
    },
    "org.apache.catalina.loader.WebappLoader:void setPermissions()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.loader.WebappLoader:void startInternal()"
        ]
    },
    "org.apache.catalina.startup.ContextConfig:org.xml.sax.InputSource getContextWebXmlSource()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void webConfig()"
        ]
    },
    "org.apache.tomcat.util.scan.StandardJarScanner:void scan(javax.servlet.ServletContext,java.lang.ClassLoader,org.apache.tomcat.JarScannerCallback,java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:java.util.Map processJarsForWebFragments()",
            "org.apache.catalina.startup.TldConfig:void execute()"
        ]
    },
    "org.apache.catalina.core.ApplicationContextFacade:java.io.InputStream getResourceAsStream(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:java.lang.String getDeploymentDescriptor()",
            "org.apache.catalina.manager.host.HostManagerServlet:void add(java.io.PrintWriter,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean,boolean,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.servlets.CGIServlet$CGIEnvironment:void expandCGIScript()",
            "org.apache.catalina.servlets.DefaultServlet:java.io.InputStream findXsltInputStream(javax.naming.directory.DirContext)",
            "org.apache.catalina.startup.ContextConfig:org.xml.sax.InputSource getContextWebXmlSource()",
            "org.apache.catalina.startup.TldConfig:void tldScanWebXml()",
            "org.apache.catalina.startup.TldConfig:void tldScanResourcePaths(java.lang.String)"
        ]
    },
    "org.apache.catalina.core.StandardContext:java.lang.String getDeploymentDescriptor()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.TldConfig:void tldScanWebXml()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.TldConfig:void execute()"
        ]
    },
    "org.apache.catalina.startup.TldConfig:void tldScanResourcePaths(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.TldConfig:void execute()",
            "org.apache.catalina.startup.TldConfig:void tldScanResourcePaths(java.lang.String)"
        ]
    },
    "org.apache.catalina.core.DefaultInstanceManager:void processAnnotations(java.lang.Object,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.DefaultInstanceManager:java.lang.Object newInstance(java.lang.Object,java.lang.Class)"
        ]
    },
    "org.apache.catalina.core.NamingContextListener:void addEjb(org.apache.catalina.deploy.ContextEjb)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.NamingContextListener:void containerEvent(org.apache.catalina.ContainerEvent)",
            "org.apache.catalina.core.NamingContextListener:void processGlobalResourcesChange(java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.catalina.core.NamingContextListener:void createNamingContext()"
        ]
    },
    "org.apache.catalina.core.NamingContextListener:void addEnvironment(org.apache.catalina.deploy.ContextEnvironment)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.NamingContextListener:void containerEvent(org.apache.catalina.ContainerEvent)",
            "org.apache.catalina.core.NamingContextListener:void processGlobalResourcesChange(java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.catalina.core.NamingContextListener:void createNamingContext()"
        ]
    },
    "org.apache.catalina.core.NamingContextListener:void addResourceEnvRef(org.apache.catalina.deploy.ContextResourceEnvRef)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.NamingContextListener:void containerEvent(org.apache.catalina.ContainerEvent)",
            "org.apache.catalina.core.NamingContextListener:void processGlobalResourcesChange(java.lang.String,java.lang.Object,java.lang.Object)",
            "org.apache.catalina.core.NamingContextListener:void createNamingContext()"
        ]
    },
    "org.apache.catalina.mbeans.GlobalResourcesLifecycleListener:void createMBeans()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.GlobalResourcesLifecycleListener:void lifecycleEvent(org.apache.catalina.LifecycleEvent)"
        ]
    },
    "org.apache.catalina.realm.DataSourceRealm:java.security.Principal authenticate(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:java.security.Principal doLogin(org.apache.catalina.connector.Request,java.lang.String,java.lang.String)",
            "org.apache.catalina.authenticator.BasicAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.authenticator.FormAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.authenticator.SingleSignOn:boolean reauthenticate(java.lang.String,org.apache.catalina.Realm,org.apache.catalina.connector.Request)",
            "org.apache.catalina.realm.CombinedRealm:java.security.Principal authenticate(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.realm.DataSourceRealm:java.lang.String getPassword(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.realm.RealmBase:java.security.Principal authenticate(java.lang.String,java.lang.String)",
            "org.apache.catalina.realm.RealmBase:java.lang.String getDigest(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.realm.DataSourceRealm:java.security.Principal getPrincipal(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.realm.RealmBase:java.security.Principal authenticate(java.lang.String,java.lang.String)",
            "org.apache.catalina.realm.RealmBase:java.security.Principal authenticate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.catalina.realm.RealmBase:java.security.Principal getPrincipal(java.security.cert.X509Certificate)"
        ]
    },
    "org.apache.catalina.realm.DataSourceRealm:java.util.ArrayList getRoles(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.naming.resources.BaseDirContext:java.lang.Object lookup(javax.naming.Name)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.resources.ProxyDirContext:java.lang.Object lookup(javax.naming.Name)",
            "org.apache.naming.NamingContext:java.lang.Object lookup(javax.naming.Name,boolean)",
            "org.apache.naming.NamingContextBindingsEnumeration:javax.naming.Binding nextElementInternal()",
            "org.apache.naming.SelectorContext:java.lang.Object lookup(javax.naming.Name)"
        ]
    },
    "org.apache.naming.resources.FileDirContext:java.lang.Object lookupLink(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.resources.BaseDirContext:java.lang.Object lookupLink(javax.naming.Name)",
            "org.apache.naming.resources.ProxyDirContext:java.lang.Object lookupLink(java.lang.String)",
            "org.apache.naming.SelectorContext:java.lang.Object lookupLink(java.lang.String)"
        ]
    },
    "org.apache.naming.resources.FileDirContext:javax.naming.directory.DirContext createSubcontext(java.lang.String,javax.naming.directory.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.resources.BaseDirContext:javax.naming.Context createSubcontext(java.lang.String)",
            "org.apache.naming.resources.BaseDirContext:javax.naming.directory.DirContext createSubcontext(javax.naming.Name,javax.naming.directory.Attributes)",
            "org.apache.naming.resources.ProxyDirContext:javax.naming.directory.DirContext createSubcontext(java.lang.String,javax.naming.directory.Attributes)"
        ]
    },
    "org.apache.naming.resources.WARDirContext:java.lang.Object lookupLink(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.resources.BaseDirContext:java.lang.Object lookupLink(javax.naming.Name)",
            "org.apache.naming.resources.ProxyDirContext:java.lang.Object lookupLink(java.lang.String)",
            "org.apache.naming.SelectorContext:java.lang.Object lookupLink(java.lang.String)"
        ]
    },
    "org.apache.naming.resources.DirContextURLConnection:long getLastModified()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIServlet:void processSSI(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.net.URL)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:long getFileLastModified(java.lang.String,boolean)"
        ]
    },
    "org.apache.naming.resources.DirContextURLConnection:java.lang.Object getContent()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.resources.DirContextURLConnection:java.lang.Object getContent(java.lang.Class[])"
        ]
    },
    "org.apache.tomcat.util.http.mapper.Mapper:void map(org.apache.tomcat.util.buf.MessageBytes,org.apache.tomcat.util.http.mapper.MappingData)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationContext:javax.servlet.RequestDispatcher getRequestDispatcher(java.lang.String)"
        ]
    },
    "org.apache.tomcat.util.http.mapper.Mapper:void internalMap(org.apache.tomcat.util.buf.CharChunk,org.apache.tomcat.util.buf.CharChunk,java.lang.String,org.apache.tomcat.util.http.mapper.MappingData)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.http.mapper.Mapper:void map(org.apache.tomcat.util.buf.MessageBytes,org.apache.tomcat.util.buf.MessageBytes,java.lang.String,org.apache.tomcat.util.http.mapper.MappingData)"
        ]
    },
    "org.apache.naming.resources.ProxyDirContext:java.lang.Object lookup(javax.naming.Name)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.resources.ProxyDirContext:java.lang.Object lookup(javax.naming.Name)",
            "org.apache.naming.NamingContext:java.lang.Object lookup(javax.naming.Name,boolean)",
            "org.apache.naming.NamingContextBindingsEnumeration:javax.naming.Binding nextElementInternal()",
            "org.apache.naming.SelectorContext:java.lang.Object lookup(javax.naming.Name)"
        ]
    },
    "org.apache.naming.resources.ProxyDirContext:javax.naming.directory.Attributes getAttributes(javax.naming.Name)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.resources.ProxyDirContext:javax.naming.directory.Attributes getAttributes(javax.naming.Name)"
        ]
    },
    "org.apache.naming.resources.ProxyDirContext:javax.naming.directory.Attributes getAttributes(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.loader.WebappClassLoader:void addJar(java.lang.String,java.util.jar.JarFile,java.io.File)",
            "org.apache.catalina.loader.WebappClassLoader:boolean modified()",
            "org.apache.catalina.loader.WebappClassLoader:org.apache.catalina.loader.ResourceEntry findResourceInternal(java.lang.String,java.lang.String)",
            "org.apache.naming.resources.DirContextURLConnection:void connect()",
            "org.apache.naming.resources.ProxyDirContext:javax.naming.directory.Attributes getAttributes(java.lang.String)",
            "org.apache.naming.resources.ProxyDirContext:org.apache.naming.resources.CacheEntry lookupCache(java.lang.String)",
            "org.apache.naming.resources.ProxyDirContext:boolean revalidate(org.apache.naming.resources.CacheEntry)",
            "org.apache.naming.resources.ProxyDirContext:void cacheLoad(org.apache.naming.resources.CacheEntry)"
        ]
    },
    "org.apache.catalina.servlets.DefaultServlet:boolean checkIfHeaders(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.naming.resources.ResourceAttributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.DefaultServlet:void serveResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,boolean)",
            "org.apache.catalina.servlets.WebdavServlet:boolean checkIfHeaders(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.naming.resources.ResourceAttributes)"
        ]
    },
    "org.apache.naming.resources.FileDirContext$FileResourceAttributes:boolean isCollection()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.security.SecurityConfig:org.apache.catalina.security.SecurityConfig newInstance()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Catalina:void setSecurityProtection()",
            "org.apache.catalina.startup.Embedded:void setSecurityProtection()"
        ]
    },
    "org.apache.catalina.startup.Bootstrap:void initClassLoaders()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Bootstrap:void init()"
        ]
    },
    "org.apache.tomcat.util.scan.StandardJarScanner:void process(org.apache.tomcat.JarScannerCallback,java.net.URL)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.scan.StandardJarScanner:void scan(javax.servlet.ServletContext,java.lang.ClassLoader,org.apache.tomcat.JarScannerCallback,java.util.Set)"
        ]
    },
    "org.apache.catalina.core.ApplicationContext:java.util.Set getResourcePaths(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationContextFacade:java.util.Set getResourcePaths(java.lang.String)",
            "org.apache.catalina.startup.TldConfig:void tldScanResourcePaths(java.lang.String)",
            "org.apache.tomcat.util.scan.StandardJarScanner:void scan(javax.servlet.ServletContext,java.lang.ClassLoader,org.apache.tomcat.JarScannerCallback,java.util.Set)"
        ]
    },
    "org.apache.catalina.manager.ManagerServlet:void resources(java.io.PrintWriter,java.lang.String,org.apache.tomcat.util.res.StringManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.ManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.startup.ContextConfig:void processResourceJARs(java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void webConfig()"
        ]
    },
    "org.apache.catalina.core.StandardContext:void setResources(javax.naming.directory.DirContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:void startInternal()"
        ]
    },
    "org.apache.naming.NamingContext:java.lang.Object lookup(javax.naming.Name)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.NamingContext:void rename(javax.naming.Name,javax.naming.Name)",
            "org.apache.naming.NamingContext:java.lang.Object lookup(javax.naming.Name,boolean)",
            "org.apache.naming.NamingContextBindingsEnumeration:javax.naming.Binding nextElementInternal()",
            "org.apache.naming.SelectorContext:java.lang.Object lookup(javax.naming.Name)"
        ]
    },
    "org.apache.naming.NamingContext:java.lang.Object lookup(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.DefaultInstanceManager:void lookupFieldResource(javax.naming.Context,java.lang.Object,java.lang.reflect.Field,java.lang.String,java.lang.Class)",
            "org.apache.catalina.core.DefaultInstanceManager:void lookupMethodResource(javax.naming.Context,java.lang.Object,java.lang.reflect.Method,java.lang.String,java.lang.Class)",
            "org.apache.catalina.core.NamingContextListener:void addResource(org.apache.catalina.deploy.ContextResource)",
            "org.apache.catalina.core.NamingContextListener:void createSubcontexts(javax.naming.Context,java.lang.String)",
            "org.apache.catalina.deploy.NamingResources:void cleanUp()",
            "org.apache.catalina.mbeans.GlobalResourcesLifecycleListener:void createMBeans(java.lang.String,javax.naming.Context)",
            "org.apache.catalina.realm.DataSourceRealm:java.sql.Connection open()",
            "org.apache.catalina.realm.UserDatabaseRealm:void startInternal()",
            "org.apache.naming.factory.ResourceLinkFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.NamingContext:java.lang.Object lookup(javax.naming.Name,boolean)",
            "org.apache.naming.SelectorContext:java.lang.Object lookup(java.lang.String)",
            "org.apache.tomcat.util.http.mapper.Mapper:void internalMapWrapper(org.apache.tomcat.util.http.mapper.Mapper$ContextVersion,org.apache.tomcat.util.buf.CharChunk,org.apache.tomcat.util.http.mapper.MappingData)"
        ]
    },
    "org.apache.naming.NamingContext:java.lang.Object lookupLink(javax.naming.Name)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.SelectorContext:java.lang.Object lookupLink(javax.naming.Name)"
        ]
    },
    "org.apache.naming.NamingContext:java.lang.Object lookupLink(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.SelectorContext:java.lang.Object lookupLink(java.lang.String)"
        ]
    },
    "org.apache.naming.NamingContextBindingsEnumeration:javax.naming.Binding nextElementInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.NamingContextBindingsEnumeration:javax.naming.Binding next()",
            "org.apache.naming.NamingContextBindingsEnumeration:javax.naming.Binding nextElement()"
        ]
    },
    "org.apache.naming.NamingContext:void bind(javax.naming.Name,java.lang.Object,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.NamingContext:void bind(javax.naming.Name,java.lang.Object)",
            "org.apache.naming.NamingContext:void rebind(javax.naming.Name,java.lang.Object)"
        ]
    },
    "org.apache.naming.NamingContext:void unbind(javax.naming.Name)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.NamingContext:void unbind(javax.naming.Name)",
            "org.apache.naming.NamingContext:void unbind(java.lang.String)",
            "org.apache.naming.NamingContext:void rename(javax.naming.Name,javax.naming.Name)",
            "org.apache.naming.SelectorContext:void unbind(javax.naming.Name)"
        ]
    },
    "org.apache.catalina.core.NamingContextListener:void removeEjb(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.NamingContextListener:void containerEvent(org.apache.catalina.ContainerEvent)",
            "org.apache.catalina.core.NamingContextListener:void processGlobalResourcesChange(java.lang.String,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.catalina.core.NamingContextListener:void removeEnvironment(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.NamingContextListener:void containerEvent(org.apache.catalina.ContainerEvent)",
            "org.apache.catalina.core.NamingContextListener:void processGlobalResourcesChange(java.lang.String,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.catalina.core.NamingContextListener:void removeLocalEjb(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.NamingContextListener:void containerEvent(org.apache.catalina.ContainerEvent)",
            "org.apache.catalina.core.NamingContextListener:void processGlobalResourcesChange(java.lang.String,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.catalina.core.NamingContextListener:void removeService(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.NamingContextListener:void containerEvent(org.apache.catalina.ContainerEvent)",
            "org.apache.catalina.core.NamingContextListener:void processGlobalResourcesChange(java.lang.String,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.catalina.core.NamingContextListener:void removeResource(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.NamingContextListener:void containerEvent(org.apache.catalina.ContainerEvent)",
            "org.apache.catalina.core.NamingContextListener:void processGlobalResourcesChange(java.lang.String,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.catalina.core.NamingContextListener:void removeResourceEnvRef(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.NamingContextListener:void containerEvent(org.apache.catalina.ContainerEvent)",
            "org.apache.catalina.core.NamingContextListener:void processGlobalResourcesChange(java.lang.String,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.catalina.core.NamingContextListener:void removeResourceLink(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.NamingContextListener:void containerEvent(org.apache.catalina.ContainerEvent)",
            "org.apache.catalina.core.NamingContextListener:void processGlobalResourcesChange(java.lang.String,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.naming.NamingContext:javax.naming.NamingEnumeration list(javax.naming.Name)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.NamingContext:javax.naming.NamingEnumeration list(javax.naming.Name)",
            "org.apache.naming.NamingContext:javax.naming.NamingEnumeration list(java.lang.String)",
            "org.apache.naming.SelectorContext:javax.naming.NamingEnumeration list(javax.naming.Name)"
        ]
    },
    "org.apache.naming.NamingContext:javax.naming.NamingEnumeration listBindings(javax.naming.Name)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.NamingContext:javax.naming.NamingEnumeration listBindings(javax.naming.Name)",
            "org.apache.naming.NamingContext:javax.naming.NamingEnumeration listBindings(java.lang.String)",
            "org.apache.naming.SelectorContext:javax.naming.NamingEnumeration listBindings(javax.naming.Name)"
        ]
    },
    "org.apache.naming.NamingContext:void destroySubcontext(javax.naming.Name)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.NamingContext:void destroySubcontext(javax.naming.Name)",
            "org.apache.naming.NamingContext:void destroySubcontext(java.lang.String)",
            "org.apache.naming.SelectorContext:void destroySubcontext(javax.naming.Name)"
        ]
    },
    "org.apache.naming.NamingContext:javax.naming.NameParser getNameParser(javax.naming.Name)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.NamingContext:javax.naming.NameParser getNameParser(javax.naming.Name)",
            "org.apache.naming.NamingContext:javax.naming.NameParser getNameParser(java.lang.String)",
            "org.apache.naming.SelectorContext:javax.naming.NameParser getNameParser(javax.naming.Name)"
        ]
    },
    "org.apache.tomcat.util.modeler.Registry:java.util.List load(java.lang.String,java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.modeler.Registry:java.util.List loadMBeans(java.lang.Object,java.lang.ClassLoader)",
            "org.apache.tomcat.util.modeler.Registry:void loadDescriptors(java.lang.String,java.lang.Object,java.lang.String)"
        ]
    },
    "org.apache.catalina.ssi.ExpressionParseTree$CompareNode:int compareBranches()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.ExpressionParseTree$EqualNode:boolean evaluate()",
            "org.apache.catalina.ssi.ExpressionParseTree$GreaterThanNode:boolean evaluate()",
            "org.apache.catalina.ssi.ExpressionParseTree$LessThanNode:boolean evaluate()"
        ]
    },
    "org.apache.catalina.ssi.ExpressionParseTree$StringNode:boolean evaluate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.ExpressionParseTree$AndNode:boolean evaluate()",
            "org.apache.catalina.ssi.ExpressionParseTree$NotNode:boolean evaluate()",
            "org.apache.catalina.ssi.ExpressionParseTree$OrNode:boolean evaluate()",
            "org.apache.catalina.ssi.ExpressionParseTree:boolean evaluateTree()"
        ]
    },
    "org.apache.catalina.ssi.SSIMediator:long getFileLastModified(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIFlastmod:long process(org.apache.catalina.ssi.SSIMediator,java.lang.String,java.lang.String[],java.lang.String[],java.io.PrintWriter)",
            "org.apache.catalina.ssi.SSIFsize:long process(org.apache.catalina.ssi.SSIMediator,java.lang.String,java.lang.String[],java.lang.String[],java.io.PrintWriter)",
            "org.apache.catalina.ssi.SSIInclude:long process(org.apache.catalina.ssi.SSIMediator,java.lang.String,java.lang.String[],java.lang.String[],java.io.PrintWriter)"
        ]
    },
    "org.apache.catalina.ssi.SSIMediator:long getFileSize(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIFsize:long process(org.apache.catalina.ssi.SSIMediator,java.lang.String,java.lang.String[],java.lang.String[],java.io.PrintWriter)"
        ]
    },
    "org.apache.catalina.connector.Request:void setUserPrincipal(java.security.Principal)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.AuthenticatorBase:void register(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,java.security.Principal,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:boolean reauthenticate(java.lang.String,org.apache.catalina.Realm,org.apache.catalina.connector.Request)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean postParseRequest(org.apache.coyote.Request,org.apache.catalina.connector.Request,org.apache.coyote.Response,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.connector.RequestFacade$GetSessionPrivilegedAction:javax.servlet.http.HttpSession run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade$GetSessionPrivilegedAction:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:javax.servlet.http.HttpSession getSession(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:javax.servlet.http.HttpSession getSession()",
            "org.apache.catalina.filters.CsrfPreventionFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.security.SecurityUtil:void execute(java.lang.reflect.Method,java.lang.Object,java.lang.Object[],java.security.Principal)",
            "org.apache.catalina.servlets.CGIServlet:void printServletEnvironment(javax.servlet.ServletOutputStream,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.valves.AccessLogValve$SessionIdElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.valves.AccessLogValve:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)"
        ]
    },
    "org.apache.catalina.connector.Response:java.lang.String encodeRedirectURL(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.FormAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.connector.Response:java.lang.String encodeRedirectUrl(java.lang.String)",
            "org.apache.catalina.connector.ResponseFacade:java.lang.String encodeRedirectURL(java.lang.String)",
            "org.apache.catalina.connector.ResponseFacade:java.lang.String encodeRedirectUrl(java.lang.String)"
        ]
    },
    "org.apache.catalina.connector.Response:java.lang.String encodeURL(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Response:java.lang.String encodeUrl(java.lang.String)",
            "org.apache.catalina.connector.ResponseFacade:java.lang.String encodeURL(java.lang.String)",
            "org.apache.catalina.connector.ResponseFacade:java.lang.String encodeUrl(java.lang.String)",
            "org.apache.catalina.manager.host.HTMLHostManagerServlet:void list(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.HTMLManagerServlet:void list(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.HTMLManagerServlet:void displaySessionDetailPage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.catalina.util.ContextName,java.lang.String,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.StatusManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.authenticator.FormAuthenticator:boolean matchRequest(org.apache.catalina.connector.Request)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.FormAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)"
        ]
    },
    "org.apache.catalina.connector.Response:boolean isEncodeable(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Response:java.lang.String encodeRedirectURL(java.lang.String)",
            "org.apache.catalina.connector.Response:java.lang.String encodeURL(java.lang.String)"
        ]
    },
    "org.apache.catalina.security.SecurityUtil:void doAsPrivilege(java.lang.String,javax.servlet.Servlet,java.lang.Class[],java.lang.Object[],java.security.Principal)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)",
            "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilterEvent(org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.security.SecurityUtil:void doAsPrivilege(java.lang.String,javax.servlet.Servlet)",
            "org.apache.catalina.security.SecurityUtil:void doAsPrivilege(java.lang.String,javax.servlet.Servlet,java.lang.Class[],java.lang.Object[])"
        ]
    },
    "org.apache.catalina.security.SecurityUtil:void doAsPrivilege(java.lang.String,javax.servlet.Filter,java.lang.Class[],java.lang.Object[],java.security.Principal)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)",
            "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilterEvent(org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.security.SecurityUtil:void doAsPrivilege(java.lang.String,javax.servlet.Filter,java.lang.Class[],java.lang.Object[])"
        ]
    },
    "org.apache.catalina.session.PersistentManagerBase$PrivilegedStoreSave:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase:void writeSession(org.apache.catalina.Session)"
        ]
    },
    "org.apache.catalina.manager.HTMLManagerServlet:org.apache.catalina.Session getSessionForNameAndId(org.apache.catalina.util.ContextName,java.lang.String,org.apache.tomcat.util.res.StringManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.HTMLManagerServlet:void displaySessionDetailPage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.catalina.util.ContextName,java.lang.String,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.HTMLManagerServlet:int invalidateSessions(org.apache.catalina.util.ContextName,java.lang.String[],org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.HTMLManagerServlet:boolean removeSessionAttribute(org.apache.catalina.util.ContextName,java.lang.String,java.lang.String,org.apache.tomcat.util.res.StringManager)"
        ]
    },
    "org.apache.catalina.authenticator.AuthenticatorBase:void logout(org.apache.catalina.connector.Request)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Request:void logout()"
        ]
    },
    "org.apache.catalina.session.StandardSession:void fireSessionEvent(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.StandardSession:void tellNew()",
            "org.apache.catalina.session.StandardSession:void expire(boolean)",
            "org.apache.catalina.session.StandardSession:void passivate()",
            "org.apache.catalina.session.StandardSession:void activate()"
        ]
    },
    "org.apache.catalina.session.StandardManager$PrivilegedDoLoad:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.StandardManager:void load()"
        ]
    },
    "org.apache.catalina.connector.CoyoteOutputStream:void write(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.filters.ExpiresFilter$XServletOutputStream:void write(byte[])",
            "org.apache.catalina.ssi.SSIFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.coyote.ajp.AjpProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.coyote.ajp.AjpProcessor:void finish()",
            "org.apache.coyote.ajp.AjpProcessor:boolean refillReadBuffer()",
            "org.apache.coyote.ajp.AjpProcessor:void flush(boolean)",
            "org.apache.coyote.http11.InternalOutputBuffer:void sendAck()",
            "org.apache.tomcat.util.http.fileupload.disk.DiskFileItem:void readObject(java.io.ObjectInputStream)",
            "org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream:void write(byte[])"
        ]
    },
    "org.apache.catalina.filters.ExpiresFilter$XServletOutputStream:void write(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.filters.ExpiresFilter$XServletOutputStream:void write(byte[],int,int)",
            "org.apache.catalina.loader.WebappLoader:boolean copy(java.io.InputStream,java.io.OutputStream)",
            "org.apache.catalina.servlets.CGIServlet$CGIRunner:void run()",
            "org.apache.catalina.servlets.DefaultServlet:void copy(org.apache.naming.resources.CacheEntry,java.io.InputStream,javax.servlet.ServletOutputStream)",
            "org.apache.catalina.servlets.DefaultServlet:java.io.IOException copyRange(java.io.InputStream,javax.servlet.ServletOutputStream)",
            "org.apache.catalina.servlets.DefaultServlet:java.io.IOException copyRange(java.io.InputStream,javax.servlet.ServletOutputStream,long,long)",
            "org.apache.catalina.util.IOTools:void flow(java.io.InputStream,java.io.OutputStream,byte[])",
            "org.apache.coyote.ajp.AjpProcessor$SocketOutputBuffer:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)",
            "org.apache.coyote.ajp.AjpProcessor:void output(byte[],int,int)",
            "org.apache.coyote.http11.filters.FlushableGZIPOutputStream:void deflate()",
            "org.apache.coyote.http11.InternalOutputBuffer$OutputStreamOutputBuffer:int doWrite(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Response)",
            "org.apache.coyote.http11.InternalOutputBuffer:void commit()",
            "org.apache.coyote.http11.InternalOutputBuffer:void realWriteBytes(byte[],int,int)",
            "org.apache.tomcat.util.http.fileupload.util.Streams:long copy(java.io.InputStream,java.io.OutputStream,boolean,byte[])",
            "org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream:void writeTo(java.io.OutputStream)",
            "org.apache.tomcat.util.http.fileupload.IOUtils:long copyLarge(java.io.InputStream,java.io.OutputStream)",
            "org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream:void write(byte[],int,int)"
        ]
    },
    "org.apache.catalina.servlets.DefaultServlet:void copy(org.apache.naming.resources.CacheEntry,java.io.InputStream,javax.servlet.ServletOutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.DefaultServlet:void serveResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,boolean)"
        ]
    },
    "org.apache.catalina.servlets.DefaultServlet:java.io.IOException copyRange(java.io.InputStream,javax.servlet.ServletOutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.DefaultServlet:void copy(org.apache.naming.resources.CacheEntry,java.io.InputStream,javax.servlet.ServletOutputStream)"
        ]
    },
    "org.apache.catalina.servlets.DefaultServlet:java.io.IOException copyRange(java.io.InputStream,javax.servlet.ServletOutputStream,long,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.DefaultServlet:void copy(org.apache.naming.resources.CacheEntry,javax.servlet.ServletOutputStream,org.apache.catalina.servlets.DefaultServlet$Range)",
            "org.apache.catalina.servlets.DefaultServlet:void copy(org.apache.naming.resources.CacheEntry,javax.servlet.ServletOutputStream,java.util.Iterator,java.lang.String)"
        ]
    },
    "org.apache.catalina.realm.JNDIRealm:java.security.Principal authenticate(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:java.security.Principal doLogin(org.apache.catalina.connector.Request,java.lang.String,java.lang.String)",
            "org.apache.catalina.authenticator.BasicAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.authenticator.FormAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.authenticator.SingleSignOn:boolean reauthenticate(java.lang.String,org.apache.catalina.Realm,org.apache.catalina.connector.Request)",
            "org.apache.catalina.realm.CombinedRealm:java.security.Principal authenticate(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.tomcat.util.http.Parameters:java.lang.String[] getParameterValues(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Request:java.lang.String[] getParameterValues(java.lang.String)",
            "org.apache.tomcat.util.http.Parameters:java.lang.String getParameter(java.lang.String)"
        ]
    },
    "org.apache.tomcat.util.http.Parameters:java.util.Enumeration getParameterNames()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Request:java.util.Enumeration getParameterNames()"
        ]
    },
    "org.apache.catalina.filters.ExpiresFilter$XServletOutputStream:void write(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.filters.ExpiresFilter$XServletOutputStream:void write(int)",
            "org.apache.catalina.startup.Catalina:void stopServer(java.lang.String[])",
            "org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream:void write(int)"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl:void <init>(org.apache.tomcat.util.http.fileupload.FileUploadBase,org.apache.tomcat.util.http.fileupload.RequestContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.FileUploadBase:org.apache.tomcat.util.http.fileupload.FileItemIterator getItemIterator(org.apache.tomcat.util.http.fileupload.RequestContext)"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl:org.apache.tomcat.util.http.fileupload.FileItemStream next()",
            "org.apache.tomcat.util.http.fileupload.FileUploadBase:java.util.List parseRequest(org.apache.tomcat.util.http.fileupload.RequestContext)"
        ]
    },
    "org.apache.coyote.ajp.AbstractAjpProcessor$SocketInputBuffer:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.filters.BufferedInputFilter:void setRequest(org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int readBytes()",
            "org.apache.coyote.http11.filters.IdentityInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.IdentityInputFilter:long end()",
            "org.apache.coyote.http11.AbstractInputBuffer:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.InternalAprInputBuffer:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.Request:int doRead(org.apache.tomcat.util.buf.ByteChunk)"
        ]
    },
    "org.apache.catalina.connector.CoyoteReader:java.lang.String readLine()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:java.lang.String getDeploymentDescriptor()",
            "org.apache.catalina.servlets.CGIServlet$CGIRunner:void run()",
            "org.apache.catalina.servlets.CGIServlet$CGIRunner:void sendToLog(java.io.BufferedReader)",
            "org.apache.catalina.startup.ContextConfig:javax.servlet.ServletContainerInitializer getServletContainerInitializer(java.io.InputStream)"
        ]
    },
    "org.apache.catalina.servlets.DefaultServlet:void copy(org.apache.naming.resources.CacheEntry,java.io.PrintWriter,org.apache.catalina.servlets.DefaultServlet$Range)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.DefaultServlet:void serveResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,boolean)"
        ]
    },
    "org.apache.catalina.servlets.DefaultServlet:void copy(org.apache.naming.resources.CacheEntry,java.io.PrintWriter,java.util.Iterator,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.DefaultServlet:void serveResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,boolean)"
        ]
    },
    "org.apache.catalina.connector.CoyoteReader:int read()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteReader:java.lang.String readLine()",
            "org.apache.catalina.startup.PasswdUserDatabase:void init()"
        ]
    },
    "org.apache.catalina.connector.CoyoteReader:int read(char[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.DefaultServlet:java.io.IOException copyRange(java.io.Reader,java.io.PrintWriter)",
            "org.apache.catalina.servlets.DefaultServlet:java.io.IOException copyRange(java.io.Reader,java.io.PrintWriter,long,long)",
            "org.apache.catalina.util.IOTools:void flow(java.io.Reader,java.io.Writer,char[])"
        ]
    },
    "org.apache.catalina.connector.CoyoteReader:int read(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteReader:java.lang.String readLine()"
        ]
    },
    "org.apache.catalina.connector.InputBuffer:int read(char[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.DefaultServlet:java.io.IOException copyRange(java.io.Reader,java.io.PrintWriter)",
            "org.apache.catalina.servlets.DefaultServlet:java.io.IOException copyRange(java.io.Reader,java.io.PrintWriter,long,long)",
            "org.apache.catalina.util.IOTools:void flow(java.io.Reader,java.io.Writer,char[])"
        ]
    },
    "org.apache.catalina.connector.CoyoteInputStream$1:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteInputStream:int read()"
        ]
    },
    "org.apache.catalina.startup.Catalina:void await()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Catalina:void start()"
        ]
    },
    "org.apache.catalina.connector.CoyoteInputStream$3:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteInputStream:int read(byte[])"
        ]
    },
    "org.apache.catalina.connector.CoyoteInputStream$4:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteInputStream:int read(byte[],int,int)"
        ]
    },
    "org.apache.catalina.manager.ManagerServlet:void uploadWar(javax.servlet.http.HttpServletRequest,java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.ManagerServlet:void deploy(java.io.PrintWriter,org.apache.catalina.util.ContextName,java.lang.String,boolean,javax.servlet.http.HttpServletRequest,org.apache.tomcat.util.res.StringManager)"
        ]
    },
    "org.apache.catalina.startup.ExpandWar:void expand(java.io.InputStream,java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ExpandWar:java.lang.String expand(org.apache.catalina.Host,java.net.URL,java.lang.String)"
        ]
    },
    "org.apache.naming.resources.FileDirContext:void rebind(java.lang.String,java.lang.Object,javax.naming.directory.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.resources.BaseDirContext:void rebind(java.lang.String,java.lang.Object)",
            "org.apache.naming.resources.BaseDirContext:void rebind(javax.naming.Name,java.lang.Object,javax.naming.directory.Attributes)",
            "org.apache.naming.resources.FileDirContext:void bind(java.lang.String,java.lang.Object,javax.naming.directory.Attributes)",
            "org.apache.naming.resources.ProxyDirContext:void rebind(java.lang.String,java.lang.Object,javax.naming.directory.Attributes)"
        ]
    },
    "org.apache.tomcat.util.net.jsse.JSSESupport:void handShake()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.net.jsse.JSSESupport:java.lang.Object[] getPeerCertificateChain(boolean)"
        ]
    },
    "org.apache.coyote.ajp.AjpProcessor:boolean readMessage(org.apache.coyote.ajp.AjpMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.ajp.AjpProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.coyote.ajp.AjpProcessor:boolean receive()"
        ]
    },
    "org.apache.coyote.http11.InternalInputBuffer:boolean fill()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.InternalInputBuffer$InputStreamInputBuffer:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.InternalInputBuffer:boolean parseRequestLine(boolean)",
            "org.apache.coyote.http11.InternalInputBuffer:boolean parseHeader()"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream:int read()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardServer:void await()",
            "org.apache.catalina.servlets.CGIServlet$HTTPHeaderInputStream:int read()"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream:int read(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Request:int readPostBody(byte[],int)",
            "org.apache.catalina.connector.Request:byte[] readChunkedPostBody()",
            "org.apache.catalina.loader.WebappClassLoader:void clearReferencesJdbc()",
            "org.apache.catalina.loader.WebappClassLoader:org.apache.catalina.loader.ResourceEntry findResourceInternal(java.lang.String,java.lang.String)",
            "org.apache.coyote.ajp.AjpProcessor:boolean read(byte[],int,int)",
            "org.apache.coyote.http11.InternalInputBuffer:boolean fill(boolean)",
            "org.apache.naming.resources.ProxyDirContext:void cacheLoad(org.apache.naming.resources.CacheEntry)",
            "org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream:int write(java.io.InputStream)",
            "org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream:int makeAvailable()",
            "org.apache.tomcat.util.http.fileupload.MultipartStream:byte readByte()"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream:void close(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl$1:void raiseError(long,long)",
            "org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream:void close()"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream:long skip(long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.DefaultServlet:java.io.IOException copyRange(java.io.InputStream,javax.servlet.ServletOutputStream,long,long)",
            "org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream:void close(boolean)"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.MultipartStream:boolean readBoundary()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl:boolean findNextItem()",
            "org.apache.tomcat.util.http.fileupload.MultipartStream:boolean skipPreamble()"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.MultipartStream:java.lang.String readHeaders()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl:boolean findNextItem()"
        ]
    },
    "org.apache.catalina.core.StandardContext$2:java.lang.Boolean call()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext$2:java.lang.Object call()"
        ]
    },
    "org.apache.catalina.startup.ContextConfig:org.xml.sax.InputSource getGlobalWebXmlSource()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void webConfig()"
        ]
    },
    "org.apache.catalina.startup.ContextConfig:org.xml.sax.InputSource getHostWebXmlSource()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void webConfig()"
        ]
    },
    "org.apache.catalina.mbeans.MBeanUtils:org.apache.tomcat.util.modeler.Registry createRegistry()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.GlobalResourcesLifecycleListener:void <clinit>()",
            "org.apache.catalina.mbeans.GroupMBean:void <init>()",
            "org.apache.catalina.mbeans.MBeanUtils:void <clinit>()",
            "org.apache.catalina.mbeans.MemoryUserDatabaseMBean:void <init>()",
            "org.apache.catalina.mbeans.NamingResourcesMBean:void <init>()",
            "org.apache.catalina.mbeans.RoleMBean:void <init>()",
            "org.apache.catalina.mbeans.UserMBean:void <init>()"
        ]
    },
    "org.apache.tomcat.util.modeler.Registry:void findDescriptor(java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.modeler.Registry:org.apache.tomcat.util.modeler.ManagedBean findManagedBean(java.lang.Object,java.lang.Class,java.lang.String)"
        ]
    },
    "org.apache.catalina.core.ApplicationFilterConfig:org.apache.tomcat.InstanceManager getInstanceManager()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterConfig:void <init>(org.apache.catalina.Context,org.apache.catalina.deploy.FilterDef)",
            "org.apache.catalina.core.ApplicationFilterConfig:javax.servlet.Filter getFilter()"
        ]
    },
    "org.apache.catalina.core.AsyncContextImpl:org.apache.tomcat.InstanceManager getInstanceManager()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.AsyncContextImpl:javax.servlet.AsyncListener createListener(java.lang.Class)"
        ]
    },
    "org.apache.catalina.loader.WebappClassLoader:java.lang.Class loadClass(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.DefaultInstanceManager:java.lang.Object newInstance(java.lang.String,java.lang.ClassLoader)",
            "org.apache.catalina.core.DefaultInstanceManager:java.lang.Class loadClass(java.lang.String,java.lang.ClassLoader)",
            "org.apache.catalina.core.StandardWrapper:void servletSecurityAnnotationScan()",
            "org.apache.catalina.core.StandardWrapper:boolean isContainerProvidedServlet(java.lang.String)",
            "org.apache.catalina.loader.WebappClassLoader:java.lang.Class loadClass(java.lang.String,boolean)",
            "org.apache.catalina.loader.WebappClassLoader:boolean validateJarFile(java.io.File)",
            "org.apache.catalina.security.SecurityClassLoad:void loadCorePackage(java.lang.ClassLoader)",
            "org.apache.catalina.security.SecurityClassLoad:void loadLoaderPackage(java.lang.ClassLoader)",
            "org.apache.catalina.security.SecurityClassLoad:void loadRealmPackage(java.lang.ClassLoader)",
            "org.apache.catalina.security.SecurityClassLoad:void loadSessionPackage(java.lang.ClassLoader)",
            "org.apache.catalina.security.SecurityClassLoad:void loadUtilPackage(java.lang.ClassLoader)",
            "org.apache.catalina.security.SecurityClassLoad:void loadCoyotePackage(java.lang.ClassLoader)",
            "org.apache.catalina.security.SecurityClassLoad:void loadJavaxPackage(java.lang.ClassLoader)",
            "org.apache.catalina.security.SecurityClassLoad:void loadConnectorPackage(java.lang.ClassLoader)",
            "org.apache.catalina.security.SecurityClassLoad:void loadTomcatPackage(java.lang.ClassLoader)",
            "org.apache.catalina.startup.Bootstrap:void init()",
            "org.apache.catalina.startup.ContextConfig:void checkHandlesTypes(org.apache.tomcat.util.bcel.classfile.JavaClass)",
            "org.apache.catalina.startup.Tool:void main(java.lang.String[])",
            "org.apache.catalina.startup.WebAnnotationSet:void loadApplicationServletAnnotations(org.apache.catalina.Context)",
            "org.apache.catalina.startup.WebAnnotationSet:void loadClassAnnotation(org.apache.catalina.Context,java.lang.String)",
            "org.apache.catalina.util.CustomObjectInputStream:java.lang.Class resolveProxyClass(java.lang.String[])",
            "org.apache.naming.factory.BeanFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.EjbFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.ResourceEnvFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.ResourceFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.TransactionFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.tomcat.util.digester.CallMethodRule:void setDigester(org.apache.tomcat.util.digester.Digester)",
            "org.apache.tomcat.util.digester.FactoryCreateRule:org.apache.tomcat.util.digester.ObjectCreationFactory getFactory(org.xml.sax.Attributes)",
            "org.apache.tomcat.util.digester.ObjectCreateRule:void begin(java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.tomcat.util.modeler.BaseModelMBean:java.lang.Class getAttributeClass(java.lang.String)",
            "org.apache.tomcat.util.modeler.ManagedBean:javax.management.DynamicMBean createMBean(java.lang.Object)",
            "org.apache.tomcat.util.net.jsse.JSSESocketFactory:javax.net.ssl.TrustManager[] getTrustManagers(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.tomcat.util.IntrospectionUtils:java.lang.Object callMethod1(java.lang.Object,java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassLoader)"
        ]
    },
    "org.apache.catalina.manager.util.BaseSessionComparator:int compare(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.util.ReverseComparator:int compare(org.apache.catalina.Session,org.apache.catalina.Session)"
        ]
    },
    "org.apache.catalina.core.StandardThreadExecutor:void initInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void init()"
        ]
    },
    "org.apache.catalina.deploy.NamingResources:void initInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void init()"
        ]
    },
    "org.apache.catalina.realm.RealmBase:void initInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void init()"
        ]
    },
    "org.apache.catalina.session.ManagerBase:void initInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void init()"
        ]
    },
    "org.apache.catalina.valves.ValveBase:void initInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void init()",
            "org.apache.catalina.valves.CrawlerSessionManagerValve:void initInternal()"
        ]
    },
    "org.apache.catalina.core.ApplicationContext:void clearAttributes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:void stopInternal()"
        ]
    },
    "org.apache.catalina.core.ApplicationContextFacade:void removeAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.loader.WebappLoader:void stopInternal()"
        ]
    },
    "org.apache.catalina.core.ApplicationContextFacade:void setAttribute(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:void startInternal()",
            "org.apache.catalina.loader.WebappLoader:void setClassPath()",
            "org.apache.catalina.startup.ContextConfig:void webConfig()"
        ]
    },
    "org.apache.catalina.core.StandardContext:void setAltDDName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardContext:javax.servlet.ServletContext getServletContext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.FormAuthenticator:void forwardToLoginPage(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.authenticator.FormAuthenticator:void forwardToErrorPage(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.connector.CoyoteAdapter:void parseSessionCookiesId(org.apache.coyote.Request,org.apache.catalina.connector.Request)",
            "org.apache.catalina.connector.Request:java.lang.String getRealPath(java.lang.String)",
            "org.apache.catalina.connector.Request:javax.servlet.RequestDispatcher getRequestDispatcher(java.lang.String)",
            "org.apache.catalina.connector.Request:void removeAttribute(java.lang.String)",
            "org.apache.catalina.connector.Request:void setAttribute(java.lang.String,java.lang.Object)",
            "org.apache.catalina.connector.Request:javax.servlet.ServletContext getServletContext()",
            "org.apache.catalina.connector.Request:java.lang.String getPathTranslated()",
            "org.apache.catalina.connector.Request:void changeSessionId(java.lang.String)",
            "org.apache.catalina.connector.Request:void parseParts()",
            "org.apache.catalina.connector.Request:org.apache.catalina.Session doGetSession(boolean)",
            "org.apache.catalina.core.ApplicationContext:javax.servlet.ServletContext getContext(java.lang.String)",
            "org.apache.catalina.core.ApplicationContext:void removeAttribute(java.lang.String)",
            "org.apache.catalina.core.ApplicationContext:void setAttribute(java.lang.String,java.lang.Object)",
            "org.apache.catalina.core.ApplicationFilterConfig:javax.servlet.ServletContext getServletContext()",
            "org.apache.catalina.core.ApplicationHttpRequest:javax.servlet.RequestDispatcher getRequestDispatcher(java.lang.String)",
            "org.apache.catalina.core.ApplicationSessionCookieConfig:javax.servlet.http.Cookie createSessionCookie(org.apache.catalina.Context,java.lang.String,boolean)",
            "org.apache.catalina.core.ApplicationSessionCookieConfig:java.lang.String getConfiguredSessionCookieName(org.apache.catalina.Context)",
            "org.apache.catalina.core.NamingContextListener:void addService(org.apache.catalina.deploy.ContextService)",
            "org.apache.catalina.core.StandardContext:boolean listenerStart()",
            "org.apache.catalina.core.StandardContext:boolean listenerStop()",
            "org.apache.catalina.core.StandardContext:void startInternal()",
            "org.apache.catalina.core.StandardContext:void mergeParameters()",
            "org.apache.catalina.core.StandardContext:boolean fireRequestInitEvent(javax.servlet.ServletRequest)",
            "org.apache.catalina.core.StandardContext:boolean fireRequestDestroyEvent(javax.servlet.ServletRequest)",
            "org.apache.catalina.core.StandardContext:void postWorkDirectory()",
            "org.apache.catalina.core.StandardContext:java.lang.String getDeploymentDescriptor()",
            "org.apache.catalina.core.StandardHost$MemoryLeakTrackingListener:void lifecycleEvent(org.apache.catalina.LifecycleEvent)",
            "org.apache.catalina.core.StandardHostValve:boolean custom(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.deploy.ErrorPage)",
            "org.apache.catalina.core.StandardWrapper:javax.servlet.ServletContext getServletContext()",
            "org.apache.catalina.deploy.WebXml:void configureContext(org.apache.catalina.Context)",
            "org.apache.catalina.loader.WebappLoader:void stopInternal()",
            "org.apache.catalina.loader.WebappLoader:void setPermissions()",
            "org.apache.catalina.loader.WebappLoader:void setRepositories()",
            "org.apache.catalina.loader.WebappLoader:void setClassPath()",
            "org.apache.catalina.session.FileStore:java.io.File directory()",
            "org.apache.catalina.session.StandardManager:java.io.File file()",
            "org.apache.catalina.session.StandardSession:javax.servlet.ServletContext getServletContext()",
            "org.apache.catalina.startup.ContextConfig:void webConfig()",
            "org.apache.catalina.startup.ContextConfig:org.xml.sax.InputSource getContextWebXmlSource()",
            "org.apache.catalina.startup.ContextConfig:java.util.Map processJarsForWebFragments()",
            "org.apache.catalina.startup.TldConfig:void execute()",
            "org.apache.catalina.startup.TldConfig:void tldScanWebXml()",
            "org.apache.catalina.startup.TldConfig:void tldScanResourcePaths(java.lang.String)",
            "org.apache.catalina.valves.ExtendedAccessLogValve$ServletContextElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)"
        ]
    },
    "org.apache.catalina.core.StandardContext:void postWorkDirectory()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:void setWorkDir(java.lang.String)",
            "org.apache.catalina.core.StandardContext:void startInternal()"
        ]
    },
    "org.apache.catalina.loader.WebappLoader:void setClassPath()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.loader.WebappLoader:void addRepository(java.lang.String)",
            "org.apache.catalina.loader.WebappLoader:void startInternal()"
        ]
    },
    "org.apache.catalina.startup.TldConfig:void execute()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.TldConfig:void lifecycleEvent(org.apache.catalina.LifecycleEvent)"
        ]
    },
    "org.apache.catalina.core.ApplicationContext:javax.servlet.FilterRegistration$Dynamic addFilter(java.lang.String,java.lang.String,javax.servlet.Filter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationContext:javax.servlet.FilterRegistration$Dynamic addFilter(java.lang.String,java.lang.String)",
            "org.apache.catalina.core.ApplicationContext:javax.servlet.FilterRegistration$Dynamic addFilter(java.lang.String,javax.servlet.Filter)",
            "org.apache.catalina.core.ApplicationContext:javax.servlet.FilterRegistration$Dynamic addFilter(java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.catalina.core.ApplicationFilterRegistration:void addMappingForServletNames(java.util.EnumSet,boolean,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.ApplicationFilterRegistration:void addMappingForUrlPatterns(java.util.EnumSet,boolean,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.ApplicationContext:void declareRoles(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationContextFacade:void declareRoles(java.lang.String[])"
        ]
    },
    "org.apache.catalina.startup.ContextConfig:void validateSecurityRoles()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void configureStart()"
        ]
    },
    "org.apache.catalina.core.StandardContext:void addServletMapping(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationServletRegistration:java.util.Set addMapping(java.lang.String[])",
            "org.apache.catalina.core.StandardContext:void addChild(org.apache.catalina.Container)",
            "org.apache.catalina.deploy.WebXml:void configureContext(org.apache.catalina.Context)",
            "org.apache.catalina.startup.Tomcat:void initWebappDefaults(org.apache.catalina.Context)"
        ]
    },
    "org.apache.catalina.startup.ContextConfig:void processContextConfig(java.net.URL)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void contextConfig()"
        ]
    },
    "org.apache.catalina.core.StandardContext:java.util.Set addServletSecurity(org.apache.catalina.core.ApplicationServletRegistration,javax.servlet.ServletSecurityElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationServletRegistration:java.util.Set setServletSecurity(javax.servlet.ServletSecurityElement)",
            "org.apache.catalina.core.StandardWrapper:void processServletSecurityAnnotation(java.lang.Class)"
        ]
    },
    "org.apache.catalina.core.StandardContext$1:java.lang.Boolean call()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext$1:java.lang.Object call()"
        ]
    },
    "org.apache.catalina.core.ApplicationServletRegistration:boolean setInitParameter(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationServletRegistration:java.util.Set setInitParameters(java.util.Map)"
        ]
    },
    "org.apache.catalina.session.StandardSession:void tellNew()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase:org.apache.catalina.Session swapIn(java.lang.String)",
            "org.apache.catalina.session.StandardSession:void setId(java.lang.String)"
        ]
    },
    "org.apache.catalina.session.StandardSession:void setAttribute(java.lang.String,java.lang.Object,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.StandardSession:void setAttribute(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.catalina.session.StandardSession:void removeAttributeInternal(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.StandardSession:void expire(boolean)",
            "org.apache.catalina.session.StandardSession:void removeAttribute(java.lang.String,boolean)",
            "org.apache.catalina.session.StandardSession:void writeObject(java.io.ObjectOutputStream)"
        ]
    },
    "org.apache.catalina.loader.WebappClassLoader:void stop()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ContainerBase:void setLoader(org.apache.catalina.Loader)",
            "org.apache.catalina.core.ContainerBase:void setManager(org.apache.catalina.Manager)",
            "org.apache.catalina.core.ContainerBase:void setCluster(org.apache.catalina.Cluster)",
            "org.apache.catalina.core.ContainerBase:void setRealm(org.apache.catalina.Realm)",
            "org.apache.catalina.core.ContainerBase:void stopInternal()",
            "org.apache.catalina.core.StandardContext$4:java.lang.Void call()",
            "org.apache.catalina.core.StandardContext:boolean resourcesStop()",
            "org.apache.catalina.core.StandardContext:void stopInternal()",
            "org.apache.catalina.core.StandardPipeline:void stopInternal()",
            "org.apache.catalina.core.StandardPipeline:void setBasic(org.apache.catalina.Valve)",
            "org.apache.catalina.core.StandardPipeline:void removeValve(org.apache.catalina.Valve)",
            "org.apache.catalina.loader.WebappLoader:void stopInternal()",
            "org.apache.catalina.realm.CombinedRealm:void stopInternal()",
            "org.apache.catalina.session.PersistentManagerBase:void stopInternal()"
        ]
    },
    "org.apache.catalina.realm.JNDIRealm:org.apache.catalina.realm.JNDIRealm$User getUser(javax.naming.directory.DirContext,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.realm.JNDIRealm:java.security.Principal getPrincipal(javax.naming.directory.DirContext,java.lang.String)"
        ]
    },
    "org.apache.catalina.realm.JNDIRealm:org.apache.catalina.realm.JNDIRealm$User getUser(javax.naming.directory.DirContext,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.realm.JNDIRealm:java.security.Principal authenticate(javax.naming.directory.DirContext,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.realm.JNDIRealm:java.security.Principal getPrincipal(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.realm.RealmBase:java.security.Principal authenticate(java.lang.String,java.lang.String)",
            "org.apache.catalina.realm.RealmBase:java.security.Principal authenticate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.catalina.realm.RealmBase:java.security.Principal getPrincipal(java.security.cert.X509Certificate)"
        ]
    },
    "org.apache.catalina.startup.ContextConfig:java.util.Map processJarsForWebFragments()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void webConfig()"
        ]
    },
    "org.apache.catalina.core.DefaultInstanceManager:java.lang.Object newInstance(java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.DefaultInstanceManager:java.lang.Object newInstance(java.lang.String)",
            "org.apache.catalina.core.DefaultInstanceManager:java.lang.Object newInstance(java.lang.String,java.lang.ClassLoader)",
            "org.apache.catalina.core.DefaultInstanceManager:void newInstance(java.lang.Object)"
        ]
    },
    "org.apache.catalina.mbeans.GlobalResourcesLifecycleListener:void lifecycleEvent(org.apache.catalina.LifecycleEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleSupport:void fireLifecycleEvent(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.catalina.authenticator.SingleSignOn:boolean reauthenticate(java.lang.String,org.apache.catalina.Realm,org.apache.catalina.connector.Request)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:boolean reauthenticateFromSSO(java.lang.String,org.apache.catalina.connector.Request)"
        ]
    },
    "org.apache.catalina.realm.CombinedRealm:java.security.Principal authenticate(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:java.security.Principal doLogin(org.apache.catalina.connector.Request,java.lang.String,java.lang.String)",
            "org.apache.catalina.authenticator.BasicAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.authenticator.FormAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.authenticator.SingleSignOn:boolean reauthenticate(java.lang.String,org.apache.catalina.Realm,org.apache.catalina.connector.Request)",
            "org.apache.catalina.realm.CombinedRealm:java.security.Principal authenticate(java.lang.String,java.lang.String)",
            "org.apache.catalina.realm.LockOutRealm:java.security.Principal authenticate(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.realm.RealmBase:java.security.Principal authenticate(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:java.security.Principal doLogin(org.apache.catalina.connector.Request,java.lang.String,java.lang.String)",
            "org.apache.catalina.authenticator.BasicAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.authenticator.FormAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.authenticator.SingleSignOn:boolean reauthenticate(java.lang.String,org.apache.catalina.Realm,org.apache.catalina.connector.Request)",
            "org.apache.catalina.realm.CombinedRealm:java.security.Principal authenticate(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.realm.RealmBase:java.lang.String getDigest(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.realm.RealmBase:java.security.Principal authenticate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.realm.RealmBase:java.security.Principal authenticate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.DigestAuthenticator:java.security.Principal findPrincipal(org.apache.catalina.connector.Request,java.lang.String,org.apache.catalina.Realm)",
            "org.apache.catalina.realm.CombinedRealm:java.security.Principal authenticate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.catalina.realm.JAASMemoryLoginModule:boolean login()"
        ]
    },
    "org.apache.catalina.realm.RealmBase:java.security.Principal getPrincipal(java.security.cert.X509Certificate)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.realm.RealmBase:java.security.Principal authenticate(java.security.cert.X509Certificate[])"
        ]
    },
    "org.apache.naming.resources.BaseDirContext:java.lang.Object lookupLink(javax.naming.Name)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.resources.ProxyDirContext:java.lang.Object lookupLink(javax.naming.Name)",
            "org.apache.naming.SelectorContext:java.lang.Object lookupLink(javax.naming.Name)"
        ]
    },
    "org.apache.naming.resources.ProxyDirContext:java.lang.Object lookupLink(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.resources.ProxyDirContext:java.lang.Object lookupLink(java.lang.String)",
            "org.apache.naming.SelectorContext:java.lang.Object lookupLink(java.lang.String)"
        ]
    },
    "org.apache.naming.resources.BaseDirContext:javax.naming.Context createSubcontext(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.NamingContextListener:void createNamingContext()",
            "org.apache.catalina.core.NamingContextListener:void createSubcontexts(javax.naming.Context,java.lang.String)",
            "org.apache.catalina.servlets.WebdavServlet:boolean copyResource(javax.naming.directory.DirContext,java.util.Hashtable,java.lang.String,java.lang.String)",
            "org.apache.naming.resources.BaseDirContext:javax.naming.Context createSubcontext(javax.naming.Name)",
            "org.apache.naming.resources.ProxyDirContext:javax.naming.Context createSubcontext(java.lang.String)",
            "org.apache.naming.SelectorContext:javax.naming.Context createSubcontext(java.lang.String)"
        ]
    },
    "org.apache.naming.resources.BaseDirContext:javax.naming.directory.DirContext createSubcontext(javax.naming.Name,javax.naming.directory.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.resources.ProxyDirContext:javax.naming.directory.DirContext createSubcontext(javax.naming.Name,javax.naming.directory.Attributes)"
        ]
    },
    "org.apache.naming.resources.ProxyDirContext:javax.naming.directory.DirContext createSubcontext(java.lang.String,javax.naming.directory.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.resources.ProxyDirContext:javax.naming.directory.DirContext createSubcontext(java.lang.String,javax.naming.directory.Attributes)"
        ]
    },
    "org.apache.naming.resources.DirContextURLConnection:java.lang.Object getContent(java.lang.Class[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.ApplicationContext:javax.servlet.RequestDispatcher getRequestDispatcher(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.FormAuthenticator:void forwardToLoginPage(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.authenticator.FormAuthenticator:void forwardToErrorPage(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.connector.Request:javax.servlet.RequestDispatcher getRequestDispatcher(java.lang.String)",
            "org.apache.catalina.core.ApplicationContextFacade:javax.servlet.RequestDispatcher getRequestDispatcher(java.lang.String)",
            "org.apache.catalina.core.ApplicationHttpRequest:javax.servlet.RequestDispatcher getRequestDispatcher(java.lang.String)",
            "org.apache.catalina.core.AsyncContextImpl:void dispatch(javax.servlet.ServletContext,java.lang.String)",
            "org.apache.catalina.core.StandardHostValve:boolean custom(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.deploy.ErrorPage)",
            "org.apache.catalina.manager.HTMLManagerServlet:void displaySessionsListPage(org.apache.catalina.util.ContextName,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.HTMLManagerServlet:void displaySessionDetailPage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.catalina.util.ContextName,java.lang.String,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:java.lang.String getFileText(java.lang.String,boolean)"
        ]
    },
    "org.apache.tomcat.util.http.mapper.Mapper:void map(org.apache.tomcat.util.buf.MessageBytes,org.apache.tomcat.util.buf.MessageBytes,java.lang.String,org.apache.tomcat.util.http.mapper.MappingData)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean postParseRequest(org.apache.coyote.Request,org.apache.catalina.connector.Request,org.apache.coyote.Response,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.servlets.WebdavServlet:boolean checkIfHeaders(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.naming.resources.ResourceAttributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.DefaultServlet:void serveResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,boolean)"
        ]
    },
    "org.apache.catalina.startup.Catalina:void setSecurityProtection()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Catalina:void <init>()"
        ]
    },
    "org.apache.catalina.startup.Embedded:void setSecurityProtection()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Embedded:void <init>(org.apache.catalina.Realm)"
        ]
    },
    "org.apache.catalina.startup.Bootstrap:void init()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Bootstrap:void init(java.lang.String[])",
            "org.apache.catalina.startup.Bootstrap:void start()",
            "org.apache.catalina.startup.Bootstrap:void main(java.lang.String[])"
        ]
    },
    "org.apache.catalina.core.ApplicationContextFacade:java.util.Set getResourcePaths(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.TldConfig:void tldScanResourcePaths(java.lang.String)",
            "org.apache.tomcat.util.scan.StandardJarScanner:void scan(javax.servlet.ServletContext,java.lang.ClassLoader,org.apache.tomcat.JarScannerCallback,java.util.Set)"
        ]
    },
    "org.apache.naming.NamingContext:void rename(javax.naming.Name,javax.naming.Name)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.NamingContext:void rename(java.lang.String,java.lang.String)",
            "org.apache.naming.SelectorContext:void rename(javax.naming.Name,javax.naming.Name)"
        ]
    },
    "org.apache.naming.NamingContextBindingsEnumeration:javax.naming.Binding next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.NamingContextBindingsEnumeration:java.lang.Object next()"
        ]
    },
    "org.apache.naming.NamingContextBindingsEnumeration:javax.naming.Binding nextElement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.NamingContextBindingsEnumeration:java.lang.Object nextElement()"
        ]
    },
    "org.apache.naming.NamingContext:void bind(javax.naming.Name,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.NamingContext:void bind(java.lang.String,java.lang.Object)",
            "org.apache.naming.NamingContext:void rename(javax.naming.Name,javax.naming.Name)",
            "org.apache.naming.NamingContext:javax.naming.Context createSubcontext(javax.naming.Name)",
            "org.apache.naming.NamingContext:void bind(javax.naming.Name,java.lang.Object,boolean)",
            "org.apache.naming.SelectorContext:void bind(javax.naming.Name,java.lang.Object)"
        ]
    },
    "org.apache.naming.NamingContext:void rebind(javax.naming.Name,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.NamingContext:void rebind(java.lang.String,java.lang.Object)",
            "org.apache.naming.NamingContext:void bind(javax.naming.Name,java.lang.Object,boolean)",
            "org.apache.naming.SelectorContext:void rebind(javax.naming.Name,java.lang.Object)"
        ]
    },
    "org.apache.naming.NamingContext:void unbind(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.NamingContextListener:void removeEjb(java.lang.String)",
            "org.apache.catalina.core.NamingContextListener:void removeEnvironment(java.lang.String)",
            "org.apache.catalina.core.NamingContextListener:void removeLocalEjb(java.lang.String)",
            "org.apache.catalina.core.NamingContextListener:void removeService(java.lang.String)",
            "org.apache.catalina.core.NamingContextListener:void removeResource(java.lang.String)",
            "org.apache.catalina.core.NamingContextListener:void removeResourceEnvRef(java.lang.String)",
            "org.apache.catalina.core.NamingContextListener:void removeResourceLink(java.lang.String)",
            "org.apache.naming.SelectorContext:void unbind(java.lang.String)"
        ]
    },
    "org.apache.naming.NamingContext:javax.naming.NamingEnumeration list(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.SelectorContext:javax.naming.NamingEnumeration list(java.lang.String)"
        ]
    },
    "org.apache.naming.NamingContext:javax.naming.NamingEnumeration listBindings(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.ManagerServlet:void printResources(java.io.PrintWriter,java.lang.String,javax.naming.Context,java.lang.String,java.lang.Class,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.mbeans.GlobalResourcesLifecycleListener:void createMBeans(java.lang.String,javax.naming.Context)",
            "org.apache.naming.SelectorContext:javax.naming.NamingEnumeration listBindings(java.lang.String)"
        ]
    },
    "org.apache.naming.NamingContext:void destroySubcontext(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.SelectorContext:void destroySubcontext(java.lang.String)"
        ]
    },
    "org.apache.naming.NamingContext:javax.naming.NameParser getNameParser(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.SelectorContext:javax.naming.NameParser getNameParser(java.lang.String)"
        ]
    },
    "org.apache.tomcat.util.modeler.Registry:java.util.List loadMBeans(java.lang.Object,java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.tomcat.util.modeler.Registry:void loadDescriptors(java.lang.String,java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.modeler.Registry:void loadMetadata(java.lang.Object)",
            "org.apache.tomcat.util.modeler.Registry:org.apache.tomcat.util.modeler.ManagedBean findManagedBean(java.lang.Object,java.lang.Class,java.lang.String)",
            "org.apache.tomcat.util.modeler.Registry:void loadDescriptors(java.lang.String,java.lang.ClassLoader)"
        ]
    },
    "org.apache.catalina.ssi.ExpressionParseTree$EqualNode:boolean evaluate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.ExpressionParseTree$AndNode:boolean evaluate()",
            "org.apache.catalina.ssi.ExpressionParseTree$NotNode:boolean evaluate()",
            "org.apache.catalina.ssi.ExpressionParseTree$OrNode:boolean evaluate()",
            "org.apache.catalina.ssi.ExpressionParseTree:boolean evaluateTree()"
        ]
    },
    "org.apache.catalina.ssi.ExpressionParseTree$GreaterThanNode:boolean evaluate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.ExpressionParseTree$AndNode:boolean evaluate()",
            "org.apache.catalina.ssi.ExpressionParseTree$NotNode:boolean evaluate()",
            "org.apache.catalina.ssi.ExpressionParseTree$OrNode:boolean evaluate()",
            "org.apache.catalina.ssi.ExpressionParseTree:boolean evaluateTree()"
        ]
    },
    "org.apache.catalina.ssi.ExpressionParseTree$LessThanNode:boolean evaluate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.ExpressionParseTree$AndNode:boolean evaluate()",
            "org.apache.catalina.ssi.ExpressionParseTree$NotNode:boolean evaluate()",
            "org.apache.catalina.ssi.ExpressionParseTree$OrNode:boolean evaluate()",
            "org.apache.catalina.ssi.ExpressionParseTree:boolean evaluateTree()"
        ]
    },
    "org.apache.catalina.ssi.ExpressionParseTree$AndNode:boolean evaluate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.ExpressionParseTree$AndNode:boolean evaluate()",
            "org.apache.catalina.ssi.ExpressionParseTree$NotNode:boolean evaluate()",
            "org.apache.catalina.ssi.ExpressionParseTree$OrNode:boolean evaluate()",
            "org.apache.catalina.ssi.ExpressionParseTree:boolean evaluateTree()"
        ]
    },
    "org.apache.catalina.ssi.ExpressionParseTree$NotNode:boolean evaluate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.ExpressionParseTree$AndNode:boolean evaluate()",
            "org.apache.catalina.ssi.ExpressionParseTree$NotNode:boolean evaluate()",
            "org.apache.catalina.ssi.ExpressionParseTree$OrNode:boolean evaluate()",
            "org.apache.catalina.ssi.ExpressionParseTree:boolean evaluateTree()"
        ]
    },
    "org.apache.catalina.ssi.ExpressionParseTree$OrNode:boolean evaluate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.ExpressionParseTree$AndNode:boolean evaluate()",
            "org.apache.catalina.ssi.ExpressionParseTree$NotNode:boolean evaluate()",
            "org.apache.catalina.ssi.ExpressionParseTree$OrNode:boolean evaluate()",
            "org.apache.catalina.ssi.ExpressionParseTree:boolean evaluateTree()"
        ]
    },
    "org.apache.catalina.ssi.ExpressionParseTree:boolean evaluateTree()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIConditional:boolean evaluateArguments(java.lang.String[],java.lang.String[],org.apache.catalina.ssi.SSIMediator)"
        ]
    },
    "org.apache.catalina.connector.RequestFacade$GetSessionPrivilegedAction:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:javax.servlet.http.HttpSession getSession(boolean)"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:javax.servlet.http.HttpSession getSession()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.filters.CsrfPreventionFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)"
        ]
    },
    "org.apache.catalina.connector.Response:java.lang.String encodeRedirectUrl(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.connector.ResponseFacade:java.lang.String encodeRedirectURL(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.FormAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)"
        ]
    },
    "org.apache.catalina.connector.ResponseFacade:java.lang.String encodeRedirectUrl(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.connector.Response:java.lang.String encodeUrl(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.connector.ResponseFacade:java.lang.String encodeURL(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.host.HTMLHostManagerServlet:void list(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.HTMLManagerServlet:void list(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.HTMLManagerServlet:void displaySessionDetailPage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.catalina.util.ContextName,java.lang.String,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.StatusManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.connector.ResponseFacade:java.lang.String encodeUrl(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.security.SecurityUtil:void doAsPrivilege(java.lang.String,javax.servlet.Servlet)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardWrapper:void unload()"
        ]
    },
    "org.apache.catalina.security.SecurityUtil:void doAsPrivilege(java.lang.String,javax.servlet.Servlet,java.lang.Class[],java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardWrapper:void initServlet(javax.servlet.Servlet)"
        ]
    },
    "org.apache.catalina.security.SecurityUtil:void doAsPrivilege(java.lang.String,javax.servlet.Filter,java.lang.Class[],java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.security.SecurityUtil:void doAsPrivilege(java.lang.String,javax.servlet.Filter)"
        ]
    },
    "org.apache.catalina.manager.HTMLManagerServlet:boolean removeSessionAttribute(org.apache.catalina.util.ContextName,java.lang.String,java.lang.String,org.apache.tomcat.util.res.StringManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.HTMLManagerServlet:void doSessions(org.apache.catalina.util.ContextName,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.tomcat.util.res.StringManager)"
        ]
    },
    "org.apache.catalina.connector.Request:void logout()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:void logout()"
        ]
    },
    "org.apache.catalina.session.StandardSession:void passivate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase:void swapOut(org.apache.catalina.Session)",
            "org.apache.catalina.session.StandardManager:void doUnload()"
        ]
    },
    "org.apache.catalina.session.StandardSession:void activate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase:org.apache.catalina.Session swapIn(java.lang.String)",
            "org.apache.catalina.session.StandardManager:void doLoad()"
        ]
    },
    "org.apache.catalina.filters.ExpiresFilter$XServletOutputStream:void write(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.filters.ExpiresFilter$XServletOutputStream:void write(byte[])",
            "org.apache.catalina.ssi.SSIFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.coyote.ajp.AjpProcessor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)",
            "org.apache.coyote.ajp.AjpProcessor:void finish()",
            "org.apache.coyote.ajp.AjpProcessor:boolean refillReadBuffer()",
            "org.apache.coyote.ajp.AjpProcessor:void flush(boolean)",
            "org.apache.coyote.http11.InternalOutputBuffer:void sendAck()",
            "org.apache.tomcat.util.http.fileupload.disk.DiskFileItem:void readObject(java.io.ObjectInputStream)",
            "org.apache.tomcat.util.http.fileupload.ThresholdingOutputStream:void write(byte[])"
        ]
    },
    "org.apache.catalina.servlets.DefaultServlet:void copy(org.apache.naming.resources.CacheEntry,javax.servlet.ServletOutputStream,org.apache.catalina.servlets.DefaultServlet$Range)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.DefaultServlet:void serveResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,boolean)"
        ]
    },
    "org.apache.catalina.servlets.DefaultServlet:void copy(org.apache.naming.resources.CacheEntry,javax.servlet.ServletOutputStream,java.util.Iterator,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.DefaultServlet:void serveResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,boolean)"
        ]
    },
    "org.apache.tomcat.util.http.Parameters:java.lang.String getParameter(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Request:java.lang.String getParameter(java.lang.String)"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.FileUploadBase:org.apache.tomcat.util.http.fileupload.FileItemIterator getItemIterator(org.apache.tomcat.util.http.fileupload.RequestContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.servlet.ServletFileUpload:org.apache.tomcat.util.http.fileupload.FileItemIterator getItemIterator(javax.servlet.http.HttpServletRequest)",
            "org.apache.tomcat.util.http.fileupload.FileUploadBase:java.util.List parseRequest(org.apache.tomcat.util.http.fileupload.RequestContext)"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl:org.apache.tomcat.util.http.fileupload.FileItemStream next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.FileUploadBase:java.util.List parseRequest(org.apache.tomcat.util.http.fileupload.RequestContext)"
        ]
    },
    "org.apache.catalina.servlets.CGIServlet$CGIRunner:void sendToLog(java.io.BufferedReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.CGIServlet$CGIRunner:void access$500(org.apache.catalina.servlets.CGIServlet$CGIRunner,java.io.BufferedReader)"
        ]
    },
    "org.apache.catalina.startup.ContextConfig:javax.servlet.ServletContainerInitializer getServletContainerInitializer(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void processServletContainerInitializers(java.util.Set)"
        ]
    },
    "org.apache.catalina.startup.PasswdUserDatabase:void init()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.PasswdUserDatabase:void setUserConfig(org.apache.catalina.startup.UserConfig)"
        ]
    },
    "org.apache.catalina.servlets.DefaultServlet:java.io.IOException copyRange(java.io.Reader,java.io.PrintWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.DefaultServlet:java.lang.String getReadme(javax.naming.directory.DirContext)",
            "org.apache.catalina.servlets.DefaultServlet:void copy(org.apache.naming.resources.CacheEntry,java.io.InputStream,java.io.PrintWriter)"
        ]
    },
    "org.apache.catalina.util.IOTools:void flow(java.io.Reader,java.io.Writer,char[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIExec:long process(org.apache.catalina.ssi.SSIMediator,java.lang.String,java.lang.String[],java.lang.String[],java.io.PrintWriter)",
            "org.apache.catalina.util.IOTools:void flow(java.io.Reader,java.io.Writer)"
        ]
    },
    "org.apache.naming.resources.BaseDirContext:void rebind(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.resources.BaseDirContext:void rebind(javax.naming.Name,java.lang.Object)",
            "org.apache.naming.resources.ProxyDirContext:void rebind(java.lang.String,java.lang.Object)",
            "org.apache.naming.SelectorContext:void rebind(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.naming.resources.BaseDirContext:void rebind(javax.naming.Name,java.lang.Object,javax.naming.directory.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.resources.ProxyDirContext:void rebind(javax.naming.Name,java.lang.Object,javax.naming.directory.Attributes)"
        ]
    },
    "org.apache.naming.resources.FileDirContext:void bind(java.lang.String,java.lang.Object,javax.naming.directory.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.resources.BaseDirContext:void bind(java.lang.String,java.lang.Object)",
            "org.apache.naming.resources.BaseDirContext:void bind(javax.naming.Name,java.lang.Object,javax.naming.directory.Attributes)",
            "org.apache.naming.resources.ProxyDirContext:void bind(java.lang.String,java.lang.Object,javax.naming.directory.Attributes)"
        ]
    },
    "org.apache.naming.resources.ProxyDirContext:void rebind(java.lang.String,java.lang.Object,javax.naming.directory.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.resources.ProxyDirContext:void rebind(java.lang.String,java.lang.Object,javax.naming.directory.Attributes)"
        ]
    },
    "org.apache.tomcat.util.net.jsse.JSSESupport:java.lang.Object[] getPeerCertificateChain(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.Http11NioProcessor:void actionInternal(org.apache.coyote.ActionCode,java.lang.Object)",
            "org.apache.coyote.http11.Http11Processor:void actionInternal(org.apache.coyote.ActionCode,java.lang.Object)",
            "org.apache.tomcat.util.net.jsse.JSSESupport:java.lang.Object[] getPeerCertificateChain()"
        ]
    },
    "org.apache.coyote.ajp.AjpProcessor:boolean receive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.ajp.AbstractAjpProcessor$SocketInputBuffer:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.ajp.AjpProcessor:boolean refillReadBuffer()"
        ]
    },
    "org.apache.coyote.http11.InternalInputBuffer$InputStreamInputBuffer:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.filters.BufferedInputFilter:void setRequest(org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.ChunkedInputFilter:int readBytes()",
            "org.apache.coyote.http11.filters.IdentityInputFilter:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.filters.IdentityInputFilter:long end()",
            "org.apache.coyote.http11.AbstractInputBuffer:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.http11.InternalAprInputBuffer:int doRead(org.apache.tomcat.util.buf.ByteChunk,org.apache.coyote.Request)",
            "org.apache.coyote.Request:int doRead(org.apache.tomcat.util.buf.ByteChunk)"
        ]
    },
    "org.apache.coyote.http11.InternalInputBuffer:boolean parseRequestLine(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.Http11Processor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)"
        ]
    },
    "org.apache.coyote.http11.InternalInputBuffer:boolean parseHeader()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.InternalInputBuffer:boolean parseHeaders()"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl$1:void raiseError(long,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.util.LimitedInputStream:void checkLimit()"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.loader.WebappClassLoader:void clearReferencesJdbc()",
            "org.apache.catalina.loader.WebappClassLoader:org.apache.catalina.loader.ResourceEntry findResourceInternal(java.lang.String,java.lang.String)",
            "org.apache.catalina.loader.WebappLoader:boolean copy(java.io.InputStream,java.io.OutputStream)",
            "org.apache.catalina.manager.host.HostManagerServlet:void add(java.io.PrintWriter,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean,boolean,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.servlets.CGIServlet$CGIEnvironment:void expandCGIScript()",
            "org.apache.catalina.servlets.CGIServlet$CGIRunner:void run()",
            "org.apache.catalina.startup.Catalina:void load()",
            "org.apache.catalina.startup.CatalinaProperties:void loadProperties()",
            "org.apache.catalina.startup.ContextConfig$FragmentJarScannerCallback:void scan(java.net.JarURLConnection)",
            "org.apache.catalina.startup.ContextConfig:void processContextConfig(java.net.URL)",
            "org.apache.catalina.startup.ContextConfig:void processServletContainerInitializers(java.util.Set)",
            "org.apache.catalina.startup.ContextConfig:void processAnnotationsJar(java.net.URL,org.apache.catalina.deploy.WebXml)",
            "org.apache.catalina.startup.ContextConfig:void processAnnotationsJndi(java.net.URL,org.apache.catalina.deploy.WebXml)",
            "org.apache.catalina.startup.ExpandWar:java.lang.String expand(org.apache.catalina.Host,java.net.URL,java.lang.String)",
            "org.apache.catalina.startup.HostConfig:void deployWAR(org.apache.catalina.util.ContextName,java.io.File,java.lang.String)",
            "org.apache.catalina.startup.TldConfig:void tldScanResourcePaths(java.lang.String)",
            "org.apache.catalina.startup.TldConfig:org.apache.catalina.startup.XmlErrorHandler tldScanStream(java.io.InputStream)",
            "org.apache.catalina.util.CharsetMapper:void <init>(java.lang.String)",
            "org.apache.catalina.util.ExtensionValidator:boolean validateApplication(javax.naming.directory.DirContext,org.apache.catalina.Context)",
            "org.apache.catalina.util.ServerInfo:void <clinit>()",
            "org.apache.naming.resources.FileDirContext:void rebind(java.lang.String,java.lang.Object,javax.naming.directory.Attributes)",
            "org.apache.naming.resources.ProxyDirContext:void cacheLoad(org.apache.naming.resources.CacheEntry)",
            "org.apache.tomcat.util.http.fileupload.util.Streams:long copy(java.io.InputStream,java.io.OutputStream,boolean,byte[])",
            "org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl:void close()",
            "org.apache.tomcat.util.http.fileupload.IOUtils:void closeQuietly(java.io.InputStream)",
            "org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream:void close(boolean)"
        ]
    },
    "org.apache.catalina.core.StandardContext$2:java.lang.Object call()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.GlobalResourcesLifecycleListener:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.GlobalResourcesLifecycleListener:void createMBeans()",
            "org.apache.catalina.mbeans.GlobalResourcesLifecycleListener:void createMBeans(java.lang.String,javax.naming.Context)",
            "org.apache.catalina.mbeans.GlobalResourcesLifecycleListener:void createMBeans(java.lang.String,org.apache.catalina.UserDatabase)",
            "org.apache.catalina.mbeans.GlobalResourcesLifecycleListener:void destroyMBeans()",
            "org.apache.catalina.mbeans.GlobalResourcesLifecycleListener:void <clinit>()"
        ]
    },
    "org.apache.catalina.mbeans.GroupMBean:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanUtils:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Connector:java.lang.String getDomainInternal()",
            "org.apache.catalina.core.ContainerBase:java.lang.String getDomainInternal()",
            "org.apache.catalina.core.StandardHost:java.lang.String getObjectNameKeyProperties()",
            "org.apache.catalina.core.StandardServer:java.lang.String getDomainInternal()",
            "org.apache.catalina.core.StandardService:java.lang.String getDomainInternal()",
            "org.apache.catalina.core.StandardWrapper:void load()",
            "org.apache.catalina.deploy.NamingResources:void addEnvironment(org.apache.catalina.deploy.ContextEnvironment)",
            "org.apache.catalina.deploy.NamingResources:void addResource(org.apache.catalina.deploy.ContextResource)",
            "org.apache.catalina.deploy.NamingResources:void addResourceLink(org.apache.catalina.deploy.ContextResourceLink)",
            "org.apache.catalina.deploy.NamingResources:void removeEnvironment(java.lang.String)",
            "org.apache.catalina.deploy.NamingResources:void removeResource(java.lang.String)",
            "org.apache.catalina.deploy.NamingResources:void removeResourceLink(java.lang.String)",
            "org.apache.catalina.deploy.NamingResources:void initInternal()",
            "org.apache.catalina.deploy.NamingResources:void destroyInternal()",
            "org.apache.catalina.deploy.NamingResources:java.lang.String getObjectNameKeyProperties()",
            "org.apache.catalina.loader.WebappLoader:void startInternal()",
            "org.apache.catalina.loader.WebappLoader:void stopInternal()",
            "org.apache.catalina.loader.WebappLoader:java.lang.String getDomainInternal()",
            "org.apache.catalina.mbeans.GlobalResourcesLifecycleListener:void createMBeans(java.lang.String,org.apache.catalina.UserDatabase)",
            "org.apache.catalina.mbeans.GlobalResourcesLifecycleListener:void <clinit>()",
            "org.apache.catalina.mbeans.GroupMBean:void <init>()",
            "org.apache.catalina.mbeans.GroupMBean:java.lang.String[] getRoles()",
            "org.apache.catalina.mbeans.GroupMBean:java.lang.String[] getUsers()",
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createWebappLoader(java.lang.String)",
            "org.apache.catalina.mbeans.MBeanFactory:void <clinit>()",
            "org.apache.catalina.mbeans.MBeanUtils:java.lang.String createManagedName(java.lang.Object)",
            "org.apache.catalina.mbeans.MBeanUtils:javax.management.DynamicMBean createMBean(org.apache.catalina.deploy.ContextEnvironment)",
            "org.apache.catalina.mbeans.MBeanUtils:javax.management.DynamicMBean createMBean(org.apache.catalina.deploy.ContextResource)",
            "org.apache.catalina.mbeans.MBeanUtils:javax.management.DynamicMBean createMBean(org.apache.catalina.deploy.ContextResourceLink)",
            "org.apache.catalina.mbeans.MBeanUtils:javax.management.DynamicMBean createMBean(org.apache.catalina.Group)",
            "org.apache.catalina.mbeans.MBeanUtils:javax.management.DynamicMBean createMBean(org.apache.catalina.Loader)",
            "org.apache.catalina.mbeans.MBeanUtils:javax.management.DynamicMBean createMBean(org.apache.catalina.mbeans.MBeanFactory)",
            "org.apache.catalina.mbeans.MBeanUtils:javax.management.DynamicMBean createMBean(org.apache.catalina.deploy.NamingResources)",
            "org.apache.catalina.mbeans.MBeanUtils:javax.management.DynamicMBean createMBean(org.apache.catalina.Role)",
            "org.apache.catalina.mbeans.MBeanUtils:javax.management.DynamicMBean createMBean(org.apache.catalina.User)",
            "org.apache.catalina.mbeans.MBeanUtils:javax.management.DynamicMBean createMBean(org.apache.catalina.UserDatabase)",
            "org.apache.catalina.mbeans.MBeanUtils:javax.management.ObjectName createObjectName(java.lang.String,org.apache.catalina.Valve)",
            "org.apache.catalina.mbeans.MBeanUtils:int getSeq(java.lang.String)",
            "org.apache.catalina.mbeans.MBeanUtils:org.apache.tomcat.util.modeler.Registry createRegistry()",
            "org.apache.catalina.mbeans.MBeanUtils:javax.management.MBeanServer createServer()",
            "org.apache.catalina.mbeans.MBeanUtils:void destroyMBean(org.apache.catalina.connector.Connector,org.apache.catalina.Service)",
            "org.apache.catalina.mbeans.MBeanUtils:void destroyMBean(org.apache.catalina.Context)",
            "org.apache.catalina.mbeans.MBeanUtils:void destroyMBean(org.apache.catalina.deploy.ContextEnvironment)",
            "org.apache.catalina.mbeans.MBeanUtils:void destroyMBean(org.apache.catalina.deploy.ContextResource)",
            "org.apache.catalina.mbeans.MBeanUtils:void destroyMBean(org.apache.catalina.deploy.ContextResourceLink)",
            "org.apache.catalina.mbeans.MBeanUtils:void destroyMBean(org.apache.catalina.Engine)",
            "org.apache.catalina.mbeans.MBeanUtils:void destroyMBean(org.apache.catalina.Group)",
            "org.apache.catalina.mbeans.MBeanUtils:void destroyMBean(org.apache.catalina.Host)",
            "org.apache.catalina.mbeans.MBeanUtils:void destroyMBean(org.apache.catalina.Loader)",
            "org.apache.catalina.mbeans.MBeanUtils:void destroyMBean(org.apache.catalina.Manager)",
            "org.apache.catalina.mbeans.MBeanUtils:void destroyMBean(org.apache.catalina.deploy.NamingResources)",
            "org.apache.catalina.mbeans.MBeanUtils:void destroyMBean(org.apache.catalina.Realm)",
            "org.apache.catalina.mbeans.MBeanUtils:void destroyMBean(org.apache.catalina.Role)",
            "org.apache.catalina.mbeans.MBeanUtils:void destroyMBean(org.apache.catalina.Server)",
            "org.apache.catalina.mbeans.MBeanUtils:void destroyMBean(org.apache.catalina.Service)",
            "org.apache.catalina.mbeans.MBeanUtils:void destroyMBean(org.apache.catalina.User)",
            "org.apache.catalina.mbeans.MBeanUtils:void destroyMBean(org.apache.catalina.UserDatabase)",
            "org.apache.catalina.mbeans.MBeanUtils:void destroyMBeanUserDatabase(java.lang.String)",
            "org.apache.catalina.mbeans.MBeanUtils:void destroyMBean(org.apache.catalina.Valve,org.apache.catalina.Container)",
            "org.apache.catalina.mbeans.MBeanUtils:void <clinit>()",
            "org.apache.catalina.mbeans.MemoryUserDatabaseMBean:void <init>()",
            "org.apache.catalina.mbeans.MemoryUserDatabaseMBean:java.lang.String createGroup(java.lang.String,java.lang.String)",
            "org.apache.catalina.mbeans.MemoryUserDatabaseMBean:java.lang.String createRole(java.lang.String,java.lang.String)",
            "org.apache.catalina.mbeans.MemoryUserDatabaseMBean:java.lang.String createUser(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.catalina.mbeans.MemoryUserDatabaseMBean:java.lang.String findGroup(java.lang.String)",
            "org.apache.catalina.mbeans.MemoryUserDatabaseMBean:java.lang.String findRole(java.lang.String)",
            "org.apache.catalina.mbeans.MemoryUserDatabaseMBean:java.lang.String findUser(java.lang.String)",
            "org.apache.catalina.mbeans.MemoryUserDatabaseMBean:void removeGroup(java.lang.String)",
            "org.apache.catalina.mbeans.MemoryUserDatabaseMBean:void removeRole(java.lang.String)",
            "org.apache.catalina.mbeans.MemoryUserDatabaseMBean:void removeUser(java.lang.String)",
            "org.apache.catalina.mbeans.NamingResourcesMBean:void <init>()",
            "org.apache.catalina.mbeans.NamingResourcesMBean:java.lang.String[] getEnvironments()",
            "org.apache.catalina.mbeans.NamingResourcesMBean:java.lang.String[] getResources()",
            "org.apache.catalina.mbeans.NamingResourcesMBean:java.lang.String[] getResourceLinks()",
            "org.apache.catalina.mbeans.NamingResourcesMBean:java.lang.String addEnvironment(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.catalina.mbeans.NamingResourcesMBean:java.lang.String addResource(java.lang.String,java.lang.String)",
            "org.apache.catalina.mbeans.NamingResourcesMBean:java.lang.String addResourceLink(java.lang.String,java.lang.String)",
            "org.apache.catalina.mbeans.RoleMBean:void <init>()",
            "org.apache.catalina.mbeans.UserMBean:void <init>()",
            "org.apache.catalina.mbeans.UserMBean:java.lang.String[] getGroups()",
            "org.apache.catalina.mbeans.UserMBean:java.lang.String[] getRoles()",
            "org.apache.catalina.realm.RealmBase:java.lang.String getObjectNameKeyProperties()",
            "org.apache.catalina.realm.RealmBase:java.lang.String getDomainInternal()",
            "org.apache.catalina.session.ManagerBase:java.lang.String getDomainInternal()",
            "org.apache.catalina.valves.ValveBase:java.lang.String getObjectNameKeyProperties()",
            "org.apache.catalina.valves.ValveBase:java.lang.String getDomainInternal()"
        ]
    },
    "org.apache.catalina.mbeans.MemoryUserDatabaseMBean:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.NamingResourcesMBean:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.RoleMBean:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.UserMBean:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.tomcat.util.modeler.Registry:org.apache.tomcat.util.modeler.ManagedBean findManagedBean(java.lang.Object,java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.modeler.Registry:org.apache.tomcat.util.modeler.ManagedBean findManagedBean(java.lang.Class,java.lang.String)"
        ]
    },
    "org.apache.catalina.core.AsyncContextImpl:javax.servlet.AsyncListener createListener(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.DefaultInstanceManager:java.lang.Object newInstance(java.lang.String,java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.AsyncContextImpl:javax.servlet.AsyncListener createListener(java.lang.Class)"
        ]
    },
    "org.apache.catalina.core.DefaultInstanceManager:java.lang.Class loadClass(java.lang.String,java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.DefaultInstanceManager$5:java.lang.Class run()",
            "org.apache.catalina.core.DefaultInstanceManager:java.lang.Class loadClassMaybePrivileged(java.lang.String,java.lang.ClassLoader)"
        ]
    },
    "org.apache.catalina.core.StandardWrapper:void servletSecurityAnnotationScan()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.core.StandardWrapper:boolean isContainerProvidedServlet(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardWrapper:javax.servlet.Servlet loadServlet()"
        ]
    },
    "org.apache.catalina.loader.WebappClassLoader:boolean validateJarFile(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.loader.WebappClassLoader:void addJar(java.lang.String,java.util.jar.JarFile,java.io.File)"
        ]
    },
    "org.apache.catalina.security.SecurityClassLoad:void loadCorePackage(java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.security.SecurityClassLoad:void securityClassLoad(java.lang.ClassLoader)"
        ]
    },
    "org.apache.catalina.security.SecurityClassLoad:void loadLoaderPackage(java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.security.SecurityClassLoad:void securityClassLoad(java.lang.ClassLoader)"
        ]
    },
    "org.apache.catalina.security.SecurityClassLoad:void loadRealmPackage(java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.security.SecurityClassLoad:void securityClassLoad(java.lang.ClassLoader)"
        ]
    },
    "org.apache.catalina.security.SecurityClassLoad:void loadSessionPackage(java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.security.SecurityClassLoad:void securityClassLoad(java.lang.ClassLoader)"
        ]
    },
    "org.apache.catalina.security.SecurityClassLoad:void loadUtilPackage(java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.security.SecurityClassLoad:void securityClassLoad(java.lang.ClassLoader)"
        ]
    },
    "org.apache.catalina.security.SecurityClassLoad:void loadCoyotePackage(java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.security.SecurityClassLoad:void securityClassLoad(java.lang.ClassLoader)"
        ]
    },
    "org.apache.catalina.security.SecurityClassLoad:void loadJavaxPackage(java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.security.SecurityClassLoad:void securityClassLoad(java.lang.ClassLoader)"
        ]
    },
    "org.apache.catalina.security.SecurityClassLoad:void loadConnectorPackage(java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.security.SecurityClassLoad:void securityClassLoad(java.lang.ClassLoader)"
        ]
    },
    "org.apache.catalina.security.SecurityClassLoad:void loadTomcatPackage(java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.security.SecurityClassLoad:void securityClassLoad(java.lang.ClassLoader)"
        ]
    },
    "org.apache.catalina.startup.ContextConfig:void checkHandlesTypes(org.apache.tomcat.util.bcel.classfile.JavaClass)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void processAnnotationsStream(java.io.InputStream,org.apache.catalina.deploy.WebXml)"
        ]
    },
    "org.apache.catalina.startup.Tool:void main(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.util.CustomObjectInputStream:java.lang.Class resolveProxyClass(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.tomcat.util.digester.CallMethodRule:void setDigester(org.apache.tomcat.util.digester.Digester)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.digester.AbstractRulesImpl:void add(java.lang.String,org.apache.tomcat.util.digester.Rule)",
            "org.apache.tomcat.util.digester.Digester:void addRule(java.lang.String,org.apache.tomcat.util.digester.Rule)",
            "org.apache.tomcat.util.digester.RulesBase:void setDigester(org.apache.tomcat.util.digester.Digester)",
            "org.apache.tomcat.util.digester.RulesBase:void add(java.lang.String,org.apache.tomcat.util.digester.Rule)",
            "org.apache.tomcat.util.digester.WithDefaultsRulesWrapper:void setDigester(org.apache.tomcat.util.digester.Digester)",
            "org.apache.tomcat.util.digester.WithDefaultsRulesWrapper:void addDefault(org.apache.tomcat.util.digester.Rule)"
        ]
    },
    "org.apache.tomcat.util.digester.FactoryCreateRule:org.apache.tomcat.util.digester.ObjectCreationFactory getFactory(org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.digester.FactoryCreateRule:void begin(java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.tomcat.util.digester.ObjectCreateRule:void begin(java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.digester.Digester:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.tomcat.util.modeler.BaseModelMBean:java.lang.Class getAttributeClass(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.modeler.ManagedBean:java.lang.reflect.Method getSetter(java.lang.String,org.apache.tomcat.util.modeler.BaseModelMBean,java.lang.Object)",
            "org.apache.tomcat.util.modeler.ManagedBean:java.lang.reflect.Method getInvoke(java.lang.String,java.lang.Object[],java.lang.String[],org.apache.tomcat.util.modeler.BaseModelMBean,java.lang.Object)"
        ]
    },
    "org.apache.tomcat.util.modeler.ManagedBean:javax.management.DynamicMBean createMBean(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.MBeanUtils:javax.management.DynamicMBean createMBean(org.apache.catalina.deploy.ContextEnvironment)",
            "org.apache.catalina.mbeans.MBeanUtils:javax.management.DynamicMBean createMBean(org.apache.catalina.deploy.ContextResource)",
            "org.apache.catalina.mbeans.MBeanUtils:javax.management.DynamicMBean createMBean(org.apache.catalina.deploy.ContextResourceLink)",
            "org.apache.catalina.mbeans.MBeanUtils:javax.management.DynamicMBean createMBean(org.apache.catalina.Group)",
            "org.apache.catalina.mbeans.MBeanUtils:javax.management.DynamicMBean createMBean(org.apache.catalina.Loader)",
            "org.apache.catalina.mbeans.MBeanUtils:javax.management.DynamicMBean createMBean(org.apache.catalina.mbeans.MBeanFactory)",
            "org.apache.catalina.mbeans.MBeanUtils:javax.management.DynamicMBean createMBean(org.apache.catalina.deploy.NamingResources)",
            "org.apache.catalina.mbeans.MBeanUtils:javax.management.DynamicMBean createMBean(org.apache.catalina.Role)",
            "org.apache.catalina.mbeans.MBeanUtils:javax.management.DynamicMBean createMBean(org.apache.catalina.User)",
            "org.apache.catalina.mbeans.MBeanUtils:javax.management.DynamicMBean createMBean(org.apache.catalina.UserDatabase)",
            "org.apache.tomcat.util.modeler.ManagedBean:javax.management.DynamicMBean createMBean()",
            "org.apache.tomcat.util.modeler.Registry:void registerComponent(java.lang.Object,javax.management.ObjectName,java.lang.String)"
        ]
    },
    "org.apache.tomcat.util.net.jsse.JSSESocketFactory:javax.net.ssl.TrustManager[] getTrustManagers(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.net.jsse.JSSESocketFactory:javax.net.ssl.TrustManager[] getTrustManagers()"
        ]
    },
    "org.apache.tomcat.util.IntrospectionUtils:java.lang.Object callMethod1(java.lang.Object,java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.SetNextNamingRule:void end(java.lang.String,java.lang.String)",
            "org.apache.tomcat.util.digester.SetNextRule:void end(java.lang.String,java.lang.String)",
            "org.apache.tomcat.util.digester.SetRootRule:void end(java.lang.String,java.lang.String)",
            "org.apache.tomcat.util.digester.SetTopRule:void end(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.manager.util.ReverseComparator:int compare(org.apache.catalina.Session,org.apache.catalina.Session)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.util.ReverseComparator:int compare(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.catalina.valves.CrawlerSessionManagerValve:void initInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void init()"
        ]
    },
    "org.apache.catalina.connector.Request:java.lang.String getRealPath(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:java.lang.String getRealPath(java.lang.String)"
        ]
    },
    "org.apache.catalina.connector.Request:void removeAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Request:void setAttribute(java.lang.String,java.lang.Object)",
            "org.apache.catalina.connector.RequestFacade:void removeAttribute(java.lang.String)",
            "org.apache.catalina.core.ApplicationHttpRequest:void removeAttribute(java.lang.String)",
            "org.apache.catalina.core.ApplicationRequest:void removeAttribute(java.lang.String)"
        ]
    },
    "org.apache.catalina.connector.Request:void setAttribute(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.FormAuthenticator:void forwardToLoginPage(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.authenticator.FormAuthenticator:void forwardToErrorPage(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.connector.CometEventImpl:void setTimeout(int)",
            "org.apache.catalina.connector.RequestFacade:void setAttribute(java.lang.String,java.lang.Object)",
            "org.apache.catalina.core.ApplicationDispatcher:void processRequest(javax.servlet.ServletRequest,javax.servlet.ServletResponse,org.apache.catalina.core.ApplicationDispatcher$State)",
            "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)",
            "org.apache.catalina.core.ApplicationHttpRequest:void setAttribute(java.lang.String,java.lang.Object)",
            "org.apache.catalina.core.ApplicationRequest:void setAttribute(java.lang.String,java.lang.Object)",
            "org.apache.catalina.core.AsyncContextImpl$1:void run()",
            "org.apache.catalina.core.AsyncContextImpl:void dispatch(javax.servlet.ServletContext,java.lang.String)",
            "org.apache.catalina.core.AsyncContextImpl:void setErrorState(java.lang.Throwable)",
            "org.apache.catalina.core.StandardContext:boolean fireRequestInitEvent(javax.servlet.ServletRequest)",
            "org.apache.catalina.core.StandardContext:boolean fireRequestDestroyEvent(javax.servlet.ServletRequest)",
            "org.apache.catalina.core.StandardHostValve:void throwable(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,java.lang.Throwable)",
            "org.apache.catalina.core.StandardHostValve:void status(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardWrapperValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardWrapperValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.core.StandardWrapperValve:void exception(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,java.lang.Throwable)",
            "org.apache.catalina.filters.RemoteIpFilter:void doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.manager.HTMLManagerServlet:void doSessions(org.apache.catalina.util.ContextName,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.HTMLManagerServlet:void displaySessionsListPage(org.apache.catalina.util.ContextName,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.HTMLManagerServlet:void displaySessionDetailPage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.catalina.util.ContextName,java.lang.String,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.servlets.DefaultServlet:boolean checkSendfile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.naming.resources.CacheEntry,long,org.apache.catalina.servlets.DefaultServlet$Range)",
            "org.apache.catalina.ssi.SSIFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.ssi.SSIServlet:void requestHandler(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:void setVariableValue(java.lang.String,java.lang.String)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.connector.Request:javax.servlet.ServletContext getServletContext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void register(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,java.security.Principal,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean postParseRequest(org.apache.coyote.Request,org.apache.catalina.connector.Request,org.apache.coyote.Response,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:void parseSessionSslId(org.apache.catalina.connector.Request)",
            "org.apache.catalina.connector.RequestFacade:javax.servlet.ServletContext getServletContext()",
            "org.apache.catalina.connector.Response:boolean isEncodeable(java.lang.String)",
            "org.apache.catalina.core.AsyncContextImpl:void dispatch(java.lang.String)",
            "org.apache.catalina.filters.WebdavFixFilter:void log(javax.servlet.ServletRequest,java.lang.String)"
        ]
    },
    "org.apache.catalina.connector.Request:java.lang.String getPathTranslated()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:java.lang.String getPathTranslated()",
            "org.apache.catalina.servlets.CGIServlet:void printServletEnvironment(javax.servlet.ServletOutputStream,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:java.lang.String getCGIVariable(java.lang.String)"
        ]
    },
    "org.apache.catalina.connector.Request:void changeSessionId(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void register(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,java.security.Principal,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.core.ApplicationContext:javax.servlet.ServletContext getContext(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationContextFacade:javax.servlet.ServletContext getContext(java.lang.String)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:org.apache.catalina.ssi.SSIServletExternalResolver$ServletContextAndPath getServletContextAndPathFromVirtualPath(java.lang.String)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:boolean isRootContext(javax.servlet.ServletContext)"
        ]
    },
    "org.apache.catalina.core.ApplicationFilterConfig:javax.servlet.ServletContext getServletContext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterConfig:void initFilter()",
            "org.apache.catalina.ssi.SSIFilter:void init(javax.servlet.FilterConfig)",
            "org.apache.catalina.ssi.SSIFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)"
        ]
    },
    "org.apache.catalina.core.ApplicationSessionCookieConfig:javax.servlet.http.Cookie createSessionCookie(org.apache.catalina.Context,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Request:void changeSessionId(java.lang.String)",
            "org.apache.catalina.connector.Request:org.apache.catalina.Session doGetSession(boolean)"
        ]
    },
    "org.apache.catalina.core.ApplicationSessionCookieConfig:java.lang.String getConfiguredSessionCookieName(org.apache.catalina.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationSessionCookieConfig:java.lang.String getSessionCookieName(org.apache.catalina.Context)",
            "org.apache.catalina.core.ApplicationSessionCookieConfig:java.lang.String getSessionUriParamName(org.apache.catalina.Context)"
        ]
    },
    "org.apache.catalina.core.StandardContext:void mergeParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:void startInternal()"
        ]
    },
    "org.apache.catalina.core.StandardContext:boolean fireRequestInitEvent(javax.servlet.ServletRequest)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.FormAuthenticator:void forwardToLoginPage(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.authenticator.FormAuthenticator:void forwardToErrorPage(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.core.ApplicationDispatcher:void processRequest(javax.servlet.ServletRequest,javax.servlet.ServletResponse,org.apache.catalina.core.ApplicationDispatcher$State)",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.core.StandardContext:boolean fireRequestDestroyEvent(javax.servlet.ServletRequest)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.FormAuthenticator:void forwardToLoginPage(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.authenticator.FormAuthenticator:void forwardToErrorPage(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.core.ApplicationDispatcher:void processRequest(javax.servlet.ServletRequest,javax.servlet.ServletResponse,org.apache.catalina.core.ApplicationDispatcher$State)",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.core.StandardHost$MemoryLeakTrackingListener:void lifecycleEvent(org.apache.catalina.LifecycleEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleSupport:void fireLifecycleEvent(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.catalina.core.StandardWrapper:javax.servlet.ServletContext getServletContext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardWrapper:javax.servlet.Servlet loadServlet()",
            "org.apache.catalina.core.StandardWrapper:void initServlet(javax.servlet.Servlet)",
            "org.apache.catalina.core.StandardWrapper:void unavailable(javax.servlet.UnavailableException)",
            "org.apache.catalina.core.StandardWrapper:void unload()",
            "org.apache.catalina.core.StandardWrapper:void stopInternal()",
            "org.apache.catalina.core.StandardWrapperFacade:javax.servlet.ServletContext getServletContext()"
        ]
    },
    "org.apache.catalina.session.FileStore:java.io.File directory()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.FileStore:int getSize()",
            "org.apache.catalina.session.FileStore:java.lang.String[] keys()",
            "org.apache.catalina.session.FileStore:java.io.File file(java.lang.String)"
        ]
    },
    "org.apache.catalina.session.StandardManager:java.io.File file()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.StandardManager:void doLoad()",
            "org.apache.catalina.session.StandardManager:void doUnload()"
        ]
    },
    "org.apache.catalina.session.StandardSession:javax.servlet.ServletContext getServletContext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.StandardSessionFacade:javax.servlet.ServletContext getServletContext()"
        ]
    },
    "org.apache.catalina.core.StandardContext:void setWorkDir(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:void postWorkDirectory()"
        ]
    },
    "org.apache.catalina.loader.WebappLoader:void addRepository(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.loader.VirtualWebappLoader:void startInternal()"
        ]
    },
    "org.apache.catalina.startup.TldConfig:void lifecycleEvent(org.apache.catalina.LifecycleEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleSupport:void fireLifecycleEvent(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.catalina.core.ApplicationContext:javax.servlet.FilterRegistration$Dynamic addFilter(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationContextFacade:javax.servlet.FilterRegistration$Dynamic addFilter(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.core.ApplicationContext:javax.servlet.FilterRegistration$Dynamic addFilter(java.lang.String,javax.servlet.Filter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationContextFacade:javax.servlet.FilterRegistration$Dynamic addFilter(java.lang.String,javax.servlet.Filter)"
        ]
    },
    "org.apache.catalina.core.ApplicationContext:javax.servlet.FilterRegistration$Dynamic addFilter(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationContextFacade:javax.servlet.FilterRegistration$Dynamic addFilter(java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.catalina.core.ApplicationContextFacade:void declareRoles(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.ApplicationServletRegistration:java.util.Set addMapping(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.ContextConfig:void contextConfig()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void init()"
        ]
    },
    "org.apache.catalina.core.ApplicationServletRegistration:java.util.Set setServletSecurity(javax.servlet.ServletSecurityElement)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardWrapper:void processServletSecurityAnnotation(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardWrapper:javax.servlet.Servlet loadServlet()",
            "org.apache.catalina.core.StandardWrapper:void servletSecurityAnnotationScan()"
        ]
    },
    "org.apache.catalina.core.StandardContext$1:java.lang.Object call()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.ApplicationServletRegistration:java.util.Set setInitParameters(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.session.StandardSession:void setId(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.ManagerBase:org.apache.catalina.Session createSession(java.lang.String)",
            "org.apache.catalina.session.ManagerBase:void changeSessionId(org.apache.catalina.Session)"
        ]
    },
    "org.apache.catalina.session.StandardSession:void setAttribute(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Request:void setUserPrincipal(java.security.Principal)",
            "org.apache.catalina.filters.CsrfPreventionFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.security.SecurityUtil:void execute(java.lang.reflect.Method,java.lang.Object,java.lang.Object[],java.security.Principal)",
            "org.apache.catalina.session.StandardSession:void putValue(java.lang.String,java.lang.Object)",
            "org.apache.catalina.session.StandardSessionFacade:void setAttribute(java.lang.String,java.lang.Object)",
            "org.apache.catalina.session.StandardSessionFacade:void putValue(java.lang.String,java.lang.Object)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)"
        ]
    },
    "org.apache.catalina.session.StandardSession:void removeAttribute(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.StandardSession:void removeAttribute(java.lang.String)"
        ]
    },
    "org.apache.catalina.session.StandardSession:void writeObject(java.io.ObjectOutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.StandardSession:void writeObjectData(java.io.ObjectOutputStream)"
        ]
    },
    "org.apache.catalina.core.DefaultInstanceManager:java.lang.Object newInstance(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationContext:javax.servlet.Filter createFilter(java.lang.Class)",
            "org.apache.catalina.core.ApplicationContext:javax.servlet.Servlet createServlet(java.lang.Class)",
            "org.apache.catalina.core.ApplicationContext:void addListener(java.lang.String)",
            "org.apache.catalina.core.ApplicationContext:java.util.EventListener createListener(java.lang.Class)",
            "org.apache.catalina.core.ApplicationFilterConfig:javax.servlet.Filter getFilter()",
            "org.apache.catalina.core.StandardContext:boolean listenerStart()",
            "org.apache.catalina.core.StandardWrapper:javax.servlet.Servlet loadServlet()"
        ]
    },
    "org.apache.catalina.core.DefaultInstanceManager:void newInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterConfig:void <init>(org.apache.catalina.Context,org.apache.catalina.deploy.FilterDef)"
        ]
    },
    "org.apache.catalina.realm.LockOutRealm:java.security.Principal authenticate(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:java.security.Principal doLogin(org.apache.catalina.connector.Request,java.lang.String,java.lang.String)",
            "org.apache.catalina.authenticator.BasicAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.authenticator.FormAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.authenticator.SingleSignOn:boolean reauthenticate(java.lang.String,org.apache.catalina.Realm,org.apache.catalina.connector.Request)",
            "org.apache.catalina.realm.CombinedRealm:java.security.Principal authenticate(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.authenticator.DigestAuthenticator:java.security.Principal findPrincipal(org.apache.catalina.connector.Request,java.lang.String,org.apache.catalina.Realm)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.DigestAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)"
        ]
    },
    "org.apache.catalina.realm.CombinedRealm:java.security.Principal authenticate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.DigestAuthenticator:java.security.Principal findPrincipal(org.apache.catalina.connector.Request,java.lang.String,org.apache.catalina.Realm)",
            "org.apache.catalina.realm.CombinedRealm:java.security.Principal authenticate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.catalina.realm.LockOutRealm:java.security.Principal authenticate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.realm.JAASMemoryLoginModule:boolean login()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.realm.RealmBase:java.security.Principal authenticate(java.security.cert.X509Certificate[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.SSLAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.realm.CombinedRealm:java.security.Principal authenticate(java.security.cert.X509Certificate[])"
        ]
    },
    "org.apache.naming.resources.ProxyDirContext:java.lang.Object lookupLink(javax.naming.Name)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.resources.ProxyDirContext:java.lang.Object lookupLink(javax.naming.Name)",
            "org.apache.naming.SelectorContext:java.lang.Object lookupLink(javax.naming.Name)"
        ]
    },
    "org.apache.naming.resources.BaseDirContext:javax.naming.Context createSubcontext(javax.naming.Name)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.resources.ProxyDirContext:javax.naming.Context createSubcontext(javax.naming.Name)",
            "org.apache.naming.SelectorContext:javax.naming.Context createSubcontext(javax.naming.Name)"
        ]
    },
    "org.apache.naming.resources.ProxyDirContext:javax.naming.Context createSubcontext(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.NamingContextListener:void createNamingContext()",
            "org.apache.catalina.core.NamingContextListener:void createSubcontexts(javax.naming.Context,java.lang.String)",
            "org.apache.catalina.servlets.WebdavServlet:void doMkcol(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.WebdavServlet:boolean copyResource(javax.naming.directory.DirContext,java.util.Hashtable,java.lang.String,java.lang.String)",
            "org.apache.naming.resources.ProxyDirContext:javax.naming.Context createSubcontext(java.lang.String)",
            "org.apache.naming.SelectorContext:javax.naming.Context createSubcontext(java.lang.String)"
        ]
    },
    "org.apache.naming.resources.ProxyDirContext:javax.naming.directory.DirContext createSubcontext(javax.naming.Name,javax.naming.directory.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.resources.ProxyDirContext:javax.naming.directory.DirContext createSubcontext(javax.naming.Name,javax.naming.directory.Attributes)"
        ]
    },
    "org.apache.catalina.core.ApplicationContextFacade:javax.servlet.RequestDispatcher getRequestDispatcher(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.FormAuthenticator:void forwardToLoginPage(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.authenticator.FormAuthenticator:void forwardToErrorPage(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.connector.Request:javax.servlet.RequestDispatcher getRequestDispatcher(java.lang.String)",
            "org.apache.catalina.core.ApplicationHttpRequest:javax.servlet.RequestDispatcher getRequestDispatcher(java.lang.String)",
            "org.apache.catalina.core.AsyncContextImpl:void dispatch(javax.servlet.ServletContext,java.lang.String)",
            "org.apache.catalina.core.StandardHostValve:boolean custom(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.deploy.ErrorPage)",
            "org.apache.catalina.manager.HTMLManagerServlet:void displaySessionsListPage(org.apache.catalina.util.ContextName,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.HTMLManagerServlet:void displaySessionDetailPage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.catalina.util.ContextName,java.lang.String,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:java.lang.String getFileText(java.lang.String,boolean)"
        ]
    },
    "org.apache.catalina.startup.Catalina:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.Embedded:void <init>(org.apache.catalina.Realm)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Embedded:void <init>()"
        ]
    },
    "org.apache.catalina.startup.Bootstrap:void init(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.Bootstrap:void start()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Bootstrap:void main(java.lang.String[])"
        ]
    },
    "org.apache.catalina.startup.Bootstrap:void main(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.naming.NamingContext:void rename(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.SelectorContext:void rename(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.naming.NamingContextBindingsEnumeration:java.lang.Object next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.ManagerServlet:void printResources(java.io.PrintWriter,java.lang.String,javax.naming.Context,java.lang.String,java.lang.Class,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.mbeans.GlobalResourcesLifecycleListener:void createMBeans(java.lang.String,javax.naming.Context)",
            "org.apache.catalina.realm.JNDIRealm:org.apache.catalina.realm.JNDIRealm$User getUserBySearch(javax.naming.directory.DirContext,java.lang.String,java.lang.String[])",
            "org.apache.catalina.realm.JNDIRealm:java.util.List getRoles(javax.naming.directory.DirContext,org.apache.catalina.realm.JNDIRealm$User)",
            "org.apache.catalina.realm.JNDIRealm:java.util.ArrayList addAttributeValues(java.lang.String,javax.naming.directory.Attributes,java.util.ArrayList)",
            "org.apache.naming.resources.DirContextURLConnection:java.util.Map getHeaderFields()",
            "org.apache.naming.resources.DirContextURLConnection:java.lang.String getHeaderField(java.lang.String)"
        ]
    },
    "org.apache.naming.NamingContextBindingsEnumeration:java.lang.Object nextElement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.FormAuthenticator:void saveRequest(org.apache.catalina.connector.Request,org.apache.catalina.Session)",
            "org.apache.catalina.connector.Request:java.util.Map getParameterMap()",
            "org.apache.catalina.connector.Request:void parseLocales()",
            "org.apache.catalina.connector.Response:java.util.Collection getHeaders(java.lang.String)",
            "org.apache.catalina.core.ApplicationContext:void listCollectionPaths(java.util.Set,javax.naming.directory.DirContext,java.lang.String)",
            "org.apache.catalina.core.ApplicationHttpRequest$AttributeNamesEnumerator:java.lang.String findNext()",
            "org.apache.catalina.core.ApplicationRequest:void setRequest(javax.servlet.ServletRequest)",
            "org.apache.catalina.filters.ExpiresFilter:void init(javax.servlet.FilterConfig)",
            "org.apache.catalina.filters.FilterBase:void init(javax.servlet.FilterConfig)",
            "org.apache.catalina.filters.RemoteIpFilter$XForwardedRequest:void <init>(javax.servlet.http.HttpServletRequest)",
            "org.apache.catalina.filters.RemoteIpFilter:void doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.filters.RequestDumperFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.loader.JdbcLeakPrevention:java.util.List clearJdbcDriverRegistrations()",
            "org.apache.catalina.loader.WebappClassLoader:boolean modified()",
            "org.apache.catalina.loader.WebappClassLoader:java.util.Enumeration findResources(java.lang.String)",
            "org.apache.catalina.loader.WebappClassLoader:org.apache.catalina.loader.ResourceEntry findResourceInternal(java.lang.String,java.lang.String)",
            "org.apache.catalina.loader.WebappLoader:void setRepositories()",
            "org.apache.catalina.loader.WebappLoader:boolean copyDir(javax.naming.directory.DirContext,java.io.File)",
            "org.apache.catalina.manager.host.HostManagerServlet:org.apache.tomcat.util.res.StringManager getStringManager(javax.servlet.http.HttpServletRequest)",
            "org.apache.catalina.manager.util.SessionUtils:java.util.Locale guessLocaleFromSession(javax.servlet.http.HttpSession)",
            "org.apache.catalina.manager.util.SessionUtils:java.lang.Object guessUserFromSession(org.apache.catalina.Session)",
            "org.apache.catalina.manager.ManagerServlet:org.apache.tomcat.util.res.StringManager getStringManager(javax.servlet.http.HttpServletRequest)",
            "org.apache.catalina.manager.StatusManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.StatusTransformer:void writeConnectorState(java.io.PrintWriter,javax.management.ObjectName,java.lang.String,javax.management.MBeanServer,java.util.Vector,java.util.Vector,int)",
            "org.apache.catalina.servlets.CGIServlet$CGIEnvironment:boolean setCGIEnvironment(javax.servlet.http.HttpServletRequest)",
            "org.apache.catalina.servlets.CGIServlet$CGIEnvironment:java.lang.String toString()",
            "org.apache.catalina.servlets.CGIServlet$CGIRunner:java.lang.String[] hashToStringArray(java.util.Hashtable)",
            "org.apache.catalina.servlets.CGIServlet:void printServletEnvironment(javax.servlet.ServletOutputStream,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.DefaultServlet:java.io.InputStream renderXml(java.lang.String,org.apache.naming.resources.CacheEntry,java.io.InputStream)",
            "org.apache.catalina.servlets.DefaultServlet:java.io.InputStream renderHtml(java.lang.String,org.apache.naming.resources.CacheEntry)",
            "org.apache.catalina.servlets.WebdavServlet$LockInfo:java.lang.String toString()",
            "org.apache.catalina.servlets.WebdavServlet$LockInfo:void toXML(org.apache.catalina.util.XMLWriter)",
            "org.apache.catalina.servlets.WebdavServlet:void doPropfind(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.WebdavServlet:void doLock(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.WebdavServlet:void doUnlock(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.WebdavServlet:boolean isLocked(java.lang.String,java.lang.String)",
            "org.apache.catalina.servlets.WebdavServlet:boolean copyResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.WebdavServlet:boolean copyResource(javax.naming.directory.DirContext,java.util.Hashtable,java.lang.String,java.lang.String)",
            "org.apache.catalina.servlets.WebdavServlet:void deleteCollection(javax.servlet.http.HttpServletRequest,javax.naming.directory.DirContext,java.lang.String,java.util.Hashtable)",
            "org.apache.catalina.servlets.WebdavServlet:void sendReport(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.util.Hashtable)",
            "org.apache.catalina.servlets.WebdavServlet:void parseProperties(javax.servlet.http.HttpServletRequest,org.apache.catalina.util.XMLWriter,java.lang.String,int,java.util.Vector)",
            "org.apache.catalina.servlets.WebdavServlet:void parseLockNullProperties(javax.servlet.http.HttpServletRequest,org.apache.catalina.util.XMLWriter,java.lang.String,int,java.util.Vector)",
            "org.apache.catalina.servlets.WebdavServlet:boolean generateLockDiscovery(java.lang.String,org.apache.catalina.util.XMLWriter)",
            "org.apache.catalina.session.ManagerBase:java.util.HashMap getSession(java.lang.String)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:void addVariableNames(java.util.Collection)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:java.lang.Object getReqAttributeIgnoreCase(java.lang.String)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:java.lang.String getCGIVariable(java.lang.String)",
            "org.apache.catalina.startup.CatalinaProperties:void loadProperties()",
            "org.apache.catalina.startup.ContextConfig:void processAnnotationsJar(java.net.URL,org.apache.catalina.deploy.WebXml)",
            "org.apache.catalina.startup.ContextConfig:void processAnnotationsJndi(java.net.URL,org.apache.catalina.deploy.WebXml)",
            "org.apache.catalina.startup.ExpandWar:java.lang.String expand(org.apache.catalina.Host,java.net.URL,java.lang.String)",
            "org.apache.catalina.startup.ExpandWar:void validate(org.apache.catalina.Host,java.net.URL,java.lang.String)",
            "org.apache.catalina.startup.TldConfig:void tldScanJar(java.net.JarURLConnection)",
            "org.apache.catalina.startup.UserConfig:void deploy()",
            "org.apache.catalina.util.ExtensionValidator:boolean validateApplication(javax.naming.directory.DirContext,org.apache.catalina.Context)",
            "org.apache.catalina.valves.CrawlerSessionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.naming.factory.BeanFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)",
            "org.apache.naming.factory.MailSessionFactory$1:javax.mail.Session run()",
            "org.apache.naming.factory.SendMailFactory$1:javax.mail.internet.MimePartDataSource run()",
            "org.apache.naming.resources.DirContextURLConnection:java.util.Enumeration list()",
            "org.apache.naming.resources.RecyclableNamingEnumeration:java.lang.Object nextElement()",
            "org.apache.naming.resources.WARDirContext:void loadEntries()",
            "org.apache.naming.HandlerRef:java.lang.String toString()",
            "org.apache.naming.NamingContext:void <init>(java.util.Hashtable,java.lang.String)",
            "org.apache.naming.ResourceRef:java.lang.String toString()",
            "org.apache.naming.ServiceRef:java.lang.String toString()",
            "org.apache.tomcat.util.http.MimeHeaders:java.lang.String toString()",
            "org.apache.tomcat.util.http.Parameters:java.lang.String paramsAsString()",
            "org.apache.tomcat.util.modeler.modules.MbeansDescriptorsIntrospectionSource:org.apache.tomcat.util.modeler.ManagedBean createManagedBean(org.apache.tomcat.util.modeler.Registry,java.lang.String,java.lang.Class,java.lang.String)"
        ]
    },
    "org.apache.naming.NamingContext:void bind(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.NamingContextListener:void createNamingContext()",
            "org.apache.catalina.core.NamingContextListener:void addEjb(org.apache.catalina.deploy.ContextEjb)",
            "org.apache.catalina.core.NamingContextListener:void addEnvironment(org.apache.catalina.deploy.ContextEnvironment)",
            "org.apache.catalina.core.NamingContextListener:void addService(org.apache.catalina.deploy.ContextService)",
            "org.apache.catalina.core.NamingContextListener:void addResource(org.apache.catalina.deploy.ContextResource)",
            "org.apache.catalina.core.NamingContextListener:void addResourceEnvRef(org.apache.catalina.deploy.ContextResourceEnvRef)",
            "org.apache.catalina.core.NamingContextListener:void addResourceLink(org.apache.catalina.deploy.ContextResourceLink)",
            "org.apache.naming.SelectorContext:void bind(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.naming.NamingContext:void rebind(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.SelectorContext:void rebind(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.tomcat.util.modeler.Registry:void loadMetadata(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.ssi.SSIConditional:boolean evaluateArguments(java.lang.String[],java.lang.String[],org.apache.catalina.ssi.SSIMediator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIConditional:long process(org.apache.catalina.ssi.SSIMediator,java.lang.String,java.lang.String[],java.lang.String[],java.io.PrintWriter)"
        ]
    },
    "org.apache.catalina.security.SecurityUtil:void doAsPrivilege(java.lang.String,javax.servlet.Filter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterConfig:void release()",
            "org.apache.catalina.core.ApplicationFilterConfig:void setFilterDef(org.apache.catalina.deploy.FilterDef)"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:void logout()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.tomcat.util.http.fileupload.servlet.ServletFileUpload:org.apache.tomcat.util.http.fileupload.FileItemIterator getItemIterator(javax.servlet.http.HttpServletRequest)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.servlets.CGIServlet$CGIRunner:void access$500(org.apache.catalina.servlets.CGIServlet$CGIRunner,java.io.BufferedReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.CGIServlet$CGIRunner$1:void run()"
        ]
    },
    "org.apache.catalina.startup.ContextConfig:void processServletContainerInitializers(java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void webConfig()"
        ]
    },
    "org.apache.catalina.startup.PasswdUserDatabase:void setUserConfig(org.apache.catalina.startup.UserConfig)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.UserConfig:void deploy()"
        ]
    },
    "org.apache.catalina.servlets.DefaultServlet:void copy(org.apache.naming.resources.CacheEntry,java.io.InputStream,java.io.PrintWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.DefaultServlet:void serveResource(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,boolean)"
        ]
    },
    "org.apache.catalina.util.IOTools:void flow(java.io.Reader,java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIProcessor:long process(java.io.Reader,long,java.io.PrintWriter)"
        ]
    },
    "org.apache.naming.resources.BaseDirContext:void rebind(javax.naming.Name,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.resources.ProxyDirContext:void rebind(javax.naming.Name,java.lang.Object)",
            "org.apache.naming.NamingContext:void bind(javax.naming.Name,java.lang.Object,boolean)",
            "org.apache.naming.SelectorContext:void rebind(javax.naming.Name,java.lang.Object)"
        ]
    },
    "org.apache.naming.resources.ProxyDirContext:void rebind(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.DefaultServlet:void doPut(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.naming.resources.ProxyDirContext:void rebind(java.lang.String,java.lang.Object)",
            "org.apache.naming.SelectorContext:void rebind(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.naming.resources.ProxyDirContext:void rebind(javax.naming.Name,java.lang.Object,javax.naming.directory.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.resources.ProxyDirContext:void rebind(javax.naming.Name,java.lang.Object,javax.naming.directory.Attributes)"
        ]
    },
    "org.apache.naming.resources.BaseDirContext:void bind(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.NamingContextListener:void createNamingContext()",
            "org.apache.catalina.core.NamingContextListener:void addEjb(org.apache.catalina.deploy.ContextEjb)",
            "org.apache.catalina.core.NamingContextListener:void addEnvironment(org.apache.catalina.deploy.ContextEnvironment)",
            "org.apache.catalina.core.NamingContextListener:void addService(org.apache.catalina.deploy.ContextService)",
            "org.apache.catalina.core.NamingContextListener:void addResource(org.apache.catalina.deploy.ContextResource)",
            "org.apache.catalina.core.NamingContextListener:void addResourceEnvRef(org.apache.catalina.deploy.ContextResourceEnvRef)",
            "org.apache.catalina.core.NamingContextListener:void addResourceLink(org.apache.catalina.deploy.ContextResourceLink)",
            "org.apache.catalina.servlets.WebdavServlet:boolean copyResource(javax.naming.directory.DirContext,java.util.Hashtable,java.lang.String,java.lang.String)",
            "org.apache.naming.resources.BaseDirContext:void bind(javax.naming.Name,java.lang.Object)",
            "org.apache.naming.resources.ProxyDirContext:void bind(java.lang.String,java.lang.Object)",
            "org.apache.naming.SelectorContext:void bind(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.naming.resources.BaseDirContext:void bind(javax.naming.Name,java.lang.Object,javax.naming.directory.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.resources.ProxyDirContext:void bind(javax.naming.Name,java.lang.Object,javax.naming.directory.Attributes)"
        ]
    },
    "org.apache.naming.resources.ProxyDirContext:void bind(java.lang.String,java.lang.Object,javax.naming.directory.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.resources.ProxyDirContext:void bind(java.lang.String,java.lang.Object,javax.naming.directory.Attributes)"
        ]
    },
    "org.apache.tomcat.util.net.jsse.JSSESupport:java.lang.Object[] getPeerCertificateChain()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.coyote.http11.InternalInputBuffer:boolean parseHeaders()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.Http11Processor:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.util.LimitedInputStream:void checkLimit()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.util.LimitedInputStream:int read()",
            "org.apache.tomcat.util.http.fileupload.util.LimitedInputStream:int read(byte[],int,int)"
        ]
    },
    "org.apache.catalina.startup.ContextConfig$FragmentJarScannerCallback:void scan(java.net.JarURLConnection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.scan.StandardJarScanner:void process(org.apache.tomcat.JarScannerCallback,java.net.URL)"
        ]
    },
    "org.apache.catalina.startup.TldConfig:org.apache.catalina.startup.XmlErrorHandler tldScanStream(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.TldConfig:void tldScanWebXml()",
            "org.apache.catalina.startup.TldConfig:void tldScanResourcePaths(java.lang.String)",
            "org.apache.catalina.startup.TldConfig:void tldScanDir(java.io.File)",
            "org.apache.catalina.startup.TldConfig:void tldScanJar(java.net.JarURLConnection)"
        ]
    },
    "org.apache.catalina.util.CharsetMapper:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.CharsetMapper:void <init>()"
        ]
    },
    "org.apache.catalina.util.ServerInfo:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:void <clinit>()",
            "org.apache.catalina.core.ApplicationContext:java.lang.String getServerInfo()",
            "org.apache.catalina.core.StandardEngine:void startInternal()",
            "org.apache.catalina.core.StandardServer:java.lang.String getServerInfo()",
            "org.apache.catalina.manager.host.HTMLHostManagerServlet:void list(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.HTMLManagerServlet:void list(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.ManagerServlet:void serverinfo(java.io.PrintWriter,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.StatusManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.DefaultServlet:java.io.InputStream renderHtml(java.lang.String,org.apache.naming.resources.CacheEntry)",
            "org.apache.catalina.util.ServerInfo:java.lang.String getServerInfo()",
            "org.apache.catalina.util.ServerInfo:java.lang.String getServerBuilt()",
            "org.apache.catalina.util.ServerInfo:java.lang.String getServerNumber()",
            "org.apache.catalina.util.ServerInfo:void main(java.lang.String[])",
            "org.apache.catalina.util.ServerInfo:void <clinit>()",
            "org.apache.catalina.valves.ErrorReportValve:void report(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,java.lang.Throwable)",
            "org.apache.catalina.valves.ExtendedAccessLogValve:void open()"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl$FileItemStreamImpl:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.FileUploadBase$FileItemIteratorImpl:boolean findNextItem()"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.IOUtils:void closeQuietly(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.http.fileupload.DeferredFileOutputStream:void writeTo(java.io.OutputStream)"
        ]
    },
    "org.apache.catalina.mbeans.GlobalResourcesLifecycleListener:void createMBeans(java.lang.String,org.apache.catalina.UserDatabase)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.GlobalResourcesLifecycleListener:void createMBeans(java.lang.String,javax.naming.Context)"
        ]
    },
    "org.apache.catalina.mbeans.GlobalResourcesLifecycleListener:void destroyMBeans()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.GlobalResourcesLifecycleListener:void lifecycleEvent(org.apache.catalina.LifecycleEvent)"
        ]
    },
    "org.apache.catalina.connector.Connector:java.lang.String getDomainInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.MapperListener:java.lang.String getDomainInternal()",
            "org.apache.catalina.util.LifecycleMBeanBase:java.lang.String getDomain()"
        ]
    },
    "org.apache.catalina.core.ContainerBase:java.lang.String getDomainInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleMBeanBase:java.lang.String getDomain()"
        ]
    },
    "org.apache.catalina.core.StandardHost:java.lang.String getObjectNameKeyProperties()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleMBeanBase:void initInternal()"
        ]
    },
    "org.apache.catalina.core.StandardServer:java.lang.String getDomainInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleMBeanBase:java.lang.String getDomain()"
        ]
    },
    "org.apache.catalina.core.StandardService:java.lang.String getDomainInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleMBeanBase:java.lang.String getDomain()"
        ]
    },
    "org.apache.catalina.deploy.NamingResources:void addEnvironment(org.apache.catalina.deploy.ContextEnvironment)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.deploy.WebXml:void configureContext(org.apache.catalina.Context)",
            "org.apache.catalina.mbeans.ContextEnvironmentMBean:void setAttribute(javax.management.Attribute)",
            "org.apache.catalina.mbeans.NamingResourcesMBean:java.lang.String addEnvironment(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.catalina.startup.WebAnnotationSet:void addResource(org.apache.catalina.Context,javax.'annotation'.Resource)"
        ]
    },
    "org.apache.catalina.deploy.NamingResources:void addResource(org.apache.catalina.deploy.ContextResource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.deploy.WebXml:void configureContext(org.apache.catalina.Context)",
            "org.apache.catalina.mbeans.ContextResourceMBean:void setAttribute(javax.management.Attribute)",
            "org.apache.catalina.mbeans.NamingResourcesMBean:java.lang.String addResource(java.lang.String,java.lang.String)",
            "org.apache.catalina.startup.WebAnnotationSet:void addResource(org.apache.catalina.Context,javax.'annotation'.Resource)"
        ]
    },
    "org.apache.catalina.deploy.NamingResources:void addResourceLink(org.apache.catalina.deploy.ContextResourceLink)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.ContextResourceLinkMBean:void setAttribute(javax.management.Attribute)",
            "org.apache.catalina.mbeans.NamingResourcesMBean:java.lang.String addResourceLink(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.deploy.NamingResources:void removeEnvironment(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.deploy.NamingResources:void addEnvironment(org.apache.catalina.deploy.ContextEnvironment)",
            "org.apache.catalina.mbeans.ContextEnvironmentMBean:void setAttribute(javax.management.Attribute)",
            "org.apache.catalina.mbeans.NamingResourcesMBean:void removeEnvironment(java.lang.String)"
        ]
    },
    "org.apache.catalina.deploy.NamingResources:void removeResource(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.ContextResourceMBean:void setAttribute(javax.management.Attribute)",
            "org.apache.catalina.mbeans.NamingResourcesMBean:void removeResource(java.lang.String)"
        ]
    },
    "org.apache.catalina.deploy.NamingResources:void removeResourceLink(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.deploy.NamingResources:void addEnvironment(org.apache.catalina.deploy.ContextEnvironment)",
            "org.apache.catalina.mbeans.ContextResourceLinkMBean:void setAttribute(javax.management.Attribute)",
            "org.apache.catalina.mbeans.NamingResourcesMBean:void removeResourceLink(java.lang.String)"
        ]
    },
    "org.apache.catalina.deploy.NamingResources:void destroyInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void destroy()"
        ]
    },
    "org.apache.catalina.deploy.NamingResources:java.lang.String getObjectNameKeyProperties()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleMBeanBase:void initInternal()"
        ]
    },
    "org.apache.catalina.loader.WebappLoader:java.lang.String getDomainInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleMBeanBase:java.lang.String getDomain()"
        ]
    },
    "org.apache.catalina.mbeans.GroupMBean:java.lang.String[] getRoles()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.GroupMBean:java.lang.String[] getUsers()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanFactory:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardServer:void initInternal()",
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createStandardContext(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)",
            "org.apache.catalina.mbeans.MBeanFactory:void removeContext(java.lang.String)",
            "org.apache.catalina.mbeans.MBeanFactory:void <clinit>()"
        ]
    },
    "org.apache.catalina.mbeans.MBeanUtils:java.lang.String createManagedName(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.MBeanUtils:javax.management.DynamicMBean createMBean(org.apache.catalina.deploy.ContextEnvironment)",
            "org.apache.catalina.mbeans.MBeanUtils:javax.management.DynamicMBean createMBean(org.apache.catalina.deploy.ContextResource)",
            "org.apache.catalina.mbeans.MBeanUtils:javax.management.DynamicMBean createMBean(org.apache.catalina.deploy.ContextResourceLink)",
            "org.apache.catalina.mbeans.MBeanUtils:javax.management.DynamicMBean createMBean(org.apache.catalina.Group)",
            "org.apache.catalina.mbeans.MBeanUtils:javax.management.DynamicMBean createMBean(org.apache.catalina.Loader)",
            "org.apache.catalina.mbeans.MBeanUtils:javax.management.DynamicMBean createMBean(org.apache.catalina.mbeans.MBeanFactory)",
            "org.apache.catalina.mbeans.MBeanUtils:javax.management.DynamicMBean createMBean(org.apache.catalina.deploy.NamingResources)",
            "org.apache.catalina.mbeans.MBeanUtils:javax.management.DynamicMBean createMBean(org.apache.catalina.Role)",
            "org.apache.catalina.mbeans.MBeanUtils:javax.management.DynamicMBean createMBean(org.apache.catalina.User)",
            "org.apache.catalina.mbeans.MBeanUtils:javax.management.DynamicMBean createMBean(org.apache.catalina.UserDatabase)",
            "org.apache.catalina.mbeans.MBeanUtils:void destroyMBean(org.apache.catalina.deploy.ContextEnvironment)",
            "org.apache.catalina.mbeans.MBeanUtils:void destroyMBean(org.apache.catalina.deploy.ContextResource)",
            "org.apache.catalina.mbeans.MBeanUtils:void destroyMBean(org.apache.catalina.deploy.ContextResourceLink)",
            "org.apache.catalina.mbeans.MBeanUtils:void destroyMBean(org.apache.catalina.Group)",
            "org.apache.catalina.mbeans.MBeanUtils:void destroyMBean(org.apache.catalina.Loader)",
            "org.apache.catalina.mbeans.MBeanUtils:void destroyMBean(org.apache.catalina.Manager)",
            "org.apache.catalina.mbeans.MBeanUtils:void destroyMBean(org.apache.catalina.deploy.NamingResources)",
            "org.apache.catalina.mbeans.MBeanUtils:void destroyMBean(org.apache.catalina.Realm)",
            "org.apache.catalina.mbeans.MBeanUtils:void destroyMBean(org.apache.catalina.Role)",
            "org.apache.catalina.mbeans.MBeanUtils:void destroyMBean(org.apache.catalina.Server)",
            "org.apache.catalina.mbeans.MBeanUtils:void destroyMBean(org.apache.catalina.Service)",
            "org.apache.catalina.mbeans.MBeanUtils:void destroyMBean(org.apache.catalina.User)",
            "org.apache.catalina.mbeans.MBeanUtils:void destroyMBean(org.apache.catalina.UserDatabase)",
            "org.apache.catalina.mbeans.MBeanUtils:void destroyMBean(org.apache.catalina.Valve,org.apache.catalina.Container)"
        ]
    },
    "org.apache.catalina.mbeans.MBeanUtils:javax.management.DynamicMBean createMBean(org.apache.catalina.deploy.ContextEnvironment)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.deploy.NamingResources:void addEnvironment(org.apache.catalina.deploy.ContextEnvironment)",
            "org.apache.catalina.deploy.NamingResources:void initInternal()"
        ]
    },
    "org.apache.catalina.mbeans.MBeanUtils:javax.management.DynamicMBean createMBean(org.apache.catalina.deploy.ContextResource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.deploy.NamingResources:void addResource(org.apache.catalina.deploy.ContextResource)",
            "org.apache.catalina.deploy.NamingResources:void initInternal()"
        ]
    },
    "org.apache.catalina.mbeans.MBeanUtils:javax.management.DynamicMBean createMBean(org.apache.catalina.deploy.ContextResourceLink)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.deploy.NamingResources:void addResourceLink(org.apache.catalina.deploy.ContextResourceLink)",
            "org.apache.catalina.deploy.NamingResources:void initInternal()"
        ]
    },
    "org.apache.catalina.mbeans.MBeanUtils:javax.management.DynamicMBean createMBean(org.apache.catalina.Group)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.GlobalResourcesLifecycleListener:void createMBeans(java.lang.String,org.apache.catalina.UserDatabase)",
            "org.apache.catalina.mbeans.MemoryUserDatabaseMBean:java.lang.String createGroup(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.mbeans.MBeanUtils:javax.management.DynamicMBean createMBean(org.apache.catalina.Loader)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanUtils:javax.management.DynamicMBean createMBean(org.apache.catalina.mbeans.MBeanFactory)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanUtils:javax.management.DynamicMBean createMBean(org.apache.catalina.deploy.NamingResources)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanUtils:javax.management.DynamicMBean createMBean(org.apache.catalina.Role)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.GlobalResourcesLifecycleListener:void createMBeans(java.lang.String,org.apache.catalina.UserDatabase)",
            "org.apache.catalina.mbeans.MemoryUserDatabaseMBean:java.lang.String createRole(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.mbeans.MBeanUtils:javax.management.DynamicMBean createMBean(org.apache.catalina.User)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.GlobalResourcesLifecycleListener:void createMBeans(java.lang.String,org.apache.catalina.UserDatabase)",
            "org.apache.catalina.mbeans.MemoryUserDatabaseMBean:java.lang.String createUser(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.mbeans.MBeanUtils:javax.management.DynamicMBean createMBean(org.apache.catalina.UserDatabase)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.GlobalResourcesLifecycleListener:void createMBeans(java.lang.String,org.apache.catalina.UserDatabase)"
        ]
    },
    "org.apache.catalina.mbeans.MBeanUtils:javax.management.ObjectName createObjectName(java.lang.String,org.apache.catalina.Valve)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.MBeanUtils:void destroyMBean(org.apache.catalina.Valve,org.apache.catalina.Container)"
        ]
    },
    "org.apache.catalina.mbeans.MBeanUtils:int getSeq(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.MBeanUtils:javax.management.ObjectName createObjectName(java.lang.String,org.apache.catalina.Valve)"
        ]
    },
    "org.apache.catalina.mbeans.MBeanUtils:javax.management.MBeanServer createServer()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.GroupMBean:void <init>()",
            "org.apache.catalina.mbeans.MBeanFactory:void <clinit>()",
            "org.apache.catalina.mbeans.MBeanUtils:void <clinit>()",
            "org.apache.catalina.mbeans.MemoryUserDatabaseMBean:void <init>()",
            "org.apache.catalina.mbeans.RoleMBean:void <init>()",
            "org.apache.catalina.mbeans.UserMBean:void <init>()"
        ]
    },
    "org.apache.catalina.mbeans.MBeanUtils:void destroyMBean(org.apache.catalina.Context)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanUtils:void destroyMBean(org.apache.catalina.deploy.ContextEnvironment)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.deploy.NamingResources:void removeEnvironment(java.lang.String)",
            "org.apache.catalina.deploy.NamingResources:void destroyInternal()"
        ]
    },
    "org.apache.catalina.mbeans.MBeanUtils:void destroyMBean(org.apache.catalina.deploy.ContextResource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.deploy.NamingResources:void removeResource(java.lang.String)",
            "org.apache.catalina.deploy.NamingResources:void destroyInternal()"
        ]
    },
    "org.apache.catalina.mbeans.MBeanUtils:void destroyMBean(org.apache.catalina.deploy.ContextResourceLink)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.deploy.NamingResources:void removeResourceLink(java.lang.String)",
            "org.apache.catalina.deploy.NamingResources:void destroyInternal()"
        ]
    },
    "org.apache.catalina.mbeans.MBeanUtils:void destroyMBean(org.apache.catalina.Engine)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanUtils:void destroyMBean(org.apache.catalina.Group)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.MemoryUserDatabaseMBean:void removeGroup(java.lang.String)"
        ]
    },
    "org.apache.catalina.mbeans.MBeanUtils:void destroyMBean(org.apache.catalina.Host)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanUtils:void destroyMBean(org.apache.catalina.Loader)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanUtils:void destroyMBean(org.apache.catalina.Manager)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanUtils:void destroyMBean(org.apache.catalina.deploy.NamingResources)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanUtils:void destroyMBean(org.apache.catalina.Realm)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanUtils:void destroyMBean(org.apache.catalina.Role)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.MemoryUserDatabaseMBean:void removeRole(java.lang.String)"
        ]
    },
    "org.apache.catalina.mbeans.MBeanUtils:void destroyMBean(org.apache.catalina.Server)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanUtils:void destroyMBean(org.apache.catalina.Service)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanUtils:void destroyMBean(org.apache.catalina.User)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.MemoryUserDatabaseMBean:void removeUser(java.lang.String)"
        ]
    },
    "org.apache.catalina.mbeans.MBeanUtils:void destroyMBean(org.apache.catalina.UserDatabase)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanUtils:void destroyMBeanUserDatabase(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.MBeanUtils:void destroyMBean(org.apache.catalina.deploy.ContextResource)"
        ]
    },
    "org.apache.catalina.mbeans.MBeanUtils:void destroyMBean(org.apache.catalina.Valve,org.apache.catalina.Container)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MemoryUserDatabaseMBean:java.lang.String createGroup(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MemoryUserDatabaseMBean:java.lang.String createRole(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MemoryUserDatabaseMBean:java.lang.String createUser(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MemoryUserDatabaseMBean:java.lang.String findGroup(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.MemoryUserDatabaseMBean:java.lang.String[] getGroups()",
            "org.apache.catalina.mbeans.MemoryUserDatabaseMBean:java.lang.String createGroup(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.mbeans.MemoryUserDatabaseMBean:java.lang.String findRole(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.MemoryUserDatabaseMBean:java.lang.String[] getRoles()",
            "org.apache.catalina.mbeans.MemoryUserDatabaseMBean:java.lang.String createRole(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.mbeans.MemoryUserDatabaseMBean:java.lang.String findUser(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.MemoryUserDatabaseMBean:java.lang.String[] getUsers()",
            "org.apache.catalina.mbeans.MemoryUserDatabaseMBean:java.lang.String createUser(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.mbeans.MemoryUserDatabaseMBean:void removeGroup(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MemoryUserDatabaseMBean:void removeRole(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MemoryUserDatabaseMBean:void removeUser(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.NamingResourcesMBean:java.lang.String[] getEnvironments()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.NamingResourcesMBean:java.lang.String[] getResources()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.NamingResourcesMBean:java.lang.String[] getResourceLinks()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.NamingResourcesMBean:java.lang.String addEnvironment(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.NamingResourcesMBean:java.lang.String addResource(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.NamingResourcesMBean:java.lang.String addResourceLink(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.UserMBean:java.lang.String[] getGroups()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.UserMBean:java.lang.String[] getRoles()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.realm.RealmBase:java.lang.String getObjectNameKeyProperties()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleMBeanBase:void initInternal()"
        ]
    },
    "org.apache.catalina.realm.RealmBase:java.lang.String getDomainInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleMBeanBase:java.lang.String getDomain()"
        ]
    },
    "org.apache.catalina.session.ManagerBase:java.lang.String getDomainInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleMBeanBase:java.lang.String getDomain()"
        ]
    },
    "org.apache.catalina.valves.ValveBase:java.lang.String getObjectNameKeyProperties()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleMBeanBase:void initInternal()"
        ]
    },
    "org.apache.catalina.valves.ValveBase:java.lang.String getDomainInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleMBeanBase:java.lang.String getDomain()"
        ]
    },
    "org.apache.tomcat.util.modeler.Registry:org.apache.tomcat.util.modeler.ManagedBean findManagedBean(java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.modeler.Registry:void registerComponent(java.lang.Object,javax.management.ObjectName,java.lang.String)"
        ]
    },
    "org.apache.catalina.core.DefaultInstanceManager$5:java.lang.Class run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.DefaultInstanceManager$5:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.core.DefaultInstanceManager:java.lang.Class loadClassMaybePrivileged(java.lang.String,java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.DefaultInstanceManager:java.lang.Object newInstance(java.lang.String)"
        ]
    },
    "org.apache.catalina.security.SecurityClassLoad:void securityClassLoad(java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Bootstrap:void init()"
        ]
    },
    "org.apache.catalina.startup.ContextConfig:void processAnnotationsStream(java.io.InputStream,org.apache.catalina.deploy.WebXml)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void processAnnotationsJar(java.net.URL,org.apache.catalina.deploy.WebXml)",
            "org.apache.catalina.startup.ContextConfig:void processAnnotationsJndi(java.net.URL,org.apache.catalina.deploy.WebXml)",
            "org.apache.catalina.startup.ContextConfig:void processAnnotationsFile(java.io.File,org.apache.catalina.deploy.WebXml)"
        ]
    },
    "org.apache.tomcat.util.digester.AbstractRulesImpl:void add(java.lang.String,org.apache.tomcat.util.digester.Rule)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.tomcat.util.digester.Digester:void addRule(java.lang.String,org.apache.tomcat.util.digester.Rule)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.realm.MemoryRuleSet:void addRuleInstances(org.apache.tomcat.util.digester.Digester)",
            "org.apache.catalina.startup.Catalina:org.apache.tomcat.util.digester.Digester createStartDigester()",
            "org.apache.catalina.startup.ContextRuleSet:void addRuleInstances(org.apache.tomcat.util.digester.Digester)",
            "org.apache.catalina.startup.EngineRuleSet:void addRuleInstances(org.apache.tomcat.util.digester.Digester)",
            "org.apache.catalina.startup.HostRuleSet:void addRuleInstances(org.apache.tomcat.util.digester.Digester)",
            "org.apache.catalina.startup.NamingRuleSet:void addRuleInstances(org.apache.tomcat.util.digester.Digester)",
            "org.apache.catalina.startup.TldRuleSet:void addRuleInstances(org.apache.tomcat.util.digester.Digester)",
            "org.apache.catalina.startup.WebRuleSet:void addRuleInstances(org.apache.tomcat.util.digester.Digester)",
            "org.apache.catalina.startup.WebRuleSet:void configureNamingRules(org.apache.tomcat.util.digester.Digester)",
            "org.apache.tomcat.util.digester.Digester:void addCallMethod(java.lang.String,java.lang.String)",
            "org.apache.tomcat.util.digester.Digester:void addCallMethod(java.lang.String,java.lang.String,int)",
            "org.apache.tomcat.util.digester.Digester:void addCallMethod(java.lang.String,java.lang.String,int,java.lang.String[])",
            "org.apache.tomcat.util.digester.Digester:void addCallMethod(java.lang.String,java.lang.String,int,java.lang.Class[])",
            "org.apache.tomcat.util.digester.Digester:void addCallParam(java.lang.String,int)",
            "org.apache.tomcat.util.digester.Digester:void addCallParam(java.lang.String,int,java.lang.String)",
            "org.apache.tomcat.util.digester.Digester:void addCallParam(java.lang.String,int,boolean)",
            "org.apache.tomcat.util.digester.Digester:void addCallParam(java.lang.String,int,int)",
            "org.apache.tomcat.util.digester.Digester:void addCallParamPath(java.lang.String,int)",
            "org.apache.tomcat.util.digester.Digester:void addObjectParam(java.lang.String,int,java.lang.Object)",
            "org.apache.tomcat.util.digester.Digester:void addFactoryCreate(java.lang.String,java.lang.String,boolean)",
            "org.apache.tomcat.util.digester.Digester:void addFactoryCreate(java.lang.String,java.lang.Class,boolean)",
            "org.apache.tomcat.util.digester.Digester:void addFactoryCreate(java.lang.String,java.lang.String,java.lang.String,boolean)",
            "org.apache.tomcat.util.digester.Digester:void addFactoryCreate(java.lang.String,java.lang.Class,java.lang.String,boolean)",
            "org.apache.tomcat.util.digester.Digester:void addFactoryCreate(java.lang.String,org.apache.tomcat.util.digester.ObjectCreationFactory,boolean)",
            "org.apache.tomcat.util.digester.Digester:void addObjectCreate(java.lang.String,java.lang.String)",
            "org.apache.tomcat.util.digester.Digester:void addObjectCreate(java.lang.String,java.lang.Class)",
            "org.apache.tomcat.util.digester.Digester:void addObjectCreate(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.tomcat.util.digester.Digester:void addObjectCreate(java.lang.String,java.lang.String,java.lang.Class)",
            "org.apache.tomcat.util.digester.Digester:void addSetNext(java.lang.String,java.lang.String)",
            "org.apache.tomcat.util.digester.Digester:void addSetNext(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.tomcat.util.digester.Digester:void addSetRoot(java.lang.String,java.lang.String)",
            "org.apache.tomcat.util.digester.Digester:void addSetRoot(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.tomcat.util.digester.Digester:void addSetProperties(java.lang.String)",
            "org.apache.tomcat.util.digester.Digester:void addSetProperties(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.tomcat.util.digester.Digester:void addSetProperties(java.lang.String,java.lang.String[],java.lang.String[])",
            "org.apache.tomcat.util.digester.Digester:void addSetProperty(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.tomcat.util.digester.Digester:void addSetTop(java.lang.String,java.lang.String)",
            "org.apache.tomcat.util.digester.Digester:void addSetTop(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.tomcat.util.digester.RulesBase:void setDigester(org.apache.tomcat.util.digester.Digester)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.digester.Digester:org.apache.tomcat.util.digester.Rules getRules()",
            "org.apache.tomcat.util.digester.Digester:void setRules(org.apache.tomcat.util.digester.Rules)",
            "org.apache.tomcat.util.digester.WithDefaultsRulesWrapper:void setDigester(org.apache.tomcat.util.digester.Digester)"
        ]
    },
    "org.apache.tomcat.util.digester.RulesBase:void add(java.lang.String,org.apache.tomcat.util.digester.Rule)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.digester.Digester:void addRule(java.lang.String,org.apache.tomcat.util.digester.Rule)",
            "org.apache.tomcat.util.digester.WithDefaultsRulesWrapper:void add(java.lang.String,org.apache.tomcat.util.digester.Rule)"
        ]
    },
    "org.apache.tomcat.util.digester.WithDefaultsRulesWrapper:void setDigester(org.apache.tomcat.util.digester.Digester)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.digester.Digester:org.apache.tomcat.util.digester.Rules getRules()",
            "org.apache.tomcat.util.digester.Digester:void setRules(org.apache.tomcat.util.digester.Rules)",
            "org.apache.tomcat.util.digester.WithDefaultsRulesWrapper:void setDigester(org.apache.tomcat.util.digester.Digester)"
        ]
    },
    "org.apache.tomcat.util.digester.WithDefaultsRulesWrapper:void addDefault(org.apache.tomcat.util.digester.Rule)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.tomcat.util.digester.FactoryCreateRule:void begin(java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.digester.Digester:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.tomcat.util.digester.Digester:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.tomcat.util.modeler.ManagedBean:java.lang.reflect.Method getSetter(java.lang.String,org.apache.tomcat.util.modeler.BaseModelMBean,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.modeler.BaseModelMBean:void setAttribute(javax.management.Attribute)"
        ]
    },
    "org.apache.tomcat.util.modeler.ManagedBean:java.lang.reflect.Method getInvoke(java.lang.String,java.lang.Object[],java.lang.String[],org.apache.tomcat.util.modeler.BaseModelMBean,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.modeler.BaseModelMBean:java.lang.Object invoke(java.lang.String,java.lang.Object[],java.lang.String[])"
        ]
    },
    "org.apache.tomcat.util.modeler.ManagedBean:javax.management.DynamicMBean createMBean()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.tomcat.util.modeler.Registry:void registerComponent(java.lang.Object,javax.management.ObjectName,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterConfig:void registerJMX()",
            "org.apache.catalina.core.NamingContextListener:void addResource(org.apache.catalina.deploy.ContextResource)",
            "org.apache.catalina.core.StandardContext:boolean resourcesStart()",
            "org.apache.catalina.core.StandardWrapper:void load()",
            "org.apache.catalina.loader.WebappLoader:void startInternal()",
            "org.apache.catalina.startup.HostConfig:void start()",
            "org.apache.catalina.util.LifecycleMBeanBase:javax.management.ObjectName register(java.lang.Object,java.lang.String)",
            "org.apache.coyote.ajp.AjpAprProtocol$AjpConnectionHandler:void register(org.apache.coyote.ajp.AjpAprProcessor)",
            "org.apache.coyote.ajp.AjpProtocol$AjpConnectionHandler:void register(org.apache.coyote.ajp.AjpProcessor)",
            "org.apache.coyote.http11.Http11AprProtocol$Http11ConnectionHandler$2:java.lang.Void run()",
            "org.apache.coyote.http11.Http11AprProtocol$Http11ConnectionHandler:void register(org.apache.coyote.http11.Http11AprProcessor)",
            "org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler$2:java.lang.Void run()",
            "org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler:void register(org.apache.coyote.http11.Http11NioProcessor)",
            "org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler$2:java.lang.Void run()",
            "org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler:void register(org.apache.coyote.http11.Http11Processor)",
            "org.apache.coyote.AbstractProtocolHandler:void init()",
            "org.apache.tomcat.util.modeler.Registry:void registerComponent(java.lang.Object,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.tomcat.util.net.jsse.JSSESocketFactory:javax.net.ssl.TrustManager[] getTrustManagers()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.net.jsse.JSSESocketFactory:void init()",
            "org.apache.tomcat.util.net.NioEndpoint:void bind()"
        ]
    },
    "org.apache.tomcat.util.digester.SetNextRule:void end(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.digester.Digester:void endElement(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.tomcat.util.digester.SetRootRule:void end(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.digester.Digester:void endElement(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.tomcat.util.digester.SetTopRule:void end(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.digester.Digester:void endElement(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.manager.util.ReverseComparator:int compare(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.util.ReverseComparator:int compare(org.apache.catalina.Session,org.apache.catalina.Session)"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:java.lang.String getRealPath(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.connector.RequestFacade:void removeAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationHttpRequest:void removeAttribute(java.lang.String)",
            "org.apache.catalina.core.ApplicationRequest:void removeAttribute(java.lang.String)"
        ]
    },
    "org.apache.catalina.core.ApplicationHttpRequest:void removeAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationHttpRequest:void removeAttribute(java.lang.String)",
            "org.apache.catalina.core.ApplicationRequest:void removeAttribute(java.lang.String)"
        ]
    },
    "org.apache.catalina.core.ApplicationRequest:void removeAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationHttpRequest:void removeAttribute(java.lang.String)",
            "org.apache.catalina.core.ApplicationRequest:void removeAttribute(java.lang.String)"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:void setAttribute(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void processRequest(javax.servlet.ServletRequest,javax.servlet.ServletResponse,org.apache.catalina.core.ApplicationDispatcher$State)",
            "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)",
            "org.apache.catalina.core.ApplicationHttpRequest:void setAttribute(java.lang.String,java.lang.Object)",
            "org.apache.catalina.core.ApplicationRequest:void setAttribute(java.lang.String,java.lang.Object)",
            "org.apache.catalina.core.StandardContext:boolean fireRequestInitEvent(javax.servlet.ServletRequest)",
            "org.apache.catalina.core.StandardContext:boolean fireRequestDestroyEvent(javax.servlet.ServletRequest)",
            "org.apache.catalina.filters.RemoteIpFilter:void doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.manager.HTMLManagerServlet:void doSessions(org.apache.catalina.util.ContextName,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.HTMLManagerServlet:void displaySessionsListPage(org.apache.catalina.util.ContextName,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.HTMLManagerServlet:void displaySessionDetailPage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.catalina.util.ContextName,java.lang.String,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.servlets.DefaultServlet:boolean checkSendfile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.naming.resources.CacheEntry,long,org.apache.catalina.servlets.DefaultServlet$Range)",
            "org.apache.catalina.ssi.SSIFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.ssi.SSIServlet:void requestHandler(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:void setVariableValue(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.core.ApplicationHttpRequest:void setAttribute(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void doForward(javax.servlet.ServletRequest,javax.servlet.ServletResponse)",
            "org.apache.catalina.core.ApplicationDispatcher:void processRequest(javax.servlet.ServletRequest,javax.servlet.ServletResponse,org.apache.catalina.core.ApplicationDispatcher$State)",
            "org.apache.catalina.core.ApplicationDispatcher:void doInclude(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.DispatcherType)",
            "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)",
            "org.apache.catalina.core.ApplicationHttpRequest:void setAttribute(java.lang.String,java.lang.Object)",
            "org.apache.catalina.core.ApplicationRequest:void setAttribute(java.lang.String,java.lang.Object)",
            "org.apache.catalina.core.StandardContext:boolean fireRequestInitEvent(javax.servlet.ServletRequest)",
            "org.apache.catalina.core.StandardContext:boolean fireRequestDestroyEvent(javax.servlet.ServletRequest)",
            "org.apache.catalina.filters.RemoteIpFilter:void doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.manager.HTMLManagerServlet:void doSessions(org.apache.catalina.util.ContextName,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.HTMLManagerServlet:void displaySessionsListPage(org.apache.catalina.util.ContextName,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.HTMLManagerServlet:void displaySessionDetailPage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.catalina.util.ContextName,java.lang.String,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.servlets.DefaultServlet:boolean checkSendfile(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.naming.resources.CacheEntry,long,org.apache.catalina.servlets.DefaultServlet$Range)",
            "org.apache.catalina.ssi.SSIFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.ssi.SSIServlet:void requestHandler(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:void setVariableValue(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.core.ApplicationRequest:void setAttribute(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void processRequest(javax.servlet.ServletRequest,javax.servlet.ServletResponse,org.apache.catalina.core.ApplicationDispatcher$State)",
            "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)",
            "org.apache.catalina.core.ApplicationHttpRequest:void setAttribute(java.lang.String,java.lang.Object)",
            "org.apache.catalina.core.ApplicationRequest:void setAttribute(java.lang.String,java.lang.Object)",
            "org.apache.catalina.core.StandardContext:boolean fireRequestInitEvent(javax.servlet.ServletRequest)",
            "org.apache.catalina.core.StandardContext:boolean fireRequestDestroyEvent(javax.servlet.ServletRequest)"
        ]
    },
    "org.apache.catalina.core.StandardWrapperValve:void exception(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardWrapperValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardWrapperValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)"
        ]
    },
    "org.apache.catalina.ssi.SSIServletExternalResolver:void setVariableValue(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIMediator:void setVariableValue(java.lang.String,java.lang.String)",
            "org.apache.catalina.ssi.SSIMediator:void setDateVariables(boolean)"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:javax.servlet.ServletContext getServletContext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.filters.WebdavFixFilter:void log(javax.servlet.ServletRequest,java.lang.String)"
        ]
    },
    "org.apache.catalina.filters.WebdavFixFilter:void log(javax.servlet.ServletRequest,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.filters.WebdavFixFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:java.lang.String getPathTranslated()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.CGIServlet:void printServletEnvironment(javax.servlet.ServletOutputStream,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:java.lang.String getCGIVariable(java.lang.String)"
        ]
    },
    "org.apache.catalina.core.ApplicationContextFacade:javax.servlet.ServletContext getContext(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIServletExternalResolver:org.apache.catalina.ssi.SSIServletExternalResolver$ServletContextAndPath getServletContextAndPathFromVirtualPath(java.lang.String)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:boolean isRootContext(javax.servlet.ServletContext)"
        ]
    },
    "org.apache.catalina.ssi.SSIServletExternalResolver:boolean isRootContext(javax.servlet.ServletContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIServletExternalResolver:org.apache.catalina.ssi.SSIServletExternalResolver$ServletContextAndPath getServletContextAndPathFromVirtualPath(java.lang.String)"
        ]
    },
    "org.apache.catalina.ssi.SSIFilter:void init(javax.servlet.FilterConfig)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterConfig:void initFilter()"
        ]
    },
    "org.apache.catalina.core.ApplicationSessionCookieConfig:java.lang.String getSessionCookieName(org.apache.catalina.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:void parseSessionCookiesId(org.apache.coyote.Request,org.apache.catalina.connector.Request)",
            "org.apache.catalina.core.ApplicationSessionCookieConfig:javax.servlet.http.Cookie createSessionCookie(org.apache.catalina.Context,java.lang.String,boolean)"
        ]
    },
    "org.apache.catalina.core.ApplicationSessionCookieConfig:java.lang.String getSessionUriParamName(org.apache.catalina.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean postParseRequest(org.apache.coyote.Request,org.apache.catalina.connector.Request,org.apache.coyote.Response,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.Response:boolean doIsEncodeable(org.apache.catalina.connector.Request,org.apache.catalina.Session,java.lang.String)",
            "org.apache.catalina.connector.Response:java.lang.String toEncoded(java.lang.String,java.lang.String)",
            "org.apache.catalina.realm.RealmBase:boolean hasUserDataPermission(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.deploy.SecurityConstraint[])"
        ]
    },
    "org.apache.catalina.core.StandardWrapper:void unavailable(javax.servlet.UnavailableException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void invoke(javax.servlet.ServletRequest,javax.servlet.ServletResponse,org.apache.catalina.core.ApplicationDispatcher$State)",
            "org.apache.catalina.core.StandardWrapper:javax.servlet.Servlet loadServlet()",
            "org.apache.catalina.core.StandardWrapper:void initServlet(javax.servlet.Servlet)",
            "org.apache.catalina.core.StandardWrapperValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.core.StandardWrapperFacade:javax.servlet.ServletContext getServletContext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardWrapperFacade:javax.servlet.ServletContext getServletContext()"
        ]
    },
    "org.apache.catalina.session.FileStore:int getSize()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.session.FileStore:java.lang.String[] keys()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.FileStore:void clear()",
            "org.apache.catalina.session.PersistentManagerBase$PrivilegedStoreKeys:java.lang.String[] run()",
            "org.apache.catalina.session.PersistentManagerBase:void load()",
            "org.apache.catalina.session.StoreBase:void processExpires()"
        ]
    },
    "org.apache.catalina.session.FileStore:java.io.File file(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.FileStore:org.apache.catalina.Session load(java.lang.String)",
            "org.apache.catalina.session.FileStore:void remove(java.lang.String)",
            "org.apache.catalina.session.FileStore:void save(org.apache.catalina.Session)"
        ]
    },
    "org.apache.catalina.session.StandardSessionFacade:javax.servlet.ServletContext getServletContext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.StandardSessionFacade:javax.servlet.ServletContext getServletContext()"
        ]
    },
    "org.apache.catalina.core.ApplicationContextFacade:javax.servlet.FilterRegistration$Dynamic addFilter(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.ApplicationContextFacade:javax.servlet.FilterRegistration$Dynamic addFilter(java.lang.String,javax.servlet.Filter)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.ApplicationContextFacade:javax.servlet.FilterRegistration$Dynamic addFilter(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.session.ManagerBase:void changeSessionId(org.apache.catalina.Session)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void register(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,java.security.Principal,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.session.StandardSession:void putValue(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.session.StandardSessionFacade:void setAttribute(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Request:void setUserPrincipal(java.security.Principal)",
            "org.apache.catalina.filters.CsrfPreventionFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.security.SecurityUtil:void execute(java.lang.reflect.Method,java.lang.Object,java.lang.Object[],java.security.Principal)",
            "org.apache.catalina.session.StandardSessionFacade:void setAttribute(java.lang.String,java.lang.Object)",
            "org.apache.catalina.session.StandardSessionFacade:void putValue(java.lang.String,java.lang.Object)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)"
        ]
    },
    "org.apache.catalina.session.StandardSessionFacade:void putValue(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.session.StandardSession:void removeAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.HTMLManagerServlet:boolean removeSessionAttribute(org.apache.catalina.util.ContextName,java.lang.String,java.lang.String,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.session.StandardSession:void removeValue(java.lang.String)",
            "org.apache.catalina.session.StandardSession:void setAttribute(java.lang.String,java.lang.Object,boolean)",
            "org.apache.catalina.session.StandardSessionFacade:void removeAttribute(java.lang.String)",
            "org.apache.catalina.session.StandardSessionFacade:void removeValue(java.lang.String)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void lifecycleEvent(org.apache.catalina.LifecycleEvent)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)"
        ]
    },
    "org.apache.catalina.session.StandardSession:void writeObjectData(java.io.ObjectOutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.FileStore:void save(org.apache.catalina.Session)",
            "org.apache.catalina.session.JDBCStore:void save(org.apache.catalina.Session)",
            "org.apache.catalina.session.StandardManager:void doUnload()"
        ]
    },
    "org.apache.catalina.core.ApplicationContext:javax.servlet.Filter createFilter(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationContextFacade:javax.servlet.Filter createFilter(java.lang.Class)"
        ]
    },
    "org.apache.catalina.core.ApplicationContext:javax.servlet.Servlet createServlet(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationContextFacade:javax.servlet.Servlet createServlet(java.lang.Class)"
        ]
    },
    "org.apache.catalina.core.ApplicationContext:void addListener(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationContextFacade:void addListener(java.lang.String)"
        ]
    },
    "org.apache.catalina.core.ApplicationContext:java.util.EventListener createListener(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationContext:void addListener(java.lang.Class)",
            "org.apache.catalina.core.ApplicationContextFacade:java.util.EventListener createListener(java.lang.Class)"
        ]
    },
    "org.apache.catalina.realm.LockOutRealm:java.security.Principal authenticate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.DigestAuthenticator:java.security.Principal findPrincipal(org.apache.catalina.connector.Request,java.lang.String,org.apache.catalina.Realm)",
            "org.apache.catalina.realm.CombinedRealm:java.security.Principal authenticate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.realm.CombinedRealm:java.security.Principal authenticate(java.security.cert.X509Certificate[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.SSLAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.realm.CombinedRealm:java.security.Principal authenticate(java.security.cert.X509Certificate[])",
            "org.apache.catalina.realm.LockOutRealm:java.security.Principal authenticate(java.security.cert.X509Certificate[])"
        ]
    },
    "org.apache.naming.resources.ProxyDirContext:javax.naming.Context createSubcontext(javax.naming.Name)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.resources.ProxyDirContext:javax.naming.Context createSubcontext(javax.naming.Name)",
            "org.apache.naming.SelectorContext:javax.naming.Context createSubcontext(javax.naming.Name)"
        ]
    },
    "org.apache.catalina.startup.Embedded:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.ssi.SSIConditional:long process(org.apache.catalina.ssi.SSIMediator,java.lang.String,java.lang.String[],java.lang.String[],java.io.PrintWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIProcessor:long process(java.io.Reader,long,java.io.PrintWriter)"
        ]
    },
    "org.apache.catalina.core.ApplicationFilterConfig:void release()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:boolean filterStop()"
        ]
    },
    "org.apache.catalina.servlets.CGIServlet$CGIRunner$1:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.AsyncContextImpl$RunnableWrapper:void run()",
            "org.apache.catalina.core.AsyncContextImpl:void doInternalDispatch()",
            "org.apache.catalina.core.ContainerBase:void threadStart()",
            "org.apache.catalina.core.StandardThreadExecutor:void execute(java.lang.Runnable)",
            "org.apache.catalina.servlets.CGIServlet$CGIRunner:void run()",
            "org.apache.coyote.AsyncStateMachine:void asyncRun(java.lang.Runnable)",
            "org.apache.tomcat.util.http.fileupload.FileCleaningTracker:void addTracker(java.lang.String,java.lang.Object,org.apache.tomcat.util.http.fileupload.FileDeleteStrategy)",
            "org.apache.tomcat.util.net.AprEndpoint:void startInternal()",
            "org.apache.tomcat.util.net.JIoEndpoint:void startInternal()",
            "org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller:boolean events()",
            "org.apache.tomcat.util.net.NioEndpoint$Poller:boolean events()",
            "org.apache.tomcat.util.net.NioEndpoint:void startInternal()",
            "org.apache.tomcat.util.net.SecureNioChannel:javax.net.ssl.SSLEngineResult$HandshakeStatus tasks()",
            "org.apache.tomcat.util.threads.ThreadPoolExecutor:void execute(java.lang.Runnable,long,java.util.concurrent.TimeUnit)"
        ]
    },
    "org.apache.naming.resources.ProxyDirContext:void rebind(javax.naming.Name,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.resources.ProxyDirContext:void rebind(javax.naming.Name,java.lang.Object)",
            "org.apache.naming.NamingContext:void bind(javax.naming.Name,java.lang.Object,boolean)",
            "org.apache.naming.SelectorContext:void rebind(javax.naming.Name,java.lang.Object)"
        ]
    },
    "org.apache.naming.resources.BaseDirContext:void bind(javax.naming.Name,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.resources.ProxyDirContext:void bind(javax.naming.Name,java.lang.Object)",
            "org.apache.naming.NamingContext:void bind(javax.naming.Name,java.lang.Object,boolean)",
            "org.apache.naming.SelectorContext:void bind(javax.naming.Name,java.lang.Object)"
        ]
    },
    "org.apache.naming.resources.ProxyDirContext:void bind(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.NamingContextListener:void createNamingContext()",
            "org.apache.catalina.core.NamingContextListener:void addEjb(org.apache.catalina.deploy.ContextEjb)",
            "org.apache.catalina.core.NamingContextListener:void addEnvironment(org.apache.catalina.deploy.ContextEnvironment)",
            "org.apache.catalina.core.NamingContextListener:void addService(org.apache.catalina.deploy.ContextService)",
            "org.apache.catalina.core.NamingContextListener:void addResource(org.apache.catalina.deploy.ContextResource)",
            "org.apache.catalina.core.NamingContextListener:void addResourceEnvRef(org.apache.catalina.deploy.ContextResourceEnvRef)",
            "org.apache.catalina.core.NamingContextListener:void addResourceLink(org.apache.catalina.deploy.ContextResourceLink)",
            "org.apache.catalina.servlets.DefaultServlet:void doPut(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.WebdavServlet:boolean copyResource(javax.naming.directory.DirContext,java.util.Hashtable,java.lang.String,java.lang.String)",
            "org.apache.naming.resources.ProxyDirContext:void bind(java.lang.String,java.lang.Object)",
            "org.apache.naming.SelectorContext:void bind(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.naming.resources.ProxyDirContext:void bind(javax.naming.Name,java.lang.Object,javax.naming.directory.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.resources.ProxyDirContext:void bind(javax.naming.Name,java.lang.Object,javax.naming.directory.Attributes)"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.util.LimitedInputStream:int read()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardServer:void await()",
            "org.apache.catalina.servlets.CGIServlet$HTTPHeaderInputStream:int read()"
        ]
    },
    "org.apache.tomcat.util.http.fileupload.util.LimitedInputStream:int read(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Request:int readPostBody(byte[],int)",
            "org.apache.catalina.connector.Request:byte[] readChunkedPostBody()",
            "org.apache.catalina.loader.WebappClassLoader:void clearReferencesJdbc()",
            "org.apache.catalina.loader.WebappClassLoader:org.apache.catalina.loader.ResourceEntry findResourceInternal(java.lang.String,java.lang.String)",
            "org.apache.coyote.ajp.AjpProcessor:boolean read(byte[],int,int)",
            "org.apache.coyote.http11.InternalInputBuffer:boolean fill(boolean)",
            "org.apache.naming.resources.ProxyDirContext:void cacheLoad(org.apache.naming.resources.CacheEntry)",
            "org.apache.tomcat.util.http.fileupload.ByteArrayOutputStream:int write(java.io.InputStream)",
            "org.apache.tomcat.util.http.fileupload.MultipartStream$ItemInputStream:int makeAvailable()",
            "org.apache.tomcat.util.http.fileupload.MultipartStream:byte readByte()"
        ]
    },
    "org.apache.catalina.startup.TldConfig:void tldScanDir(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.TldConfig:void tldScanDir(java.io.File)",
            "org.apache.catalina.startup.TldConfig:void access$200(org.apache.catalina.startup.TldConfig,java.io.File)"
        ]
    },
    "org.apache.catalina.util.CharsetMapper:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:org.apache.catalina.util.CharsetMapper getCharsetMapper()"
        ]
    },
    "org.apache.catalina.connector.CoyoteAdapter:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Connector:void initInternal()",
            "org.apache.catalina.connector.CoyoteAdapter:boolean event(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean postParseRequest(org.apache.coyote.Request,org.apache.catalina.connector.Request,org.apache.coyote.Response,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:void parsePathParameters(org.apache.coyote.Request,org.apache.catalina.connector.Request)",
            "org.apache.catalina.connector.CoyoteAdapter:void parseSessionSslId(org.apache.catalina.connector.Request)",
            "org.apache.catalina.connector.CoyoteAdapter:void parseSessionCookiesId(org.apache.coyote.Request,org.apache.catalina.connector.Request)",
            "org.apache.catalina.connector.CoyoteAdapter:void convertURI(org.apache.tomcat.util.buf.MessageBytes,org.apache.catalina.connector.Request)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean normalize(org.apache.tomcat.util.buf.MessageBytes)",
            "org.apache.catalina.connector.CoyoteAdapter:void <clinit>()"
        ]
    },
    "org.apache.catalina.core.ApplicationContext:java.lang.String getServerInfo()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationContextFacade:java.lang.String getServerInfo()",
            "org.apache.catalina.servlets.CGIServlet:void printServletEnvironment(javax.servlet.ServletOutputStream,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:java.lang.String getCGIVariable(java.lang.String)"
        ]
    },
    "org.apache.catalina.core.StandardServer:java.lang.String getServerInfo()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.manager.ManagerServlet:void serverinfo(java.io.PrintWriter,org.apache.tomcat.util.res.StringManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.ManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.util.ServerInfo:java.lang.String getServerInfo()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:void <clinit>()",
            "org.apache.catalina.core.ApplicationContext:java.lang.String getServerInfo()",
            "org.apache.catalina.core.StandardEngine:void startInternal()",
            "org.apache.catalina.core.StandardServer:java.lang.String getServerInfo()",
            "org.apache.catalina.manager.host.HTMLHostManagerServlet:void list(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.HTMLManagerServlet:void list(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.ManagerServlet:void serverinfo(java.io.PrintWriter,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.StatusManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.DefaultServlet:java.io.InputStream renderHtml(java.lang.String,org.apache.naming.resources.CacheEntry)",
            "org.apache.catalina.util.ServerInfo:void main(java.lang.String[])",
            "org.apache.catalina.valves.ErrorReportValve:void report(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,java.lang.Throwable)",
            "org.apache.catalina.valves.ExtendedAccessLogValve:void open()"
        ]
    },
    "org.apache.catalina.util.ServerInfo:java.lang.String getServerBuilt()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.ServerInfo:void main(java.lang.String[])"
        ]
    },
    "org.apache.catalina.util.ServerInfo:java.lang.String getServerNumber()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.ServerInfo:void main(java.lang.String[])"
        ]
    },
    "org.apache.catalina.util.ServerInfo:void main(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.valves.ErrorReportValve:void report(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.valves.ExtendedAccessLogValve:void open()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.valves.AccessLogValve:boolean rotate(java.lang.String)",
            "org.apache.catalina.valves.AccessLogValve:void log(java.lang.String)",
            "org.apache.catalina.valves.AccessLogValve:void startInternal()"
        ]
    },
    "org.apache.catalina.connector.MapperListener:java.lang.String getDomainInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleMBeanBase:java.lang.String getDomain()"
        ]
    },
    "org.apache.catalina.util.LifecycleMBeanBase:java.lang.String getDomain()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:java.lang.String getDomain()",
            "org.apache.catalina.core.NamingContextListener:javax.management.ObjectName createObjectName(org.apache.catalina.deploy.ContextResource)",
            "org.apache.catalina.core.StandardContext:boolean resourcesStart()",
            "org.apache.catalina.core.StandardContext:boolean resourcesStop()",
            "org.apache.catalina.core.StandardService:void initInternal()",
            "org.apache.catalina.deploy.NamingResources:java.lang.String getDomainInternal()",
            "org.apache.catalina.util.LifecycleMBeanBase:javax.management.ObjectName register(java.lang.Object,java.lang.String)"
        ]
    },
    "org.apache.catalina.mbeans.ContextEnvironmentMBean:void setAttribute(javax.management.Attribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.modeler.BaseModelMBean:void setAttribute(javax.management.Attribute)",
            "org.apache.tomcat.util.modeler.BaseModelMBean:javax.management.AttributeList setAttributes(javax.management.AttributeList)"
        ]
    },
    "org.apache.catalina.mbeans.ContextResourceMBean:void setAttribute(javax.management.Attribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.modeler.BaseModelMBean:void setAttribute(javax.management.Attribute)",
            "org.apache.tomcat.util.modeler.BaseModelMBean:javax.management.AttributeList setAttributes(javax.management.AttributeList)"
        ]
    },
    "org.apache.catalina.mbeans.ContextResourceLinkMBean:void setAttribute(javax.management.Attribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.modeler.BaseModelMBean:void setAttribute(javax.management.Attribute)",
            "org.apache.tomcat.util.modeler.BaseModelMBean:javax.management.AttributeList setAttributes(javax.management.AttributeList)"
        ]
    },
    "org.apache.catalina.mbeans.NamingResourcesMBean:void removeEnvironment(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.NamingResourcesMBean:void removeResource(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.NamingResourcesMBean:void removeResourceLink(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MemoryUserDatabaseMBean:java.lang.String[] getGroups()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MemoryUserDatabaseMBean:java.lang.String[] getRoles()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MemoryUserDatabaseMBean:java.lang.String[] getUsers()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.DefaultInstanceManager$5:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.DefaultInstanceManager:java.lang.Class loadClassMaybePrivileged(java.lang.String,java.lang.ClassLoader)"
        ]
    },
    "org.apache.catalina.startup.ContextConfig:void processAnnotationsFile(java.io.File,org.apache.catalina.deploy.WebXml)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void processAnnotationsUrl(java.net.URL,org.apache.catalina.deploy.WebXml)",
            "org.apache.catalina.startup.ContextConfig:void processAnnotationsFile(java.io.File,org.apache.catalina.deploy.WebXml)"
        ]
    },
    "org.apache.catalina.realm.MemoryRuleSet:void addRuleInstances(org.apache.tomcat.util.digester.Digester)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.digester.Digester:void addRuleSet(org.apache.tomcat.util.digester.RuleSet)"
        ]
    },
    "org.apache.catalina.startup.Catalina:org.apache.tomcat.util.digester.Digester createStartDigester()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Catalina:void load()"
        ]
    },
    "org.apache.catalina.startup.ContextRuleSet:void addRuleInstances(org.apache.tomcat.util.digester.Digester)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.digester.Digester:void addRuleSet(org.apache.tomcat.util.digester.RuleSet)"
        ]
    },
    "org.apache.catalina.startup.EngineRuleSet:void addRuleInstances(org.apache.tomcat.util.digester.Digester)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.digester.Digester:void addRuleSet(org.apache.tomcat.util.digester.RuleSet)"
        ]
    },
    "org.apache.catalina.startup.HostRuleSet:void addRuleInstances(org.apache.tomcat.util.digester.Digester)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.digester.Digester:void addRuleSet(org.apache.tomcat.util.digester.RuleSet)"
        ]
    },
    "org.apache.catalina.startup.NamingRuleSet:void addRuleInstances(org.apache.tomcat.util.digester.Digester)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.digester.Digester:void addRuleSet(org.apache.tomcat.util.digester.RuleSet)"
        ]
    },
    "org.apache.catalina.startup.TldRuleSet:void addRuleInstances(org.apache.tomcat.util.digester.Digester)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.digester.Digester:void addRuleSet(org.apache.tomcat.util.digester.RuleSet)"
        ]
    },
    "org.apache.catalina.startup.WebRuleSet:void addRuleInstances(org.apache.tomcat.util.digester.Digester)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.digester.Digester:void addRuleSet(org.apache.tomcat.util.digester.RuleSet)"
        ]
    },
    "org.apache.catalina.startup.WebRuleSet:void configureNamingRules(org.apache.tomcat.util.digester.Digester)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.WebRuleSet:void addRuleInstances(org.apache.tomcat.util.digester.Digester)"
        ]
    },
    "org.apache.tomcat.util.digester.Digester:void addCallMethod(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.WebRuleSet:void addRuleInstances(org.apache.tomcat.util.digester.Digester)"
        ]
    },
    "org.apache.tomcat.util.digester.Digester:void addCallMethod(java.lang.String,java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextRuleSet:void addRuleInstances(org.apache.tomcat.util.digester.Digester)",
            "org.apache.catalina.startup.HostRuleSet:void addRuleInstances(org.apache.tomcat.util.digester.Digester)",
            "org.apache.catalina.startup.WebRuleSet:void addRuleInstances(org.apache.tomcat.util.digester.Digester)",
            "org.apache.catalina.startup.WebRuleSet:void configureNamingRules(org.apache.tomcat.util.digester.Digester)",
            "org.apache.catalina.startup.WebRuleSet:void configureInjectionRules(org.apache.tomcat.util.digester.Digester,java.lang.String)",
            "org.apache.tomcat.util.modeler.modules.MbeansDescriptorsDigesterSource:org.apache.tomcat.util.digester.Digester createDigester(org.apache.tomcat.util.modeler.Registry)"
        ]
    },
    "org.apache.tomcat.util.digester.Digester:void addCallMethod(java.lang.String,java.lang.String,int,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.tomcat.util.digester.Digester:void addCallMethod(java.lang.String,java.lang.String,int,java.lang.Class[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.tomcat.util.digester.Digester:void addCallParam(java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.WebRuleSet:void addRuleInstances(org.apache.tomcat.util.digester.Digester)",
            "org.apache.catalina.startup.WebRuleSet:void configureNamingRules(org.apache.tomcat.util.digester.Digester)",
            "org.apache.catalina.startup.WebRuleSet:void configureInjectionRules(org.apache.tomcat.util.digester.Digester,java.lang.String)"
        ]
    },
    "org.apache.tomcat.util.digester.Digester:void addCallParam(java.lang.String,int,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.tomcat.util.digester.Digester:void addCallParam(java.lang.String,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.tomcat.util.digester.Digester:void addCallParam(java.lang.String,int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.tomcat.util.digester.Digester:void addCallParamPath(java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.tomcat.util.digester.Digester:void addObjectParam(java.lang.String,int,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.tomcat.util.digester.Digester:void addFactoryCreate(java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.digester.Digester:void addFactoryCreate(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.tomcat.util.digester.Digester:void addFactoryCreate(java.lang.String,java.lang.Class,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.digester.Digester:void addFactoryCreate(java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.tomcat.util.digester.Digester:void addFactoryCreate(java.lang.String,java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.digester.Digester:void addFactoryCreate(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.tomcat.util.digester.Digester:void addFactoryCreate(java.lang.String,java.lang.Class,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.digester.Digester:void addFactoryCreate(java.lang.String,java.lang.Class,java.lang.String)"
        ]
    },
    "org.apache.tomcat.util.digester.Digester:void addFactoryCreate(java.lang.String,org.apache.tomcat.util.digester.ObjectCreationFactory,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.users.MemoryUserDatabase:void open()",
            "org.apache.tomcat.util.digester.Digester:void addFactoryCreate(java.lang.String,org.apache.tomcat.util.digester.ObjectCreationFactory)"
        ]
    },
    "org.apache.tomcat.util.digester.Digester:void addObjectCreate(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Catalina:org.apache.tomcat.util.digester.Digester createStartDigester()",
            "org.apache.catalina.startup.ContextRuleSet:void addRuleInstances(org.apache.tomcat.util.digester.Digester)",
            "org.apache.catalina.startup.NamingRuleSet:void addRuleInstances(org.apache.tomcat.util.digester.Digester)",
            "org.apache.catalina.startup.WebRuleSet:void addRuleInstances(org.apache.tomcat.util.digester.Digester)",
            "org.apache.catalina.startup.WebRuleSet:void configureNamingRules(org.apache.tomcat.util.digester.Digester)",
            "org.apache.tomcat.util.modeler.modules.MbeansDescriptorsDigesterSource:org.apache.tomcat.util.digester.Digester createDigester(org.apache.tomcat.util.modeler.Registry)"
        ]
    },
    "org.apache.tomcat.util.digester.Digester:void addObjectCreate(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.tomcat.util.digester.Digester:void addObjectCreate(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Catalina:org.apache.tomcat.util.digester.Digester createStartDigester()",
            "org.apache.catalina.startup.Catalina:org.apache.tomcat.util.digester.Digester createStopDigester()",
            "org.apache.catalina.startup.ClusterRuleSetFactory$DefaultClusterRuleSet:void addRuleInstances(org.apache.tomcat.util.digester.Digester)",
            "org.apache.catalina.startup.ContextRuleSet:void addRuleInstances(org.apache.tomcat.util.digester.Digester)",
            "org.apache.catalina.startup.EngineRuleSet:void addRuleInstances(org.apache.tomcat.util.digester.Digester)",
            "org.apache.catalina.startup.HostConfig:org.apache.tomcat.util.digester.Digester createDigester()",
            "org.apache.catalina.startup.HostRuleSet:void addRuleInstances(org.apache.tomcat.util.digester.Digester)",
            "org.apache.catalina.startup.RealmRuleSet:void addRuleInstances(org.apache.tomcat.util.digester.Digester)"
        ]
    },
    "org.apache.tomcat.util.digester.Digester:void addObjectCreate(java.lang.String,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.tomcat.util.digester.Digester:void addSetNext(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.tomcat.util.digester.Digester:void addSetNext(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Catalina:org.apache.tomcat.util.digester.Digester createStartDigester()",
            "org.apache.catalina.startup.Catalina:org.apache.tomcat.util.digester.Digester createStopDigester()",
            "org.apache.catalina.startup.ClusterRuleSetFactory$DefaultClusterRuleSet:void addRuleInstances(org.apache.tomcat.util.digester.Digester)",
            "org.apache.catalina.startup.ContextRuleSet:void addRuleInstances(org.apache.tomcat.util.digester.Digester)",
            "org.apache.catalina.startup.EngineRuleSet:void addRuleInstances(org.apache.tomcat.util.digester.Digester)",
            "org.apache.catalina.startup.HostRuleSet:void addRuleInstances(org.apache.tomcat.util.digester.Digester)",
            "org.apache.catalina.startup.RealmRuleSet:void addRuleInstances(org.apache.tomcat.util.digester.Digester)",
            "org.apache.catalina.startup.WebRuleSet:void addRuleInstances(org.apache.tomcat.util.digester.Digester)",
            "org.apache.catalina.startup.WebRuleSet:void configureNamingRules(org.apache.tomcat.util.digester.Digester)",
            "org.apache.tomcat.util.modeler.modules.MbeansDescriptorsDigesterSource:org.apache.tomcat.util.digester.Digester createDigester(org.apache.tomcat.util.modeler.Registry)"
        ]
    },
    "org.apache.tomcat.util.digester.Digester:void addSetRoot(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.tomcat.util.digester.Digester:void addSetRoot(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.tomcat.util.digester.Digester:void addSetProperties(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Catalina:org.apache.tomcat.util.digester.Digester createStartDigester()",
            "org.apache.catalina.startup.Catalina:org.apache.tomcat.util.digester.Digester createStopDigester()",
            "org.apache.catalina.startup.ClusterRuleSetFactory$DefaultClusterRuleSet:void addRuleInstances(org.apache.tomcat.util.digester.Digester)",
            "org.apache.catalina.startup.ContextRuleSet:void addRuleInstances(org.apache.tomcat.util.digester.Digester)",
            "org.apache.catalina.startup.EngineRuleSet:void addRuleInstances(org.apache.tomcat.util.digester.Digester)",
            "org.apache.catalina.startup.HostConfig:org.apache.tomcat.util.digester.Digester createDigester()",
            "org.apache.catalina.startup.HostRuleSet:void addRuleInstances(org.apache.tomcat.util.digester.Digester)",
            "org.apache.catalina.startup.NamingRuleSet:void addRuleInstances(org.apache.tomcat.util.digester.Digester)",
            "org.apache.catalina.startup.RealmRuleSet:void addRuleInstances(org.apache.tomcat.util.digester.Digester)",
            "org.apache.tomcat.util.modeler.modules.MbeansDescriptorsDigesterSource:org.apache.tomcat.util.digester.Digester createDigester(org.apache.tomcat.util.modeler.Registry)"
        ]
    },
    "org.apache.tomcat.util.digester.Digester:void addSetProperties(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.tomcat.util.digester.Digester:void addSetProperties(java.lang.String,java.lang.String[],java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.tomcat.util.digester.Digester:void addSetProperty(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.tomcat.util.digester.Digester:void addSetTop(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.tomcat.util.digester.Digester:void addSetTop(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.tomcat.util.digester.Digester:org.apache.tomcat.util.digester.Rules getRules()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.digester.Digester:java.lang.String getRuleNamespaceURI()",
            "org.apache.tomcat.util.digester.Digester:void setRuleNamespaceURI(java.lang.String)",
            "org.apache.tomcat.util.digester.Digester:void endDocument()",
            "org.apache.tomcat.util.digester.Digester:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.tomcat.util.digester.Digester:void addRule(java.lang.String,org.apache.tomcat.util.digester.Rule)"
        ]
    },
    "org.apache.tomcat.util.digester.Digester:void setRules(org.apache.tomcat.util.digester.Rules)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.tomcat.util.digester.WithDefaultsRulesWrapper:void add(java.lang.String,org.apache.tomcat.util.digester.Rule)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.digester.Digester:void addRule(java.lang.String,org.apache.tomcat.util.digester.Rule)",
            "org.apache.tomcat.util.digester.WithDefaultsRulesWrapper:void add(java.lang.String,org.apache.tomcat.util.digester.Rule)"
        ]
    },
    "org.apache.tomcat.util.modeler.BaseModelMBean:void setAttribute(javax.management.Attribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.ContextEnvironmentMBean:void setAttribute(javax.management.Attribute)",
            "org.apache.tomcat.util.modeler.BaseModelMBean:void setAttribute(javax.management.Attribute)",
            "org.apache.tomcat.util.modeler.BaseModelMBean:javax.management.AttributeList setAttributes(javax.management.AttributeList)"
        ]
    },
    "org.apache.tomcat.util.modeler.BaseModelMBean:java.lang.Object invoke(java.lang.String,java.lang.Object[],java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.modeler.BaseModelMBean:java.lang.Object invoke(java.lang.String,java.lang.Object[],java.lang.String[])"
        ]
    },
    "org.apache.catalina.core.ApplicationFilterConfig:void registerJMX()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterConfig:void initFilter()"
        ]
    },
    "org.apache.catalina.util.LifecycleMBeanBase:javax.management.ObjectName register(java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardServer:void initInternal()",
            "org.apache.catalina.util.LifecycleMBeanBase:void initInternal()"
        ]
    },
    "org.apache.coyote.ajp.AjpAprProtocol$AjpConnectionHandler:void register(org.apache.coyote.ajp.AjpAprProcessor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.ajp.AjpAprProtocol$AjpConnectionHandler:org.apache.coyote.ajp.AjpAprProcessor createProcessor()"
        ]
    },
    "org.apache.coyote.ajp.AjpProtocol$AjpConnectionHandler:void register(org.apache.coyote.ajp.AjpProcessor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.ajp.AjpProtocol$AjpConnectionHandler:org.apache.coyote.ajp.AjpProcessor createProcessor()"
        ]
    },
    "org.apache.coyote.http11.Http11AprProtocol$Http11ConnectionHandler$2:java.lang.Void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.Http11AprProtocol$Http11ConnectionHandler$2:java.lang.Object run()"
        ]
    },
    "org.apache.coyote.http11.Http11AprProtocol$Http11ConnectionHandler:void register(org.apache.coyote.http11.Http11AprProcessor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.Http11AprProtocol$Http11ConnectionHandler:org.apache.coyote.http11.Http11AprProcessor createProcessor()"
        ]
    },
    "org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler$2:java.lang.Void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler$2:java.lang.Object run()"
        ]
    },
    "org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler:void register(org.apache.coyote.http11.Http11NioProcessor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler:org.apache.coyote.http11.Http11NioProcessor createProcessor()"
        ]
    },
    "org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler$2:java.lang.Void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler$2:java.lang.Object run()"
        ]
    },
    "org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler:void register(org.apache.coyote.http11.Http11Processor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler:org.apache.coyote.http11.Http11Processor createProcessor()"
        ]
    },
    "org.apache.tomcat.util.modeler.Registry:void registerComponent(java.lang.Object,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.tomcat.util.net.jsse.JSSESocketFactory:void init()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.net.jsse.JSSESocketFactory:java.net.ServerSocket createSocket(int)",
            "org.apache.tomcat.util.net.jsse.JSSESocketFactory:java.net.ServerSocket createSocket(int,int)",
            "org.apache.tomcat.util.net.jsse.JSSESocketFactory:java.net.ServerSocket createSocket(int,int,java.net.InetAddress)"
        ]
    },
    "org.apache.catalina.ssi.SSIMediator:void setVariableValue(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIMediator:void setDateVariables(boolean)",
            "org.apache.catalina.ssi.SSISet:long process(org.apache.catalina.ssi.SSIMediator,java.lang.String,java.lang.String[],java.lang.String[],java.io.PrintWriter)"
        ]
    },
    "org.apache.catalina.connector.Response:boolean doIsEncodeable(org.apache.catalina.connector.Request,org.apache.catalina.Session,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Response:boolean isEncodeable(java.lang.String)",
            "org.apache.catalina.connector.Response:boolean access$000(org.apache.catalina.connector.Response,org.apache.catalina.connector.Request,org.apache.catalina.Session,java.lang.String)"
        ]
    },
    "org.apache.catalina.connector.Response:java.lang.String toEncoded(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Response:java.lang.String encodeRedirectURL(java.lang.String)",
            "org.apache.catalina.connector.Response:java.lang.String encodeURL(java.lang.String)"
        ]
    },
    "org.apache.catalina.realm.RealmBase:boolean hasUserDataPermission(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.deploy.SecurityConstraint[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.session.FileStore:void clear()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase$PrivilegedStoreClear:java.lang.Void run()",
            "org.apache.catalina.session.PersistentManagerBase:void clearStore()"
        ]
    },
    "org.apache.catalina.session.PersistentManagerBase$PrivilegedStoreKeys:java.lang.String[] run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase$PrivilegedStoreKeys:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.session.FileStore:org.apache.catalina.Session load(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase$PrivilegedStoreLoad:org.apache.catalina.Session run()",
            "org.apache.catalina.session.PersistentManagerBase:org.apache.catalina.Session swapIn(java.lang.String)",
            "org.apache.catalina.session.StoreBase:void processExpires()",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.session.FileStore:void remove(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.FileStore:void clear()",
            "org.apache.catalina.session.PersistentManagerBase$PrivilegedStoreRemove:java.lang.Void run()",
            "org.apache.catalina.session.PersistentManagerBase:void removeSession(java.lang.String)",
            "org.apache.catalina.session.StoreBase:void processExpires()",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.session.FileStore:void save(org.apache.catalina.Session)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase$PrivilegedStoreSave:java.lang.Void run()",
            "org.apache.catalina.session.PersistentManagerBase:void writeSession(org.apache.catalina.Session)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.session.StandardSession:void removeValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.session.StandardSessionFacade:void removeAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.HTMLManagerServlet:boolean removeSessionAttribute(org.apache.catalina.util.ContextName,java.lang.String,java.lang.String,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.session.StandardSessionFacade:void removeAttribute(java.lang.String)",
            "org.apache.catalina.session.StandardSessionFacade:void removeValue(java.lang.String)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void lifecycleEvent(org.apache.catalina.LifecycleEvent)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)"
        ]
    },
    "org.apache.catalina.session.StandardSessionFacade:void removeValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.ApplicationContextFacade:javax.servlet.Filter createFilter(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.ApplicationContextFacade:javax.servlet.Servlet createServlet(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.ApplicationContextFacade:void addListener(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.ApplicationContext:void addListener(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationContextFacade:void addListener(java.lang.Class)"
        ]
    },
    "org.apache.catalina.core.ApplicationContextFacade:java.util.EventListener createListener(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.realm.LockOutRealm:java.security.Principal authenticate(java.security.cert.X509Certificate[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.SSLAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.realm.CombinedRealm:java.security.Principal authenticate(java.security.cert.X509Certificate[])"
        ]
    },
    "org.apache.catalina.core.StandardContext:boolean filterStop()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext$4:java.lang.Void call()"
        ]
    },
    "org.apache.naming.resources.ProxyDirContext:void bind(javax.naming.Name,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.naming.resources.ProxyDirContext:void bind(javax.naming.Name,java.lang.Object)",
            "org.apache.naming.NamingContext:void bind(javax.naming.Name,java.lang.Object,boolean)",
            "org.apache.naming.SelectorContext:void bind(javax.naming.Name,java.lang.Object)"
        ]
    },
    "org.apache.catalina.startup.TldConfig:void access$200(org.apache.catalina.startup.TldConfig,java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.TldConfig$TldJarScannerCallback:void scan(java.io.File)"
        ]
    },
    "org.apache.catalina.core.StandardContext:org.apache.catalina.util.CharsetMapper getCharsetMapper()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Response:void setLocale(java.util.Locale)",
            "org.apache.catalina.core.StandardContext:void addLocaleEncodingMappingParameter(java.lang.String,java.lang.String)",
            "org.apache.catalina.core.StandardContext:void startInternal()"
        ]
    },
    "org.apache.catalina.connector.CoyoteAdapter:void parsePathParameters(org.apache.coyote.Request,org.apache.catalina.connector.Request)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean postParseRequest(org.apache.coyote.Request,org.apache.catalina.connector.Request,org.apache.coyote.Response,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.connector.CoyoteAdapter:void convertURI(org.apache.tomcat.util.buf.MessageBytes,org.apache.catalina.connector.Request)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean postParseRequest(org.apache.coyote.Request,org.apache.catalina.connector.Request,org.apache.coyote.Response,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.connector.CoyoteAdapter:boolean normalize(org.apache.tomcat.util.buf.MessageBytes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean postParseRequest(org.apache.coyote.Request,org.apache.catalina.connector.Request,org.apache.coyote.Response,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.core.ApplicationContextFacade:java.lang.String getServerInfo()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.CGIServlet:void printServletEnvironment(javax.servlet.ServletOutputStream,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:java.lang.String getCGIVariable(java.lang.String)"
        ]
    },
    "org.apache.catalina.connector.CoyoteAdapter:java.lang.String getDomain()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.AbstractProtocolHandler:javax.management.ObjectName createObjectName()"
        ]
    },
    "org.apache.catalina.core.NamingContextListener:javax.management.ObjectName createObjectName(org.apache.catalina.deploy.ContextResource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.NamingContextListener:void addResource(org.apache.catalina.deploy.ContextResource)"
        ]
    },
    "org.apache.catalina.deploy.NamingResources:java.lang.String getDomainInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleMBeanBase:java.lang.String getDomain()"
        ]
    },
    "org.apache.tomcat.util.modeler.BaseModelMBean:javax.management.AttributeList setAttributes(javax.management.AttributeList)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.tomcat.util.digester.Digester:void addRuleSet(org.apache.tomcat.util.digester.RuleSet)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.realm.JAASMemoryLoginModule:void load()",
            "org.apache.catalina.realm.MemoryRealm:org.apache.tomcat.util.digester.Digester getDigester()",
            "org.apache.catalina.startup.Catalina:org.apache.tomcat.util.digester.Digester createStartDigester()",
            "org.apache.catalina.startup.ContextConfig:org.apache.tomcat.util.digester.Digester createContextDigester()",
            "org.apache.catalina.startup.ContextRuleSet:void addRuleInstances(org.apache.tomcat.util.digester.Digester)",
            "org.apache.catalina.startup.DigesterFactory:org.apache.tomcat.util.digester.Digester newDigester(boolean,boolean,org.apache.tomcat.util.digester.RuleSet)",
            "org.apache.catalina.startup.EngineRuleSet:void addRuleInstances(org.apache.tomcat.util.digester.Digester)",
            "org.apache.catalina.startup.HostRuleSet:void addRuleInstances(org.apache.tomcat.util.digester.Digester)"
        ]
    },
    "org.apache.catalina.startup.WebRuleSet:void configureInjectionRules(org.apache.tomcat.util.digester.Digester,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.WebRuleSet:void configureNamingRules(org.apache.tomcat.util.digester.Digester)"
        ]
    },
    "org.apache.tomcat.util.modeler.modules.MbeansDescriptorsDigesterSource:org.apache.tomcat.util.digester.Digester createDigester(org.apache.tomcat.util.modeler.Registry)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.modeler.modules.MbeansDescriptorsDigesterSource:void execute()"
        ]
    },
    "org.apache.tomcat.util.digester.Digester:void addFactoryCreate(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.tomcat.util.digester.Digester:void addFactoryCreate(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.tomcat.util.digester.Digester:void addFactoryCreate(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.tomcat.util.digester.Digester:void addFactoryCreate(java.lang.String,java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.users.MemoryUserDatabase:void open()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.users.MemoryUserDatabaseFactory:java.lang.Object getObjectInstance(java.lang.Object,javax.naming.Name,javax.naming.Context,java.util.Hashtable)"
        ]
    },
    "org.apache.tomcat.util.digester.Digester:void addFactoryCreate(java.lang.String,org.apache.tomcat.util.digester.ObjectCreationFactory)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.Catalina:org.apache.tomcat.util.digester.Digester createStopDigester()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Catalina:void stopServer(java.lang.String[])"
        ]
    },
    "org.apache.catalina.startup.ClusterRuleSetFactory$DefaultClusterRuleSet:void addRuleInstances(org.apache.tomcat.util.digester.Digester)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.digester.Digester:void addRuleSet(org.apache.tomcat.util.digester.RuleSet)"
        ]
    },
    "org.apache.catalina.startup.HostConfig:org.apache.tomcat.util.digester.Digester createDigester()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.HostConfig:void <clinit>()"
        ]
    },
    "org.apache.catalina.startup.RealmRuleSet:void addRuleInstances(org.apache.tomcat.util.digester.Digester)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.digester.Digester:void addRuleSet(org.apache.tomcat.util.digester.RuleSet)"
        ]
    },
    "org.apache.tomcat.util.digester.Digester:java.lang.String getRuleNamespaceURI()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.digester.Digester:void addRuleSet(org.apache.tomcat.util.digester.RuleSet)"
        ]
    },
    "org.apache.tomcat.util.digester.Digester:void setRuleNamespaceURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.digester.Digester:void addRuleSet(org.apache.tomcat.util.digester.RuleSet)"
        ]
    },
    "org.apache.tomcat.util.digester.Digester:void endDocument()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.coyote.ajp.AjpAprProtocol$AjpConnectionHandler:org.apache.coyote.ajp.AjpAprProcessor createProcessor()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.ajp.AjpAprProtocol$AjpConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)"
        ]
    },
    "org.apache.coyote.ajp.AjpProtocol$AjpConnectionHandler:org.apache.coyote.ajp.AjpProcessor createProcessor()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.ajp.AjpProtocol$AjpConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)"
        ]
    },
    "org.apache.coyote.http11.Http11AprProtocol$Http11ConnectionHandler$2:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.Http11AprProtocol$Http11ConnectionHandler:void register(org.apache.coyote.http11.Http11AprProcessor)"
        ]
    },
    "org.apache.coyote.http11.Http11AprProtocol$Http11ConnectionHandler:org.apache.coyote.http11.Http11AprProcessor createProcessor()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.Http11AprProtocol$Http11ConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper)"
        ]
    },
    "org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler$2:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler:void register(org.apache.coyote.http11.Http11NioProcessor)"
        ]
    },
    "org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler:org.apache.coyote.http11.Http11NioProcessor createProcessor()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.NioChannel)"
        ]
    },
    "org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler$2:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler:void register(org.apache.coyote.http11.Http11Processor)"
        ]
    },
    "org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler:org.apache.coyote.http11.Http11Processor createProcessor()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler:org.apache.tomcat.util.net.AbstractEndpoint$Handler$SocketState process(org.apache.tomcat.util.net.SocketWrapper,org.apache.tomcat.util.net.SocketStatus)"
        ]
    },
    "org.apache.tomcat.util.net.jsse.JSSESocketFactory:java.net.ServerSocket createSocket(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.tomcat.util.net.jsse.JSSESocketFactory:java.net.ServerSocket createSocket(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.net.JIoEndpoint:void bind()"
        ]
    },
    "org.apache.tomcat.util.net.jsse.JSSESocketFactory:java.net.ServerSocket createSocket(int,int,java.net.InetAddress)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.net.JIoEndpoint:void bind()"
        ]
    },
    "org.apache.catalina.connector.Response:boolean access$000(org.apache.catalina.connector.Response,org.apache.catalina.connector.Request,org.apache.catalina.Session,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Response$2:java.lang.Boolean run()"
        ]
    },
    "org.apache.catalina.session.PersistentManagerBase$PrivilegedStoreClear:java.lang.Void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase$PrivilegedStoreClear:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.session.PersistentManagerBase:void clearStore()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.session.PersistentManagerBase$PrivilegedStoreKeys:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase:void load()"
        ]
    },
    "org.apache.catalina.session.PersistentManagerBase$PrivilegedStoreLoad:org.apache.catalina.Session run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase$PrivilegedStoreLoad:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.session.PersistentManagerBase$PrivilegedStoreRemove:java.lang.Void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase$PrivilegedStoreRemove:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.session.PersistentManagerBase:void removeSession(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase:void remove(org.apache.catalina.Session,boolean)",
            "org.apache.catalina.session.PersistentManagerBase:org.apache.catalina.Session swapIn(java.lang.String)"
        ]
    },
    "org.apache.catalina.core.ApplicationContextFacade:void addListener(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.TldConfig$TldJarScannerCallback:void scan(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.scan.StandardJarScanner:void process(org.apache.tomcat.JarScannerCallback,java.net.URL)"
        ]
    },
    "org.apache.catalina.connector.Response:void setLocale(java.util.Locale)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.ResponseFacade:void setLocale(java.util.Locale)",
            "org.apache.catalina.core.ApplicationHttpResponse:void setLocale(java.util.Locale)",
            "org.apache.catalina.core.ApplicationResponse:void setLocale(java.util.Locale)"
        ]
    },
    "org.apache.catalina.core.StandardContext:void addLocaleEncodingMappingParameter(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.deploy.WebXml:void configureContext(org.apache.catalina.Context)"
        ]
    },
    "org.apache.coyote.AbstractProtocolHandler:javax.management.ObjectName createObjectName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.coyote.AbstractProtocolHandler:void init()"
        ]
    },
    "org.apache.catalina.realm.JAASMemoryLoginModule:void load()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.realm.JAASMemoryLoginModule:void initialize(javax.security.auth.Subject,javax.security.auth.callback.CallbackHandler,java.util.Map,java.util.Map)"
        ]
    },
    "org.apache.catalina.realm.MemoryRealm:org.apache.tomcat.util.digester.Digester getDigester()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.realm.MemoryRealm:void startInternal()"
        ]
    },
    "org.apache.catalina.startup.ContextConfig:org.apache.tomcat.util.digester.Digester createContextDigester()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void init()"
        ]
    },
    "org.apache.catalina.startup.DigesterFactory:org.apache.tomcat.util.digester.Digester newDigester(boolean,boolean,org.apache.tomcat.util.digester.RuleSet)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void createWebXmlDigester(boolean,boolean)",
            "org.apache.catalina.startup.DigesterFactory:org.apache.tomcat.util.digester.Digester newDigester()",
            "org.apache.catalina.startup.DigesterFactory:org.apache.tomcat.util.digester.Digester newDigester(org.apache.tomcat.util.digester.RuleSet)",
            "org.apache.catalina.startup.TldConfig:org.apache.tomcat.util.digester.Digester createTldDigester(boolean,boolean)"
        ]
    },
    "org.apache.tomcat.util.modeler.modules.MbeansDescriptorsDigesterSource:void execute()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.modeler.modules.MbeansDescriptorsDigesterSource:java.util.List loadDescriptors(org.apache.tomcat.util.modeler.Registry,java.lang.String,java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.catalina.startup.HostConfig:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.host.HostManagerServlet:void add(java.io.PrintWriter,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean,boolean,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.mbeans.ContainerMBean:void addChild(java.lang.String,java.lang.String)",
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createStandardHost(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)",
            "org.apache.catalina.startup.HostConfig:void lifecycleEvent(org.apache.catalina.LifecycleEvent)",
            "org.apache.catalina.startup.HostConfig:java.lang.String[] filterAppPaths(java.lang.String[])",
            "org.apache.catalina.startup.HostConfig:void deployDescriptor(org.apache.catalina.util.ContextName,java.io.File,java.lang.String)",
            "org.apache.catalina.startup.HostConfig:void deployWARs(java.io.File,java.lang.String[])",
            "org.apache.catalina.startup.HostConfig:void deployWAR(org.apache.catalina.util.ContextName,java.io.File,java.lang.String)",
            "org.apache.catalina.startup.HostConfig:void deployDirectory(org.apache.catalina.util.ContextName,java.io.File,java.lang.String)",
            "org.apache.catalina.startup.HostConfig:void addWatchedResources(org.apache.catalina.startup.HostConfig$DeployedApplication,java.lang.String,org.apache.catalina.Context)",
            "org.apache.catalina.startup.HostConfig:void checkResources(org.apache.catalina.startup.HostConfig$DeployedApplication)",
            "org.apache.catalina.startup.HostConfig:void start()",
            "org.apache.catalina.startup.HostConfig:void stop()",
            "org.apache.catalina.startup.HostConfig:void <clinit>()"
        ]
    },
    "org.apache.tomcat.util.net.JIoEndpoint:void bind()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.net.AbstractEndpoint:void init()",
            "org.apache.tomcat.util.net.AbstractEndpoint:void start()"
        ]
    },
    "org.apache.catalina.connector.Response$2:java.lang.Boolean run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Response$2:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.session.PersistentManagerBase$PrivilegedStoreClear:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase:void clearStore()"
        ]
    },
    "org.apache.catalina.session.PersistentManagerBase$PrivilegedStoreLoad:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase:org.apache.catalina.Session swapIn(java.lang.String)"
        ]
    },
    "org.apache.catalina.session.PersistentManagerBase$PrivilegedStoreRemove:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase:void removeSession(java.lang.String)"
        ]
    },
    "org.apache.catalina.session.PersistentManagerBase:void remove(org.apache.catalina.Session,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.ManagerBase:void remove(org.apache.catalina.Session)",
            "org.apache.catalina.session.StandardSession:void expire(boolean)"
        ]
    },
    "org.apache.catalina.connector.ResponseFacade:void setLocale(java.util.Locale)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationHttpResponse:void setLocale(java.util.Locale)",
            "org.apache.catalina.core.ApplicationResponse:void setLocale(java.util.Locale)"
        ]
    },
    "org.apache.catalina.core.ApplicationHttpResponse:void setLocale(java.util.Locale)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationHttpResponse:void setLocale(java.util.Locale)",
            "org.apache.catalina.core.ApplicationResponse:void setLocale(java.util.Locale)"
        ]
    },
    "org.apache.catalina.core.ApplicationResponse:void setLocale(java.util.Locale)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationHttpResponse:void setLocale(java.util.Locale)",
            "org.apache.catalina.core.ApplicationResponse:void setLocale(java.util.Locale)"
        ]
    },
    "org.apache.catalina.realm.JAASMemoryLoginModule:void initialize(javax.security.auth.Subject,javax.security.auth.callback.CallbackHandler,java.util.Map,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.ContextConfig:void createWebXmlDigester(boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void configureStart()"
        ]
    },
    "org.apache.catalina.startup.DigesterFactory:org.apache.tomcat.util.digester.Digester newDigester()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.DigesterFactory:org.apache.tomcat.util.digester.Digester newDigester(org.apache.tomcat.util.digester.RuleSet)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.TldConfig:org.apache.tomcat.util.digester.Digester createTldDigester(boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.TldConfig:void init()"
        ]
    },
    "org.apache.tomcat.util.modeler.modules.MbeansDescriptorsDigesterSource:java.util.List loadDescriptors(org.apache.tomcat.util.modeler.Registry,java.lang.String,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.tomcat.util.modeler.Registry:java.util.List load(java.lang.String,java.lang.Object,java.lang.String)"
        ]
    },
    "org.apache.catalina.startup.HostConfig:java.lang.String[] filterAppPaths(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.HostConfig:void deployApps()"
        ]
    },
    "org.apache.catalina.startup.HostConfig:void addWatchedResources(org.apache.catalina.startup.HostConfig$DeployedApplication,java.lang.String,org.apache.catalina.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.HostConfig:void deployDescriptor(org.apache.catalina.util.ContextName,java.io.File,java.lang.String)",
            "org.apache.catalina.startup.HostConfig:void deployWAR(org.apache.catalina.util.ContextName,java.io.File,java.lang.String)",
            "org.apache.catalina.startup.HostConfig:void deployDirectory(org.apache.catalina.util.ContextName,java.io.File,java.lang.String)",
            "org.apache.catalina.startup.HostConfig:void manageApp(org.apache.catalina.Context)"
        ]
    },
    "org.apache.catalina.startup.HostConfig:void stop()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.HostConfig:void lifecycleEvent(org.apache.catalina.LifecycleEvent)"
        ]
    },
    "org.apache.catalina.connector.Response$2:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Response:boolean isEncodeable(java.lang.String)"
        ]
    },
    "org.apache.catalina.session.ManagerBase:void remove(org.apache.catalina.Session)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase:void removeSuper(org.apache.catalina.Session)",
            "org.apache.catalina.session.StandardSession:void setId(java.lang.String)"
        ]
    },
    "org.apache.catalina.startup.TldConfig:void init()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.TldConfig:void lifecycleEvent(org.apache.catalina.LifecycleEvent)"
        ]
    },
    "org.apache.catalina.session.PersistentManagerBase:void removeSuper(org.apache.catalina.Session)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    }
}
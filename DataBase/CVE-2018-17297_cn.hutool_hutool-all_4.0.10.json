{
    "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File,java.nio.charset.Charset)": {
        "isVulRoot": true,
        "vulCaller": [
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.nio.charset.Charset)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.lang.String,java.lang.String,java.nio.charset.Charset)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File)"
        ]
    },
    "cn.hutool.core.util.ZipUtil:void validateFiles(java.io.File,java.io.File[])": {
        "isVulRoot": true,
        "vulCaller": [
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])"
        ]
    },
    "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset,boolean,java.io.File[])": {
        "isVulRoot": true,
        "vulCaller": [
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset)",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.lang.String,java.lang.String,java.nio.charset.Charset,boolean)",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,boolean,java.io.File[])"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.io.File file(java.lang.String)": {
        "isVulRoot": true,
        "vulCaller": [
            "cn.hutool.core.io.file.FileCopier:cn.hutool.core.io.file.FileCopier create(java.lang.String,java.lang.String)",
            "cn.hutool.core.io.file.FileReader:void <init>(java.lang.String,java.nio.charset.Charset)",
            "cn.hutool.core.io.file.FileReader:void <init>(java.lang.String,java.lang.String)",
            "cn.hutool.core.io.file.FileWriter:void <init>(java.lang.String,java.nio.charset.Charset)",
            "cn.hutool.core.io.file.FileWriter:void <init>(java.lang.String,java.lang.String)",
            "cn.hutool.core.io.FileTypeUtil:java.lang.String getTypeByPath(java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.File[] ls(java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.util.List loopFiles(java.lang.String,java.io.FileFilter)",
            "cn.hutool.core.io.FileUtil:java.util.List loopFiles(java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.File getTmpDir()",
            "cn.hutool.core.io.FileUtil:java.io.File getUserHomeDir()",
            "cn.hutool.core.io.FileUtil:boolean exist(java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.File touch(java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.File mkParentDirs(java.lang.String)",
            "cn.hutool.core.io.FileUtil:boolean del(java.lang.String)",
            "cn.hutool.core.io.FileUtil:boolean clean(java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.File mkdir(java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.File copy(java.lang.String,java.lang.String,boolean)",
            "cn.hutool.core.io.FileUtil:boolean isDirectory(java.lang.String)",
            "cn.hutool.core.io.FileUtil:boolean isFile(java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.BufferedInputStream getInputStream(java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.BufferedReader getReader(java.lang.String,java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.BufferedReader getReader(java.lang.String,java.nio.charset.Charset)",
            "cn.hutool.core.io.FileUtil:byte[] readBytes(java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.lang.String readString(java.lang.String,java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.lang.String readString(java.lang.String,java.nio.charset.Charset)",
            "cn.hutool.core.io.FileUtil:java.util.Collection readLines(java.lang.String,java.lang.String,java.util.Collection)",
            "cn.hutool.core.io.FileUtil:java.util.Collection readLines(java.lang.String,java.nio.charset.Charset,java.util.Collection)",
            "cn.hutool.core.io.FileUtil:java.lang.Object load(cn.hutool.core.io.file.FileReader$ReaderHandler,java.lang.String,java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.lang.Object load(java.lang.String,java.lang.String,cn.hutool.core.io.file.FileReader$ReaderHandler)",
            "cn.hutool.core.io.FileUtil:java.lang.Object load(java.lang.String,java.nio.charset.Charset,cn.hutool.core.io.file.FileReader$ReaderHandler)",
            "cn.hutool.core.io.FileUtil:java.io.File writeLines(java.util.Collection,java.lang.String,java.lang.String,boolean)",
            "cn.hutool.core.io.FileUtil:java.io.File writeLines(java.util.Collection,java.lang.String,java.nio.charset.Charset,boolean)",
            "cn.hutool.core.io.resource.FileResource:void <init>(java.lang.String)",
            "cn.hutool.core.text.csv.CsvWriter:void <init>(java.lang.String)",
            "cn.hutool.core.text.csv.CsvWriter:void <init>(java.lang.String,java.nio.charset.Charset)",
            "cn.hutool.core.text.csv.CsvWriter:void <init>(java.lang.String,java.nio.charset.Charset,boolean)",
            "cn.hutool.core.text.csv.CsvWriter:void <init>(java.lang.String,java.nio.charset.Charset,boolean,cn.hutool.core.text.csv.CsvWriteConfig)",
            "cn.hutool.core.util.XmlUtil:org.w3c.dom.Document readXML(java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.lang.String,java.nio.charset.Charset)",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.lang.String,java.lang.String,java.nio.charset.Charset,boolean)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.lang.String,java.nio.charset.Charset)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.lang.String,java.lang.String,java.nio.charset.Charset)",
            "cn.hutool.http.HttpResponse:long writeBody(java.lang.String)",
            "cn.hutool.http.HttpUtil:long downloadFile(java.lang.String,java.lang.String)",
            "cn.hutool.poi.excel.ExcelReader:void <init>(java.lang.String,int)",
            "cn.hutool.poi.excel.ExcelWriter:void <init>(java.lang.String,java.lang.String)",
            "cn.hutool.poi.excel.sax.AbstractExcelSaxReader:java.lang.Object read(java.lang.String)",
            "cn.hutool.poi.excel.sax.AbstractExcelSaxReader:java.lang.Object read(java.lang.String,int)",
            "cn.hutool.poi.excel.WorkbookUtil:org.apache.poi.ss.usermodel.Workbook loadBook(java.lang.String)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.io.File file(java.io.File,java.lang.String)": {
        "isVulRoot": true,
        "vulCaller": [
            "cn.hutool.core.io.file.FileCopier:java.io.File copy()",
            "cn.hutool.core.io.FileUtil:java.io.File touch(java.io.File,java.lang.String)",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.nio.charset.Charset)",
            "cn.hutool.http.HttpResponse:long writeBody(java.io.File,cn.hutool.core.io.StreamProgress)"
        ]
    },
    "cn.hutool.core.collection.IterUtil:java.util.Map toMap(java.lang.Iterable,java.lang.Iterable)": {
        "isVulRoot": true,
        "vulCaller": [
            "cn.hutool.poi.excel.ExcelReader:java.util.List read(int,int,int)"
        ]
    },
    "cn.hutool.core.collection.IterUtil:java.util.Map toMap(java.util.Iterator,java.util.Iterator)": {
        "isVulRoot": true,
        "vulCaller": [
            "cn.hutool.core.collection.IterUtil:java.util.Map toMap(java.lang.Iterable,java.lang.Iterable)"
        ]
    },
    "cn.hutool.poi.excel.ExcelReader:java.util.List read(int,int,int)": {
        "isVulRoot": true,
        "vulCaller": [
            "cn.hutool.poi.excel.ExcelReader:java.util.List readAll()",
            "cn.hutool.poi.excel.ExcelReader:java.util.List read(int,int,int,java.lang.Class)"
        ]
    },
    "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.lang.String,java.nio.charset.Charset)",
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File)"
        ]
    },
    "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.lang.String,java.lang.String,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.lang.String,java.lang.String)"
        ]
    },
    "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File,java.io.File)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.lang.String,java.nio.charset.Charset)",
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File)"
        ]
    },
    "cn.hutool.core.util.ZipUtil:java.io.File zip(java.lang.String,java.lang.String,java.nio.charset.Charset,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.lang.String,java.lang.String,boolean)"
        ]
    },
    "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File,boolean,java.io.File[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.core.io.file.FileCopier:cn.hutool.core.io.file.FileCopier create(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.core.io.file.FileReader:void <init>(java.lang.String,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.core.io.file.FileReader:void <init>(java.lang.String)"
        ]
    },
    "cn.hutool.core.io.file.FileReader:void <init>(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.core.io.file.FileWriter:void <init>(java.lang.String,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.core.io.file.FileWriter:void <init>(java.lang.String)"
        ]
    },
    "cn.hutool.core.io.file.FileWriter:void <init>(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.core.io.FileTypeUtil:java.lang.String getTypeByPath(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.File[] ls(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.core.io.FileUtil:java.util.List listFileNames(java.lang.String)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.util.List loopFiles(java.lang.String,java.io.FileFilter)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.util.List loopFiles(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.File getTmpDir()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.File getUserHomeDir()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:boolean exist(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.File touch(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.core.io.FileUtil:java.io.BufferedOutputStream getOutputStream(java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.BufferedWriter getWriter(java.lang.String,java.lang.String,boolean)",
            "cn.hutool.core.io.FileUtil:java.io.BufferedWriter getWriter(java.lang.String,java.nio.charset.Charset,boolean)",
            "cn.hutool.core.io.FileUtil:java.io.File writeString(java.lang.String,java.lang.String,java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.File writeString(java.lang.String,java.lang.String,java.nio.charset.Charset)",
            "cn.hutool.core.io.FileUtil:java.io.File appendString(java.lang.String,java.lang.String,java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.File appendString(java.lang.String,java.lang.String,java.nio.charset.Charset)",
            "cn.hutool.core.io.FileUtil:java.io.File writeBytes(byte[],java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.File writeFromStream(java.io.InputStream,java.lang.String)",
            "cn.hutool.core.io.FileUtil:void writeToStream(java.lang.String,java.io.OutputStream)",
            "cn.hutool.extra.servlet.multipart.UploadFile:java.io.File write(java.lang.String)",
            "cn.hutool.extra.servlet.multipart.UploadFile:boolean processStream(cn.hutool.extra.servlet.multipart.MultipartRequestInputStream)",
            "cn.hutool.captcha.AbstractCaptcha:void write(java.lang.String)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.io.File mkParentDirs(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:boolean del(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:boolean clean(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.File mkdir(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.lang.String,java.lang.String,java.nio.charset.Charset)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.io.File copy(java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:boolean isDirectory(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:boolean isFile(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.BufferedInputStream getInputStream(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.poi.excel.ExcelUtil:void readBySax(java.lang.String,int,cn.hutool.poi.excel.sax.handler.RowHandler)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.io.BufferedReader getReader(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.bloomfilter.BitSetBloomFilter:void init(java.lang.String,java.lang.String)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.io.BufferedReader getReader(java.lang.String,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.core.io.FileUtil:java.io.BufferedReader getUtf8Reader(java.lang.String)"
        ]
    },
    "cn.hutool.core.io.FileUtil:byte[] readBytes(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.lang.String readString(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.lang.String readString(java.lang.String,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.core.io.FileUtil:java.lang.String readUtf8String(java.lang.String)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.util.Collection readLines(java.lang.String,java.lang.String,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.core.io.FileUtil:java.util.List readLines(java.lang.String,java.lang.String)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.util.Collection readLines(java.lang.String,java.nio.charset.Charset,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.core.io.FileUtil:java.util.Collection readUtf8Lines(java.lang.String,java.util.Collection)",
            "cn.hutool.core.io.FileUtil:java.util.List readLines(java.lang.String,java.nio.charset.Charset)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.lang.Object load(cn.hutool.core.io.file.FileReader$ReaderHandler,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.lang.Object load(java.lang.String,java.lang.String,cn.hutool.core.io.file.FileReader$ReaderHandler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.lang.Object load(java.lang.String,java.nio.charset.Charset,cn.hutool.core.io.file.FileReader$ReaderHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.core.io.FileUtil:java.lang.Object loadUtf8(java.lang.String,cn.hutool.core.io.file.FileReader$ReaderHandler)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.io.File writeLines(java.util.Collection,java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.core.io.FileUtil:java.io.File writeLines(java.util.Collection,java.lang.String,java.lang.String)",
            "cn.hutool.core.io.FileUtil:java.io.File appendLines(java.util.Collection,java.lang.String,java.lang.String)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.io.File writeLines(java.util.Collection,java.lang.String,java.nio.charset.Charset,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.core.io.FileUtil:java.io.File writeLines(java.util.Collection,java.lang.String,java.nio.charset.Charset)",
            "cn.hutool.core.io.FileUtil:java.io.File appendLines(java.util.Collection,java.lang.String,java.nio.charset.Charset)"
        ]
    },
    "cn.hutool.core.io.resource.FileResource:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.core.io.resource.ResourceUtil:cn.hutool.core.io.resource.Resource getResourceObj(java.lang.String)"
        ]
    },
    "cn.hutool.core.text.csv.CsvWriter:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.core.text.csv.CsvWriter:void <init>(java.lang.String,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.core.text.csv.CsvUtil:cn.hutool.core.text.csv.CsvWriter getWriter(java.lang.String,java.nio.charset.Charset)"
        ]
    },
    "cn.hutool.core.text.csv.CsvWriter:void <init>(java.lang.String,java.nio.charset.Charset,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.core.text.csv.CsvUtil:cn.hutool.core.text.csv.CsvWriter getWriter(java.lang.String,java.nio.charset.Charset,boolean)"
        ]
    },
    "cn.hutool.core.text.csv.CsvWriter:void <init>(java.lang.String,java.nio.charset.Charset,boolean,cn.hutool.core.text.csv.CsvWriteConfig)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.core.util.XmlUtil:org.w3c.dom.Document readXML(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.core.util.ZipUtil:java.io.File zip(java.lang.String,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.lang.String)"
        ]
    },
    "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.lang.String,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.lang.String)"
        ]
    },
    "cn.hutool.http.HttpResponse:long writeBody(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.http.HttpUtil:long downloadFile(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.poi.excel.ExcelReader:void <init>(java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.poi.excel.ExcelUtil:cn.hutool.poi.excel.ExcelReader getReader(java.lang.String,int)"
        ]
    },
    "cn.hutool.poi.excel.ExcelWriter:void <init>(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.poi.excel.ExcelUtil:cn.hutool.poi.excel.ExcelWriter getWriter(java.lang.String,java.lang.String)",
            "cn.hutool.poi.excel.ExcelWriter:void <init>(java.lang.String)"
        ]
    },
    "cn.hutool.poi.excel.sax.AbstractExcelSaxReader:java.lang.Object read(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.poi.excel.sax.AbstractExcelSaxReader:java.lang.Object read(java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.poi.excel.ExcelUtil:cn.hutool.poi.excel.sax.Excel07SaxReader read07BySax(java.lang.String,int,cn.hutool.poi.excel.sax.handler.RowHandler)",
            "cn.hutool.poi.excel.ExcelUtil:cn.hutool.poi.excel.sax.Excel03SaxReader read03BySax(java.lang.String,int,cn.hutool.poi.excel.sax.handler.RowHandler)"
        ]
    },
    "cn.hutool.poi.excel.WorkbookUtil:org.apache.poi.ss.usermodel.Workbook loadBook(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.core.io.file.FileCopier:java.io.File copy()": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.core.io.file.FileCopier:java.lang.Object copy()",
            "cn.hutool.core.io.FileUtil:java.io.File copy(java.io.File,java.io.File,boolean)",
            "cn.hutool.core.io.FileUtil:java.io.File copyContent(java.io.File,java.io.File,boolean)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.io.File touch(java.io.File,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.http.HttpResponse:long writeBody(java.io.File,cn.hutool.core.io.StreamProgress)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.http.HttpResponse:long writeBody(java.io.File)",
            "cn.hutool.http.HttpUtil:long downloadFile(java.lang.String,java.io.File,int,cn.hutool.core.io.StreamProgress)"
        ]
    },
    "cn.hutool.poi.excel.ExcelReader:java.util.List readAll()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.poi.excel.ExcelReader:java.util.List read(int,int,int,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.poi.excel.ExcelReader:java.util.List readAll(java.lang.Class)",
            "cn.hutool.poi.excel.ExcelReader:java.util.List read(int,int,java.lang.Class)"
        ]
    },
    "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.core.util.ZipUtil:java.io.File zip(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.core.util.ZipUtil:java.io.File zip(java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.core.util.ZipUtil:java.io.File zip(java.lang.String,java.lang.String)"
        ]
    },
    "cn.hutool.core.io.file.FileReader:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.core.io.file.FileWriter:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.util.List listFileNames(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.BufferedOutputStream getOutputStream(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.BufferedWriter getWriter(java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.core.io.FileUtil:java.io.PrintWriter getPrintWriter(java.lang.String,java.lang.String,boolean)",
            "cn.hutool.core.util.XmlUtil:void toFile(org.w3c.dom.Document,java.lang.String,java.lang.String)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.io.BufferedWriter getWriter(java.lang.String,java.nio.charset.Charset,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.setting.dialect.Props:void store(java.lang.String)",
            "cn.hutool.setting.SettingLoader:void store(java.lang.String)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.io.File writeString(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.File writeString(java.lang.String,java.lang.String,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.core.io.FileUtil:java.io.File writeUtf8String(java.lang.String,java.lang.String)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.io.File appendString(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.File appendString(java.lang.String,java.lang.String,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.core.io.FileUtil:java.io.File appendUtf8String(java.lang.String,java.lang.String)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.io.File writeBytes(byte[],java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.File writeFromStream(java.io.InputStream,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:void writeToStream(java.lang.String,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.extra.servlet.multipart.UploadFile:java.io.File write(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.extra.servlet.multipart.UploadFile:boolean processStream(cn.hutool.extra.servlet.multipart.MultipartRequestInputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.extra.servlet.multipart.MultipartFormData:void parseRequestStream(java.io.InputStream,java.lang.String)"
        ]
    },
    "cn.hutool.captcha.AbstractCaptcha:void write(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.poi.excel.ExcelUtil:void readBySax(java.lang.String,int,cn.hutool.poi.excel.sax.handler.RowHandler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.bloomfilter.BitSetBloomFilter:void init(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.BufferedReader getUtf8Reader(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.lang.String readUtf8String(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.util.List readLines(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.util.Collection readUtf8Lines(java.lang.String,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.util.List readLines(java.lang.String,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.core.io.FileUtil:java.util.List readUtf8Lines(java.lang.String)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.lang.Object loadUtf8(java.lang.String,cn.hutool.core.io.file.FileReader$ReaderHandler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.File writeLines(java.util.Collection,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.File appendLines(java.util.Collection,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.File writeLines(java.util.Collection,java.lang.String,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.core.io.FileUtil:java.io.File writeUtf8Lines(java.util.Collection,java.lang.String)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.io.File appendLines(java.util.Collection,java.lang.String,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.core.io.FileUtil:java.io.File appendUtf8Lines(java.util.Collection,java.lang.String)"
        ]
    },
    "cn.hutool.core.io.resource.ResourceUtil:cn.hutool.core.io.resource.Resource getResourceObj(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.setting.dialect.BasicSetting:void <init>(java.lang.String,java.nio.charset.Charset,boolean)",
            "cn.hutool.setting.dialect.Props:void <init>(java.lang.String,java.nio.charset.Charset)"
        ]
    },
    "cn.hutool.core.text.csv.CsvUtil:cn.hutool.core.text.csv.CsvWriter getWriter(java.lang.String,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.core.text.csv.CsvUtil:cn.hutool.core.text.csv.CsvWriter getWriter(java.lang.String,java.nio.charset.Charset,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.core.util.ZipUtil:java.io.File zip(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.core.util.ZipUtil:java.io.File unzip(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.poi.excel.ExcelUtil:cn.hutool.poi.excel.ExcelReader getReader(java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.poi.excel.ExcelUtil:cn.hutool.poi.excel.ExcelReader getReader(java.lang.String)"
        ]
    },
    "cn.hutool.poi.excel.ExcelUtil:cn.hutool.poi.excel.ExcelWriter getWriter(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.poi.excel.ExcelWriter:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.poi.excel.ExcelUtil:cn.hutool.poi.excel.ExcelWriter getWriter(java.lang.String)"
        ]
    },
    "cn.hutool.poi.excel.ExcelUtil:cn.hutool.poi.excel.sax.Excel07SaxReader read07BySax(java.lang.String,int,cn.hutool.poi.excel.sax.handler.RowHandler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.poi.excel.ExcelUtil:cn.hutool.poi.excel.sax.Excel03SaxReader read03BySax(java.lang.String,int,cn.hutool.poi.excel.sax.handler.RowHandler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.core.io.file.FileCopier:java.lang.Object copy()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.File copy(java.io.File,java.io.File,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.core.io.FileUtil:java.io.File copy(java.lang.String,java.lang.String,boolean)",
            "cn.hutool.core.io.FileUtil:void move(java.io.File,java.io.File,boolean)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.io.File copyContent(java.io.File,java.io.File,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.http.HttpResponse:long writeBody(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.http.HttpResponse:long writeBody(java.lang.String)"
        ]
    },
    "cn.hutool.http.HttpUtil:long downloadFile(java.lang.String,java.io.File,int,cn.hutool.core.io.StreamProgress)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.http.HttpUtil:long downloadFile(java.lang.String,java.io.File,int)",
            "cn.hutool.http.HttpUtil:long downloadFile(java.lang.String,java.io.File,cn.hutool.core.io.StreamProgress)"
        ]
    },
    "cn.hutool.poi.excel.ExcelReader:java.util.List readAll(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.poi.excel.ExcelReader:java.util.List read(int,int,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.core.util.ZipUtil:java.io.File zip(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.PrintWriter getPrintWriter(java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.extra.template.VelocityUtil:void toFile(org.apache.velocity.Template,org.apache.velocity.VelocityContext,java.lang.String)"
        ]
    },
    "cn.hutool.core.util.XmlUtil:void toFile(org.w3c.dom.Document,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.core.util.XmlUtil:void toFile(org.w3c.dom.Document,java.lang.String)"
        ]
    },
    "cn.hutool.setting.dialect.Props:void store(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.setting.dialect.Props:void store(java.lang.String,java.lang.Class)"
        ]
    },
    "cn.hutool.setting.SettingLoader:void store(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.setting.dialect.BasicSetting:void store(java.lang.String)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.io.File writeUtf8String(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.File appendUtf8String(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.extra.servlet.multipart.MultipartFormData:void parseRequestStream(java.io.InputStream,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.extra.servlet.multipart.MultipartFormData:void parseRequest(javax.servlet.ServletRequest)"
        ]
    },
    "cn.hutool.core.io.FileUtil:java.util.List readUtf8Lines(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.File writeUtf8Lines(java.util.Collection,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:java.io.File appendUtf8Lines(java.util.Collection,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.setting.dialect.BasicSetting:void <init>(java.lang.String,java.nio.charset.Charset,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.setting.dialect.BasicSetting:void <init>(java.lang.String)",
            "cn.hutool.setting.Setting:void <init>(java.lang.String,java.nio.charset.Charset,boolean)",
            "cn.hutool.setting.Setting:void <init>(java.lang.String,boolean)"
        ]
    },
    "cn.hutool.setting.dialect.Props:void <init>(java.lang.String,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.setting.dialect.Props:java.util.Properties getProp(java.lang.String,java.nio.charset.Charset)",
            "cn.hutool.setting.dialect.Props:void <init>(java.lang.String)",
            "cn.hutool.setting.dialect.Props:void <init>(java.lang.String,java.lang.String)"
        ]
    },
    "cn.hutool.poi.excel.ExcelUtil:cn.hutool.poi.excel.ExcelReader getReader(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.poi.excel.ExcelUtil:cn.hutool.poi.excel.ExcelWriter getWriter(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.core.io.FileUtil:void move(java.io.File,java.io.File,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.extra.servlet.multipart.UploadFile:java.io.File write(java.io.File)"
        ]
    },
    "cn.hutool.http.HttpUtil:long downloadFile(java.lang.String,java.io.File,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.http.HttpUtil:long downloadFile(java.lang.String,java.io.File,cn.hutool.core.io.StreamProgress)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.http.HttpUtil:long downloadFile(java.lang.String,java.io.File)"
        ]
    },
    "cn.hutool.extra.template.VelocityUtil:void toFile(org.apache.velocity.Template,org.apache.velocity.VelocityContext,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.extra.template.VelocityUtil:void toFile(org.apache.velocity.app.VelocityEngine,java.lang.String,org.apache.velocity.VelocityContext,java.lang.String)",
            "cn.hutool.extra.template.VelocityUtil:void toFile(java.lang.String,org.apache.velocity.VelocityContext,java.lang.String)"
        ]
    },
    "cn.hutool.core.util.XmlUtil:void toFile(org.w3c.dom.Document,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.setting.dialect.Props:void store(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.setting.dialect.BasicSetting:void store(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.extra.servlet.multipart.MultipartFormData:void parseRequest(javax.servlet.ServletRequest)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.extra.servlet.ServletUtil:cn.hutool.extra.servlet.multipart.MultipartFormData getMultipart(javax.servlet.ServletRequest,cn.hutool.extra.servlet.multipart.UploadSetting)"
        ]
    },
    "cn.hutool.setting.dialect.BasicSetting:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.setting.Setting:void <init>(java.lang.String)"
        ]
    },
    "cn.hutool.setting.Setting:void <init>(java.lang.String,java.nio.charset.Charset,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.setting.profile.Profile:cn.hutool.setting.Setting getSetting(java.lang.String)",
            "cn.hutool.cron.CronUtil:void setCronSetting(java.lang.String)"
        ]
    },
    "cn.hutool.setting.Setting:void <init>(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.ds.DSFactory:void <init>(java.lang.String,java.lang.Class,cn.hutool.setting.Setting)",
            "cn.hutool.db.nosql.mongo.MongoDS:void initSingle()",
            "cn.hutool.db.nosql.mongo.MongoDS:void initCloud()",
            "cn.hutool.db.nosql.redis.RedisDS:cn.hutool.db.nosql.redis.RedisDS init(java.lang.String)"
        ]
    },
    "cn.hutool.setting.dialect.Props:java.util.Properties getProp(java.lang.String,java.nio.charset.Charset)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.setting.dialect.Props:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.setting.dialect.Props:java.util.Properties getProp(java.lang.String)"
        ]
    },
    "cn.hutool.setting.dialect.Props:void <init>(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.setting.dialect.Props:java.util.Properties getProp(java.lang.String,java.lang.String)"
        ]
    },
    "cn.hutool.extra.servlet.multipart.UploadFile:java.io.File write(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.extra.servlet.multipart.UploadFile:java.io.File write(java.lang.String)"
        ]
    },
    "cn.hutool.http.HttpUtil:long downloadFile(java.lang.String,java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.http.HttpUtil:long downloadFile(java.lang.String,java.lang.String)"
        ]
    },
    "cn.hutool.extra.template.VelocityUtil:void toFile(org.apache.velocity.app.VelocityEngine,java.lang.String,org.apache.velocity.VelocityContext,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.extra.template.VelocityUtil:void toFile(java.lang.String,org.apache.velocity.VelocityContext,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.extra.servlet.ServletUtil:cn.hutool.extra.servlet.multipart.MultipartFormData getMultipart(javax.servlet.ServletRequest,cn.hutool.extra.servlet.multipart.UploadSetting)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.setting.Setting:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.ds.pooled.DbSetting:void <init>(cn.hutool.setting.Setting)",
            "cn.hutool.db.ds.simple.SimpleDataSource:void <init>(cn.hutool.setting.Setting,java.lang.String)",
            "cn.hutool.extra.mail.MailAccount:void <init>(java.lang.String)"
        ]
    },
    "cn.hutool.setting.profile.Profile:cn.hutool.setting.Setting getSetting(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.setting.profile.GlobalProfile:cn.hutool.setting.Setting getSetting(java.lang.String)"
        ]
    },
    "cn.hutool.cron.CronUtil:void setCronSetting(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.cron.CronUtil:void start()"
        ]
    },
    "cn.hutool.db.ds.DSFactory:void <init>(java.lang.String,java.lang.Class,cn.hutool.setting.Setting)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.ds.c3p0.C3p0DSFactory:void <init>(cn.hutool.setting.Setting)",
            "cn.hutool.db.ds.dbcp.DbcpDSFactory:void <init>(cn.hutool.setting.Setting)",
            "cn.hutool.db.ds.druid.DruidDSFactory:void <init>(cn.hutool.setting.Setting)",
            "cn.hutool.db.ds.hikari.HikariDSFactory:void <init>(cn.hutool.setting.Setting)",
            "cn.hutool.db.ds.jndi.JndiDSFactory:void <init>(cn.hutool.setting.Setting)",
            "cn.hutool.db.ds.pooled.PooledDSFactory:void <init>(cn.hutool.setting.Setting)",
            "cn.hutool.db.ds.simple.SimpleDSFactory:void <init>(cn.hutool.setting.Setting)",
            "cn.hutool.db.ds.tomcat.TomcatDSFactory:void <init>(cn.hutool.setting.Setting)"
        ]
    },
    "cn.hutool.db.nosql.mongo.MongoDS:void initSingle()": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.nosql.mongo.MongoDS:void <init>(java.lang.String,int)",
            "cn.hutool.db.nosql.mongo.MongoDS:void <init>(cn.hutool.setting.Setting,java.lang.String,int)",
            "cn.hutool.db.nosql.mongo.MongoDS:void init()"
        ]
    },
    "cn.hutool.db.nosql.mongo.MongoDS:void initCloud()": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.nosql.mongo.MongoDS:void init()"
        ]
    },
    "cn.hutool.db.nosql.redis.RedisDS:cn.hutool.db.nosql.redis.RedisDS init(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.nosql.redis.RedisDS:void <init>(cn.hutool.setting.Setting,java.lang.String)"
        ]
    },
    "cn.hutool.setting.dialect.Props:java.util.Properties getProp(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.setting.dialect.Props:java.util.Properties getProp(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.db.ds.pooled.DbSetting:void <init>(cn.hutool.setting.Setting)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.ds.pooled.DbSetting:void <init>()",
            "cn.hutool.db.ds.pooled.PooledDSFactory:cn.hutool.db.ds.pooled.PooledDataSource createDataSource(java.lang.String)"
        ]
    },
    "cn.hutool.db.ds.simple.SimpleDataSource:void <init>(cn.hutool.setting.Setting,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.ds.simple.SimpleDataSource:void <init>(java.lang.String)",
            "cn.hutool.db.ds.simple.SimpleDSFactory:cn.hutool.db.ds.simple.SimpleDataSource createDataSource(java.lang.String)"
        ]
    },
    "cn.hutool.extra.mail.MailAccount:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.extra.mail.GlobalMailAccount:cn.hutool.extra.mail.MailAccount createDefaultAccount()"
        ]
    },
    "cn.hutool.setting.profile.GlobalProfile:cn.hutool.setting.Setting getSetting(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.cron.CronUtil:void start()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.db.ds.c3p0.C3p0DSFactory:void <init>(cn.hutool.setting.Setting)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.ds.c3p0.C3p0DSFactory:void <init>()",
            "cn.hutool.db.ds.DSFactory:cn.hutool.db.ds.DSFactory create(cn.hutool.setting.Setting)"
        ]
    },
    "cn.hutool.db.ds.dbcp.DbcpDSFactory:void <init>(cn.hutool.setting.Setting)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.ds.dbcp.DbcpDSFactory:void <init>()",
            "cn.hutool.db.ds.DSFactory:cn.hutool.db.ds.DSFactory create(cn.hutool.setting.Setting)"
        ]
    },
    "cn.hutool.db.ds.druid.DruidDSFactory:void <init>(cn.hutool.setting.Setting)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.ds.druid.DruidDSFactory:void <init>()",
            "cn.hutool.db.ds.DSFactory:cn.hutool.db.ds.DSFactory create(cn.hutool.setting.Setting)"
        ]
    },
    "cn.hutool.db.ds.hikari.HikariDSFactory:void <init>(cn.hutool.setting.Setting)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.ds.DSFactory:cn.hutool.db.ds.DSFactory create(cn.hutool.setting.Setting)",
            "cn.hutool.db.ds.hikari.HikariDSFactory:void <init>()"
        ]
    },
    "cn.hutool.db.ds.jndi.JndiDSFactory:void <init>(cn.hutool.setting.Setting)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.ds.jndi.JndiDSFactory:void <init>()"
        ]
    },
    "cn.hutool.db.ds.pooled.PooledDSFactory:void <init>(cn.hutool.setting.Setting)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.ds.DSFactory:cn.hutool.db.ds.DSFactory create(cn.hutool.setting.Setting)",
            "cn.hutool.db.ds.pooled.PooledDSFactory:void <init>()"
        ]
    },
    "cn.hutool.db.ds.simple.SimpleDSFactory:void <init>(cn.hutool.setting.Setting)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.ds.simple.SimpleDSFactory:void <init>()"
        ]
    },
    "cn.hutool.db.ds.tomcat.TomcatDSFactory:void <init>(cn.hutool.setting.Setting)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.ds.DSFactory:cn.hutool.db.ds.DSFactory create(cn.hutool.setting.Setting)",
            "cn.hutool.db.ds.tomcat.TomcatDSFactory:void <init>()"
        ]
    },
    "cn.hutool.db.nosql.mongo.MongoDS:void <init>(java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.nosql.mongo.MongoFactory:cn.hutool.db.nosql.mongo.MongoDS getDS(java.lang.String,int)"
        ]
    },
    "cn.hutool.db.nosql.mongo.MongoDS:void <init>(cn.hutool.setting.Setting,java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.db.nosql.mongo.MongoDS:void init()": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.nosql.mongo.MongoDS:void <init>(java.lang.String[])",
            "cn.hutool.db.nosql.mongo.MongoDS:void <init>(cn.hutool.setting.Setting,java.lang.String[])"
        ]
    },
    "cn.hutool.db.nosql.redis.RedisDS:void <init>(cn.hutool.setting.Setting,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.nosql.redis.RedisDS:cn.hutool.db.nosql.redis.RedisDS create(cn.hutool.setting.Setting,java.lang.String)",
            "cn.hutool.db.nosql.redis.RedisDS:void <init>()",
            "cn.hutool.db.nosql.redis.RedisDS:void <init>(java.lang.String)"
        ]
    },
    "cn.hutool.db.ds.pooled.DbSetting:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.ds.pooled.PooledDataSource:void <init>(java.lang.String)"
        ]
    },
    "cn.hutool.db.ds.pooled.PooledDSFactory:cn.hutool.db.ds.pooled.PooledDataSource createDataSource(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.ds.pooled.PooledDSFactory:javax.sql.DataSource getDataSource(java.lang.String)"
        ]
    },
    "cn.hutool.db.ds.simple.SimpleDataSource:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.ds.simple.SimpleDataSource:cn.hutool.db.ds.simple.SimpleDataSource getDataSource(java.lang.String)",
            "cn.hutool.db.ds.simple.SimpleDataSource:void <init>()"
        ]
    },
    "cn.hutool.db.ds.simple.SimpleDSFactory:cn.hutool.db.ds.simple.SimpleDataSource createDataSource(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.ds.simple.SimpleDSFactory:javax.sql.DataSource getDataSource(java.lang.String)"
        ]
    },
    "cn.hutool.extra.mail.GlobalMailAccount:cn.hutool.extra.mail.MailAccount createDefaultAccount()": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.extra.mail.GlobalMailAccount:void <init>(java.lang.String,int)"
        ]
    },
    "cn.hutool.db.ds.c3p0.C3p0DSFactory:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.db.ds.DSFactory:cn.hutool.db.ds.DSFactory create(cn.hutool.setting.Setting)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.ds.DSFactory:cn.hutool.db.ds.DSFactory getCurrentDSFactory(cn.hutool.setting.Setting)",
            "cn.hutool.db.ds.GlobalDSFactory:cn.hutool.db.ds.DSFactory get()"
        ]
    },
    "cn.hutool.db.ds.dbcp.DbcpDSFactory:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.db.ds.druid.DruidDSFactory:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.db.ds.hikari.HikariDSFactory:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.db.ds.jndi.JndiDSFactory:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.db.ds.pooled.PooledDSFactory:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.db.ds.simple.SimpleDSFactory:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.db.ds.tomcat.TomcatDSFactory:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.db.nosql.mongo.MongoFactory:cn.hutool.db.nosql.mongo.MongoDS getDS(java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.db.nosql.mongo.MongoDS:void <init>(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.nosql.mongo.MongoFactory:cn.hutool.db.nosql.mongo.MongoDS getDS(java.lang.String[])"
        ]
    },
    "cn.hutool.db.nosql.mongo.MongoDS:void <init>(cn.hutool.setting.Setting,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.nosql.mongo.MongoFactory:cn.hutool.db.nosql.mongo.MongoDS getDS(cn.hutool.setting.Setting,java.lang.String[])"
        ]
    },
    "cn.hutool.db.nosql.redis.RedisDS:cn.hutool.db.nosql.redis.RedisDS create(cn.hutool.setting.Setting,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.db.nosql.redis.RedisDS:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.nosql.redis.RedisDS:cn.hutool.db.nosql.redis.RedisDS create()"
        ]
    },
    "cn.hutool.db.nosql.redis.RedisDS:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.nosql.redis.RedisDS:cn.hutool.db.nosql.redis.RedisDS create(java.lang.String)"
        ]
    },
    "cn.hutool.db.ds.pooled.PooledDataSource:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.ds.pooled.PooledDataSource:cn.hutool.db.ds.pooled.PooledDataSource getDataSource(java.lang.String)",
            "cn.hutool.db.ds.pooled.PooledDataSource:void <init>()"
        ]
    },
    "cn.hutool.db.ds.pooled.PooledDSFactory:javax.sql.DataSource getDataSource(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.ds.DSFactory:javax.sql.DataSource getDataSource()",
            "cn.hutool.db.ds.DSFactory:javax.sql.DataSource get(java.lang.String)"
        ]
    },
    "cn.hutool.db.ds.simple.SimpleDataSource:cn.hutool.db.ds.simple.SimpleDataSource getDataSource(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.db.ds.simple.SimpleDataSource:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.ds.simple.SimpleDataSource:cn.hutool.db.ds.simple.SimpleDataSource getDataSource()"
        ]
    },
    "cn.hutool.db.ds.simple.SimpleDSFactory:javax.sql.DataSource getDataSource(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.ds.DSFactory:javax.sql.DataSource getDataSource()",
            "cn.hutool.db.ds.DSFactory:javax.sql.DataSource get(java.lang.String)"
        ]
    },
    "cn.hutool.extra.mail.GlobalMailAccount:void <init>(java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.extra.mail.GlobalMailAccount:void <clinit>()"
        ]
    },
    "cn.hutool.db.ds.DSFactory:cn.hutool.db.ds.DSFactory getCurrentDSFactory(cn.hutool.setting.Setting)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.db.ds.GlobalDSFactory:cn.hutool.db.ds.DSFactory get()": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.ds.DSFactory:javax.sql.DataSource get(java.lang.String)"
        ]
    },
    "cn.hutool.db.nosql.mongo.MongoFactory:cn.hutool.db.nosql.mongo.MongoDS getDS(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.nosql.mongo.MongoFactory:cn.hutool.db.nosql.mongo.MongoDS getDS(java.util.Collection)"
        ]
    },
    "cn.hutool.db.nosql.mongo.MongoFactory:cn.hutool.db.nosql.mongo.MongoDS getDS(cn.hutool.setting.Setting,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.nosql.mongo.MongoFactory:cn.hutool.db.nosql.mongo.MongoDS getDS(cn.hutool.setting.Setting,java.util.Collection)"
        ]
    },
    "cn.hutool.db.nosql.redis.RedisDS:cn.hutool.db.nosql.redis.RedisDS create()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.db.nosql.redis.RedisDS:cn.hutool.db.nosql.redis.RedisDS create(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.db.ds.pooled.PooledDataSource:cn.hutool.db.ds.pooled.PooledDataSource getDataSource(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.db.ds.pooled.PooledDataSource:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.ds.pooled.PooledDataSource:cn.hutool.db.ds.pooled.PooledDataSource getDataSource()"
        ]
    },
    "cn.hutool.db.ds.DSFactory:javax.sql.DataSource getDataSource()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.db.ds.DSFactory:javax.sql.DataSource get(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.DbUtil:javax.sql.DataSource getDs(java.lang.String)",
            "cn.hutool.db.ds.DSFactory:javax.sql.DataSource get()"
        ]
    },
    "cn.hutool.db.ds.simple.SimpleDataSource:cn.hutool.db.ds.simple.SimpleDataSource getDataSource()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.extra.mail.GlobalMailAccount:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.extra.mail.GlobalMailAccount:cn.hutool.extra.mail.GlobalMailAccount[] values()",
            "cn.hutool.extra.mail.GlobalMailAccount:void <clinit>()",
            "cn.hutool.extra.mail.Mail:void <init>()",
            "cn.hutool.extra.mail.Mail:void <init>(cn.hutool.extra.mail.MailAccount)",
            "cn.hutool.extra.mail.MailUtil:void send(java.util.Collection,java.lang.String,java.lang.String,boolean,java.io.File[])",
            "cn.hutool.extra.mail.MailUtil:void send(java.util.Collection,java.util.Collection,java.util.Collection,java.lang.String,java.lang.String,boolean,java.io.File[])"
        ]
    },
    "cn.hutool.db.nosql.mongo.MongoFactory:cn.hutool.db.nosql.mongo.MongoDS getDS(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.db.nosql.mongo.MongoFactory:cn.hutool.db.nosql.mongo.MongoDS getDS(cn.hutool.setting.Setting,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.db.ds.pooled.PooledDataSource:cn.hutool.db.ds.pooled.PooledDataSource getDataSource()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.db.DbUtil:javax.sql.DataSource getDs(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.db.ds.DSFactory:javax.sql.DataSource get()": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.DaoTemplate:void <init>(java.lang.String,java.lang.String)",
            "cn.hutool.db.DbUtil:javax.sql.DataSource getDs()",
            "cn.hutool.db.Session:cn.hutool.db.Session create()",
            "cn.hutool.db.SqlRunner:cn.hutool.db.SqlRunner create()"
        ]
    },
    "cn.hutool.extra.mail.GlobalMailAccount:cn.hutool.extra.mail.GlobalMailAccount[] values()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.extra.mail.Mail:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.extra.mail.Mail:cn.hutool.extra.mail.Mail create()"
        ]
    },
    "cn.hutool.extra.mail.Mail:void <init>(cn.hutool.extra.mail.MailAccount)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.extra.mail.Mail:cn.hutool.extra.mail.Mail create(cn.hutool.extra.mail.MailAccount)",
            "cn.hutool.extra.mail.Mail:void <init>()"
        ]
    },
    "cn.hutool.extra.mail.MailUtil:void send(java.util.Collection,java.lang.String,java.lang.String,boolean,java.io.File[])": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.extra.mail.MailUtil:void send(java.lang.String,java.lang.String,java.lang.String,boolean,java.io.File[])",
            "cn.hutool.extra.mail.MailUtil:void sendText(java.util.Collection,java.lang.String,java.lang.String,java.io.File[])",
            "cn.hutool.extra.mail.MailUtil:void sendHtml(java.util.Collection,java.lang.String,java.lang.String,java.io.File[])"
        ]
    },
    "cn.hutool.extra.mail.MailUtil:void send(java.util.Collection,java.util.Collection,java.util.Collection,java.lang.String,java.lang.String,boolean,java.io.File[])": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.extra.mail.MailUtil:void send(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.io.File[])"
        ]
    },
    "cn.hutool.db.DaoTemplate:void <init>(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.DaoTemplate:void <init>(java.lang.String)"
        ]
    },
    "cn.hutool.db.DbUtil:javax.sql.DataSource getDs()": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.DbUtil:cn.hutool.db.SqlRunner newSqlRunner()",
            "cn.hutool.db.DbUtil:cn.hutool.db.Session newSession()"
        ]
    },
    "cn.hutool.db.Session:cn.hutool.db.Session create()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.db.SqlRunner:cn.hutool.db.SqlRunner create()": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.ActiveEntity:void <init>()",
            "cn.hutool.db.ActiveEntity:void <init>(java.lang.String)",
            "cn.hutool.db.ActiveEntity:void <init>(cn.hutool.db.Entity)"
        ]
    },
    "cn.hutool.extra.mail.Mail:cn.hutool.extra.mail.Mail create()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.extra.mail.Mail:cn.hutool.extra.mail.Mail create(cn.hutool.extra.mail.MailAccount)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.extra.mail.MailUtil:void send(cn.hutool.extra.mail.MailAccount,java.util.Collection,java.lang.String,java.lang.String,boolean,java.io.File[])",
            "cn.hutool.extra.mail.MailUtil:void send(cn.hutool.extra.mail.MailAccount,java.util.Collection,java.util.Collection,java.util.Collection,java.lang.String,java.lang.String,boolean,java.io.File[])"
        ]
    },
    "cn.hutool.extra.mail.MailUtil:void send(java.lang.String,java.lang.String,java.lang.String,boolean,java.io.File[])": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.extra.mail.MailUtil:void sendText(java.lang.String,java.lang.String,java.lang.String,java.io.File[])",
            "cn.hutool.extra.mail.MailUtil:void sendHtml(java.lang.String,java.lang.String,java.lang.String,java.io.File[])"
        ]
    },
    "cn.hutool.extra.mail.MailUtil:void sendText(java.util.Collection,java.lang.String,java.lang.String,java.io.File[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.extra.mail.MailUtil:void sendHtml(java.util.Collection,java.lang.String,java.lang.String,java.io.File[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.extra.mail.MailUtil:void send(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.io.File[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.db.DaoTemplate:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.db.DbUtil:cn.hutool.db.SqlRunner newSqlRunner()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.db.DbUtil:cn.hutool.db.Session newSession()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.db.ActiveEntity:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.ActiveEntity:cn.hutool.db.ActiveEntity create()"
        ]
    },
    "cn.hutool.db.ActiveEntity:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.ActiveEntity:cn.hutool.db.ActiveEntity create(java.lang.String)"
        ]
    },
    "cn.hutool.db.ActiveEntity:void <init>(cn.hutool.db.Entity)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.extra.mail.MailUtil:void send(cn.hutool.extra.mail.MailAccount,java.util.Collection,java.lang.String,java.lang.String,boolean,java.io.File[])": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.extra.mail.MailUtil:void send(java.util.Collection,java.lang.String,java.lang.String,boolean,java.io.File[])",
            "cn.hutool.extra.mail.MailUtil:void send(cn.hutool.extra.mail.MailAccount,java.lang.String,java.lang.String,java.lang.String,boolean,java.io.File[])"
        ]
    },
    "cn.hutool.extra.mail.MailUtil:void send(cn.hutool.extra.mail.MailAccount,java.util.Collection,java.util.Collection,java.util.Collection,java.lang.String,java.lang.String,boolean,java.io.File[])": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.extra.mail.MailUtil:void send(java.util.Collection,java.util.Collection,java.util.Collection,java.lang.String,java.lang.String,boolean,java.io.File[])"
        ]
    },
    "cn.hutool.extra.mail.MailUtil:void sendText(java.lang.String,java.lang.String,java.lang.String,java.io.File[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.extra.mail.MailUtil:void sendHtml(java.lang.String,java.lang.String,java.lang.String,java.io.File[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.db.ActiveEntity:cn.hutool.db.ActiveEntity create()": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.handler.ActiveEntityHandler:cn.hutool.db.ActiveEntity handle(java.sql.ResultSet)"
        ]
    },
    "cn.hutool.db.ActiveEntity:cn.hutool.db.ActiveEntity create(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.ActiveEntity:cn.hutool.db.ActiveEntity parse(java.lang.Object)",
            "cn.hutool.db.ActiveEntity:cn.hutool.db.ActiveEntity parse(java.lang.Object,boolean,boolean)",
            "cn.hutool.db.ActiveEntity:cn.hutool.db.ActiveEntity parseWithUnderlineCase(java.lang.Object)"
        ]
    },
    "cn.hutool.extra.mail.MailUtil:void send(cn.hutool.extra.mail.MailAccount,java.lang.String,java.lang.String,java.lang.String,boolean,java.io.File[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.db.handler.ActiveEntityHandler:cn.hutool.db.ActiveEntity handle(java.sql.ResultSet)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.handler.ActiveEntityHandler:java.lang.Object handle(java.sql.ResultSet)"
        ]
    },
    "cn.hutool.db.ActiveEntity:cn.hutool.db.ActiveEntity parse(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.db.ActiveEntity:cn.hutool.db.ActiveEntity parse(java.lang.Object,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.db.ActiveEntity:cn.hutool.db.ActiveEntity parseWithUnderlineCase(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.db.handler.ActiveEntityHandler:java.lang.Object handle(java.sql.ResultSet)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.sql.SqlExecutor:java.lang.Object query(java.sql.PreparedStatement,cn.hutool.db.handler.RsHandler,java.lang.Object[])"
        ]
    },
    "cn.hutool.db.sql.SqlExecutor:java.lang.Object query(java.sql.PreparedStatement,cn.hutool.db.handler.RsHandler,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.sql.SqlExecutor:java.lang.Object query(java.sql.Connection,java.lang.String,cn.hutool.db.handler.RsHandler,java.lang.Object[])",
            "cn.hutool.db.sql.SqlExecutor:java.lang.Object queryAndClosePs(java.sql.PreparedStatement,cn.hutool.db.handler.RsHandler,java.lang.Object[])",
            "cn.hutool.db.SqlConnRunner:java.lang.Object find(java.sql.Connection,cn.hutool.db.sql.Query,cn.hutool.db.handler.RsHandler)",
            "cn.hutool.db.SqlConnRunner:int count(java.sql.Connection,cn.hutool.db.Entity)"
        ]
    },
    "cn.hutool.db.sql.SqlExecutor:java.lang.Object query(java.sql.Connection,java.lang.String,cn.hutool.db.handler.RsHandler,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.AbstractSqlRunner:java.lang.Object query(java.lang.String,cn.hutool.db.handler.RsHandler,java.lang.Object[])",
            "cn.hutool.db.sql.SqlExecutor:java.lang.Object query(java.sql.Connection,java.lang.String,cn.hutool.db.handler.RsHandler,java.util.Map)"
        ]
    },
    "cn.hutool.db.sql.SqlExecutor:java.lang.Object queryAndClosePs(java.sql.PreparedStatement,cn.hutool.db.handler.RsHandler,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.SqlConnRunner:java.lang.Object page(java.sql.Connection,java.util.Collection,cn.hutool.db.Entity,cn.hutool.db.Page,cn.hutool.db.handler.RsHandler)"
        ]
    },
    "cn.hutool.db.SqlConnRunner:java.lang.Object find(java.sql.Connection,cn.hutool.db.sql.Query,cn.hutool.db.handler.RsHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.AbstractSqlRunner:java.lang.Object find(cn.hutool.db.sql.Query,cn.hutool.db.handler.RsHandler)",
            "cn.hutool.db.SqlConnRunner:java.lang.Object find(java.sql.Connection,java.util.Collection,cn.hutool.db.Entity,cn.hutool.db.handler.RsHandler)"
        ]
    },
    "cn.hutool.db.SqlConnRunner:int count(java.sql.Connection,cn.hutool.db.Entity)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.AbstractSqlRunner:int count(cn.hutool.db.Entity)",
            "cn.hutool.db.SqlConnRunner:int insertOrUpdate(java.sql.Connection,cn.hutool.db.Entity,java.lang.String[])",
            "cn.hutool.db.SqlConnRunner:cn.hutool.db.PageResult page(java.sql.Connection,java.util.Collection,cn.hutool.db.Entity,int,int)",
            "cn.hutool.db.SqlConnRunner:cn.hutool.db.PageResult page(java.sql.Connection,java.util.Collection,cn.hutool.db.Entity,cn.hutool.db.Page)"
        ]
    },
    "cn.hutool.db.AbstractSqlRunner:java.lang.Object query(java.lang.String,cn.hutool.db.handler.RsHandler,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.AbstractSqlRunner:java.util.List query(java.lang.String,java.lang.Object[])",
            "cn.hutool.db.AbstractSqlRunner:java.util.List query(java.lang.String,java.lang.Class,java.lang.Object[])",
            "cn.hutool.db.AbstractSqlRunner:cn.hutool.db.Entity queryOne(java.lang.String,java.lang.Object[])",
            "cn.hutool.db.AbstractSqlRunner:java.lang.Number queryNumber(java.lang.String,java.lang.Object[])",
            "cn.hutool.db.AbstractSqlRunner:java.lang.String queryString(java.lang.String,java.lang.Object[])",
            "cn.hutool.db.DaoTemplate:java.util.List findBySql(java.lang.String,java.lang.Object[])"
        ]
    },
    "cn.hutool.db.sql.SqlExecutor:java.lang.Object query(java.sql.Connection,java.lang.String,cn.hutool.db.handler.RsHandler,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.db.SqlConnRunner:java.lang.Object page(java.sql.Connection,java.util.Collection,cn.hutool.db.Entity,cn.hutool.db.Page,cn.hutool.db.handler.RsHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.AbstractSqlRunner:java.lang.Object page(java.util.Collection,cn.hutool.db.Entity,cn.hutool.db.Page,cn.hutool.db.handler.RsHandler)",
            "cn.hutool.db.SqlConnRunner:java.lang.Object page(java.sql.Connection,java.util.Collection,cn.hutool.db.Entity,int,int,cn.hutool.db.handler.RsHandler)",
            "cn.hutool.db.SqlConnRunner:cn.hutool.db.PageResult page(java.sql.Connection,java.util.Collection,cn.hutool.db.Entity,cn.hutool.db.Page)"
        ]
    },
    "cn.hutool.db.AbstractSqlRunner:java.lang.Object find(cn.hutool.db.sql.Query,cn.hutool.db.handler.RsHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.AbstractSqlRunner:java.util.List findBy(java.lang.String,cn.hutool.db.sql.Condition[])"
        ]
    },
    "cn.hutool.db.SqlConnRunner:java.lang.Object find(java.sql.Connection,java.util.Collection,cn.hutool.db.Entity,cn.hutool.db.handler.RsHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.AbstractSqlRunner:java.lang.Object find(java.util.Collection,cn.hutool.db.Entity,cn.hutool.db.handler.RsHandler)",
            "cn.hutool.db.SqlConnRunner:java.lang.Object find(java.sql.Connection,cn.hutool.db.Entity,cn.hutool.db.handler.RsHandler,java.lang.String[])",
            "cn.hutool.db.SqlConnRunner:java.util.List find(java.sql.Connection,cn.hutool.db.Entity)",
            "cn.hutool.db.SqlConnRunner:java.lang.Object page(java.sql.Connection,java.util.Collection,cn.hutool.db.Entity,cn.hutool.db.Page,cn.hutool.db.handler.RsHandler)",
            "cn.hutool.db.SqlConnRunner:cn.hutool.db.PageResult page(java.sql.Connection,java.util.Collection,cn.hutool.db.Entity,cn.hutool.db.Page)"
        ]
    },
    "cn.hutool.db.AbstractSqlRunner:int count(cn.hutool.db.Entity)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.DaoTemplate:int count(cn.hutool.db.Entity)"
        ]
    },
    "cn.hutool.db.SqlConnRunner:int insertOrUpdate(java.sql.Connection,cn.hutool.db.Entity,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.AbstractSqlRunner:int insertOrUpdate(cn.hutool.db.Entity,java.lang.String[])"
        ]
    },
    "cn.hutool.db.SqlConnRunner:cn.hutool.db.PageResult page(java.sql.Connection,java.util.Collection,cn.hutool.db.Entity,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.AbstractSqlRunner:cn.hutool.db.PageResult page(java.util.Collection,cn.hutool.db.Entity,int,int)"
        ]
    },
    "cn.hutool.db.SqlConnRunner:cn.hutool.db.PageResult page(java.sql.Connection,java.util.Collection,cn.hutool.db.Entity,cn.hutool.db.Page)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.AbstractSqlRunner:cn.hutool.db.PageResult page(java.util.Collection,cn.hutool.db.Entity,cn.hutool.db.Page)",
            "cn.hutool.db.SqlConnRunner:cn.hutool.db.PageResult page(java.sql.Connection,cn.hutool.db.Entity,cn.hutool.db.Page)"
        ]
    },
    "cn.hutool.db.AbstractSqlRunner:java.util.List query(java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.db.AbstractSqlRunner:java.util.List query(java.lang.String,java.lang.Class,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.db.AbstractSqlRunner:cn.hutool.db.Entity queryOne(java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.db.AbstractSqlRunner:java.lang.Number queryNumber(java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.db.AbstractSqlRunner:java.lang.String queryString(java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.db.DaoTemplate:java.util.List findBySql(java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.db.AbstractSqlRunner:java.lang.Object page(java.util.Collection,cn.hutool.db.Entity,cn.hutool.db.Page,cn.hutool.db.handler.RsHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.AbstractSqlRunner:java.lang.Object page(cn.hutool.db.Entity,cn.hutool.db.Page,cn.hutool.db.handler.RsHandler)"
        ]
    },
    "cn.hutool.db.SqlConnRunner:java.lang.Object page(java.sql.Connection,java.util.Collection,cn.hutool.db.Entity,int,int,cn.hutool.db.handler.RsHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.AbstractSqlRunner:java.lang.Object page(java.util.Collection,cn.hutool.db.Entity,int,int,cn.hutool.db.handler.RsHandler)",
            "cn.hutool.db.SqlConnRunner:cn.hutool.db.PageResult page(java.sql.Connection,java.util.Collection,cn.hutool.db.Entity,int,int)"
        ]
    },
    "cn.hutool.db.AbstractSqlRunner:java.util.List findBy(java.lang.String,cn.hutool.db.sql.Condition[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.db.AbstractSqlRunner:java.lang.Object find(java.util.Collection,cn.hutool.db.Entity,cn.hutool.db.handler.RsHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.AbstractSqlRunner:cn.hutool.db.Entity get(cn.hutool.db.Entity)",
            "cn.hutool.db.AbstractSqlRunner:java.lang.Object find(cn.hutool.db.Entity,cn.hutool.db.handler.RsHandler,java.lang.String[])",
            "cn.hutool.db.AbstractSqlRunner:java.util.List find(cn.hutool.db.Entity)",
            "cn.hutool.db.AbstractSqlRunner:java.util.List find(cn.hutool.db.Entity,java.lang.Class)",
            "cn.hutool.db.DaoTemplate:cn.hutool.db.Entity get(cn.hutool.db.Entity)",
            "cn.hutool.db.DaoTemplate:java.util.List find(cn.hutool.db.Entity)"
        ]
    },
    "cn.hutool.db.SqlConnRunner:java.lang.Object find(java.sql.Connection,cn.hutool.db.Entity,cn.hutool.db.handler.RsHandler,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.SqlConnRunner:java.util.List findAll(java.sql.Connection,cn.hutool.db.Entity)"
        ]
    },
    "cn.hutool.db.SqlConnRunner:java.util.List find(java.sql.Connection,cn.hutool.db.Entity)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.db.DaoTemplate:int count(cn.hutool.db.Entity)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.DaoTemplate:boolean exist(cn.hutool.db.Entity)"
        ]
    },
    "cn.hutool.db.AbstractSqlRunner:int insertOrUpdate(cn.hutool.db.Entity,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.db.AbstractSqlRunner:cn.hutool.db.PageResult page(java.util.Collection,cn.hutool.db.Entity,int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.db.AbstractSqlRunner:cn.hutool.db.PageResult page(java.util.Collection,cn.hutool.db.Entity,cn.hutool.db.Page)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.AbstractSqlRunner:cn.hutool.db.PageResult page(cn.hutool.db.Entity,cn.hutool.db.Page)",
            "cn.hutool.db.DaoTemplate:cn.hutool.db.PageResult page(cn.hutool.db.Entity,cn.hutool.db.Page,java.lang.String[])"
        ]
    },
    "cn.hutool.db.SqlConnRunner:cn.hutool.db.PageResult page(java.sql.Connection,cn.hutool.db.Entity,cn.hutool.db.Page)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.db.AbstractSqlRunner:java.lang.Object page(cn.hutool.db.Entity,cn.hutool.db.Page,cn.hutool.db.handler.RsHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.AbstractSqlRunner:java.lang.Object page(cn.hutool.db.Entity,int,int,cn.hutool.db.handler.RsHandler)",
            "cn.hutool.db.AbstractSqlRunner:java.util.List pageForEntityList(cn.hutool.db.Entity,cn.hutool.db.Page)"
        ]
    },
    "cn.hutool.db.AbstractSqlRunner:java.lang.Object page(java.util.Collection,cn.hutool.db.Entity,int,int,cn.hutool.db.handler.RsHandler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.db.AbstractSqlRunner:cn.hutool.db.Entity get(cn.hutool.db.Entity)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.AbstractSqlRunner:cn.hutool.db.Entity get(java.lang.String,java.lang.String,java.lang.Object)",
            "cn.hutool.db.ActiveEntity:cn.hutool.db.ActiveEntity load()"
        ]
    },
    "cn.hutool.db.AbstractSqlRunner:java.lang.Object find(cn.hutool.db.Entity,cn.hutool.db.handler.RsHandler,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.AbstractSqlRunner:java.util.List findAll(cn.hutool.db.Entity)",
            "cn.hutool.db.AbstractSqlRunner:java.util.List findAll(cn.hutool.db.Entity,java.lang.Class)"
        ]
    },
    "cn.hutool.db.AbstractSqlRunner:java.util.List find(cn.hutool.db.Entity)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.db.AbstractSqlRunner:java.util.List find(cn.hutool.db.Entity,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.db.DaoTemplate:cn.hutool.db.Entity get(cn.hutool.db.Entity)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.DaoTemplate:cn.hutool.db.Entity get(java.lang.String,java.lang.Object)"
        ]
    },
    "cn.hutool.db.DaoTemplate:java.util.List find(cn.hutool.db.Entity)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.DaoTemplate:java.util.List find(java.lang.String,java.lang.Object)",
            "cn.hutool.db.DaoTemplate:java.util.List findAll()"
        ]
    },
    "cn.hutool.db.SqlConnRunner:java.util.List findAll(java.sql.Connection,cn.hutool.db.Entity)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.SqlConnRunner:java.util.List findAll(java.sql.Connection,java.lang.String)",
            "cn.hutool.db.SqlConnRunner:java.util.List findBy(java.sql.Connection,java.lang.String,java.lang.String,java.lang.Object)",
            "cn.hutool.db.SqlConnRunner:java.util.List findLike(java.sql.Connection,java.lang.String,java.lang.String,java.lang.String,cn.hutool.db.sql.Condition$LikeType)",
            "cn.hutool.db.SqlConnRunner:java.util.List findIn(java.sql.Connection,java.lang.String,java.lang.String,java.lang.Object[])"
        ]
    },
    "cn.hutool.db.DaoTemplate:boolean exist(cn.hutool.db.Entity)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.db.AbstractSqlRunner:cn.hutool.db.PageResult page(cn.hutool.db.Entity,cn.hutool.db.Page)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.AbstractSqlRunner:cn.hutool.db.PageResult page(cn.hutool.db.Entity,int,int)",
            "cn.hutool.db.DaoTemplate:cn.hutool.db.PageResult page(cn.hutool.db.Entity,cn.hutool.db.Page)"
        ]
    },
    "cn.hutool.db.DaoTemplate:cn.hutool.db.PageResult page(cn.hutool.db.Entity,cn.hutool.db.Page,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.db.AbstractSqlRunner:java.lang.Object page(cn.hutool.db.Entity,int,int,cn.hutool.db.handler.RsHandler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.db.AbstractSqlRunner:java.util.List pageForEntityList(cn.hutool.db.Entity,cn.hutool.db.Page)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.AbstractSqlRunner:java.util.List pageForEntityList(cn.hutool.db.Entity,int,int)"
        ]
    },
    "cn.hutool.db.AbstractSqlRunner:cn.hutool.db.Entity get(java.lang.String,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.db.ActiveEntity:cn.hutool.db.ActiveEntity load()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.db.AbstractSqlRunner:java.util.List findAll(cn.hutool.db.Entity)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.AbstractSqlRunner:java.util.List findAll(java.lang.String)",
            "cn.hutool.db.AbstractSqlRunner:java.util.List findBy(java.lang.String,java.lang.String,java.lang.Object)",
            "cn.hutool.db.AbstractSqlRunner:java.util.List findLike(java.lang.String,java.lang.String,java.lang.String,cn.hutool.db.sql.Condition$LikeType)"
        ]
    },
    "cn.hutool.db.AbstractSqlRunner:java.util.List findAll(cn.hutool.db.Entity,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.db.DaoTemplate:cn.hutool.db.Entity get(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "cn.hutool.db.DaoTemplate:cn.hutool.db.Entity get(java.lang.Object)"
        ]
    },
    "cn.hutool.db.DaoTemplate:java.util.List find(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.db.DaoTemplate:java.util.List findAll()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.db.SqlConnRunner:java.util.List findAll(java.sql.Connection,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.db.SqlConnRunner:java.util.List findBy(java.sql.Connection,java.lang.String,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.db.SqlConnRunner:java.util.List findLike(java.sql.Connection,java.lang.String,java.lang.String,java.lang.String,cn.hutool.db.sql.Condition$LikeType)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.db.SqlConnRunner:java.util.List findIn(java.sql.Connection,java.lang.String,java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.db.AbstractSqlRunner:cn.hutool.db.PageResult page(cn.hutool.db.Entity,int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.db.DaoTemplate:cn.hutool.db.PageResult page(cn.hutool.db.Entity,cn.hutool.db.Page)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.db.AbstractSqlRunner:java.util.List pageForEntityList(cn.hutool.db.Entity,int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.db.AbstractSqlRunner:java.util.List findAll(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.db.AbstractSqlRunner:java.util.List findBy(java.lang.String,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.db.AbstractSqlRunner:java.util.List findLike(java.lang.String,java.lang.String,java.lang.String,cn.hutool.db.sql.Condition$LikeType)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "cn.hutool.db.DaoTemplate:cn.hutool.db.Entity get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    }
}
{
    "io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener:int onDataRead(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean)": {
        "isVulRoot": true,
        "vulCaller": [
            "io.netty.handler.codec.http2.Http2FrameListenerDecorator:int onDataRead(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean)",
            "io.netty.handler.codec.http2.Http2InboundFrameLogger$1:int onDataRead(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean)",
            "io.netty.handler.codec.http2.InboundHttpToHttp2Adapter:void handle(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Connection,io.netty.handler.codec.http2.Http2FrameListener,io.netty.handler.codec.http.FullHttpMessage)",
            "io.netty.handler.codec.http2.DelegatingDecompressorFrameListener:int onDataRead(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean)",
            "io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener:int onDataRead(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean)",
            "io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$PrefaceFrameListener:int onDataRead(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean)",
            "io.netty.handler.codec.http2.DefaultHttp2FrameReader:void readDataFrame(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener)"
        ]
    },
    "io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean)": {
        "isVulRoot": true,
        "vulCaller": [
            "io.netty.handler.codec.http2.Http2FrameListenerDecorator:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean)",
            "io.netty.handler.codec.http2.Http2InboundFrameLogger$1:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean)",
            "io.netty.handler.codec.http2.DelegatingDecompressorFrameListener:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean)",
            "io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean)",
            "io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean)",
            "io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$PrefaceFrameListener:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean)",
            "io.netty.handler.codec.http2.DefaultHttp2FrameReader$1:void processFragment(boolean,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener)"
        ]
    },
    "io.netty.handler.codec.http2.Http2FrameListenerDecorator:int onDataRead(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.netty.handler.codec.http2.Http2FrameListenerDecorator:int onDataRead(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean)",
            "io.netty.handler.codec.http2.Http2InboundFrameLogger$1:int onDataRead(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean)",
            "io.netty.handler.codec.http2.InboundHttpToHttp2Adapter:void handle(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Connection,io.netty.handler.codec.http2.Http2FrameListener,io.netty.handler.codec.http.FullHttpMessage)",
            "io.netty.handler.codec.http2.DelegatingDecompressorFrameListener:int onDataRead(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean)",
            "io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener:int onDataRead(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean)",
            "io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$PrefaceFrameListener:int onDataRead(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean)",
            "io.netty.handler.codec.http2.DefaultHttp2FrameReader:void readDataFrame(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener)"
        ]
    },
    "io.netty.handler.codec.http2.Http2InboundFrameLogger$1:int onDataRead(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.netty.handler.codec.http2.Http2FrameListenerDecorator:int onDataRead(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean)",
            "io.netty.handler.codec.http2.Http2InboundFrameLogger$1:int onDataRead(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean)",
            "io.netty.handler.codec.http2.InboundHttpToHttp2Adapter:void handle(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Connection,io.netty.handler.codec.http2.Http2FrameListener,io.netty.handler.codec.http.FullHttpMessage)",
            "io.netty.handler.codec.http2.DelegatingDecompressorFrameListener:int onDataRead(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean)",
            "io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener:int onDataRead(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean)",
            "io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$PrefaceFrameListener:int onDataRead(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean)",
            "io.netty.handler.codec.http2.DefaultHttp2FrameReader:void readDataFrame(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener)"
        ]
    },
    "io.netty.handler.codec.http2.InboundHttpToHttp2Adapter:void handle(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Connection,io.netty.handler.codec.http2.Http2FrameListener,io.netty.handler.codec.http.FullHttpMessage)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.netty.handler.codec.http2.InboundHttpToHttp2Adapter:void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object)",
            "io.netty.handler.codec.http2.Http2FrameCodec:void userEventTriggered(io.netty.channel.ChannelHandlerContext,java.lang.Object)"
        ]
    },
    "io.netty.handler.codec.http2.DelegatingDecompressorFrameListener:int onDataRead(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.netty.handler.codec.http2.Http2FrameListenerDecorator:int onDataRead(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean)",
            "io.netty.handler.codec.http2.Http2InboundFrameLogger$1:int onDataRead(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean)",
            "io.netty.handler.codec.http2.InboundHttpToHttp2Adapter:void handle(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Connection,io.netty.handler.codec.http2.Http2FrameListener,io.netty.handler.codec.http.FullHttpMessage)",
            "io.netty.handler.codec.http2.DelegatingDecompressorFrameListener:int onDataRead(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean)",
            "io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener:int onDataRead(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean)",
            "io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$PrefaceFrameListener:int onDataRead(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean)",
            "io.netty.handler.codec.http2.DefaultHttp2FrameReader:void readDataFrame(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener)"
        ]
    },
    "io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$PrefaceFrameListener:int onDataRead(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.netty.handler.codec.http2.Http2FrameListenerDecorator:int onDataRead(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean)",
            "io.netty.handler.codec.http2.Http2InboundFrameLogger$1:int onDataRead(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean)",
            "io.netty.handler.codec.http2.InboundHttpToHttp2Adapter:void handle(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Connection,io.netty.handler.codec.http2.Http2FrameListener,io.netty.handler.codec.http.FullHttpMessage)",
            "io.netty.handler.codec.http2.DelegatingDecompressorFrameListener:int onDataRead(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean)",
            "io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener:int onDataRead(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean)",
            "io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$PrefaceFrameListener:int onDataRead(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean)",
            "io.netty.handler.codec.http2.DefaultHttp2FrameReader:void readDataFrame(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener)"
        ]
    },
    "io.netty.handler.codec.http2.DefaultHttp2FrameReader:void readDataFrame(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.netty.handler.codec.http2.DefaultHttp2FrameReader:void processPayloadState(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener)"
        ]
    },
    "io.netty.handler.codec.http2.Http2FrameListenerDecorator:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.netty.handler.codec.http2.Http2FrameListenerDecorator:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean)",
            "io.netty.handler.codec.http2.Http2InboundFrameLogger$1:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean)",
            "io.netty.handler.codec.http2.DelegatingDecompressorFrameListener:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean)",
            "io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean)",
            "io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$PrefaceFrameListener:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean)",
            "io.netty.handler.codec.http2.DefaultHttp2FrameReader$1:void processFragment(boolean,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener)"
        ]
    },
    "io.netty.handler.codec.http2.Http2InboundFrameLogger$1:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.netty.handler.codec.http2.Http2FrameListenerDecorator:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean)",
            "io.netty.handler.codec.http2.Http2InboundFrameLogger$1:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean)",
            "io.netty.handler.codec.http2.DelegatingDecompressorFrameListener:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean)",
            "io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean)",
            "io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$PrefaceFrameListener:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean)",
            "io.netty.handler.codec.http2.DefaultHttp2FrameReader$1:void processFragment(boolean,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener)"
        ]
    },
    "io.netty.handler.codec.http2.DelegatingDecompressorFrameListener:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.netty.handler.codec.http2.Http2FrameListenerDecorator:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean)",
            "io.netty.handler.codec.http2.Http2InboundFrameLogger$1:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean)",
            "io.netty.handler.codec.http2.DelegatingDecompressorFrameListener:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean)",
            "io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean)",
            "io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$PrefaceFrameListener:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean)",
            "io.netty.handler.codec.http2.DefaultHttp2FrameReader$1:void processFragment(boolean,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener)"
        ]
    },
    "io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.netty.handler.codec.http2.Http2FrameListenerDecorator:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean)",
            "io.netty.handler.codec.http2.Http2InboundFrameLogger$1:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean)",
            "io.netty.handler.codec.http2.InboundHttpToHttp2Adapter:void handle(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Connection,io.netty.handler.codec.http2.Http2FrameListener,io.netty.handler.codec.http.FullHttpMessage)",
            "io.netty.handler.codec.http2.DelegatingDecompressorFrameListener:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean)",
            "io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$PrefaceFrameListener:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean)",
            "io.netty.handler.codec.http2.DefaultHttp2FrameReader$2:void processFragment(boolean,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener)"
        ]
    },
    "io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$PrefaceFrameListener:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.netty.handler.codec.http2.Http2FrameListenerDecorator:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean)",
            "io.netty.handler.codec.http2.Http2InboundFrameLogger$1:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean)",
            "io.netty.handler.codec.http2.DelegatingDecompressorFrameListener:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean)",
            "io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean)",
            "io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$PrefaceFrameListener:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,short,boolean,int,boolean)",
            "io.netty.handler.codec.http2.DefaultHttp2FrameReader$1:void processFragment(boolean,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener)"
        ]
    },
    "io.netty.handler.codec.http2.DefaultHttp2FrameReader$1:void processFragment(boolean,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.netty.handler.codec.http2.DefaultHttp2FrameReader:void readHeadersFrame(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener)",
            "io.netty.handler.codec.http2.DefaultHttp2FrameReader:void readPushPromiseFrame(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener)",
            "io.netty.handler.codec.http2.DefaultHttp2FrameReader:void readContinuationFrame(io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener)"
        ]
    },
    "io.netty.handler.codec.http2.InboundHttpToHttp2Adapter:void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.netty.handler.codec.http2.Http2FrameCodec:void userEventTriggered(io.netty.channel.ChannelHandlerContext,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder:void sendPreface(io.netty.channel.ChannelHandlerContext)"
        ]
    },
    "io.netty.handler.codec.http2.DefaultHttp2FrameReader:void processPayloadState(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.netty.handler.codec.http2.DefaultHttp2FrameReader:void readFrame(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener)"
        ]
    },
    "io.netty.handler.codec.http2.Http2FrameListenerDecorator:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.netty.handler.codec.http2.Http2FrameListenerDecorator:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean)",
            "io.netty.handler.codec.http2.Http2InboundFrameLogger$1:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean)",
            "io.netty.handler.codec.http2.InboundHttpToHttp2Adapter:void handle(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Connection,io.netty.handler.codec.http2.Http2FrameListener,io.netty.handler.codec.http.FullHttpMessage)",
            "io.netty.handler.codec.http2.DelegatingDecompressorFrameListener:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean)",
            "io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$PrefaceFrameListener:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean)",
            "io.netty.handler.codec.http2.DefaultHttp2FrameReader$2:void processFragment(boolean,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener)"
        ]
    },
    "io.netty.handler.codec.http2.Http2InboundFrameLogger$1:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.netty.handler.codec.http2.Http2FrameListenerDecorator:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean)",
            "io.netty.handler.codec.http2.Http2InboundFrameLogger$1:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean)",
            "io.netty.handler.codec.http2.InboundHttpToHttp2Adapter:void handle(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Connection,io.netty.handler.codec.http2.Http2FrameListener,io.netty.handler.codec.http.FullHttpMessage)",
            "io.netty.handler.codec.http2.DelegatingDecompressorFrameListener:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean)",
            "io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$PrefaceFrameListener:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean)",
            "io.netty.handler.codec.http2.DefaultHttp2FrameReader$2:void processFragment(boolean,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener)"
        ]
    },
    "io.netty.handler.codec.http2.DelegatingDecompressorFrameListener:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.netty.handler.codec.http2.Http2FrameListenerDecorator:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean)",
            "io.netty.handler.codec.http2.Http2InboundFrameLogger$1:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean)",
            "io.netty.handler.codec.http2.InboundHttpToHttp2Adapter:void handle(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Connection,io.netty.handler.codec.http2.Http2FrameListener,io.netty.handler.codec.http.FullHttpMessage)",
            "io.netty.handler.codec.http2.DelegatingDecompressorFrameListener:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean)",
            "io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$PrefaceFrameListener:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean)",
            "io.netty.handler.codec.http2.DefaultHttp2FrameReader$2:void processFragment(boolean,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener)"
        ]
    },
    "io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$PrefaceFrameListener:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.netty.handler.codec.http2.Http2FrameListenerDecorator:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean)",
            "io.netty.handler.codec.http2.Http2InboundFrameLogger$1:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean)",
            "io.netty.handler.codec.http2.InboundHttpToHttp2Adapter:void handle(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http2.Http2Connection,io.netty.handler.codec.http2.Http2FrameListener,io.netty.handler.codec.http.FullHttpMessage)",
            "io.netty.handler.codec.http2.DelegatingDecompressorFrameListener:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean)",
            "io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$PrefaceFrameListener:void onHeadersRead(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean)",
            "io.netty.handler.codec.http2.DefaultHttp2FrameReader$2:void processFragment(boolean,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener)"
        ]
    },
    "io.netty.handler.codec.http2.DefaultHttp2FrameReader$2:void processFragment(boolean,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.netty.handler.codec.http2.DefaultHttp2FrameReader:void readHeadersFrame(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener)",
            "io.netty.handler.codec.http2.DefaultHttp2FrameReader:void readPushPromiseFrame(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener)",
            "io.netty.handler.codec.http2.DefaultHttp2FrameReader:void readContinuationFrame(io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener)"
        ]
    },
    "io.netty.handler.codec.http2.DefaultHttp2FrameReader:void readHeadersFrame(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.netty.handler.codec.http2.DefaultHttp2FrameReader:void processPayloadState(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener)"
        ]
    },
    "io.netty.handler.codec.http2.DefaultHttp2FrameReader:void readPushPromiseFrame(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.netty.handler.codec.http2.DefaultHttp2FrameReader:void processPayloadState(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener)"
        ]
    },
    "io.netty.handler.codec.http2.DefaultHttp2FrameReader:void readContinuationFrame(io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.netty.handler.codec.http2.DefaultHttp2FrameReader:void processPayloadState(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener)"
        ]
    },
    "io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder:void sendPreface(io.netty.channel.ChannelHandlerContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder:void <init>(io.netty.handler.codec.http2.Http2ConnectionHandler,io.netty.channel.ChannelHandlerContext)",
            "io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder:void channelActive(io.netty.channel.ChannelHandlerContext)"
        ]
    },
    "io.netty.handler.codec.http2.DefaultHttp2FrameReader:void readFrame(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.netty.handler.codec.http2.Http2ServerUpgradeCodec:io.netty.handler.codec.http2.Http2Settings decodeSettings(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf)",
            "io.netty.handler.codec.http2.Http2InboundFrameLogger:void readFrame(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener)",
            "io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder:void decodeFrame(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)"
        ]
    },
    "io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder:void <init>(io.netty.handler.codec.http2.Http2ConnectionHandler,io.netty.channel.ChannelHandlerContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.netty.handler.codec.http2.Http2ConnectionHandler:void handlerAdded(io.netty.channel.ChannelHandlerContext)",
            "io.netty.handler.codec.http2.Http2ConnectionHandler:void channelActive(io.netty.channel.ChannelHandlerContext)"
        ]
    },
    "io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder:void channelActive(io.netty.channel.ChannelHandlerContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.netty.handler.codec.http2.Http2ConnectionHandler:void channelActive(io.netty.channel.ChannelHandlerContext)"
        ]
    },
    "io.netty.handler.codec.http2.Http2ServerUpgradeCodec:io.netty.handler.codec.http2.Http2Settings decodeSettings(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.netty.handler.codec.http2.Http2ServerUpgradeCodec:io.netty.handler.codec.http2.Http2Settings decodeSettingsHeader(io.netty.channel.ChannelHandlerContext,java.lang.CharSequence)"
        ]
    },
    "io.netty.handler.codec.http2.Http2InboundFrameLogger:void readFrame(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.netty.handler.codec.http2.Http2ServerUpgradeCodec:io.netty.handler.codec.http2.Http2Settings decodeSettings(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf)",
            "io.netty.handler.codec.http2.Http2InboundFrameLogger:void readFrame(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener)",
            "io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder:void decodeFrame(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)"
        ]
    },
    "io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder:void decodeFrame(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.netty.handler.codec.http2.DecoratingHttp2ConnectionDecoder:void decodeFrame(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)",
            "io.netty.handler.codec.http2.Http2ConnectionHandler$FrameDecoder:void decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)"
        ]
    },
    "io.netty.handler.codec.http2.Http2ConnectionHandler:void handlerAdded(io.netty.channel.ChannelHandlerContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.netty.handler.codec.http2.Http2FrameCodec:void handlerAdded(io.netty.channel.ChannelHandlerContext)"
        ]
    },
    "io.netty.handler.codec.http2.Http2ConnectionHandler:void channelActive(io.netty.channel.ChannelHandlerContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.netty.handler.codec.http2.Http2ServerUpgradeCodec:io.netty.handler.codec.http2.Http2Settings decodeSettingsHeader(io.netty.channel.ChannelHandlerContext,java.lang.CharSequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.netty.handler.codec.http2.Http2ServerUpgradeCodec:boolean prepareUpgradeResponse(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.FullHttpRequest,io.netty.handler.codec.http.HttpHeaders)"
        ]
    },
    "io.netty.handler.codec.http2.DecoratingHttp2ConnectionDecoder:void decodeFrame(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.netty.handler.codec.http2.DecoratingHttp2ConnectionDecoder:void decodeFrame(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)",
            "io.netty.handler.codec.http2.Http2ConnectionHandler$FrameDecoder:void decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)"
        ]
    },
    "io.netty.handler.codec.http2.Http2ConnectionHandler$FrameDecoder:void decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder:void decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)",
            "io.netty.handler.codec.http2.Http2ConnectionHandler:void decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)"
        ]
    },
    "io.netty.handler.codec.http2.Http2FrameCodec:void handlerAdded(io.netty.channel.ChannelHandlerContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.netty.handler.codec.http2.Http2ServerUpgradeCodec:boolean prepareUpgradeResponse(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.FullHttpRequest,io.netty.handler.codec.http.HttpHeaders)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder:void decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.netty.handler.codec.http2.Http2ConnectionHandler$PrefaceDecoder:void decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)",
            "io.netty.handler.codec.http2.Http2ConnectionHandler:void decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)"
        ]
    },
    "io.netty.handler.codec.http2.Http2ConnectionHandler:void decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    }
}
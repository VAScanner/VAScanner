{
    "org.apache.iotdb.tsfile.read.filter.operator.Regexp:boolean satisfy(long,java.lang.Object)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.iotdb.tsfile.read.filter.operator.AndFilter:boolean satisfy(long,java.lang.Object)",
            "org.apache.iotdb.tsfile.read.filter.operator.NotFilter:boolean satisfy(long,java.lang.Object)",
            "org.apache.iotdb.tsfile.read.filter.operator.OrFilter:boolean satisfy(long,java.lang.Object)",
            "org.apache.iotdb.tsfile.read.reader.page.AlignedPageReader:org.apache.iotdb.tsfile.read.common.BatchData getAllSatisfiedPageData(boolean)",
            "org.apache.iotdb.tsfile.read.reader.page.PageReader:org.apache.iotdb.tsfile.read.common.BatchData getAllSatisfiedPageData(boolean)",
            "org.apache.iotdb.tsfile.read.reader.page.ValuePageReader:org.apache.iotdb.tsfile.read.common.BatchData nextBatch(long[],boolean,org.apache.iotdb.tsfile.read.filter.basic.Filter)",
            "org.apache.iotdb.tsfile.v2.read.reader.page.PageReaderV2:org.apache.iotdb.tsfile.read.common.BatchData getAllSatisfiedPageData(boolean)"
        ]
    },
    "org.apache.iotdb.tsfile.read.filter.operator.AndFilter:boolean satisfy(long,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.iotdb.tsfile.read.filter.operator.AndFilter:boolean satisfy(long,java.lang.Object)",
            "org.apache.iotdb.tsfile.read.filter.operator.NotFilter:boolean satisfy(long,java.lang.Object)",
            "org.apache.iotdb.tsfile.read.filter.operator.OrFilter:boolean satisfy(long,java.lang.Object)",
            "org.apache.iotdb.tsfile.read.reader.page.AlignedPageReader:org.apache.iotdb.tsfile.read.common.BatchData getAllSatisfiedPageData(boolean)",
            "org.apache.iotdb.tsfile.read.reader.page.PageReader:org.apache.iotdb.tsfile.read.common.BatchData getAllSatisfiedPageData(boolean)",
            "org.apache.iotdb.tsfile.read.reader.page.ValuePageReader:org.apache.iotdb.tsfile.read.common.BatchData nextBatch(long[],boolean,org.apache.iotdb.tsfile.read.filter.basic.Filter)",
            "org.apache.iotdb.tsfile.v2.read.reader.page.PageReaderV2:org.apache.iotdb.tsfile.read.common.BatchData getAllSatisfiedPageData(boolean)"
        ]
    },
    "org.apache.iotdb.tsfile.read.filter.operator.NotFilter:boolean satisfy(long,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.iotdb.tsfile.read.filter.operator.AndFilter:boolean satisfy(long,java.lang.Object)",
            "org.apache.iotdb.tsfile.read.filter.operator.NotFilter:boolean satisfy(long,java.lang.Object)",
            "org.apache.iotdb.tsfile.read.filter.operator.OrFilter:boolean satisfy(long,java.lang.Object)",
            "org.apache.iotdb.tsfile.read.reader.page.AlignedPageReader:org.apache.iotdb.tsfile.read.common.BatchData getAllSatisfiedPageData(boolean)",
            "org.apache.iotdb.tsfile.read.reader.page.PageReader:org.apache.iotdb.tsfile.read.common.BatchData getAllSatisfiedPageData(boolean)",
            "org.apache.iotdb.tsfile.read.reader.page.ValuePageReader:org.apache.iotdb.tsfile.read.common.BatchData nextBatch(long[],boolean,org.apache.iotdb.tsfile.read.filter.basic.Filter)",
            "org.apache.iotdb.tsfile.v2.read.reader.page.PageReaderV2:org.apache.iotdb.tsfile.read.common.BatchData getAllSatisfiedPageData(boolean)"
        ]
    },
    "org.apache.iotdb.tsfile.read.filter.operator.OrFilter:boolean satisfy(long,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.iotdb.tsfile.read.filter.operator.AndFilter:boolean satisfy(long,java.lang.Object)",
            "org.apache.iotdb.tsfile.read.filter.operator.NotFilter:boolean satisfy(long,java.lang.Object)",
            "org.apache.iotdb.tsfile.read.filter.operator.OrFilter:boolean satisfy(long,java.lang.Object)",
            "org.apache.iotdb.tsfile.read.reader.page.AlignedPageReader:org.apache.iotdb.tsfile.read.common.BatchData getAllSatisfiedPageData(boolean)",
            "org.apache.iotdb.tsfile.read.reader.page.PageReader:org.apache.iotdb.tsfile.read.common.BatchData getAllSatisfiedPageData(boolean)",
            "org.apache.iotdb.tsfile.read.reader.page.ValuePageReader:org.apache.iotdb.tsfile.read.common.BatchData nextBatch(long[],boolean,org.apache.iotdb.tsfile.read.filter.basic.Filter)",
            "org.apache.iotdb.tsfile.v2.read.reader.page.PageReaderV2:org.apache.iotdb.tsfile.read.common.BatchData getAllSatisfiedPageData(boolean)"
        ]
    },
    "org.apache.iotdb.tsfile.read.reader.page.AlignedPageReader:org.apache.iotdb.tsfile.read.common.BatchData getAllSatisfiedPageData(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.iotdb.tsfile.read.reader.IPageReader:org.apache.iotdb.tsfile.read.common.BatchData getAllSatisfiedPageData()"
        ]
    },
    "org.apache.iotdb.tsfile.read.reader.page.PageReader:org.apache.iotdb.tsfile.read.common.BatchData getAllSatisfiedPageData(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.iotdb.tsfile.read.reader.IPageReader:org.apache.iotdb.tsfile.read.common.BatchData getAllSatisfiedPageData()",
            "org.apache.iotdb.tsfile.v2.read.reader.page.PageReaderV2:org.apache.iotdb.tsfile.read.common.BatchData getAllSatisfiedPageData(boolean)"
        ]
    },
    "org.apache.iotdb.tsfile.read.reader.page.ValuePageReader:org.apache.iotdb.tsfile.read.common.BatchData nextBatch(long[],boolean,org.apache.iotdb.tsfile.read.filter.basic.Filter)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.iotdb.tsfile.v2.read.reader.page.PageReaderV2:org.apache.iotdb.tsfile.read.common.BatchData getAllSatisfiedPageData(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.iotdb.tsfile.read.reader.IPageReader:org.apache.iotdb.tsfile.read.common.BatchData getAllSatisfiedPageData()"
        ]
    },
    "org.apache.iotdb.tsfile.read.reader.IPageReader:org.apache.iotdb.tsfile.read.common.BatchData getAllSatisfiedPageData()": {
        "isVulRoot": false,
        "vulCaller": []
    }
}
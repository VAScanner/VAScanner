{
    "net.sourceforge.pmd.RuleSetFactory:void parsePropertyNodeBR(net.sourceforge.pmd.Rule,org.w3c.dom.Node)": {
        "isVulRoot": true,
        "vulCaller": [
            "net.sourceforge.pmd.RuleSetFactory:void parsePropertiesNode(net.sourceforge.pmd.Rule,org.w3c.dom.Node)"
        ]
    },
    "net.sourceforge.pmd.RuleSetFactory:boolean containsRule(net.sourceforge.pmd.RuleSetReferenceId,java.lang.String)": {
        "isVulRoot": true,
        "vulCaller": [
            "net.sourceforge.pmd.RuleSetFactory:void parseRuleReferenceNode(net.sourceforge.pmd.RuleSetReferenceId,net.sourceforge.pmd.RuleSet,org.w3c.dom.Node,java.lang.String)"
        ]
    },
    "net.sourceforge.pmd.RuleSetFactory:void parsePropertiesNode(net.sourceforge.pmd.Rule,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "net.sourceforge.pmd.RuleSetFactory:void parseSingleRuleNode(net.sourceforge.pmd.RuleSetReferenceId,net.sourceforge.pmd.RuleSet,org.w3c.dom.Node)",
            "net.sourceforge.pmd.RuleSetFactory:void parseRuleReferenceNode(net.sourceforge.pmd.RuleSetReferenceId,net.sourceforge.pmd.RuleSet,org.w3c.dom.Node,java.lang.String)"
        ]
    },
    "net.sourceforge.pmd.RuleSetFactory:void parseRuleReferenceNode(net.sourceforge.pmd.RuleSetReferenceId,net.sourceforge.pmd.RuleSet,org.w3c.dom.Node,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "net.sourceforge.pmd.RuleSetFactory:void parseRuleNode(net.sourceforge.pmd.RuleSetReferenceId,net.sourceforge.pmd.RuleSet,org.w3c.dom.Node)"
        ]
    },
    "net.sourceforge.pmd.RuleSetFactory:void parseSingleRuleNode(net.sourceforge.pmd.RuleSetReferenceId,net.sourceforge.pmd.RuleSet,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "net.sourceforge.pmd.RuleSetFactory:void parseRuleNode(net.sourceforge.pmd.RuleSetReferenceId,net.sourceforge.pmd.RuleSet,org.w3c.dom.Node)"
        ]
    },
    "net.sourceforge.pmd.RuleSetFactory:void parseRuleNode(net.sourceforge.pmd.RuleSetReferenceId,net.sourceforge.pmd.RuleSet,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "net.sourceforge.pmd.RuleSetFactory:net.sourceforge.pmd.RuleSet parseRuleSetNode(net.sourceforge.pmd.RuleSetReferenceId,java.io.InputStream)"
        ]
    },
    "net.sourceforge.pmd.RuleSetFactory:net.sourceforge.pmd.RuleSet parseRuleSetNode(net.sourceforge.pmd.RuleSetReferenceId,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "net.sourceforge.pmd.RuleSetFactory:net.sourceforge.pmd.RuleSet createRuleSet(net.sourceforge.pmd.RuleSetReferenceId)"
        ]
    },
    "net.sourceforge.pmd.RuleSetFactory:net.sourceforge.pmd.RuleSet createRuleSet(net.sourceforge.pmd.RuleSetReferenceId)": {
        "isVulRoot": false,
        "vulCaller": [
            "net.sourceforge.pmd.RuleSetFactory:net.sourceforge.pmd.RuleSets createRuleSets(java.util.List)",
            "net.sourceforge.pmd.RuleSetFactory:net.sourceforge.pmd.RuleSet createRuleSet(java.lang.String)",
            "net.sourceforge.pmd.RuleSetFactory:net.sourceforge.pmd.Rule createRule(net.sourceforge.pmd.RuleSetReferenceId)",
            "net.sourceforge.pmd.RuleSetFactory:void parseRuleSetReferenceNode(net.sourceforge.pmd.RuleSetReferenceId,net.sourceforge.pmd.RuleSet,org.w3c.dom.Element,java.lang.String)"
        ]
    },
    "net.sourceforge.pmd.RuleSetFactory:net.sourceforge.pmd.RuleSets createRuleSets(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "net.sourceforge.pmd.RuleSetFactory:java.util.Iterator getRegisteredRuleSets()",
            "net.sourceforge.pmd.RuleSetFactory:net.sourceforge.pmd.RuleSets createRuleSets(java.lang.String)"
        ]
    },
    "net.sourceforge.pmd.RuleSetFactory:net.sourceforge.pmd.RuleSet createRuleSet(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "net.sourceforge.pmd.benchmark.Benchmarker:void main(java.lang.String[])"
        ]
    },
    "net.sourceforge.pmd.RuleSetFactory:net.sourceforge.pmd.Rule createRule(net.sourceforge.pmd.RuleSetReferenceId)": {
        "isVulRoot": false,
        "vulCaller": [
            "net.sourceforge.pmd.RuleSetFactory:void parseRuleReferenceNode(net.sourceforge.pmd.RuleSetReferenceId,net.sourceforge.pmd.RuleSet,org.w3c.dom.Node,java.lang.String)"
        ]
    },
    "net.sourceforge.pmd.RuleSetFactory:void parseRuleSetReferenceNode(net.sourceforge.pmd.RuleSetReferenceId,net.sourceforge.pmd.RuleSet,org.w3c.dom.Element,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "net.sourceforge.pmd.RuleSetFactory:void parseRuleNode(net.sourceforge.pmd.RuleSetReferenceId,net.sourceforge.pmd.RuleSet,org.w3c.dom.Node)"
        ]
    },
    "net.sourceforge.pmd.RuleSetFactory:java.util.Iterator getRegisteredRuleSets()": {
        "isVulRoot": false,
        "vulCaller": [
            "net.sourceforge.pmd.benchmark.Benchmarker:void main(java.lang.String[])"
        ]
    },
    "net.sourceforge.pmd.RuleSetFactory:net.sourceforge.pmd.RuleSets createRuleSets(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "net.sourceforge.pmd.processor.PmdRunnable$PmdThread:net.sourceforge.pmd.RuleSets getRuleSets(java.lang.String)",
            "net.sourceforge.pmd.ant.internal.PMDTaskImpl:void doTask()",
            "net.sourceforge.pmd.RulesetsFactoryUtils:net.sourceforge.pmd.RuleSets getRuleSets(java.lang.String,net.sourceforge.pmd.RuleSetFactory)"
        ]
    },
    "net.sourceforge.pmd.benchmark.Benchmarker:void main(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "net.sourceforge.pmd.processor.PmdRunnable$PmdThread:net.sourceforge.pmd.RuleSets getRuleSets(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "net.sourceforge.pmd.processor.PmdRunnable:net.sourceforge.pmd.Report call()"
        ]
    },
    "net.sourceforge.pmd.ant.internal.PMDTaskImpl:void doTask()": {
        "isVulRoot": false,
        "vulCaller": [
            "net.sourceforge.pmd.ant.internal.PMDTaskImpl:void execute()"
        ]
    },
    "net.sourceforge.pmd.RulesetsFactoryUtils:net.sourceforge.pmd.RuleSets getRuleSets(java.lang.String,net.sourceforge.pmd.RuleSetFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "net.sourceforge.pmd.processor.AbstractPMDProcessor:net.sourceforge.pmd.RuleSets createRuleSets(net.sourceforge.pmd.RuleSetFactory)",
            "net.sourceforge.pmd.RulesetsFactoryUtils:net.sourceforge.pmd.RuleSets getRuleSetsWithBenchmark(java.lang.String,net.sourceforge.pmd.RuleSetFactory)"
        ]
    },
    "net.sourceforge.pmd.processor.PmdRunnable:net.sourceforge.pmd.Report call()": {
        "isVulRoot": false,
        "vulCaller": [
            "net.sourceforge.pmd.processor.PmdRunnable:java.lang.Object call()"
        ]
    },
    "net.sourceforge.pmd.ant.internal.PMDTaskImpl:void execute()": {
        "isVulRoot": false,
        "vulCaller": [
            "net.sourceforge.pmd.ant.PMDTask:void execute()"
        ]
    },
    "net.sourceforge.pmd.processor.AbstractPMDProcessor:net.sourceforge.pmd.RuleSets createRuleSets(net.sourceforge.pmd.RuleSetFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "net.sourceforge.pmd.processor.MonoThreadProcessor:void processFiles(net.sourceforge.pmd.RuleSetFactory,java.util.List,net.sourceforge.pmd.RuleContext,java.util.List)",
            "net.sourceforge.pmd.processor.MultiThreadProcessor:void processFiles(net.sourceforge.pmd.RuleSetFactory,java.util.List,net.sourceforge.pmd.RuleContext,java.util.List)"
        ]
    },
    "net.sourceforge.pmd.RulesetsFactoryUtils:net.sourceforge.pmd.RuleSets getRuleSetsWithBenchmark(java.lang.String,net.sourceforge.pmd.RuleSetFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "net.sourceforge.pmd.PMD:void doPMD(net.sourceforge.pmd.PMDConfiguration)"
        ]
    },
    "net.sourceforge.pmd.processor.PmdRunnable:java.lang.Object call()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "net.sourceforge.pmd.ant.PMDTask:void execute()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "net.sourceforge.pmd.processor.MonoThreadProcessor:void processFiles(net.sourceforge.pmd.RuleSetFactory,java.util.List,net.sourceforge.pmd.RuleContext,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "net.sourceforge.pmd.PMD:void processFiles(net.sourceforge.pmd.PMDConfiguration,net.sourceforge.pmd.RuleSetFactory,java.util.List,net.sourceforge.pmd.RuleContext,java.util.List)"
        ]
    },
    "net.sourceforge.pmd.processor.MultiThreadProcessor:void processFiles(net.sourceforge.pmd.RuleSetFactory,java.util.List,net.sourceforge.pmd.RuleContext,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "net.sourceforge.pmd.PMD:void processFiles(net.sourceforge.pmd.PMDConfiguration,net.sourceforge.pmd.RuleSetFactory,java.util.List,net.sourceforge.pmd.RuleContext,java.util.List)"
        ]
    },
    "net.sourceforge.pmd.PMD:void doPMD(net.sourceforge.pmd.PMDConfiguration)": {
        "isVulRoot": false,
        "vulCaller": [
            "net.sourceforge.pmd.PMD:int run(java.lang.String[])"
        ]
    },
    "net.sourceforge.pmd.PMD:void processFiles(net.sourceforge.pmd.PMDConfiguration,net.sourceforge.pmd.RuleSetFactory,java.util.List,net.sourceforge.pmd.RuleContext,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "net.sourceforge.pmd.ant.internal.PMDTaskImpl:void doTask()",
            "net.sourceforge.pmd.PMD:void doPMD(net.sourceforge.pmd.PMDConfiguration)"
        ]
    },
    "net.sourceforge.pmd.PMD:int run(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "net.sourceforge.pmd.cli.PMDCommandLineInterface:void run(java.lang.String[])"
        ]
    },
    "net.sourceforge.pmd.cli.PMDCommandLineInterface:void run(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "net.sourceforge.pmd.PMD:void main(java.lang.String[])"
        ]
    },
    "net.sourceforge.pmd.PMD:void main(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    }
}
{
    "org.opensearch.analysis.common.HyphenationCompoundWordTokenFilterFactory:void <init>(org.opensearch.index.IndexSettings,org.opensearch.env.Environment,java.lang.String,org.opensearch.common.settings.Settings)": {
        "isVulRoot": true,
        "vulCaller": []
    },
    "org.opensearch.analysis.common.SynonymTokenFilterFactory:org.apache.lucene.analysis.synonym.SynonymMap buildSynonyms(org.apache.lucene.analysis.Analyzer,java.io.Reader)": {
        "isVulRoot": true,
        "vulCaller": []
    },
    "org.opensearch.analysis.common.SynonymTokenFilterFactory:java.io.Reader getRulesFromSettings(org.opensearch.env.Environment)": {
        "isVulRoot": true,
        "vulCaller": []
    },
    "org.opensearch.analysis.common.WordDelimiterTokenFilterFactory:byte[] parseTypes(java.util.Collection)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.opensearch.analysis.common.WordDelimiterGraphTokenFilterFactory:void <init>(org.opensearch.index.IndexSettings,org.opensearch.env.Environment,java.lang.String,org.opensearch.common.settings.Settings)",
            "org.opensearch.analysis.common.WordDelimiterTokenFilterFactory:void <init>(org.opensearch.index.IndexSettings,org.opensearch.env.Environment,java.lang.String,org.opensearch.common.settings.Settings)"
        ]
    },
    "org.opensearch.analysis.common.WordDelimiterGraphTokenFilterFactory:void <init>(org.opensearch.index.IndexSettings,org.opensearch.env.Environment,java.lang.String,org.opensearch.common.settings.Settings)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.opensearch.analysis.common.WordDelimiterTokenFilterFactory:void <init>(org.opensearch.index.IndexSettings,org.opensearch.env.Environment,java.lang.String,org.opensearch.common.settings.Settings)": {
        "isVulRoot": false,
        "vulCaller": []
    }
}
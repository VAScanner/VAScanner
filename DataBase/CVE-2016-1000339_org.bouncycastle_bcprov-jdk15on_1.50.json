{
    "org.bouncycastle.crypto.engines.AESEngine:void init(boolean,org.bouncycastle.crypto.CipherParameters)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.bouncycastle.crypto.BufferedBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.StreamBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.digests.GOST3411Digest:void <init>()",
            "org.bouncycastle.crypto.digests.GOST3411Digest:void <init>(byte[])",
            "org.bouncycastle.crypto.digests.GOST3411Digest:void E(byte[],byte[],int,byte[],int)",
            "org.bouncycastle.crypto.digests.GOST3411Digest:void reset(org.bouncycastle.util.Memoable)",
            "org.bouncycastle.crypto.engines.RFC3394WrapEngine:byte[] wrap(byte[],int,int)",
            "org.bouncycastle.crypto.engines.RFC3394WrapEngine:byte[] unwrap(byte[],int,int)",
            "org.bouncycastle.crypto.macs.BlockCipherMac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.CBCBlockCipherMac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.CMac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.ISO9797Alg3Mac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.MacCFBBlockCipher:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.Poly1305:void setKey(byte[],byte[])",
            "org.bouncycastle.crypto.modes.CBCBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.CFBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.GCFBBlockCipher:int processBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.GCMBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.GOFBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.OCBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.OFBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.PGPCFBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.SICBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:void CTR_DRBG_Update(byte[],byte[],byte[])",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:byte[] Block_Cipher_df(byte[],int)",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:void BCC(byte[],byte[],byte[],byte[])",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:int generate(byte[],byte[],boolean)",
            "org.bouncycastle.crypto.tls.TlsBlockCipher:void <init>(org.bouncycastle.crypto.tls.TlsContext,org.bouncycastle.crypto.BlockCipher,org.bouncycastle.crypto.BlockCipher,org.bouncycastle.crypto.Digest,org.bouncycastle.crypto.Digest,int)",
            "org.bouncycastle.crypto.tls.TlsBlockCipher:byte[] encodePlaintext(long,short,byte[],int,int)",
            "org.bouncycastle.crypto.tls.TlsBlockCipher:byte[] decodeCiphertext(long,short,byte[],int,int)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey:void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.dh.KeyFactorySpi:java.security.PublicKey generatePublic(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.util.DHUtil:org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePublicKeyParameter(java.security.PublicKey)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.dh.IESCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.asymmetric.ies.CipherSpi:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dh.KeyFactorySpi:java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec)": {
        "isVulRoot": true,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.params.DHPublicKeyParameters:void <init>(java.math.BigInteger,org.bouncycastle.crypto.params.DHParameters)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.bouncycastle.crypto.generators.DHBasicKeyPairGenerator:org.bouncycastle.crypto.AsymmetricCipherKeyPair generateKeyPair()",
            "org.bouncycastle.crypto.generators.DHKeyPairGenerator:org.bouncycastle.crypto.AsymmetricCipherKeyPair generateKeyPair()",
            "org.bouncycastle.crypto.parsers.DHIESPublicKeyParser:org.bouncycastle.crypto.params.AsymmetricKeyParameter readKey(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.ServerDHParams:org.bouncycastle.crypto.tls.ServerDHParams parse(java.io.InputStream)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.DHUtil:org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePublicKeyParameter(java.security.PublicKey)",
            "org.bouncycastle.jce.provider.DHUtil:org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePublicKeyParameter(java.security.PublicKey)"
        ]
    },
    "org.bouncycastle.crypto.BufferedBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.engines.IESEngine:byte[] encryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.engines.IESEngine:byte[] decryptBlock(byte[],int,int)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)"
        ]
    },
    "org.bouncycastle.crypto.StreamBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsStreamCipher:void <init>(org.bouncycastle.crypto.tls.TlsContext,org.bouncycastle.crypto.StreamCipher,org.bouncycastle.crypto.StreamCipher,org.bouncycastle.crypto.Digest,org.bouncycastle.crypto.Digest,int)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)"
        ]
    },
    "org.bouncycastle.crypto.digests.GOST3411Digest:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.SignatureSpi:void <init>()",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.SignatureSpi:void <init>()",
            "org.bouncycastle.jcajce.provider.digest.GOST3411$Digest:void <init>()",
            "org.bouncycastle.jcajce.provider.digest.GOST3411$HashMac:void <init>()",
            "org.bouncycastle.jcajce.provider.symmetric.util.PBE$Util:org.bouncycastle.crypto.PBEParametersGenerator makePBEGenerator(int,int)"
        ]
    },
    "org.bouncycastle.crypto.digests.GOST3411Digest:void <init>(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpi:void engineInitSign(java.security.PrivateKey)"
        ]
    },
    "org.bouncycastle.crypto.digests.GOST3411Digest:void E(byte[],byte[],int,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.digests.GOST3411Digest:void processBlock(byte[],int)"
        ]
    },
    "org.bouncycastle.crypto.digests.GOST3411Digest:void reset(org.bouncycastle.util.Memoable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.digests.GOST3411Digest:void <init>(org.bouncycastle.crypto.digests.GOST3411Digest)",
            "org.bouncycastle.crypto.macs.HMac:int doFinal(byte[],int)"
        ]
    },
    "org.bouncycastle.crypto.engines.RFC3394WrapEngine:byte[] wrap(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:byte[] engineWrap(java.security.Key)"
        ]
    },
    "org.bouncycastle.crypto.engines.RFC3394WrapEngine:byte[] unwrap(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:java.security.Key engineUnwrap(byte[],java.lang.String,int)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:java.security.Key engineUnwrap(byte[],java.lang.String,int)"
        ]
    },
    "org.bouncycastle.crypto.macs.BlockCipherMac:void init(org.bouncycastle.crypto.CipherParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.engines.IESEngine:byte[] encryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.engines.IESEngine:byte[] decryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.generators.KDFCounterBytesGenerator:void init(org.bouncycastle.crypto.DerivationParameters)",
            "org.bouncycastle.crypto.generators.KDFDoublePipelineIterationBytesGenerator:void init(org.bouncycastle.crypto.DerivationParameters)",
            "org.bouncycastle.crypto.generators.KDFFeedbackBytesGenerator:void init(org.bouncycastle.crypto.DerivationParameters)",
            "org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator:byte[] generateDerivedKey(int)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:void hmac_DRBG_Update_Func(byte[],byte)",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:int generate(byte[],byte[],boolean)",
            "org.bouncycastle.crypto.tls.TlsMac:void <init>(org.bouncycastle.crypto.tls.TlsContext,org.bouncycastle.crypto.Digest,byte[],int,int)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineInit(java.security.Key,java.security.spec.AlgorithmParameterSpec)"
        ]
    },
    "org.bouncycastle.crypto.macs.CBCBlockCipherMac:void init(org.bouncycastle.crypto.CipherParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.engines.IESEngine:byte[] encryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.engines.IESEngine:byte[] decryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.generators.KDFCounterBytesGenerator:void init(org.bouncycastle.crypto.DerivationParameters)",
            "org.bouncycastle.crypto.generators.KDFDoublePipelineIterationBytesGenerator:void init(org.bouncycastle.crypto.DerivationParameters)",
            "org.bouncycastle.crypto.generators.KDFFeedbackBytesGenerator:void init(org.bouncycastle.crypto.DerivationParameters)",
            "org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator:byte[] generateDerivedKey(int)",
            "org.bouncycastle.crypto.modes.CCMBlockCipher:int calculateMac(byte[],int,int,byte[])",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:void hmac_DRBG_Update_Func(byte[],byte)",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:int generate(byte[],byte[],boolean)",
            "org.bouncycastle.crypto.tls.TlsMac:void <init>(org.bouncycastle.crypto.tls.TlsContext,org.bouncycastle.crypto.Digest,byte[],int,int)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineInit(java.security.Key,java.security.spec.AlgorithmParameterSpec)"
        ]
    },
    "org.bouncycastle.crypto.macs.CMac:void init(org.bouncycastle.crypto.CipherParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.engines.IESEngine:byte[] encryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.engines.IESEngine:byte[] decryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.generators.KDFCounterBytesGenerator:void init(org.bouncycastle.crypto.DerivationParameters)",
            "org.bouncycastle.crypto.generators.KDFDoublePipelineIterationBytesGenerator:void init(org.bouncycastle.crypto.DerivationParameters)",
            "org.bouncycastle.crypto.generators.KDFFeedbackBytesGenerator:void init(org.bouncycastle.crypto.DerivationParameters)",
            "org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator:byte[] generateDerivedKey(int)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:void hmac_DRBG_Update_Func(byte[],byte)",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:int generate(byte[],byte[],boolean)",
            "org.bouncycastle.crypto.tls.TlsMac:void <init>(org.bouncycastle.crypto.tls.TlsContext,org.bouncycastle.crypto.Digest,byte[],int,int)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineInit(java.security.Key,java.security.spec.AlgorithmParameterSpec)"
        ]
    },
    "org.bouncycastle.crypto.macs.ISO9797Alg3Mac:void init(org.bouncycastle.crypto.CipherParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.engines.IESEngine:byte[] encryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.engines.IESEngine:byte[] decryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.generators.KDFCounterBytesGenerator:void init(org.bouncycastle.crypto.DerivationParameters)",
            "org.bouncycastle.crypto.generators.KDFDoublePipelineIterationBytesGenerator:void init(org.bouncycastle.crypto.DerivationParameters)",
            "org.bouncycastle.crypto.generators.KDFFeedbackBytesGenerator:void init(org.bouncycastle.crypto.DerivationParameters)",
            "org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator:byte[] generateDerivedKey(int)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:void hmac_DRBG_Update_Func(byte[],byte)",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:int generate(byte[],byte[],boolean)",
            "org.bouncycastle.crypto.tls.TlsMac:void <init>(org.bouncycastle.crypto.tls.TlsContext,org.bouncycastle.crypto.Digest,byte[],int,int)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineInit(java.security.Key,java.security.spec.AlgorithmParameterSpec)"
        ]
    },
    "org.bouncycastle.crypto.macs.MacCFBBlockCipher:void init(org.bouncycastle.crypto.CipherParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.macs.CFBBlockCipherMac:void init(org.bouncycastle.crypto.CipherParameters)"
        ]
    },
    "org.bouncycastle.crypto.macs.Poly1305:void setKey(byte[],byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.macs.Poly1305:void init(org.bouncycastle.crypto.CipherParameters)"
        ]
    },
    "org.bouncycastle.crypto.modes.CBCBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.BufferedBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.StreamBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.digests.GOST3411Digest:void <init>()",
            "org.bouncycastle.crypto.digests.GOST3411Digest:void <init>(byte[])",
            "org.bouncycastle.crypto.digests.GOST3411Digest:void E(byte[],byte[],int,byte[],int)",
            "org.bouncycastle.crypto.digests.GOST3411Digest:void reset(org.bouncycastle.util.Memoable)",
            "org.bouncycastle.crypto.engines.DESedeWrapEngine:byte[] wrap(byte[],int,int)",
            "org.bouncycastle.crypto.engines.DESedeWrapEngine:byte[] unwrap(byte[],int,int)",
            "org.bouncycastle.crypto.engines.RC2WrapEngine:byte[] wrap(byte[],int,int)",
            "org.bouncycastle.crypto.engines.RC2WrapEngine:byte[] unwrap(byte[],int,int)",
            "org.bouncycastle.crypto.engines.RFC3211WrapEngine:byte[] wrap(byte[],int,int)",
            "org.bouncycastle.crypto.engines.RFC3211WrapEngine:byte[] unwrap(byte[],int,int)",
            "org.bouncycastle.crypto.engines.RFC3394WrapEngine:byte[] wrap(byte[],int,int)",
            "org.bouncycastle.crypto.engines.RFC3394WrapEngine:byte[] unwrap(byte[],int,int)",
            "org.bouncycastle.crypto.macs.BlockCipherMac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.CBCBlockCipherMac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.CMac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.ISO9797Alg3Mac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.MacCFBBlockCipher:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.Poly1305:void setKey(byte[],byte[])",
            "org.bouncycastle.crypto.modes.CBCBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.CFBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.GCFBBlockCipher:int processBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.GCMBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.GOFBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.OCBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.OFBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.PGPCFBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.SICBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:void CTR_DRBG_Update(byte[],byte[],byte[])",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:byte[] Block_Cipher_df(byte[],int)",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:void BCC(byte[],byte[],byte[],byte[])",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:int generate(byte[],byte[],boolean)",
            "org.bouncycastle.crypto.tls.TlsBlockCipher:void <init>(org.bouncycastle.crypto.tls.TlsContext,org.bouncycastle.crypto.BlockCipher,org.bouncycastle.crypto.BlockCipher,org.bouncycastle.crypto.Digest,org.bouncycastle.crypto.Digest,int)",
            "org.bouncycastle.crypto.tls.TlsBlockCipher:byte[] encodePlaintext(long,short,byte[],int,int)",
            "org.bouncycastle.crypto.tls.TlsBlockCipher:byte[] decodeCiphertext(long,short,byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.modes.CFBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.BufferedBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.StreamBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.digests.GOST3411Digest:void <init>()",
            "org.bouncycastle.crypto.digests.GOST3411Digest:void <init>(byte[])",
            "org.bouncycastle.crypto.digests.GOST3411Digest:void E(byte[],byte[],int,byte[],int)",
            "org.bouncycastle.crypto.digests.GOST3411Digest:void reset(org.bouncycastle.util.Memoable)",
            "org.bouncycastle.crypto.engines.RFC3394WrapEngine:byte[] wrap(byte[],int,int)",
            "org.bouncycastle.crypto.engines.RFC3394WrapEngine:byte[] unwrap(byte[],int,int)",
            "org.bouncycastle.crypto.macs.BlockCipherMac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.CBCBlockCipherMac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.CMac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.ISO9797Alg3Mac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.MacCFBBlockCipher:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.Poly1305:void setKey(byte[],byte[])",
            "org.bouncycastle.crypto.modes.CBCBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.CFBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.GCFBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.GCFBBlockCipher:int processBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.GCMBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.GOFBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.OCBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.OFBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.PGPCFBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.SICBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:void CTR_DRBG_Update(byte[],byte[],byte[])",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:byte[] Block_Cipher_df(byte[],int)",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:void BCC(byte[],byte[],byte[],byte[])",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:int generate(byte[],byte[],boolean)",
            "org.bouncycastle.crypto.tls.TlsBlockCipher:void <init>(org.bouncycastle.crypto.tls.TlsContext,org.bouncycastle.crypto.BlockCipher,org.bouncycastle.crypto.BlockCipher,org.bouncycastle.crypto.Digest,org.bouncycastle.crypto.Digest,int)",
            "org.bouncycastle.crypto.tls.TlsBlockCipher:byte[] encodePlaintext(long,short,byte[],int,int)",
            "org.bouncycastle.crypto.tls.TlsBlockCipher:byte[] decodeCiphertext(long,short,byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.modes.GCFBBlockCipher:int processBlock(byte[],int,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.BufferedBlockCipher:int processByte(byte,byte[],int)",
            "org.bouncycastle.crypto.BufferedBlockCipher:int processBytes(byte[],int,int,byte[],int)",
            "org.bouncycastle.crypto.BufferedBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.StreamBlockCipher:byte returnByte(byte)",
            "org.bouncycastle.crypto.StreamBlockCipher:void processBytes(byte[],int,int,byte[],int)",
            "org.bouncycastle.crypto.digests.GOST3411Digest:void E(byte[],byte[],int,byte[],int)",
            "org.bouncycastle.crypto.engines.RFC3394WrapEngine:byte[] wrap(byte[],int,int)",
            "org.bouncycastle.crypto.engines.RFC3394WrapEngine:byte[] unwrap(byte[],int,int)",
            "org.bouncycastle.crypto.macs.BlockCipherMac:void update(byte)",
            "org.bouncycastle.crypto.macs.BlockCipherMac:void update(byte[],int,int)",
            "org.bouncycastle.crypto.macs.BlockCipherMac:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.macs.CBCBlockCipherMac:void update(byte)",
            "org.bouncycastle.crypto.macs.CBCBlockCipherMac:void update(byte[],int,int)",
            "org.bouncycastle.crypto.macs.CBCBlockCipherMac:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.macs.CMac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.CMac:void update(byte)",
            "org.bouncycastle.crypto.macs.CMac:void update(byte[],int,int)",
            "org.bouncycastle.crypto.macs.CMac:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.macs.ISO9797Alg3Mac:void update(byte)",
            "org.bouncycastle.crypto.macs.ISO9797Alg3Mac:void update(byte[],int,int)",
            "org.bouncycastle.crypto.macs.ISO9797Alg3Mac:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.macs.MacCFBBlockCipher:int processBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.macs.MacCFBBlockCipher:void getMacBlock(byte[])",
            "org.bouncycastle.crypto.macs.Poly1305:void setKey(byte[],byte[])",
            "org.bouncycastle.crypto.modes.CBCBlockCipher:int encryptBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.CBCBlockCipher:int decryptBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.CFBBlockCipher:int encryptBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.CFBBlockCipher:int decryptBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.CTSBlockCipher:int processByte(byte,byte[],int)",
            "org.bouncycastle.crypto.modes.CTSBlockCipher:int processBytes(byte[],int,int,byte[],int)",
            "org.bouncycastle.crypto.modes.CTSBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.modes.GCFBBlockCipher:int processBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.GCMBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.GCMBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.modes.GCMBlockCipher:byte[] getNextCounterBlock()",
            "org.bouncycastle.crypto.modes.GOFBBlockCipher:int processBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.OCBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.OCBBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.modes.OCBBlockCipher:void processMainBlock(byte[],int)",
            "org.bouncycastle.crypto.modes.OCBBlockCipher:void updateHASH(byte[])",
            "org.bouncycastle.crypto.modes.OFBBlockCipher:int processBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.OldCTSBlockCipher:int processByte(byte,byte[],int)",
            "org.bouncycastle.crypto.modes.OldCTSBlockCipher:int processBytes(byte[],int,int,byte[],int)",
            "org.bouncycastle.crypto.modes.OldCTSBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher:int encryptBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher:int decryptBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.PGPCFBBlockCipher:int encryptBlockWithIV(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.PGPCFBBlockCipher:int decryptBlockWithIV(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.PGPCFBBlockCipher:int encryptBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.PGPCFBBlockCipher:int decryptBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.PaddedBlockCipher:int processByte(byte,byte[],int)",
            "org.bouncycastle.crypto.modes.PaddedBlockCipher:int processBytes(byte[],int,int,byte[],int)",
            "org.bouncycastle.crypto.modes.PaddedBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.modes.SICBlockCipher:int processBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher:int processByte(byte,byte[],int)",
            "org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher:int processBytes(byte[],int,int,byte[],int)",
            "org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:void CTR_DRBG_Update(byte[],byte[],byte[])",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:byte[] Block_Cipher_df(byte[],int)",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:void BCC(byte[],byte[],byte[],byte[])",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:int generate(byte[],byte[],boolean)",
            "org.bouncycastle.crypto.tls.TlsBlockCipher:byte[] encodePlaintext(long,short,byte[],int,int)",
            "org.bouncycastle.crypto.tls.TlsBlockCipher:byte[] decodeCiphertext(long,short,byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.modes.GCMBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.macs.GMac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.tls.TlsAEADCipher:void <init>(org.bouncycastle.crypto.tls.TlsContext,org.bouncycastle.crypto.modes.AEADBlockCipher,org.bouncycastle.crypto.modes.AEADBlockCipher,int,int)",
            "org.bouncycastle.crypto.tls.TlsAEADCipher:byte[] encodePlaintext(long,short,byte[],int,int)",
            "org.bouncycastle.crypto.tls.TlsAEADCipher:byte[] decodeCiphertext(long,short,byte[],int,int)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$AEADGenericBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)"
        ]
    },
    "org.bouncycastle.crypto.modes.GOFBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.BufferedBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.StreamBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.digests.GOST3411Digest:void <init>()",
            "org.bouncycastle.crypto.digests.GOST3411Digest:void <init>(byte[])",
            "org.bouncycastle.crypto.digests.GOST3411Digest:void E(byte[],byte[],int,byte[],int)",
            "org.bouncycastle.crypto.digests.GOST3411Digest:void reset(org.bouncycastle.util.Memoable)",
            "org.bouncycastle.crypto.engines.RFC3394WrapEngine:byte[] wrap(byte[],int,int)",
            "org.bouncycastle.crypto.engines.RFC3394WrapEngine:byte[] unwrap(byte[],int,int)",
            "org.bouncycastle.crypto.macs.BlockCipherMac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.CBCBlockCipherMac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.CMac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.ISO9797Alg3Mac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.MacCFBBlockCipher:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.Poly1305:void setKey(byte[],byte[])",
            "org.bouncycastle.crypto.modes.CBCBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.CFBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.GCFBBlockCipher:int processBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.GCMBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.GOFBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.OCBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.OFBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.PGPCFBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.SICBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:void CTR_DRBG_Update(byte[],byte[],byte[])",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:byte[] Block_Cipher_df(byte[],int)",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:void BCC(byte[],byte[],byte[],byte[])",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:int generate(byte[],byte[],boolean)",
            "org.bouncycastle.crypto.tls.TlsBlockCipher:void <init>(org.bouncycastle.crypto.tls.TlsContext,org.bouncycastle.crypto.BlockCipher,org.bouncycastle.crypto.BlockCipher,org.bouncycastle.crypto.Digest,org.bouncycastle.crypto.Digest,int)",
            "org.bouncycastle.crypto.tls.TlsBlockCipher:byte[] encodePlaintext(long,short,byte[],int,int)",
            "org.bouncycastle.crypto.tls.TlsBlockCipher:byte[] decodeCiphertext(long,short,byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.modes.OCBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsAEADCipher:void <init>(org.bouncycastle.crypto.tls.TlsContext,org.bouncycastle.crypto.modes.AEADBlockCipher,org.bouncycastle.crypto.modes.AEADBlockCipher,int,int)",
            "org.bouncycastle.crypto.tls.TlsAEADCipher:byte[] encodePlaintext(long,short,byte[],int,int)",
            "org.bouncycastle.crypto.tls.TlsAEADCipher:byte[] decodeCiphertext(long,short,byte[],int,int)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$AEADGenericBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)"
        ]
    },
    "org.bouncycastle.crypto.modes.OFBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.BufferedBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.StreamBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.digests.GOST3411Digest:void <init>()",
            "org.bouncycastle.crypto.digests.GOST3411Digest:void <init>(byte[])",
            "org.bouncycastle.crypto.digests.GOST3411Digest:void E(byte[],byte[],int,byte[],int)",
            "org.bouncycastle.crypto.digests.GOST3411Digest:void reset(org.bouncycastle.util.Memoable)",
            "org.bouncycastle.crypto.engines.RFC3394WrapEngine:byte[] wrap(byte[],int,int)",
            "org.bouncycastle.crypto.engines.RFC3394WrapEngine:byte[] unwrap(byte[],int,int)",
            "org.bouncycastle.crypto.macs.BlockCipherMac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.CBCBlockCipherMac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.CMac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.ISO9797Alg3Mac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.MacCFBBlockCipher:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.Poly1305:void setKey(byte[],byte[])",
            "org.bouncycastle.crypto.modes.CBCBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.CFBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.GCFBBlockCipher:int processBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.GCMBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.GOFBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.OCBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.OFBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.PGPCFBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.SICBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:void CTR_DRBG_Update(byte[],byte[],byte[])",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:byte[] Block_Cipher_df(byte[],int)",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:void BCC(byte[],byte[],byte[],byte[])",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:int generate(byte[],byte[],boolean)",
            "org.bouncycastle.crypto.tls.TlsBlockCipher:void <init>(org.bouncycastle.crypto.tls.TlsContext,org.bouncycastle.crypto.BlockCipher,org.bouncycastle.crypto.BlockCipher,org.bouncycastle.crypto.Digest,org.bouncycastle.crypto.Digest,int)",
            "org.bouncycastle.crypto.tls.TlsBlockCipher:byte[] encodePlaintext(long,short,byte[],int,int)",
            "org.bouncycastle.crypto.tls.TlsBlockCipher:byte[] decodeCiphertext(long,short,byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.BufferedBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.StreamBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.digests.GOST3411Digest:void <init>()",
            "org.bouncycastle.crypto.digests.GOST3411Digest:void <init>(byte[])",
            "org.bouncycastle.crypto.digests.GOST3411Digest:void E(byte[],byte[],int,byte[],int)",
            "org.bouncycastle.crypto.digests.GOST3411Digest:void reset(org.bouncycastle.util.Memoable)",
            "org.bouncycastle.crypto.engines.RFC3394WrapEngine:byte[] wrap(byte[],int,int)",
            "org.bouncycastle.crypto.engines.RFC3394WrapEngine:byte[] unwrap(byte[],int,int)",
            "org.bouncycastle.crypto.macs.BlockCipherMac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.CBCBlockCipherMac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.CMac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.ISO9797Alg3Mac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.MacCFBBlockCipher:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.Poly1305:void setKey(byte[],byte[])",
            "org.bouncycastle.crypto.modes.CBCBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.CFBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.GCFBBlockCipher:int processBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.GCMBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.GOFBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.OCBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.OFBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.PGPCFBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.SICBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:void CTR_DRBG_Update(byte[],byte[],byte[])",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:byte[] Block_Cipher_df(byte[],int)",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:void BCC(byte[],byte[],byte[],byte[])",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:int generate(byte[],byte[],boolean)",
            "org.bouncycastle.crypto.tls.TlsBlockCipher:void <init>(org.bouncycastle.crypto.tls.TlsContext,org.bouncycastle.crypto.BlockCipher,org.bouncycastle.crypto.BlockCipher,org.bouncycastle.crypto.Digest,org.bouncycastle.crypto.Digest,int)",
            "org.bouncycastle.crypto.tls.TlsBlockCipher:byte[] encodePlaintext(long,short,byte[],int,int)",
            "org.bouncycastle.crypto.tls.TlsBlockCipher:byte[] decodeCiphertext(long,short,byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.modes.PGPCFBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.BufferedBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.StreamBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.digests.GOST3411Digest:void <init>()",
            "org.bouncycastle.crypto.digests.GOST3411Digest:void <init>(byte[])",
            "org.bouncycastle.crypto.digests.GOST3411Digest:void E(byte[],byte[],int,byte[],int)",
            "org.bouncycastle.crypto.digests.GOST3411Digest:void reset(org.bouncycastle.util.Memoable)",
            "org.bouncycastle.crypto.engines.RFC3394WrapEngine:byte[] wrap(byte[],int,int)",
            "org.bouncycastle.crypto.engines.RFC3394WrapEngine:byte[] unwrap(byte[],int,int)",
            "org.bouncycastle.crypto.macs.BlockCipherMac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.CBCBlockCipherMac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.CMac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.ISO9797Alg3Mac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.MacCFBBlockCipher:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.Poly1305:void setKey(byte[],byte[])",
            "org.bouncycastle.crypto.modes.CBCBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.CFBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.GCFBBlockCipher:int processBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.GCMBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.GOFBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.OCBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.OFBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.PGPCFBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.SICBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:void CTR_DRBG_Update(byte[],byte[],byte[])",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:byte[] Block_Cipher_df(byte[],int)",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:void BCC(byte[],byte[],byte[],byte[])",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:int generate(byte[],byte[],boolean)",
            "org.bouncycastle.crypto.tls.TlsBlockCipher:void <init>(org.bouncycastle.crypto.tls.TlsContext,org.bouncycastle.crypto.BlockCipher,org.bouncycastle.crypto.BlockCipher,org.bouncycastle.crypto.Digest,org.bouncycastle.crypto.Digest,int)",
            "org.bouncycastle.crypto.tls.TlsBlockCipher:byte[] encodePlaintext(long,short,byte[],int,int)",
            "org.bouncycastle.crypto.tls.TlsBlockCipher:byte[] decodeCiphertext(long,short,byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.modes.SICBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.BufferedBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.StreamBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.digests.GOST3411Digest:void <init>()",
            "org.bouncycastle.crypto.digests.GOST3411Digest:void <init>(byte[])",
            "org.bouncycastle.crypto.digests.GOST3411Digest:void E(byte[],byte[],int,byte[],int)",
            "org.bouncycastle.crypto.digests.GOST3411Digest:void reset(org.bouncycastle.util.Memoable)",
            "org.bouncycastle.crypto.engines.RFC3394WrapEngine:byte[] wrap(byte[],int,int)",
            "org.bouncycastle.crypto.engines.RFC3394WrapEngine:byte[] unwrap(byte[],int,int)",
            "org.bouncycastle.crypto.macs.BlockCipherMac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.CBCBlockCipherMac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.CMac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.ISO9797Alg3Mac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.MacCFBBlockCipher:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.Poly1305:void setKey(byte[],byte[])",
            "org.bouncycastle.crypto.modes.CBCBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.CCMBlockCipher:int processPacket(byte[],int,int,byte[],int)",
            "org.bouncycastle.crypto.modes.CFBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.GCFBBlockCipher:int processBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.GCMBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.GOFBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.OCBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.OFBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.PGPCFBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.SICBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:void CTR_DRBG_Update(byte[],byte[],byte[])",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:byte[] Block_Cipher_df(byte[],int)",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:void BCC(byte[],byte[],byte[],byte[])",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:int generate(byte[],byte[],boolean)",
            "org.bouncycastle.crypto.tls.TlsBlockCipher:void <init>(org.bouncycastle.crypto.tls.TlsContext,org.bouncycastle.crypto.BlockCipher,org.bouncycastle.crypto.BlockCipher,org.bouncycastle.crypto.Digest,org.bouncycastle.crypto.Digest,int)",
            "org.bouncycastle.crypto.tls.TlsBlockCipher:byte[] encodePlaintext(long,short,byte[],int,int)",
            "org.bouncycastle.crypto.tls.TlsBlockCipher:byte[] decodeCiphertext(long,short,byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.engines.IESEngine:byte[] encryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.engines.IESEngine:byte[] decryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.examples.DESExample:void performEncrypt(byte[])",
            "org.bouncycastle.crypto.examples.DESExample:void performDecrypt(byte[])",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)"
        ]
    },
    "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:void CTR_DRBG_Update(byte[],byte[],byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:void CTR_DRBG_Instantiate_algorithm(byte[],byte[],byte[])",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:void CTR_DRBG_Reseed_algorithm(org.bouncycastle.crypto.prng.EntropySource,byte[])",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:int generate(byte[],byte[],boolean)"
        ]
    },
    "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:byte[] Block_Cipher_df(byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:void CTR_DRBG_Instantiate_algorithm(byte[],byte[],byte[])",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:void CTR_DRBG_Reseed_algorithm(org.bouncycastle.crypto.prng.EntropySource,byte[])",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:int generate(byte[],byte[],boolean)"
        ]
    },
    "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:void BCC(byte[],byte[],byte[],byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:byte[] Block_Cipher_df(byte[],int)"
        ]
    },
    "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:int generate(byte[],byte[],boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.prng.SP800SecureRandom:void nextBytes(byte[])"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsBlockCipher:void <init>(org.bouncycastle.crypto.tls.TlsContext,org.bouncycastle.crypto.BlockCipher,org.bouncycastle.crypto.BlockCipher,org.bouncycastle.crypto.Digest,org.bouncycastle.crypto.Digest,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DefaultTlsCipherFactory:org.bouncycastle.crypto.tls.TlsBlockCipher createAESCipher(org.bouncycastle.crypto.tls.TlsContext,int,int)",
            "org.bouncycastle.crypto.tls.DefaultTlsCipherFactory:org.bouncycastle.crypto.tls.TlsBlockCipher createCamelliaCipher(org.bouncycastle.crypto.tls.TlsContext,int,int)",
            "org.bouncycastle.crypto.tls.DefaultTlsCipherFactory:org.bouncycastle.crypto.tls.TlsBlockCipher createDESedeCipher(org.bouncycastle.crypto.tls.TlsContext,int)",
            "org.bouncycastle.crypto.tls.DefaultTlsCipherFactory:org.bouncycastle.crypto.tls.TlsBlockCipher createSEEDCipher(org.bouncycastle.crypto.tls.TlsContext,int)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsBlockCipher:byte[] encodePlaintext(long,short,byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSRecordLayer:void sendRecord(short,byte[],int,int)",
            "org.bouncycastle.crypto.tls.RecordStream:void writeRecord(short,byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsBlockCipher:byte[] decodeCiphertext(long,short,byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSRecordLayer:int receive(byte[],int,int,int)",
            "org.bouncycastle.crypto.tls.RecordStream:byte[] decodeAndVerify(short,java.io.InputStream,int)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dh.KeyFactorySpi:java.security.PublicKey generatePublic(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi:java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec)",
            "org.bouncycastle.jce.provider.BouncyCastleProvider:java.security.PublicKey getPublicKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.BouncyCastlePQCProvider:java.security.PublicKey getPublicKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dh.IESCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.dh.IESCipher:void engineInit(int,java.security.Key,java.security.AlgorithmParameters,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.asymmetric.dh.IESCipher:void engineInit(int,java.security.Key,java.security.SecureRandom)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ies.CipherSpi:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.ies.CipherSpi:void engineInit(int,java.security.Key,java.security.AlgorithmParameters,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.asymmetric.ies.CipherSpi:void engineInit(int,java.security.Key,java.security.SecureRandom)"
        ]
    },
    "org.bouncycastle.crypto.generators.DHBasicKeyPairGenerator:org.bouncycastle.crypto.AsymmetricCipherKeyPair generateKeyPair()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.generators.EphemeralKeyPairGenerator:org.bouncycastle.crypto.EphemeralKeyPair generate()",
            "org.bouncycastle.crypto.tls.TlsDHUtils:org.bouncycastle.crypto.AsymmetricCipherKeyPair generateDHKeyPair(java.security.SecureRandom,org.bouncycastle.crypto.params.DHParameters)",
            "org.bouncycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi:java.security.KeyPair generateKeyPair()"
        ]
    },
    "org.bouncycastle.crypto.generators.DHKeyPairGenerator:org.bouncycastle.crypto.AsymmetricCipherKeyPair generateKeyPair()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.agreement.DHAgreement:java.math.BigInteger calculateMessage()",
            "org.bouncycastle.crypto.generators.EphemeralKeyPairGenerator:org.bouncycastle.crypto.EphemeralKeyPair generate()"
        ]
    },
    "org.bouncycastle.crypto.parsers.DHIESPublicKeyParser:org.bouncycastle.crypto.params.AsymmetricKeyParameter readKey(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.engines.IESEngine:byte[] processBlock(byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.tls.ServerDHParams:org.bouncycastle.crypto.tls.ServerDHParams parse(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsDHEKeyExchange:void processServerKeyExchange(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsPSKKeyExchange:void processServerKeyExchange(java.io.InputStream)"
        ]
    },
    "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSServerProtocol:void processCertificateVerify(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState,byte[],org.bouncycastle.crypto.tls.TlsHandshakeHash)",
            "org.bouncycastle.crypto.tls.TlsDHKeyExchange:void processServerCertificate(org.bouncycastle.crypto.tls.Certificate)",
            "org.bouncycastle.crypto.tls.TlsECDHKeyExchange:void processServerCertificate(org.bouncycastle.crypto.tls.Certificate)",
            "org.bouncycastle.crypto.tls.TlsPSKKeyExchange:void processServerCertificate(org.bouncycastle.crypto.tls.Certificate)",
            "org.bouncycastle.crypto.tls.TlsRSAKeyExchange:void processServerCertificate(org.bouncycastle.crypto.tls.Certificate)",
            "org.bouncycastle.crypto.tls.TlsSRPKeyExchange:void processServerCertificate(org.bouncycastle.crypto.tls.Certificate)",
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void receiveCertificateVerifyMessage(java.io.ByteArrayInputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:short getClientCertificateType(org.bouncycastle.crypto.tls.Certificate,org.bouncycastle.crypto.tls.Certificate)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(byte[])",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(java.io.InputStream)"
        ]
    },
    "org.bouncycastle.jce.provider.DHUtil:org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePublicKeyParameter(java.security.PublicKey)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.engines.IESEngine:byte[] encryptBlock(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.engines.IESEngine:byte[] processBlock(byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.engines.IESEngine:byte[] decryptBlock(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.engines.IESEngine:byte[] processBlock(byte[],int,int)"
        ]
    },
    "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)"
        ]
    },
    "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:void engineInit(int,java.security.Key,java.security.AlgorithmParameters,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:void engineInit(int,java.security.Key,java.security.SecureRandom)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsStreamCipher:void <init>(org.bouncycastle.crypto.tls.TlsContext,org.bouncycastle.crypto.StreamCipher,org.bouncycastle.crypto.StreamCipher,org.bouncycastle.crypto.Digest,org.bouncycastle.crypto.Digest,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DefaultTlsCipherFactory:org.bouncycastle.crypto.tls.TlsStreamCipher createRC4Cipher(org.bouncycastle.crypto.tls.TlsContext,int,int)",
            "org.bouncycastle.crypto.tls.DefaultTlsCipherFactory:org.bouncycastle.crypto.tls.TlsStreamCipher createSalsa20Cipher(org.bouncycastle.crypto.tls.TlsContext,int,int,int)"
        ]
    },
    "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:void engineInit(int,java.security.Key,java.security.AlgorithmParameters,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:void engineInit(int,java.security.Key,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:void engineInit(int,java.security.Key,java.security.AlgorithmParameters,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:void engineInit(int,java.security.Key,java.security.SecureRandom)"
        ]
    },
    "org.bouncycastle.jce.provider.JCEStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.JCEStreamCipher:void engineInit(int,java.security.Key,java.security.AlgorithmParameters,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:void engineInit(int,java.security.Key,java.security.SecureRandom)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ecgost.SignatureSpi:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.gost.SignatureSpi:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.digest.GOST3411$Digest:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.digest.GOST3411$HashMac:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.symmetric.util.PBE$Util:org.bouncycastle.crypto.PBEParametersGenerator makePBEGenerator(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.symmetric.util.PBE$Util:org.bouncycastle.crypto.CipherParameters makePBEParameters(org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey,java.security.spec.AlgorithmParameterSpec,java.lang.String)",
            "org.bouncycastle.jcajce.provider.symmetric.util.PBE$Util:org.bouncycastle.crypto.CipherParameters makePBEMacParameters(org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey,java.security.spec.AlgorithmParameterSpec)",
            "org.bouncycastle.jcajce.provider.symmetric.util.PBE$Util:org.bouncycastle.crypto.CipherParameters makePBEParameters(javax.crypto.spec.PBEKeySpec,int,int,int,int)",
            "org.bouncycastle.jcajce.provider.symmetric.util.PBE$Util:org.bouncycastle.crypto.CipherParameters makePBEMacParameters(javax.crypto.spec.PBEKeySpec,int,int,int)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpi:void engineInitVerify(java.security.PublicKey)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpi:void engineInitSign(java.security.PrivateKey)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.digests.GOST3411Digest:void processBlock(byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.digests.GOST3411Digest:void update(byte)",
            "org.bouncycastle.crypto.digests.GOST3411Digest:void update(byte[],int,int)",
            "org.bouncycastle.crypto.digests.GOST3411Digest:void finish()"
        ]
    },
    "org.bouncycastle.crypto.digests.GOST3411Digest:void <init>(org.bouncycastle.crypto.digests.GOST3411Digest)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.digests.GOST3411Digest:org.bouncycastle.util.Memoable copy()",
            "org.bouncycastle.jcajce.provider.digest.GOST3411$Digest:java.lang.Object clone()"
        ]
    },
    "org.bouncycastle.crypto.macs.HMac:int doFinal(byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:java.math.BigInteger calculateMacTag(java.lang.String,java.lang.String,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,org.bouncycastle.crypto.Digest)",
            "org.bouncycastle.crypto.engines.IESEngine:byte[] encryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.engines.IESEngine:byte[] decryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.generators.HKDFBytesGenerator:org.bouncycastle.crypto.params.KeyParameter extract(byte[],byte[])",
            "org.bouncycastle.crypto.generators.HKDFBytesGenerator:void expandNext()",
            "org.bouncycastle.crypto.generators.KDFCounterBytesGenerator:void generateNext()",
            "org.bouncycastle.crypto.generators.KDFDoublePipelineIterationBytesGenerator:void generateNext()",
            "org.bouncycastle.crypto.generators.KDFFeedbackBytesGenerator:void generateNext()",
            "org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator:void F(byte[],int,byte[],byte[],int)",
            "org.bouncycastle.crypto.io.MacOutputStream:byte[] getMac()",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void initCipher()",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void calculateMac()",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:void hmac_DRBG_Update_Func(byte[],byte)",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:int generate(byte[],byte[],boolean)",
            "org.bouncycastle.crypto.signers.HMacDSAKCalculator:void init(java.math.BigInteger,java.math.BigInteger,byte[])",
            "org.bouncycastle.crypto.signers.HMacDSAKCalculator:java.math.BigInteger nextK()",
            "org.bouncycastle.crypto.tls.TlsMac:byte[] calculateMac(long,short,byte[],int,int)",
            "org.bouncycastle.crypto.tls.TlsUtils:void hmac_hash(org.bouncycastle.crypto.Digest,byte[],byte[],byte[])",
            "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi:void engineStore(java.io.OutputStream,char[])",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:byte[] engineDoFinal()"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:byte[] engineWrap(java.security.Key)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:byte[] engineWrap(java.security.Key)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:java.security.Key engineUnwrap(byte[],java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:java.security.Key engineUnwrap(byte[],java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.generators.KDFCounterBytesGenerator:void init(org.bouncycastle.crypto.DerivationParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.engines.IESEngine:byte[] processBlock(byte[],int,int)",
            "org.bouncycastle.crypto.kems.ECIESKeyEncapsulation:org.bouncycastle.crypto.CipherParameters encrypt(byte[],int,int)",
            "org.bouncycastle.crypto.kems.ECIESKeyEncapsulation:org.bouncycastle.crypto.CipherParameters decrypt(byte[],int,int,int)",
            "org.bouncycastle.crypto.kems.RSAKeyEncapsulation:org.bouncycastle.crypto.CipherParameters encrypt(byte[],int,int)",
            "org.bouncycastle.crypto.kems.RSAKeyEncapsulation:org.bouncycastle.crypto.CipherParameters decrypt(byte[],int,int,int)",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi:javax.crypto.SecretKey engineGenerateSecret(java.lang.String)"
        ]
    },
    "org.bouncycastle.crypto.generators.KDFDoublePipelineIterationBytesGenerator:void init(org.bouncycastle.crypto.DerivationParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.engines.IESEngine:byte[] processBlock(byte[],int,int)",
            "org.bouncycastle.crypto.kems.ECIESKeyEncapsulation:org.bouncycastle.crypto.CipherParameters encrypt(byte[],int,int)",
            "org.bouncycastle.crypto.kems.ECIESKeyEncapsulation:org.bouncycastle.crypto.CipherParameters decrypt(byte[],int,int,int)",
            "org.bouncycastle.crypto.kems.RSAKeyEncapsulation:org.bouncycastle.crypto.CipherParameters encrypt(byte[],int,int)",
            "org.bouncycastle.crypto.kems.RSAKeyEncapsulation:org.bouncycastle.crypto.CipherParameters decrypt(byte[],int,int,int)",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi:javax.crypto.SecretKey engineGenerateSecret(java.lang.String)"
        ]
    },
    "org.bouncycastle.crypto.generators.KDFFeedbackBytesGenerator:void init(org.bouncycastle.crypto.DerivationParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.engines.IESEngine:byte[] processBlock(byte[],int,int)",
            "org.bouncycastle.crypto.kems.ECIESKeyEncapsulation:org.bouncycastle.crypto.CipherParameters encrypt(byte[],int,int)",
            "org.bouncycastle.crypto.kems.ECIESKeyEncapsulation:org.bouncycastle.crypto.CipherParameters decrypt(byte[],int,int,int)",
            "org.bouncycastle.crypto.kems.RSAKeyEncapsulation:org.bouncycastle.crypto.CipherParameters encrypt(byte[],int,int)",
            "org.bouncycastle.crypto.kems.RSAKeyEncapsulation:org.bouncycastle.crypto.CipherParameters decrypt(byte[],int,int,int)",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi:javax.crypto.SecretKey engineGenerateSecret(java.lang.String)"
        ]
    },
    "org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator:byte[] generateDerivedKey(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator:org.bouncycastle.crypto.CipherParameters generateDerivedParameters(int)",
            "org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator:org.bouncycastle.crypto.CipherParameters generateDerivedParameters(int,int)"
        ]
    },
    "org.bouncycastle.crypto.modes.EAXBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsAEADCipher:void <init>(org.bouncycastle.crypto.tls.TlsContext,org.bouncycastle.crypto.modes.AEADBlockCipher,org.bouncycastle.crypto.modes.AEADBlockCipher,int,int)",
            "org.bouncycastle.crypto.tls.TlsAEADCipher:byte[] encodePlaintext(long,short,byte[],int,int)",
            "org.bouncycastle.crypto.tls.TlsAEADCipher:byte[] decodeCiphertext(long,short,byte[],int,int)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$AEADGenericBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)"
        ]
    },
    "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:void hmac_DRBG_Update_Func(byte[],byte)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:void hmac_DRBG_Update(byte[])"
        ]
    },
    "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:int generate(byte[],byte[],boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.prng.SP800SecureRandom:void nextBytes(byte[])"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsMac:void <init>(org.bouncycastle.crypto.tls.TlsContext,org.bouncycastle.crypto.Digest,byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsBlockCipher:void <init>(org.bouncycastle.crypto.tls.TlsContext,org.bouncycastle.crypto.BlockCipher,org.bouncycastle.crypto.BlockCipher,org.bouncycastle.crypto.Digest,org.bouncycastle.crypto.Digest,int)",
            "org.bouncycastle.crypto.tls.TlsNullCipher:void <init>(org.bouncycastle.crypto.tls.TlsContext,org.bouncycastle.crypto.Digest,org.bouncycastle.crypto.Digest)",
            "org.bouncycastle.crypto.tls.TlsStreamCipher:void <init>(org.bouncycastle.crypto.tls.TlsContext,org.bouncycastle.crypto.StreamCipher,org.bouncycastle.crypto.StreamCipher,org.bouncycastle.crypto.Digest,org.bouncycastle.crypto.Digest,int)"
        ]
    },
    "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineInit(java.security.Key,java.security.spec.AlgorithmParameterSpec)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.modes.CCMBlockCipher:int calculateMac(byte[],int,int,byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.modes.CCMBlockCipher:int processPacket(byte[],int,int,byte[],int)"
        ]
    },
    "org.bouncycastle.crypto.macs.CFBBlockCipherMac:void init(org.bouncycastle.crypto.CipherParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.engines.IESEngine:byte[] encryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.engines.IESEngine:byte[] decryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.generators.KDFCounterBytesGenerator:void init(org.bouncycastle.crypto.DerivationParameters)",
            "org.bouncycastle.crypto.generators.KDFDoublePipelineIterationBytesGenerator:void init(org.bouncycastle.crypto.DerivationParameters)",
            "org.bouncycastle.crypto.generators.KDFFeedbackBytesGenerator:void init(org.bouncycastle.crypto.DerivationParameters)",
            "org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator:byte[] generateDerivedKey(int)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:void hmac_DRBG_Update_Func(byte[],byte)",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:int generate(byte[],byte[],boolean)",
            "org.bouncycastle.crypto.tls.TlsMac:void <init>(org.bouncycastle.crypto.tls.TlsContext,org.bouncycastle.crypto.Digest,byte[],int,int)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineInit(java.security.Key,java.security.spec.AlgorithmParameterSpec)"
        ]
    },
    "org.bouncycastle.crypto.macs.Poly1305:void init(org.bouncycastle.crypto.CipherParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.engines.IESEngine:byte[] encryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.engines.IESEngine:byte[] decryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.generators.KDFCounterBytesGenerator:void init(org.bouncycastle.crypto.DerivationParameters)",
            "org.bouncycastle.crypto.generators.KDFDoublePipelineIterationBytesGenerator:void init(org.bouncycastle.crypto.DerivationParameters)",
            "org.bouncycastle.crypto.generators.KDFFeedbackBytesGenerator:void init(org.bouncycastle.crypto.DerivationParameters)",
            "org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator:byte[] generateDerivedKey(int)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:void hmac_DRBG_Update_Func(byte[],byte)",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:int generate(byte[],byte[],boolean)",
            "org.bouncycastle.crypto.tls.TlsMac:void <init>(org.bouncycastle.crypto.tls.TlsContext,org.bouncycastle.crypto.Digest,byte[],int,int)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineInit(java.security.Key,java.security.spec.AlgorithmParameterSpec)"
        ]
    },
    "org.bouncycastle.crypto.engines.DESedeWrapEngine:byte[] wrap(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:byte[] engineWrap(java.security.Key)"
        ]
    },
    "org.bouncycastle.crypto.engines.DESedeWrapEngine:byte[] unwrap(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:java.security.Key engineUnwrap(byte[],java.lang.String,int)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:java.security.Key engineUnwrap(byte[],java.lang.String,int)"
        ]
    },
    "org.bouncycastle.crypto.engines.RC2WrapEngine:byte[] wrap(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:byte[] engineWrap(java.security.Key)"
        ]
    },
    "org.bouncycastle.crypto.engines.RC2WrapEngine:byte[] unwrap(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:java.security.Key engineUnwrap(byte[],java.lang.String,int)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:java.security.Key engineUnwrap(byte[],java.lang.String,int)"
        ]
    },
    "org.bouncycastle.crypto.engines.RFC3211WrapEngine:byte[] wrap(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:byte[] engineWrap(java.security.Key)"
        ]
    },
    "org.bouncycastle.crypto.engines.RFC3211WrapEngine:byte[] unwrap(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:java.security.Key engineUnwrap(byte[],java.lang.String,int)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:java.security.Key engineUnwrap(byte[],java.lang.String,int)"
        ]
    },
    "org.bouncycastle.crypto.modes.GCFBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.BufferedBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.StreamBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.digests.GOST3411Digest:void <init>()",
            "org.bouncycastle.crypto.digests.GOST3411Digest:void <init>(byte[])",
            "org.bouncycastle.crypto.digests.GOST3411Digest:void E(byte[],byte[],int,byte[],int)",
            "org.bouncycastle.crypto.digests.GOST3411Digest:void reset(org.bouncycastle.util.Memoable)",
            "org.bouncycastle.crypto.engines.RFC3394WrapEngine:byte[] wrap(byte[],int,int)",
            "org.bouncycastle.crypto.engines.RFC3394WrapEngine:byte[] unwrap(byte[],int,int)",
            "org.bouncycastle.crypto.macs.BlockCipherMac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.CBCBlockCipherMac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.CMac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.ISO9797Alg3Mac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.MacCFBBlockCipher:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.Poly1305:void setKey(byte[],byte[])",
            "org.bouncycastle.crypto.modes.CBCBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.CFBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.GCFBBlockCipher:int processBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.GCMBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.GOFBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.OCBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.OFBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.PGPCFBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.SICBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:void CTR_DRBG_Update(byte[],byte[],byte[])",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:byte[] Block_Cipher_df(byte[],int)",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:void BCC(byte[],byte[],byte[],byte[])",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:int generate(byte[],byte[],boolean)",
            "org.bouncycastle.crypto.tls.TlsBlockCipher:void <init>(org.bouncycastle.crypto.tls.TlsContext,org.bouncycastle.crypto.BlockCipher,org.bouncycastle.crypto.BlockCipher,org.bouncycastle.crypto.Digest,org.bouncycastle.crypto.Digest,int)",
            "org.bouncycastle.crypto.tls.TlsBlockCipher:byte[] encodePlaintext(long,short,byte[],int,int)",
            "org.bouncycastle.crypto.tls.TlsBlockCipher:byte[] decodeCiphertext(long,short,byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.BufferedBlockCipher:int processByte(byte,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher:int processByte(byte,byte[],int)"
        ]
    },
    "org.bouncycastle.crypto.BufferedBlockCipher:int processBytes(byte[],int,int,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.engines.IESEngine:byte[] encryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.engines.IESEngine:byte[] decryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.io.CipherInputStream:int nextChunk()",
            "org.bouncycastle.crypto.io.CipherOutputStream:void write(byte[],int,int)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher:int processBytes(byte[],int,int,byte[],int)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:byte[] engineUpdate(byte[],int,int)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:int engineUpdate(byte[],int,int,byte[],int)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:byte[] engineDoFinal(byte[],int,int)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:int engineDoFinal(byte[],int,int,byte[],int)"
        ]
    },
    "org.bouncycastle.crypto.BufferedBlockCipher:int doFinal(byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.engines.IESEngine:byte[] encryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.engines.IESEngine:byte[] decryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.io.CipherInputStream:void finaliseCipher()",
            "org.bouncycastle.crypto.io.CipherOutputStream:void close()",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:byte[] engineDoFinal(byte[],int,int)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:int engineDoFinal(byte[],int,int,byte[],int)"
        ]
    },
    "org.bouncycastle.crypto.StreamBlockCipher:byte returnByte(byte)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.io.CipherOutputStream:void write(int)"
        ]
    },
    "org.bouncycastle.crypto.StreamBlockCipher:void processBytes(byte[],int,int,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.io.CipherInputStream:int nextChunk()",
            "org.bouncycastle.crypto.io.CipherOutputStream:void write(byte[],int,int)",
            "org.bouncycastle.crypto.tls.TlsStreamCipher:byte[] encodePlaintext(long,short,byte[],int,int)",
            "org.bouncycastle.crypto.tls.TlsStreamCipher:byte[] decodeCiphertext(long,short,byte[],int,int)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:byte[] engineUpdate(byte[],int,int)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:int engineUpdate(byte[],int,int,byte[],int)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:int engineDoFinal(byte[],int,int,byte[],int)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:byte[] engineUpdate(byte[],int,int)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:int engineUpdate(byte[],int,int,byte[],int)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:int engineDoFinal(byte[],int,int,byte[],int)"
        ]
    },
    "org.bouncycastle.crypto.macs.BlockCipherMac:void update(byte)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.io.MacInputStream:int read()",
            "org.bouncycastle.crypto.io.MacOutputStream:void write(int)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void processAADByte(byte)",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:void hmac_DRBG_Update_Func(byte[],byte)",
            "org.bouncycastle.crypto.tls.TlsMac:byte[] calculateMacConstantTime(long,short,byte[],int,int,int,byte[])",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineUpdate(byte)"
        ]
    },
    "org.bouncycastle.crypto.macs.BlockCipherMac:void update(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:void updateMac(org.bouncycastle.crypto.Mac,java.math.BigInteger)",
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:void updateMac(org.bouncycastle.crypto.Mac,java.lang.String)",
            "org.bouncycastle.crypto.engines.IESEngine:byte[] encryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.engines.IESEngine:byte[] decryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.generators.KDFCounterBytesGenerator:void generateNext()",
            "org.bouncycastle.crypto.generators.KDFDoublePipelineIterationBytesGenerator:void generateNext()",
            "org.bouncycastle.crypto.generators.KDFFeedbackBytesGenerator:void generateNext()",
            "org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator:void F(byte[],int,byte[],byte[],int)",
            "org.bouncycastle.crypto.io.MacInputStream:int read(byte[],int,int)",
            "org.bouncycastle.crypto.io.MacOutputStream:void write(byte[],int,int)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void initCipher()",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void reset(boolean)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void processAADBytes(byte[],int,int)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:int process(byte,byte[],int)",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:void hmac_DRBG_Update_Func(byte[],byte)",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:int generate(byte[],byte[],boolean)",
            "org.bouncycastle.crypto.tls.TlsMac:byte[] calculateMac(long,short,byte[],int,int)",
            "org.bouncycastle.crypto.tls.TlsMac:byte[] calculateMacConstantTime(long,short,byte[],int,int,int,byte[])",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineUpdate(byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.macs.BlockCipherMac:int doFinal(byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.engines.IESEngine:byte[] encryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.engines.IESEngine:byte[] decryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.generators.KDFCounterBytesGenerator:void generateNext()",
            "org.bouncycastle.crypto.generators.KDFDoublePipelineIterationBytesGenerator:void generateNext()",
            "org.bouncycastle.crypto.generators.KDFFeedbackBytesGenerator:void generateNext()",
            "org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator:void F(byte[],int,byte[],byte[],int)",
            "org.bouncycastle.crypto.io.MacOutputStream:byte[] getMac()",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void initCipher()",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void calculateMac()",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:void hmac_DRBG_Update_Func(byte[],byte)",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:int generate(byte[],byte[],boolean)",
            "org.bouncycastle.crypto.tls.TlsMac:byte[] calculateMac(long,short,byte[],int,int)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:byte[] engineDoFinal()"
        ]
    },
    "org.bouncycastle.crypto.macs.CBCBlockCipherMac:void update(byte)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.io.MacInputStream:int read()",
            "org.bouncycastle.crypto.io.MacOutputStream:void write(int)",
            "org.bouncycastle.crypto.modes.CCMBlockCipher:int calculateMac(byte[],int,int,byte[])",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void processAADByte(byte)",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:void hmac_DRBG_Update_Func(byte[],byte)",
            "org.bouncycastle.crypto.tls.TlsMac:byte[] calculateMacConstantTime(long,short,byte[],int,int,int,byte[])",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineUpdate(byte)"
        ]
    },
    "org.bouncycastle.crypto.macs.CBCBlockCipherMac:void update(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:void updateMac(org.bouncycastle.crypto.Mac,java.math.BigInteger)",
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:void updateMac(org.bouncycastle.crypto.Mac,java.lang.String)",
            "org.bouncycastle.crypto.engines.IESEngine:byte[] encryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.engines.IESEngine:byte[] decryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.generators.KDFCounterBytesGenerator:void generateNext()",
            "org.bouncycastle.crypto.generators.KDFDoublePipelineIterationBytesGenerator:void generateNext()",
            "org.bouncycastle.crypto.generators.KDFFeedbackBytesGenerator:void generateNext()",
            "org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator:void F(byte[],int,byte[],byte[],int)",
            "org.bouncycastle.crypto.io.MacInputStream:int read(byte[],int,int)",
            "org.bouncycastle.crypto.io.MacOutputStream:void write(byte[],int,int)",
            "org.bouncycastle.crypto.modes.CCMBlockCipher:int calculateMac(byte[],int,int,byte[])",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void initCipher()",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void reset(boolean)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void processAADBytes(byte[],int,int)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:int process(byte,byte[],int)",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:void hmac_DRBG_Update_Func(byte[],byte)",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:int generate(byte[],byte[],boolean)",
            "org.bouncycastle.crypto.tls.TlsMac:byte[] calculateMac(long,short,byte[],int,int)",
            "org.bouncycastle.crypto.tls.TlsMac:byte[] calculateMacConstantTime(long,short,byte[],int,int,int,byte[])",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineUpdate(byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.macs.CBCBlockCipherMac:int doFinal(byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.engines.IESEngine:byte[] encryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.engines.IESEngine:byte[] decryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.generators.KDFCounterBytesGenerator:void generateNext()",
            "org.bouncycastle.crypto.generators.KDFDoublePipelineIterationBytesGenerator:void generateNext()",
            "org.bouncycastle.crypto.generators.KDFFeedbackBytesGenerator:void generateNext()",
            "org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator:void F(byte[],int,byte[],byte[],int)",
            "org.bouncycastle.crypto.io.MacOutputStream:byte[] getMac()",
            "org.bouncycastle.crypto.modes.CCMBlockCipher:int calculateMac(byte[],int,int,byte[])",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void initCipher()",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void calculateMac()",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:void hmac_DRBG_Update_Func(byte[],byte)",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:int generate(byte[],byte[],boolean)",
            "org.bouncycastle.crypto.tls.TlsMac:byte[] calculateMac(long,short,byte[],int,int)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:byte[] engineDoFinal()"
        ]
    },
    "org.bouncycastle.crypto.macs.CMac:void update(byte)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.io.MacInputStream:int read()",
            "org.bouncycastle.crypto.io.MacOutputStream:void write(int)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void processAADByte(byte)",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:void hmac_DRBG_Update_Func(byte[],byte)",
            "org.bouncycastle.crypto.tls.TlsMac:byte[] calculateMacConstantTime(long,short,byte[],int,int,int,byte[])",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineUpdate(byte)"
        ]
    },
    "org.bouncycastle.crypto.macs.CMac:void update(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:void updateMac(org.bouncycastle.crypto.Mac,java.math.BigInteger)",
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:void updateMac(org.bouncycastle.crypto.Mac,java.lang.String)",
            "org.bouncycastle.crypto.engines.IESEngine:byte[] encryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.engines.IESEngine:byte[] decryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.generators.KDFCounterBytesGenerator:void generateNext()",
            "org.bouncycastle.crypto.generators.KDFDoublePipelineIterationBytesGenerator:void generateNext()",
            "org.bouncycastle.crypto.generators.KDFFeedbackBytesGenerator:void generateNext()",
            "org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator:void F(byte[],int,byte[],byte[],int)",
            "org.bouncycastle.crypto.io.MacInputStream:int read(byte[],int,int)",
            "org.bouncycastle.crypto.io.MacOutputStream:void write(byte[],int,int)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void initCipher()",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void reset(boolean)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void processAADBytes(byte[],int,int)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:int process(byte,byte[],int)",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:void hmac_DRBG_Update_Func(byte[],byte)",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:int generate(byte[],byte[],boolean)",
            "org.bouncycastle.crypto.tls.TlsMac:byte[] calculateMac(long,short,byte[],int,int)",
            "org.bouncycastle.crypto.tls.TlsMac:byte[] calculateMacConstantTime(long,short,byte[],int,int,int,byte[])",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineUpdate(byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.macs.CMac:int doFinal(byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.engines.IESEngine:byte[] encryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.engines.IESEngine:byte[] decryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.generators.KDFCounterBytesGenerator:void generateNext()",
            "org.bouncycastle.crypto.generators.KDFDoublePipelineIterationBytesGenerator:void generateNext()",
            "org.bouncycastle.crypto.generators.KDFFeedbackBytesGenerator:void generateNext()",
            "org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator:void F(byte[],int,byte[],byte[],int)",
            "org.bouncycastle.crypto.io.MacOutputStream:byte[] getMac()",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void initCipher()",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void calculateMac()",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:void hmac_DRBG_Update_Func(byte[],byte)",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:int generate(byte[],byte[],boolean)",
            "org.bouncycastle.crypto.tls.TlsMac:byte[] calculateMac(long,short,byte[],int,int)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:byte[] engineDoFinal()"
        ]
    },
    "org.bouncycastle.crypto.macs.ISO9797Alg3Mac:void update(byte)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.io.MacInputStream:int read()",
            "org.bouncycastle.crypto.io.MacOutputStream:void write(int)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void processAADByte(byte)",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:void hmac_DRBG_Update_Func(byte[],byte)",
            "org.bouncycastle.crypto.tls.TlsMac:byte[] calculateMacConstantTime(long,short,byte[],int,int,int,byte[])",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineUpdate(byte)"
        ]
    },
    "org.bouncycastle.crypto.macs.ISO9797Alg3Mac:void update(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:void updateMac(org.bouncycastle.crypto.Mac,java.math.BigInteger)",
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:void updateMac(org.bouncycastle.crypto.Mac,java.lang.String)",
            "org.bouncycastle.crypto.engines.IESEngine:byte[] encryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.engines.IESEngine:byte[] decryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.generators.KDFCounterBytesGenerator:void generateNext()",
            "org.bouncycastle.crypto.generators.KDFDoublePipelineIterationBytesGenerator:void generateNext()",
            "org.bouncycastle.crypto.generators.KDFFeedbackBytesGenerator:void generateNext()",
            "org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator:void F(byte[],int,byte[],byte[],int)",
            "org.bouncycastle.crypto.io.MacInputStream:int read(byte[],int,int)",
            "org.bouncycastle.crypto.io.MacOutputStream:void write(byte[],int,int)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void initCipher()",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void reset(boolean)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void processAADBytes(byte[],int,int)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:int process(byte,byte[],int)",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:void hmac_DRBG_Update_Func(byte[],byte)",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:int generate(byte[],byte[],boolean)",
            "org.bouncycastle.crypto.tls.TlsMac:byte[] calculateMac(long,short,byte[],int,int)",
            "org.bouncycastle.crypto.tls.TlsMac:byte[] calculateMacConstantTime(long,short,byte[],int,int,int,byte[])",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineUpdate(byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.macs.ISO9797Alg3Mac:int doFinal(byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.engines.IESEngine:byte[] encryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.engines.IESEngine:byte[] decryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.generators.KDFCounterBytesGenerator:void generateNext()",
            "org.bouncycastle.crypto.generators.KDFDoublePipelineIterationBytesGenerator:void generateNext()",
            "org.bouncycastle.crypto.generators.KDFFeedbackBytesGenerator:void generateNext()",
            "org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator:void F(byte[],int,byte[],byte[],int)",
            "org.bouncycastle.crypto.io.MacOutputStream:byte[] getMac()",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void initCipher()",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void calculateMac()",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:void hmac_DRBG_Update_Func(byte[],byte)",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:int generate(byte[],byte[],boolean)",
            "org.bouncycastle.crypto.tls.TlsMac:byte[] calculateMac(long,short,byte[],int,int)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:byte[] engineDoFinal()"
        ]
    },
    "org.bouncycastle.crypto.macs.MacCFBBlockCipher:int processBlock(byte[],int,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.macs.CFBBlockCipherMac:void update(byte)",
            "org.bouncycastle.crypto.macs.CFBBlockCipherMac:void update(byte[],int,int)",
            "org.bouncycastle.crypto.macs.CFBBlockCipherMac:int doFinal(byte[],int)"
        ]
    },
    "org.bouncycastle.crypto.macs.MacCFBBlockCipher:void getMacBlock(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.macs.CFBBlockCipherMac:int doFinal(byte[],int)"
        ]
    },
    "org.bouncycastle.crypto.modes.CBCBlockCipher:int encryptBlock(byte[],int,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.modes.CBCBlockCipher:int processBlock(byte[],int,byte[],int)"
        ]
    },
    "org.bouncycastle.crypto.modes.CBCBlockCipher:int decryptBlock(byte[],int,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.modes.CBCBlockCipher:int processBlock(byte[],int,byte[],int)"
        ]
    },
    "org.bouncycastle.crypto.modes.CFBBlockCipher:int encryptBlock(byte[],int,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.modes.CFBBlockCipher:int processBlock(byte[],int,byte[],int)"
        ]
    },
    "org.bouncycastle.crypto.modes.CFBBlockCipher:int decryptBlock(byte[],int,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.modes.CFBBlockCipher:int processBlock(byte[],int,byte[],int)"
        ]
    },
    "org.bouncycastle.crypto.modes.CTSBlockCipher:int processByte(byte,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher:int processByte(byte,byte[],int)"
        ]
    },
    "org.bouncycastle.crypto.modes.CTSBlockCipher:int processBytes(byte[],int,int,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.engines.IESEngine:byte[] encryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.engines.IESEngine:byte[] decryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.io.CipherInputStream:int nextChunk()",
            "org.bouncycastle.crypto.io.CipherOutputStream:void write(byte[],int,int)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher:int processBytes(byte[],int,int,byte[],int)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:byte[] engineUpdate(byte[],int,int)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:int engineUpdate(byte[],int,int,byte[],int)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:byte[] engineDoFinal(byte[],int,int)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:int engineDoFinal(byte[],int,int,byte[],int)"
        ]
    },
    "org.bouncycastle.crypto.modes.CTSBlockCipher:int doFinal(byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.engines.IESEngine:byte[] encryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.engines.IESEngine:byte[] decryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.io.CipherInputStream:void finaliseCipher()",
            "org.bouncycastle.crypto.io.CipherOutputStream:void close()",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:byte[] engineDoFinal(byte[],int,int)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:int engineDoFinal(byte[],int,int,byte[],int)"
        ]
    },
    "org.bouncycastle.crypto.modes.GCMBlockCipher:int doFinal(byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.io.CipherInputStream:void finaliseCipher()",
            "org.bouncycastle.crypto.io.CipherOutputStream:void close()",
            "org.bouncycastle.crypto.macs.GMac:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.tls.TlsAEADCipher:byte[] encodePlaintext(long,short,byte[],int,int)",
            "org.bouncycastle.crypto.tls.TlsAEADCipher:byte[] decodeCiphertext(long,short,byte[],int,int)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$AEADGenericBlockCipher:int doFinal(byte[],int)"
        ]
    },
    "org.bouncycastle.crypto.modes.GCMBlockCipher:byte[] getNextCounterBlock()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.modes.GCMBlockCipher:void gCTRBlock(byte[],byte[],int)",
            "org.bouncycastle.crypto.modes.GCMBlockCipher:void gCTRPartial(byte[],int,int,byte[],int)"
        ]
    },
    "org.bouncycastle.crypto.modes.GOFBBlockCipher:int processBlock(byte[],int,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.BufferedBlockCipher:int processByte(byte,byte[],int)",
            "org.bouncycastle.crypto.BufferedBlockCipher:int processBytes(byte[],int,int,byte[],int)",
            "org.bouncycastle.crypto.BufferedBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.StreamBlockCipher:byte returnByte(byte)",
            "org.bouncycastle.crypto.StreamBlockCipher:void processBytes(byte[],int,int,byte[],int)",
            "org.bouncycastle.crypto.digests.GOST3411Digest:void E(byte[],byte[],int,byte[],int)",
            "org.bouncycastle.crypto.engines.RFC3394WrapEngine:byte[] wrap(byte[],int,int)",
            "org.bouncycastle.crypto.engines.RFC3394WrapEngine:byte[] unwrap(byte[],int,int)",
            "org.bouncycastle.crypto.macs.BlockCipherMac:void update(byte)",
            "org.bouncycastle.crypto.macs.BlockCipherMac:void update(byte[],int,int)",
            "org.bouncycastle.crypto.macs.BlockCipherMac:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.macs.CBCBlockCipherMac:void update(byte)",
            "org.bouncycastle.crypto.macs.CBCBlockCipherMac:void update(byte[],int,int)",
            "org.bouncycastle.crypto.macs.CBCBlockCipherMac:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.macs.CMac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.CMac:void update(byte)",
            "org.bouncycastle.crypto.macs.CMac:void update(byte[],int,int)",
            "org.bouncycastle.crypto.macs.CMac:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.macs.ISO9797Alg3Mac:void update(byte)",
            "org.bouncycastle.crypto.macs.ISO9797Alg3Mac:void update(byte[],int,int)",
            "org.bouncycastle.crypto.macs.ISO9797Alg3Mac:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.macs.MacCFBBlockCipher:int processBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.macs.MacCFBBlockCipher:void getMacBlock(byte[])",
            "org.bouncycastle.crypto.macs.Poly1305:void setKey(byte[],byte[])",
            "org.bouncycastle.crypto.modes.CBCBlockCipher:int encryptBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.CBCBlockCipher:int decryptBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.CFBBlockCipher:int encryptBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.CFBBlockCipher:int decryptBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.CTSBlockCipher:int processByte(byte,byte[],int)",
            "org.bouncycastle.crypto.modes.CTSBlockCipher:int processBytes(byte[],int,int,byte[],int)",
            "org.bouncycastle.crypto.modes.CTSBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.modes.GCFBBlockCipher:int processBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.GCMBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.GCMBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.modes.GCMBlockCipher:byte[] getNextCounterBlock()",
            "org.bouncycastle.crypto.modes.GOFBBlockCipher:int processBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.OCBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.OCBBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.modes.OCBBlockCipher:void processMainBlock(byte[],int)",
            "org.bouncycastle.crypto.modes.OCBBlockCipher:void updateHASH(byte[])",
            "org.bouncycastle.crypto.modes.OFBBlockCipher:int processBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.OldCTSBlockCipher:int processByte(byte,byte[],int)",
            "org.bouncycastle.crypto.modes.OldCTSBlockCipher:int processBytes(byte[],int,int,byte[],int)",
            "org.bouncycastle.crypto.modes.OldCTSBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher:int encryptBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher:int decryptBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.PGPCFBBlockCipher:int encryptBlockWithIV(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.PGPCFBBlockCipher:int decryptBlockWithIV(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.PGPCFBBlockCipher:int encryptBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.PGPCFBBlockCipher:int decryptBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.PaddedBlockCipher:int processByte(byte,byte[],int)",
            "org.bouncycastle.crypto.modes.PaddedBlockCipher:int processBytes(byte[],int,int,byte[],int)",
            "org.bouncycastle.crypto.modes.PaddedBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.modes.SICBlockCipher:int processBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher:int processByte(byte,byte[],int)",
            "org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher:int processBytes(byte[],int,int,byte[],int)",
            "org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:void CTR_DRBG_Update(byte[],byte[],byte[])",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:byte[] Block_Cipher_df(byte[],int)",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:void BCC(byte[],byte[],byte[],byte[])",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:int generate(byte[],byte[],boolean)",
            "org.bouncycastle.crypto.tls.TlsBlockCipher:byte[] encodePlaintext(long,short,byte[],int,int)",
            "org.bouncycastle.crypto.tls.TlsBlockCipher:byte[] decodeCiphertext(long,short,byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.modes.OCBBlockCipher:int doFinal(byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.io.CipherInputStream:void finaliseCipher()",
            "org.bouncycastle.crypto.io.CipherOutputStream:void close()",
            "org.bouncycastle.crypto.tls.TlsAEADCipher:byte[] encodePlaintext(long,short,byte[],int,int)",
            "org.bouncycastle.crypto.tls.TlsAEADCipher:byte[] decodeCiphertext(long,short,byte[],int,int)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$AEADGenericBlockCipher:int doFinal(byte[],int)"
        ]
    },
    "org.bouncycastle.crypto.modes.OCBBlockCipher:void processMainBlock(byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.modes.OCBBlockCipher:int processByte(byte,byte[],int)",
            "org.bouncycastle.crypto.modes.OCBBlockCipher:int processBytes(byte[],int,int,byte[],int)"
        ]
    },
    "org.bouncycastle.crypto.modes.OCBBlockCipher:void updateHASH(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.modes.OCBBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.modes.OCBBlockCipher:void processHashBlock()"
        ]
    },
    "org.bouncycastle.crypto.modes.OFBBlockCipher:int processBlock(byte[],int,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.BufferedBlockCipher:int processByte(byte,byte[],int)",
            "org.bouncycastle.crypto.BufferedBlockCipher:int processBytes(byte[],int,int,byte[],int)",
            "org.bouncycastle.crypto.BufferedBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.StreamBlockCipher:byte returnByte(byte)",
            "org.bouncycastle.crypto.StreamBlockCipher:void processBytes(byte[],int,int,byte[],int)",
            "org.bouncycastle.crypto.digests.GOST3411Digest:void E(byte[],byte[],int,byte[],int)",
            "org.bouncycastle.crypto.engines.RFC3394WrapEngine:byte[] wrap(byte[],int,int)",
            "org.bouncycastle.crypto.engines.RFC3394WrapEngine:byte[] unwrap(byte[],int,int)",
            "org.bouncycastle.crypto.macs.BlockCipherMac:void update(byte)",
            "org.bouncycastle.crypto.macs.BlockCipherMac:void update(byte[],int,int)",
            "org.bouncycastle.crypto.macs.BlockCipherMac:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.macs.CBCBlockCipherMac:void update(byte)",
            "org.bouncycastle.crypto.macs.CBCBlockCipherMac:void update(byte[],int,int)",
            "org.bouncycastle.crypto.macs.CBCBlockCipherMac:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.macs.CMac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.CMac:void update(byte)",
            "org.bouncycastle.crypto.macs.CMac:void update(byte[],int,int)",
            "org.bouncycastle.crypto.macs.CMac:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.macs.ISO9797Alg3Mac:void update(byte)",
            "org.bouncycastle.crypto.macs.ISO9797Alg3Mac:void update(byte[],int,int)",
            "org.bouncycastle.crypto.macs.ISO9797Alg3Mac:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.macs.MacCFBBlockCipher:int processBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.macs.MacCFBBlockCipher:void getMacBlock(byte[])",
            "org.bouncycastle.crypto.macs.Poly1305:void setKey(byte[],byte[])",
            "org.bouncycastle.crypto.modes.CBCBlockCipher:int encryptBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.CBCBlockCipher:int decryptBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.CFBBlockCipher:int encryptBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.CFBBlockCipher:int decryptBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.CTSBlockCipher:int processByte(byte,byte[],int)",
            "org.bouncycastle.crypto.modes.CTSBlockCipher:int processBytes(byte[],int,int,byte[],int)",
            "org.bouncycastle.crypto.modes.CTSBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.modes.GCFBBlockCipher:int processBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.GCMBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.GCMBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.modes.GCMBlockCipher:byte[] getNextCounterBlock()",
            "org.bouncycastle.crypto.modes.GOFBBlockCipher:int processBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.OCBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.OCBBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.modes.OCBBlockCipher:void processMainBlock(byte[],int)",
            "org.bouncycastle.crypto.modes.OCBBlockCipher:void updateHASH(byte[])",
            "org.bouncycastle.crypto.modes.OFBBlockCipher:int processBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.OldCTSBlockCipher:int processByte(byte,byte[],int)",
            "org.bouncycastle.crypto.modes.OldCTSBlockCipher:int processBytes(byte[],int,int,byte[],int)",
            "org.bouncycastle.crypto.modes.OldCTSBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher:int encryptBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher:int decryptBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.PGPCFBBlockCipher:int encryptBlockWithIV(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.PGPCFBBlockCipher:int decryptBlockWithIV(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.PGPCFBBlockCipher:int encryptBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.PGPCFBBlockCipher:int decryptBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.PaddedBlockCipher:int processByte(byte,byte[],int)",
            "org.bouncycastle.crypto.modes.PaddedBlockCipher:int processBytes(byte[],int,int,byte[],int)",
            "org.bouncycastle.crypto.modes.PaddedBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.modes.SICBlockCipher:int processBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher:int processByte(byte,byte[],int)",
            "org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher:int processBytes(byte[],int,int,byte[],int)",
            "org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:void CTR_DRBG_Update(byte[],byte[],byte[])",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:byte[] Block_Cipher_df(byte[],int)",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:void BCC(byte[],byte[],byte[],byte[])",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:int generate(byte[],byte[],boolean)",
            "org.bouncycastle.crypto.tls.TlsBlockCipher:byte[] encodePlaintext(long,short,byte[],int,int)",
            "org.bouncycastle.crypto.tls.TlsBlockCipher:byte[] decodeCiphertext(long,short,byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.modes.OldCTSBlockCipher:int processByte(byte,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher:int processByte(byte,byte[],int)"
        ]
    },
    "org.bouncycastle.crypto.modes.OldCTSBlockCipher:int processBytes(byte[],int,int,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.engines.IESEngine:byte[] encryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.engines.IESEngine:byte[] decryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.io.CipherInputStream:int nextChunk()",
            "org.bouncycastle.crypto.io.CipherOutputStream:void write(byte[],int,int)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher:int processBytes(byte[],int,int,byte[],int)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:byte[] engineUpdate(byte[],int,int)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:int engineUpdate(byte[],int,int,byte[],int)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:byte[] engineDoFinal(byte[],int,int)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:int engineDoFinal(byte[],int,int,byte[],int)"
        ]
    },
    "org.bouncycastle.crypto.modes.OldCTSBlockCipher:int doFinal(byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.engines.IESEngine:byte[] encryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.engines.IESEngine:byte[] decryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.io.CipherInputStream:void finaliseCipher()",
            "org.bouncycastle.crypto.io.CipherOutputStream:void close()",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:byte[] engineDoFinal(byte[],int,int)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:int engineDoFinal(byte[],int,int,byte[],int)"
        ]
    },
    "org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher:int encryptBlock(byte[],int,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher:int processBlock(byte[],int,byte[],int)"
        ]
    },
    "org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher:int decryptBlock(byte[],int,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher:int processBlock(byte[],int,byte[],int)"
        ]
    },
    "org.bouncycastle.crypto.modes.PGPCFBBlockCipher:int encryptBlockWithIV(byte[],int,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.modes.PGPCFBBlockCipher:int processBlock(byte[],int,byte[],int)"
        ]
    },
    "org.bouncycastle.crypto.modes.PGPCFBBlockCipher:int decryptBlockWithIV(byte[],int,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.modes.PGPCFBBlockCipher:int processBlock(byte[],int,byte[],int)"
        ]
    },
    "org.bouncycastle.crypto.modes.PGPCFBBlockCipher:int encryptBlock(byte[],int,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.modes.PGPCFBBlockCipher:int processBlock(byte[],int,byte[],int)"
        ]
    },
    "org.bouncycastle.crypto.modes.PGPCFBBlockCipher:int decryptBlock(byte[],int,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.modes.PGPCFBBlockCipher:int processBlock(byte[],int,byte[],int)"
        ]
    },
    "org.bouncycastle.crypto.modes.PaddedBlockCipher:int processByte(byte,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher:int processByte(byte,byte[],int)"
        ]
    },
    "org.bouncycastle.crypto.modes.PaddedBlockCipher:int processBytes(byte[],int,int,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.engines.IESEngine:byte[] encryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.engines.IESEngine:byte[] decryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.io.CipherInputStream:int nextChunk()",
            "org.bouncycastle.crypto.io.CipherOutputStream:void write(byte[],int,int)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher:int processBytes(byte[],int,int,byte[],int)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:byte[] engineUpdate(byte[],int,int)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:int engineUpdate(byte[],int,int,byte[],int)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:byte[] engineDoFinal(byte[],int,int)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:int engineDoFinal(byte[],int,int,byte[],int)"
        ]
    },
    "org.bouncycastle.crypto.modes.PaddedBlockCipher:int doFinal(byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.engines.IESEngine:byte[] encryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.engines.IESEngine:byte[] decryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.io.CipherInputStream:void finaliseCipher()",
            "org.bouncycastle.crypto.io.CipherOutputStream:void close()",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:byte[] engineDoFinal(byte[],int,int)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:int engineDoFinal(byte[],int,int,byte[],int)"
        ]
    },
    "org.bouncycastle.crypto.modes.SICBlockCipher:int processBlock(byte[],int,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.BufferedBlockCipher:int processByte(byte,byte[],int)",
            "org.bouncycastle.crypto.BufferedBlockCipher:int processBytes(byte[],int,int,byte[],int)",
            "org.bouncycastle.crypto.BufferedBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.StreamBlockCipher:byte returnByte(byte)",
            "org.bouncycastle.crypto.StreamBlockCipher:void processBytes(byte[],int,int,byte[],int)",
            "org.bouncycastle.crypto.digests.GOST3411Digest:void E(byte[],byte[],int,byte[],int)",
            "org.bouncycastle.crypto.engines.RFC3394WrapEngine:byte[] wrap(byte[],int,int)",
            "org.bouncycastle.crypto.engines.RFC3394WrapEngine:byte[] unwrap(byte[],int,int)",
            "org.bouncycastle.crypto.macs.BlockCipherMac:void update(byte)",
            "org.bouncycastle.crypto.macs.BlockCipherMac:void update(byte[],int,int)",
            "org.bouncycastle.crypto.macs.BlockCipherMac:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.macs.CBCBlockCipherMac:void update(byte)",
            "org.bouncycastle.crypto.macs.CBCBlockCipherMac:void update(byte[],int,int)",
            "org.bouncycastle.crypto.macs.CBCBlockCipherMac:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.macs.CMac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.CMac:void update(byte)",
            "org.bouncycastle.crypto.macs.CMac:void update(byte[],int,int)",
            "org.bouncycastle.crypto.macs.CMac:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.macs.ISO9797Alg3Mac:void update(byte)",
            "org.bouncycastle.crypto.macs.ISO9797Alg3Mac:void update(byte[],int,int)",
            "org.bouncycastle.crypto.macs.ISO9797Alg3Mac:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.macs.MacCFBBlockCipher:int processBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.macs.MacCFBBlockCipher:void getMacBlock(byte[])",
            "org.bouncycastle.crypto.macs.Poly1305:void setKey(byte[],byte[])",
            "org.bouncycastle.crypto.modes.CBCBlockCipher:int encryptBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.CBCBlockCipher:int decryptBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.CCMBlockCipher:int processPacket(byte[],int,int,byte[],int)",
            "org.bouncycastle.crypto.modes.CFBBlockCipher:int encryptBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.CFBBlockCipher:int decryptBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.CTSBlockCipher:int processByte(byte,byte[],int)",
            "org.bouncycastle.crypto.modes.CTSBlockCipher:int processBytes(byte[],int,int,byte[],int)",
            "org.bouncycastle.crypto.modes.CTSBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:int process(byte,byte[],int)",
            "org.bouncycastle.crypto.modes.GCFBBlockCipher:int processBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.GCMBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.GCMBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.modes.GCMBlockCipher:byte[] getNextCounterBlock()",
            "org.bouncycastle.crypto.modes.GOFBBlockCipher:int processBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.OCBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.OCBBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.modes.OCBBlockCipher:void processMainBlock(byte[],int)",
            "org.bouncycastle.crypto.modes.OCBBlockCipher:void updateHASH(byte[])",
            "org.bouncycastle.crypto.modes.OFBBlockCipher:int processBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.OldCTSBlockCipher:int processByte(byte,byte[],int)",
            "org.bouncycastle.crypto.modes.OldCTSBlockCipher:int processBytes(byte[],int,int,byte[],int)",
            "org.bouncycastle.crypto.modes.OldCTSBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher:int encryptBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher:int decryptBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.PGPCFBBlockCipher:int encryptBlockWithIV(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.PGPCFBBlockCipher:int decryptBlockWithIV(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.PGPCFBBlockCipher:int encryptBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.PGPCFBBlockCipher:int decryptBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.PaddedBlockCipher:int processByte(byte,byte[],int)",
            "org.bouncycastle.crypto.modes.PaddedBlockCipher:int processBytes(byte[],int,int,byte[],int)",
            "org.bouncycastle.crypto.modes.PaddedBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.modes.SICBlockCipher:int processBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher:int processByte(byte,byte[],int)",
            "org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher:int processBytes(byte[],int,int,byte[],int)",
            "org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:void CTR_DRBG_Update(byte[],byte[],byte[])",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:byte[] Block_Cipher_df(byte[],int)",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:void BCC(byte[],byte[],byte[],byte[])",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:int generate(byte[],byte[],boolean)",
            "org.bouncycastle.crypto.tls.TlsBlockCipher:byte[] encodePlaintext(long,short,byte[],int,int)",
            "org.bouncycastle.crypto.tls.TlsBlockCipher:byte[] decodeCiphertext(long,short,byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher:int processByte(byte,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher:int processByte(byte,byte[],int)"
        ]
    },
    "org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher:int processBytes(byte[],int,int,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.engines.IESEngine:byte[] encryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.engines.IESEngine:byte[] decryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.examples.DESExample:void performEncrypt(byte[])",
            "org.bouncycastle.crypto.examples.DESExample:void performDecrypt(byte[])",
            "org.bouncycastle.crypto.io.CipherInputStream:int nextChunk()",
            "org.bouncycastle.crypto.io.CipherOutputStream:void write(byte[],int,int)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher:int processBytes(byte[],int,int,byte[],int)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:byte[] engineUpdate(byte[],int,int)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:int engineUpdate(byte[],int,int,byte[],int)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:byte[] engineDoFinal(byte[],int,int)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:int engineDoFinal(byte[],int,int,byte[],int)"
        ]
    },
    "org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher:int doFinal(byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.engines.IESEngine:byte[] encryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.engines.IESEngine:byte[] decryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.examples.DESExample:void performEncrypt(byte[])",
            "org.bouncycastle.crypto.examples.DESExample:void performDecrypt(byte[])",
            "org.bouncycastle.crypto.io.CipherInputStream:void finaliseCipher()",
            "org.bouncycastle.crypto.io.CipherOutputStream:void close()",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:byte[] engineDoFinal(byte[],int,int)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:int engineDoFinal(byte[],int,int,byte[],int)"
        ]
    },
    "org.bouncycastle.crypto.macs.GMac:void init(org.bouncycastle.crypto.CipherParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.engines.IESEngine:byte[] encryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.engines.IESEngine:byte[] decryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.generators.KDFCounterBytesGenerator:void init(org.bouncycastle.crypto.DerivationParameters)",
            "org.bouncycastle.crypto.generators.KDFDoublePipelineIterationBytesGenerator:void init(org.bouncycastle.crypto.DerivationParameters)",
            "org.bouncycastle.crypto.generators.KDFFeedbackBytesGenerator:void init(org.bouncycastle.crypto.DerivationParameters)",
            "org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator:byte[] generateDerivedKey(int)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:void hmac_DRBG_Update_Func(byte[],byte)",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:int generate(byte[],byte[],boolean)",
            "org.bouncycastle.crypto.tls.TlsMac:void <init>(org.bouncycastle.crypto.tls.TlsContext,org.bouncycastle.crypto.Digest,byte[],int,int)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineInit(java.security.Key,java.security.spec.AlgorithmParameterSpec)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsAEADCipher:void <init>(org.bouncycastle.crypto.tls.TlsContext,org.bouncycastle.crypto.modes.AEADBlockCipher,org.bouncycastle.crypto.modes.AEADBlockCipher,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DefaultTlsCipherFactory:org.bouncycastle.crypto.tls.TlsAEADCipher createCipher_AES_CCM(org.bouncycastle.crypto.tls.TlsContext,int,int)",
            "org.bouncycastle.crypto.tls.DefaultTlsCipherFactory:org.bouncycastle.crypto.tls.TlsAEADCipher createCipher_AES_GCM(org.bouncycastle.crypto.tls.TlsContext,int,int)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsAEADCipher:byte[] encodePlaintext(long,short,byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSRecordLayer:void sendRecord(short,byte[],int,int)",
            "org.bouncycastle.crypto.tls.RecordStream:void writeRecord(short,byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsAEADCipher:byte[] decodeCiphertext(long,short,byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSRecordLayer:int receive(byte[],int,int,int)",
            "org.bouncycastle.crypto.tls.RecordStream:byte[] decodeAndVerify(short,java.io.InputStream,int)"
        ]
    },
    "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$AEADGenericBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)"
        ]
    },
    "org.bouncycastle.crypto.modes.CCMBlockCipher:int processPacket(byte[],int,int,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.modes.CCMBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.modes.CCMBlockCipher:byte[] processPacket(byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.examples.DESExample:void performEncrypt(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.examples.DESExample:void process()"
        ]
    },
    "org.bouncycastle.crypto.examples.DESExample:void performDecrypt(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.examples.DESExample:void process()"
        ]
    },
    "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:void CTR_DRBG_Instantiate_algorithm(byte[],byte[],byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:void <init>(org.bouncycastle.crypto.BlockCipher,int,int,org.bouncycastle.crypto.prng.EntropySource,byte[],byte[])"
        ]
    },
    "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:void CTR_DRBG_Reseed_algorithm(org.bouncycastle.crypto.prng.EntropySource,byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:int generate(byte[],byte[],boolean)",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:void reseed(byte[])"
        ]
    },
    "org.bouncycastle.crypto.prng.SP800SecureRandom:void nextBytes(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.CipherKeyGenerator:byte[] generateKey()",
            "org.bouncycastle.crypto.commitments.GeneralHashCommitter:org.bouncycastle.crypto.Commitment commit(byte[])",
            "org.bouncycastle.crypto.commitments.HashCommitter:org.bouncycastle.crypto.Commitment commit(byte[])",
            "org.bouncycastle.crypto.encodings.OAEPEncoding:byte[] encodeBlock(byte[],int,int)",
            "org.bouncycastle.crypto.encodings.PKCS1Encoding:byte[] encodeBlock(byte[],int,int)",
            "org.bouncycastle.crypto.engines.DESedeWrapEngine:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.engines.RC2WrapEngine:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.engines.RC2WrapEngine:byte[] wrap(byte[],int,int)",
            "org.bouncycastle.crypto.generators.DESKeyGenerator:byte[] generateKey()",
            "org.bouncycastle.crypto.generators.DESedeKeyGenerator:byte[] generateKey()",
            "org.bouncycastle.crypto.generators.DSAParametersGenerator:org.bouncycastle.crypto.params.DSAParameters generateParameters_FIPS186_2()",
            "org.bouncycastle.crypto.generators.DSAParametersGenerator:org.bouncycastle.crypto.params.DSAParameters generateParameters_FIPS186_3()",
            "org.bouncycastle.crypto.prng.SP800SecureRandom:byte[] generateSeed(int)",
            "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:byte[] generateSignature()",
            "org.bouncycastle.crypto.signers.PSSSigner:byte[] generateSignature()",
            "org.bouncycastle.crypto.tls.HeartbeatMessage:void encode(org.bouncycastle.crypto.tls.TlsContext,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsBlockCipher:void <init>(org.bouncycastle.crypto.tls.TlsContext,org.bouncycastle.crypto.BlockCipher,org.bouncycastle.crypto.BlockCipher,org.bouncycastle.crypto.Digest,org.bouncycastle.crypto.Digest,int)",
            "org.bouncycastle.crypto.tls.TlsBlockCipher:byte[] encodePlaintext(long,short,byte[],int,int)",
            "org.bouncycastle.crypto.tls.TlsProtocol:byte[] createRandomBlock(java.security.SecureRandom)",
            "org.bouncycastle.crypto.tls.TlsRSAUtils:byte[] generateEncryptedPreMasterSecret(org.bouncycastle.crypto.tls.TlsContext,org.bouncycastle.crypto.params.RSAKeyParameters,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsRSAUtils:byte[] safeDecryptPreMasterSecret(org.bouncycastle.crypto.tls.TlsContext,org.bouncycastle.crypto.tls.TlsEncryptionCredentials,byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.ies.CipherSpi:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$BouncyCastleStore:void engineStore(java.io.OutputStream,char[])",
            "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry:void <init>(org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi,java.lang.String,java.security.Key,char[],java.security.cert.Certificate[])",
            "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi:void engineStore(java.io.OutputStream,char[])",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void doStore(java.io.OutputStream,char[],boolean)",
            "org.bouncycastle.jcajce.provider.symmetric.AES$AlgParamGen:java.security.AlgorithmParameters engineGenerateParameters()",
            "org.bouncycastle.jcajce.provider.symmetric.CAST5$AlgParamGen:java.security.AlgorithmParameters engineGenerateParameters()",
            "org.bouncycastle.jcajce.provider.symmetric.Camellia$AlgParamGen:java.security.AlgorithmParameters engineGenerateParameters()",
            "org.bouncycastle.jcajce.provider.symmetric.DES$AlgParamGen:java.security.AlgorithmParameters engineGenerateParameters()",
            "org.bouncycastle.jcajce.provider.symmetric.DESede$AlgParamGen:java.security.AlgorithmParameters engineGenerateParameters()",
            "org.bouncycastle.jcajce.provider.symmetric.GOST28147$AlgParamGen:java.security.AlgorithmParameters engineGenerateParameters()",
            "org.bouncycastle.jcajce.provider.symmetric.IDEA$AlgParamGen:java.security.AlgorithmParameters engineGenerateParameters()",
            "org.bouncycastle.jcajce.provider.symmetric.Noekeon$AlgParamGen:java.security.AlgorithmParameters engineGenerateParameters()",
            "org.bouncycastle.jcajce.provider.symmetric.RC2$AlgParamGen:java.security.AlgorithmParameters engineGenerateParameters()",
            "org.bouncycastle.jcajce.provider.symmetric.RC5$AlgParamGen:java.security.AlgorithmParameters engineGenerateParameters()",
            "org.bouncycastle.jcajce.provider.symmetric.RC6$AlgParamGen:java.security.AlgorithmParameters engineGenerateParameters()",
            "org.bouncycastle.jcajce.provider.symmetric.SEED$AlgParamGen:java.security.AlgorithmParameters engineGenerateParameters()",
            "org.bouncycastle.jcajce.provider.symmetric.Shacal2$AlgParamGen:java.security.AlgorithmParameters engineGenerateParameters()",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.pqc.crypto.gmss.GMSSKeyPairGenerator:void initialize(org.bouncycastle.crypto.KeyGenerationParameters)",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiCipher:byte[] messageEncrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalCipher:byte[] messageEncrypt(byte[])"
        ]
    },
    "org.bouncycastle.crypto.tls.DefaultTlsCipherFactory:org.bouncycastle.crypto.tls.TlsBlockCipher createAESCipher(org.bouncycastle.crypto.tls.TlsContext,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DefaultTlsCipherFactory:org.bouncycastle.crypto.tls.TlsCipher createCipher(org.bouncycastle.crypto.tls.TlsContext,int,int)"
        ]
    },
    "org.bouncycastle.crypto.tls.DefaultTlsCipherFactory:org.bouncycastle.crypto.tls.TlsBlockCipher createCamelliaCipher(org.bouncycastle.crypto.tls.TlsContext,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DefaultTlsCipherFactory:org.bouncycastle.crypto.tls.TlsCipher createCipher(org.bouncycastle.crypto.tls.TlsContext,int,int)"
        ]
    },
    "org.bouncycastle.crypto.tls.DefaultTlsCipherFactory:org.bouncycastle.crypto.tls.TlsBlockCipher createDESedeCipher(org.bouncycastle.crypto.tls.TlsContext,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DefaultTlsCipherFactory:org.bouncycastle.crypto.tls.TlsCipher createCipher(org.bouncycastle.crypto.tls.TlsContext,int,int)"
        ]
    },
    "org.bouncycastle.crypto.tls.DefaultTlsCipherFactory:org.bouncycastle.crypto.tls.TlsBlockCipher createSEEDCipher(org.bouncycastle.crypto.tls.TlsContext,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DefaultTlsCipherFactory:org.bouncycastle.crypto.tls.TlsCipher createCipher(org.bouncycastle.crypto.tls.TlsContext,int,int)"
        ]
    },
    "org.bouncycastle.crypto.tls.DTLSRecordLayer:void sendRecord(short,byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSRecordLayer:void send(byte[],int,int)",
            "org.bouncycastle.crypto.tls.DTLSRecordLayer:void raiseAlert(short,short,java.lang.String,java.lang.Exception)"
        ]
    },
    "org.bouncycastle.crypto.tls.RecordStream:void writeRecord(short,byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsProtocol:void safeWriteRecord(short,byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.tls.DTLSRecordLayer:int receive(byte[],int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSRecordLayer:int receiveRecord(byte[],int,int,int)",
            "org.bouncycastle.crypto.tls.DTLSReliableHandshake:org.bouncycastle.crypto.tls.DTLSReliableHandshake$Message receiveMessage()",
            "org.bouncycastle.crypto.tls.DTLSTransport:int receive(byte[],int,int,int)"
        ]
    },
    "org.bouncycastle.crypto.tls.RecordStream:byte[] decodeAndVerify(short,java.io.InputStream,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.RecordStream:boolean readRecord()"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi:java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.dh.KeyFactorySpi:java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.KeyFactorySpi:java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec)",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.KeyFactorySpi:java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec)",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi:java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.KeyFactorySpi:java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec)",
            "org.bouncycastle.jcajce.provider.asymmetric.elgamal.KeyFactorySpi:java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.KeyFactorySpi:java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec)",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.KeyFactorySpi:java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec)"
        ]
    },
    "org.bouncycastle.jce.provider.BouncyCastleProvider:java.security.PublicKey getPublicKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil:org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePublicKeyParameter(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.KeyFactory:java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:java.security.PublicKey getPublicKey()",
            "org.bouncycastle.jce.provider.X509CertificateObject:java.security.PublicKey getPublicKey()"
        ]
    },
    "org.bouncycastle.pqc.jcajce.provider.BouncyCastlePQCProvider:java.security.PublicKey getPublicKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dh.IESCipher:void engineInit(int,java.security.Key,java.security.AlgorithmParameters,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dh.IESCipher:void engineInit(int,java.security.Key,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ies.CipherSpi:void engineInit(int,java.security.Key,java.security.AlgorithmParameters,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ies.CipherSpi:void engineInit(int,java.security.Key,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.generators.EphemeralKeyPairGenerator:org.bouncycastle.crypto.EphemeralKeyPair generate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.engines.IESEngine:byte[] processBlock(byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsDHUtils:org.bouncycastle.crypto.AsymmetricCipherKeyPair generateDHKeyPair(java.security.SecureRandom,org.bouncycastle.crypto.params.DHParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsDHUtils:org.bouncycastle.crypto.params.DHPrivateKeyParameters generateEphemeralClientKeyExchange(java.security.SecureRandom,org.bouncycastle.crypto.params.DHParameters,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsDHUtils:org.bouncycastle.crypto.params.DHPrivateKeyParameters generateEphemeralServerKeyExchange(java.security.SecureRandom,org.bouncycastle.crypto.params.DHParameters,java.io.OutputStream)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi:java.security.KeyPair generateKeyPair()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.agreement.DHAgreement:java.math.BigInteger calculateMessage()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.engines.IESEngine:byte[] processBlock(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.dh.IESCipher:byte[] engineDoFinal(byte[],int,int)",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.IESCipher:byte[] engineDoFinal(byte[],int,int)",
            "org.bouncycastle.jcajce.provider.asymmetric.ies.CipherSpi:byte[] engineDoFinal(byte[],int,int)",
            "org.bouncycastle.jcajce.provider.asymmetric.ies.CipherSpi:int engineDoFinal(byte[],int,int,byte[],int)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsDHEKeyExchange:void processServerKeyExchange(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:void processServerKeyExchange(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,byte[])",
            "org.bouncycastle.crypto.tls.TlsClientProtocol:void handleHandshakeMessage(short,byte[])"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsPSKKeyExchange:void processServerKeyExchange(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:void processServerKeyExchange(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,byte[])",
            "org.bouncycastle.crypto.tls.TlsClientProtocol:void handleHandshakeMessage(short,byte[])"
        ]
    },
    "org.bouncycastle.crypto.tls.DTLSServerProtocol:void processCertificateVerify(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState,byte[],org.bouncycastle.crypto.tls.TlsHandshakeHash)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSServerProtocol:org.bouncycastle.crypto.tls.DTLSTransport serverHandshake(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState,org.bouncycastle.crypto.tls.DTLSRecordLayer)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsDHKeyExchange:void processServerCertificate(org.bouncycastle.crypto.tls.Certificate)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.AbstractTlsKeyExchange:void processServerCredentials(org.bouncycastle.crypto.tls.TlsCredentials)",
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:org.bouncycastle.crypto.tls.Certificate processServerCertificate(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,byte[])",
            "org.bouncycastle.crypto.tls.TlsClientProtocol:void handleHandshakeMessage(short,byte[])",
            "org.bouncycastle.crypto.tls.TlsDHEKeyExchange:void processServerCredentials(org.bouncycastle.crypto.tls.TlsCredentials)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsECDHKeyExchange:void processServerCertificate(org.bouncycastle.crypto.tls.Certificate)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.AbstractTlsKeyExchange:void processServerCredentials(org.bouncycastle.crypto.tls.TlsCredentials)",
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:org.bouncycastle.crypto.tls.Certificate processServerCertificate(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,byte[])",
            "org.bouncycastle.crypto.tls.TlsClientProtocol:void handleHandshakeMessage(short,byte[])",
            "org.bouncycastle.crypto.tls.TlsECDHEKeyExchange:void processServerCredentials(org.bouncycastle.crypto.tls.TlsCredentials)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsPSKKeyExchange:void processServerCertificate(org.bouncycastle.crypto.tls.Certificate)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.AbstractTlsKeyExchange:void processServerCredentials(org.bouncycastle.crypto.tls.TlsCredentials)",
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:org.bouncycastle.crypto.tls.Certificate processServerCertificate(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,byte[])",
            "org.bouncycastle.crypto.tls.TlsClientProtocol:void handleHandshakeMessage(short,byte[])",
            "org.bouncycastle.crypto.tls.TlsPSKKeyExchange:void processServerCredentials(org.bouncycastle.crypto.tls.TlsCredentials)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsRSAKeyExchange:void processServerCertificate(org.bouncycastle.crypto.tls.Certificate)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.AbstractTlsKeyExchange:void processServerCredentials(org.bouncycastle.crypto.tls.TlsCredentials)",
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:org.bouncycastle.crypto.tls.Certificate processServerCertificate(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,byte[])",
            "org.bouncycastle.crypto.tls.TlsClientProtocol:void handleHandshakeMessage(short,byte[])",
            "org.bouncycastle.crypto.tls.TlsRSAKeyExchange:void processServerCredentials(org.bouncycastle.crypto.tls.TlsCredentials)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsSRPKeyExchange:void processServerCertificate(org.bouncycastle.crypto.tls.Certificate)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.AbstractTlsKeyExchange:void processServerCredentials(org.bouncycastle.crypto.tls.TlsCredentials)",
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:org.bouncycastle.crypto.tls.Certificate processServerCertificate(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,byte[])",
            "org.bouncycastle.crypto.tls.TlsClientProtocol:void handleHandshakeMessage(short,byte[])"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsServerProtocol:void receiveCertificateVerifyMessage(java.io.ByteArrayInputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void handleHandshakeMessage(short,byte[])"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsUtils:short getClientCertificateType(org.bouncycastle.crypto.tls.Certificate,org.bouncycastle.crypto.tls.Certificate)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSServerProtocol:void notifyClientCertificate(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState,org.bouncycastle.crypto.tls.Certificate)",
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void notifyClientCertificate(org.bouncycastle.crypto.tls.Certificate)"
        ]
    },
    "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:void engineInit(int,java.security.Key,java.security.AlgorithmParameters,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:void engineInit(int,java.security.Key,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:void engineInit(int,java.security.Key,java.security.AlgorithmParameters,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:void engineInit(int,java.security.Key,java.security.SecureRandom)"
        ]
    },
    "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:void engineInit(int,java.security.Key,java.security.AlgorithmParameters,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:void engineInit(int,java.security.Key,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.tls.DefaultTlsCipherFactory:org.bouncycastle.crypto.tls.TlsStreamCipher createRC4Cipher(org.bouncycastle.crypto.tls.TlsContext,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DefaultTlsCipherFactory:org.bouncycastle.crypto.tls.TlsCipher createCipher(org.bouncycastle.crypto.tls.TlsContext,int,int)"
        ]
    },
    "org.bouncycastle.crypto.tls.DefaultTlsCipherFactory:org.bouncycastle.crypto.tls.TlsStreamCipher createSalsa20Cipher(org.bouncycastle.crypto.tls.TlsContext,int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DefaultTlsCipherFactory:org.bouncycastle.crypto.tls.TlsCipher createCipher(org.bouncycastle.crypto.tls.TlsContext,int,int)"
        ]
    },
    "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:void engineInit(int,java.security.Key,java.security.AlgorithmParameters,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:void engineInit(int,java.security.Key,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:void engineInit(int,java.security.Key,java.security.AlgorithmParameters,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:void engineInit(int,java.security.Key,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.provider.JCEStreamCipher:void engineInit(int,java.security.Key,java.security.AlgorithmParameters,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.provider.JCEStreamCipher:void engineInit(int,java.security.Key,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.symmetric.util.PBE$Util:org.bouncycastle.crypto.CipherParameters makePBEParameters(org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey,java.security.spec.AlgorithmParameterSpec,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)"
        ]
    },
    "org.bouncycastle.jcajce.provider.symmetric.util.PBE$Util:org.bouncycastle.crypto.CipherParameters makePBEMacParameters(org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey,java.security.spec.AlgorithmParameterSpec)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineInit(java.security.Key,java.security.spec.AlgorithmParameterSpec)"
        ]
    },
    "org.bouncycastle.jcajce.provider.symmetric.util.PBE$Util:org.bouncycastle.crypto.CipherParameters makePBEParameters(javax.crypto.spec.PBEKeySpec,int,int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.symmetric.DES$DESPBEKeyFactory:javax.crypto.SecretKey engineGenerateSecret(java.security.spec.KeySpec)",
            "org.bouncycastle.jcajce.provider.symmetric.util.PBESecretKeyFactory:javax.crypto.SecretKey engineGenerateSecret(java.security.spec.KeySpec)"
        ]
    },
    "org.bouncycastle.jcajce.provider.symmetric.util.PBE$Util:org.bouncycastle.crypto.CipherParameters makePBEMacParameters(javax.crypto.spec.PBEKeySpec,int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.digest.SHA1$BasePBKDF2WithHmacSHA1:javax.crypto.SecretKey engineGenerateSecret(java.security.spec.KeySpec)",
            "org.bouncycastle.jcajce.provider.symmetric.DES$DESPBEKeyFactory:javax.crypto.SecretKey engineGenerateSecret(java.security.spec.KeySpec)",
            "org.bouncycastle.jcajce.provider.symmetric.PBEPBKDF2$BasePBKDF2:javax.crypto.SecretKey engineGenerateSecret(java.security.spec.KeySpec)",
            "org.bouncycastle.jcajce.provider.symmetric.util.PBESecretKeyFactory:javax.crypto.SecretKey engineGenerateSecret(java.security.spec.KeySpec)"
        ]
    },
    "org.bouncycastle.crypto.digests.GOST3411Digest:void update(byte)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.agreement.srp.SRP6Util:java.math.BigInteger calculateX(org.bouncycastle.crypto.Digest,java.math.BigInteger,byte[],byte[],byte[])",
            "org.bouncycastle.crypto.commitments.GeneralHashCommitter:byte[] calculateCommitment(byte[],byte[])",
            "org.bouncycastle.crypto.digests.GOST3411Digest:void update(byte[],int,int)",
            "org.bouncycastle.crypto.digests.GOST3411Digest:void finish()",
            "org.bouncycastle.crypto.digests.NonMemoableDigest:void update(byte)",
            "org.bouncycastle.crypto.digests.ShortenedDigest:void update(byte)",
            "org.bouncycastle.crypto.io.DigestInputStream:int read()",
            "org.bouncycastle.crypto.io.DigestOutputStream:void write(int)",
            "org.bouncycastle.crypto.macs.HMac:void update(byte)",
            "org.bouncycastle.crypto.macs.OldHMac:void update(byte)",
            "org.bouncycastle.crypto.prng.DigestRandomGenerator:void digestAddCounter(long)",
            "org.bouncycastle.crypto.prng.drbg.Utils:byte[] hash_df(org.bouncycastle.crypto.Digest,byte[],int)",
            "org.bouncycastle.crypto.signers.DSADigestSigner:void update(byte)",
            "org.bouncycastle.crypto.signers.GenericSigner:void update(byte)",
            "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:void update(byte)",
            "org.bouncycastle.crypto.signers.ISO9796d2Signer:void update(byte)",
            "org.bouncycastle.crypto.signers.PSSSigner:void update(byte)",
            "org.bouncycastle.crypto.signers.RSADigestSigner:void update(byte)",
            "org.bouncycastle.crypto.tls.CombinedHash:void update(byte)",
            "org.bouncycastle.crypto.tls.DeferredHash:void update(byte)",
            "org.bouncycastle.crypto.tls.SSL3Mac:void update(byte)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner:void engineUpdate(byte)",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpi:void engineUpdate(byte)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.SignatureSpi:void engineUpdate(byte)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.SignatureSpi:void engineUpdate(byte)",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi:void engineUpdate(byte)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.DSABase:void engineUpdate(byte)",
            "org.bouncycastle.jcajce.provider.digest.BCMessageDigest:void engineUpdate(byte)",
            "org.bouncycastle.jce.provider.BrokenKDF2BytesGenerator:int generateBytes(byte[],int,int)",
            "org.bouncycastle.pqc.crypto.DigestingMessageSigner:void update(byte)",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher:void update(byte)",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiDigestCipher:void update(byte)",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePKCSDigestCipher:void update(byte)",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalDigestCipher:void update(byte)",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.SignatureSpi:void engineUpdate(byte)"
        ]
    },
    "org.bouncycastle.crypto.digests.GOST3411Digest:void update(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:void updateDigest(org.bouncycastle.crypto.Digest,java.math.BigInteger)",
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:void updateDigestIncludingSize(org.bouncycastle.crypto.Digest,java.math.BigInteger)",
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:void updateDigest(org.bouncycastle.crypto.Digest,java.lang.String)",
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:void updateDigestIncludingSize(org.bouncycastle.crypto.Digest,java.lang.String)",
            "org.bouncycastle.crypto.agreement.kdf.DHKEKGenerator:int generateBytes(byte[],int,int)",
            "org.bouncycastle.crypto.agreement.srp.SRP6Util:java.math.BigInteger calculateX(org.bouncycastle.crypto.Digest,java.math.BigInteger,byte[],byte[],byte[])",
            "org.bouncycastle.crypto.agreement.srp.SRP6Util:java.math.BigInteger hashPaddedPair(org.bouncycastle.crypto.Digest,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)",
            "org.bouncycastle.crypto.commitments.GeneralHashCommitter:byte[] calculateCommitment(byte[],byte[])",
            "org.bouncycastle.crypto.commitments.HashCommitter:byte[] calculateCommitment(byte[],byte[])",
            "org.bouncycastle.crypto.digests.NonMemoableDigest:void update(byte[],int,int)",
            "org.bouncycastle.crypto.digests.ShortenedDigest:void update(byte[],int,int)",
            "org.bouncycastle.crypto.encodings.OAEPEncoding:void <init>(org.bouncycastle.crypto.AsymmetricBlockCipher,org.bouncycastle.crypto.Digest,org.bouncycastle.crypto.Digest,byte[])",
            "org.bouncycastle.crypto.encodings.OAEPEncoding:byte[] maskGeneratorFunction1(byte[],int,int,int)",
            "org.bouncycastle.crypto.engines.DESedeWrapEngine:byte[] calculateCMSKeyChecksum(byte[])",
            "org.bouncycastle.crypto.engines.RC2WrapEngine:byte[] calculateCMSKeyChecksum(byte[])",
            "org.bouncycastle.crypto.generators.BaseKDFBytesGenerator:int generateBytes(byte[],int,int)",
            "org.bouncycastle.crypto.generators.DSAParametersGenerator:void hash(org.bouncycastle.crypto.Digest,byte[],byte[])",
            "org.bouncycastle.crypto.generators.MGF1BytesGenerator:int generateBytes(byte[],int,int)",
            "org.bouncycastle.crypto.generators.OpenSSLPBEParametersGenerator:byte[] generateDerivedKey(int)",
            "org.bouncycastle.crypto.generators.PKCS12ParametersGenerator:byte[] generateDerivedKey(int,int)",
            "org.bouncycastle.crypto.generators.PKCS5S1ParametersGenerator:byte[] generateDerivedKey()",
            "org.bouncycastle.crypto.io.DigestInputStream:int read(byte[],int,int)",
            "org.bouncycastle.crypto.io.DigestOutputStream:void write(byte[],int,int)",
            "org.bouncycastle.crypto.macs.HMac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.HMac:void update(byte[],int,int)",
            "org.bouncycastle.crypto.macs.HMac:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.macs.HMac:void reset()",
            "org.bouncycastle.crypto.macs.OldHMac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.OldHMac:void update(byte[],int,int)",
            "org.bouncycastle.crypto.macs.OldHMac:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.macs.OldHMac:void reset()",
            "org.bouncycastle.crypto.prng.DigestRandomGenerator:void digestUpdate(byte[])",
            "org.bouncycastle.crypto.prng.drbg.HashSP800DRBG:byte[] hash(byte[])",
            "org.bouncycastle.crypto.prng.drbg.Utils:byte[] hash_df(org.bouncycastle.crypto.Digest,byte[],int)",
            "org.bouncycastle.crypto.signers.DSADigestSigner:void update(byte[],int,int)",
            "org.bouncycastle.crypto.signers.GenericSigner:void update(byte[],int,int)",
            "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:void update(byte[],int,int)",
            "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:byte[] generateSignature()",
            "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:boolean verifySignature(byte[])",
            "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:byte[] maskGeneratorFunction1(byte[],int,int,int)",
            "org.bouncycastle.crypto.signers.ISO9796d2Signer:void updateWithRecoveredMessage(byte[])",
            "org.bouncycastle.crypto.signers.ISO9796d2Signer:void update(byte[],int,int)",
            "org.bouncycastle.crypto.signers.ISO9796d2Signer:boolean verifySignature(byte[])",
            "org.bouncycastle.crypto.signers.PSSSigner:void update(byte[],int,int)",
            "org.bouncycastle.crypto.signers.PSSSigner:byte[] generateSignature()",
            "org.bouncycastle.crypto.signers.PSSSigner:boolean verifySignature(byte[])",
            "org.bouncycastle.crypto.signers.PSSSigner:byte[] maskGeneratorFunction1(byte[],int,int,int)",
            "org.bouncycastle.crypto.signers.RSADigestSigner:void update(byte[],int,int)",
            "org.bouncycastle.crypto.tls.CombinedHash:void update(byte[],int,int)",
            "org.bouncycastle.crypto.tls.CombinedHash:void ssl3Complete(org.bouncycastle.crypto.Digest,byte[],byte[],int)",
            "org.bouncycastle.crypto.tls.DeferredHash:void update(byte[],int,int)",
            "org.bouncycastle.crypto.tls.DigestInputBuffer:void updateDigest(org.bouncycastle.crypto.Digest)",
            "org.bouncycastle.crypto.tls.SSL3Mac:void update(byte[],int,int)",
            "org.bouncycastle.crypto.tls.SSL3Mac:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.tls.SSL3Mac:void reset()",
            "org.bouncycastle.crypto.tls.TlsDHEKeyExchange:byte[] generateServerKeyExchange()",
            "org.bouncycastle.crypto.tls.TlsECDHEKeyExchange:byte[] generateServerKeyExchange()",
            "org.bouncycastle.crypto.tls.TlsProtocol:byte[] getCurrentPRFHash(org.bouncycastle.crypto.tls.TlsContext,org.bouncycastle.crypto.tls.TlsHandshakeHash,byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner:void engineUpdate(byte[],int,int)",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpi:void engineUpdate(byte[],int,int)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.SignatureSpi:void engineUpdate(byte[],int,int)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.SignatureSpi:void engineUpdate(byte[],int,int)",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi:void engineUpdate(byte[],int,int)",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.PSSSignatureSpi$NullPssDigest:int doFinal(byte[],int)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.DSABase:void engineUpdate(byte[],int,int)",
            "org.bouncycastle.jcajce.provider.digest.BCMessageDigest:void engineUpdate(byte[],int,int)",
            "org.bouncycastle.jce.provider.BrokenKDF2BytesGenerator:int generateBytes(byte[],int,int)",
            "org.bouncycastle.jce.provider.OldPKCS12ParametersGenerator:byte[] generateDerivedKey(int,int)",
            "org.bouncycastle.pqc.crypto.DigestingMessageSigner:void update(byte[],int,int)",
            "org.bouncycastle.pqc.crypto.gmss.GMSSLeaf:void updateLeafCalc()",
            "org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters:void computeAuthPaths(int)",
            "org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc:void update(byte[])",
            "org.bouncycastle.pqc.crypto.gmss.GMSSRootSig:void initSign(byte[],byte[])",
            "org.bouncycastle.pqc.crypto.gmss.GMSSRootSig:void oneStep()",
            "org.bouncycastle.pqc.crypto.gmss.GMSSSigner:boolean verifySignature(byte[],byte[])",
            "org.bouncycastle.pqc.crypto.gmss.Treehash:void update(org.bouncycastle.pqc.crypto.gmss.util.GMSSRandom,byte[])",
            "org.bouncycastle.pqc.crypto.gmss.util.GMSSRandom:byte[] nextSeed(byte[])",
            "org.bouncycastle.pqc.crypto.gmss.util.WinternitzOTSVerify:byte[] Verify(byte[],byte[])",
            "org.bouncycastle.pqc.crypto.gmss.util.WinternitzOTSignature:byte[] getPublicKey()",
            "org.bouncycastle.pqc.crypto.gmss.util.WinternitzOTSignature:byte[] getSignature(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiCipher:byte[] messageEncrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiCipher:byte[] messageDecrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher:void update(byte[],int,int)",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiCipher:byte[] messageEncrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiCipher:byte[] messageDecrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiDigestCipher:void update(byte[],int,int)",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePKCSDigestCipher:void update(byte[],int,int)",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalCipher:byte[] messageEncrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalCipher:byte[] messageDecrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalDigestCipher:void update(byte[],int,int)",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.SignatureSpi:void engineUpdate(byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.digests.GOST3411Digest:void finish()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.digests.GOST3411Digest:int doFinal(byte[],int)"
        ]
    },
    "org.bouncycastle.crypto.digests.GOST3411Digest:org.bouncycastle.util.Memoable copy()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.macs.HMac:void init(org.bouncycastle.crypto.CipherParameters)"
        ]
    },
    "org.bouncycastle.jcajce.provider.digest.GOST3411$Digest:java.lang.Object clone()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:byte[] engineGetIV()"
        ]
    },
    "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:java.math.BigInteger calculateMacTag(java.lang.String,java.lang.String,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,org.bouncycastle.crypto.Digest)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.agreement.jpake.JPAKEParticipant:org.bouncycastle.crypto.agreement.jpake.JPAKERound3Payload createRound3PayloadToSend(java.math.BigInteger)",
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:void validateMacTag(java.lang.String,java.lang.String,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,org.bouncycastle.crypto.Digest,java.math.BigInteger)"
        ]
    },
    "org.bouncycastle.crypto.generators.HKDFBytesGenerator:org.bouncycastle.crypto.params.KeyParameter extract(byte[],byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.generators.HKDFBytesGenerator:void init(org.bouncycastle.crypto.DerivationParameters)"
        ]
    },
    "org.bouncycastle.crypto.generators.HKDFBytesGenerator:void expandNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.generators.HKDFBytesGenerator:int generateBytes(byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.generators.KDFCounterBytesGenerator:void generateNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.generators.KDFCounterBytesGenerator:int generateBytes(byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.generators.KDFDoublePipelineIterationBytesGenerator:void generateNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.generators.KDFDoublePipelineIterationBytesGenerator:int generateBytes(byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.generators.KDFFeedbackBytesGenerator:void generateNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.generators.KDFFeedbackBytesGenerator:int generateBytes(byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator:void F(byte[],int,byte[],byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator:byte[] generateDerivedKey(int)"
        ]
    },
    "org.bouncycastle.crypto.io.MacOutputStream:byte[] getMac()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.modes.EAXBlockCipher:void initCipher()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.modes.EAXBlockCipher:int processByte(byte,byte[],int)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:int processBytes(byte[],int,int,byte[],int)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:int doFinal(byte[],int)"
        ]
    },
    "org.bouncycastle.crypto.modes.EAXBlockCipher:void calculateMac()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.modes.EAXBlockCipher:int doFinal(byte[],int)"
        ]
    },
    "org.bouncycastle.crypto.signers.HMacDSAKCalculator:void init(java.math.BigInteger,java.math.BigInteger,byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.signers.DSASigner:java.math.BigInteger[] generateSignature(byte[])",
            "org.bouncycastle.crypto.signers.ECDSASigner:java.math.BigInteger[] generateSignature(byte[])"
        ]
    },
    "org.bouncycastle.crypto.signers.HMacDSAKCalculator:java.math.BigInteger nextK()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.signers.DSASigner:java.math.BigInteger[] generateSignature(byte[])",
            "org.bouncycastle.crypto.signers.ECDSASigner:java.math.BigInteger[] generateSignature(byte[])"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsMac:byte[] calculateMac(long,short,byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsBlockCipher:byte[] encodePlaintext(long,short,byte[],int,int)",
            "org.bouncycastle.crypto.tls.TlsBlockCipher:byte[] decodeCiphertext(long,short,byte[],int,int)",
            "org.bouncycastle.crypto.tls.TlsMac:byte[] calculateMacConstantTime(long,short,byte[],int,int,int,byte[])",
            "org.bouncycastle.crypto.tls.TlsNullCipher:byte[] encodePlaintext(long,short,byte[],int,int)",
            "org.bouncycastle.crypto.tls.TlsNullCipher:byte[] decodeCiphertext(long,short,byte[],int,int)",
            "org.bouncycastle.crypto.tls.TlsStreamCipher:byte[] encodePlaintext(long,short,byte[],int,int)",
            "org.bouncycastle.crypto.tls.TlsStreamCipher:void checkMAC(long,short,byte[],int,int,byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsUtils:void hmac_hash(org.bouncycastle.crypto.Digest,byte[],byte[],byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsUtils:byte[] PRF(org.bouncycastle.crypto.tls.TlsContext,byte[],java.lang.String,byte[],int)",
            "org.bouncycastle.crypto.tls.TlsUtils:byte[] PRF_legacy(byte[],byte[],byte[],int)"
        ]
    },
    "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi:void engineLoad(java.io.InputStream,char[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi:void engineStore(java.io.OutputStream,char[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:byte[] engineDoFinal()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.kems.ECIESKeyEncapsulation:org.bouncycastle.crypto.CipherParameters encrypt(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.kems.ECIESKeyEncapsulation:org.bouncycastle.crypto.CipherParameters encrypt(byte[],int)"
        ]
    },
    "org.bouncycastle.crypto.kems.ECIESKeyEncapsulation:org.bouncycastle.crypto.CipherParameters decrypt(byte[],int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.kems.ECIESKeyEncapsulation:org.bouncycastle.crypto.CipherParameters decrypt(byte[],int)"
        ]
    },
    "org.bouncycastle.crypto.kems.RSAKeyEncapsulation:org.bouncycastle.crypto.CipherParameters encrypt(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.kems.RSAKeyEncapsulation:org.bouncycastle.crypto.CipherParameters encrypt(byte[],int)"
        ]
    },
    "org.bouncycastle.crypto.kems.RSAKeyEncapsulation:org.bouncycastle.crypto.CipherParameters decrypt(byte[],int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.kems.RSAKeyEncapsulation:org.bouncycastle.crypto.CipherParameters decrypt(byte[],int)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi:javax.crypto.SecretKey engineGenerateSecret(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator:org.bouncycastle.crypto.CipherParameters generateDerivedParameters(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator:org.bouncycastle.crypto.CipherParameters generateDerivedMacParameters(int)",
            "org.bouncycastle.jcajce.provider.symmetric.util.PBE$Util:org.bouncycastle.crypto.CipherParameters makePBEParameters(org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey,java.security.spec.AlgorithmParameterSpec,java.lang.String)",
            "org.bouncycastle.jcajce.provider.symmetric.util.PBE$Util:org.bouncycastle.crypto.CipherParameters makePBEParameters(javax.crypto.spec.PBEKeySpec,int,int,int,int)",
            "org.bouncycastle.jce.provider.BrokenPBE$Util:org.bouncycastle.crypto.CipherParameters makePBEParameters(org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey,java.security.spec.AlgorithmParameterSpec,int,int,java.lang.String,int,int)"
        ]
    },
    "org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator:org.bouncycastle.crypto.CipherParameters generateDerivedParameters(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.symmetric.util.PBE$Util:org.bouncycastle.crypto.CipherParameters makePBEParameters(org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey,java.security.spec.AlgorithmParameterSpec,java.lang.String)",
            "org.bouncycastle.jcajce.provider.symmetric.util.PBE$Util:org.bouncycastle.crypto.CipherParameters makePBEParameters(javax.crypto.spec.PBEKeySpec,int,int,int,int)",
            "org.bouncycastle.jce.provider.BrokenPBE$Util:org.bouncycastle.crypto.CipherParameters makePBEParameters(org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey,java.security.spec.AlgorithmParameterSpec,int,int,java.lang.String,int,int)"
        ]
    },
    "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:void hmac_DRBG_Update(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:void <init>(org.bouncycastle.crypto.Mac,int,org.bouncycastle.crypto.prng.EntropySource,byte[],byte[])",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:int generate(byte[],byte[],boolean)",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:void reseed(byte[])"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsNullCipher:void <init>(org.bouncycastle.crypto.tls.TlsContext,org.bouncycastle.crypto.Digest,org.bouncycastle.crypto.Digest)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DefaultTlsCipherFactory:org.bouncycastle.crypto.tls.TlsNullCipher createNullCipher(org.bouncycastle.crypto.tls.TlsContext,int)"
        ]
    },
    "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher:int processByte(byte,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.io.CipherInputStream:int nextChunk()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.io.CipherInputStream:int read()",
            "org.bouncycastle.crypto.io.CipherInputStream:int read(byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.io.CipherOutputStream:void write(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1OutputStream:void write(byte[],int,int)",
            "org.bouncycastle.crypto.io.CipherOutputStream:void write(int)",
            "org.bouncycastle.crypto.io.CipherOutputStream:void write(byte[])",
            "org.bouncycastle.crypto.io.CipherOutputStream:void write(byte[],int,int)",
            "org.bouncycastle.crypto.io.CipherOutputStream:void close()",
            "org.bouncycastle.crypto.tls.CertificateURL$ListBuffer16:void encodeTo(java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.RecordStream:byte[] decodeAndVerify(short,java.io.InputStream,int)",
            "org.bouncycastle.crypto.tls.RecordStream:void writeRecord(short,byte[],int,int)",
            "org.bouncycastle.util.io.BufferingOutputStream:void write(byte[],int,int)",
            "org.bouncycastle.util.io.BufferingOutputStream:void flush()",
            "org.bouncycastle.util.io.Streams:void pipeAll(java.io.InputStream,java.io.OutputStream)",
            "org.bouncycastle.util.io.Streams:long pipeAllLimited(java.io.InputStream,long,java.io.OutputStream)",
            "org.bouncycastle.util.io.TeeInputStream:int read(byte[],int,int)",
            "org.bouncycastle.util.io.TeeOutputStream:void write(byte[],int,int)"
        ]
    },
    "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher:int processBytes(byte[],int,int,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:byte[] engineUpdate(byte[],int,int)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:int engineUpdate(byte[],int,int,byte[],int)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:byte[] engineDoFinal(byte[],int,int)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:int engineDoFinal(byte[],int,int,byte[],int)"
        ]
    },
    "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:byte[] engineUpdate(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:int engineUpdate(byte[],int,int,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:byte[] engineDoFinal(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:java.security.Key engineUnwrap(byte[],java.lang.String,int)"
        ]
    },
    "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:int engineDoFinal(byte[],int,int,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.io.CipherInputStream:void finaliseCipher()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.io.CipherInputStream:int nextChunk()",
            "org.bouncycastle.crypto.io.CipherInputStream:void close()"
        ]
    },
    "org.bouncycastle.crypto.io.CipherOutputStream:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void close()",
            "org.bouncycastle.asn1.ASN1OutputStream:void close()",
            "org.bouncycastle.crypto.io.CipherOutputStream:void close()",
            "org.bouncycastle.crypto.tls.RecordStream:void safeClose()",
            "org.bouncycastle.jcajce.io.CipherOutputStream:void close()",
            "org.bouncycastle.util.io.BufferingOutputStream:void close()",
            "org.bouncycastle.util.io.TeeInputStream:void close()",
            "org.bouncycastle.util.io.TeeOutputStream:void close()"
        ]
    },
    "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$BufferedGenericBlockCipher:int doFinal(byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:byte[] engineDoFinal(byte[],int,int)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:int engineDoFinal(byte[],int,int,byte[],int)"
        ]
    },
    "org.bouncycastle.crypto.io.CipherOutputStream:void write(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void <init>(java.io.OutputStream,int)",
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void bsFinishedWithStream()",
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void bsW(int,int)",
            "org.bouncycastle.asn1.ASN1OutputStream:void write(int)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeNull()",
            "org.bouncycastle.asn1.BERGenerator:void writeHdr(int)",
            "org.bouncycastle.asn1.BERGenerator:void writeBERBody(java.io.InputStream)",
            "org.bouncycastle.asn1.BERGenerator:void writeBEREnd()",
            "org.bouncycastle.asn1.DERGenerator:void writeLength(java.io.OutputStream,int)",
            "org.bouncycastle.asn1.DERGenerator:void writeDEREncoded(java.io.OutputStream,int,byte[])",
            "org.bouncycastle.crypto.io.CipherOutputStream:void write(int)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint8(short,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint8(int,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint16(int,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint24(int,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint32(long,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint48(long,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint64(long,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeVersion(org.bouncycastle.crypto.tls.ProtocolVersion,java.io.OutputStream)",
            "org.bouncycastle.util.Strings:void toUTF8ByteArray(char[],java.io.OutputStream)",
            "org.bouncycastle.util.encoders.Base64Encoder:int encode(byte[],int,int,java.io.OutputStream)",
            "org.bouncycastle.util.encoders.Base64Encoder:int decode(byte[],int,int,java.io.OutputStream)",
            "org.bouncycastle.util.encoders.Base64Encoder:int decode(java.lang.String,java.io.OutputStream)",
            "org.bouncycastle.util.encoders.Base64Encoder:int decodeLastBlock(java.io.OutputStream,char,char,char,char)",
            "org.bouncycastle.util.encoders.HexEncoder:int encode(byte[],int,int,java.io.OutputStream)",
            "org.bouncycastle.util.encoders.HexEncoder:int decode(byte[],int,int,java.io.OutputStream)",
            "org.bouncycastle.util.encoders.HexEncoder:int decode(java.lang.String,java.io.OutputStream)",
            "org.bouncycastle.util.io.TeeInputStream:int read()",
            "org.bouncycastle.util.io.TeeOutputStream:void write(int)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsStreamCipher:byte[] encodePlaintext(long,short,byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSRecordLayer:void sendRecord(short,byte[],int,int)",
            "org.bouncycastle.crypto.tls.RecordStream:void writeRecord(short,byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsStreamCipher:byte[] decodeCiphertext(long,short,byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSRecordLayer:int receive(byte[],int,int,int)",
            "org.bouncycastle.crypto.tls.RecordStream:byte[] decodeAndVerify(short,java.io.InputStream,int)"
        ]
    },
    "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:byte[] engineUpdate(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:byte[] engineDoFinal(byte[],int,int)"
        ]
    },
    "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:int engineUpdate(byte[],int,int,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:int engineDoFinal(byte[],int,int,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.provider.JCEStreamCipher:byte[] engineUpdate(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.JCEStreamCipher:byte[] engineDoFinal(byte[],int,int)"
        ]
    },
    "org.bouncycastle.jce.provider.JCEStreamCipher:int engineUpdate(byte[],int,int,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.provider.JCEStreamCipher:int engineDoFinal(byte[],int,int,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.io.MacInputStream:int read()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2InputStream:int bsR(int)",
            "org.bouncycastle.apache.bzip2.CBZip2InputStream:void getAndMoveToFrontDecode()",
            "org.bouncycastle.asn1.ASN1InputStream:int readTagNumber(java.io.InputStream,int)",
            "org.bouncycastle.asn1.ASN1InputStream:int readLength(java.io.InputStream,int)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1Encodable readObject()",
            "org.bouncycastle.asn1.BERGenerator:void writeBERBody(java.io.InputStream)",
            "org.bouncycastle.asn1.ConstructedOctetStream:int read()",
            "org.bouncycastle.asn1.DERBitString:org.bouncycastle.asn1.DERBitString fromInputStream(int,java.io.InputStream)",
            "org.bouncycastle.asn1.DefiniteLengthInputStream:int read()",
            "org.bouncycastle.asn1.IndefiniteLengthInputStream:void <init>(java.io.InputStream,int)",
            "org.bouncycastle.asn1.IndefiniteLengthInputStream:int read(byte[],int,int)",
            "org.bouncycastle.asn1.IndefiniteLengthInputStream:int read()",
            "org.bouncycastle.crypto.io.DigestInputStream:int read()",
            "org.bouncycastle.crypto.io.MacInputStream:int read()",
            "org.bouncycastle.crypto.io.SignerInputStream:int read()",
            "org.bouncycastle.crypto.parsers.ECIESPublicKeyParser:org.bouncycastle.crypto.params.AsymmetricKeyParameter readKey(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:short readUint8(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:int readUint16(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:int readUint24(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:long readUint32(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:long readUint48(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:org.bouncycastle.crypto.tls.ProtocolVersion readVersion(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:int readVersionRaw(java.io.InputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PEMUtil:java.lang.String readLine(java.io.InputStream)",
            "org.bouncycastle.jce.provider.PEMUtil:java.lang.String readLine(java.io.InputStream)",
            "org.bouncycastle.jce.provider.X509AttrCertParser:java.lang.Object engineRead()",
            "org.bouncycastle.jce.provider.X509CRLParser:java.lang.Object engineRead()",
            "org.bouncycastle.jce.provider.X509CertPairParser:java.lang.Object engineRead()",
            "org.bouncycastle.jce.provider.X509CertParser:java.lang.Object engineRead()",
            "org.bouncycastle.util.io.TeeInputStream:int read()"
        ]
    },
    "org.bouncycastle.crypto.io.MacOutputStream:void write(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void <init>(java.io.OutputStream,int)",
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void bsFinishedWithStream()",
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void bsW(int,int)",
            "org.bouncycastle.asn1.ASN1OutputStream:void write(int)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeNull()",
            "org.bouncycastle.asn1.BERGenerator:void writeHdr(int)",
            "org.bouncycastle.asn1.BERGenerator:void writeBERBody(java.io.InputStream)",
            "org.bouncycastle.asn1.BERGenerator:void writeBEREnd()",
            "org.bouncycastle.asn1.DERGenerator:void writeLength(java.io.OutputStream,int)",
            "org.bouncycastle.asn1.DERGenerator:void writeDEREncoded(java.io.OutputStream,int,byte[])",
            "org.bouncycastle.crypto.io.CipherOutputStream:void write(int)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint8(short,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint8(int,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint16(int,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint24(int,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint32(long,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint48(long,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint64(long,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeVersion(org.bouncycastle.crypto.tls.ProtocolVersion,java.io.OutputStream)",
            "org.bouncycastle.util.Strings:void toUTF8ByteArray(char[],java.io.OutputStream)",
            "org.bouncycastle.util.encoders.Base64Encoder:int encode(byte[],int,int,java.io.OutputStream)",
            "org.bouncycastle.util.encoders.Base64Encoder:int decode(byte[],int,int,java.io.OutputStream)",
            "org.bouncycastle.util.encoders.Base64Encoder:int decode(java.lang.String,java.io.OutputStream)",
            "org.bouncycastle.util.encoders.Base64Encoder:int decodeLastBlock(java.io.OutputStream,char,char,char,char)",
            "org.bouncycastle.util.encoders.HexEncoder:int encode(byte[],int,int,java.io.OutputStream)",
            "org.bouncycastle.util.encoders.HexEncoder:int decode(byte[],int,int,java.io.OutputStream)",
            "org.bouncycastle.util.encoders.HexEncoder:int decode(java.lang.String,java.io.OutputStream)",
            "org.bouncycastle.util.io.TeeInputStream:int read()",
            "org.bouncycastle.util.io.TeeOutputStream:void write(int)"
        ]
    },
    "org.bouncycastle.crypto.modes.EAXBlockCipher:void processAADByte(byte)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.tls.TlsMac:byte[] calculateMacConstantTime(long,short,byte[],int,int,int,byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsBlockCipher:byte[] decodeCiphertext(long,short,byte[],int,int)"
        ]
    },
    "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineUpdate(byte)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:void updateMac(org.bouncycastle.crypto.Mac,java.math.BigInteger)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:java.math.BigInteger calculateMacTag(java.lang.String,java.lang.String,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,org.bouncycastle.crypto.Digest)"
        ]
    },
    "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:void updateMac(org.bouncycastle.crypto.Mac,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:java.math.BigInteger calculateMacTag(java.lang.String,java.lang.String,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,org.bouncycastle.crypto.Digest)"
        ]
    },
    "org.bouncycastle.crypto.io.MacInputStream:int read(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ConstructedOctetStream:int read(byte[],int,int)",
            "org.bouncycastle.asn1.DefiniteLengthInputStream:int read(byte[],int,int)",
            "org.bouncycastle.asn1.IndefiniteLengthInputStream:int read(byte[],int,int)",
            "org.bouncycastle.crypto.io.DigestInputStream:int read(byte[],int,int)",
            "org.bouncycastle.crypto.io.MacInputStream:int read(byte[],int,int)",
            "org.bouncycastle.crypto.io.SignerInputStream:int read(byte[],int,int)",
            "org.bouncycastle.crypto.parsers.DHIESPublicKeyParser:org.bouncycastle.crypto.params.AsymmetricKeyParameter readKey(java.io.InputStream)",
            "org.bouncycastle.crypto.parsers.ECIESPublicKeyParser:org.bouncycastle.crypto.params.AsymmetricKeyParameter readKey(java.io.InputStream)",
            "org.bouncycastle.util.io.Streams:void drain(java.io.InputStream)",
            "org.bouncycastle.util.io.Streams:int readFully(java.io.InputStream,byte[],int,int)",
            "org.bouncycastle.util.io.Streams:void pipeAll(java.io.InputStream,java.io.OutputStream)",
            "org.bouncycastle.util.io.Streams:long pipeAllLimited(java.io.InputStream,long,java.io.OutputStream)",
            "org.bouncycastle.util.io.TeeInputStream:int read(byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.io.MacOutputStream:void write(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1OutputStream:void write(byte[],int,int)",
            "org.bouncycastle.crypto.io.CipherOutputStream:void write(byte[],int,int)",
            "org.bouncycastle.crypto.io.CipherOutputStream:void close()",
            "org.bouncycastle.crypto.tls.CertificateURL$ListBuffer16:void encodeTo(java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.RecordStream:byte[] decodeAndVerify(short,java.io.InputStream,int)",
            "org.bouncycastle.crypto.tls.RecordStream:void writeRecord(short,byte[],int,int)",
            "org.bouncycastle.util.io.BufferingOutputStream:void write(byte[],int,int)",
            "org.bouncycastle.util.io.BufferingOutputStream:void flush()",
            "org.bouncycastle.util.io.Streams:void pipeAll(java.io.InputStream,java.io.OutputStream)",
            "org.bouncycastle.util.io.Streams:long pipeAllLimited(java.io.InputStream,long,java.io.OutputStream)",
            "org.bouncycastle.util.io.TeeInputStream:int read(byte[],int,int)",
            "org.bouncycastle.util.io.TeeOutputStream:void write(byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.modes.EAXBlockCipher:void reset(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void reset()",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:int doFinal(byte[],int)"
        ]
    },
    "org.bouncycastle.crypto.modes.EAXBlockCipher:void processAADBytes(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void reset(boolean)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$AEADGenericBlockCipher:void updateAAD(byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.modes.EAXBlockCipher:int doFinal(byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.io.CipherInputStream:void finaliseCipher()",
            "org.bouncycastle.crypto.io.CipherOutputStream:void close()",
            "org.bouncycastle.crypto.tls.TlsAEADCipher:byte[] encodePlaintext(long,short,byte[],int,int)",
            "org.bouncycastle.crypto.tls.TlsAEADCipher:byte[] decodeCiphertext(long,short,byte[],int,int)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$AEADGenericBlockCipher:int doFinal(byte[],int)"
        ]
    },
    "org.bouncycastle.crypto.modes.EAXBlockCipher:int process(byte,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.modes.EAXBlockCipher:int processByte(byte,byte[],int)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:int processBytes(byte[],int,int,byte[],int)"
        ]
    },
    "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineUpdate(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.macs.CFBBlockCipherMac:void update(byte)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.io.MacInputStream:int read()",
            "org.bouncycastle.crypto.io.MacOutputStream:void write(int)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void processAADByte(byte)",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:void hmac_DRBG_Update_Func(byte[],byte)",
            "org.bouncycastle.crypto.tls.TlsMac:byte[] calculateMacConstantTime(long,short,byte[],int,int,int,byte[])",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineUpdate(byte)"
        ]
    },
    "org.bouncycastle.crypto.macs.CFBBlockCipherMac:void update(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:void updateMac(org.bouncycastle.crypto.Mac,java.math.BigInteger)",
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:void updateMac(org.bouncycastle.crypto.Mac,java.lang.String)",
            "org.bouncycastle.crypto.engines.IESEngine:byte[] encryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.engines.IESEngine:byte[] decryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.generators.KDFCounterBytesGenerator:void generateNext()",
            "org.bouncycastle.crypto.generators.KDFDoublePipelineIterationBytesGenerator:void generateNext()",
            "org.bouncycastle.crypto.generators.KDFFeedbackBytesGenerator:void generateNext()",
            "org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator:void F(byte[],int,byte[],byte[],int)",
            "org.bouncycastle.crypto.io.MacInputStream:int read(byte[],int,int)",
            "org.bouncycastle.crypto.io.MacOutputStream:void write(byte[],int,int)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void initCipher()",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void reset(boolean)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void processAADBytes(byte[],int,int)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:int process(byte,byte[],int)",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:void hmac_DRBG_Update_Func(byte[],byte)",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:int generate(byte[],byte[],boolean)",
            "org.bouncycastle.crypto.tls.TlsMac:byte[] calculateMac(long,short,byte[],int,int)",
            "org.bouncycastle.crypto.tls.TlsMac:byte[] calculateMacConstantTime(long,short,byte[],int,int,int,byte[])",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineUpdate(byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.macs.CFBBlockCipherMac:int doFinal(byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.engines.IESEngine:byte[] encryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.engines.IESEngine:byte[] decryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.generators.KDFCounterBytesGenerator:void generateNext()",
            "org.bouncycastle.crypto.generators.KDFDoublePipelineIterationBytesGenerator:void generateNext()",
            "org.bouncycastle.crypto.generators.KDFFeedbackBytesGenerator:void generateNext()",
            "org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator:void F(byte[],int,byte[],byte[],int)",
            "org.bouncycastle.crypto.io.MacOutputStream:byte[] getMac()",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void initCipher()",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void calculateMac()",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:void hmac_DRBG_Update_Func(byte[],byte)",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:int generate(byte[],byte[],boolean)",
            "org.bouncycastle.crypto.tls.TlsMac:byte[] calculateMac(long,short,byte[],int,int)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:byte[] engineDoFinal()"
        ]
    },
    "org.bouncycastle.crypto.modes.CBCBlockCipher:int processBlock(byte[],int,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.BufferedBlockCipher:int processByte(byte,byte[],int)",
            "org.bouncycastle.crypto.BufferedBlockCipher:int processBytes(byte[],int,int,byte[],int)",
            "org.bouncycastle.crypto.BufferedBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.StreamBlockCipher:byte returnByte(byte)",
            "org.bouncycastle.crypto.StreamBlockCipher:void processBytes(byte[],int,int,byte[],int)",
            "org.bouncycastle.crypto.digests.GOST3411Digest:void E(byte[],byte[],int,byte[],int)",
            "org.bouncycastle.crypto.engines.DESedeWrapEngine:byte[] wrap(byte[],int,int)",
            "org.bouncycastle.crypto.engines.DESedeWrapEngine:byte[] unwrap(byte[],int,int)",
            "org.bouncycastle.crypto.engines.RC2WrapEngine:byte[] wrap(byte[],int,int)",
            "org.bouncycastle.crypto.engines.RC2WrapEngine:byte[] unwrap(byte[],int,int)",
            "org.bouncycastle.crypto.engines.RFC3211WrapEngine:byte[] wrap(byte[],int,int)",
            "org.bouncycastle.crypto.engines.RFC3211WrapEngine:byte[] unwrap(byte[],int,int)",
            "org.bouncycastle.crypto.engines.RFC3394WrapEngine:byte[] wrap(byte[],int,int)",
            "org.bouncycastle.crypto.engines.RFC3394WrapEngine:byte[] unwrap(byte[],int,int)",
            "org.bouncycastle.crypto.macs.BlockCipherMac:void update(byte)",
            "org.bouncycastle.crypto.macs.BlockCipherMac:void update(byte[],int,int)",
            "org.bouncycastle.crypto.macs.BlockCipherMac:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.macs.CBCBlockCipherMac:void update(byte)",
            "org.bouncycastle.crypto.macs.CBCBlockCipherMac:void update(byte[],int,int)",
            "org.bouncycastle.crypto.macs.CBCBlockCipherMac:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.macs.CMac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.CMac:void update(byte)",
            "org.bouncycastle.crypto.macs.CMac:void update(byte[],int,int)",
            "org.bouncycastle.crypto.macs.CMac:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.macs.ISO9797Alg3Mac:void update(byte)",
            "org.bouncycastle.crypto.macs.ISO9797Alg3Mac:void update(byte[],int,int)",
            "org.bouncycastle.crypto.macs.ISO9797Alg3Mac:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.macs.MacCFBBlockCipher:int processBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.macs.MacCFBBlockCipher:void getMacBlock(byte[])",
            "org.bouncycastle.crypto.macs.Poly1305:void setKey(byte[],byte[])",
            "org.bouncycastle.crypto.modes.CBCBlockCipher:int encryptBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.CBCBlockCipher:int decryptBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.CFBBlockCipher:int encryptBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.CFBBlockCipher:int decryptBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.CTSBlockCipher:int processByte(byte,byte[],int)",
            "org.bouncycastle.crypto.modes.CTSBlockCipher:int processBytes(byte[],int,int,byte[],int)",
            "org.bouncycastle.crypto.modes.CTSBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.modes.GCFBBlockCipher:int processBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.GCMBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.GCMBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.modes.GCMBlockCipher:byte[] getNextCounterBlock()",
            "org.bouncycastle.crypto.modes.GOFBBlockCipher:int processBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.OCBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.OCBBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.modes.OCBBlockCipher:void processMainBlock(byte[],int)",
            "org.bouncycastle.crypto.modes.OCBBlockCipher:void updateHASH(byte[])",
            "org.bouncycastle.crypto.modes.OFBBlockCipher:int processBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.OldCTSBlockCipher:int processByte(byte,byte[],int)",
            "org.bouncycastle.crypto.modes.OldCTSBlockCipher:int processBytes(byte[],int,int,byte[],int)",
            "org.bouncycastle.crypto.modes.OldCTSBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher:int encryptBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher:int decryptBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.PGPCFBBlockCipher:int encryptBlockWithIV(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.PGPCFBBlockCipher:int decryptBlockWithIV(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.PGPCFBBlockCipher:int encryptBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.PGPCFBBlockCipher:int decryptBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.PaddedBlockCipher:int processByte(byte,byte[],int)",
            "org.bouncycastle.crypto.modes.PaddedBlockCipher:int processBytes(byte[],int,int,byte[],int)",
            "org.bouncycastle.crypto.modes.PaddedBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.modes.SICBlockCipher:int processBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher:int processByte(byte,byte[],int)",
            "org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher:int processBytes(byte[],int,int,byte[],int)",
            "org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:void CTR_DRBG_Update(byte[],byte[],byte[])",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:byte[] Block_Cipher_df(byte[],int)",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:void BCC(byte[],byte[],byte[],byte[])",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:int generate(byte[],byte[],boolean)",
            "org.bouncycastle.crypto.tls.TlsBlockCipher:byte[] encodePlaintext(long,short,byte[],int,int)",
            "org.bouncycastle.crypto.tls.TlsBlockCipher:byte[] decodeCiphertext(long,short,byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.modes.CFBBlockCipher:int processBlock(byte[],int,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.BufferedBlockCipher:int processByte(byte,byte[],int)",
            "org.bouncycastle.crypto.BufferedBlockCipher:int processBytes(byte[],int,int,byte[],int)",
            "org.bouncycastle.crypto.BufferedBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.StreamBlockCipher:byte returnByte(byte)",
            "org.bouncycastle.crypto.StreamBlockCipher:void processBytes(byte[],int,int,byte[],int)",
            "org.bouncycastle.crypto.digests.GOST3411Digest:void E(byte[],byte[],int,byte[],int)",
            "org.bouncycastle.crypto.engines.RFC3394WrapEngine:byte[] wrap(byte[],int,int)",
            "org.bouncycastle.crypto.engines.RFC3394WrapEngine:byte[] unwrap(byte[],int,int)",
            "org.bouncycastle.crypto.macs.BlockCipherMac:void update(byte)",
            "org.bouncycastle.crypto.macs.BlockCipherMac:void update(byte[],int,int)",
            "org.bouncycastle.crypto.macs.BlockCipherMac:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.macs.CBCBlockCipherMac:void update(byte)",
            "org.bouncycastle.crypto.macs.CBCBlockCipherMac:void update(byte[],int,int)",
            "org.bouncycastle.crypto.macs.CBCBlockCipherMac:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.macs.CMac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.CMac:void update(byte)",
            "org.bouncycastle.crypto.macs.CMac:void update(byte[],int,int)",
            "org.bouncycastle.crypto.macs.CMac:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.macs.ISO9797Alg3Mac:void update(byte)",
            "org.bouncycastle.crypto.macs.ISO9797Alg3Mac:void update(byte[],int,int)",
            "org.bouncycastle.crypto.macs.ISO9797Alg3Mac:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.macs.MacCFBBlockCipher:int processBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.macs.MacCFBBlockCipher:void getMacBlock(byte[])",
            "org.bouncycastle.crypto.macs.Poly1305:void setKey(byte[],byte[])",
            "org.bouncycastle.crypto.modes.CBCBlockCipher:int encryptBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.CBCBlockCipher:int decryptBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.CFBBlockCipher:int encryptBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.CFBBlockCipher:int decryptBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.CTSBlockCipher:int processByte(byte,byte[],int)",
            "org.bouncycastle.crypto.modes.CTSBlockCipher:int processBytes(byte[],int,int,byte[],int)",
            "org.bouncycastle.crypto.modes.CTSBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.modes.GCFBBlockCipher:int processBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.GCMBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.GCMBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.modes.GCMBlockCipher:byte[] getNextCounterBlock()",
            "org.bouncycastle.crypto.modes.GOFBBlockCipher:int processBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.OCBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.OCBBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.modes.OCBBlockCipher:void processMainBlock(byte[],int)",
            "org.bouncycastle.crypto.modes.OCBBlockCipher:void updateHASH(byte[])",
            "org.bouncycastle.crypto.modes.OFBBlockCipher:int processBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.OldCTSBlockCipher:int processByte(byte,byte[],int)",
            "org.bouncycastle.crypto.modes.OldCTSBlockCipher:int processBytes(byte[],int,int,byte[],int)",
            "org.bouncycastle.crypto.modes.OldCTSBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher:int encryptBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher:int decryptBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.PGPCFBBlockCipher:int encryptBlockWithIV(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.PGPCFBBlockCipher:int decryptBlockWithIV(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.PGPCFBBlockCipher:int encryptBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.PGPCFBBlockCipher:int decryptBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.PaddedBlockCipher:int processByte(byte,byte[],int)",
            "org.bouncycastle.crypto.modes.PaddedBlockCipher:int processBytes(byte[],int,int,byte[],int)",
            "org.bouncycastle.crypto.modes.PaddedBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.modes.SICBlockCipher:int processBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher:int processByte(byte,byte[],int)",
            "org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher:int processBytes(byte[],int,int,byte[],int)",
            "org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:void CTR_DRBG_Update(byte[],byte[],byte[])",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:byte[] Block_Cipher_df(byte[],int)",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:void BCC(byte[],byte[],byte[],byte[])",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:int generate(byte[],byte[],boolean)",
            "org.bouncycastle.crypto.tls.TlsBlockCipher:byte[] encodePlaintext(long,short,byte[],int,int)",
            "org.bouncycastle.crypto.tls.TlsBlockCipher:byte[] decodeCiphertext(long,short,byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.macs.GMac:int doFinal(byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.engines.IESEngine:byte[] encryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.engines.IESEngine:byte[] decryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.generators.KDFCounterBytesGenerator:void generateNext()",
            "org.bouncycastle.crypto.generators.KDFDoublePipelineIterationBytesGenerator:void generateNext()",
            "org.bouncycastle.crypto.generators.KDFFeedbackBytesGenerator:void generateNext()",
            "org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator:void F(byte[],int,byte[],byte[],int)",
            "org.bouncycastle.crypto.io.MacOutputStream:byte[] getMac()",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void initCipher()",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void calculateMac()",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:void hmac_DRBG_Update_Func(byte[],byte)",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:int generate(byte[],byte[],boolean)",
            "org.bouncycastle.crypto.tls.TlsMac:byte[] calculateMac(long,short,byte[],int,int)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:byte[] engineDoFinal()"
        ]
    },
    "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$AEADGenericBlockCipher:int doFinal(byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:byte[] engineDoFinal(byte[],int,int)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:int engineDoFinal(byte[],int,int,byte[],int)"
        ]
    },
    "org.bouncycastle.crypto.modes.GCMBlockCipher:void gCTRBlock(byte[],byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.modes.GCMBlockCipher:void outputBlock(byte[],int)"
        ]
    },
    "org.bouncycastle.crypto.modes.GCMBlockCipher:void gCTRPartial(byte[],int,int,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.modes.GCMBlockCipher:int doFinal(byte[],int)"
        ]
    },
    "org.bouncycastle.crypto.modes.OCBBlockCipher:int processByte(byte,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$AEADGenericBlockCipher:int processByte(byte,byte[],int)"
        ]
    },
    "org.bouncycastle.crypto.modes.OCBBlockCipher:int processBytes(byte[],int,int,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.io.CipherInputStream:int nextChunk()",
            "org.bouncycastle.crypto.io.CipherOutputStream:void write(byte[],int,int)",
            "org.bouncycastle.crypto.tls.TlsAEADCipher:byte[] encodePlaintext(long,short,byte[],int,int)",
            "org.bouncycastle.crypto.tls.TlsAEADCipher:byte[] decodeCiphertext(long,short,byte[],int,int)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$AEADGenericBlockCipher:int processBytes(byte[],int,int,byte[],int)"
        ]
    },
    "org.bouncycastle.crypto.modes.OCBBlockCipher:void processHashBlock()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.modes.OCBBlockCipher:void processAADByte(byte)",
            "org.bouncycastle.crypto.modes.OCBBlockCipher:void processAADBytes(byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher:int processBlock(byte[],int,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.BufferedBlockCipher:int processByte(byte,byte[],int)",
            "org.bouncycastle.crypto.BufferedBlockCipher:int processBytes(byte[],int,int,byte[],int)",
            "org.bouncycastle.crypto.BufferedBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.StreamBlockCipher:byte returnByte(byte)",
            "org.bouncycastle.crypto.StreamBlockCipher:void processBytes(byte[],int,int,byte[],int)",
            "org.bouncycastle.crypto.digests.GOST3411Digest:void E(byte[],byte[],int,byte[],int)",
            "org.bouncycastle.crypto.engines.RFC3394WrapEngine:byte[] wrap(byte[],int,int)",
            "org.bouncycastle.crypto.engines.RFC3394WrapEngine:byte[] unwrap(byte[],int,int)",
            "org.bouncycastle.crypto.macs.BlockCipherMac:void update(byte)",
            "org.bouncycastle.crypto.macs.BlockCipherMac:void update(byte[],int,int)",
            "org.bouncycastle.crypto.macs.BlockCipherMac:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.macs.CBCBlockCipherMac:void update(byte)",
            "org.bouncycastle.crypto.macs.CBCBlockCipherMac:void update(byte[],int,int)",
            "org.bouncycastle.crypto.macs.CBCBlockCipherMac:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.macs.CMac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.CMac:void update(byte)",
            "org.bouncycastle.crypto.macs.CMac:void update(byte[],int,int)",
            "org.bouncycastle.crypto.macs.CMac:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.macs.ISO9797Alg3Mac:void update(byte)",
            "org.bouncycastle.crypto.macs.ISO9797Alg3Mac:void update(byte[],int,int)",
            "org.bouncycastle.crypto.macs.ISO9797Alg3Mac:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.macs.MacCFBBlockCipher:int processBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.macs.MacCFBBlockCipher:void getMacBlock(byte[])",
            "org.bouncycastle.crypto.macs.Poly1305:void setKey(byte[],byte[])",
            "org.bouncycastle.crypto.modes.CBCBlockCipher:int encryptBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.CBCBlockCipher:int decryptBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.CFBBlockCipher:int encryptBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.CFBBlockCipher:int decryptBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.CTSBlockCipher:int processByte(byte,byte[],int)",
            "org.bouncycastle.crypto.modes.CTSBlockCipher:int processBytes(byte[],int,int,byte[],int)",
            "org.bouncycastle.crypto.modes.CTSBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.modes.GCFBBlockCipher:int processBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.GCMBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.GCMBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.modes.GCMBlockCipher:byte[] getNextCounterBlock()",
            "org.bouncycastle.crypto.modes.GOFBBlockCipher:int processBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.OCBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.OCBBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.modes.OCBBlockCipher:void processMainBlock(byte[],int)",
            "org.bouncycastle.crypto.modes.OCBBlockCipher:void updateHASH(byte[])",
            "org.bouncycastle.crypto.modes.OFBBlockCipher:int processBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.OldCTSBlockCipher:int processByte(byte,byte[],int)",
            "org.bouncycastle.crypto.modes.OldCTSBlockCipher:int processBytes(byte[],int,int,byte[],int)",
            "org.bouncycastle.crypto.modes.OldCTSBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher:int encryptBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher:int decryptBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.PGPCFBBlockCipher:int encryptBlockWithIV(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.PGPCFBBlockCipher:int decryptBlockWithIV(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.PGPCFBBlockCipher:int encryptBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.PGPCFBBlockCipher:int decryptBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.PaddedBlockCipher:int processByte(byte,byte[],int)",
            "org.bouncycastle.crypto.modes.PaddedBlockCipher:int processBytes(byte[],int,int,byte[],int)",
            "org.bouncycastle.crypto.modes.PaddedBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.modes.SICBlockCipher:int processBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher:int processByte(byte,byte[],int)",
            "org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher:int processBytes(byte[],int,int,byte[],int)",
            "org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:void CTR_DRBG_Update(byte[],byte[],byte[])",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:byte[] Block_Cipher_df(byte[],int)",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:void BCC(byte[],byte[],byte[],byte[])",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:int generate(byte[],byte[],boolean)",
            "org.bouncycastle.crypto.tls.TlsBlockCipher:byte[] encodePlaintext(long,short,byte[],int,int)",
            "org.bouncycastle.crypto.tls.TlsBlockCipher:byte[] decodeCiphertext(long,short,byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.modes.PGPCFBBlockCipher:int processBlock(byte[],int,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.BufferedBlockCipher:int processByte(byte,byte[],int)",
            "org.bouncycastle.crypto.BufferedBlockCipher:int processBytes(byte[],int,int,byte[],int)",
            "org.bouncycastle.crypto.BufferedBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.StreamBlockCipher:byte returnByte(byte)",
            "org.bouncycastle.crypto.StreamBlockCipher:void processBytes(byte[],int,int,byte[],int)",
            "org.bouncycastle.crypto.digests.GOST3411Digest:void E(byte[],byte[],int,byte[],int)",
            "org.bouncycastle.crypto.engines.RFC3394WrapEngine:byte[] wrap(byte[],int,int)",
            "org.bouncycastle.crypto.engines.RFC3394WrapEngine:byte[] unwrap(byte[],int,int)",
            "org.bouncycastle.crypto.macs.BlockCipherMac:void update(byte)",
            "org.bouncycastle.crypto.macs.BlockCipherMac:void update(byte[],int,int)",
            "org.bouncycastle.crypto.macs.BlockCipherMac:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.macs.CBCBlockCipherMac:void update(byte)",
            "org.bouncycastle.crypto.macs.CBCBlockCipherMac:void update(byte[],int,int)",
            "org.bouncycastle.crypto.macs.CBCBlockCipherMac:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.macs.CMac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.CMac:void update(byte)",
            "org.bouncycastle.crypto.macs.CMac:void update(byte[],int,int)",
            "org.bouncycastle.crypto.macs.CMac:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.macs.ISO9797Alg3Mac:void update(byte)",
            "org.bouncycastle.crypto.macs.ISO9797Alg3Mac:void update(byte[],int,int)",
            "org.bouncycastle.crypto.macs.ISO9797Alg3Mac:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.macs.MacCFBBlockCipher:int processBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.macs.MacCFBBlockCipher:void getMacBlock(byte[])",
            "org.bouncycastle.crypto.macs.Poly1305:void setKey(byte[],byte[])",
            "org.bouncycastle.crypto.modes.CBCBlockCipher:int encryptBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.CBCBlockCipher:int decryptBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.CFBBlockCipher:int encryptBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.CFBBlockCipher:int decryptBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.CTSBlockCipher:int processByte(byte,byte[],int)",
            "org.bouncycastle.crypto.modes.CTSBlockCipher:int processBytes(byte[],int,int,byte[],int)",
            "org.bouncycastle.crypto.modes.CTSBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.modes.GCFBBlockCipher:int processBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.GCMBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.GCMBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.modes.GCMBlockCipher:byte[] getNextCounterBlock()",
            "org.bouncycastle.crypto.modes.GOFBBlockCipher:int processBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.OCBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.OCBBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.modes.OCBBlockCipher:void processMainBlock(byte[],int)",
            "org.bouncycastle.crypto.modes.OCBBlockCipher:void updateHASH(byte[])",
            "org.bouncycastle.crypto.modes.OFBBlockCipher:int processBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.OldCTSBlockCipher:int processByte(byte,byte[],int)",
            "org.bouncycastle.crypto.modes.OldCTSBlockCipher:int processBytes(byte[],int,int,byte[],int)",
            "org.bouncycastle.crypto.modes.OldCTSBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher:int encryptBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.OpenPGPCFBBlockCipher:int decryptBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.PGPCFBBlockCipher:int encryptBlockWithIV(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.PGPCFBBlockCipher:int decryptBlockWithIV(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.PGPCFBBlockCipher:int encryptBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.PGPCFBBlockCipher:int decryptBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.modes.PaddedBlockCipher:int processByte(byte,byte[],int)",
            "org.bouncycastle.crypto.modes.PaddedBlockCipher:int processBytes(byte[],int,int,byte[],int)",
            "org.bouncycastle.crypto.modes.PaddedBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.modes.SICBlockCipher:int processBlock(byte[],int,byte[],int)",
            "org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher:int processByte(byte,byte[],int)",
            "org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher:int processBytes(byte[],int,int,byte[],int)",
            "org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:void CTR_DRBG_Update(byte[],byte[],byte[])",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:byte[] Block_Cipher_df(byte[],int)",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:void BCC(byte[],byte[],byte[],byte[])",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:int generate(byte[],byte[],boolean)",
            "org.bouncycastle.crypto.tls.TlsBlockCipher:byte[] encodePlaintext(long,short,byte[],int,int)",
            "org.bouncycastle.crypto.tls.TlsBlockCipher:byte[] decodeCiphertext(long,short,byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.tls.DefaultTlsCipherFactory:org.bouncycastle.crypto.tls.TlsAEADCipher createCipher_AES_CCM(org.bouncycastle.crypto.tls.TlsContext,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DefaultTlsCipherFactory:org.bouncycastle.crypto.tls.TlsCipher createCipher(org.bouncycastle.crypto.tls.TlsContext,int,int)"
        ]
    },
    "org.bouncycastle.crypto.tls.DefaultTlsCipherFactory:org.bouncycastle.crypto.tls.TlsAEADCipher createCipher_AES_GCM(org.bouncycastle.crypto.tls.TlsContext,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DefaultTlsCipherFactory:org.bouncycastle.crypto.tls.TlsCipher createCipher(org.bouncycastle.crypto.tls.TlsContext,int,int)"
        ]
    },
    "org.bouncycastle.crypto.modes.CCMBlockCipher:int doFinal(byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.io.CipherInputStream:void finaliseCipher()",
            "org.bouncycastle.crypto.io.CipherOutputStream:void close()",
            "org.bouncycastle.crypto.tls.TlsAEADCipher:byte[] encodePlaintext(long,short,byte[],int,int)",
            "org.bouncycastle.crypto.tls.TlsAEADCipher:byte[] decodeCiphertext(long,short,byte[],int,int)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$AEADGenericBlockCipher:int doFinal(byte[],int)"
        ]
    },
    "org.bouncycastle.crypto.modes.CCMBlockCipher:byte[] processPacket(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.examples.DESExample:void process()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.examples.DESExample:void main(java.lang.String[])"
        ]
    },
    "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:void <init>(org.bouncycastle.crypto.BlockCipher,int,int,org.bouncycastle.crypto.prng.EntropySource,byte[],byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.prng.SP800SecureRandomBuilder$CTRDRBGProvider:org.bouncycastle.crypto.prng.drbg.SP80090DRBG get(org.bouncycastle.crypto.prng.EntropySource)"
        ]
    },
    "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:void reseed(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.prng.SP800SecureRandom:void nextBytes(byte[])"
        ]
    },
    "org.bouncycastle.crypto.CipherKeyGenerator:byte[] generateKey()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.generators.Poly1305KeyGenerator:byte[] generateKey()",
            "org.bouncycastle.jcajce.provider.symmetric.DES$KeyGenerator:javax.crypto.SecretKey engineGenerateKey()",
            "org.bouncycastle.jcajce.provider.symmetric.DESede$KeyGenerator:javax.crypto.SecretKey engineGenerateKey()",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseKeyGenerator:javax.crypto.SecretKey engineGenerateKey()"
        ]
    },
    "org.bouncycastle.crypto.commitments.GeneralHashCommitter:org.bouncycastle.crypto.Commitment commit(byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.commitments.HashCommitter:org.bouncycastle.crypto.Commitment commit(byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.encodings.OAEPEncoding:byte[] encodeBlock(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.encodings.OAEPEncoding:byte[] processBlock(byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.encodings.PKCS1Encoding:byte[] encodeBlock(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.encodings.PKCS1Encoding:byte[] processBlock(byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.engines.DESedeWrapEngine:void init(boolean,org.bouncycastle.crypto.CipherParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)"
        ]
    },
    "org.bouncycastle.crypto.engines.RC2WrapEngine:void init(boolean,org.bouncycastle.crypto.CipherParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)"
        ]
    },
    "org.bouncycastle.crypto.generators.DESKeyGenerator:byte[] generateKey()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.symmetric.DES$KeyGenerator:javax.crypto.SecretKey engineGenerateKey()",
            "org.bouncycastle.jcajce.provider.symmetric.DESede$KeyGenerator:javax.crypto.SecretKey engineGenerateKey()",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseKeyGenerator:javax.crypto.SecretKey engineGenerateKey()"
        ]
    },
    "org.bouncycastle.crypto.generators.DESedeKeyGenerator:byte[] generateKey()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.examples.DESExample:void <init>(java.lang.String,java.lang.String,java.lang.String,boolean)",
            "org.bouncycastle.jcajce.provider.symmetric.DES$KeyGenerator:javax.crypto.SecretKey engineGenerateKey()",
            "org.bouncycastle.jcajce.provider.symmetric.DESede$KeyGenerator:javax.crypto.SecretKey engineGenerateKey()",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseKeyGenerator:javax.crypto.SecretKey engineGenerateKey()"
        ]
    },
    "org.bouncycastle.crypto.generators.DSAParametersGenerator:org.bouncycastle.crypto.params.DSAParameters generateParameters_FIPS186_2()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.generators.DSAParametersGenerator:org.bouncycastle.crypto.params.DSAParameters generateParameters()"
        ]
    },
    "org.bouncycastle.crypto.generators.DSAParametersGenerator:org.bouncycastle.crypto.params.DSAParameters generateParameters_FIPS186_3()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.generators.DSAParametersGenerator:org.bouncycastle.crypto.params.DSAParameters generateParameters()"
        ]
    },
    "org.bouncycastle.crypto.prng.SP800SecureRandom:byte[] generateSeed(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.prng.BasicEntropySourceProvider$1:byte[] getEntropy()"
        ]
    },
    "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:byte[] generateSignature()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsDSASigner:byte[] generateRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])",
            "org.bouncycastle.crypto.tls.TlsRSASigner:byte[] generateRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])"
        ]
    },
    "org.bouncycastle.crypto.signers.PSSSigner:byte[] generateSignature()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsDSASigner:byte[] generateRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])",
            "org.bouncycastle.crypto.tls.TlsRSASigner:byte[] generateRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.PSSSignatureSpi:byte[] engineSign()"
        ]
    },
    "org.bouncycastle.crypto.tls.HeartbeatMessage:void encode(org.bouncycastle.crypto.tls.TlsContext,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.tls.TlsProtocol:byte[] createRandomBlock(java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:org.bouncycastle.crypto.tls.DTLSTransport connect(org.bouncycastle.crypto.tls.TlsClient,org.bouncycastle.crypto.tls.DatagramTransport)",
            "org.bouncycastle.crypto.tls.DTLSServerProtocol:org.bouncycastle.crypto.tls.DTLSTransport accept(org.bouncycastle.crypto.tls.TlsServer,org.bouncycastle.crypto.tls.DatagramTransport)",
            "org.bouncycastle.crypto.tls.TlsClientProtocol:void connect(org.bouncycastle.crypto.tls.TlsClient)",
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void accept(org.bouncycastle.crypto.tls.TlsServer)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsRSAUtils:byte[] generateEncryptedPreMasterSecret(org.bouncycastle.crypto.tls.TlsContext,org.bouncycastle.crypto.params.RSAKeyParameters,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsPSKKeyExchange:void generateClientKeyExchange(java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsRSAKeyExchange:void generateClientKeyExchange(java.io.OutputStream)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsRSAUtils:byte[] safeDecryptPreMasterSecret(org.bouncycastle.crypto.tls.TlsContext,org.bouncycastle.crypto.tls.TlsEncryptionCredentials,byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsRSAKeyExchange:void processClientKeyExchange(java.io.InputStream)"
        ]
    },
    "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$BouncyCastleStore:void engineStore(java.io.OutputStream,char[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry:void <init>(org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi,java.lang.String,java.security.Key,char[],java.security.cert.Certificate[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi:void engineSetKeyEntry(java.lang.String,java.security.Key,char[],java.security.cert.Certificate[])"
        ]
    },
    "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void doStore(java.io.OutputStream,char[],boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineStore(java.security.KeyStore$LoadStoreParameter)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineStore(java.io.OutputStream,char[])"
        ]
    },
    "org.bouncycastle.jcajce.provider.symmetric.AES$AlgParamGen:java.security.AlgorithmParameters engineGenerateParameters()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.symmetric.CAST5$AlgParamGen:java.security.AlgorithmParameters engineGenerateParameters()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.symmetric.Camellia$AlgParamGen:java.security.AlgorithmParameters engineGenerateParameters()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.symmetric.DES$AlgParamGen:java.security.AlgorithmParameters engineGenerateParameters()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.symmetric.DESede$AlgParamGen:java.security.AlgorithmParameters engineGenerateParameters()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.symmetric.GOST28147$AlgParamGen:java.security.AlgorithmParameters engineGenerateParameters()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.symmetric.IDEA$AlgParamGen:java.security.AlgorithmParameters engineGenerateParameters()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.symmetric.Noekeon$AlgParamGen:java.security.AlgorithmParameters engineGenerateParameters()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.symmetric.RC2$AlgParamGen:java.security.AlgorithmParameters engineGenerateParameters()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.symmetric.RC5$AlgParamGen:java.security.AlgorithmParameters engineGenerateParameters()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.symmetric.RC6$AlgParamGen:java.security.AlgorithmParameters engineGenerateParameters()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.symmetric.SEED$AlgParamGen:java.security.AlgorithmParameters engineGenerateParameters()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.symmetric.Shacal2$AlgParamGen:java.security.AlgorithmParameters engineGenerateParameters()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:void engineInit(int,java.security.Key,java.security.AlgorithmParameters,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:void engineInit(int,java.security.Key,java.security.SecureRandom)"
        ]
    },
    "org.bouncycastle.pqc.crypto.gmss.GMSSKeyPairGenerator:void initialize(org.bouncycastle.crypto.KeyGenerationParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.crypto.gmss.GMSSKeyPairGenerator:void initialize(int,java.security.SecureRandom)",
            "org.bouncycastle.pqc.crypto.gmss.GMSSKeyPairGenerator:void initializeDefault()",
            "org.bouncycastle.pqc.crypto.gmss.GMSSKeyPairGenerator:void init(org.bouncycastle.crypto.KeyGenerationParameters)"
        ]
    },
    "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiCipher:byte[] messageEncrypt(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher:byte[] messageEncrypt()",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiDigestCipher:byte[] messageEncrypt()",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePKCSDigestCipher:byte[] messageEncrypt()",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalDigestCipher:byte[] messageEncrypt()",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKobaraImaiCipherSpi:byte[] doFinal(byte[],int,int)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKobaraImaiCipherSpi:byte[] messageEncrypt()"
        ]
    },
    "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalCipher:byte[] messageEncrypt(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher:byte[] messageEncrypt()",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiDigestCipher:byte[] messageEncrypt()",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePKCSDigestCipher:byte[] messageEncrypt()",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalDigestCipher:byte[] messageEncrypt()",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McEliecePointchevalCipherSpi:byte[] doFinal(byte[],int,int)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McEliecePointchevalCipherSpi:byte[] messageEncrypt(byte[])"
        ]
    },
    "org.bouncycastle.crypto.tls.DefaultTlsCipherFactory:org.bouncycastle.crypto.tls.TlsCipher createCipher(org.bouncycastle.crypto.tls.TlsContext,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DefaultTlsClient:org.bouncycastle.crypto.tls.TlsCipher getCipher()",
            "org.bouncycastle.crypto.tls.DefaultTlsServer:org.bouncycastle.crypto.tls.TlsCipher getCipher()",
            "org.bouncycastle.crypto.tls.PSKTlsClient:org.bouncycastle.crypto.tls.TlsCipher getCipher()",
            "org.bouncycastle.crypto.tls.SRPTlsClient:org.bouncycastle.crypto.tls.TlsCipher getCipher()"
        ]
    },
    "org.bouncycastle.crypto.tls.DTLSRecordLayer:void send(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSRecordLayer:void sendRecord(short,byte[],int,int)",
            "org.bouncycastle.crypto.tls.DTLSReliableHandshake$RecordLayerBuffer:void sendToRecordLayer(org.bouncycastle.crypto.tls.DTLSRecordLayer)",
            "org.bouncycastle.crypto.tls.DTLSTransport:void send(byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.tls.DTLSRecordLayer:void raiseAlert(short,short,java.lang.String,java.lang.Exception)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSRecordLayer:void fail(short)",
            "org.bouncycastle.crypto.tls.DTLSRecordLayer:void warn(short,java.lang.String)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsProtocol:void safeWriteRecord(short,byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsProtocol:void writeData(byte[],int,int)",
            "org.bouncycastle.crypto.tls.TlsProtocol:void writeHandshakeMessage(byte[],int,int)",
            "org.bouncycastle.crypto.tls.TlsProtocol:void raiseAlert(short,short,java.lang.String,java.lang.Exception)",
            "org.bouncycastle.crypto.tls.TlsProtocol:void sendChangeCipherSpecMessage()"
        ]
    },
    "org.bouncycastle.crypto.tls.DTLSRecordLayer:int receiveRecord(byte[],int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSRecordLayer:int receive(byte[],int,int,int)"
        ]
    },
    "org.bouncycastle.crypto.tls.DTLSReliableHandshake:org.bouncycastle.crypto.tls.DTLSReliableHandshake$Message receiveMessage()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:org.bouncycastle.crypto.tls.DTLSTransport clientHandshake(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,org.bouncycastle.crypto.tls.DTLSRecordLayer)",
            "org.bouncycastle.crypto.tls.DTLSReliableHandshake:byte[] receiveMessageBody(short)",
            "org.bouncycastle.crypto.tls.DTLSServerProtocol:org.bouncycastle.crypto.tls.DTLSTransport serverHandshake(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState,org.bouncycastle.crypto.tls.DTLSRecordLayer)"
        ]
    },
    "org.bouncycastle.crypto.tls.DTLSTransport:int receive(byte[],int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSRecordLayer:int receiveRecord(byte[],int,int,int)"
        ]
    },
    "org.bouncycastle.crypto.tls.RecordStream:boolean readRecord()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsProtocol:void safeReadRecord()"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dsa.KeyFactorySpi:java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dstu.KeyFactorySpi:java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi:java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ecgost.KeyFactorySpi:java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.elgamal.KeyFactorySpi:java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.gost.KeyFactorySpi:java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.rsa.KeyFactorySpi:java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ecgost.SignatureSpi:void engineInitVerify(java.security.PublicKey)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.gost.SignatureSpi:void engineInitVerify(java.security.PublicKey)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil:org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePublicKeyParameter(java.security.PublicKey)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.IESCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi:java.security.Key engineDoPhase(java.security.Key,boolean)",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi:void initFromKey(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.ies.CipherSpi:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil:org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePublicKeyParameter(java.security.PublicKey)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.KeyFactory:java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:java.security.PublicKey getPublicKey()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:java.lang.String toString()",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineDeleteEntry(java.lang.String)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:java.security.cert.Certificate[] engineGetCertificateChain(java.lang.String)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineSetCertificateEntry(java.lang.String,java.security.cert.Certificate)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineSetKeyEntry(java.lang.String,java.security.Key,char[],java.security.cert.Certificate[])",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void doStore(java.io.OutputStream,char[],boolean)",
            "org.bouncycastle.jce.examples.PKCS12Example:java.security.cert.Certificate createIntermediateCert(java.security.PublicKey,java.security.PrivateKey,java.security.cert.X509Certificate)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:java.security.cert.TrustAnchor findTrustAnchor(java.security.cert.X509Certificate,java.util.Set,java.lang.String)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:java.security.PublicKey getNextWorkingKey(java.util.List,int)",
            "org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi:java.security.cert.CertPathValidatorResult engineValidate(java.security.cert.CertPath,java.security.cert.CertPathParameters)",
            "org.bouncycastle.ocsp.CertificateID:org.bouncycastle.asn1.ocsp.CertID createCertID(org.bouncycastle.asn1.x509.AlgorithmIdentifier,java.security.cert.X509Certificate,org.bouncycastle.asn1.ASN1Integer,java.lang.String)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean match(java.security.cert.Certificate)",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkSignatures()",
            "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure:org.bouncycastle.asn1.ASN1Sequence fromCertificate(java.security.cert.X509Certificate)"
        ]
    },
    "org.bouncycastle.jce.provider.X509CertificateObject:java.security.PublicKey getPublicKey()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineDeleteEntry(java.lang.String)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:java.security.cert.Certificate[] engineGetCertificateChain(java.lang.String)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineSetCertificateEntry(java.lang.String,java.security.cert.Certificate)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineSetKeyEntry(java.lang.String,java.security.Key,char[],java.security.cert.Certificate[])",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void doStore(java.io.OutputStream,char[],boolean)",
            "org.bouncycastle.jce.examples.PKCS12Example:java.security.cert.Certificate createIntermediateCert(java.security.PublicKey,java.security.PrivateKey,java.security.cert.X509Certificate)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:java.security.cert.TrustAnchor findTrustAnchor(java.security.cert.X509Certificate,java.util.Set,java.lang.String)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:java.security.PublicKey getNextWorkingKey(java.util.List,int)",
            "org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi:java.security.cert.CertPathValidatorResult engineValidate(java.security.cert.CertPath,java.security.cert.CertPathParameters)",
            "org.bouncycastle.jce.provider.X509CertificateObject:java.lang.String toString()",
            "org.bouncycastle.ocsp.CertificateID:org.bouncycastle.asn1.ocsp.CertID createCertID(org.bouncycastle.asn1.x509.AlgorithmIdentifier,java.security.cert.X509Certificate,org.bouncycastle.asn1.ASN1Integer,java.lang.String)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean match(java.security.cert.Certificate)",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkSignatures()",
            "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure:org.bouncycastle.asn1.ASN1Sequence fromCertificate(java.security.cert.X509Certificate)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsDHUtils:org.bouncycastle.crypto.params.DHPrivateKeyParameters generateEphemeralClientKeyExchange(java.security.SecureRandom,org.bouncycastle.crypto.params.DHParameters,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsDHKeyExchange:void generateClientKeyExchange(java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsPSKKeyExchange:void generateClientKeyExchange(java.io.OutputStream)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsDHUtils:org.bouncycastle.crypto.params.DHPrivateKeyParameters generateEphemeralServerKeyExchange(java.security.SecureRandom,org.bouncycastle.crypto.params.DHParameters,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsDHEKeyExchange:byte[] generateServerKeyExchange()",
            "org.bouncycastle.crypto.tls.TlsPSKKeyExchange:byte[] generateServerKeyExchange()"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dh.IESCipher:byte[] engineDoFinal(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.dh.IESCipher:int engineDoFinal(byte[],int,int,byte[],int)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ec.IESCipher:byte[] engineDoFinal(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.ec.IESCipher:int engineDoFinal(byte[],int,int,byte[],int)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ies.CipherSpi:byte[] engineDoFinal(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ies.CipherSpi:int engineDoFinal(byte[],int,int,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.tls.DTLSClientProtocol:void processServerKeyExchange(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:org.bouncycastle.crypto.tls.DTLSTransport clientHandshake(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,org.bouncycastle.crypto.tls.DTLSRecordLayer)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsClientProtocol:void handleHandshakeMessage(short,byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsProtocol:void processHandshake()"
        ]
    },
    "org.bouncycastle.crypto.tls.DTLSServerProtocol:org.bouncycastle.crypto.tls.DTLSTransport serverHandshake(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState,org.bouncycastle.crypto.tls.DTLSRecordLayer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSServerProtocol:org.bouncycastle.crypto.tls.DTLSTransport accept(org.bouncycastle.crypto.tls.TlsServer,org.bouncycastle.crypto.tls.DatagramTransport)"
        ]
    },
    "org.bouncycastle.crypto.tls.AbstractTlsKeyExchange:void processServerCredentials(org.bouncycastle.crypto.tls.TlsCredentials)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSServerProtocol:org.bouncycastle.crypto.tls.DTLSTransport serverHandshake(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState,org.bouncycastle.crypto.tls.DTLSRecordLayer)",
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void handleHandshakeMessage(short,byte[])"
        ]
    },
    "org.bouncycastle.crypto.tls.DTLSClientProtocol:org.bouncycastle.crypto.tls.Certificate processServerCertificate(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:org.bouncycastle.crypto.tls.DTLSTransport clientHandshake(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,org.bouncycastle.crypto.tls.DTLSRecordLayer)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsDHEKeyExchange:void processServerCredentials(org.bouncycastle.crypto.tls.TlsCredentials)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSServerProtocol:org.bouncycastle.crypto.tls.DTLSTransport serverHandshake(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState,org.bouncycastle.crypto.tls.DTLSRecordLayer)",
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void handleHandshakeMessage(short,byte[])"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsECDHEKeyExchange:void processServerCredentials(org.bouncycastle.crypto.tls.TlsCredentials)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSServerProtocol:org.bouncycastle.crypto.tls.DTLSTransport serverHandshake(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState,org.bouncycastle.crypto.tls.DTLSRecordLayer)",
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void handleHandshakeMessage(short,byte[])"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsPSKKeyExchange:void processServerCredentials(org.bouncycastle.crypto.tls.TlsCredentials)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSServerProtocol:org.bouncycastle.crypto.tls.DTLSTransport serverHandshake(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState,org.bouncycastle.crypto.tls.DTLSRecordLayer)",
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void handleHandshakeMessage(short,byte[])"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsRSAKeyExchange:void processServerCredentials(org.bouncycastle.crypto.tls.TlsCredentials)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSServerProtocol:org.bouncycastle.crypto.tls.DTLSTransport serverHandshake(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState,org.bouncycastle.crypto.tls.DTLSRecordLayer)",
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void handleHandshakeMessage(short,byte[])"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsServerProtocol:void handleHandshakeMessage(short,byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsProtocol:void processHandshake()"
        ]
    },
    "org.bouncycastle.crypto.tls.DTLSServerProtocol:void notifyClientCertificate(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState,org.bouncycastle.crypto.tls.Certificate)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSServerProtocol:org.bouncycastle.crypto.tls.DTLSTransport serverHandshake(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState,org.bouncycastle.crypto.tls.DTLSRecordLayer)",
            "org.bouncycastle.crypto.tls.DTLSServerProtocol:void processClientCertificate(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState,byte[])"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsServerProtocol:void notifyClientCertificate(org.bouncycastle.crypto.tls.Certificate)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void handleHandshakeMessage(short,byte[])",
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void handleWarningMessage(short)",
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void receiveCertificateMessage(java.io.ByteArrayInputStream)"
        ]
    },
    "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:void engineInit(int,java.security.Key,java.security.AlgorithmParameters,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:void engineInit(int,java.security.Key,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.symmetric.DES$DESPBEKeyFactory:javax.crypto.SecretKey engineGenerateSecret(java.security.spec.KeySpec)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.symmetric.util.PBESecretKeyFactory:javax.crypto.SecretKey engineGenerateSecret(java.security.spec.KeySpec)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.digest.SHA1$BasePBKDF2WithHmacSHA1:javax.crypto.SecretKey engineGenerateSecret(java.security.spec.KeySpec)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.symmetric.PBEPBKDF2$BasePBKDF2:javax.crypto.SecretKey engineGenerateSecret(java.security.spec.KeySpec)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.agreement.srp.SRP6Util:java.math.BigInteger calculateX(org.bouncycastle.crypto.Digest,java.math.BigInteger,byte[],byte[],byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.agreement.srp.SRP6Client:java.math.BigInteger generateClientCredentials(byte[],byte[],byte[])",
            "org.bouncycastle.crypto.agreement.srp.SRP6VerifierGenerator:java.math.BigInteger generateVerifier(byte[],byte[],byte[])"
        ]
    },
    "org.bouncycastle.crypto.commitments.GeneralHashCommitter:byte[] calculateCommitment(byte[],byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.commitments.GeneralHashCommitter:org.bouncycastle.crypto.Commitment commit(byte[])",
            "org.bouncycastle.crypto.commitments.GeneralHashCommitter:boolean isRevealed(org.bouncycastle.crypto.Commitment,byte[])"
        ]
    },
    "org.bouncycastle.crypto.digests.NonMemoableDigest:void update(byte)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.agreement.srp.SRP6Util:java.math.BigInteger calculateX(org.bouncycastle.crypto.Digest,java.math.BigInteger,byte[],byte[],byte[])",
            "org.bouncycastle.crypto.commitments.GeneralHashCommitter:byte[] calculateCommitment(byte[],byte[])",
            "org.bouncycastle.crypto.digests.NonMemoableDigest:void update(byte)",
            "org.bouncycastle.crypto.digests.ShortenedDigest:void update(byte)",
            "org.bouncycastle.crypto.io.DigestInputStream:int read()",
            "org.bouncycastle.crypto.io.DigestOutputStream:void write(int)",
            "org.bouncycastle.crypto.macs.HMac:void update(byte)",
            "org.bouncycastle.crypto.macs.OldHMac:void update(byte)",
            "org.bouncycastle.crypto.prng.DigestRandomGenerator:void digestAddCounter(long)",
            "org.bouncycastle.crypto.prng.drbg.Utils:byte[] hash_df(org.bouncycastle.crypto.Digest,byte[],int)",
            "org.bouncycastle.crypto.signers.DSADigestSigner:void update(byte)",
            "org.bouncycastle.crypto.signers.GenericSigner:void update(byte)",
            "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:void update(byte)",
            "org.bouncycastle.crypto.signers.ISO9796d2Signer:void update(byte)",
            "org.bouncycastle.crypto.signers.PSSSigner:void update(byte)",
            "org.bouncycastle.crypto.signers.RSADigestSigner:void update(byte)",
            "org.bouncycastle.crypto.tls.CombinedHash:void update(byte)",
            "org.bouncycastle.crypto.tls.DeferredHash:void update(byte)",
            "org.bouncycastle.crypto.tls.SSL3Mac:void update(byte)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner:void engineUpdate(byte)",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpi:void engineUpdate(byte)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.SignatureSpi:void engineUpdate(byte)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.SignatureSpi:void engineUpdate(byte)",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi:void engineUpdate(byte)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.DSABase:void engineUpdate(byte)",
            "org.bouncycastle.jcajce.provider.digest.BCMessageDigest:void engineUpdate(byte)",
            "org.bouncycastle.jce.provider.BrokenKDF2BytesGenerator:int generateBytes(byte[],int,int)",
            "org.bouncycastle.pqc.crypto.DigestingMessageSigner:void update(byte)",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher:void update(byte)",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiDigestCipher:void update(byte)",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePKCSDigestCipher:void update(byte)",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalDigestCipher:void update(byte)",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.SignatureSpi:void engineUpdate(byte)"
        ]
    },
    "org.bouncycastle.crypto.digests.ShortenedDigest:void update(byte)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.agreement.srp.SRP6Util:java.math.BigInteger calculateX(org.bouncycastle.crypto.Digest,java.math.BigInteger,byte[],byte[],byte[])",
            "org.bouncycastle.crypto.commitments.GeneralHashCommitter:byte[] calculateCommitment(byte[],byte[])",
            "org.bouncycastle.crypto.digests.NonMemoableDigest:void update(byte)",
            "org.bouncycastle.crypto.digests.ShortenedDigest:void update(byte)",
            "org.bouncycastle.crypto.io.DigestInputStream:int read()",
            "org.bouncycastle.crypto.io.DigestOutputStream:void write(int)",
            "org.bouncycastle.crypto.macs.HMac:void update(byte)",
            "org.bouncycastle.crypto.macs.OldHMac:void update(byte)",
            "org.bouncycastle.crypto.prng.DigestRandomGenerator:void digestAddCounter(long)",
            "org.bouncycastle.crypto.prng.drbg.Utils:byte[] hash_df(org.bouncycastle.crypto.Digest,byte[],int)",
            "org.bouncycastle.crypto.signers.DSADigestSigner:void update(byte)",
            "org.bouncycastle.crypto.signers.GenericSigner:void update(byte)",
            "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:void update(byte)",
            "org.bouncycastle.crypto.signers.ISO9796d2Signer:void update(byte)",
            "org.bouncycastle.crypto.signers.PSSSigner:void update(byte)",
            "org.bouncycastle.crypto.signers.RSADigestSigner:void update(byte)",
            "org.bouncycastle.crypto.tls.CombinedHash:void update(byte)",
            "org.bouncycastle.crypto.tls.DeferredHash:void update(byte)",
            "org.bouncycastle.crypto.tls.SSL3Mac:void update(byte)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner:void engineUpdate(byte)",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpi:void engineUpdate(byte)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.SignatureSpi:void engineUpdate(byte)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.SignatureSpi:void engineUpdate(byte)",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi:void engineUpdate(byte)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.DSABase:void engineUpdate(byte)",
            "org.bouncycastle.jcajce.provider.digest.BCMessageDigest:void engineUpdate(byte)",
            "org.bouncycastle.jce.provider.BrokenKDF2BytesGenerator:int generateBytes(byte[],int,int)",
            "org.bouncycastle.pqc.crypto.DigestingMessageSigner:void update(byte)",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher:void update(byte)",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiDigestCipher:void update(byte)",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePKCSDigestCipher:void update(byte)",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalDigestCipher:void update(byte)",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.SignatureSpi:void engineUpdate(byte)"
        ]
    },
    "org.bouncycastle.crypto.io.DigestInputStream:int read()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2InputStream:int bsR(int)",
            "org.bouncycastle.apache.bzip2.CBZip2InputStream:void getAndMoveToFrontDecode()",
            "org.bouncycastle.asn1.ASN1InputStream:int readTagNumber(java.io.InputStream,int)",
            "org.bouncycastle.asn1.ASN1InputStream:int readLength(java.io.InputStream,int)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1Encodable readObject()",
            "org.bouncycastle.asn1.BERGenerator:void writeBERBody(java.io.InputStream)",
            "org.bouncycastle.asn1.ConstructedOctetStream:int read()",
            "org.bouncycastle.asn1.DERBitString:org.bouncycastle.asn1.DERBitString fromInputStream(int,java.io.InputStream)",
            "org.bouncycastle.asn1.DefiniteLengthInputStream:int read()",
            "org.bouncycastle.asn1.IndefiniteLengthInputStream:void <init>(java.io.InputStream,int)",
            "org.bouncycastle.asn1.IndefiniteLengthInputStream:int read(byte[],int,int)",
            "org.bouncycastle.asn1.IndefiniteLengthInputStream:int read()",
            "org.bouncycastle.crypto.io.DigestInputStream:int read()",
            "org.bouncycastle.crypto.io.MacInputStream:int read()",
            "org.bouncycastle.crypto.io.SignerInputStream:int read()",
            "org.bouncycastle.crypto.parsers.ECIESPublicKeyParser:org.bouncycastle.crypto.params.AsymmetricKeyParameter readKey(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:short readUint8(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:int readUint16(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:int readUint24(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:long readUint32(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:long readUint48(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:org.bouncycastle.crypto.tls.ProtocolVersion readVersion(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:int readVersionRaw(java.io.InputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PEMUtil:java.lang.String readLine(java.io.InputStream)",
            "org.bouncycastle.jce.provider.PEMUtil:java.lang.String readLine(java.io.InputStream)",
            "org.bouncycastle.jce.provider.X509AttrCertParser:java.lang.Object engineRead()",
            "org.bouncycastle.jce.provider.X509CRLParser:java.lang.Object engineRead()",
            "org.bouncycastle.jce.provider.X509CertPairParser:java.lang.Object engineRead()",
            "org.bouncycastle.jce.provider.X509CertParser:java.lang.Object engineRead()",
            "org.bouncycastle.util.io.TeeInputStream:int read()"
        ]
    },
    "org.bouncycastle.crypto.io.DigestOutputStream:void write(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void <init>(java.io.OutputStream,int)",
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void bsFinishedWithStream()",
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void bsW(int,int)",
            "org.bouncycastle.asn1.ASN1OutputStream:void write(int)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeNull()",
            "org.bouncycastle.asn1.BERGenerator:void writeHdr(int)",
            "org.bouncycastle.asn1.BERGenerator:void writeBERBody(java.io.InputStream)",
            "org.bouncycastle.asn1.BERGenerator:void writeBEREnd()",
            "org.bouncycastle.asn1.DERGenerator:void writeLength(java.io.OutputStream,int)",
            "org.bouncycastle.asn1.DERGenerator:void writeDEREncoded(java.io.OutputStream,int,byte[])",
            "org.bouncycastle.crypto.io.CipherOutputStream:void write(int)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint8(short,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint8(int,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint16(int,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint24(int,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint32(long,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint48(long,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint64(long,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeVersion(org.bouncycastle.crypto.tls.ProtocolVersion,java.io.OutputStream)",
            "org.bouncycastle.util.Strings:void toUTF8ByteArray(char[],java.io.OutputStream)",
            "org.bouncycastle.util.encoders.Base64Encoder:int encode(byte[],int,int,java.io.OutputStream)",
            "org.bouncycastle.util.encoders.Base64Encoder:int decode(byte[],int,int,java.io.OutputStream)",
            "org.bouncycastle.util.encoders.Base64Encoder:int decode(java.lang.String,java.io.OutputStream)",
            "org.bouncycastle.util.encoders.Base64Encoder:int decodeLastBlock(java.io.OutputStream,char,char,char,char)",
            "org.bouncycastle.util.encoders.HexEncoder:int encode(byte[],int,int,java.io.OutputStream)",
            "org.bouncycastle.util.encoders.HexEncoder:int decode(byte[],int,int,java.io.OutputStream)",
            "org.bouncycastle.util.encoders.HexEncoder:int decode(java.lang.String,java.io.OutputStream)",
            "org.bouncycastle.util.io.TeeInputStream:int read()",
            "org.bouncycastle.util.io.TeeOutputStream:void write(int)"
        ]
    },
    "org.bouncycastle.crypto.macs.HMac:void update(byte)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.generators.HKDFBytesGenerator:void expandNext()",
            "org.bouncycastle.crypto.io.MacInputStream:int read()",
            "org.bouncycastle.crypto.io.MacOutputStream:void write(int)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void processAADByte(byte)",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:void hmac_DRBG_Update_Func(byte[],byte)",
            "org.bouncycastle.crypto.signers.HMacDSAKCalculator:void init(java.math.BigInteger,java.math.BigInteger,byte[])",
            "org.bouncycastle.crypto.signers.HMacDSAKCalculator:java.math.BigInteger nextK()",
            "org.bouncycastle.crypto.tls.TlsMac:byte[] calculateMacConstantTime(long,short,byte[],int,int,int,byte[])",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineUpdate(byte)"
        ]
    },
    "org.bouncycastle.crypto.macs.OldHMac:void update(byte)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.io.MacInputStream:int read()",
            "org.bouncycastle.crypto.io.MacOutputStream:void write(int)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void processAADByte(byte)",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:void hmac_DRBG_Update_Func(byte[],byte)",
            "org.bouncycastle.crypto.tls.TlsMac:byte[] calculateMacConstantTime(long,short,byte[],int,int,int,byte[])",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineUpdate(byte)"
        ]
    },
    "org.bouncycastle.crypto.prng.DigestRandomGenerator:void digestAddCounter(long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.prng.DigestRandomGenerator:void addSeedMaterial(long)",
            "org.bouncycastle.crypto.prng.DigestRandomGenerator:void cycleSeed()",
            "org.bouncycastle.crypto.prng.DigestRandomGenerator:void generateState()"
        ]
    },
    "org.bouncycastle.crypto.prng.drbg.Utils:byte[] hash_df(org.bouncycastle.crypto.Digest,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.prng.drbg.DualECSP800DRBG:void <init>(org.bouncycastle.crypto.prng.drbg.DualECPoints[],org.bouncycastle.crypto.Digest,int,org.bouncycastle.crypto.prng.EntropySource,byte[],byte[])",
            "org.bouncycastle.crypto.prng.drbg.DualECSP800DRBG:int generate(byte[],byte[],boolean)",
            "org.bouncycastle.crypto.prng.drbg.DualECSP800DRBG:void reseed(byte[])",
            "org.bouncycastle.crypto.prng.drbg.HashSP800DRBG:void <init>(org.bouncycastle.crypto.Digest,int,org.bouncycastle.crypto.prng.EntropySource,byte[],byte[])",
            "org.bouncycastle.crypto.prng.drbg.HashSP800DRBG:void reseed(byte[])"
        ]
    },
    "org.bouncycastle.crypto.signers.DSADigestSigner:void update(byte)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.io.SignerInputStream:int read()",
            "org.bouncycastle.crypto.io.SignerOutputStream:void write(int)"
        ]
    },
    "org.bouncycastle.crypto.signers.GenericSigner:void update(byte)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.io.SignerInputStream:int read()",
            "org.bouncycastle.crypto.io.SignerOutputStream:void write(int)"
        ]
    },
    "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:void update(byte)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.io.SignerInputStream:int read()",
            "org.bouncycastle.crypto.io.SignerOutputStream:void write(int)",
            "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:void update(byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.signers.ISO9796d2Signer:void update(byte)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.io.SignerInputStream:int read()",
            "org.bouncycastle.crypto.io.SignerOutputStream:void write(int)",
            "org.bouncycastle.crypto.signers.ISO9796d2Signer:void update(byte[],int,int)",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.ISOSignatureSpi:void engineUpdate(byte)"
        ]
    },
    "org.bouncycastle.crypto.signers.PSSSigner:void update(byte)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.io.SignerInputStream:int read()",
            "org.bouncycastle.crypto.io.SignerOutputStream:void write(int)",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.PSSSignatureSpi:void engineUpdate(byte)"
        ]
    },
    "org.bouncycastle.crypto.signers.RSADigestSigner:void update(byte)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.io.SignerInputStream:int read()",
            "org.bouncycastle.crypto.io.SignerOutputStream:void write(int)"
        ]
    },
    "org.bouncycastle.crypto.tls.CombinedHash:void update(byte)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.agreement.srp.SRP6Util:java.math.BigInteger calculateX(org.bouncycastle.crypto.Digest,java.math.BigInteger,byte[],byte[],byte[])",
            "org.bouncycastle.crypto.commitments.GeneralHashCommitter:byte[] calculateCommitment(byte[],byte[])",
            "org.bouncycastle.crypto.io.DigestInputStream:int read()",
            "org.bouncycastle.crypto.io.DigestOutputStream:void write(int)",
            "org.bouncycastle.crypto.macs.HMac:void update(byte)",
            "org.bouncycastle.crypto.macs.OldHMac:void update(byte)",
            "org.bouncycastle.crypto.prng.DigestRandomGenerator:void digestAddCounter(long)",
            "org.bouncycastle.crypto.prng.drbg.Utils:byte[] hash_df(org.bouncycastle.crypto.Digest,byte[],int)",
            "org.bouncycastle.crypto.signers.DSADigestSigner:void update(byte)",
            "org.bouncycastle.crypto.signers.GenericSigner:void update(byte)",
            "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:void update(byte)",
            "org.bouncycastle.crypto.signers.ISO9796d2Signer:void update(byte)",
            "org.bouncycastle.crypto.signers.PSSSigner:void update(byte)",
            "org.bouncycastle.crypto.signers.RSADigestSigner:void update(byte)",
            "org.bouncycastle.crypto.tls.CombinedHash:void update(byte)",
            "org.bouncycastle.crypto.tls.DeferredHash:void update(byte)",
            "org.bouncycastle.crypto.tls.SSL3Mac:void update(byte)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner:void engineUpdate(byte)",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpi:void engineUpdate(byte)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.SignatureSpi:void engineUpdate(byte)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.SignatureSpi:void engineUpdate(byte)",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi:void engineUpdate(byte)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.DSABase:void engineUpdate(byte)",
            "org.bouncycastle.jcajce.provider.digest.BCMessageDigest:void engineUpdate(byte)",
            "org.bouncycastle.jce.provider.BrokenKDF2BytesGenerator:int generateBytes(byte[],int,int)",
            "org.bouncycastle.pqc.crypto.DigestingMessageSigner:void update(byte)",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher:void update(byte)",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiDigestCipher:void update(byte)",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePKCSDigestCipher:void update(byte)",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalDigestCipher:void update(byte)",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.SignatureSpi:void engineUpdate(byte)"
        ]
    },
    "org.bouncycastle.crypto.tls.DeferredHash:void update(byte)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.agreement.srp.SRP6Util:java.math.BigInteger calculateX(org.bouncycastle.crypto.Digest,java.math.BigInteger,byte[],byte[],byte[])",
            "org.bouncycastle.crypto.commitments.GeneralHashCommitter:byte[] calculateCommitment(byte[],byte[])",
            "org.bouncycastle.crypto.io.DigestInputStream:int read()",
            "org.bouncycastle.crypto.io.DigestOutputStream:void write(int)",
            "org.bouncycastle.crypto.macs.HMac:void update(byte)",
            "org.bouncycastle.crypto.macs.OldHMac:void update(byte)",
            "org.bouncycastle.crypto.prng.DigestRandomGenerator:void digestAddCounter(long)",
            "org.bouncycastle.crypto.prng.drbg.Utils:byte[] hash_df(org.bouncycastle.crypto.Digest,byte[],int)",
            "org.bouncycastle.crypto.signers.DSADigestSigner:void update(byte)",
            "org.bouncycastle.crypto.signers.GenericSigner:void update(byte)",
            "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:void update(byte)",
            "org.bouncycastle.crypto.signers.ISO9796d2Signer:void update(byte)",
            "org.bouncycastle.crypto.signers.PSSSigner:void update(byte)",
            "org.bouncycastle.crypto.signers.RSADigestSigner:void update(byte)",
            "org.bouncycastle.crypto.tls.CombinedHash:void update(byte)",
            "org.bouncycastle.crypto.tls.DeferredHash:void update(byte)",
            "org.bouncycastle.crypto.tls.SSL3Mac:void update(byte)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner:void engineUpdate(byte)",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpi:void engineUpdate(byte)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.SignatureSpi:void engineUpdate(byte)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.SignatureSpi:void engineUpdate(byte)",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi:void engineUpdate(byte)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.DSABase:void engineUpdate(byte)",
            "org.bouncycastle.jcajce.provider.digest.BCMessageDigest:void engineUpdate(byte)",
            "org.bouncycastle.jce.provider.BrokenKDF2BytesGenerator:int generateBytes(byte[],int,int)",
            "org.bouncycastle.pqc.crypto.DigestingMessageSigner:void update(byte)",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher:void update(byte)",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiDigestCipher:void update(byte)",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePKCSDigestCipher:void update(byte)",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalDigestCipher:void update(byte)",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.SignatureSpi:void engineUpdate(byte)"
        ]
    },
    "org.bouncycastle.crypto.tls.SSL3Mac:void update(byte)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.io.MacInputStream:int read()",
            "org.bouncycastle.crypto.io.MacOutputStream:void write(int)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void processAADByte(byte)",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:void hmac_DRBG_Update_Func(byte[],byte)",
            "org.bouncycastle.crypto.tls.TlsMac:byte[] calculateMacConstantTime(long,short,byte[],int,int,int,byte[])",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineUpdate(byte)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner:void engineUpdate(byte)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpi:void engineUpdate(byte)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ecgost.SignatureSpi:void engineUpdate(byte)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.gost.SignatureSpi:void engineUpdate(byte)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi:void engineUpdate(byte)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.util.DSABase:void engineUpdate(byte)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.digest.BCMessageDigest:void engineUpdate(byte)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.provider.BrokenKDF2BytesGenerator:int generateBytes(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.engines.IESEngine:byte[] encryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.engines.IESEngine:byte[] decryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.kems.ECIESKeyEncapsulation:org.bouncycastle.crypto.CipherParameters encrypt(byte[],int,int)",
            "org.bouncycastle.crypto.kems.ECIESKeyEncapsulation:org.bouncycastle.crypto.CipherParameters decrypt(byte[],int,int,int)",
            "org.bouncycastle.crypto.kems.RSAKeyEncapsulation:org.bouncycastle.crypto.CipherParameters encrypt(byte[],int,int)",
            "org.bouncycastle.crypto.kems.RSAKeyEncapsulation:org.bouncycastle.crypto.CipherParameters decrypt(byte[],int,int,int)",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi:javax.crypto.SecretKey engineGenerateSecret(java.lang.String)"
        ]
    },
    "org.bouncycastle.pqc.crypto.DigestingMessageSigner:void update(byte)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.io.SignerInputStream:int read()",
            "org.bouncycastle.crypto.io.SignerOutputStream:void write(int)"
        ]
    },
    "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher:void update(byte)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiDigestCipher:void update(byte)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.crypto.mceliece.McEliecePKCSDigestCipher:void update(byte)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalDigestCipher:void update(byte)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.jcajce.provider.rainbow.SignatureSpi:void engineUpdate(byte)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:void updateDigest(org.bouncycastle.crypto.Digest,java.math.BigInteger)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:byte[] calculateMacKey(java.math.BigInteger,org.bouncycastle.crypto.Digest)"
        ]
    },
    "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:void updateDigestIncludingSize(org.bouncycastle.crypto.Digest,java.math.BigInteger)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:java.math.BigInteger calculateHashForZeroKnowledgeProof(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.lang.String,org.bouncycastle.crypto.Digest)"
        ]
    },
    "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:void updateDigest(org.bouncycastle.crypto.Digest,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:byte[] calculateMacKey(java.math.BigInteger,org.bouncycastle.crypto.Digest)"
        ]
    },
    "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:void updateDigestIncludingSize(org.bouncycastle.crypto.Digest,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:java.math.BigInteger calculateHashForZeroKnowledgeProof(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.lang.String,org.bouncycastle.crypto.Digest)"
        ]
    },
    "org.bouncycastle.crypto.agreement.kdf.DHKEKGenerator:int generateBytes(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.engines.IESEngine:byte[] encryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.engines.IESEngine:byte[] decryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.kems.ECIESKeyEncapsulation:org.bouncycastle.crypto.CipherParameters encrypt(byte[],int,int)",
            "org.bouncycastle.crypto.kems.ECIESKeyEncapsulation:org.bouncycastle.crypto.CipherParameters decrypt(byte[],int,int,int)",
            "org.bouncycastle.crypto.kems.RSAKeyEncapsulation:org.bouncycastle.crypto.CipherParameters encrypt(byte[],int,int)",
            "org.bouncycastle.crypto.kems.RSAKeyEncapsulation:org.bouncycastle.crypto.CipherParameters decrypt(byte[],int,int,int)",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi:javax.crypto.SecretKey engineGenerateSecret(java.lang.String)"
        ]
    },
    "org.bouncycastle.crypto.agreement.srp.SRP6Util:java.math.BigInteger hashPaddedPair(org.bouncycastle.crypto.Digest,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.agreement.srp.SRP6Util:java.math.BigInteger calculateK(org.bouncycastle.crypto.Digest,java.math.BigInteger,java.math.BigInteger)",
            "org.bouncycastle.crypto.agreement.srp.SRP6Util:java.math.BigInteger calculateU(org.bouncycastle.crypto.Digest,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)"
        ]
    },
    "org.bouncycastle.crypto.commitments.HashCommitter:byte[] calculateCommitment(byte[],byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.commitments.HashCommitter:org.bouncycastle.crypto.Commitment commit(byte[])",
            "org.bouncycastle.crypto.commitments.HashCommitter:boolean isRevealed(org.bouncycastle.crypto.Commitment,byte[])"
        ]
    },
    "org.bouncycastle.crypto.digests.NonMemoableDigest:void update(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:void updateDigest(org.bouncycastle.crypto.Digest,java.math.BigInteger)",
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:void updateDigestIncludingSize(org.bouncycastle.crypto.Digest,java.math.BigInteger)",
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:void updateDigest(org.bouncycastle.crypto.Digest,java.lang.String)",
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:void updateDigestIncludingSize(org.bouncycastle.crypto.Digest,java.lang.String)",
            "org.bouncycastle.crypto.agreement.kdf.DHKEKGenerator:int generateBytes(byte[],int,int)",
            "org.bouncycastle.crypto.agreement.srp.SRP6Util:java.math.BigInteger calculateX(org.bouncycastle.crypto.Digest,java.math.BigInteger,byte[],byte[],byte[])",
            "org.bouncycastle.crypto.agreement.srp.SRP6Util:java.math.BigInteger hashPaddedPair(org.bouncycastle.crypto.Digest,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)",
            "org.bouncycastle.crypto.commitments.GeneralHashCommitter:byte[] calculateCommitment(byte[],byte[])",
            "org.bouncycastle.crypto.commitments.HashCommitter:byte[] calculateCommitment(byte[],byte[])",
            "org.bouncycastle.crypto.digests.NonMemoableDigest:void update(byte[],int,int)",
            "org.bouncycastle.crypto.digests.ShortenedDigest:void update(byte[],int,int)",
            "org.bouncycastle.crypto.encodings.OAEPEncoding:void <init>(org.bouncycastle.crypto.AsymmetricBlockCipher,org.bouncycastle.crypto.Digest,org.bouncycastle.crypto.Digest,byte[])",
            "org.bouncycastle.crypto.encodings.OAEPEncoding:byte[] maskGeneratorFunction1(byte[],int,int,int)",
            "org.bouncycastle.crypto.engines.DESedeWrapEngine:byte[] calculateCMSKeyChecksum(byte[])",
            "org.bouncycastle.crypto.engines.RC2WrapEngine:byte[] calculateCMSKeyChecksum(byte[])",
            "org.bouncycastle.crypto.generators.BaseKDFBytesGenerator:int generateBytes(byte[],int,int)",
            "org.bouncycastle.crypto.generators.DSAParametersGenerator:void hash(org.bouncycastle.crypto.Digest,byte[],byte[])",
            "org.bouncycastle.crypto.generators.MGF1BytesGenerator:int generateBytes(byte[],int,int)",
            "org.bouncycastle.crypto.generators.OpenSSLPBEParametersGenerator:byte[] generateDerivedKey(int)",
            "org.bouncycastle.crypto.generators.PKCS12ParametersGenerator:byte[] generateDerivedKey(int,int)",
            "org.bouncycastle.crypto.generators.PKCS5S1ParametersGenerator:byte[] generateDerivedKey()",
            "org.bouncycastle.crypto.io.DigestInputStream:int read(byte[],int,int)",
            "org.bouncycastle.crypto.io.DigestOutputStream:void write(byte[],int,int)",
            "org.bouncycastle.crypto.macs.HMac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.HMac:void update(byte[],int,int)",
            "org.bouncycastle.crypto.macs.HMac:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.macs.HMac:void reset()",
            "org.bouncycastle.crypto.macs.OldHMac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.OldHMac:void update(byte[],int,int)",
            "org.bouncycastle.crypto.macs.OldHMac:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.macs.OldHMac:void reset()",
            "org.bouncycastle.crypto.prng.DigestRandomGenerator:void digestUpdate(byte[])",
            "org.bouncycastle.crypto.prng.drbg.HashSP800DRBG:byte[] hash(byte[])",
            "org.bouncycastle.crypto.prng.drbg.Utils:byte[] hash_df(org.bouncycastle.crypto.Digest,byte[],int)",
            "org.bouncycastle.crypto.signers.DSADigestSigner:void update(byte[],int,int)",
            "org.bouncycastle.crypto.signers.GenericSigner:void update(byte[],int,int)",
            "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:void update(byte[],int,int)",
            "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:byte[] generateSignature()",
            "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:boolean verifySignature(byte[])",
            "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:byte[] maskGeneratorFunction1(byte[],int,int,int)",
            "org.bouncycastle.crypto.signers.ISO9796d2Signer:void updateWithRecoveredMessage(byte[])",
            "org.bouncycastle.crypto.signers.ISO9796d2Signer:void update(byte[],int,int)",
            "org.bouncycastle.crypto.signers.ISO9796d2Signer:boolean verifySignature(byte[])",
            "org.bouncycastle.crypto.signers.PSSSigner:void update(byte[],int,int)",
            "org.bouncycastle.crypto.signers.PSSSigner:byte[] generateSignature()",
            "org.bouncycastle.crypto.signers.PSSSigner:boolean verifySignature(byte[])",
            "org.bouncycastle.crypto.signers.PSSSigner:byte[] maskGeneratorFunction1(byte[],int,int,int)",
            "org.bouncycastle.crypto.signers.RSADigestSigner:void update(byte[],int,int)",
            "org.bouncycastle.crypto.tls.CombinedHash:void update(byte[],int,int)",
            "org.bouncycastle.crypto.tls.CombinedHash:void ssl3Complete(org.bouncycastle.crypto.Digest,byte[],byte[],int)",
            "org.bouncycastle.crypto.tls.DeferredHash:void update(byte[],int,int)",
            "org.bouncycastle.crypto.tls.DigestInputBuffer:void updateDigest(org.bouncycastle.crypto.Digest)",
            "org.bouncycastle.crypto.tls.SSL3Mac:void update(byte[],int,int)",
            "org.bouncycastle.crypto.tls.SSL3Mac:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.tls.SSL3Mac:void reset()",
            "org.bouncycastle.crypto.tls.TlsDHEKeyExchange:byte[] generateServerKeyExchange()",
            "org.bouncycastle.crypto.tls.TlsECDHEKeyExchange:byte[] generateServerKeyExchange()",
            "org.bouncycastle.crypto.tls.TlsProtocol:byte[] getCurrentPRFHash(org.bouncycastle.crypto.tls.TlsContext,org.bouncycastle.crypto.tls.TlsHandshakeHash,byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner:void engineUpdate(byte[],int,int)",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpi:void engineUpdate(byte[],int,int)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.SignatureSpi:void engineUpdate(byte[],int,int)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.SignatureSpi:void engineUpdate(byte[],int,int)",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi:void engineUpdate(byte[],int,int)",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.PSSSignatureSpi$NullPssDigest:int doFinal(byte[],int)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.DSABase:void engineUpdate(byte[],int,int)",
            "org.bouncycastle.jcajce.provider.digest.BCMessageDigest:void engineUpdate(byte[],int,int)",
            "org.bouncycastle.jce.provider.BrokenKDF2BytesGenerator:int generateBytes(byte[],int,int)",
            "org.bouncycastle.jce.provider.OldPKCS12ParametersGenerator:byte[] generateDerivedKey(int,int)",
            "org.bouncycastle.pqc.crypto.DigestingMessageSigner:void update(byte[],int,int)",
            "org.bouncycastle.pqc.crypto.gmss.GMSSLeaf:void updateLeafCalc()",
            "org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters:void computeAuthPaths(int)",
            "org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc:void update(byte[])",
            "org.bouncycastle.pqc.crypto.gmss.GMSSRootSig:void initSign(byte[],byte[])",
            "org.bouncycastle.pqc.crypto.gmss.GMSSRootSig:void oneStep()",
            "org.bouncycastle.pqc.crypto.gmss.GMSSSigner:boolean verifySignature(byte[],byte[])",
            "org.bouncycastle.pqc.crypto.gmss.Treehash:void update(org.bouncycastle.pqc.crypto.gmss.util.GMSSRandom,byte[])",
            "org.bouncycastle.pqc.crypto.gmss.util.GMSSRandom:byte[] nextSeed(byte[])",
            "org.bouncycastle.pqc.crypto.gmss.util.WinternitzOTSVerify:byte[] Verify(byte[],byte[])",
            "org.bouncycastle.pqc.crypto.gmss.util.WinternitzOTSignature:byte[] getPublicKey()",
            "org.bouncycastle.pqc.crypto.gmss.util.WinternitzOTSignature:byte[] getSignature(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiCipher:byte[] messageEncrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiCipher:byte[] messageDecrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher:void update(byte[],int,int)",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiCipher:byte[] messageEncrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiCipher:byte[] messageDecrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiDigestCipher:void update(byte[],int,int)",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePKCSDigestCipher:void update(byte[],int,int)",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalCipher:byte[] messageEncrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalCipher:byte[] messageDecrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalDigestCipher:void update(byte[],int,int)",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.SignatureSpi:void engineUpdate(byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.digests.ShortenedDigest:void update(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:void updateDigest(org.bouncycastle.crypto.Digest,java.math.BigInteger)",
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:void updateDigestIncludingSize(org.bouncycastle.crypto.Digest,java.math.BigInteger)",
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:void updateDigest(org.bouncycastle.crypto.Digest,java.lang.String)",
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:void updateDigestIncludingSize(org.bouncycastle.crypto.Digest,java.lang.String)",
            "org.bouncycastle.crypto.agreement.kdf.DHKEKGenerator:int generateBytes(byte[],int,int)",
            "org.bouncycastle.crypto.agreement.srp.SRP6Util:java.math.BigInteger calculateX(org.bouncycastle.crypto.Digest,java.math.BigInteger,byte[],byte[],byte[])",
            "org.bouncycastle.crypto.agreement.srp.SRP6Util:java.math.BigInteger hashPaddedPair(org.bouncycastle.crypto.Digest,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)",
            "org.bouncycastle.crypto.commitments.GeneralHashCommitter:byte[] calculateCommitment(byte[],byte[])",
            "org.bouncycastle.crypto.commitments.HashCommitter:byte[] calculateCommitment(byte[],byte[])",
            "org.bouncycastle.crypto.digests.NonMemoableDigest:void update(byte[],int,int)",
            "org.bouncycastle.crypto.digests.ShortenedDigest:void update(byte[],int,int)",
            "org.bouncycastle.crypto.encodings.OAEPEncoding:void <init>(org.bouncycastle.crypto.AsymmetricBlockCipher,org.bouncycastle.crypto.Digest,org.bouncycastle.crypto.Digest,byte[])",
            "org.bouncycastle.crypto.encodings.OAEPEncoding:byte[] maskGeneratorFunction1(byte[],int,int,int)",
            "org.bouncycastle.crypto.engines.DESedeWrapEngine:byte[] calculateCMSKeyChecksum(byte[])",
            "org.bouncycastle.crypto.engines.RC2WrapEngine:byte[] calculateCMSKeyChecksum(byte[])",
            "org.bouncycastle.crypto.generators.BaseKDFBytesGenerator:int generateBytes(byte[],int,int)",
            "org.bouncycastle.crypto.generators.DSAParametersGenerator:void hash(org.bouncycastle.crypto.Digest,byte[],byte[])",
            "org.bouncycastle.crypto.generators.MGF1BytesGenerator:int generateBytes(byte[],int,int)",
            "org.bouncycastle.crypto.generators.OpenSSLPBEParametersGenerator:byte[] generateDerivedKey(int)",
            "org.bouncycastle.crypto.generators.PKCS12ParametersGenerator:byte[] generateDerivedKey(int,int)",
            "org.bouncycastle.crypto.generators.PKCS5S1ParametersGenerator:byte[] generateDerivedKey()",
            "org.bouncycastle.crypto.io.DigestInputStream:int read(byte[],int,int)",
            "org.bouncycastle.crypto.io.DigestOutputStream:void write(byte[],int,int)",
            "org.bouncycastle.crypto.macs.HMac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.HMac:void update(byte[],int,int)",
            "org.bouncycastle.crypto.macs.HMac:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.macs.HMac:void reset()",
            "org.bouncycastle.crypto.macs.OldHMac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.OldHMac:void update(byte[],int,int)",
            "org.bouncycastle.crypto.macs.OldHMac:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.macs.OldHMac:void reset()",
            "org.bouncycastle.crypto.prng.DigestRandomGenerator:void digestUpdate(byte[])",
            "org.bouncycastle.crypto.prng.drbg.HashSP800DRBG:byte[] hash(byte[])",
            "org.bouncycastle.crypto.prng.drbg.Utils:byte[] hash_df(org.bouncycastle.crypto.Digest,byte[],int)",
            "org.bouncycastle.crypto.signers.DSADigestSigner:void update(byte[],int,int)",
            "org.bouncycastle.crypto.signers.GenericSigner:void update(byte[],int,int)",
            "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:void update(byte[],int,int)",
            "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:byte[] generateSignature()",
            "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:boolean verifySignature(byte[])",
            "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:byte[] maskGeneratorFunction1(byte[],int,int,int)",
            "org.bouncycastle.crypto.signers.ISO9796d2Signer:void updateWithRecoveredMessage(byte[])",
            "org.bouncycastle.crypto.signers.ISO9796d2Signer:void update(byte[],int,int)",
            "org.bouncycastle.crypto.signers.ISO9796d2Signer:boolean verifySignature(byte[])",
            "org.bouncycastle.crypto.signers.PSSSigner:void update(byte[],int,int)",
            "org.bouncycastle.crypto.signers.PSSSigner:byte[] generateSignature()",
            "org.bouncycastle.crypto.signers.PSSSigner:boolean verifySignature(byte[])",
            "org.bouncycastle.crypto.signers.PSSSigner:byte[] maskGeneratorFunction1(byte[],int,int,int)",
            "org.bouncycastle.crypto.signers.RSADigestSigner:void update(byte[],int,int)",
            "org.bouncycastle.crypto.tls.CombinedHash:void update(byte[],int,int)",
            "org.bouncycastle.crypto.tls.CombinedHash:void ssl3Complete(org.bouncycastle.crypto.Digest,byte[],byte[],int)",
            "org.bouncycastle.crypto.tls.DeferredHash:void update(byte[],int,int)",
            "org.bouncycastle.crypto.tls.DigestInputBuffer:void updateDigest(org.bouncycastle.crypto.Digest)",
            "org.bouncycastle.crypto.tls.SSL3Mac:void update(byte[],int,int)",
            "org.bouncycastle.crypto.tls.SSL3Mac:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.tls.SSL3Mac:void reset()",
            "org.bouncycastle.crypto.tls.TlsDHEKeyExchange:byte[] generateServerKeyExchange()",
            "org.bouncycastle.crypto.tls.TlsECDHEKeyExchange:byte[] generateServerKeyExchange()",
            "org.bouncycastle.crypto.tls.TlsProtocol:byte[] getCurrentPRFHash(org.bouncycastle.crypto.tls.TlsContext,org.bouncycastle.crypto.tls.TlsHandshakeHash,byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner:void engineUpdate(byte[],int,int)",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpi:void engineUpdate(byte[],int,int)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.SignatureSpi:void engineUpdate(byte[],int,int)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.SignatureSpi:void engineUpdate(byte[],int,int)",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi:void engineUpdate(byte[],int,int)",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.PSSSignatureSpi$NullPssDigest:int doFinal(byte[],int)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.DSABase:void engineUpdate(byte[],int,int)",
            "org.bouncycastle.jcajce.provider.digest.BCMessageDigest:void engineUpdate(byte[],int,int)",
            "org.bouncycastle.jce.provider.BrokenKDF2BytesGenerator:int generateBytes(byte[],int,int)",
            "org.bouncycastle.jce.provider.OldPKCS12ParametersGenerator:byte[] generateDerivedKey(int,int)",
            "org.bouncycastle.pqc.crypto.DigestingMessageSigner:void update(byte[],int,int)",
            "org.bouncycastle.pqc.crypto.gmss.GMSSLeaf:void updateLeafCalc()",
            "org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters:void computeAuthPaths(int)",
            "org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc:void update(byte[])",
            "org.bouncycastle.pqc.crypto.gmss.GMSSRootSig:void initSign(byte[],byte[])",
            "org.bouncycastle.pqc.crypto.gmss.GMSSRootSig:void oneStep()",
            "org.bouncycastle.pqc.crypto.gmss.GMSSSigner:boolean verifySignature(byte[],byte[])",
            "org.bouncycastle.pqc.crypto.gmss.Treehash:void update(org.bouncycastle.pqc.crypto.gmss.util.GMSSRandom,byte[])",
            "org.bouncycastle.pqc.crypto.gmss.util.GMSSRandom:byte[] nextSeed(byte[])",
            "org.bouncycastle.pqc.crypto.gmss.util.WinternitzOTSVerify:byte[] Verify(byte[],byte[])",
            "org.bouncycastle.pqc.crypto.gmss.util.WinternitzOTSignature:byte[] getPublicKey()",
            "org.bouncycastle.pqc.crypto.gmss.util.WinternitzOTSignature:byte[] getSignature(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiCipher:byte[] messageEncrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiCipher:byte[] messageDecrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher:void update(byte[],int,int)",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiCipher:byte[] messageEncrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiCipher:byte[] messageDecrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiDigestCipher:void update(byte[],int,int)",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePKCSDigestCipher:void update(byte[],int,int)",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalCipher:byte[] messageEncrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalCipher:byte[] messageDecrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalDigestCipher:void update(byte[],int,int)",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.SignatureSpi:void engineUpdate(byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.encodings.OAEPEncoding:void <init>(org.bouncycastle.crypto.AsymmetricBlockCipher,org.bouncycastle.crypto.Digest,org.bouncycastle.crypto.Digest,byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.encodings.OAEPEncoding:void <init>(org.bouncycastle.crypto.AsymmetricBlockCipher,org.bouncycastle.crypto.Digest,byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)"
        ]
    },
    "org.bouncycastle.crypto.encodings.OAEPEncoding:byte[] maskGeneratorFunction1(byte[],int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.encodings.OAEPEncoding:byte[] encodeBlock(byte[],int,int)",
            "org.bouncycastle.crypto.encodings.OAEPEncoding:byte[] decodeBlock(byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.engines.DESedeWrapEngine:byte[] calculateCMSKeyChecksum(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.engines.DESedeWrapEngine:byte[] wrap(byte[],int,int)",
            "org.bouncycastle.crypto.engines.DESedeWrapEngine:boolean checkCMSKeyChecksum(byte[],byte[])"
        ]
    },
    "org.bouncycastle.crypto.engines.RC2WrapEngine:byte[] calculateCMSKeyChecksum(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.engines.RC2WrapEngine:byte[] wrap(byte[],int,int)",
            "org.bouncycastle.crypto.engines.RC2WrapEngine:boolean checkCMSKeyChecksum(byte[],byte[])"
        ]
    },
    "org.bouncycastle.crypto.generators.BaseKDFBytesGenerator:int generateBytes(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.agreement.kdf.ECDHKEKGenerator:int generateBytes(byte[],int,int)",
            "org.bouncycastle.crypto.engines.IESEngine:byte[] encryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.engines.IESEngine:byte[] decryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.kems.ECIESKeyEncapsulation:org.bouncycastle.crypto.CipherParameters encrypt(byte[],int,int)",
            "org.bouncycastle.crypto.kems.ECIESKeyEncapsulation:org.bouncycastle.crypto.CipherParameters decrypt(byte[],int,int,int)",
            "org.bouncycastle.crypto.kems.RSAKeyEncapsulation:org.bouncycastle.crypto.CipherParameters encrypt(byte[],int,int)",
            "org.bouncycastle.crypto.kems.RSAKeyEncapsulation:org.bouncycastle.crypto.CipherParameters decrypt(byte[],int,int,int)",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi:javax.crypto.SecretKey engineGenerateSecret(java.lang.String)"
        ]
    },
    "org.bouncycastle.crypto.generators.DSAParametersGenerator:void hash(org.bouncycastle.crypto.Digest,byte[],byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.generators.DSAParametersGenerator:org.bouncycastle.crypto.params.DSAParameters generateParameters_FIPS186_2()",
            "org.bouncycastle.crypto.generators.DSAParametersGenerator:org.bouncycastle.crypto.params.DSAParameters generateParameters_FIPS186_3()",
            "org.bouncycastle.crypto.generators.DSAParametersGenerator:java.math.BigInteger calculateGenerator_FIPS186_3_Verifiable(org.bouncycastle.crypto.Digest,java.math.BigInteger,java.math.BigInteger,byte[],int)"
        ]
    },
    "org.bouncycastle.crypto.generators.MGF1BytesGenerator:int generateBytes(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.engines.IESEngine:byte[] encryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.engines.IESEngine:byte[] decryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.kems.ECIESKeyEncapsulation:org.bouncycastle.crypto.CipherParameters encrypt(byte[],int,int)",
            "org.bouncycastle.crypto.kems.ECIESKeyEncapsulation:org.bouncycastle.crypto.CipherParameters decrypt(byte[],int,int,int)",
            "org.bouncycastle.crypto.kems.RSAKeyEncapsulation:org.bouncycastle.crypto.CipherParameters encrypt(byte[],int,int)",
            "org.bouncycastle.crypto.kems.RSAKeyEncapsulation:org.bouncycastle.crypto.CipherParameters decrypt(byte[],int,int,int)",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi:javax.crypto.SecretKey engineGenerateSecret(java.lang.String)"
        ]
    },
    "org.bouncycastle.crypto.generators.OpenSSLPBEParametersGenerator:byte[] generateDerivedKey(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.generators.OpenSSLPBEParametersGenerator:org.bouncycastle.crypto.CipherParameters generateDerivedParameters(int)",
            "org.bouncycastle.crypto.generators.OpenSSLPBEParametersGenerator:org.bouncycastle.crypto.CipherParameters generateDerivedParameters(int,int)"
        ]
    },
    "org.bouncycastle.crypto.generators.PKCS12ParametersGenerator:byte[] generateDerivedKey(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.generators.PKCS12ParametersGenerator:org.bouncycastle.crypto.CipherParameters generateDerivedParameters(int)",
            "org.bouncycastle.crypto.generators.PKCS12ParametersGenerator:org.bouncycastle.crypto.CipherParameters generateDerivedParameters(int,int)",
            "org.bouncycastle.crypto.generators.PKCS12ParametersGenerator:org.bouncycastle.crypto.CipherParameters generateDerivedMacParameters(int)"
        ]
    },
    "org.bouncycastle.crypto.generators.PKCS5S1ParametersGenerator:byte[] generateDerivedKey()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.generators.PKCS5S1ParametersGenerator:org.bouncycastle.crypto.CipherParameters generateDerivedParameters(int)",
            "org.bouncycastle.crypto.generators.PKCS5S1ParametersGenerator:org.bouncycastle.crypto.CipherParameters generateDerivedParameters(int,int)"
        ]
    },
    "org.bouncycastle.crypto.io.DigestInputStream:int read(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ConstructedOctetStream:int read(byte[],int,int)",
            "org.bouncycastle.asn1.DefiniteLengthInputStream:int read(byte[],int,int)",
            "org.bouncycastle.asn1.IndefiniteLengthInputStream:int read(byte[],int,int)",
            "org.bouncycastle.crypto.io.DigestInputStream:int read(byte[],int,int)",
            "org.bouncycastle.crypto.io.MacInputStream:int read(byte[],int,int)",
            "org.bouncycastle.crypto.io.SignerInputStream:int read(byte[],int,int)",
            "org.bouncycastle.crypto.parsers.DHIESPublicKeyParser:org.bouncycastle.crypto.params.AsymmetricKeyParameter readKey(java.io.InputStream)",
            "org.bouncycastle.crypto.parsers.ECIESPublicKeyParser:org.bouncycastle.crypto.params.AsymmetricKeyParameter readKey(java.io.InputStream)",
            "org.bouncycastle.util.io.Streams:void drain(java.io.InputStream)",
            "org.bouncycastle.util.io.Streams:int readFully(java.io.InputStream,byte[],int,int)",
            "org.bouncycastle.util.io.Streams:void pipeAll(java.io.InputStream,java.io.OutputStream)",
            "org.bouncycastle.util.io.Streams:long pipeAllLimited(java.io.InputStream,long,java.io.OutputStream)",
            "org.bouncycastle.util.io.TeeInputStream:int read(byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.io.DigestOutputStream:void write(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1OutputStream:void write(byte[],int,int)",
            "org.bouncycastle.crypto.io.CipherOutputStream:void write(byte[],int,int)",
            "org.bouncycastle.crypto.io.CipherOutputStream:void close()",
            "org.bouncycastle.crypto.tls.CertificateURL$ListBuffer16:void encodeTo(java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.RecordStream:byte[] decodeAndVerify(short,java.io.InputStream,int)",
            "org.bouncycastle.crypto.tls.RecordStream:void writeRecord(short,byte[],int,int)",
            "org.bouncycastle.util.io.BufferingOutputStream:void write(byte[],int,int)",
            "org.bouncycastle.util.io.BufferingOutputStream:void flush()",
            "org.bouncycastle.util.io.Streams:void pipeAll(java.io.InputStream,java.io.OutputStream)",
            "org.bouncycastle.util.io.Streams:long pipeAllLimited(java.io.InputStream,long,java.io.OutputStream)",
            "org.bouncycastle.util.io.TeeInputStream:int read(byte[],int,int)",
            "org.bouncycastle.util.io.TeeOutputStream:void write(byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.macs.HMac:void init(org.bouncycastle.crypto.CipherParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:java.math.BigInteger calculateMacTag(java.lang.String,java.lang.String,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,org.bouncycastle.crypto.Digest)",
            "org.bouncycastle.crypto.engines.IESEngine:byte[] encryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.engines.IESEngine:byte[] decryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.generators.HKDFBytesGenerator:void init(org.bouncycastle.crypto.DerivationParameters)",
            "org.bouncycastle.crypto.generators.HKDFBytesGenerator:org.bouncycastle.crypto.params.KeyParameter extract(byte[],byte[])",
            "org.bouncycastle.crypto.generators.KDFCounterBytesGenerator:void init(org.bouncycastle.crypto.DerivationParameters)",
            "org.bouncycastle.crypto.generators.KDFDoublePipelineIterationBytesGenerator:void init(org.bouncycastle.crypto.DerivationParameters)",
            "org.bouncycastle.crypto.generators.KDFFeedbackBytesGenerator:void init(org.bouncycastle.crypto.DerivationParameters)",
            "org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator:byte[] generateDerivedKey(int)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:void hmac_DRBG_Update_Func(byte[],byte)",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:int generate(byte[],byte[],boolean)",
            "org.bouncycastle.crypto.signers.HMacDSAKCalculator:void init(java.math.BigInteger,java.math.BigInteger,byte[])",
            "org.bouncycastle.crypto.signers.HMacDSAKCalculator:java.math.BigInteger nextK()",
            "org.bouncycastle.crypto.tls.TlsMac:void <init>(org.bouncycastle.crypto.tls.TlsContext,org.bouncycastle.crypto.Digest,byte[],int,int)",
            "org.bouncycastle.crypto.tls.TlsUtils:void hmac_hash(org.bouncycastle.crypto.Digest,byte[],byte[],byte[])",
            "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi:void engineStore(java.io.OutputStream,char[])",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineInit(java.security.Key,java.security.spec.AlgorithmParameterSpec)"
        ]
    },
    "org.bouncycastle.crypto.macs.HMac:void update(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:void updateMac(org.bouncycastle.crypto.Mac,java.math.BigInteger)",
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:void updateMac(org.bouncycastle.crypto.Mac,java.lang.String)",
            "org.bouncycastle.crypto.engines.IESEngine:byte[] encryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.engines.IESEngine:byte[] decryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.generators.HKDFBytesGenerator:org.bouncycastle.crypto.params.KeyParameter extract(byte[],byte[])",
            "org.bouncycastle.crypto.generators.HKDFBytesGenerator:void expandNext()",
            "org.bouncycastle.crypto.generators.KDFCounterBytesGenerator:void generateNext()",
            "org.bouncycastle.crypto.generators.KDFDoublePipelineIterationBytesGenerator:void generateNext()",
            "org.bouncycastle.crypto.generators.KDFFeedbackBytesGenerator:void generateNext()",
            "org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator:void F(byte[],int,byte[],byte[],int)",
            "org.bouncycastle.crypto.io.MacInputStream:int read(byte[],int,int)",
            "org.bouncycastle.crypto.io.MacOutputStream:void write(byte[],int,int)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void initCipher()",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void reset(boolean)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void processAADBytes(byte[],int,int)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:int process(byte,byte[],int)",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:void hmac_DRBG_Update_Func(byte[],byte)",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:int generate(byte[],byte[],boolean)",
            "org.bouncycastle.crypto.signers.HMacDSAKCalculator:void init(java.math.BigInteger,java.math.BigInteger,byte[])",
            "org.bouncycastle.crypto.signers.HMacDSAKCalculator:java.math.BigInteger nextK()",
            "org.bouncycastle.crypto.tls.TlsMac:byte[] calculateMac(long,short,byte[],int,int)",
            "org.bouncycastle.crypto.tls.TlsMac:byte[] calculateMacConstantTime(long,short,byte[],int,int,int,byte[])",
            "org.bouncycastle.crypto.tls.TlsUtils:void hmac_hash(org.bouncycastle.crypto.Digest,byte[],byte[],byte[])",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineUpdate(byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.macs.HMac:void reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void reset(boolean)",
            "org.bouncycastle.crypto.tls.TlsMac:byte[] calculateMacConstantTime(long,short,byte[],int,int,int,byte[])",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineReset()"
        ]
    },
    "org.bouncycastle.crypto.macs.OldHMac:void init(org.bouncycastle.crypto.CipherParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.engines.IESEngine:byte[] encryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.engines.IESEngine:byte[] decryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.generators.KDFCounterBytesGenerator:void init(org.bouncycastle.crypto.DerivationParameters)",
            "org.bouncycastle.crypto.generators.KDFDoublePipelineIterationBytesGenerator:void init(org.bouncycastle.crypto.DerivationParameters)",
            "org.bouncycastle.crypto.generators.KDFFeedbackBytesGenerator:void init(org.bouncycastle.crypto.DerivationParameters)",
            "org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator:byte[] generateDerivedKey(int)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:void hmac_DRBG_Update_Func(byte[],byte)",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:int generate(byte[],byte[],boolean)",
            "org.bouncycastle.crypto.tls.TlsMac:void <init>(org.bouncycastle.crypto.tls.TlsContext,org.bouncycastle.crypto.Digest,byte[],int,int)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineInit(java.security.Key,java.security.spec.AlgorithmParameterSpec)"
        ]
    },
    "org.bouncycastle.crypto.macs.OldHMac:void update(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:void updateMac(org.bouncycastle.crypto.Mac,java.math.BigInteger)",
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:void updateMac(org.bouncycastle.crypto.Mac,java.lang.String)",
            "org.bouncycastle.crypto.engines.IESEngine:byte[] encryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.engines.IESEngine:byte[] decryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.generators.KDFCounterBytesGenerator:void generateNext()",
            "org.bouncycastle.crypto.generators.KDFDoublePipelineIterationBytesGenerator:void generateNext()",
            "org.bouncycastle.crypto.generators.KDFFeedbackBytesGenerator:void generateNext()",
            "org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator:void F(byte[],int,byte[],byte[],int)",
            "org.bouncycastle.crypto.io.MacInputStream:int read(byte[],int,int)",
            "org.bouncycastle.crypto.io.MacOutputStream:void write(byte[],int,int)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void initCipher()",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void reset(boolean)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void processAADBytes(byte[],int,int)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:int process(byte,byte[],int)",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:void hmac_DRBG_Update_Func(byte[],byte)",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:int generate(byte[],byte[],boolean)",
            "org.bouncycastle.crypto.tls.TlsMac:byte[] calculateMac(long,short,byte[],int,int)",
            "org.bouncycastle.crypto.tls.TlsMac:byte[] calculateMacConstantTime(long,short,byte[],int,int,int,byte[])",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineUpdate(byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.macs.OldHMac:int doFinal(byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.engines.IESEngine:byte[] encryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.engines.IESEngine:byte[] decryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.generators.KDFCounterBytesGenerator:void generateNext()",
            "org.bouncycastle.crypto.generators.KDFDoublePipelineIterationBytesGenerator:void generateNext()",
            "org.bouncycastle.crypto.generators.KDFFeedbackBytesGenerator:void generateNext()",
            "org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator:void F(byte[],int,byte[],byte[],int)",
            "org.bouncycastle.crypto.io.MacOutputStream:byte[] getMac()",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void initCipher()",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void calculateMac()",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:void hmac_DRBG_Update_Func(byte[],byte)",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:int generate(byte[],byte[],boolean)",
            "org.bouncycastle.crypto.tls.TlsMac:byte[] calculateMac(long,short,byte[],int,int)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:byte[] engineDoFinal()"
        ]
    },
    "org.bouncycastle.crypto.macs.OldHMac:void reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.macs.OldHMac:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void reset(boolean)",
            "org.bouncycastle.crypto.tls.TlsMac:byte[] calculateMacConstantTime(long,short,byte[],int,int,int,byte[])",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineReset()"
        ]
    },
    "org.bouncycastle.crypto.prng.DigestRandomGenerator:void digestUpdate(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.prng.DigestRandomGenerator:void addSeedMaterial(byte[])",
            "org.bouncycastle.crypto.prng.DigestRandomGenerator:void addSeedMaterial(long)",
            "org.bouncycastle.crypto.prng.DigestRandomGenerator:void cycleSeed()",
            "org.bouncycastle.crypto.prng.DigestRandomGenerator:void generateState()"
        ]
    },
    "org.bouncycastle.crypto.prng.drbg.HashSP800DRBG:byte[] hash(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.prng.drbg.HashSP800DRBG:int generate(byte[],byte[],boolean)",
            "org.bouncycastle.crypto.prng.drbg.HashSP800DRBG:byte[] hashgen(byte[],int)"
        ]
    },
    "org.bouncycastle.crypto.signers.DSADigestSigner:void update(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.io.SignerInputStream:int read(byte[],int,int)",
            "org.bouncycastle.crypto.io.SignerOutputStream:void write(byte[],int,int)",
            "org.bouncycastle.crypto.tls.SignerInputBuffer:void updateSigner(org.bouncycastle.crypto.Signer)",
            "org.bouncycastle.crypto.tls.TlsDHEKeyExchange:org.bouncycastle.crypto.Signer initVerifyer(org.bouncycastle.crypto.tls.TlsSigner,org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.tls.SecurityParameters)",
            "org.bouncycastle.crypto.tls.TlsDSASigner:byte[] generateRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])",
            "org.bouncycastle.crypto.tls.TlsDSASigner:boolean verifyRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,byte[],org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])",
            "org.bouncycastle.crypto.tls.TlsECDHEKeyExchange:org.bouncycastle.crypto.Signer initVerifyer(org.bouncycastle.crypto.tls.TlsSigner,org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.tls.SecurityParameters)",
            "org.bouncycastle.crypto.tls.TlsRSASigner:byte[] generateRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])",
            "org.bouncycastle.crypto.tls.TlsRSASigner:boolean verifyRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,byte[],org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])",
            "org.bouncycastle.crypto.tls.TlsSRPKeyExchange:org.bouncycastle.crypto.Signer initVerifyer(org.bouncycastle.crypto.tls.TlsSigner,org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.tls.SecurityParameters)"
        ]
    },
    "org.bouncycastle.crypto.signers.GenericSigner:void update(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.io.SignerInputStream:int read(byte[],int,int)",
            "org.bouncycastle.crypto.io.SignerOutputStream:void write(byte[],int,int)",
            "org.bouncycastle.crypto.tls.SignerInputBuffer:void updateSigner(org.bouncycastle.crypto.Signer)",
            "org.bouncycastle.crypto.tls.TlsDHEKeyExchange:org.bouncycastle.crypto.Signer initVerifyer(org.bouncycastle.crypto.tls.TlsSigner,org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.tls.SecurityParameters)",
            "org.bouncycastle.crypto.tls.TlsDSASigner:byte[] generateRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])",
            "org.bouncycastle.crypto.tls.TlsDSASigner:boolean verifyRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,byte[],org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])",
            "org.bouncycastle.crypto.tls.TlsECDHEKeyExchange:org.bouncycastle.crypto.Signer initVerifyer(org.bouncycastle.crypto.tls.TlsSigner,org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.tls.SecurityParameters)",
            "org.bouncycastle.crypto.tls.TlsRSASigner:byte[] generateRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])",
            "org.bouncycastle.crypto.tls.TlsRSASigner:boolean verifyRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,byte[],org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])",
            "org.bouncycastle.crypto.tls.TlsSRPKeyExchange:org.bouncycastle.crypto.Signer initVerifyer(org.bouncycastle.crypto.tls.TlsSigner,org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.tls.SecurityParameters)"
        ]
    },
    "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:void update(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.io.SignerInputStream:int read(byte[],int,int)",
            "org.bouncycastle.crypto.io.SignerOutputStream:void write(byte[],int,int)",
            "org.bouncycastle.crypto.tls.SignerInputBuffer:void updateSigner(org.bouncycastle.crypto.Signer)",
            "org.bouncycastle.crypto.tls.TlsDHEKeyExchange:org.bouncycastle.crypto.Signer initVerifyer(org.bouncycastle.crypto.tls.TlsSigner,org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.tls.SecurityParameters)",
            "org.bouncycastle.crypto.tls.TlsDSASigner:byte[] generateRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])",
            "org.bouncycastle.crypto.tls.TlsDSASigner:boolean verifyRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,byte[],org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])",
            "org.bouncycastle.crypto.tls.TlsECDHEKeyExchange:org.bouncycastle.crypto.Signer initVerifyer(org.bouncycastle.crypto.tls.TlsSigner,org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.tls.SecurityParameters)",
            "org.bouncycastle.crypto.tls.TlsRSASigner:byte[] generateRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])",
            "org.bouncycastle.crypto.tls.TlsRSASigner:boolean verifyRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,byte[],org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])",
            "org.bouncycastle.crypto.tls.TlsSRPKeyExchange:org.bouncycastle.crypto.Signer initVerifyer(org.bouncycastle.crypto.tls.TlsSigner,org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.tls.SecurityParameters)"
        ]
    },
    "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:boolean verifySignature(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsDHEKeyExchange:void processServerKeyExchange(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsDSASigner:boolean verifyRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,byte[],org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])",
            "org.bouncycastle.crypto.tls.TlsECDHEKeyExchange:void processServerKeyExchange(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsRSASigner:boolean verifyRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,byte[],org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])",
            "org.bouncycastle.crypto.tls.TlsSRPKeyExchange:void processServerKeyExchange(java.io.InputStream)"
        ]
    },
    "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:byte[] maskGeneratorFunction1(byte[],int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:void updateWithRecoveredMessage(byte[])",
            "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:byte[] generateSignature()"
        ]
    },
    "org.bouncycastle.crypto.signers.ISO9796d2Signer:void updateWithRecoveredMessage(byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.signers.ISO9796d2Signer:void update(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.io.SignerInputStream:int read(byte[],int,int)",
            "org.bouncycastle.crypto.io.SignerOutputStream:void write(byte[],int,int)",
            "org.bouncycastle.crypto.tls.SignerInputBuffer:void updateSigner(org.bouncycastle.crypto.Signer)",
            "org.bouncycastle.crypto.tls.TlsDHEKeyExchange:org.bouncycastle.crypto.Signer initVerifyer(org.bouncycastle.crypto.tls.TlsSigner,org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.tls.SecurityParameters)",
            "org.bouncycastle.crypto.tls.TlsDSASigner:byte[] generateRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])",
            "org.bouncycastle.crypto.tls.TlsDSASigner:boolean verifyRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,byte[],org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])",
            "org.bouncycastle.crypto.tls.TlsECDHEKeyExchange:org.bouncycastle.crypto.Signer initVerifyer(org.bouncycastle.crypto.tls.TlsSigner,org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.tls.SecurityParameters)",
            "org.bouncycastle.crypto.tls.TlsRSASigner:byte[] generateRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])",
            "org.bouncycastle.crypto.tls.TlsRSASigner:boolean verifyRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,byte[],org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])",
            "org.bouncycastle.crypto.tls.TlsSRPKeyExchange:org.bouncycastle.crypto.Signer initVerifyer(org.bouncycastle.crypto.tls.TlsSigner,org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.tls.SecurityParameters)",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.ISOSignatureSpi:void engineUpdate(byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.signers.ISO9796d2Signer:boolean verifySignature(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsDHEKeyExchange:void processServerKeyExchange(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsDSASigner:boolean verifyRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,byte[],org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])",
            "org.bouncycastle.crypto.tls.TlsECDHEKeyExchange:void processServerKeyExchange(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsRSASigner:boolean verifyRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,byte[],org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])",
            "org.bouncycastle.crypto.tls.TlsSRPKeyExchange:void processServerKeyExchange(java.io.InputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.ISOSignatureSpi:boolean engineVerify(byte[])"
        ]
    },
    "org.bouncycastle.crypto.signers.PSSSigner:void update(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.io.SignerInputStream:int read(byte[],int,int)",
            "org.bouncycastle.crypto.io.SignerOutputStream:void write(byte[],int,int)",
            "org.bouncycastle.crypto.tls.SignerInputBuffer:void updateSigner(org.bouncycastle.crypto.Signer)",
            "org.bouncycastle.crypto.tls.TlsDHEKeyExchange:org.bouncycastle.crypto.Signer initVerifyer(org.bouncycastle.crypto.tls.TlsSigner,org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.tls.SecurityParameters)",
            "org.bouncycastle.crypto.tls.TlsDSASigner:byte[] generateRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])",
            "org.bouncycastle.crypto.tls.TlsDSASigner:boolean verifyRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,byte[],org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])",
            "org.bouncycastle.crypto.tls.TlsECDHEKeyExchange:org.bouncycastle.crypto.Signer initVerifyer(org.bouncycastle.crypto.tls.TlsSigner,org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.tls.SecurityParameters)",
            "org.bouncycastle.crypto.tls.TlsRSASigner:byte[] generateRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])",
            "org.bouncycastle.crypto.tls.TlsRSASigner:boolean verifyRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,byte[],org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])",
            "org.bouncycastle.crypto.tls.TlsSRPKeyExchange:org.bouncycastle.crypto.Signer initVerifyer(org.bouncycastle.crypto.tls.TlsSigner,org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.tls.SecurityParameters)",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.PSSSignatureSpi:void engineUpdate(byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.signers.PSSSigner:boolean verifySignature(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsDHEKeyExchange:void processServerKeyExchange(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsDSASigner:boolean verifyRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,byte[],org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])",
            "org.bouncycastle.crypto.tls.TlsECDHEKeyExchange:void processServerKeyExchange(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsRSASigner:boolean verifyRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,byte[],org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])",
            "org.bouncycastle.crypto.tls.TlsSRPKeyExchange:void processServerKeyExchange(java.io.InputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.PSSSignatureSpi:boolean engineVerify(byte[])"
        ]
    },
    "org.bouncycastle.crypto.signers.PSSSigner:byte[] maskGeneratorFunction1(byte[],int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.signers.PSSSigner:byte[] generateSignature()",
            "org.bouncycastle.crypto.signers.PSSSigner:boolean verifySignature(byte[])"
        ]
    },
    "org.bouncycastle.crypto.signers.RSADigestSigner:void update(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.io.SignerInputStream:int read(byte[],int,int)",
            "org.bouncycastle.crypto.io.SignerOutputStream:void write(byte[],int,int)",
            "org.bouncycastle.crypto.tls.SignerInputBuffer:void updateSigner(org.bouncycastle.crypto.Signer)",
            "org.bouncycastle.crypto.tls.TlsDHEKeyExchange:org.bouncycastle.crypto.Signer initVerifyer(org.bouncycastle.crypto.tls.TlsSigner,org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.tls.SecurityParameters)",
            "org.bouncycastle.crypto.tls.TlsDSASigner:byte[] generateRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])",
            "org.bouncycastle.crypto.tls.TlsDSASigner:boolean verifyRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,byte[],org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])",
            "org.bouncycastle.crypto.tls.TlsECDHEKeyExchange:org.bouncycastle.crypto.Signer initVerifyer(org.bouncycastle.crypto.tls.TlsSigner,org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.tls.SecurityParameters)",
            "org.bouncycastle.crypto.tls.TlsRSASigner:byte[] generateRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])",
            "org.bouncycastle.crypto.tls.TlsRSASigner:boolean verifyRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,byte[],org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])",
            "org.bouncycastle.crypto.tls.TlsSRPKeyExchange:org.bouncycastle.crypto.Signer initVerifyer(org.bouncycastle.crypto.tls.TlsSigner,org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.tls.SecurityParameters)"
        ]
    },
    "org.bouncycastle.crypto.tls.CombinedHash:void update(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:void updateDigest(org.bouncycastle.crypto.Digest,java.math.BigInteger)",
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:void updateDigestIncludingSize(org.bouncycastle.crypto.Digest,java.math.BigInteger)",
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:void updateDigest(org.bouncycastle.crypto.Digest,java.lang.String)",
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:void updateDigestIncludingSize(org.bouncycastle.crypto.Digest,java.lang.String)",
            "org.bouncycastle.crypto.agreement.kdf.DHKEKGenerator:int generateBytes(byte[],int,int)",
            "org.bouncycastle.crypto.agreement.srp.SRP6Util:java.math.BigInteger calculateX(org.bouncycastle.crypto.Digest,java.math.BigInteger,byte[],byte[],byte[])",
            "org.bouncycastle.crypto.agreement.srp.SRP6Util:java.math.BigInteger hashPaddedPair(org.bouncycastle.crypto.Digest,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)",
            "org.bouncycastle.crypto.commitments.GeneralHashCommitter:byte[] calculateCommitment(byte[],byte[])",
            "org.bouncycastle.crypto.commitments.HashCommitter:byte[] calculateCommitment(byte[],byte[])",
            "org.bouncycastle.crypto.encodings.OAEPEncoding:void <init>(org.bouncycastle.crypto.AsymmetricBlockCipher,org.bouncycastle.crypto.Digest,org.bouncycastle.crypto.Digest,byte[])",
            "org.bouncycastle.crypto.encodings.OAEPEncoding:byte[] maskGeneratorFunction1(byte[],int,int,int)",
            "org.bouncycastle.crypto.engines.DESedeWrapEngine:byte[] calculateCMSKeyChecksum(byte[])",
            "org.bouncycastle.crypto.engines.RC2WrapEngine:byte[] calculateCMSKeyChecksum(byte[])",
            "org.bouncycastle.crypto.generators.BaseKDFBytesGenerator:int generateBytes(byte[],int,int)",
            "org.bouncycastle.crypto.generators.DSAParametersGenerator:void hash(org.bouncycastle.crypto.Digest,byte[],byte[])",
            "org.bouncycastle.crypto.generators.MGF1BytesGenerator:int generateBytes(byte[],int,int)",
            "org.bouncycastle.crypto.generators.OpenSSLPBEParametersGenerator:byte[] generateDerivedKey(int)",
            "org.bouncycastle.crypto.generators.PKCS12ParametersGenerator:byte[] generateDerivedKey(int,int)",
            "org.bouncycastle.crypto.generators.PKCS5S1ParametersGenerator:byte[] generateDerivedKey()",
            "org.bouncycastle.crypto.io.DigestInputStream:int read(byte[],int,int)",
            "org.bouncycastle.crypto.io.DigestOutputStream:void write(byte[],int,int)",
            "org.bouncycastle.crypto.macs.HMac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.HMac:void update(byte[],int,int)",
            "org.bouncycastle.crypto.macs.HMac:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.macs.HMac:void reset()",
            "org.bouncycastle.crypto.macs.OldHMac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.OldHMac:void update(byte[],int,int)",
            "org.bouncycastle.crypto.macs.OldHMac:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.macs.OldHMac:void reset()",
            "org.bouncycastle.crypto.prng.DigestRandomGenerator:void digestUpdate(byte[])",
            "org.bouncycastle.crypto.prng.drbg.HashSP800DRBG:byte[] hash(byte[])",
            "org.bouncycastle.crypto.prng.drbg.Utils:byte[] hash_df(org.bouncycastle.crypto.Digest,byte[],int)",
            "org.bouncycastle.crypto.signers.DSADigestSigner:void update(byte[],int,int)",
            "org.bouncycastle.crypto.signers.GenericSigner:void update(byte[],int,int)",
            "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:void update(byte[],int,int)",
            "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:byte[] generateSignature()",
            "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:boolean verifySignature(byte[])",
            "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:byte[] maskGeneratorFunction1(byte[],int,int,int)",
            "org.bouncycastle.crypto.signers.ISO9796d2Signer:void updateWithRecoveredMessage(byte[])",
            "org.bouncycastle.crypto.signers.ISO9796d2Signer:void update(byte[],int,int)",
            "org.bouncycastle.crypto.signers.ISO9796d2Signer:boolean verifySignature(byte[])",
            "org.bouncycastle.crypto.signers.PSSSigner:void update(byte[],int,int)",
            "org.bouncycastle.crypto.signers.PSSSigner:byte[] generateSignature()",
            "org.bouncycastle.crypto.signers.PSSSigner:boolean verifySignature(byte[])",
            "org.bouncycastle.crypto.signers.PSSSigner:byte[] maskGeneratorFunction1(byte[],int,int,int)",
            "org.bouncycastle.crypto.signers.RSADigestSigner:void update(byte[],int,int)",
            "org.bouncycastle.crypto.tls.CombinedHash:void update(byte[],int,int)",
            "org.bouncycastle.crypto.tls.CombinedHash:void ssl3Complete(org.bouncycastle.crypto.Digest,byte[],byte[],int)",
            "org.bouncycastle.crypto.tls.DTLSReliableHandshake:org.bouncycastle.crypto.tls.DTLSReliableHandshake$Message updateHandshakeMessagesDigest(org.bouncycastle.crypto.tls.DTLSReliableHandshake$Message)",
            "org.bouncycastle.crypto.tls.DeferredHash:void update(byte[],int,int)",
            "org.bouncycastle.crypto.tls.DigestInputBuffer:void updateDigest(org.bouncycastle.crypto.Digest)",
            "org.bouncycastle.crypto.tls.RecordStream:void updateHandshakeData(byte[],int,int)",
            "org.bouncycastle.crypto.tls.SSL3Mac:void update(byte[],int,int)",
            "org.bouncycastle.crypto.tls.SSL3Mac:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.tls.SSL3Mac:void reset()",
            "org.bouncycastle.crypto.tls.TlsDHEKeyExchange:byte[] generateServerKeyExchange()",
            "org.bouncycastle.crypto.tls.TlsECDHEKeyExchange:byte[] generateServerKeyExchange()",
            "org.bouncycastle.crypto.tls.TlsProtocol:byte[] getCurrentPRFHash(org.bouncycastle.crypto.tls.TlsContext,org.bouncycastle.crypto.tls.TlsHandshakeHash,byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner:void engineUpdate(byte[],int,int)",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpi:void engineUpdate(byte[],int,int)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.SignatureSpi:void engineUpdate(byte[],int,int)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.SignatureSpi:void engineUpdate(byte[],int,int)",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi:void engineUpdate(byte[],int,int)",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.PSSSignatureSpi$NullPssDigest:int doFinal(byte[],int)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.DSABase:void engineUpdate(byte[],int,int)",
            "org.bouncycastle.jcajce.provider.digest.BCMessageDigest:void engineUpdate(byte[],int,int)",
            "org.bouncycastle.jce.provider.BrokenKDF2BytesGenerator:int generateBytes(byte[],int,int)",
            "org.bouncycastle.jce.provider.OldPKCS12ParametersGenerator:byte[] generateDerivedKey(int,int)",
            "org.bouncycastle.pqc.crypto.DigestingMessageSigner:void update(byte[],int,int)",
            "org.bouncycastle.pqc.crypto.gmss.GMSSLeaf:void updateLeafCalc()",
            "org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters:void computeAuthPaths(int)",
            "org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc:void update(byte[])",
            "org.bouncycastle.pqc.crypto.gmss.GMSSRootSig:void initSign(byte[],byte[])",
            "org.bouncycastle.pqc.crypto.gmss.GMSSRootSig:void oneStep()",
            "org.bouncycastle.pqc.crypto.gmss.GMSSSigner:boolean verifySignature(byte[],byte[])",
            "org.bouncycastle.pqc.crypto.gmss.Treehash:void update(org.bouncycastle.pqc.crypto.gmss.util.GMSSRandom,byte[])",
            "org.bouncycastle.pqc.crypto.gmss.util.GMSSRandom:byte[] nextSeed(byte[])",
            "org.bouncycastle.pqc.crypto.gmss.util.WinternitzOTSVerify:byte[] Verify(byte[],byte[])",
            "org.bouncycastle.pqc.crypto.gmss.util.WinternitzOTSignature:byte[] getPublicKey()",
            "org.bouncycastle.pqc.crypto.gmss.util.WinternitzOTSignature:byte[] getSignature(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiCipher:byte[] messageEncrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiCipher:byte[] messageDecrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher:void update(byte[],int,int)",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiCipher:byte[] messageEncrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiCipher:byte[] messageDecrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiDigestCipher:void update(byte[],int,int)",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePKCSDigestCipher:void update(byte[],int,int)",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalCipher:byte[] messageEncrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalCipher:byte[] messageDecrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalDigestCipher:void update(byte[],int,int)",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.SignatureSpi:void engineUpdate(byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.tls.CombinedHash:void ssl3Complete(org.bouncycastle.crypto.Digest,byte[],byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.CombinedHash:int doFinal(byte[],int)"
        ]
    },
    "org.bouncycastle.crypto.tls.DeferredHash:void update(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:void updateDigest(org.bouncycastle.crypto.Digest,java.math.BigInteger)",
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:void updateDigestIncludingSize(org.bouncycastle.crypto.Digest,java.math.BigInteger)",
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:void updateDigest(org.bouncycastle.crypto.Digest,java.lang.String)",
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:void updateDigestIncludingSize(org.bouncycastle.crypto.Digest,java.lang.String)",
            "org.bouncycastle.crypto.agreement.kdf.DHKEKGenerator:int generateBytes(byte[],int,int)",
            "org.bouncycastle.crypto.agreement.srp.SRP6Util:java.math.BigInteger calculateX(org.bouncycastle.crypto.Digest,java.math.BigInteger,byte[],byte[],byte[])",
            "org.bouncycastle.crypto.agreement.srp.SRP6Util:java.math.BigInteger hashPaddedPair(org.bouncycastle.crypto.Digest,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)",
            "org.bouncycastle.crypto.commitments.GeneralHashCommitter:byte[] calculateCommitment(byte[],byte[])",
            "org.bouncycastle.crypto.commitments.HashCommitter:byte[] calculateCommitment(byte[],byte[])",
            "org.bouncycastle.crypto.encodings.OAEPEncoding:void <init>(org.bouncycastle.crypto.AsymmetricBlockCipher,org.bouncycastle.crypto.Digest,org.bouncycastle.crypto.Digest,byte[])",
            "org.bouncycastle.crypto.encodings.OAEPEncoding:byte[] maskGeneratorFunction1(byte[],int,int,int)",
            "org.bouncycastle.crypto.engines.DESedeWrapEngine:byte[] calculateCMSKeyChecksum(byte[])",
            "org.bouncycastle.crypto.engines.RC2WrapEngine:byte[] calculateCMSKeyChecksum(byte[])",
            "org.bouncycastle.crypto.generators.BaseKDFBytesGenerator:int generateBytes(byte[],int,int)",
            "org.bouncycastle.crypto.generators.DSAParametersGenerator:void hash(org.bouncycastle.crypto.Digest,byte[],byte[])",
            "org.bouncycastle.crypto.generators.MGF1BytesGenerator:int generateBytes(byte[],int,int)",
            "org.bouncycastle.crypto.generators.OpenSSLPBEParametersGenerator:byte[] generateDerivedKey(int)",
            "org.bouncycastle.crypto.generators.PKCS12ParametersGenerator:byte[] generateDerivedKey(int,int)",
            "org.bouncycastle.crypto.generators.PKCS5S1ParametersGenerator:byte[] generateDerivedKey()",
            "org.bouncycastle.crypto.io.DigestInputStream:int read(byte[],int,int)",
            "org.bouncycastle.crypto.io.DigestOutputStream:void write(byte[],int,int)",
            "org.bouncycastle.crypto.macs.HMac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.HMac:void update(byte[],int,int)",
            "org.bouncycastle.crypto.macs.HMac:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.macs.HMac:void reset()",
            "org.bouncycastle.crypto.macs.OldHMac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.OldHMac:void update(byte[],int,int)",
            "org.bouncycastle.crypto.macs.OldHMac:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.macs.OldHMac:void reset()",
            "org.bouncycastle.crypto.prng.DigestRandomGenerator:void digestUpdate(byte[])",
            "org.bouncycastle.crypto.prng.drbg.HashSP800DRBG:byte[] hash(byte[])",
            "org.bouncycastle.crypto.prng.drbg.Utils:byte[] hash_df(org.bouncycastle.crypto.Digest,byte[],int)",
            "org.bouncycastle.crypto.signers.DSADigestSigner:void update(byte[],int,int)",
            "org.bouncycastle.crypto.signers.GenericSigner:void update(byte[],int,int)",
            "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:void update(byte[],int,int)",
            "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:byte[] generateSignature()",
            "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:boolean verifySignature(byte[])",
            "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:byte[] maskGeneratorFunction1(byte[],int,int,int)",
            "org.bouncycastle.crypto.signers.ISO9796d2Signer:void updateWithRecoveredMessage(byte[])",
            "org.bouncycastle.crypto.signers.ISO9796d2Signer:void update(byte[],int,int)",
            "org.bouncycastle.crypto.signers.ISO9796d2Signer:boolean verifySignature(byte[])",
            "org.bouncycastle.crypto.signers.PSSSigner:void update(byte[],int,int)",
            "org.bouncycastle.crypto.signers.PSSSigner:byte[] generateSignature()",
            "org.bouncycastle.crypto.signers.PSSSigner:boolean verifySignature(byte[])",
            "org.bouncycastle.crypto.signers.PSSSigner:byte[] maskGeneratorFunction1(byte[],int,int,int)",
            "org.bouncycastle.crypto.signers.RSADigestSigner:void update(byte[],int,int)",
            "org.bouncycastle.crypto.tls.CombinedHash:void update(byte[],int,int)",
            "org.bouncycastle.crypto.tls.CombinedHash:void ssl3Complete(org.bouncycastle.crypto.Digest,byte[],byte[],int)",
            "org.bouncycastle.crypto.tls.DTLSReliableHandshake:org.bouncycastle.crypto.tls.DTLSReliableHandshake$Message updateHandshakeMessagesDigest(org.bouncycastle.crypto.tls.DTLSReliableHandshake$Message)",
            "org.bouncycastle.crypto.tls.DeferredHash:void update(byte[],int,int)",
            "org.bouncycastle.crypto.tls.DigestInputBuffer:void updateDigest(org.bouncycastle.crypto.Digest)",
            "org.bouncycastle.crypto.tls.RecordStream:void updateHandshakeData(byte[],int,int)",
            "org.bouncycastle.crypto.tls.SSL3Mac:void update(byte[],int,int)",
            "org.bouncycastle.crypto.tls.SSL3Mac:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.tls.SSL3Mac:void reset()",
            "org.bouncycastle.crypto.tls.TlsDHEKeyExchange:byte[] generateServerKeyExchange()",
            "org.bouncycastle.crypto.tls.TlsECDHEKeyExchange:byte[] generateServerKeyExchange()",
            "org.bouncycastle.crypto.tls.TlsProtocol:byte[] getCurrentPRFHash(org.bouncycastle.crypto.tls.TlsContext,org.bouncycastle.crypto.tls.TlsHandshakeHash,byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner:void engineUpdate(byte[],int,int)",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpi:void engineUpdate(byte[],int,int)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.SignatureSpi:void engineUpdate(byte[],int,int)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.SignatureSpi:void engineUpdate(byte[],int,int)",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi:void engineUpdate(byte[],int,int)",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.PSSSignatureSpi$NullPssDigest:int doFinal(byte[],int)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.DSABase:void engineUpdate(byte[],int,int)",
            "org.bouncycastle.jcajce.provider.digest.BCMessageDigest:void engineUpdate(byte[],int,int)",
            "org.bouncycastle.jce.provider.BrokenKDF2BytesGenerator:int generateBytes(byte[],int,int)",
            "org.bouncycastle.jce.provider.OldPKCS12ParametersGenerator:byte[] generateDerivedKey(int,int)",
            "org.bouncycastle.pqc.crypto.DigestingMessageSigner:void update(byte[],int,int)",
            "org.bouncycastle.pqc.crypto.gmss.GMSSLeaf:void updateLeafCalc()",
            "org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters:void computeAuthPaths(int)",
            "org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc:void update(byte[])",
            "org.bouncycastle.pqc.crypto.gmss.GMSSRootSig:void initSign(byte[],byte[])",
            "org.bouncycastle.pqc.crypto.gmss.GMSSRootSig:void oneStep()",
            "org.bouncycastle.pqc.crypto.gmss.GMSSSigner:boolean verifySignature(byte[],byte[])",
            "org.bouncycastle.pqc.crypto.gmss.Treehash:void update(org.bouncycastle.pqc.crypto.gmss.util.GMSSRandom,byte[])",
            "org.bouncycastle.pqc.crypto.gmss.util.GMSSRandom:byte[] nextSeed(byte[])",
            "org.bouncycastle.pqc.crypto.gmss.util.WinternitzOTSVerify:byte[] Verify(byte[],byte[])",
            "org.bouncycastle.pqc.crypto.gmss.util.WinternitzOTSignature:byte[] getPublicKey()",
            "org.bouncycastle.pqc.crypto.gmss.util.WinternitzOTSignature:byte[] getSignature(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiCipher:byte[] messageEncrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiCipher:byte[] messageDecrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher:void update(byte[],int,int)",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiCipher:byte[] messageEncrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiCipher:byte[] messageDecrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiDigestCipher:void update(byte[],int,int)",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePKCSDigestCipher:void update(byte[],int,int)",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalCipher:byte[] messageEncrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalCipher:byte[] messageDecrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalDigestCipher:void update(byte[],int,int)",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.SignatureSpi:void engineUpdate(byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.tls.DigestInputBuffer:void updateDigest(org.bouncycastle.crypto.Digest)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DeferredHash:org.bouncycastle.crypto.tls.TlsHandshakeHash notifyPRFDetermined()",
            "org.bouncycastle.crypto.tls.DeferredHash:org.bouncycastle.crypto.tls.TlsHandshakeHash stopTracking()",
            "org.bouncycastle.crypto.tls.DeferredHash:org.bouncycastle.crypto.Digest forkPRFHash()",
            "org.bouncycastle.crypto.tls.DeferredHash:byte[] getFinalHash(short)",
            "org.bouncycastle.crypto.tls.DeferredHash:void checkStopBuffering()",
            "org.bouncycastle.crypto.tls.TlsDHEKeyExchange:byte[] generateServerKeyExchange()",
            "org.bouncycastle.crypto.tls.TlsECDHEKeyExchange:byte[] generateServerKeyExchange()"
        ]
    },
    "org.bouncycastle.crypto.tls.SSL3Mac:void update(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:void updateMac(org.bouncycastle.crypto.Mac,java.math.BigInteger)",
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:void updateMac(org.bouncycastle.crypto.Mac,java.lang.String)",
            "org.bouncycastle.crypto.engines.IESEngine:byte[] encryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.engines.IESEngine:byte[] decryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.generators.KDFCounterBytesGenerator:void generateNext()",
            "org.bouncycastle.crypto.generators.KDFDoublePipelineIterationBytesGenerator:void generateNext()",
            "org.bouncycastle.crypto.generators.KDFFeedbackBytesGenerator:void generateNext()",
            "org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator:void F(byte[],int,byte[],byte[],int)",
            "org.bouncycastle.crypto.io.MacInputStream:int read(byte[],int,int)",
            "org.bouncycastle.crypto.io.MacOutputStream:void write(byte[],int,int)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void initCipher()",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void reset(boolean)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void processAADBytes(byte[],int,int)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:int process(byte,byte[],int)",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:void hmac_DRBG_Update_Func(byte[],byte)",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:int generate(byte[],byte[],boolean)",
            "org.bouncycastle.crypto.tls.TlsMac:byte[] calculateMac(long,short,byte[],int,int)",
            "org.bouncycastle.crypto.tls.TlsMac:byte[] calculateMacConstantTime(long,short,byte[],int,int,int,byte[])",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineUpdate(byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.tls.SSL3Mac:int doFinal(byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.engines.IESEngine:byte[] encryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.engines.IESEngine:byte[] decryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.generators.KDFCounterBytesGenerator:void generateNext()",
            "org.bouncycastle.crypto.generators.KDFDoublePipelineIterationBytesGenerator:void generateNext()",
            "org.bouncycastle.crypto.generators.KDFFeedbackBytesGenerator:void generateNext()",
            "org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator:void F(byte[],int,byte[],byte[],int)",
            "org.bouncycastle.crypto.io.MacOutputStream:byte[] getMac()",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void initCipher()",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void calculateMac()",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:void hmac_DRBG_Update_Func(byte[],byte)",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:int generate(byte[],byte[],boolean)",
            "org.bouncycastle.crypto.tls.TlsMac:byte[] calculateMac(long,short,byte[],int,int)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:byte[] engineDoFinal()"
        ]
    },
    "org.bouncycastle.crypto.tls.SSL3Mac:void reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void reset(boolean)",
            "org.bouncycastle.crypto.tls.SSL3Mac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.tls.SSL3Mac:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.tls.TlsMac:byte[] calculateMacConstantTime(long,short,byte[],int,int,int,byte[])",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineReset()"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsDHEKeyExchange:byte[] generateServerKeyExchange()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSServerProtocol:org.bouncycastle.crypto.tls.DTLSTransport serverHandshake(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState,org.bouncycastle.crypto.tls.DTLSRecordLayer)",
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void handleHandshakeMessage(short,byte[])"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsECDHEKeyExchange:byte[] generateServerKeyExchange()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSServerProtocol:org.bouncycastle.crypto.tls.DTLSTransport serverHandshake(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState,org.bouncycastle.crypto.tls.DTLSRecordLayer)",
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void handleHandshakeMessage(short,byte[])"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsProtocol:byte[] getCurrentPRFHash(org.bouncycastle.crypto.tls.TlsContext,org.bouncycastle.crypto.tls.TlsHandshakeHash,byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:org.bouncycastle.crypto.tls.DTLSTransport clientHandshake(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,org.bouncycastle.crypto.tls.DTLSRecordLayer)",
            "org.bouncycastle.crypto.tls.DTLSServerProtocol:org.bouncycastle.crypto.tls.DTLSTransport serverHandshake(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState,org.bouncycastle.crypto.tls.DTLSRecordLayer)",
            "org.bouncycastle.crypto.tls.DTLSServerProtocol:void processCertificateVerify(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState,byte[],org.bouncycastle.crypto.tls.TlsHandshakeHash)",
            "org.bouncycastle.crypto.tls.TlsClientProtocol:void handleHandshakeMessage(short,byte[])",
            "org.bouncycastle.crypto.tls.TlsProtocol:byte[] createVerifyData(boolean)",
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void receiveCertificateVerifyMessage(java.io.ByteArrayInputStream)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner:void engineUpdate(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpi:void engineUpdate(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ecgost.SignatureSpi:void engineUpdate(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.gost.SignatureSpi:void engineUpdate(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi:void engineUpdate(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.rsa.PSSSignatureSpi$NullPssDigest:int doFinal(byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:java.math.BigInteger calculateHashForZeroKnowledgeProof(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.lang.String,org.bouncycastle.crypto.Digest)",
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:byte[] calculateMacKey(java.math.BigInteger,org.bouncycastle.crypto.Digest)",
            "org.bouncycastle.crypto.agreement.kdf.DHKEKGenerator:int generateBytes(byte[],int,int)",
            "org.bouncycastle.crypto.agreement.srp.SRP6Util:java.math.BigInteger calculateX(org.bouncycastle.crypto.Digest,java.math.BigInteger,byte[],byte[],byte[])",
            "org.bouncycastle.crypto.agreement.srp.SRP6Util:java.math.BigInteger hashPaddedPair(org.bouncycastle.crypto.Digest,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)",
            "org.bouncycastle.crypto.commitments.GeneralHashCommitter:byte[] calculateCommitment(byte[],byte[])",
            "org.bouncycastle.crypto.commitments.HashCommitter:byte[] calculateCommitment(byte[],byte[])",
            "org.bouncycastle.crypto.encodings.OAEPEncoding:void <init>(org.bouncycastle.crypto.AsymmetricBlockCipher,org.bouncycastle.crypto.Digest,org.bouncycastle.crypto.Digest,byte[])",
            "org.bouncycastle.crypto.encodings.OAEPEncoding:byte[] maskGeneratorFunction1(byte[],int,int,int)",
            "org.bouncycastle.crypto.engines.DESedeWrapEngine:byte[] calculateCMSKeyChecksum(byte[])",
            "org.bouncycastle.crypto.engines.RC2WrapEngine:byte[] calculateCMSKeyChecksum(byte[])",
            "org.bouncycastle.crypto.generators.BaseKDFBytesGenerator:int generateBytes(byte[],int,int)",
            "org.bouncycastle.crypto.generators.DSAParametersGenerator:void hash(org.bouncycastle.crypto.Digest,byte[],byte[])",
            "org.bouncycastle.crypto.generators.MGF1BytesGenerator:int generateBytes(byte[],int,int)",
            "org.bouncycastle.crypto.generators.OpenSSLPBEParametersGenerator:byte[] generateDerivedKey(int)",
            "org.bouncycastle.crypto.generators.PKCS12ParametersGenerator:byte[] generateDerivedKey(int,int)",
            "org.bouncycastle.crypto.generators.PKCS5S1ParametersGenerator:byte[] generateDerivedKey()",
            "org.bouncycastle.crypto.io.DigestOutputStream:byte[] getDigest()",
            "org.bouncycastle.crypto.macs.HMac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.HMac:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.macs.OldHMac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.OldHMac:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.prng.DigestRandomGenerator:void digestDoFinal(byte[])",
            "org.bouncycastle.crypto.prng.drbg.HashSP800DRBG:byte[] hash(byte[])",
            "org.bouncycastle.crypto.prng.drbg.Utils:byte[] hash_df(org.bouncycastle.crypto.Digest,byte[],int)",
            "org.bouncycastle.crypto.signers.DSADigestSigner:byte[] generateSignature()",
            "org.bouncycastle.crypto.signers.DSADigestSigner:boolean verifySignature(byte[])",
            "org.bouncycastle.crypto.signers.GenericSigner:byte[] generateSignature()",
            "org.bouncycastle.crypto.signers.GenericSigner:boolean verifySignature(byte[])",
            "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:void updateWithRecoveredMessage(byte[])",
            "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:byte[] generateSignature()",
            "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:boolean verifySignature(byte[])",
            "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:byte[] maskGeneratorFunction1(byte[],int,int,int)",
            "org.bouncycastle.crypto.signers.ISO9796d2Signer:byte[] generateSignature()",
            "org.bouncycastle.crypto.signers.ISO9796d2Signer:boolean verifySignature(byte[])",
            "org.bouncycastle.crypto.signers.PSSSigner:byte[] generateSignature()",
            "org.bouncycastle.crypto.signers.PSSSigner:boolean verifySignature(byte[])",
            "org.bouncycastle.crypto.signers.PSSSigner:byte[] maskGeneratorFunction1(byte[],int,int,int)",
            "org.bouncycastle.crypto.signers.RSADigestSigner:byte[] generateSignature()",
            "org.bouncycastle.crypto.signers.RSADigestSigner:boolean verifySignature(byte[])",
            "org.bouncycastle.crypto.tls.CombinedHash:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.tls.CombinedHash:void ssl3Complete(org.bouncycastle.crypto.Digest,byte[],byte[],int)",
            "org.bouncycastle.crypto.tls.DeferredHash:byte[] getFinalHash(short)",
            "org.bouncycastle.crypto.tls.SSL3Mac:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.tls.TlsDHEKeyExchange:byte[] generateServerKeyExchange()",
            "org.bouncycastle.crypto.tls.TlsECDHEKeyExchange:byte[] generateServerKeyExchange()",
            "org.bouncycastle.crypto.tls.TlsProtocol:byte[] getCurrentPRFHash(org.bouncycastle.crypto.tls.TlsContext,org.bouncycastle.crypto.tls.TlsHandshakeHash,byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner:byte[] engineSign()",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner:boolean engineVerify(byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpi:byte[] engineSign()",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpi:boolean engineVerify(byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.SignatureSpi:byte[] engineSign()",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.SignatureSpi:boolean engineVerify(byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.SignatureSpi:byte[] engineSign()",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.SignatureSpi:boolean engineVerify(byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi:byte[] engineSign()",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi:boolean engineVerify(byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.PSSSignatureSpi$NullPssDigest:int doFinal(byte[],int)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.DSABase:byte[] engineSign()",
            "org.bouncycastle.jcajce.provider.asymmetric.util.DSABase:boolean engineVerify(byte[])",
            "org.bouncycastle.jcajce.provider.digest.BCMessageDigest:byte[] engineDigest()",
            "org.bouncycastle.jce.provider.BrokenKDF2BytesGenerator:int generateBytes(byte[],int,int)",
            "org.bouncycastle.jce.provider.OldPKCS12ParametersGenerator:byte[] generateDerivedKey(int,int)",
            "org.bouncycastle.pqc.crypto.DigestingMessageSigner:byte[] generateSignature()",
            "org.bouncycastle.pqc.crypto.DigestingMessageSigner:boolean verify(byte[])",
            "org.bouncycastle.pqc.crypto.gmss.GMSSLeaf:void updateLeafCalc()",
            "org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters:void computeAuthPaths(int)",
            "org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc:void update(byte[])",
            "org.bouncycastle.pqc.crypto.gmss.GMSSRootSig:void initSign(byte[],byte[])",
            "org.bouncycastle.pqc.crypto.gmss.GMSSRootSig:void oneStep()",
            "org.bouncycastle.pqc.crypto.gmss.GMSSSigner:boolean verifySignature(byte[],byte[])",
            "org.bouncycastle.pqc.crypto.gmss.Treehash:void update(org.bouncycastle.pqc.crypto.gmss.util.GMSSRandom,byte[])",
            "org.bouncycastle.pqc.crypto.gmss.util.GMSSRandom:byte[] nextSeed(byte[])",
            "org.bouncycastle.pqc.crypto.gmss.util.WinternitzOTSVerify:byte[] Verify(byte[],byte[])",
            "org.bouncycastle.pqc.crypto.gmss.util.WinternitzOTSignature:byte[] getPublicKey()",
            "org.bouncycastle.pqc.crypto.gmss.util.WinternitzOTSignature:byte[] getSignature(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiCipher:byte[] messageEncrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiCipher:byte[] messageDecrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher:byte[] messageEncrypt()",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiCipher:byte[] messageEncrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiCipher:byte[] messageDecrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiDigestCipher:byte[] messageEncrypt()",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePKCSDigestCipher:byte[] messageEncrypt()",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalCipher:byte[] messageEncrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalCipher:byte[] messageDecrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalDigestCipher:byte[] messageEncrypt()",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.SignatureSpi:byte[] engineSign()",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.SignatureSpi:boolean engineVerify(byte[])"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.util.DSABase:void engineUpdate(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.digest.BCMessageDigest:void engineUpdate(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.provider.OldPKCS12ParametersGenerator:byte[] generateDerivedKey(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.OldPKCS12ParametersGenerator:org.bouncycastle.crypto.CipherParameters generateDerivedParameters(int)",
            "org.bouncycastle.jce.provider.OldPKCS12ParametersGenerator:org.bouncycastle.crypto.CipherParameters generateDerivedParameters(int,int)",
            "org.bouncycastle.jce.provider.OldPKCS12ParametersGenerator:org.bouncycastle.crypto.CipherParameters generateDerivedMacParameters(int)"
        ]
    },
    "org.bouncycastle.pqc.crypto.DigestingMessageSigner:void update(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.io.SignerInputStream:int read(byte[],int,int)",
            "org.bouncycastle.crypto.io.SignerOutputStream:void write(byte[],int,int)",
            "org.bouncycastle.crypto.tls.SignerInputBuffer:void updateSigner(org.bouncycastle.crypto.Signer)",
            "org.bouncycastle.crypto.tls.TlsDHEKeyExchange:org.bouncycastle.crypto.Signer initVerifyer(org.bouncycastle.crypto.tls.TlsSigner,org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.tls.SecurityParameters)",
            "org.bouncycastle.crypto.tls.TlsDSASigner:byte[] generateRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])",
            "org.bouncycastle.crypto.tls.TlsDSASigner:boolean verifyRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,byte[],org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])",
            "org.bouncycastle.crypto.tls.TlsECDHEKeyExchange:org.bouncycastle.crypto.Signer initVerifyer(org.bouncycastle.crypto.tls.TlsSigner,org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.tls.SecurityParameters)",
            "org.bouncycastle.crypto.tls.TlsRSASigner:byte[] generateRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])",
            "org.bouncycastle.crypto.tls.TlsRSASigner:boolean verifyRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,byte[],org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])",
            "org.bouncycastle.crypto.tls.TlsSRPKeyExchange:org.bouncycastle.crypto.Signer initVerifyer(org.bouncycastle.crypto.tls.TlsSigner,org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.tls.SecurityParameters)"
        ]
    },
    "org.bouncycastle.pqc.crypto.gmss.GMSSLeaf:void updateLeafCalc()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.crypto.gmss.GMSSLeaf:org.bouncycastle.pqc.crypto.gmss.GMSSLeaf nextLeaf()"
        ]
    },
    "org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters:void computeAuthPaths(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters:void updateKey(int)"
        ]
    },
    "org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc:void update(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.crypto.gmss.GMSSKeyPairGenerator:org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc generateCurrentAuthpathAndRoot(byte[],java.util.Vector,byte[],int)",
            "org.bouncycastle.pqc.crypto.gmss.GMSSKeyPairGenerator:org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc generateNextAuthpathAndRoot(java.util.Vector,byte[],int)",
            "org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc:void update(byte[],byte[])"
        ]
    },
    "org.bouncycastle.pqc.crypto.gmss.GMSSRootSig:void initSign(byte[],byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters:void <init>(int[],byte[][],byte[][],byte[][][],byte[][][],byte[][][],org.bouncycastle.pqc.crypto.gmss.Treehash[][],org.bouncycastle.pqc.crypto.gmss.Treehash[][],java.util.Vector[],java.util.Vector[],java.util.Vector[][],java.util.Vector[][],org.bouncycastle.pqc.crypto.gmss.GMSSLeaf[],org.bouncycastle.pqc.crypto.gmss.GMSSLeaf[],org.bouncycastle.pqc.crypto.gmss.GMSSLeaf[],int[],byte[][],org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc[],byte[][],org.bouncycastle.pqc.crypto.gmss.GMSSRootSig[],org.bouncycastle.pqc.crypto.gmss.GMSSParameters,org.bouncycastle.pqc.crypto.gmss.GMSSDigestProvider)",
            "org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters:void nextTree(int)"
        ]
    },
    "org.bouncycastle.pqc.crypto.gmss.GMSSRootSig:void oneStep()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.crypto.gmss.GMSSRootSig:boolean updateSign()"
        ]
    },
    "org.bouncycastle.pqc.crypto.gmss.GMSSSigner:boolean verifySignature(byte[],byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.crypto.DigestingMessageSigner:boolean verify(byte[])"
        ]
    },
    "org.bouncycastle.pqc.crypto.gmss.Treehash:void update(org.bouncycastle.pqc.crypto.gmss.util.GMSSRandom,byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters:void nextTree(int)",
            "org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters:void updateKey(int)",
            "org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters:void computeAuthPaths(int)"
        ]
    },
    "org.bouncycastle.pqc.crypto.gmss.util.GMSSRandom:byte[] nextSeed(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.crypto.gmss.GMSSKeyPairGenerator:org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc generateCurrentAuthpathAndRoot(byte[],java.util.Vector,byte[],int)",
            "org.bouncycastle.pqc.crypto.gmss.GMSSKeyPairGenerator:org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc generateNextAuthpathAndRoot(java.util.Vector,byte[],int)",
            "org.bouncycastle.pqc.crypto.gmss.GMSSKeyPairGenerator:void initialize(org.bouncycastle.crypto.KeyGenerationParameters)",
            "org.bouncycastle.pqc.crypto.gmss.GMSSLeaf:void initLeafCalc(byte[])",
            "org.bouncycastle.pqc.crypto.gmss.GMSSLeaf:void updateLeafCalc()",
            "org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters:void <init>(int[],byte[][],byte[][],byte[][][],byte[][][],byte[][][],org.bouncycastle.pqc.crypto.gmss.Treehash[][],org.bouncycastle.pqc.crypto.gmss.Treehash[][],java.util.Vector[],java.util.Vector[],java.util.Vector[][],java.util.Vector[][],org.bouncycastle.pqc.crypto.gmss.GMSSLeaf[],org.bouncycastle.pqc.crypto.gmss.GMSSLeaf[],org.bouncycastle.pqc.crypto.gmss.GMSSLeaf[],int[],byte[][],org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc[],byte[][],org.bouncycastle.pqc.crypto.gmss.GMSSRootSig[],org.bouncycastle.pqc.crypto.gmss.GMSSParameters,org.bouncycastle.pqc.crypto.gmss.GMSSDigestProvider)",
            "org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters:void nextTree(int)",
            "org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters:void computeAuthPaths(int)",
            "org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters:void updateNextNextAuthRoot(int)",
            "org.bouncycastle.pqc.crypto.gmss.GMSSRootSig:void oneStep()",
            "org.bouncycastle.pqc.crypto.gmss.GMSSSigner:void initSign()",
            "org.bouncycastle.pqc.crypto.gmss.Treehash:void update(org.bouncycastle.pqc.crypto.gmss.util.GMSSRandom,byte[])",
            "org.bouncycastle.pqc.crypto.gmss.Treehash:void updateNextSeed(org.bouncycastle.pqc.crypto.gmss.util.GMSSRandom)",
            "org.bouncycastle.pqc.crypto.gmss.util.WinternitzOTSignature:void <init>(byte[],org.bouncycastle.crypto.Digest,int)"
        ]
    },
    "org.bouncycastle.pqc.crypto.gmss.util.WinternitzOTSVerify:byte[] Verify(byte[],byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.crypto.gmss.GMSSKeyPairGenerator:org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc generateCurrentAuthpathAndRoot(byte[],java.util.Vector,byte[],int)",
            "org.bouncycastle.pqc.crypto.gmss.GMSSSigner:boolean verifySignature(byte[],byte[])"
        ]
    },
    "org.bouncycastle.pqc.crypto.gmss.util.WinternitzOTSignature:byte[] getPublicKey()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.crypto.gmss.GMSSKeyPairGenerator:org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc generateCurrentAuthpathAndRoot(byte[],java.util.Vector,byte[],int)",
            "org.bouncycastle.pqc.crypto.gmss.GMSSKeyPairGenerator:org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc generateNextAuthpathAndRoot(java.util.Vector,byte[],int)",
            "org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters:void computeAuthPaths(int)",
            "org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters:void updateNextNextAuthRoot(int)"
        ]
    },
    "org.bouncycastle.pqc.crypto.gmss.util.WinternitzOTSignature:byte[] getSignature(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.crypto.gmss.GMSSKeyPairGenerator:org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc generateCurrentAuthpathAndRoot(byte[],java.util.Vector,byte[],int)",
            "org.bouncycastle.pqc.crypto.gmss.GMSSSigner:byte[] generateSignature(byte[])"
        ]
    },
    "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiCipher:byte[] messageEncrypt(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher:byte[] messageEncrypt()",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiDigestCipher:byte[] messageEncrypt()",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePKCSDigestCipher:byte[] messageEncrypt()",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalDigestCipher:byte[] messageEncrypt()",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceFujisakiCipherSpi:byte[] doFinal(byte[],int,int)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceFujisakiCipherSpi:byte[] messageEncrypt(byte[])"
        ]
    },
    "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiCipher:byte[] messageDecrypt(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher:byte[] messageDecrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiDigestCipher:byte[] messageDecrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePKCSDigestCipher:byte[] messageDecrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalDigestCipher:byte[] messageDecrypt(byte[])",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceFujisakiCipherSpi:byte[] doFinal(byte[],int,int)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceFujisakiCipherSpi:byte[] messageDecrypt(byte[])"
        ]
    },
    "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher:void update(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiCipher:byte[] messageDecrypt(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher:byte[] messageDecrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiDigestCipher:byte[] messageDecrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePKCSDigestCipher:byte[] messageDecrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalDigestCipher:byte[] messageDecrypt(byte[])",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKobaraImaiCipherSpi:byte[] doFinal(byte[],int,int)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKobaraImaiCipherSpi:byte[] messageDecrypt()"
        ]
    },
    "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiDigestCipher:void update(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.crypto.mceliece.McEliecePKCSDigestCipher:void update(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalCipher:byte[] messageDecrypt(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher:byte[] messageDecrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiDigestCipher:byte[] messageDecrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePKCSDigestCipher:byte[] messageDecrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalDigestCipher:byte[] messageDecrypt(byte[])",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McEliecePointchevalCipherSpi:byte[] doFinal(byte[],int,int)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McEliecePointchevalCipherSpi:byte[] messageDecrypt(byte[])"
        ]
    },
    "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalDigestCipher:void update(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.jcajce.provider.rainbow.SignatureSpi:void engineUpdate(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.digests.GOST3411Digest:int doFinal(byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:java.math.BigInteger calculateHashForZeroKnowledgeProof(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.lang.String,org.bouncycastle.crypto.Digest)",
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:byte[] calculateMacKey(java.math.BigInteger,org.bouncycastle.crypto.Digest)",
            "org.bouncycastle.crypto.agreement.kdf.DHKEKGenerator:int generateBytes(byte[],int,int)",
            "org.bouncycastle.crypto.agreement.srp.SRP6Util:java.math.BigInteger calculateX(org.bouncycastle.crypto.Digest,java.math.BigInteger,byte[],byte[],byte[])",
            "org.bouncycastle.crypto.agreement.srp.SRP6Util:java.math.BigInteger hashPaddedPair(org.bouncycastle.crypto.Digest,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)",
            "org.bouncycastle.crypto.commitments.GeneralHashCommitter:byte[] calculateCommitment(byte[],byte[])",
            "org.bouncycastle.crypto.commitments.HashCommitter:byte[] calculateCommitment(byte[],byte[])",
            "org.bouncycastle.crypto.digests.NonMemoableDigest:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.digests.ShortenedDigest:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.encodings.OAEPEncoding:void <init>(org.bouncycastle.crypto.AsymmetricBlockCipher,org.bouncycastle.crypto.Digest,org.bouncycastle.crypto.Digest,byte[])",
            "org.bouncycastle.crypto.encodings.OAEPEncoding:byte[] maskGeneratorFunction1(byte[],int,int,int)",
            "org.bouncycastle.crypto.engines.DESedeWrapEngine:byte[] calculateCMSKeyChecksum(byte[])",
            "org.bouncycastle.crypto.engines.RC2WrapEngine:byte[] calculateCMSKeyChecksum(byte[])",
            "org.bouncycastle.crypto.generators.BaseKDFBytesGenerator:int generateBytes(byte[],int,int)",
            "org.bouncycastle.crypto.generators.DSAParametersGenerator:void hash(org.bouncycastle.crypto.Digest,byte[],byte[])",
            "org.bouncycastle.crypto.generators.MGF1BytesGenerator:int generateBytes(byte[],int,int)",
            "org.bouncycastle.crypto.generators.OpenSSLPBEParametersGenerator:byte[] generateDerivedKey(int)",
            "org.bouncycastle.crypto.generators.PKCS12ParametersGenerator:byte[] generateDerivedKey(int,int)",
            "org.bouncycastle.crypto.generators.PKCS5S1ParametersGenerator:byte[] generateDerivedKey()",
            "org.bouncycastle.crypto.io.DigestOutputStream:byte[] getDigest()",
            "org.bouncycastle.crypto.macs.HMac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.HMac:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.macs.OldHMac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.OldHMac:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.prng.DigestRandomGenerator:void digestDoFinal(byte[])",
            "org.bouncycastle.crypto.prng.drbg.HashSP800DRBG:byte[] hash(byte[])",
            "org.bouncycastle.crypto.prng.drbg.Utils:byte[] hash_df(org.bouncycastle.crypto.Digest,byte[],int)",
            "org.bouncycastle.crypto.signers.DSADigestSigner:byte[] generateSignature()",
            "org.bouncycastle.crypto.signers.DSADigestSigner:boolean verifySignature(byte[])",
            "org.bouncycastle.crypto.signers.GenericSigner:byte[] generateSignature()",
            "org.bouncycastle.crypto.signers.GenericSigner:boolean verifySignature(byte[])",
            "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:void updateWithRecoveredMessage(byte[])",
            "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:byte[] generateSignature()",
            "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:boolean verifySignature(byte[])",
            "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:byte[] maskGeneratorFunction1(byte[],int,int,int)",
            "org.bouncycastle.crypto.signers.ISO9796d2Signer:byte[] generateSignature()",
            "org.bouncycastle.crypto.signers.ISO9796d2Signer:boolean verifySignature(byte[])",
            "org.bouncycastle.crypto.signers.PSSSigner:byte[] generateSignature()",
            "org.bouncycastle.crypto.signers.PSSSigner:boolean verifySignature(byte[])",
            "org.bouncycastle.crypto.signers.PSSSigner:byte[] maskGeneratorFunction1(byte[],int,int,int)",
            "org.bouncycastle.crypto.signers.RSADigestSigner:byte[] generateSignature()",
            "org.bouncycastle.crypto.signers.RSADigestSigner:boolean verifySignature(byte[])",
            "org.bouncycastle.crypto.tls.CombinedHash:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.tls.CombinedHash:void ssl3Complete(org.bouncycastle.crypto.Digest,byte[],byte[],int)",
            "org.bouncycastle.crypto.tls.DeferredHash:byte[] getFinalHash(short)",
            "org.bouncycastle.crypto.tls.SSL3Mac:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.tls.TlsDHEKeyExchange:byte[] generateServerKeyExchange()",
            "org.bouncycastle.crypto.tls.TlsECDHEKeyExchange:byte[] generateServerKeyExchange()",
            "org.bouncycastle.crypto.tls.TlsProtocol:byte[] getCurrentPRFHash(org.bouncycastle.crypto.tls.TlsContext,org.bouncycastle.crypto.tls.TlsHandshakeHash,byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner:byte[] engineSign()",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner:boolean engineVerify(byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpi:byte[] engineSign()",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpi:boolean engineVerify(byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.SignatureSpi:byte[] engineSign()",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.SignatureSpi:boolean engineVerify(byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.SignatureSpi:byte[] engineSign()",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.SignatureSpi:boolean engineVerify(byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi:byte[] engineSign()",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi:boolean engineVerify(byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.PSSSignatureSpi$NullPssDigest:int doFinal(byte[],int)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.DSABase:byte[] engineSign()",
            "org.bouncycastle.jcajce.provider.asymmetric.util.DSABase:boolean engineVerify(byte[])",
            "org.bouncycastle.jcajce.provider.digest.BCMessageDigest:byte[] engineDigest()",
            "org.bouncycastle.jce.provider.BrokenKDF2BytesGenerator:int generateBytes(byte[],int,int)",
            "org.bouncycastle.jce.provider.OldPKCS12ParametersGenerator:byte[] generateDerivedKey(int,int)",
            "org.bouncycastle.pqc.crypto.DigestingMessageSigner:byte[] generateSignature()",
            "org.bouncycastle.pqc.crypto.DigestingMessageSigner:boolean verify(byte[])",
            "org.bouncycastle.pqc.crypto.gmss.GMSSLeaf:void updateLeafCalc()",
            "org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters:void computeAuthPaths(int)",
            "org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc:void update(byte[])",
            "org.bouncycastle.pqc.crypto.gmss.GMSSRootSig:void initSign(byte[],byte[])",
            "org.bouncycastle.pqc.crypto.gmss.GMSSRootSig:void oneStep()",
            "org.bouncycastle.pqc.crypto.gmss.GMSSSigner:boolean verifySignature(byte[],byte[])",
            "org.bouncycastle.pqc.crypto.gmss.Treehash:void update(org.bouncycastle.pqc.crypto.gmss.util.GMSSRandom,byte[])",
            "org.bouncycastle.pqc.crypto.gmss.util.GMSSRandom:byte[] nextSeed(byte[])",
            "org.bouncycastle.pqc.crypto.gmss.util.WinternitzOTSVerify:byte[] Verify(byte[],byte[])",
            "org.bouncycastle.pqc.crypto.gmss.util.WinternitzOTSignature:byte[] getPublicKey()",
            "org.bouncycastle.pqc.crypto.gmss.util.WinternitzOTSignature:byte[] getSignature(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiCipher:byte[] messageEncrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiCipher:byte[] messageDecrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher:byte[] messageEncrypt()",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiCipher:byte[] messageEncrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiCipher:byte[] messageDecrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiDigestCipher:byte[] messageEncrypt()",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePKCSDigestCipher:byte[] messageEncrypt()",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalCipher:byte[] messageEncrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalCipher:byte[] messageDecrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalDigestCipher:byte[] messageEncrypt()",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.SignatureSpi:byte[] engineSign()",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.SignatureSpi:boolean engineVerify(byte[])"
        ]
    },
    "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:byte[] engineGetIV()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.agreement.jpake.JPAKEParticipant:org.bouncycastle.crypto.agreement.jpake.JPAKERound3Payload createRound3PayloadToSend(java.math.BigInteger)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.examples.JPAKEExample:void main(java.lang.String[])"
        ]
    },
    "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:void validateMacTag(java.lang.String,java.lang.String,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,org.bouncycastle.crypto.Digest,java.math.BigInteger)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.agreement.jpake.JPAKEParticipant:void validateRound3PayloadReceived(org.bouncycastle.crypto.agreement.jpake.JPAKERound3Payload,java.math.BigInteger)"
        ]
    },
    "org.bouncycastle.crypto.generators.HKDFBytesGenerator:void init(org.bouncycastle.crypto.DerivationParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.engines.IESEngine:byte[] processBlock(byte[],int,int)",
            "org.bouncycastle.crypto.kems.ECIESKeyEncapsulation:org.bouncycastle.crypto.CipherParameters encrypt(byte[],int,int)",
            "org.bouncycastle.crypto.kems.ECIESKeyEncapsulation:org.bouncycastle.crypto.CipherParameters decrypt(byte[],int,int,int)",
            "org.bouncycastle.crypto.kems.RSAKeyEncapsulation:org.bouncycastle.crypto.CipherParameters encrypt(byte[],int,int)",
            "org.bouncycastle.crypto.kems.RSAKeyEncapsulation:org.bouncycastle.crypto.CipherParameters decrypt(byte[],int,int,int)",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi:javax.crypto.SecretKey engineGenerateSecret(java.lang.String)"
        ]
    },
    "org.bouncycastle.crypto.generators.HKDFBytesGenerator:int generateBytes(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.engines.IESEngine:byte[] encryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.engines.IESEngine:byte[] decryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.kems.ECIESKeyEncapsulation:org.bouncycastle.crypto.CipherParameters encrypt(byte[],int,int)",
            "org.bouncycastle.crypto.kems.ECIESKeyEncapsulation:org.bouncycastle.crypto.CipherParameters decrypt(byte[],int,int,int)",
            "org.bouncycastle.crypto.kems.RSAKeyEncapsulation:org.bouncycastle.crypto.CipherParameters encrypt(byte[],int,int)",
            "org.bouncycastle.crypto.kems.RSAKeyEncapsulation:org.bouncycastle.crypto.CipherParameters decrypt(byte[],int,int,int)",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi:javax.crypto.SecretKey engineGenerateSecret(java.lang.String)"
        ]
    },
    "org.bouncycastle.crypto.generators.KDFCounterBytesGenerator:int generateBytes(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.engines.IESEngine:byte[] encryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.engines.IESEngine:byte[] decryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.kems.ECIESKeyEncapsulation:org.bouncycastle.crypto.CipherParameters encrypt(byte[],int,int)",
            "org.bouncycastle.crypto.kems.ECIESKeyEncapsulation:org.bouncycastle.crypto.CipherParameters decrypt(byte[],int,int,int)",
            "org.bouncycastle.crypto.kems.RSAKeyEncapsulation:org.bouncycastle.crypto.CipherParameters encrypt(byte[],int,int)",
            "org.bouncycastle.crypto.kems.RSAKeyEncapsulation:org.bouncycastle.crypto.CipherParameters decrypt(byte[],int,int,int)",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi:javax.crypto.SecretKey engineGenerateSecret(java.lang.String)"
        ]
    },
    "org.bouncycastle.crypto.generators.KDFDoublePipelineIterationBytesGenerator:int generateBytes(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.engines.IESEngine:byte[] encryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.engines.IESEngine:byte[] decryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.kems.ECIESKeyEncapsulation:org.bouncycastle.crypto.CipherParameters encrypt(byte[],int,int)",
            "org.bouncycastle.crypto.kems.ECIESKeyEncapsulation:org.bouncycastle.crypto.CipherParameters decrypt(byte[],int,int,int)",
            "org.bouncycastle.crypto.kems.RSAKeyEncapsulation:org.bouncycastle.crypto.CipherParameters encrypt(byte[],int,int)",
            "org.bouncycastle.crypto.kems.RSAKeyEncapsulation:org.bouncycastle.crypto.CipherParameters decrypt(byte[],int,int,int)",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi:javax.crypto.SecretKey engineGenerateSecret(java.lang.String)"
        ]
    },
    "org.bouncycastle.crypto.generators.KDFFeedbackBytesGenerator:int generateBytes(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.engines.IESEngine:byte[] encryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.engines.IESEngine:byte[] decryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.kems.ECIESKeyEncapsulation:org.bouncycastle.crypto.CipherParameters encrypt(byte[],int,int)",
            "org.bouncycastle.crypto.kems.ECIESKeyEncapsulation:org.bouncycastle.crypto.CipherParameters decrypt(byte[],int,int,int)",
            "org.bouncycastle.crypto.kems.RSAKeyEncapsulation:org.bouncycastle.crypto.CipherParameters encrypt(byte[],int,int)",
            "org.bouncycastle.crypto.kems.RSAKeyEncapsulation:org.bouncycastle.crypto.CipherParameters decrypt(byte[],int,int,int)",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi:javax.crypto.SecretKey engineGenerateSecret(java.lang.String)"
        ]
    },
    "org.bouncycastle.crypto.modes.EAXBlockCipher:int processByte(byte,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$AEADGenericBlockCipher:int processByte(byte,byte[],int)"
        ]
    },
    "org.bouncycastle.crypto.modes.EAXBlockCipher:int processBytes(byte[],int,int,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.io.CipherInputStream:int nextChunk()",
            "org.bouncycastle.crypto.io.CipherOutputStream:void write(byte[],int,int)",
            "org.bouncycastle.crypto.tls.TlsAEADCipher:byte[] encodePlaintext(long,short,byte[],int,int)",
            "org.bouncycastle.crypto.tls.TlsAEADCipher:byte[] decodeCiphertext(long,short,byte[],int,int)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$AEADGenericBlockCipher:int processBytes(byte[],int,int,byte[],int)"
        ]
    },
    "org.bouncycastle.crypto.signers.DSASigner:java.math.BigInteger[] generateSignature(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.signers.DSADigestSigner:byte[] generateSignature()",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner:byte[] engineSign()",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpi:byte[] engineSign()",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.SignatureSpi:byte[] engineSign()",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.SignatureSpi:byte[] engineSign()",
            "org.bouncycastle.jcajce.provider.asymmetric.util.DSABase:byte[] engineSign()"
        ]
    },
    "org.bouncycastle.crypto.signers.ECDSASigner:java.math.BigInteger[] generateSignature(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.signers.DSADigestSigner:byte[] generateSignature()",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner:byte[] engineSign()",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpi:byte[] engineSign()",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.SignatureSpi:byte[] engineSign()",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.SignatureSpi:byte[] engineSign()",
            "org.bouncycastle.jcajce.provider.asymmetric.util.DSABase:byte[] engineSign()"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsNullCipher:byte[] encodePlaintext(long,short,byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSRecordLayer:void sendRecord(short,byte[],int,int)",
            "org.bouncycastle.crypto.tls.RecordStream:void writeRecord(short,byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsNullCipher:byte[] decodeCiphertext(long,short,byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSRecordLayer:int receive(byte[],int,int,int)",
            "org.bouncycastle.crypto.tls.RecordStream:byte[] decodeAndVerify(short,java.io.InputStream,int)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsStreamCipher:void checkMAC(long,short,byte[],int,int,byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsStreamCipher:byte[] decodeCiphertext(long,short,byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsUtils:byte[] PRF(org.bouncycastle.crypto.tls.TlsContext,byte[],java.lang.String,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.AbstractTlsContext:byte[] exportKeyingMaterial(java.lang.String,byte[],int)",
            "org.bouncycastle.crypto.tls.TlsUtils:byte[] calculateKeyBlock(org.bouncycastle.crypto.tls.TlsContext,int)",
            "org.bouncycastle.crypto.tls.TlsUtils:byte[] calculateMasterSecret(org.bouncycastle.crypto.tls.TlsContext,byte[])",
            "org.bouncycastle.crypto.tls.TlsUtils:byte[] calculateVerifyData(org.bouncycastle.crypto.tls.TlsContext,java.lang.String,byte[])"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsUtils:byte[] PRF_legacy(byte[],byte[],byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsUtils:byte[] PRF(org.bouncycastle.crypto.tls.TlsContext,byte[],java.lang.String,byte[],int)"
        ]
    },
    "org.bouncycastle.crypto.kems.ECIESKeyEncapsulation:org.bouncycastle.crypto.CipherParameters encrypt(byte[],int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.kems.ECIESKeyEncapsulation:org.bouncycastle.crypto.CipherParameters decrypt(byte[],int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.kems.RSAKeyEncapsulation:org.bouncycastle.crypto.CipherParameters encrypt(byte[],int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.kems.RSAKeyEncapsulation:org.bouncycastle.crypto.CipherParameters decrypt(byte[],int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator:org.bouncycastle.crypto.CipherParameters generateDerivedMacParameters(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.generators.SCrypt:byte[] SingleIterationPBKDF2(byte[],byte[],int)",
            "org.bouncycastle.jcajce.provider.symmetric.util.PBE$Util:org.bouncycastle.crypto.CipherParameters makePBEMacParameters(org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey,java.security.spec.AlgorithmParameterSpec)",
            "org.bouncycastle.jcajce.provider.symmetric.util.PBE$Util:org.bouncycastle.crypto.CipherParameters makePBEMacParameters(javax.crypto.spec.PBEKeySpec,int,int,int)",
            "org.bouncycastle.jce.provider.BrokenPBE$Util:org.bouncycastle.crypto.CipherParameters makePBEMacParameters(org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey,java.security.spec.AlgorithmParameterSpec,int,int,int)"
        ]
    },
    "org.bouncycastle.jce.provider.BrokenPBE$Util:org.bouncycastle.crypto.CipherParameters makePBEParameters(org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey,java.security.spec.AlgorithmParameterSpec,int,int,java.lang.String,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)"
        ]
    },
    "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:void <init>(org.bouncycastle.crypto.Mac,int,org.bouncycastle.crypto.prng.EntropySource,byte[],byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.prng.SP800SecureRandomBuilder$HMacDRBGProvider:org.bouncycastle.crypto.prng.drbg.SP80090DRBG get(org.bouncycastle.crypto.prng.EntropySource)"
        ]
    },
    "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:void reseed(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.prng.SP800SecureRandom:void nextBytes(byte[])",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:int generate(byte[],byte[],boolean)"
        ]
    },
    "org.bouncycastle.crypto.tls.DefaultTlsCipherFactory:org.bouncycastle.crypto.tls.TlsNullCipher createNullCipher(org.bouncycastle.crypto.tls.TlsContext,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DefaultTlsCipherFactory:org.bouncycastle.crypto.tls.TlsCipher createCipher(org.bouncycastle.crypto.tls.TlsContext,int,int)"
        ]
    },
    "org.bouncycastle.crypto.io.CipherInputStream:int read()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2InputStream:int bsR(int)",
            "org.bouncycastle.apache.bzip2.CBZip2InputStream:void getAndMoveToFrontDecode()",
            "org.bouncycastle.asn1.ASN1InputStream:int readTagNumber(java.io.InputStream,int)",
            "org.bouncycastle.asn1.ASN1InputStream:int readLength(java.io.InputStream,int)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1Encodable readObject()",
            "org.bouncycastle.asn1.BERGenerator:void writeBERBody(java.io.InputStream)",
            "org.bouncycastle.asn1.ConstructedOctetStream:int read()",
            "org.bouncycastle.asn1.DERBitString:org.bouncycastle.asn1.DERBitString fromInputStream(int,java.io.InputStream)",
            "org.bouncycastle.asn1.DefiniteLengthInputStream:int read()",
            "org.bouncycastle.asn1.IndefiniteLengthInputStream:void <init>(java.io.InputStream,int)",
            "org.bouncycastle.asn1.IndefiniteLengthInputStream:int read(byte[],int,int)",
            "org.bouncycastle.asn1.IndefiniteLengthInputStream:int read()",
            "org.bouncycastle.crypto.io.DigestInputStream:int read()",
            "org.bouncycastle.crypto.io.MacInputStream:int read()",
            "org.bouncycastle.crypto.io.SignerInputStream:int read()",
            "org.bouncycastle.crypto.parsers.ECIESPublicKeyParser:org.bouncycastle.crypto.params.AsymmetricKeyParameter readKey(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:short readUint8(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:int readUint16(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:int readUint24(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:long readUint32(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:long readUint48(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:org.bouncycastle.crypto.tls.ProtocolVersion readVersion(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:int readVersionRaw(java.io.InputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PEMUtil:java.lang.String readLine(java.io.InputStream)",
            "org.bouncycastle.jce.provider.PEMUtil:java.lang.String readLine(java.io.InputStream)",
            "org.bouncycastle.jce.provider.X509AttrCertParser:java.lang.Object engineRead()",
            "org.bouncycastle.jce.provider.X509CRLParser:java.lang.Object engineRead()",
            "org.bouncycastle.jce.provider.X509CertPairParser:java.lang.Object engineRead()",
            "org.bouncycastle.jce.provider.X509CertParser:java.lang.Object engineRead()",
            "org.bouncycastle.util.io.TeeInputStream:int read()"
        ]
    },
    "org.bouncycastle.crypto.io.CipherInputStream:int read(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ConstructedOctetStream:int read(byte[],int,int)",
            "org.bouncycastle.asn1.DefiniteLengthInputStream:int read(byte[],int,int)",
            "org.bouncycastle.asn1.IndefiniteLengthInputStream:int read(byte[],int,int)",
            "org.bouncycastle.crypto.io.CipherInputStream:int read(byte[])",
            "org.bouncycastle.crypto.io.DigestInputStream:int read(byte[],int,int)",
            "org.bouncycastle.crypto.io.MacInputStream:int read(byte[],int,int)",
            "org.bouncycastle.crypto.io.SignerInputStream:int read(byte[],int,int)",
            "org.bouncycastle.crypto.parsers.DHIESPublicKeyParser:org.bouncycastle.crypto.params.AsymmetricKeyParameter readKey(java.io.InputStream)",
            "org.bouncycastle.crypto.parsers.ECIESPublicKeyParser:org.bouncycastle.crypto.params.AsymmetricKeyParameter readKey(java.io.InputStream)",
            "org.bouncycastle.util.io.Streams:void drain(java.io.InputStream)",
            "org.bouncycastle.util.io.Streams:int readFully(java.io.InputStream,byte[],int,int)",
            "org.bouncycastle.util.io.Streams:void pipeAll(java.io.InputStream,java.io.OutputStream)",
            "org.bouncycastle.util.io.Streams:long pipeAllLimited(java.io.InputStream,long,java.io.OutputStream)",
            "org.bouncycastle.util.io.TeeInputStream:int read(byte[],int,int)"
        ]
    },
    "org.bouncycastle.asn1.ASN1OutputStream:void write(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1OutputStream:void writeTag(int,int)"
        ]
    },
    "org.bouncycastle.crypto.io.CipherOutputStream:void write(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1OutputStream:void write(byte[])",
            "org.bouncycastle.asn1.DERGenerator:void writeDEREncoded(java.io.OutputStream,int,byte[])",
            "org.bouncycastle.crypto.tls.CertificateRequest:void encode(java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.HeartbeatMessage:void encode(org.bouncycastle.crypto.tls.TlsContext,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.OCSPStatusRequest:void encode(java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.RecordStream:void writeRecord(short,byte[],int,int)",
            "org.bouncycastle.crypto.tls.TlsRSAUtils:byte[] generateEncryptedPreMasterSecret(org.bouncycastle.crypto.tls.TlsContext,org.bouncycastle.crypto.params.RSAKeyParameters,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeOpaque8(byte[],java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeOpaque16(byte[],java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeOpaque24(byte[],java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.URLAndHash:void encode(java.io.OutputStream)",
            "org.bouncycastle.jcajce.io.CipherOutputStream:void write(byte[],int,int)",
            "org.bouncycastle.jcajce.io.CipherOutputStream:void close()",
            "org.bouncycastle.util.io.TeeOutputStream:void write(byte[])"
        ]
    },
    "org.bouncycastle.crypto.tls.CertificateURL$ListBuffer16:void encodeTo(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.CertificateURL:void encode(java.io.OutputStream)"
        ]
    },
    "org.bouncycastle.util.io.BufferingOutputStream:void write(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1OutputStream:void write(byte[],int,int)",
            "org.bouncycastle.crypto.io.CipherOutputStream:void write(byte[],int,int)",
            "org.bouncycastle.crypto.io.CipherOutputStream:void close()",
            "org.bouncycastle.crypto.tls.CertificateURL$ListBuffer16:void encodeTo(java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.RecordStream:byte[] decodeAndVerify(short,java.io.InputStream,int)",
            "org.bouncycastle.crypto.tls.RecordStream:void writeRecord(short,byte[],int,int)",
            "org.bouncycastle.util.io.BufferingOutputStream:void write(byte[],int,int)",
            "org.bouncycastle.util.io.BufferingOutputStream:void flush()",
            "org.bouncycastle.util.io.Streams:void pipeAll(java.io.InputStream,java.io.OutputStream)",
            "org.bouncycastle.util.io.Streams:long pipeAllLimited(java.io.InputStream,long,java.io.OutputStream)",
            "org.bouncycastle.util.io.TeeInputStream:int read(byte[],int,int)",
            "org.bouncycastle.util.io.TeeOutputStream:void write(byte[],int,int)"
        ]
    },
    "org.bouncycastle.util.io.BufferingOutputStream:void flush()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void flush()",
            "org.bouncycastle.asn1.ASN1OutputStream:void flush()",
            "org.bouncycastle.crypto.io.CipherOutputStream:void flush()",
            "org.bouncycastle.crypto.tls.RecordStream:byte[] decodeAndVerify(short,java.io.InputStream,int)",
            "org.bouncycastle.crypto.tls.RecordStream:void writeRecord(short,byte[],int,int)",
            "org.bouncycastle.crypto.tls.RecordStream:void flush()",
            "org.bouncycastle.jcajce.io.CipherOutputStream:void flush()",
            "org.bouncycastle.util.io.BufferingOutputStream:void write(byte[],int,int)",
            "org.bouncycastle.util.io.BufferingOutputStream:void write(int)",
            "org.bouncycastle.util.io.BufferingOutputStream:void close()",
            "org.bouncycastle.util.io.TeeOutputStream:void flush()"
        ]
    },
    "org.bouncycastle.util.io.Streams:void pipeAll(java.io.InputStream,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.HeartbeatMessage:org.bouncycastle.crypto.tls.HeartbeatMessage parse(java.io.InputStream)",
            "org.bouncycastle.util.io.Streams:byte[] readAll(java.io.InputStream)"
        ]
    },
    "org.bouncycastle.util.io.Streams:long pipeAllLimited(java.io.InputStream,long,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.util.io.Streams:byte[] readAllLimited(java.io.InputStream,int)"
        ]
    },
    "org.bouncycastle.util.io.TeeInputStream:int read(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ConstructedOctetStream:int read(byte[],int,int)",
            "org.bouncycastle.asn1.DefiniteLengthInputStream:int read(byte[],int,int)",
            "org.bouncycastle.asn1.IndefiniteLengthInputStream:int read(byte[],int,int)",
            "org.bouncycastle.crypto.io.DigestInputStream:int read(byte[],int,int)",
            "org.bouncycastle.crypto.io.MacInputStream:int read(byte[],int,int)",
            "org.bouncycastle.crypto.io.SignerInputStream:int read(byte[],int,int)",
            "org.bouncycastle.crypto.parsers.DHIESPublicKeyParser:org.bouncycastle.crypto.params.AsymmetricKeyParameter readKey(java.io.InputStream)",
            "org.bouncycastle.crypto.parsers.ECIESPublicKeyParser:org.bouncycastle.crypto.params.AsymmetricKeyParameter readKey(java.io.InputStream)",
            "org.bouncycastle.util.io.Streams:void drain(java.io.InputStream)",
            "org.bouncycastle.util.io.Streams:int readFully(java.io.InputStream,byte[],int,int)",
            "org.bouncycastle.util.io.Streams:void pipeAll(java.io.InputStream,java.io.OutputStream)",
            "org.bouncycastle.util.io.Streams:long pipeAllLimited(java.io.InputStream,long,java.io.OutputStream)",
            "org.bouncycastle.util.io.TeeInputStream:int read(byte[])",
            "org.bouncycastle.util.io.TeeInputStream:int read(byte[],int,int)"
        ]
    },
    "org.bouncycastle.util.io.TeeOutputStream:void write(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1OutputStream:void write(byte[],int,int)",
            "org.bouncycastle.crypto.io.CipherOutputStream:void write(byte[],int,int)",
            "org.bouncycastle.crypto.io.CipherOutputStream:void close()",
            "org.bouncycastle.crypto.tls.CertificateURL$ListBuffer16:void encodeTo(java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.RecordStream:byte[] decodeAndVerify(short,java.io.InputStream,int)",
            "org.bouncycastle.crypto.tls.RecordStream:void writeRecord(short,byte[],int,int)",
            "org.bouncycastle.util.io.BufferingOutputStream:void write(byte[],int,int)",
            "org.bouncycastle.util.io.BufferingOutputStream:void flush()",
            "org.bouncycastle.util.io.Streams:void pipeAll(java.io.InputStream,java.io.OutputStream)",
            "org.bouncycastle.util.io.Streams:long pipeAllLimited(java.io.InputStream,long,java.io.OutputStream)",
            "org.bouncycastle.util.io.TeeInputStream:int read(byte[],int,int)",
            "org.bouncycastle.util.io.TeeOutputStream:void write(byte[],int,int)"
        ]
    },
    "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:byte[] engineUpdate(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:int engineUpdate(byte[],int,int,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:byte[] engineDoFinal(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:java.security.Key engineUnwrap(byte[],java.lang.String,int)"
        ]
    },
    "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:int engineDoFinal(byte[],int,int,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:byte[] engineWrap(java.security.Key)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:java.security.Key engineUnwrap(byte[],java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.io.CipherInputStream:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2InputStream:void bsFinishedWithStream()",
            "org.bouncycastle.crypto.io.CipherInputStream:void close()",
            "org.bouncycastle.crypto.tls.RecordStream:void safeClose()",
            "org.bouncycastle.jcajce.io.CipherInputStream:void close()",
            "org.bouncycastle.util.io.TeeInputStream:void close()"
        ]
    },
    "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void finalize()",
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void close()",
            "org.bouncycastle.asn1.ASN1OutputStream:void close()",
            "org.bouncycastle.crypto.io.CipherOutputStream:void close()",
            "org.bouncycastle.crypto.tls.RecordStream:void safeClose()",
            "org.bouncycastle.jcajce.io.CipherOutputStream:void close()",
            "org.bouncycastle.util.io.BufferingOutputStream:void close()",
            "org.bouncycastle.util.io.TeeInputStream:void close()",
            "org.bouncycastle.util.io.TeeOutputStream:void close()"
        ]
    },
    "org.bouncycastle.asn1.ASN1OutputStream:void close()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.tls.RecordStream:void safeClose()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsProtocol:void processAlert()",
            "org.bouncycastle.crypto.tls.TlsProtocol:void failWithError(short,short,java.lang.String,java.lang.Exception)"
        ]
    },
    "org.bouncycastle.jcajce.io.CipherOutputStream:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void close()",
            "org.bouncycastle.asn1.ASN1OutputStream:void close()",
            "org.bouncycastle.crypto.io.CipherOutputStream:void close()",
            "org.bouncycastle.crypto.tls.RecordStream:void safeClose()",
            "org.bouncycastle.jcajce.io.CipherOutputStream:void close()",
            "org.bouncycastle.util.io.BufferingOutputStream:void close()",
            "org.bouncycastle.util.io.TeeInputStream:void close()",
            "org.bouncycastle.util.io.TeeOutputStream:void close()"
        ]
    },
    "org.bouncycastle.util.io.BufferingOutputStream:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void close()",
            "org.bouncycastle.asn1.ASN1OutputStream:void close()",
            "org.bouncycastle.crypto.io.CipherOutputStream:void close()",
            "org.bouncycastle.crypto.tls.RecordStream:void safeClose()",
            "org.bouncycastle.jcajce.io.CipherOutputStream:void close()",
            "org.bouncycastle.util.io.BufferingOutputStream:void close()",
            "org.bouncycastle.util.io.TeeInputStream:void close()",
            "org.bouncycastle.util.io.TeeOutputStream:void close()"
        ]
    },
    "org.bouncycastle.util.io.TeeInputStream:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2InputStream:void bsFinishedWithStream()",
            "org.bouncycastle.crypto.io.CipherInputStream:void close()",
            "org.bouncycastle.crypto.tls.RecordStream:void safeClose()",
            "org.bouncycastle.jcajce.io.CipherInputStream:void close()",
            "org.bouncycastle.util.io.TeeInputStream:void close()"
        ]
    },
    "org.bouncycastle.util.io.TeeOutputStream:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void close()",
            "org.bouncycastle.asn1.ASN1OutputStream:void close()",
            "org.bouncycastle.crypto.io.CipherOutputStream:void close()",
            "org.bouncycastle.crypto.tls.RecordStream:void safeClose()",
            "org.bouncycastle.jcajce.io.CipherOutputStream:void close()",
            "org.bouncycastle.util.io.BufferingOutputStream:void close()",
            "org.bouncycastle.util.io.TeeInputStream:void close()",
            "org.bouncycastle.util.io.TeeOutputStream:void close()"
        ]
    },
    "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void <init>(java.io.OutputStream,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void <init>(java.io.OutputStream)"
        ]
    },
    "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void bsFinishedWithStream()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void endCompression()"
        ]
    },
    "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void bsW(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void endBlock()",
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void bsPutUChar(int)",
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void bsPutint(int)",
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void bsPutIntVS(int,int)",
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void sendMTFValues()"
        ]
    },
    "org.bouncycastle.asn1.ASN1OutputStream:void write(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1OutputStream$ImplicitOutputStream:void write(int)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeLength(int)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeEncoded(int,byte[])",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeTag(int,int)",
            "org.bouncycastle.asn1.BEROctetString:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.BERSequence:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.BERSet:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.BERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DERBMPString:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DERObjectIdentifier:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DERSequence:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DERSet:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DERUTCTime:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLSequence:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLSet:void encode(org.bouncycastle.asn1.ASN1OutputStream)"
        ]
    },
    "org.bouncycastle.asn1.ASN1OutputStream:void writeNull()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.BERGenerator:void writeHdr(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.BERGenerator:void writeBERHeader(int)"
        ]
    },
    "org.bouncycastle.asn1.BERGenerator:void writeBERBody(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.BERGenerator:void writeBEREnd()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.BEROctetStringGenerator$BufferedBEROctetStream:void close()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void close()"
        ]
    },
    "org.bouncycastle.asn1.DERGenerator:void writeLength(java.io.OutputStream,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.DERGenerator:void writeDEREncoded(java.io.OutputStream,int,byte[])"
        ]
    },
    "org.bouncycastle.asn1.DERGenerator:void writeDEREncoded(java.io.OutputStream,int,byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.DERGenerator:void writeDEREncoded(int,byte[])",
            "org.bouncycastle.asn1.DERGenerator:void writeDEREncoded(java.io.OutputStream,int,java.io.InputStream)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsUtils:void writeUint8(short,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.CertificateStatus:void encode(java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.CertificateStatusRequest:void encode(java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.CertificateURL:void encode(java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.DTLSReliableHandshake:void writeHandshakeFragment(org.bouncycastle.crypto.tls.DTLSReliableHandshake$Message,int,int)",
            "org.bouncycastle.crypto.tls.DTLSServerProtocol:byte[] generateServerHello(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState)",
            "org.bouncycastle.crypto.tls.HeartbeatExtension:void encode(java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.HeartbeatMessage:void encode(org.bouncycastle.crypto.tls.TlsContext,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.ServerName:void encode(java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm:void encode(java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsECCUtils:void writeExplicitECParameters(short[],org.bouncycastle.crypto.params.ECDomainParameters,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsECCUtils:void writeNamedECParameters(int,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsProtocol$HandshakeMessage:void <init>(org.bouncycastle.crypto.tls.TlsProtocol,short,int)",
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void sendServerHelloMessage()",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint8Array(short[],java.io.OutputStream)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsUtils:void writeUint8(int,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.CertificateRequest:void encode(java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeOpaque8(byte[],java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint8ArrayWithUint8Length(short[],java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.URLAndHash:void encode(java.io.OutputStream)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsUtils:void writeUint16(int,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.CertificateRequest:void encode(java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.CertificateURL$ListBuffer16:void <init>(org.bouncycastle.crypto.tls.CertificateURL)",
            "org.bouncycastle.crypto.tls.DTLSReliableHandshake:void writeHandshakeFragment(org.bouncycastle.crypto.tls.DTLSReliableHandshake$Message,int,int)",
            "org.bouncycastle.crypto.tls.DTLSServerProtocol:byte[] generateServerHello(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState)",
            "org.bouncycastle.crypto.tls.HeartbeatMessage:void encode(org.bouncycastle.crypto.tls.TlsContext,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.OCSPStatusRequest:void encode(java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.ServerNameList:void encode(java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsECCUtils:void writeExplicitECParameters(short[],org.bouncycastle.crypto.params.ECDomainParameters,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsECCUtils:void writeNamedECParameters(int,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsProtocol:void writeExtensions(java.io.OutputStream,java.util.Hashtable)",
            "org.bouncycastle.crypto.tls.TlsProtocol:void writeSupplementalData(java.io.OutputStream,java.util.Vector)",
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void sendServerHelloMessage()",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeOpaque16(byte[],java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint16Array(int[],java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint16ArrayWithUint16Length(int[],java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void encodeSupportedSignatureAlgorithms(java.util.Vector,boolean,java.io.OutputStream)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsUtils:void writeUint24(int,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.Certificate:void encode(java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.DTLSReliableHandshake:void writeHandshakeFragment(org.bouncycastle.crypto.tls.DTLSReliableHandshake$Message,int,int)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeOpaque24(byte[],java.io.OutputStream)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsUtils:void writeUint32(long,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.NewSessionTicket:void encode(java.io.OutputStream)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsUtils:void writeUint48(long,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.tls.TlsUtils:void writeUint64(long,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.tls.TlsUtils:void writeVersion(org.bouncycastle.crypto.tls.ProtocolVersion,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:byte[] generateClientHello(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,org.bouncycastle.crypto.tls.TlsClient)",
            "org.bouncycastle.crypto.tls.DTLSServerProtocol:byte[] generateServerHello(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState)",
            "org.bouncycastle.crypto.tls.TlsClientProtocol:void sendClientHelloMessage()",
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void sendServerHelloMessage()"
        ]
    },
    "org.bouncycastle.util.Strings:void toUTF8ByteArray(char[],java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.util.Strings:byte[] toUTF8ByteArray(char[])"
        ]
    },
    "org.bouncycastle.util.encoders.Base64Encoder:int encode(byte[],int,int,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.util.encoders.Base64:byte[] encode(byte[],int,int)",
            "org.bouncycastle.util.encoders.Base64:int encode(byte[],java.io.OutputStream)",
            "org.bouncycastle.util.encoders.Base64:int encode(byte[],int,int,java.io.OutputStream)",
            "org.bouncycastle.util.encoders.Hex:byte[] encode(byte[],int,int)",
            "org.bouncycastle.util.encoders.Hex:int encode(byte[],java.io.OutputStream)",
            "org.bouncycastle.util.encoders.Hex:int encode(byte[],int,int,java.io.OutputStream)",
            "org.bouncycastle.util.encoders.UrlBase64:byte[] encode(byte[])",
            "org.bouncycastle.util.encoders.UrlBase64:int encode(byte[],java.io.OutputStream)"
        ]
    },
    "org.bouncycastle.util.encoders.Base64Encoder:int decode(byte[],int,int,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.util.encoders.Base64:byte[] decode(byte[])",
            "org.bouncycastle.util.encoders.Hex:byte[] decode(byte[])",
            "org.bouncycastle.util.encoders.UrlBase64:byte[] decode(byte[])",
            "org.bouncycastle.util.encoders.UrlBase64:int decode(byte[],java.io.OutputStream)"
        ]
    },
    "org.bouncycastle.util.encoders.Base64Encoder:int decode(java.lang.String,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.util.encoders.Base64:byte[] decode(java.lang.String)",
            "org.bouncycastle.util.encoders.Base64:int decode(java.lang.String,java.io.OutputStream)",
            "org.bouncycastle.util.encoders.Hex:byte[] decode(java.lang.String)",
            "org.bouncycastle.util.encoders.Hex:int decode(java.lang.String,java.io.OutputStream)",
            "org.bouncycastle.util.encoders.UrlBase64:byte[] decode(java.lang.String)",
            "org.bouncycastle.util.encoders.UrlBase64:int decode(java.lang.String,java.io.OutputStream)"
        ]
    },
    "org.bouncycastle.util.encoders.Base64Encoder:int decodeLastBlock(java.io.OutputStream,char,char,char,char)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.util.encoders.Base64Encoder:int decode(byte[],int,int,java.io.OutputStream)",
            "org.bouncycastle.util.encoders.Base64Encoder:int decode(java.lang.String,java.io.OutputStream)"
        ]
    },
    "org.bouncycastle.util.encoders.HexEncoder:int encode(byte[],int,int,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.util.encoders.Base64:byte[] encode(byte[],int,int)",
            "org.bouncycastle.util.encoders.Base64:int encode(byte[],java.io.OutputStream)",
            "org.bouncycastle.util.encoders.Base64:int encode(byte[],int,int,java.io.OutputStream)",
            "org.bouncycastle.util.encoders.Hex:byte[] encode(byte[],int,int)",
            "org.bouncycastle.util.encoders.Hex:int encode(byte[],java.io.OutputStream)",
            "org.bouncycastle.util.encoders.Hex:int encode(byte[],int,int,java.io.OutputStream)",
            "org.bouncycastle.util.encoders.UrlBase64:byte[] encode(byte[])",
            "org.bouncycastle.util.encoders.UrlBase64:int encode(byte[],java.io.OutputStream)"
        ]
    },
    "org.bouncycastle.util.encoders.HexEncoder:int decode(byte[],int,int,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.util.encoders.Base64:byte[] decode(byte[])",
            "org.bouncycastle.util.encoders.Hex:byte[] decode(byte[])",
            "org.bouncycastle.util.encoders.UrlBase64:byte[] decode(byte[])",
            "org.bouncycastle.util.encoders.UrlBase64:int decode(byte[],java.io.OutputStream)"
        ]
    },
    "org.bouncycastle.util.encoders.HexEncoder:int decode(java.lang.String,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.util.encoders.Base64:byte[] decode(java.lang.String)",
            "org.bouncycastle.util.encoders.Base64:int decode(java.lang.String,java.io.OutputStream)",
            "org.bouncycastle.util.encoders.Hex:byte[] decode(java.lang.String)",
            "org.bouncycastle.util.encoders.Hex:int decode(java.lang.String,java.io.OutputStream)",
            "org.bouncycastle.util.encoders.UrlBase64:byte[] decode(java.lang.String)",
            "org.bouncycastle.util.encoders.UrlBase64:int decode(java.lang.String,java.io.OutputStream)"
        ]
    },
    "org.bouncycastle.util.io.TeeInputStream:int read()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2InputStream:int bsR(int)",
            "org.bouncycastle.apache.bzip2.CBZip2InputStream:void getAndMoveToFrontDecode()",
            "org.bouncycastle.asn1.ASN1InputStream:int readTagNumber(java.io.InputStream,int)",
            "org.bouncycastle.asn1.ASN1InputStream:int readLength(java.io.InputStream,int)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1Encodable readObject()",
            "org.bouncycastle.asn1.BERGenerator:void writeBERBody(java.io.InputStream)",
            "org.bouncycastle.asn1.ConstructedOctetStream:int read()",
            "org.bouncycastle.asn1.DERBitString:org.bouncycastle.asn1.DERBitString fromInputStream(int,java.io.InputStream)",
            "org.bouncycastle.asn1.DefiniteLengthInputStream:int read()",
            "org.bouncycastle.asn1.IndefiniteLengthInputStream:void <init>(java.io.InputStream,int)",
            "org.bouncycastle.asn1.IndefiniteLengthInputStream:int read(byte[],int,int)",
            "org.bouncycastle.asn1.IndefiniteLengthInputStream:int read()",
            "org.bouncycastle.crypto.io.DigestInputStream:int read()",
            "org.bouncycastle.crypto.io.MacInputStream:int read()",
            "org.bouncycastle.crypto.io.SignerInputStream:int read()",
            "org.bouncycastle.crypto.parsers.ECIESPublicKeyParser:org.bouncycastle.crypto.params.AsymmetricKeyParameter readKey(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:short readUint8(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:int readUint16(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:int readUint24(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:long readUint32(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:long readUint48(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:org.bouncycastle.crypto.tls.ProtocolVersion readVersion(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:int readVersionRaw(java.io.InputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PEMUtil:java.lang.String readLine(java.io.InputStream)",
            "org.bouncycastle.jce.provider.PEMUtil:java.lang.String readLine(java.io.InputStream)",
            "org.bouncycastle.jce.provider.X509AttrCertParser:java.lang.Object engineRead()",
            "org.bouncycastle.jce.provider.X509CRLParser:java.lang.Object engineRead()",
            "org.bouncycastle.jce.provider.X509CertPairParser:java.lang.Object engineRead()",
            "org.bouncycastle.jce.provider.X509CertParser:java.lang.Object engineRead()",
            "org.bouncycastle.util.io.TeeInputStream:int read()"
        ]
    },
    "org.bouncycastle.util.io.TeeOutputStream:void write(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void <init>(java.io.OutputStream,int)",
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void bsFinishedWithStream()",
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void bsW(int,int)",
            "org.bouncycastle.asn1.ASN1OutputStream:void write(int)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeNull()",
            "org.bouncycastle.asn1.BERGenerator:void writeHdr(int)",
            "org.bouncycastle.asn1.BERGenerator:void writeBERBody(java.io.InputStream)",
            "org.bouncycastle.asn1.BERGenerator:void writeBEREnd()",
            "org.bouncycastle.asn1.DERGenerator:void writeLength(java.io.OutputStream,int)",
            "org.bouncycastle.asn1.DERGenerator:void writeDEREncoded(java.io.OutputStream,int,byte[])",
            "org.bouncycastle.crypto.io.CipherOutputStream:void write(int)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint8(short,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint8(int,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint16(int,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint24(int,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint32(long,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint48(long,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint64(long,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeVersion(org.bouncycastle.crypto.tls.ProtocolVersion,java.io.OutputStream)",
            "org.bouncycastle.util.Strings:void toUTF8ByteArray(char[],java.io.OutputStream)",
            "org.bouncycastle.util.encoders.Base64Encoder:int encode(byte[],int,int,java.io.OutputStream)",
            "org.bouncycastle.util.encoders.Base64Encoder:int decode(byte[],int,int,java.io.OutputStream)",
            "org.bouncycastle.util.encoders.Base64Encoder:int decode(java.lang.String,java.io.OutputStream)",
            "org.bouncycastle.util.encoders.Base64Encoder:int decodeLastBlock(java.io.OutputStream,char,char,char,char)",
            "org.bouncycastle.util.encoders.HexEncoder:int encode(byte[],int,int,java.io.OutputStream)",
            "org.bouncycastle.util.encoders.HexEncoder:int decode(byte[],int,int,java.io.OutputStream)",
            "org.bouncycastle.util.encoders.HexEncoder:int decode(java.lang.String,java.io.OutputStream)",
            "org.bouncycastle.util.io.TeeInputStream:int read()",
            "org.bouncycastle.util.io.TeeOutputStream:void write(int)"
        ]
    },
    "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:byte[] engineDoFinal(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:java.security.Key engineUnwrap(byte[],java.lang.String,int)"
        ]
    },
    "org.bouncycastle.jce.provider.JCEStreamCipher:byte[] engineDoFinal(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.JCEStreamCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:java.security.Key engineUnwrap(byte[],java.lang.String,int)"
        ]
    },
    "org.bouncycastle.apache.bzip2.CBZip2InputStream:int bsR(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2InputStream:void initBlock()",
            "org.bouncycastle.apache.bzip2.CBZip2InputStream:char bsGetUChar()",
            "org.bouncycastle.apache.bzip2.CBZip2InputStream:int bsGetint()",
            "org.bouncycastle.apache.bzip2.CBZip2InputStream:int bsGetIntVS(int)",
            "org.bouncycastle.apache.bzip2.CBZip2InputStream:void recvDecodingTables()",
            "org.bouncycastle.apache.bzip2.CBZip2InputStream:void getAndMoveToFrontDecode()"
        ]
    },
    "org.bouncycastle.apache.bzip2.CBZip2InputStream:void getAndMoveToFrontDecode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2InputStream:void initBlock()"
        ]
    },
    "org.bouncycastle.asn1.ASN1InputStream:int readTagNumber(java.io.InputStream,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1InputStream:org.bouncycastle.asn1.ASN1Primitive readObject()",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1Encodable readObject()"
        ]
    },
    "org.bouncycastle.asn1.ASN1InputStream:int readLength(java.io.InputStream,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1InputStream:int readLength()",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1Encodable readObject()"
        ]
    },
    "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1Encodable readObject()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.BERApplicationSpecificParser:org.bouncycastle.asn1.ASN1Encodable readObject()",
            "org.bouncycastle.asn1.BERSequenceParser:org.bouncycastle.asn1.ASN1Encodable readObject()",
            "org.bouncycastle.asn1.BERSetParser:org.bouncycastle.asn1.ASN1Encodable readObject()",
            "org.bouncycastle.asn1.BERTaggedObjectParser:org.bouncycastle.asn1.ASN1Encodable getObjectParser(int,boolean)",
            "org.bouncycastle.asn1.ConstructedOctetStream:int read(byte[],int,int)",
            "org.bouncycastle.asn1.ConstructedOctetStream:int read()",
            "org.bouncycastle.asn1.DERExternalParser:org.bouncycastle.asn1.ASN1Encodable readObject()",
            "org.bouncycastle.asn1.DERSequenceParser:org.bouncycastle.asn1.ASN1Encodable readObject()",
            "org.bouncycastle.asn1.DERSetParser:org.bouncycastle.asn1.ASN1Encodable readObject()"
        ]
    },
    "org.bouncycastle.asn1.ConstructedOctetStream:int read()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2InputStream:int bsR(int)",
            "org.bouncycastle.apache.bzip2.CBZip2InputStream:void getAndMoveToFrontDecode()",
            "org.bouncycastle.asn1.ASN1InputStream:int readTagNumber(java.io.InputStream,int)",
            "org.bouncycastle.asn1.ASN1InputStream:int readLength(java.io.InputStream,int)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1Encodable readObject()",
            "org.bouncycastle.asn1.BERGenerator:void writeBERBody(java.io.InputStream)",
            "org.bouncycastle.asn1.ConstructedOctetStream:int read()",
            "org.bouncycastle.asn1.DERBitString:org.bouncycastle.asn1.DERBitString fromInputStream(int,java.io.InputStream)",
            "org.bouncycastle.asn1.DefiniteLengthInputStream:int read()",
            "org.bouncycastle.asn1.IndefiniteLengthInputStream:void <init>(java.io.InputStream,int)",
            "org.bouncycastle.asn1.IndefiniteLengthInputStream:int read(byte[],int,int)",
            "org.bouncycastle.asn1.IndefiniteLengthInputStream:int read()",
            "org.bouncycastle.crypto.io.DigestInputStream:int read()",
            "org.bouncycastle.crypto.io.MacInputStream:int read()",
            "org.bouncycastle.crypto.io.SignerInputStream:int read()",
            "org.bouncycastle.crypto.parsers.ECIESPublicKeyParser:org.bouncycastle.crypto.params.AsymmetricKeyParameter readKey(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:short readUint8(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:int readUint16(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:int readUint24(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:long readUint32(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:long readUint48(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:org.bouncycastle.crypto.tls.ProtocolVersion readVersion(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:int readVersionRaw(java.io.InputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PEMUtil:java.lang.String readLine(java.io.InputStream)",
            "org.bouncycastle.jce.provider.PEMUtil:java.lang.String readLine(java.io.InputStream)",
            "org.bouncycastle.jce.provider.X509AttrCertParser:java.lang.Object engineRead()",
            "org.bouncycastle.jce.provider.X509CRLParser:java.lang.Object engineRead()",
            "org.bouncycastle.jce.provider.X509CertPairParser:java.lang.Object engineRead()",
            "org.bouncycastle.jce.provider.X509CertParser:java.lang.Object engineRead()",
            "org.bouncycastle.util.io.TeeInputStream:int read()"
        ]
    },
    "org.bouncycastle.asn1.DERBitString:org.bouncycastle.asn1.DERBitString fromInputStream(int,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1InputStream:org.bouncycastle.asn1.ASN1Primitive createPrimitiveDERObject(int,org.bouncycastle.asn1.DefiniteLengthInputStream,byte[][])"
        ]
    },
    "org.bouncycastle.asn1.DefiniteLengthInputStream:int read()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2InputStream:int bsR(int)",
            "org.bouncycastle.apache.bzip2.CBZip2InputStream:void getAndMoveToFrontDecode()",
            "org.bouncycastle.asn1.ASN1InputStream:int readTagNumber(java.io.InputStream,int)",
            "org.bouncycastle.asn1.ASN1InputStream:int readLength(java.io.InputStream,int)",
            "org.bouncycastle.asn1.ASN1InputStream:char[] getBMPCharBuffer(org.bouncycastle.asn1.DefiniteLengthInputStream)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1Encodable readObject()",
            "org.bouncycastle.asn1.BERGenerator:void writeBERBody(java.io.InputStream)",
            "org.bouncycastle.asn1.ConstructedOctetStream:int read()",
            "org.bouncycastle.asn1.DERBitString:org.bouncycastle.asn1.DERBitString fromInputStream(int,java.io.InputStream)",
            "org.bouncycastle.asn1.DefiniteLengthInputStream:int read()",
            "org.bouncycastle.asn1.IndefiniteLengthInputStream:void <init>(java.io.InputStream,int)",
            "org.bouncycastle.asn1.IndefiniteLengthInputStream:int read(byte[],int,int)",
            "org.bouncycastle.asn1.IndefiniteLengthInputStream:int read()",
            "org.bouncycastle.crypto.io.DigestInputStream:int read()",
            "org.bouncycastle.crypto.io.MacInputStream:int read()",
            "org.bouncycastle.crypto.io.SignerInputStream:int read()",
            "org.bouncycastle.crypto.parsers.ECIESPublicKeyParser:org.bouncycastle.crypto.params.AsymmetricKeyParameter readKey(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:short readUint8(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:int readUint16(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:int readUint24(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:long readUint32(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:long readUint48(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:org.bouncycastle.crypto.tls.ProtocolVersion readVersion(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:int readVersionRaw(java.io.InputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PEMUtil:java.lang.String readLine(java.io.InputStream)",
            "org.bouncycastle.jce.provider.PEMUtil:java.lang.String readLine(java.io.InputStream)",
            "org.bouncycastle.jce.provider.X509AttrCertParser:java.lang.Object engineRead()",
            "org.bouncycastle.jce.provider.X509CRLParser:java.lang.Object engineRead()",
            "org.bouncycastle.jce.provider.X509CertPairParser:java.lang.Object engineRead()",
            "org.bouncycastle.jce.provider.X509CertParser:java.lang.Object engineRead()",
            "org.bouncycastle.util.io.TeeInputStream:int read()"
        ]
    },
    "org.bouncycastle.asn1.IndefiniteLengthInputStream:void <init>(java.io.InputStream,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1InputStream:org.bouncycastle.asn1.ASN1Primitive readObject()",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1Encodable readObject()"
        ]
    },
    "org.bouncycastle.asn1.IndefiniteLengthInputStream:int read(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ConstructedOctetStream:int read(byte[],int,int)",
            "org.bouncycastle.asn1.DefiniteLengthInputStream:int read(byte[],int,int)",
            "org.bouncycastle.asn1.IndefiniteLengthInputStream:int read(byte[],int,int)",
            "org.bouncycastle.crypto.io.DigestInputStream:int read(byte[],int,int)",
            "org.bouncycastle.crypto.io.MacInputStream:int read(byte[],int,int)",
            "org.bouncycastle.crypto.io.SignerInputStream:int read(byte[],int,int)",
            "org.bouncycastle.crypto.parsers.DHIESPublicKeyParser:org.bouncycastle.crypto.params.AsymmetricKeyParameter readKey(java.io.InputStream)",
            "org.bouncycastle.crypto.parsers.ECIESPublicKeyParser:org.bouncycastle.crypto.params.AsymmetricKeyParameter readKey(java.io.InputStream)",
            "org.bouncycastle.util.io.Streams:void drain(java.io.InputStream)",
            "org.bouncycastle.util.io.Streams:int readFully(java.io.InputStream,byte[],int,int)",
            "org.bouncycastle.util.io.Streams:void pipeAll(java.io.InputStream,java.io.OutputStream)",
            "org.bouncycastle.util.io.Streams:long pipeAllLimited(java.io.InputStream,long,java.io.OutputStream)",
            "org.bouncycastle.util.io.TeeInputStream:int read(byte[],int,int)"
        ]
    },
    "org.bouncycastle.asn1.IndefiniteLengthInputStream:int read()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2InputStream:int bsR(int)",
            "org.bouncycastle.apache.bzip2.CBZip2InputStream:void getAndMoveToFrontDecode()",
            "org.bouncycastle.asn1.ASN1InputStream:int readTagNumber(java.io.InputStream,int)",
            "org.bouncycastle.asn1.ASN1InputStream:int readLength(java.io.InputStream,int)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1Encodable readObject()",
            "org.bouncycastle.asn1.BERGenerator:void writeBERBody(java.io.InputStream)",
            "org.bouncycastle.asn1.ConstructedOctetStream:int read()",
            "org.bouncycastle.asn1.DERBitString:org.bouncycastle.asn1.DERBitString fromInputStream(int,java.io.InputStream)",
            "org.bouncycastle.asn1.DefiniteLengthInputStream:int read()",
            "org.bouncycastle.asn1.IndefiniteLengthInputStream:void <init>(java.io.InputStream,int)",
            "org.bouncycastle.asn1.IndefiniteLengthInputStream:int read(byte[],int,int)",
            "org.bouncycastle.asn1.IndefiniteLengthInputStream:int read()",
            "org.bouncycastle.crypto.io.DigestInputStream:int read()",
            "org.bouncycastle.crypto.io.MacInputStream:int read()",
            "org.bouncycastle.crypto.io.SignerInputStream:int read()",
            "org.bouncycastle.crypto.parsers.ECIESPublicKeyParser:org.bouncycastle.crypto.params.AsymmetricKeyParameter readKey(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:short readUint8(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:int readUint16(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:int readUint24(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:long readUint32(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:long readUint48(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:org.bouncycastle.crypto.tls.ProtocolVersion readVersion(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:int readVersionRaw(java.io.InputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PEMUtil:java.lang.String readLine(java.io.InputStream)",
            "org.bouncycastle.jce.provider.PEMUtil:java.lang.String readLine(java.io.InputStream)",
            "org.bouncycastle.jce.provider.X509AttrCertParser:java.lang.Object engineRead()",
            "org.bouncycastle.jce.provider.X509CRLParser:java.lang.Object engineRead()",
            "org.bouncycastle.jce.provider.X509CertPairParser:java.lang.Object engineRead()",
            "org.bouncycastle.jce.provider.X509CertParser:java.lang.Object engineRead()",
            "org.bouncycastle.util.io.TeeInputStream:int read()"
        ]
    },
    "org.bouncycastle.crypto.io.SignerInputStream:int read()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2InputStream:int bsR(int)",
            "org.bouncycastle.apache.bzip2.CBZip2InputStream:void getAndMoveToFrontDecode()",
            "org.bouncycastle.asn1.ASN1InputStream:int readTagNumber(java.io.InputStream,int)",
            "org.bouncycastle.asn1.ASN1InputStream:int readLength(java.io.InputStream,int)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1Encodable readObject()",
            "org.bouncycastle.asn1.BERGenerator:void writeBERBody(java.io.InputStream)",
            "org.bouncycastle.asn1.ConstructedOctetStream:int read()",
            "org.bouncycastle.asn1.DERBitString:org.bouncycastle.asn1.DERBitString fromInputStream(int,java.io.InputStream)",
            "org.bouncycastle.asn1.DefiniteLengthInputStream:int read()",
            "org.bouncycastle.asn1.IndefiniteLengthInputStream:void <init>(java.io.InputStream,int)",
            "org.bouncycastle.asn1.IndefiniteLengthInputStream:int read(byte[],int,int)",
            "org.bouncycastle.asn1.IndefiniteLengthInputStream:int read()",
            "org.bouncycastle.crypto.io.DigestInputStream:int read()",
            "org.bouncycastle.crypto.io.MacInputStream:int read()",
            "org.bouncycastle.crypto.io.SignerInputStream:int read()",
            "org.bouncycastle.crypto.parsers.ECIESPublicKeyParser:org.bouncycastle.crypto.params.AsymmetricKeyParameter readKey(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:short readUint8(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:int readUint16(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:int readUint24(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:long readUint32(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:long readUint48(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:org.bouncycastle.crypto.tls.ProtocolVersion readVersion(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:int readVersionRaw(java.io.InputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PEMUtil:java.lang.String readLine(java.io.InputStream)",
            "org.bouncycastle.jce.provider.PEMUtil:java.lang.String readLine(java.io.InputStream)",
            "org.bouncycastle.jce.provider.X509AttrCertParser:java.lang.Object engineRead()",
            "org.bouncycastle.jce.provider.X509CRLParser:java.lang.Object engineRead()",
            "org.bouncycastle.jce.provider.X509CertPairParser:java.lang.Object engineRead()",
            "org.bouncycastle.jce.provider.X509CertParser:java.lang.Object engineRead()",
            "org.bouncycastle.util.io.TeeInputStream:int read()"
        ]
    },
    "org.bouncycastle.crypto.parsers.ECIESPublicKeyParser:org.bouncycastle.crypto.params.AsymmetricKeyParameter readKey(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.engines.IESEngine:byte[] processBlock(byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsUtils:short readUint8(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.CertificateRequest:org.bouncycastle.crypto.tls.CertificateRequest parse(org.bouncycastle.crypto.tls.TlsContext,java.io.InputStream)",
            "org.bouncycastle.crypto.tls.CertificateStatus:org.bouncycastle.crypto.tls.CertificateStatus parse(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.CertificateStatusRequest:org.bouncycastle.crypto.tls.CertificateStatusRequest parse(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.CertificateURL:org.bouncycastle.crypto.tls.CertificateURL parse(org.bouncycastle.crypto.tls.TlsContext,java.io.InputStream)",
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:void processServerHello(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,byte[])",
            "org.bouncycastle.crypto.tls.DTLSServerProtocol:void processClientHello(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState,byte[])",
            "org.bouncycastle.crypto.tls.HeartbeatExtension:org.bouncycastle.crypto.tls.HeartbeatExtension parse(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.HeartbeatMessage:org.bouncycastle.crypto.tls.HeartbeatMessage parse(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.ServerName:org.bouncycastle.crypto.tls.ServerName parse(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm:org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm parse(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsClientProtocol:void receiveServerHelloMessage(java.io.ByteArrayInputStream)",
            "org.bouncycastle.crypto.tls.TlsECCUtils:short[] readSupportedPointFormatsExtension(byte[])",
            "org.bouncycastle.crypto.tls.TlsECCUtils:org.bouncycastle.crypto.params.ECDomainParameters readECParameters(int[],short[],java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsProtocol:void processHandshake()",
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void receiveClientHelloMessage(java.io.ByteArrayInputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:byte[] readOpaque8(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:short[] readUint8Array(int,java.io.InputStream)",
            "org.bouncycastle.crypto.tls.URLAndHash:org.bouncycastle.crypto.tls.URLAndHash parse(org.bouncycastle.crypto.tls.TlsContext,java.io.InputStream)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsUtils:int readUint16(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.CertificateURL:org.bouncycastle.crypto.tls.CertificateURL parse(org.bouncycastle.crypto.tls.TlsContext,java.io.InputStream)",
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:void processServerHello(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,byte[])",
            "org.bouncycastle.crypto.tls.DTLSServerProtocol:void processClientHello(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState,byte[])",
            "org.bouncycastle.crypto.tls.HeartbeatMessage:org.bouncycastle.crypto.tls.HeartbeatMessage parse(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.OCSPStatusRequest:org.bouncycastle.crypto.tls.OCSPStatusRequest parse(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.ServerNameList:org.bouncycastle.crypto.tls.ServerNameList parse(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsClientProtocol:void receiveServerHelloMessage(java.io.ByteArrayInputStream)",
            "org.bouncycastle.crypto.tls.TlsECCUtils:int[] readSupportedEllipticCurvesExtension(byte[])",
            "org.bouncycastle.crypto.tls.TlsECCUtils:org.bouncycastle.crypto.params.ECDomainParameters readECParameters(int[],short[],java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsProtocol:java.util.Hashtable readExtensions(java.io.ByteArrayInputStream)",
            "org.bouncycastle.crypto.tls.TlsProtocol:java.util.Vector readSupplementalDataMessage(java.io.ByteArrayInputStream)",
            "org.bouncycastle.crypto.tls.TlsSRTPUtils:org.bouncycastle.crypto.tls.UseSRTPData readUseSRTPExtension(byte[])",
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void receiveClientHelloMessage(java.io.ByteArrayInputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:byte[] readOpaque16(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:int[] readUint16Array(int,java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:java.util.Vector parseSupportedSignatureAlgorithms(boolean,java.io.InputStream)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsUtils:int readUint24(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.Certificate:org.bouncycastle.crypto.tls.Certificate parse(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsProtocol:void processHandshake()",
            "org.bouncycastle.crypto.tls.TlsUtils:byte[] readOpaque24(java.io.InputStream)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsUtils:long readUint32(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.NewSessionTicket:org.bouncycastle.crypto.tls.NewSessionTicket parse(java.io.InputStream)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsUtils:long readUint48(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.tls.TlsUtils:org.bouncycastle.crypto.tls.ProtocolVersion readVersion(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:byte[] processHelloVerifyRequest(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,byte[])",
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:void processServerHello(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,byte[])",
            "org.bouncycastle.crypto.tls.DTLSServerProtocol:void processClientHello(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState,byte[])",
            "org.bouncycastle.crypto.tls.TlsClientProtocol:void receiveServerHelloMessage(java.io.ByteArrayInputStream)",
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void receiveClientHelloMessage(java.io.ByteArrayInputStream)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsUtils:int readVersionRaw(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.PEMUtil:java.lang.String readLine(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PEMUtil:org.bouncycastle.asn1.ASN1Sequence readPEMObject(java.io.InputStream)"
        ]
    },
    "org.bouncycastle.jce.provider.PEMUtil:java.lang.String readLine(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.PEMUtil:org.bouncycastle.asn1.ASN1Sequence readPEMObject(java.io.InputStream)"
        ]
    },
    "org.bouncycastle.jce.provider.X509AttrCertParser:java.lang.Object engineRead()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.X509AttrCertParser:java.util.Collection engineReadAll()",
            "org.bouncycastle.x509.X509StreamParser:java.lang.Object read()",
            "org.bouncycastle.x509.util.LDAPStoreHelper:java.util.Set createAttributeCertificates(java.util.List,org.bouncycastle.x509.X509AttributeCertStoreSelector)"
        ]
    },
    "org.bouncycastle.jce.provider.X509CRLParser:java.lang.Object engineRead()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.X509CRLParser:java.util.Collection engineReadAll()",
            "org.bouncycastle.x509.X509StreamParser:java.lang.Object read()",
            "org.bouncycastle.x509.util.LDAPStoreHelper:java.util.Set createCRLs(java.util.List,org.bouncycastle.x509.X509CRLStoreSelector)"
        ]
    },
    "org.bouncycastle.jce.provider.X509CertPairParser:java.lang.Object engineRead()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.X509CertPairParser:java.util.Collection engineReadAll()",
            "org.bouncycastle.x509.X509StreamParser:java.lang.Object read()",
            "org.bouncycastle.x509.util.LDAPStoreHelper:java.util.Set createCrossCertificatePairs(java.util.List,org.bouncycastle.x509.X509CertPairStoreSelector)"
        ]
    },
    "org.bouncycastle.jce.provider.X509CertParser:java.lang.Object engineRead()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.X509CertParser:java.util.Collection engineReadAll()",
            "org.bouncycastle.x509.X509StreamParser:java.lang.Object read()",
            "org.bouncycastle.x509.util.LDAPStoreHelper:java.util.Set createCerts(java.util.List,org.bouncycastle.x509.X509CertStoreSelector)"
        ]
    },
    "org.bouncycastle.asn1.ConstructedOctetStream:int read(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ConstructedOctetStream:int read(byte[],int,int)",
            "org.bouncycastle.asn1.DefiniteLengthInputStream:int read(byte[],int,int)",
            "org.bouncycastle.asn1.IndefiniteLengthInputStream:int read(byte[],int,int)",
            "org.bouncycastle.crypto.io.DigestInputStream:int read(byte[],int,int)",
            "org.bouncycastle.crypto.io.MacInputStream:int read(byte[],int,int)",
            "org.bouncycastle.crypto.io.SignerInputStream:int read(byte[],int,int)",
            "org.bouncycastle.crypto.parsers.DHIESPublicKeyParser:org.bouncycastle.crypto.params.AsymmetricKeyParameter readKey(java.io.InputStream)",
            "org.bouncycastle.crypto.parsers.ECIESPublicKeyParser:org.bouncycastle.crypto.params.AsymmetricKeyParameter readKey(java.io.InputStream)",
            "org.bouncycastle.util.io.Streams:void drain(java.io.InputStream)",
            "org.bouncycastle.util.io.Streams:int readFully(java.io.InputStream,byte[],int,int)",
            "org.bouncycastle.util.io.Streams:void pipeAll(java.io.InputStream,java.io.OutputStream)",
            "org.bouncycastle.util.io.Streams:long pipeAllLimited(java.io.InputStream,long,java.io.OutputStream)",
            "org.bouncycastle.util.io.TeeInputStream:int read(byte[],int,int)"
        ]
    },
    "org.bouncycastle.asn1.DefiniteLengthInputStream:int read(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ConstructedOctetStream:int read(byte[],int,int)",
            "org.bouncycastle.asn1.DefiniteLengthInputStream:int read(byte[],int,int)",
            "org.bouncycastle.asn1.IndefiniteLengthInputStream:int read(byte[],int,int)",
            "org.bouncycastle.crypto.io.DigestInputStream:int read(byte[],int,int)",
            "org.bouncycastle.crypto.io.MacInputStream:int read(byte[],int,int)",
            "org.bouncycastle.crypto.io.SignerInputStream:int read(byte[],int,int)",
            "org.bouncycastle.crypto.parsers.DHIESPublicKeyParser:org.bouncycastle.crypto.params.AsymmetricKeyParameter readKey(java.io.InputStream)",
            "org.bouncycastle.crypto.parsers.ECIESPublicKeyParser:org.bouncycastle.crypto.params.AsymmetricKeyParameter readKey(java.io.InputStream)",
            "org.bouncycastle.util.io.Streams:void drain(java.io.InputStream)",
            "org.bouncycastle.util.io.Streams:int readFully(java.io.InputStream,byte[],int,int)",
            "org.bouncycastle.util.io.Streams:void pipeAll(java.io.InputStream,java.io.OutputStream)",
            "org.bouncycastle.util.io.Streams:long pipeAllLimited(java.io.InputStream,long,java.io.OutputStream)",
            "org.bouncycastle.util.io.TeeInputStream:int read(byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.io.SignerInputStream:int read(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ConstructedOctetStream:int read(byte[],int,int)",
            "org.bouncycastle.asn1.DefiniteLengthInputStream:int read(byte[],int,int)",
            "org.bouncycastle.asn1.IndefiniteLengthInputStream:int read(byte[],int,int)",
            "org.bouncycastle.crypto.io.DigestInputStream:int read(byte[],int,int)",
            "org.bouncycastle.crypto.io.MacInputStream:int read(byte[],int,int)",
            "org.bouncycastle.crypto.io.SignerInputStream:int read(byte[],int,int)",
            "org.bouncycastle.crypto.parsers.DHIESPublicKeyParser:org.bouncycastle.crypto.params.AsymmetricKeyParameter readKey(java.io.InputStream)",
            "org.bouncycastle.crypto.parsers.ECIESPublicKeyParser:org.bouncycastle.crypto.params.AsymmetricKeyParameter readKey(java.io.InputStream)",
            "org.bouncycastle.util.io.Streams:void drain(java.io.InputStream)",
            "org.bouncycastle.util.io.Streams:int readFully(java.io.InputStream,byte[],int,int)",
            "org.bouncycastle.util.io.Streams:void pipeAll(java.io.InputStream,java.io.OutputStream)",
            "org.bouncycastle.util.io.Streams:long pipeAllLimited(java.io.InputStream,long,java.io.OutputStream)",
            "org.bouncycastle.util.io.TeeInputStream:int read(byte[],int,int)"
        ]
    },
    "org.bouncycastle.util.io.Streams:void drain(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.util.io.Streams:int readFully(java.io.InputStream,byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.util.io.Streams:int readFully(java.io.InputStream,byte[])"
        ]
    },
    "org.bouncycastle.crypto.modes.EAXBlockCipher:void reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)"
        ]
    },
    "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$AEADGenericBlockCipher:void updateAAD(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:void engineUpdateAAD(byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.modes.GCMBlockCipher:void outputBlock(byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.modes.GCMBlockCipher:int processByte(byte,byte[],int)",
            "org.bouncycastle.crypto.modes.GCMBlockCipher:int processBytes(byte[],int,int,byte[],int)"
        ]
    },
    "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$AEADGenericBlockCipher:int processByte(byte,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$AEADGenericBlockCipher:int processBytes(byte[],int,int,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:byte[] engineUpdate(byte[],int,int)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:int engineUpdate(byte[],int,int,byte[],int)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:byte[] engineDoFinal(byte[],int,int)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:int engineDoFinal(byte[],int,int,byte[],int)"
        ]
    },
    "org.bouncycastle.crypto.modes.OCBBlockCipher:void processAADByte(byte)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.modes.OCBBlockCipher:void processAADBytes(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.modes.OCBBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.modes.OCBBlockCipher:void reset(boolean)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$AEADGenericBlockCipher:void updateAAD(byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.examples.DESExample:void main(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.prng.SP800SecureRandomBuilder$CTRDRBGProvider:org.bouncycastle.crypto.prng.drbg.SP80090DRBG get(org.bouncycastle.crypto.prng.EntropySource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.prng.SP800SecureRandom:void nextBytes(byte[])"
        ]
    },
    "org.bouncycastle.crypto.generators.Poly1305KeyGenerator:byte[] generateKey()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.symmetric.DES$KeyGenerator:javax.crypto.SecretKey engineGenerateKey()",
            "org.bouncycastle.jcajce.provider.symmetric.DESede$KeyGenerator:javax.crypto.SecretKey engineGenerateKey()",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseKeyGenerator:javax.crypto.SecretKey engineGenerateKey()"
        ]
    },
    "org.bouncycastle.jcajce.provider.symmetric.DES$KeyGenerator:javax.crypto.SecretKey engineGenerateKey()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.symmetric.DESede$KeyGenerator:javax.crypto.SecretKey engineGenerateKey()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.symmetric.util.BaseKeyGenerator:javax.crypto.SecretKey engineGenerateKey()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.encodings.OAEPEncoding:byte[] processBlock(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.BufferedAsymmetricBlockCipher:byte[] doFinal()",
            "org.bouncycastle.crypto.encodings.ISO9796d1Encoding:byte[] encodeBlock(byte[],int,int)",
            "org.bouncycastle.crypto.encodings.ISO9796d1Encoding:byte[] decodeBlock(byte[],int,int)",
            "org.bouncycastle.crypto.encodings.OAEPEncoding:byte[] encodeBlock(byte[],int,int)",
            "org.bouncycastle.crypto.encodings.OAEPEncoding:byte[] decodeBlock(byte[],int,int)",
            "org.bouncycastle.crypto.encodings.PKCS1Encoding:byte[] encodeBlock(byte[],int,int)",
            "org.bouncycastle.crypto.encodings.PKCS1Encoding:byte[] decodeBlock(byte[],int,int)",
            "org.bouncycastle.crypto.signers.GenericSigner:byte[] generateSignature()",
            "org.bouncycastle.crypto.signers.GenericSigner:boolean verifySignature(byte[])",
            "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:void updateWithRecoveredMessage(byte[])",
            "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:byte[] generateSignature()",
            "org.bouncycastle.crypto.signers.ISO9796d2Signer:void updateWithRecoveredMessage(byte[])",
            "org.bouncycastle.crypto.signers.ISO9796d2Signer:byte[] generateSignature()",
            "org.bouncycastle.crypto.signers.ISO9796d2Signer:boolean verifySignature(byte[])",
            "org.bouncycastle.crypto.signers.PSSSigner:byte[] generateSignature()",
            "org.bouncycastle.crypto.signers.PSSSigner:boolean verifySignature(byte[])",
            "org.bouncycastle.crypto.signers.RSADigestSigner:byte[] generateSignature()",
            "org.bouncycastle.crypto.signers.RSADigestSigner:boolean verifySignature(byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi:byte[] engineDoFinal(byte[],int,int)",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi:int engineDoFinal(byte[],int,int,byte[],int)",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi:byte[] engineSign()",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi:boolean engineVerify(byte[])"
        ]
    },
    "org.bouncycastle.crypto.encodings.PKCS1Encoding:byte[] processBlock(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.BufferedAsymmetricBlockCipher:byte[] doFinal()",
            "org.bouncycastle.crypto.encodings.ISO9796d1Encoding:byte[] encodeBlock(byte[],int,int)",
            "org.bouncycastle.crypto.encodings.ISO9796d1Encoding:byte[] decodeBlock(byte[],int,int)",
            "org.bouncycastle.crypto.encodings.OAEPEncoding:byte[] encodeBlock(byte[],int,int)",
            "org.bouncycastle.crypto.encodings.OAEPEncoding:byte[] decodeBlock(byte[],int,int)",
            "org.bouncycastle.crypto.encodings.PKCS1Encoding:byte[] encodeBlock(byte[],int,int)",
            "org.bouncycastle.crypto.encodings.PKCS1Encoding:byte[] decodeBlock(byte[],int,int)",
            "org.bouncycastle.crypto.signers.GenericSigner:byte[] generateSignature()",
            "org.bouncycastle.crypto.signers.GenericSigner:boolean verifySignature(byte[])",
            "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:void updateWithRecoveredMessage(byte[])",
            "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:byte[] generateSignature()",
            "org.bouncycastle.crypto.signers.ISO9796d2Signer:void updateWithRecoveredMessage(byte[])",
            "org.bouncycastle.crypto.signers.ISO9796d2Signer:byte[] generateSignature()",
            "org.bouncycastle.crypto.signers.ISO9796d2Signer:boolean verifySignature(byte[])",
            "org.bouncycastle.crypto.signers.PSSSigner:byte[] generateSignature()",
            "org.bouncycastle.crypto.signers.PSSSigner:boolean verifySignature(byte[])",
            "org.bouncycastle.crypto.signers.RSADigestSigner:byte[] generateSignature()",
            "org.bouncycastle.crypto.signers.RSADigestSigner:boolean verifySignature(byte[])",
            "org.bouncycastle.crypto.tls.DefaultTlsEncryptionCredentials:byte[] decryptPreMasterSecret(byte[])",
            "org.bouncycastle.crypto.tls.TlsRSAUtils:byte[] generateEncryptedPreMasterSecret(org.bouncycastle.crypto.tls.TlsContext,org.bouncycastle.crypto.params.RSAKeyParameters,java.io.OutputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi:byte[] engineDoFinal(byte[],int,int)",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi:int engineDoFinal(byte[],int,int,byte[],int)",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi:byte[] engineSign()",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi:boolean engineVerify(byte[])"
        ]
    },
    "org.bouncycastle.crypto.examples.DESExample:void <init>(java.lang.String,java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.examples.DESExample:void main(java.lang.String[])"
        ]
    },
    "org.bouncycastle.crypto.generators.DSAParametersGenerator:org.bouncycastle.crypto.params.DSAParameters generateParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.AlgorithmParameterGeneratorSpi:java.security.AlgorithmParameters engineGenerateParameters()",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.KeyPairGeneratorSpi:java.security.KeyPair generateKeyPair()"
        ]
    },
    "org.bouncycastle.crypto.prng.BasicEntropySourceProvider$1:byte[] getEntropy()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.prng.SP800SecureRandom:void nextBytes(byte[])",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:void <init>(org.bouncycastle.crypto.BlockCipher,int,int,org.bouncycastle.crypto.prng.EntropySource,byte[],byte[])",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:void CTR_DRBG_Reseed_algorithm(org.bouncycastle.crypto.prng.EntropySource,byte[])",
            "org.bouncycastle.crypto.prng.drbg.DualECSP800DRBG:void <init>(org.bouncycastle.crypto.prng.drbg.DualECPoints[],org.bouncycastle.crypto.Digest,int,org.bouncycastle.crypto.prng.EntropySource,byte[],byte[])",
            "org.bouncycastle.crypto.prng.drbg.DualECSP800DRBG:void reseed(byte[])",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:void <init>(org.bouncycastle.crypto.Mac,int,org.bouncycastle.crypto.prng.EntropySource,byte[],byte[])",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:void reseed(byte[])",
            "org.bouncycastle.crypto.prng.drbg.HashSP800DRBG:void <init>(org.bouncycastle.crypto.Digest,int,org.bouncycastle.crypto.prng.EntropySource,byte[],byte[])",
            "org.bouncycastle.crypto.prng.drbg.HashSP800DRBG:void reseed(byte[])"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsDSASigner:byte[] generateRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.AbstractTlsSigner:byte[] generateRawSignature(org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])",
            "org.bouncycastle.crypto.tls.DefaultTlsSignerCredentials:byte[] generateCertificateSignature(byte[])"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsRSASigner:byte[] generateRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.AbstractTlsSigner:byte[] generateRawSignature(org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])",
            "org.bouncycastle.crypto.tls.DefaultTlsSignerCredentials:byte[] generateCertificateSignature(byte[])"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.rsa.PSSSignatureSpi:byte[] engineSign()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.tls.DTLSClientProtocol:org.bouncycastle.crypto.tls.DTLSTransport connect(org.bouncycastle.crypto.tls.TlsClient,org.bouncycastle.crypto.tls.DatagramTransport)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.tls.DTLSServerProtocol:org.bouncycastle.crypto.tls.DTLSTransport accept(org.bouncycastle.crypto.tls.TlsServer,org.bouncycastle.crypto.tls.DatagramTransport)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.tls.TlsClientProtocol:void connect(org.bouncycastle.crypto.tls.TlsClient)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.tls.TlsServerProtocol:void accept(org.bouncycastle.crypto.tls.TlsServer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.tls.TlsPSKKeyExchange:void generateClientKeyExchange(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:byte[] generateClientKeyExchange(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState)",
            "org.bouncycastle.crypto.tls.TlsClientProtocol:void sendClientKeyExchangeMessage()"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsRSAKeyExchange:void generateClientKeyExchange(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:byte[] generateClientKeyExchange(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState)",
            "org.bouncycastle.crypto.tls.TlsClientProtocol:void sendClientKeyExchangeMessage()"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsRSAKeyExchange:void processClientKeyExchange(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSServerProtocol:void processClientKeyExchange(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState,byte[])",
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void receiveClientKeyExchangeMessage(java.io.ByteArrayInputStream)"
        ]
    },
    "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi:void engineSetKeyEntry(java.lang.String,java.security.Key,char[],java.security.cert.Certificate[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineStore(java.security.KeyStore$LoadStoreParameter)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineStore(java.io.OutputStream,char[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.crypto.gmss.GMSSKeyPairGenerator:void initialize(int,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.crypto.gmss.GMSSKeyPairGenerator:void initializeDefault()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.crypto.gmss.GMSSKeyPairGenerator:org.bouncycastle.crypto.AsymmetricCipherKeyPair genKeyPair()"
        ]
    },
    "org.bouncycastle.pqc.crypto.gmss.GMSSKeyPairGenerator:void init(org.bouncycastle.crypto.KeyGenerationParameters)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher:byte[] messageEncrypt()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiDigestCipher:byte[] messageEncrypt()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.crypto.mceliece.McEliecePKCSDigestCipher:byte[] messageEncrypt()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalDigestCipher:byte[] messageEncrypt()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKobaraImaiCipherSpi:byte[] doFinal(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.jcajce.provider.util.AsymmetricHybridCipher:int doFinal(byte[],int,int,byte[],int)",
            "org.bouncycastle.pqc.jcajce.provider.util.CipherSpiExt:byte[] engineDoFinal(byte[],int,int)",
            "org.bouncycastle.pqc.jcajce.provider.util.CipherSpiExt:byte[] doFinal()",
            "org.bouncycastle.pqc.jcajce.provider.util.CipherSpiExt:byte[] doFinal(byte[])"
        ]
    },
    "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKobaraImaiCipherSpi:byte[] messageEncrypt()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.jcajce.provider.mceliece.McEliecePointchevalCipherSpi:byte[] doFinal(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.jcajce.provider.util.AsymmetricHybridCipher:int doFinal(byte[],int,int,byte[],int)",
            "org.bouncycastle.pqc.jcajce.provider.util.CipherSpiExt:byte[] engineDoFinal(byte[],int,int)",
            "org.bouncycastle.pqc.jcajce.provider.util.CipherSpiExt:byte[] doFinal()",
            "org.bouncycastle.pqc.jcajce.provider.util.CipherSpiExt:byte[] doFinal(byte[])"
        ]
    },
    "org.bouncycastle.pqc.jcajce.provider.mceliece.McEliecePointchevalCipherSpi:byte[] messageEncrypt(byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.tls.DefaultTlsClient:org.bouncycastle.crypto.tls.TlsCipher getCipher()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:org.bouncycastle.crypto.tls.DTLSTransport clientHandshake(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,org.bouncycastle.crypto.tls.DTLSRecordLayer)",
            "org.bouncycastle.crypto.tls.TlsClientProtocol:void handleHandshakeMessage(short,byte[])",
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void receiveClientKeyExchangeMessage(java.io.ByteArrayInputStream)"
        ]
    },
    "org.bouncycastle.crypto.tls.DefaultTlsServer:org.bouncycastle.crypto.tls.TlsCipher getCipher()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.tls.PSKTlsClient:org.bouncycastle.crypto.tls.TlsCipher getCipher()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.tls.SRPTlsClient:org.bouncycastle.crypto.tls.TlsCipher getCipher()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.tls.DTLSReliableHandshake$RecordLayerBuffer:void sendToRecordLayer(org.bouncycastle.crypto.tls.DTLSRecordLayer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSReliableHandshake:void writeHandshakeFragment(org.bouncycastle.crypto.tls.DTLSReliableHandshake$Message,int,int)"
        ]
    },
    "org.bouncycastle.crypto.tls.DTLSTransport:void send(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSRecordLayer:void sendRecord(short,byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.tls.DTLSRecordLayer:void fail(short)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:org.bouncycastle.crypto.tls.DTLSTransport connect(org.bouncycastle.crypto.tls.TlsClient,org.bouncycastle.crypto.tls.DatagramTransport)",
            "org.bouncycastle.crypto.tls.DTLSRecordLayer:int receive(byte[],int,int,int)",
            "org.bouncycastle.crypto.tls.DTLSServerProtocol:org.bouncycastle.crypto.tls.DTLSTransport accept(org.bouncycastle.crypto.tls.TlsServer,org.bouncycastle.crypto.tls.DatagramTransport)",
            "org.bouncycastle.crypto.tls.DTLSTransport:int receive(byte[],int,int,int)",
            "org.bouncycastle.crypto.tls.DTLSTransport:void send(byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.tls.DTLSRecordLayer:void warn(short,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSRecordLayer:void close()",
            "org.bouncycastle.crypto.tls.DTLSRecordLayer:void closeTransport()"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsProtocol:void writeData(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsOutputStream:void write(byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsProtocol:void writeHandshakeMessage(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsProtocol$HandshakeMessage:void writeToRecordStream()",
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void sendServerHelloDoneMessage()"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsProtocol:void raiseAlert(short,short,java.lang.String,java.lang.Exception)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsProtocol:void failWithError(short,short,java.lang.String,java.lang.Exception)",
            "org.bouncycastle.crypto.tls.TlsProtocol:void raiseWarning(short,java.lang.String)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsProtocol:void sendChangeCipherSpecMessage()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsClientProtocol:void handleHandshakeMessage(short,byte[])",
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void handleHandshakeMessage(short,byte[])",
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void receiveClientKeyExchangeMessage(java.io.ByteArrayInputStream)"
        ]
    },
    "org.bouncycastle.crypto.tls.DTLSClientProtocol:org.bouncycastle.crypto.tls.DTLSTransport clientHandshake(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,org.bouncycastle.crypto.tls.DTLSRecordLayer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:org.bouncycastle.crypto.tls.DTLSTransport connect(org.bouncycastle.crypto.tls.TlsClient,org.bouncycastle.crypto.tls.DatagramTransport)"
        ]
    },
    "org.bouncycastle.crypto.tls.DTLSReliableHandshake:byte[] receiveMessageBody(short)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:org.bouncycastle.crypto.tls.DTLSTransport clientHandshake(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,org.bouncycastle.crypto.tls.DTLSRecordLayer)",
            "org.bouncycastle.crypto.tls.DTLSServerProtocol:org.bouncycastle.crypto.tls.DTLSTransport serverHandshake(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState,org.bouncycastle.crypto.tls.DTLSRecordLayer)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsProtocol:void safeReadRecord()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsProtocol:void completeHandshake()",
            "org.bouncycastle.crypto.tls.TlsProtocol:int readApplicationData(byte[],int,int)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ec.IESCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.ec.IESCipher:void engineInit(int,java.security.Key,java.security.AlgorithmParameters,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.IESCipher:void engineInit(int,java.security.Key,java.security.SecureRandom)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi:java.security.Key engineDoPhase(java.security.Key,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi:void initFromKey(java.security.Key)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi:void engineInit(java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi:void engineInit(java.security.Key,java.security.SecureRandom)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi:void engineInitVerify(java.security.PublicKey)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:java.lang.String toString(boolean,java.util.Hashtable)",
            "org.bouncycastle.i18n.LocalizedMessage$FilteredArguments:java.lang.Object filter(int,java.lang.Object)",
            "org.bouncycastle.i18n.filter.TrustedInput:java.lang.String toString()",
            "org.bouncycastle.i18n.filter.UntrustedInput:java.lang.String getString()",
            "org.bouncycastle.i18n.filter.UntrustedInput:java.lang.String toString()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.CertPath engineGenerateCertPath(java.util.List)"
        ]
    },
    "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineDeleteEntry(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineSetKeyEntry(java.lang.String,java.security.Key,char[],java.security.cert.Certificate[])"
        ]
    },
    "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:java.security.cert.Certificate[] engineGetCertificateChain(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineSetCertificateEntry(java.lang.String,java.security.cert.Certificate)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineSetKeyEntry(java.lang.String,java.security.Key,char[],java.security.cert.Certificate[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.examples.PKCS12Example:java.security.cert.Certificate createIntermediateCert(java.security.PublicKey,java.security.PrivateKey,java.security.cert.X509Certificate)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.examples.PKCS12Example:void main(java.lang.String[])"
        ]
    },
    "org.bouncycastle.jce.provider.CertPathValidatorUtilities:java.security.cert.TrustAnchor findTrustAnchor(java.security.cert.X509Certificate,java.util.Set,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:java.security.cert.TrustAnchor findTrustAnchor(java.security.cert.X509Certificate,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXAttrCertPathBuilderSpi:java.security.cert.CertPathBuilderResult build(org.bouncycastle.x509.X509AttributeCertificate,java.security.cert.X509Certificate,org.bouncycastle.x509.ExtendedPKIXBuilderParameters,java.util.List)",
            "org.bouncycastle.jce.provider.PKIXCertPathBuilderSpi:java.security.cert.CertPathBuilderResult build(java.security.cert.X509Certificate,org.bouncycastle.x509.ExtendedPKIXBuilderParameters,java.util.List)",
            "org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi:java.security.cert.CertPathValidatorResult engineValidate(java.security.cert.CertPath,java.security.cert.CertPathParameters)"
        ]
    },
    "org.bouncycastle.jce.provider.CertPathValidatorUtilities:java.security.PublicKey getNextWorkingKey(java.util.List,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi:java.security.cert.CertPathValidatorResult engineValidate(java.security.cert.CertPath,java.security.cert.CertPathParameters)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:java.util.Set processCRLF(java.security.cert.X509CRL,java.lang.Object,java.security.cert.X509Certificate,java.security.PublicKey,org.bouncycastle.x509.ExtendedPKIXParameters,java.util.List)",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkSignatures()"
        ]
    },
    "org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi:java.security.cert.CertPathValidatorResult engineValidate(java.security.cert.CertPath,java.security.cert.CertPathParameters)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.ocsp.CertificateID:org.bouncycastle.asn1.ocsp.CertID createCertID(org.bouncycastle.asn1.x509.AlgorithmIdentifier,java.security.cert.X509Certificate,org.bouncycastle.asn1.ASN1Integer,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.ocsp.CertificateID:void <init>(java.lang.String,java.security.cert.X509Certificate,java.math.BigInteger,java.lang.String)",
            "org.bouncycastle.ocsp.CertificateID:boolean matchesIssuer(java.security.cert.X509Certificate,java.lang.String)"
        ]
    },
    "org.bouncycastle.x509.AttributeCertificateHolder:boolean match(java.security.cert.Certificate)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.CertStoreCollectionSpi:java.util.Collection engineGetCertificates(java.security.cert.CertSelector)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean match(java.lang.Object)",
            "org.bouncycastle.x509.examples.AttrCertExample:void main(java.lang.String[])"
        ]
    },
    "org.bouncycastle.x509.PKIXCertPathReviewer:void checkSignatures()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.PKIXCertPathReviewer:void doChecks()"
        ]
    },
    "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure:org.bouncycastle.asn1.ASN1Sequence fromCertificate(java.security.cert.X509Certificate)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure:void <init>(java.security.cert.X509Certificate)"
        ]
    },
    "org.bouncycastle.jce.provider.X509CertificateObject:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:java.lang.String toString(boolean,java.util.Hashtable)",
            "org.bouncycastle.i18n.LocalizedMessage$FilteredArguments:java.lang.Object filter(int,java.lang.Object)",
            "org.bouncycastle.i18n.filter.TrustedInput:java.lang.String toString()",
            "org.bouncycastle.i18n.filter.UntrustedInput:java.lang.String getString()",
            "org.bouncycastle.i18n.filter.UntrustedInput:java.lang.String toString()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.CertPath engineGenerateCertPath(java.util.List)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsDHKeyExchange:void generateClientKeyExchange(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:byte[] generateClientKeyExchange(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState)",
            "org.bouncycastle.crypto.tls.TlsClientProtocol:void sendClientKeyExchangeMessage()"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsPSKKeyExchange:byte[] generateServerKeyExchange()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSServerProtocol:org.bouncycastle.crypto.tls.DTLSTransport serverHandshake(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState,org.bouncycastle.crypto.tls.DTLSRecordLayer)",
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void handleHandshakeMessage(short,byte[])"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dh.IESCipher:int engineDoFinal(byte[],int,int,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ec.IESCipher:int engineDoFinal(byte[],int,int,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.tls.TlsProtocol:void processHandshake()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsProtocol:void processRecord(short,byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.tls.DTLSServerProtocol:void processClientCertificate(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState,byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSServerProtocol:org.bouncycastle.crypto.tls.DTLSTransport serverHandshake(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState,org.bouncycastle.crypto.tls.DTLSRecordLayer)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsServerProtocol:void handleWarningMessage(short)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsProtocol:void processAlert()"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsServerProtocol:void receiveCertificateMessage(java.io.ByteArrayInputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void handleHandshakeMessage(short,byte[])"
        ]
    },
    "org.bouncycastle.crypto.agreement.srp.SRP6Client:java.math.BigInteger generateClientCredentials(byte[],byte[],byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsSRPKeyExchange:void generateClientKeyExchange(java.io.OutputStream)"
        ]
    },
    "org.bouncycastle.crypto.agreement.srp.SRP6VerifierGenerator:java.math.BigInteger generateVerifier(byte[],byte[],byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.commitments.GeneralHashCommitter:boolean isRevealed(org.bouncycastle.crypto.Commitment,byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.prng.DigestRandomGenerator:void addSeedMaterial(long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.prng.ReversedWindowGenerator:void addSeedMaterial(long)"
        ]
    },
    "org.bouncycastle.crypto.prng.DigestRandomGenerator:void cycleSeed()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.prng.DigestRandomGenerator:void generateState()"
        ]
    },
    "org.bouncycastle.crypto.prng.DigestRandomGenerator:void generateState()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.prng.DigestRandomGenerator:void nextBytes(byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.prng.drbg.DualECSP800DRBG:void <init>(org.bouncycastle.crypto.prng.drbg.DualECPoints[],org.bouncycastle.crypto.Digest,int,org.bouncycastle.crypto.prng.EntropySource,byte[],byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.prng.SP800SecureRandomBuilder$ConfigurableDualECDRBGProvider:org.bouncycastle.crypto.prng.drbg.SP80090DRBG get(org.bouncycastle.crypto.prng.EntropySource)",
            "org.bouncycastle.crypto.prng.drbg.DualECSP800DRBG:void <init>(org.bouncycastle.crypto.Digest,int,org.bouncycastle.crypto.prng.EntropySource,byte[],byte[])"
        ]
    },
    "org.bouncycastle.crypto.prng.drbg.DualECSP800DRBG:int generate(byte[],byte[],boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.prng.SP800SecureRandom:void nextBytes(byte[])"
        ]
    },
    "org.bouncycastle.crypto.prng.drbg.DualECSP800DRBG:void reseed(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.prng.SP800SecureRandom:void nextBytes(byte[])",
            "org.bouncycastle.crypto.prng.drbg.DualECSP800DRBG:int generate(byte[],byte[],boolean)"
        ]
    },
    "org.bouncycastle.crypto.prng.drbg.HashSP800DRBG:void <init>(org.bouncycastle.crypto.Digest,int,org.bouncycastle.crypto.prng.EntropySource,byte[],byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.prng.SP800SecureRandomBuilder$HashDRBGProvider:org.bouncycastle.crypto.prng.drbg.SP80090DRBG get(org.bouncycastle.crypto.prng.EntropySource)"
        ]
    },
    "org.bouncycastle.crypto.prng.drbg.HashSP800DRBG:void reseed(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.prng.SP800SecureRandom:void nextBytes(byte[])",
            "org.bouncycastle.crypto.prng.drbg.HashSP800DRBG:int generate(byte[],byte[],boolean)"
        ]
    },
    "org.bouncycastle.crypto.io.SignerOutputStream:void write(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void <init>(java.io.OutputStream,int)",
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void bsFinishedWithStream()",
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void bsW(int,int)",
            "org.bouncycastle.asn1.ASN1OutputStream:void write(int)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeNull()",
            "org.bouncycastle.asn1.BERGenerator:void writeHdr(int)",
            "org.bouncycastle.asn1.BERGenerator:void writeBERBody(java.io.InputStream)",
            "org.bouncycastle.asn1.BERGenerator:void writeBEREnd()",
            "org.bouncycastle.asn1.DERGenerator:void writeLength(java.io.OutputStream,int)",
            "org.bouncycastle.asn1.DERGenerator:void writeDEREncoded(java.io.OutputStream,int,byte[])",
            "org.bouncycastle.crypto.io.CipherOutputStream:void write(int)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint8(short,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint8(int,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint16(int,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint24(int,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint32(long,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint48(long,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint64(long,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeVersion(org.bouncycastle.crypto.tls.ProtocolVersion,java.io.OutputStream)",
            "org.bouncycastle.util.Strings:void toUTF8ByteArray(char[],java.io.OutputStream)",
            "org.bouncycastle.util.encoders.Base64Encoder:int encode(byte[],int,int,java.io.OutputStream)",
            "org.bouncycastle.util.encoders.Base64Encoder:int decode(byte[],int,int,java.io.OutputStream)",
            "org.bouncycastle.util.encoders.Base64Encoder:int decode(java.lang.String,java.io.OutputStream)",
            "org.bouncycastle.util.encoders.Base64Encoder:int decodeLastBlock(java.io.OutputStream,char,char,char,char)",
            "org.bouncycastle.util.encoders.HexEncoder:int encode(byte[],int,int,java.io.OutputStream)",
            "org.bouncycastle.util.encoders.HexEncoder:int decode(byte[],int,int,java.io.OutputStream)",
            "org.bouncycastle.util.encoders.HexEncoder:int decode(java.lang.String,java.io.OutputStream)",
            "org.bouncycastle.util.io.TeeInputStream:int read()",
            "org.bouncycastle.util.io.TeeOutputStream:void write(int)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.rsa.ISOSignatureSpi:void engineUpdate(byte)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.rsa.PSSSignatureSpi:void engineUpdate(byte)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:byte[] calculateMacKey(java.math.BigInteger,org.bouncycastle.crypto.Digest)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:java.math.BigInteger calculateMacTag(java.lang.String,java.lang.String,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,org.bouncycastle.crypto.Digest)"
        ]
    },
    "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:java.math.BigInteger calculateHashForZeroKnowledgeProof(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.lang.String,org.bouncycastle.crypto.Digest)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:java.math.BigInteger[] calculateZeroKnowledgeProof(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.lang.String,org.bouncycastle.crypto.Digest,java.security.SecureRandom)",
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:void validateZeroKnowledgeProof(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger[],java.lang.String,org.bouncycastle.crypto.Digest)"
        ]
    },
    "org.bouncycastle.crypto.agreement.srp.SRP6Util:java.math.BigInteger calculateK(org.bouncycastle.crypto.Digest,java.math.BigInteger,java.math.BigInteger)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.agreement.srp.SRP6Client:java.math.BigInteger calculateS()",
            "org.bouncycastle.crypto.agreement.srp.SRP6Server:java.math.BigInteger generateServerCredentials()"
        ]
    },
    "org.bouncycastle.crypto.agreement.srp.SRP6Util:java.math.BigInteger calculateU(org.bouncycastle.crypto.Digest,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.agreement.srp.SRP6Client:java.math.BigInteger calculateSecret(java.math.BigInteger)",
            "org.bouncycastle.crypto.agreement.srp.SRP6Server:java.math.BigInteger calculateSecret(java.math.BigInteger)"
        ]
    },
    "org.bouncycastle.crypto.commitments.HashCommitter:boolean isRevealed(org.bouncycastle.crypto.Commitment,byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.encodings.OAEPEncoding:void <init>(org.bouncycastle.crypto.AsymmetricBlockCipher,org.bouncycastle.crypto.Digest,byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.encodings.OAEPEncoding:void <init>(org.bouncycastle.crypto.AsymmetricBlockCipher)",
            "org.bouncycastle.crypto.encodings.OAEPEncoding:void <init>(org.bouncycastle.crypto.AsymmetricBlockCipher,org.bouncycastle.crypto.Digest)",
            "org.bouncycastle.jcajce.provider.asymmetric.elgamal.CipherSpi:void initFromSpec(javax.crypto.spec.OAEPParameterSpec)",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi:void initFromSpec(javax.crypto.spec.OAEPParameterSpec)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi:void engineInit(int,java.security.Key,java.security.AlgorithmParameters,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi:void engineInit(int,java.security.Key,java.security.SecureRandom)"
        ]
    },
    "org.bouncycastle.crypto.encodings.OAEPEncoding:byte[] decodeBlock(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.encodings.OAEPEncoding:byte[] processBlock(byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.engines.DESedeWrapEngine:boolean checkCMSKeyChecksum(byte[],byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.engines.DESedeWrapEngine:byte[] unwrap(byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.engines.RC2WrapEngine:boolean checkCMSKeyChecksum(byte[],byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.engines.RC2WrapEngine:byte[] unwrap(byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.agreement.kdf.ECDHKEKGenerator:int generateBytes(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.agreement.kdf.ECDHKEKGenerator:int generateBytes(byte[],int,int)",
            "org.bouncycastle.crypto.engines.IESEngine:byte[] encryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.engines.IESEngine:byte[] decryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.kems.ECIESKeyEncapsulation:org.bouncycastle.crypto.CipherParameters encrypt(byte[],int,int)",
            "org.bouncycastle.crypto.kems.ECIESKeyEncapsulation:org.bouncycastle.crypto.CipherParameters decrypt(byte[],int,int,int)",
            "org.bouncycastle.crypto.kems.RSAKeyEncapsulation:org.bouncycastle.crypto.CipherParameters encrypt(byte[],int,int)",
            "org.bouncycastle.crypto.kems.RSAKeyEncapsulation:org.bouncycastle.crypto.CipherParameters decrypt(byte[],int,int,int)",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi:javax.crypto.SecretKey engineGenerateSecret(java.lang.String)"
        ]
    },
    "org.bouncycastle.crypto.generators.DSAParametersGenerator:java.math.BigInteger calculateGenerator_FIPS186_3_Verifiable(org.bouncycastle.crypto.Digest,java.math.BigInteger,java.math.BigInteger,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.generators.DSAParametersGenerator:org.bouncycastle.crypto.params.DSAParameters generateParameters_FIPS186_3()"
        ]
    },
    "org.bouncycastle.crypto.generators.OpenSSLPBEParametersGenerator:org.bouncycastle.crypto.CipherParameters generateDerivedParameters(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.generators.OpenSSLPBEParametersGenerator:org.bouncycastle.crypto.CipherParameters generateDerivedMacParameters(int)",
            "org.bouncycastle.jcajce.provider.symmetric.util.PBE$Util:org.bouncycastle.crypto.CipherParameters makePBEParameters(org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey,java.security.spec.AlgorithmParameterSpec,java.lang.String)",
            "org.bouncycastle.jcajce.provider.symmetric.util.PBE$Util:org.bouncycastle.crypto.CipherParameters makePBEParameters(javax.crypto.spec.PBEKeySpec,int,int,int,int)",
            "org.bouncycastle.jce.provider.BrokenPBE$Util:org.bouncycastle.crypto.CipherParameters makePBEParameters(org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey,java.security.spec.AlgorithmParameterSpec,int,int,java.lang.String,int,int)"
        ]
    },
    "org.bouncycastle.crypto.generators.OpenSSLPBEParametersGenerator:org.bouncycastle.crypto.CipherParameters generateDerivedParameters(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.symmetric.util.PBE$Util:org.bouncycastle.crypto.CipherParameters makePBEParameters(org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey,java.security.spec.AlgorithmParameterSpec,java.lang.String)",
            "org.bouncycastle.jcajce.provider.symmetric.util.PBE$Util:org.bouncycastle.crypto.CipherParameters makePBEParameters(javax.crypto.spec.PBEKeySpec,int,int,int,int)",
            "org.bouncycastle.jce.provider.BrokenPBE$Util:org.bouncycastle.crypto.CipherParameters makePBEParameters(org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey,java.security.spec.AlgorithmParameterSpec,int,int,java.lang.String,int,int)"
        ]
    },
    "org.bouncycastle.crypto.generators.PKCS12ParametersGenerator:org.bouncycastle.crypto.CipherParameters generateDerivedParameters(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.symmetric.util.PBE$Util:org.bouncycastle.crypto.CipherParameters makePBEParameters(org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey,java.security.spec.AlgorithmParameterSpec,java.lang.String)",
            "org.bouncycastle.jcajce.provider.symmetric.util.PBE$Util:org.bouncycastle.crypto.CipherParameters makePBEParameters(javax.crypto.spec.PBEKeySpec,int,int,int,int)",
            "org.bouncycastle.jce.provider.BrokenPBE$Util:org.bouncycastle.crypto.CipherParameters makePBEParameters(org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey,java.security.spec.AlgorithmParameterSpec,int,int,java.lang.String,int,int)"
        ]
    },
    "org.bouncycastle.crypto.generators.PKCS12ParametersGenerator:org.bouncycastle.crypto.CipherParameters generateDerivedParameters(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.symmetric.util.PBE$Util:org.bouncycastle.crypto.CipherParameters makePBEParameters(org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey,java.security.spec.AlgorithmParameterSpec,java.lang.String)",
            "org.bouncycastle.jcajce.provider.symmetric.util.PBE$Util:org.bouncycastle.crypto.CipherParameters makePBEParameters(javax.crypto.spec.PBEKeySpec,int,int,int,int)",
            "org.bouncycastle.jce.provider.BrokenPBE$Util:org.bouncycastle.crypto.CipherParameters makePBEParameters(org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey,java.security.spec.AlgorithmParameterSpec,int,int,java.lang.String,int,int)"
        ]
    },
    "org.bouncycastle.crypto.generators.PKCS12ParametersGenerator:org.bouncycastle.crypto.CipherParameters generateDerivedMacParameters(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi:void engineStore(java.io.OutputStream,char[])",
            "org.bouncycastle.jcajce.provider.symmetric.util.PBE$Util:org.bouncycastle.crypto.CipherParameters makePBEMacParameters(org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey,java.security.spec.AlgorithmParameterSpec)",
            "org.bouncycastle.jcajce.provider.symmetric.util.PBE$Util:org.bouncycastle.crypto.CipherParameters makePBEMacParameters(javax.crypto.spec.PBEKeySpec,int,int,int)",
            "org.bouncycastle.jce.provider.BrokenPBE$Util:org.bouncycastle.crypto.CipherParameters makePBEMacParameters(org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey,java.security.spec.AlgorithmParameterSpec,int,int,int)"
        ]
    },
    "org.bouncycastle.crypto.generators.PKCS5S1ParametersGenerator:org.bouncycastle.crypto.CipherParameters generateDerivedParameters(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.generators.PKCS5S1ParametersGenerator:org.bouncycastle.crypto.CipherParameters generateDerivedMacParameters(int)",
            "org.bouncycastle.jcajce.provider.symmetric.util.PBE$Util:org.bouncycastle.crypto.CipherParameters makePBEParameters(org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey,java.security.spec.AlgorithmParameterSpec,java.lang.String)",
            "org.bouncycastle.jcajce.provider.symmetric.util.PBE$Util:org.bouncycastle.crypto.CipherParameters makePBEParameters(javax.crypto.spec.PBEKeySpec,int,int,int,int)",
            "org.bouncycastle.jce.provider.BrokenPBE$Util:org.bouncycastle.crypto.CipherParameters makePBEParameters(org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey,java.security.spec.AlgorithmParameterSpec,int,int,java.lang.String,int,int)"
        ]
    },
    "org.bouncycastle.crypto.generators.PKCS5S1ParametersGenerator:org.bouncycastle.crypto.CipherParameters generateDerivedParameters(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.symmetric.util.PBE$Util:org.bouncycastle.crypto.CipherParameters makePBEParameters(org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey,java.security.spec.AlgorithmParameterSpec,java.lang.String)",
            "org.bouncycastle.jcajce.provider.symmetric.util.PBE$Util:org.bouncycastle.crypto.CipherParameters makePBEParameters(javax.crypto.spec.PBEKeySpec,int,int,int,int)",
            "org.bouncycastle.jce.provider.BrokenPBE$Util:org.bouncycastle.crypto.CipherParameters makePBEParameters(org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey,java.security.spec.AlgorithmParameterSpec,int,int,java.lang.String,int,int)"
        ]
    },
    "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineReset()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.prng.DigestRandomGenerator:void addSeedMaterial(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.prng.ReversedWindowGenerator:void addSeedMaterial(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiCipher:byte[] messageEncrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiCipher:byte[] messageDecrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiCipher:byte[] messageEncrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiCipher:byte[] messageDecrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalCipher:byte[] messageEncrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalCipher:byte[] messageDecrypt(byte[])"
        ]
    },
    "org.bouncycastle.crypto.prng.drbg.HashSP800DRBG:int generate(byte[],byte[],boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.prng.SP800SecureRandom:void nextBytes(byte[])"
        ]
    },
    "org.bouncycastle.crypto.prng.drbg.HashSP800DRBG:byte[] hashgen(byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.prng.drbg.HashSP800DRBG:int generate(byte[],byte[],boolean)"
        ]
    },
    "org.bouncycastle.crypto.io.SignerOutputStream:void write(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1OutputStream:void write(byte[],int,int)",
            "org.bouncycastle.crypto.io.CipherOutputStream:void write(byte[],int,int)",
            "org.bouncycastle.crypto.io.CipherOutputStream:void close()",
            "org.bouncycastle.crypto.tls.CertificateURL$ListBuffer16:void encodeTo(java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.RecordStream:byte[] decodeAndVerify(short,java.io.InputStream,int)",
            "org.bouncycastle.crypto.tls.RecordStream:void writeRecord(short,byte[],int,int)",
            "org.bouncycastle.util.io.BufferingOutputStream:void write(byte[],int,int)",
            "org.bouncycastle.util.io.BufferingOutputStream:void flush()",
            "org.bouncycastle.util.io.Streams:void pipeAll(java.io.InputStream,java.io.OutputStream)",
            "org.bouncycastle.util.io.Streams:long pipeAllLimited(java.io.InputStream,long,java.io.OutputStream)",
            "org.bouncycastle.util.io.TeeInputStream:int read(byte[],int,int)",
            "org.bouncycastle.util.io.TeeOutputStream:void write(byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.tls.SignerInputBuffer:void updateSigner(org.bouncycastle.crypto.Signer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsDHEKeyExchange:void processServerKeyExchange(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsECDHEKeyExchange:void processServerKeyExchange(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsSRPKeyExchange:void processServerKeyExchange(java.io.InputStream)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsDHEKeyExchange:org.bouncycastle.crypto.Signer initVerifyer(org.bouncycastle.crypto.tls.TlsSigner,org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.tls.SecurityParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsDHEKeyExchange:void processServerKeyExchange(java.io.InputStream)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsDSASigner:boolean verifyRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,byte[],org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.AbstractTlsSigner:boolean verifyRawSignature(byte[],org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])",
            "org.bouncycastle.crypto.tls.DTLSServerProtocol:void processCertificateVerify(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState,byte[],org.bouncycastle.crypto.tls.TlsHandshakeHash)",
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void receiveCertificateVerifyMessage(java.io.ByteArrayInputStream)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsECDHEKeyExchange:org.bouncycastle.crypto.Signer initVerifyer(org.bouncycastle.crypto.tls.TlsSigner,org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.tls.SecurityParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsECDHEKeyExchange:void processServerKeyExchange(java.io.InputStream)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsRSASigner:boolean verifyRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,byte[],org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.AbstractTlsSigner:boolean verifyRawSignature(byte[],org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])",
            "org.bouncycastle.crypto.tls.DTLSServerProtocol:void processCertificateVerify(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState,byte[],org.bouncycastle.crypto.tls.TlsHandshakeHash)",
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void receiveCertificateVerifyMessage(java.io.ByteArrayInputStream)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsSRPKeyExchange:org.bouncycastle.crypto.Signer initVerifyer(org.bouncycastle.crypto.tls.TlsSigner,org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.tls.SecurityParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsSRPKeyExchange:void processServerKeyExchange(java.io.InputStream)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsECDHEKeyExchange:void processServerKeyExchange(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:void processServerKeyExchange(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,byte[])",
            "org.bouncycastle.crypto.tls.TlsClientProtocol:void handleHandshakeMessage(short,byte[])"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsSRPKeyExchange:void processServerKeyExchange(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:void processServerKeyExchange(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,byte[])",
            "org.bouncycastle.crypto.tls.TlsClientProtocol:void handleHandshakeMessage(short,byte[])"
        ]
    },
    "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:void updateWithRecoveredMessage(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:boolean verifySignature(byte[])"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.rsa.ISOSignatureSpi:void engineUpdate(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.rsa.ISOSignatureSpi:boolean engineVerify(byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.rsa.PSSSignatureSpi:void engineUpdate(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.rsa.PSSSignatureSpi:boolean engineVerify(byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.tls.DTLSReliableHandshake:org.bouncycastle.crypto.tls.DTLSReliableHandshake$Message updateHandshakeMessagesDigest(org.bouncycastle.crypto.tls.DTLSReliableHandshake$Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSReliableHandshake:void sendMessage(short,byte[])",
            "org.bouncycastle.crypto.tls.DTLSReliableHandshake:org.bouncycastle.crypto.tls.DTLSReliableHandshake$Message receiveMessage()"
        ]
    },
    "org.bouncycastle.crypto.tls.RecordStream:void updateHandshakeData(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.RecordStream:void writeRecord(short,byte[],int,int)",
            "org.bouncycastle.crypto.tls.TlsProtocol:void processHandshake()"
        ]
    },
    "org.bouncycastle.crypto.tls.CombinedHash:int doFinal(byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:java.math.BigInteger calculateHashForZeroKnowledgeProof(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.lang.String,org.bouncycastle.crypto.Digest)",
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:byte[] calculateMacKey(java.math.BigInteger,org.bouncycastle.crypto.Digest)",
            "org.bouncycastle.crypto.agreement.kdf.DHKEKGenerator:int generateBytes(byte[],int,int)",
            "org.bouncycastle.crypto.agreement.srp.SRP6Util:java.math.BigInteger calculateX(org.bouncycastle.crypto.Digest,java.math.BigInteger,byte[],byte[],byte[])",
            "org.bouncycastle.crypto.agreement.srp.SRP6Util:java.math.BigInteger hashPaddedPair(org.bouncycastle.crypto.Digest,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)",
            "org.bouncycastle.crypto.commitments.GeneralHashCommitter:byte[] calculateCommitment(byte[],byte[])",
            "org.bouncycastle.crypto.commitments.HashCommitter:byte[] calculateCommitment(byte[],byte[])",
            "org.bouncycastle.crypto.encodings.OAEPEncoding:void <init>(org.bouncycastle.crypto.AsymmetricBlockCipher,org.bouncycastle.crypto.Digest,org.bouncycastle.crypto.Digest,byte[])",
            "org.bouncycastle.crypto.encodings.OAEPEncoding:byte[] maskGeneratorFunction1(byte[],int,int,int)",
            "org.bouncycastle.crypto.engines.DESedeWrapEngine:byte[] calculateCMSKeyChecksum(byte[])",
            "org.bouncycastle.crypto.engines.RC2WrapEngine:byte[] calculateCMSKeyChecksum(byte[])",
            "org.bouncycastle.crypto.generators.BaseKDFBytesGenerator:int generateBytes(byte[],int,int)",
            "org.bouncycastle.crypto.generators.DSAParametersGenerator:void hash(org.bouncycastle.crypto.Digest,byte[],byte[])",
            "org.bouncycastle.crypto.generators.MGF1BytesGenerator:int generateBytes(byte[],int,int)",
            "org.bouncycastle.crypto.generators.OpenSSLPBEParametersGenerator:byte[] generateDerivedKey(int)",
            "org.bouncycastle.crypto.generators.PKCS12ParametersGenerator:byte[] generateDerivedKey(int,int)",
            "org.bouncycastle.crypto.generators.PKCS5S1ParametersGenerator:byte[] generateDerivedKey()",
            "org.bouncycastle.crypto.io.DigestOutputStream:byte[] getDigest()",
            "org.bouncycastle.crypto.macs.HMac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.HMac:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.macs.OldHMac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.OldHMac:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.prng.DigestRandomGenerator:void digestDoFinal(byte[])",
            "org.bouncycastle.crypto.prng.drbg.HashSP800DRBG:byte[] hash(byte[])",
            "org.bouncycastle.crypto.prng.drbg.Utils:byte[] hash_df(org.bouncycastle.crypto.Digest,byte[],int)",
            "org.bouncycastle.crypto.signers.DSADigestSigner:byte[] generateSignature()",
            "org.bouncycastle.crypto.signers.DSADigestSigner:boolean verifySignature(byte[])",
            "org.bouncycastle.crypto.signers.GenericSigner:byte[] generateSignature()",
            "org.bouncycastle.crypto.signers.GenericSigner:boolean verifySignature(byte[])",
            "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:void updateWithRecoveredMessage(byte[])",
            "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:byte[] generateSignature()",
            "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:boolean verifySignature(byte[])",
            "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:byte[] maskGeneratorFunction1(byte[],int,int,int)",
            "org.bouncycastle.crypto.signers.ISO9796d2Signer:byte[] generateSignature()",
            "org.bouncycastle.crypto.signers.ISO9796d2Signer:boolean verifySignature(byte[])",
            "org.bouncycastle.crypto.signers.PSSSigner:byte[] generateSignature()",
            "org.bouncycastle.crypto.signers.PSSSigner:boolean verifySignature(byte[])",
            "org.bouncycastle.crypto.signers.PSSSigner:byte[] maskGeneratorFunction1(byte[],int,int,int)",
            "org.bouncycastle.crypto.signers.RSADigestSigner:byte[] generateSignature()",
            "org.bouncycastle.crypto.signers.RSADigestSigner:boolean verifySignature(byte[])",
            "org.bouncycastle.crypto.tls.CombinedHash:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.tls.CombinedHash:void ssl3Complete(org.bouncycastle.crypto.Digest,byte[],byte[],int)",
            "org.bouncycastle.crypto.tls.DeferredHash:byte[] getFinalHash(short)",
            "org.bouncycastle.crypto.tls.SSL3Mac:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.tls.TlsDHEKeyExchange:byte[] generateServerKeyExchange()",
            "org.bouncycastle.crypto.tls.TlsECDHEKeyExchange:byte[] generateServerKeyExchange()",
            "org.bouncycastle.crypto.tls.TlsProtocol:byte[] getCurrentPRFHash(org.bouncycastle.crypto.tls.TlsContext,org.bouncycastle.crypto.tls.TlsHandshakeHash,byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner:byte[] engineSign()",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner:boolean engineVerify(byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpi:byte[] engineSign()",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpi:boolean engineVerify(byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.SignatureSpi:byte[] engineSign()",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.SignatureSpi:boolean engineVerify(byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.SignatureSpi:byte[] engineSign()",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.SignatureSpi:boolean engineVerify(byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi:byte[] engineSign()",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi:boolean engineVerify(byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.PSSSignatureSpi$NullPssDigest:int doFinal(byte[],int)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.DSABase:byte[] engineSign()",
            "org.bouncycastle.jcajce.provider.asymmetric.util.DSABase:boolean engineVerify(byte[])",
            "org.bouncycastle.jcajce.provider.digest.BCMessageDigest:byte[] engineDigest()",
            "org.bouncycastle.jce.provider.BrokenKDF2BytesGenerator:int generateBytes(byte[],int,int)",
            "org.bouncycastle.jce.provider.OldPKCS12ParametersGenerator:byte[] generateDerivedKey(int,int)",
            "org.bouncycastle.pqc.crypto.DigestingMessageSigner:byte[] generateSignature()",
            "org.bouncycastle.pqc.crypto.DigestingMessageSigner:boolean verify(byte[])",
            "org.bouncycastle.pqc.crypto.gmss.GMSSLeaf:void updateLeafCalc()",
            "org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters:void computeAuthPaths(int)",
            "org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc:void update(byte[])",
            "org.bouncycastle.pqc.crypto.gmss.GMSSRootSig:void initSign(byte[],byte[])",
            "org.bouncycastle.pqc.crypto.gmss.GMSSRootSig:void oneStep()",
            "org.bouncycastle.pqc.crypto.gmss.GMSSSigner:boolean verifySignature(byte[],byte[])",
            "org.bouncycastle.pqc.crypto.gmss.Treehash:void update(org.bouncycastle.pqc.crypto.gmss.util.GMSSRandom,byte[])",
            "org.bouncycastle.pqc.crypto.gmss.util.GMSSRandom:byte[] nextSeed(byte[])",
            "org.bouncycastle.pqc.crypto.gmss.util.WinternitzOTSVerify:byte[] Verify(byte[],byte[])",
            "org.bouncycastle.pqc.crypto.gmss.util.WinternitzOTSignature:byte[] getPublicKey()",
            "org.bouncycastle.pqc.crypto.gmss.util.WinternitzOTSignature:byte[] getSignature(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiCipher:byte[] messageEncrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiCipher:byte[] messageDecrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher:byte[] messageEncrypt()",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiCipher:byte[] messageEncrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiCipher:byte[] messageDecrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiDigestCipher:byte[] messageEncrypt()",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePKCSDigestCipher:byte[] messageEncrypt()",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalCipher:byte[] messageEncrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalCipher:byte[] messageDecrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalDigestCipher:byte[] messageEncrypt()",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.SignatureSpi:byte[] engineSign()",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.SignatureSpi:boolean engineVerify(byte[])"
        ]
    },
    "org.bouncycastle.crypto.tls.DeferredHash:org.bouncycastle.crypto.tls.TlsHandshakeHash notifyPRFDetermined()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSReliableHandshake:void notifyHelloComplete()",
            "org.bouncycastle.crypto.tls.RecordStream:void notifyHelloComplete()"
        ]
    },
    "org.bouncycastle.crypto.tls.DeferredHash:org.bouncycastle.crypto.tls.TlsHandshakeHash stopTracking()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSReliableHandshake:org.bouncycastle.crypto.tls.TlsHandshakeHash prepareToFinish()",
            "org.bouncycastle.crypto.tls.RecordStream:org.bouncycastle.crypto.tls.TlsHandshakeHash prepareToFinish()"
        ]
    },
    "org.bouncycastle.crypto.tls.DeferredHash:org.bouncycastle.crypto.Digest forkPRFHash()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsProtocol:byte[] getCurrentPRFHash(org.bouncycastle.crypto.tls.TlsContext,org.bouncycastle.crypto.tls.TlsHandshakeHash,byte[])"
        ]
    },
    "org.bouncycastle.crypto.tls.DeferredHash:byte[] getFinalHash(short)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:org.bouncycastle.crypto.tls.DTLSTransport clientHandshake(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,org.bouncycastle.crypto.tls.DTLSRecordLayer)",
            "org.bouncycastle.crypto.tls.TlsClientProtocol:void handleHandshakeMessage(short,byte[])"
        ]
    },
    "org.bouncycastle.crypto.tls.DeferredHash:void checkStopBuffering()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DeferredHash:void sealHashAlgorithms()",
            "org.bouncycastle.crypto.tls.DeferredHash:org.bouncycastle.crypto.Digest forkPRFHash()"
        ]
    },
    "org.bouncycastle.crypto.tls.SSL3Mac:void init(org.bouncycastle.crypto.CipherParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.engines.IESEngine:byte[] encryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.engines.IESEngine:byte[] decryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.generators.KDFCounterBytesGenerator:void init(org.bouncycastle.crypto.DerivationParameters)",
            "org.bouncycastle.crypto.generators.KDFDoublePipelineIterationBytesGenerator:void init(org.bouncycastle.crypto.DerivationParameters)",
            "org.bouncycastle.crypto.generators.KDFFeedbackBytesGenerator:void init(org.bouncycastle.crypto.DerivationParameters)",
            "org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator:byte[] generateDerivedKey(int)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:void hmac_DRBG_Update_Func(byte[],byte)",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:int generate(byte[],byte[],boolean)",
            "org.bouncycastle.crypto.tls.TlsMac:void <init>(org.bouncycastle.crypto.tls.TlsContext,org.bouncycastle.crypto.Digest,byte[],int,int)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineInit(java.security.Key,java.security.spec.AlgorithmParameterSpec)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsProtocol:byte[] createVerifyData(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsProtocol:void processHandshake()",
            "org.bouncycastle.crypto.tls.TlsProtocol:void sendFinishedMessage()"
        ]
    },
    "org.bouncycastle.crypto.io.DigestOutputStream:byte[] getDigest()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$BouncyCastleStore:void engineStore(java.io.OutputStream,char[])"
        ]
    },
    "org.bouncycastle.crypto.prng.DigestRandomGenerator:void digestDoFinal(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.prng.DigestRandomGenerator:void addSeedMaterial(byte[])",
            "org.bouncycastle.crypto.prng.DigestRandomGenerator:void addSeedMaterial(long)",
            "org.bouncycastle.crypto.prng.DigestRandomGenerator:void cycleSeed()",
            "org.bouncycastle.crypto.prng.DigestRandomGenerator:void generateState()"
        ]
    },
    "org.bouncycastle.crypto.signers.DSADigestSigner:byte[] generateSignature()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsDSASigner:byte[] generateRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])",
            "org.bouncycastle.crypto.tls.TlsRSASigner:byte[] generateRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])"
        ]
    },
    "org.bouncycastle.crypto.signers.DSADigestSigner:boolean verifySignature(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsDHEKeyExchange:void processServerKeyExchange(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsDSASigner:boolean verifyRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,byte[],org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])",
            "org.bouncycastle.crypto.tls.TlsECDHEKeyExchange:void processServerKeyExchange(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsRSASigner:boolean verifyRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,byte[],org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])",
            "org.bouncycastle.crypto.tls.TlsSRPKeyExchange:void processServerKeyExchange(java.io.InputStream)"
        ]
    },
    "org.bouncycastle.crypto.signers.GenericSigner:byte[] generateSignature()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsDSASigner:byte[] generateRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])",
            "org.bouncycastle.crypto.tls.TlsRSASigner:byte[] generateRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])"
        ]
    },
    "org.bouncycastle.crypto.signers.GenericSigner:boolean verifySignature(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsDHEKeyExchange:void processServerKeyExchange(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsDSASigner:boolean verifyRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,byte[],org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])",
            "org.bouncycastle.crypto.tls.TlsECDHEKeyExchange:void processServerKeyExchange(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsRSASigner:boolean verifyRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,byte[],org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])",
            "org.bouncycastle.crypto.tls.TlsSRPKeyExchange:void processServerKeyExchange(java.io.InputStream)"
        ]
    },
    "org.bouncycastle.crypto.signers.ISO9796d2Signer:byte[] generateSignature()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsDSASigner:byte[] generateRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])",
            "org.bouncycastle.crypto.tls.TlsRSASigner:byte[] generateRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.ISOSignatureSpi:byte[] engineSign()"
        ]
    },
    "org.bouncycastle.crypto.signers.RSADigestSigner:byte[] generateSignature()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsDSASigner:byte[] generateRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])",
            "org.bouncycastle.crypto.tls.TlsRSASigner:byte[] generateRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])"
        ]
    },
    "org.bouncycastle.crypto.signers.RSADigestSigner:boolean verifySignature(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsDHEKeyExchange:void processServerKeyExchange(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsDSASigner:boolean verifyRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,byte[],org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])",
            "org.bouncycastle.crypto.tls.TlsECDHEKeyExchange:void processServerKeyExchange(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsRSASigner:boolean verifyRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,byte[],org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])",
            "org.bouncycastle.crypto.tls.TlsSRPKeyExchange:void processServerKeyExchange(java.io.InputStream)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner:byte[] engineSign()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner:boolean engineVerify(byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpi:byte[] engineSign()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpiLe:byte[] engineSign()"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpi:boolean engineVerify(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpiLe:boolean engineVerify(byte[])"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ecgost.SignatureSpi:byte[] engineSign()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ecgost.SignatureSpi:boolean engineVerify(byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.gost.SignatureSpi:byte[] engineSign()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.gost.SignatureSpi:boolean engineVerify(byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi:byte[] engineSign()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi:boolean engineVerify(byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.util.DSABase:byte[] engineSign()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.util.DSABase:boolean engineVerify(byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.digest.BCMessageDigest:byte[] engineDigest()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.crypto.DigestingMessageSigner:byte[] generateSignature()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsDSASigner:byte[] generateRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])",
            "org.bouncycastle.crypto.tls.TlsRSASigner:byte[] generateRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])"
        ]
    },
    "org.bouncycastle.pqc.crypto.DigestingMessageSigner:boolean verify(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.crypto.DigestingMessageSigner:boolean verifySignature(byte[])"
        ]
    },
    "org.bouncycastle.pqc.jcajce.provider.rainbow.SignatureSpi:byte[] engineSign()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.jcajce.provider.rainbow.SignatureSpi:boolean engineVerify(byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.provider.OldPKCS12ParametersGenerator:org.bouncycastle.crypto.CipherParameters generateDerivedParameters(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.symmetric.util.PBE$Util:org.bouncycastle.crypto.CipherParameters makePBEParameters(org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey,java.security.spec.AlgorithmParameterSpec,java.lang.String)",
            "org.bouncycastle.jcajce.provider.symmetric.util.PBE$Util:org.bouncycastle.crypto.CipherParameters makePBEParameters(javax.crypto.spec.PBEKeySpec,int,int,int,int)",
            "org.bouncycastle.jce.provider.BrokenPBE$Util:org.bouncycastle.crypto.CipherParameters makePBEParameters(org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey,java.security.spec.AlgorithmParameterSpec,int,int,java.lang.String,int,int)"
        ]
    },
    "org.bouncycastle.jce.provider.OldPKCS12ParametersGenerator:org.bouncycastle.crypto.CipherParameters generateDerivedParameters(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.symmetric.util.PBE$Util:org.bouncycastle.crypto.CipherParameters makePBEParameters(org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey,java.security.spec.AlgorithmParameterSpec,java.lang.String)",
            "org.bouncycastle.jcajce.provider.symmetric.util.PBE$Util:org.bouncycastle.crypto.CipherParameters makePBEParameters(javax.crypto.spec.PBEKeySpec,int,int,int,int)",
            "org.bouncycastle.jce.provider.BrokenPBE$Util:org.bouncycastle.crypto.CipherParameters makePBEParameters(org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey,java.security.spec.AlgorithmParameterSpec,int,int,java.lang.String,int,int)"
        ]
    },
    "org.bouncycastle.jce.provider.OldPKCS12ParametersGenerator:org.bouncycastle.crypto.CipherParameters generateDerivedMacParameters(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.symmetric.util.PBE$Util:org.bouncycastle.crypto.CipherParameters makePBEMacParameters(org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey,java.security.spec.AlgorithmParameterSpec)",
            "org.bouncycastle.jcajce.provider.symmetric.util.PBE$Util:org.bouncycastle.crypto.CipherParameters makePBEMacParameters(javax.crypto.spec.PBEKeySpec,int,int,int)",
            "org.bouncycastle.jce.provider.BrokenPBE$Util:org.bouncycastle.crypto.CipherParameters makePBEMacParameters(org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey,java.security.spec.AlgorithmParameterSpec,int,int,int)"
        ]
    },
    "org.bouncycastle.pqc.crypto.gmss.GMSSLeaf:org.bouncycastle.pqc.crypto.gmss.GMSSLeaf nextLeaf()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters:void nextTree(int)",
            "org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters:void updateKey(int)"
        ]
    },
    "org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters:void updateKey(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters:void nextKey(int)"
        ]
    },
    "org.bouncycastle.pqc.crypto.gmss.GMSSKeyPairGenerator:org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc generateCurrentAuthpathAndRoot(byte[],java.util.Vector,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.crypto.gmss.GMSSKeyPairGenerator:org.bouncycastle.crypto.AsymmetricCipherKeyPair genKeyPair()"
        ]
    },
    "org.bouncycastle.pqc.crypto.gmss.GMSSKeyPairGenerator:org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc generateNextAuthpathAndRoot(java.util.Vector,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.crypto.gmss.GMSSKeyPairGenerator:org.bouncycastle.crypto.AsymmetricCipherKeyPair genKeyPair()"
        ]
    },
    "org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc:void update(byte[],byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters:void updateNextNextAuthRoot(int)"
        ]
    },
    "org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters:void <init>(int[],byte[][],byte[][],byte[][][],byte[][][],byte[][][],org.bouncycastle.pqc.crypto.gmss.Treehash[][],org.bouncycastle.pqc.crypto.gmss.Treehash[][],java.util.Vector[],java.util.Vector[],java.util.Vector[][],java.util.Vector[][],org.bouncycastle.pqc.crypto.gmss.GMSSLeaf[],org.bouncycastle.pqc.crypto.gmss.GMSSLeaf[],org.bouncycastle.pqc.crypto.gmss.GMSSLeaf[],int[],byte[][],org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc[],byte[][],org.bouncycastle.pqc.crypto.gmss.GMSSRootSig[],org.bouncycastle.pqc.crypto.gmss.GMSSParameters,org.bouncycastle.pqc.crypto.gmss.GMSSDigestProvider)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters:void <init>(byte[][],byte[][],byte[][][],byte[][][],org.bouncycastle.pqc.crypto.gmss.Treehash[][],org.bouncycastle.pqc.crypto.gmss.Treehash[][],java.util.Vector[],java.util.Vector[],java.util.Vector[][],java.util.Vector[][],byte[][],byte[][],org.bouncycastle.pqc.crypto.gmss.GMSSParameters,org.bouncycastle.pqc.crypto.gmss.GMSSDigestProvider)"
        ]
    },
    "org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters:void nextTree(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters:void nextKey(int)"
        ]
    },
    "org.bouncycastle.pqc.crypto.gmss.GMSSRootSig:boolean updateSign()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters:void nextTree(int)",
            "org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters:void updateKey(int)"
        ]
    },
    "org.bouncycastle.pqc.crypto.gmss.GMSSLeaf:void initLeafCalc(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.crypto.gmss.GMSSLeaf:void <init>(org.bouncycastle.crypto.Digest,int,int,byte[])",
            "org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters:void computeAuthPaths(int)",
            "org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters:void updateNextNextAuthRoot(int)"
        ]
    },
    "org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters:void updateNextNextAuthRoot(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters:void nextTree(int)",
            "org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters:void updateKey(int)"
        ]
    },
    "org.bouncycastle.pqc.crypto.gmss.GMSSSigner:void initSign()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.crypto.gmss.GMSSSigner:void init(boolean,org.bouncycastle.crypto.CipherParameters)"
        ]
    },
    "org.bouncycastle.pqc.crypto.gmss.Treehash:void updateNextSeed(org.bouncycastle.pqc.crypto.gmss.util.GMSSRandom)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters:void computeAuthPaths(int)"
        ]
    },
    "org.bouncycastle.pqc.crypto.gmss.util.WinternitzOTSignature:void <init>(byte[],org.bouncycastle.crypto.Digest,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.crypto.gmss.GMSSKeyPairGenerator:org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc generateCurrentAuthpathAndRoot(byte[],java.util.Vector,byte[],int)",
            "org.bouncycastle.pqc.crypto.gmss.GMSSKeyPairGenerator:org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc generateNextAuthpathAndRoot(java.util.Vector,byte[],int)",
            "org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters:void computeAuthPaths(int)",
            "org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters:void updateNextNextAuthRoot(int)",
            "org.bouncycastle.pqc.crypto.gmss.GMSSSigner:void initSign()"
        ]
    },
    "org.bouncycastle.pqc.crypto.gmss.GMSSSigner:byte[] generateSignature(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.crypto.DigestingMessageSigner:byte[] generateSignature()"
        ]
    },
    "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceFujisakiCipherSpi:byte[] doFinal(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.jcajce.provider.util.AsymmetricHybridCipher:int doFinal(byte[],int,int,byte[],int)",
            "org.bouncycastle.pqc.jcajce.provider.util.CipherSpiExt:byte[] engineDoFinal(byte[],int,int)",
            "org.bouncycastle.pqc.jcajce.provider.util.CipherSpiExt:byte[] doFinal()",
            "org.bouncycastle.pqc.jcajce.provider.util.CipherSpiExt:byte[] doFinal(byte[])"
        ]
    },
    "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceFujisakiCipherSpi:byte[] messageEncrypt(byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher:byte[] messageDecrypt(byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiDigestCipher:byte[] messageDecrypt(byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.crypto.mceliece.McEliecePKCSDigestCipher:byte[] messageDecrypt(byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalDigestCipher:byte[] messageDecrypt(byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceFujisakiCipherSpi:byte[] messageDecrypt(byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKobaraImaiCipherSpi:byte[] messageDecrypt()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.jcajce.provider.mceliece.McEliecePointchevalCipherSpi:byte[] messageDecrypt(byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.digests.NonMemoableDigest:int doFinal(byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:java.math.BigInteger calculateHashForZeroKnowledgeProof(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.lang.String,org.bouncycastle.crypto.Digest)",
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:byte[] calculateMacKey(java.math.BigInteger,org.bouncycastle.crypto.Digest)",
            "org.bouncycastle.crypto.agreement.kdf.DHKEKGenerator:int generateBytes(byte[],int,int)",
            "org.bouncycastle.crypto.agreement.srp.SRP6Util:java.math.BigInteger calculateX(org.bouncycastle.crypto.Digest,java.math.BigInteger,byte[],byte[],byte[])",
            "org.bouncycastle.crypto.agreement.srp.SRP6Util:java.math.BigInteger hashPaddedPair(org.bouncycastle.crypto.Digest,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)",
            "org.bouncycastle.crypto.commitments.GeneralHashCommitter:byte[] calculateCommitment(byte[],byte[])",
            "org.bouncycastle.crypto.commitments.HashCommitter:byte[] calculateCommitment(byte[],byte[])",
            "org.bouncycastle.crypto.digests.NonMemoableDigest:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.digests.ShortenedDigest:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.encodings.OAEPEncoding:void <init>(org.bouncycastle.crypto.AsymmetricBlockCipher,org.bouncycastle.crypto.Digest,org.bouncycastle.crypto.Digest,byte[])",
            "org.bouncycastle.crypto.encodings.OAEPEncoding:byte[] maskGeneratorFunction1(byte[],int,int,int)",
            "org.bouncycastle.crypto.engines.DESedeWrapEngine:byte[] calculateCMSKeyChecksum(byte[])",
            "org.bouncycastle.crypto.engines.RC2WrapEngine:byte[] calculateCMSKeyChecksum(byte[])",
            "org.bouncycastle.crypto.generators.BaseKDFBytesGenerator:int generateBytes(byte[],int,int)",
            "org.bouncycastle.crypto.generators.DSAParametersGenerator:void hash(org.bouncycastle.crypto.Digest,byte[],byte[])",
            "org.bouncycastle.crypto.generators.MGF1BytesGenerator:int generateBytes(byte[],int,int)",
            "org.bouncycastle.crypto.generators.OpenSSLPBEParametersGenerator:byte[] generateDerivedKey(int)",
            "org.bouncycastle.crypto.generators.PKCS12ParametersGenerator:byte[] generateDerivedKey(int,int)",
            "org.bouncycastle.crypto.generators.PKCS5S1ParametersGenerator:byte[] generateDerivedKey()",
            "org.bouncycastle.crypto.io.DigestOutputStream:byte[] getDigest()",
            "org.bouncycastle.crypto.macs.HMac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.HMac:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.macs.OldHMac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.OldHMac:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.prng.DigestRandomGenerator:void digestDoFinal(byte[])",
            "org.bouncycastle.crypto.prng.drbg.HashSP800DRBG:byte[] hash(byte[])",
            "org.bouncycastle.crypto.prng.drbg.Utils:byte[] hash_df(org.bouncycastle.crypto.Digest,byte[],int)",
            "org.bouncycastle.crypto.signers.DSADigestSigner:byte[] generateSignature()",
            "org.bouncycastle.crypto.signers.DSADigestSigner:boolean verifySignature(byte[])",
            "org.bouncycastle.crypto.signers.GenericSigner:byte[] generateSignature()",
            "org.bouncycastle.crypto.signers.GenericSigner:boolean verifySignature(byte[])",
            "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:void updateWithRecoveredMessage(byte[])",
            "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:byte[] generateSignature()",
            "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:boolean verifySignature(byte[])",
            "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:byte[] maskGeneratorFunction1(byte[],int,int,int)",
            "org.bouncycastle.crypto.signers.ISO9796d2Signer:byte[] generateSignature()",
            "org.bouncycastle.crypto.signers.ISO9796d2Signer:boolean verifySignature(byte[])",
            "org.bouncycastle.crypto.signers.PSSSigner:byte[] generateSignature()",
            "org.bouncycastle.crypto.signers.PSSSigner:boolean verifySignature(byte[])",
            "org.bouncycastle.crypto.signers.PSSSigner:byte[] maskGeneratorFunction1(byte[],int,int,int)",
            "org.bouncycastle.crypto.signers.RSADigestSigner:byte[] generateSignature()",
            "org.bouncycastle.crypto.signers.RSADigestSigner:boolean verifySignature(byte[])",
            "org.bouncycastle.crypto.tls.CombinedHash:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.tls.CombinedHash:void ssl3Complete(org.bouncycastle.crypto.Digest,byte[],byte[],int)",
            "org.bouncycastle.crypto.tls.DeferredHash:byte[] getFinalHash(short)",
            "org.bouncycastle.crypto.tls.SSL3Mac:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.tls.TlsDHEKeyExchange:byte[] generateServerKeyExchange()",
            "org.bouncycastle.crypto.tls.TlsECDHEKeyExchange:byte[] generateServerKeyExchange()",
            "org.bouncycastle.crypto.tls.TlsProtocol:byte[] getCurrentPRFHash(org.bouncycastle.crypto.tls.TlsContext,org.bouncycastle.crypto.tls.TlsHandshakeHash,byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner:byte[] engineSign()",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner:boolean engineVerify(byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpi:byte[] engineSign()",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpi:boolean engineVerify(byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.SignatureSpi:byte[] engineSign()",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.SignatureSpi:boolean engineVerify(byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.SignatureSpi:byte[] engineSign()",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.SignatureSpi:boolean engineVerify(byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi:byte[] engineSign()",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi:boolean engineVerify(byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.PSSSignatureSpi$NullPssDigest:int doFinal(byte[],int)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.DSABase:byte[] engineSign()",
            "org.bouncycastle.jcajce.provider.asymmetric.util.DSABase:boolean engineVerify(byte[])",
            "org.bouncycastle.jcajce.provider.digest.BCMessageDigest:byte[] engineDigest()",
            "org.bouncycastle.jce.provider.BrokenKDF2BytesGenerator:int generateBytes(byte[],int,int)",
            "org.bouncycastle.jce.provider.OldPKCS12ParametersGenerator:byte[] generateDerivedKey(int,int)",
            "org.bouncycastle.pqc.crypto.DigestingMessageSigner:byte[] generateSignature()",
            "org.bouncycastle.pqc.crypto.DigestingMessageSigner:boolean verify(byte[])",
            "org.bouncycastle.pqc.crypto.gmss.GMSSLeaf:void updateLeafCalc()",
            "org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters:void computeAuthPaths(int)",
            "org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc:void update(byte[])",
            "org.bouncycastle.pqc.crypto.gmss.GMSSRootSig:void initSign(byte[],byte[])",
            "org.bouncycastle.pqc.crypto.gmss.GMSSRootSig:void oneStep()",
            "org.bouncycastle.pqc.crypto.gmss.GMSSSigner:boolean verifySignature(byte[],byte[])",
            "org.bouncycastle.pqc.crypto.gmss.Treehash:void update(org.bouncycastle.pqc.crypto.gmss.util.GMSSRandom,byte[])",
            "org.bouncycastle.pqc.crypto.gmss.util.GMSSRandom:byte[] nextSeed(byte[])",
            "org.bouncycastle.pqc.crypto.gmss.util.WinternitzOTSVerify:byte[] Verify(byte[],byte[])",
            "org.bouncycastle.pqc.crypto.gmss.util.WinternitzOTSignature:byte[] getPublicKey()",
            "org.bouncycastle.pqc.crypto.gmss.util.WinternitzOTSignature:byte[] getSignature(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiCipher:byte[] messageEncrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiCipher:byte[] messageDecrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher:byte[] messageEncrypt()",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiCipher:byte[] messageEncrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiCipher:byte[] messageDecrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiDigestCipher:byte[] messageEncrypt()",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePKCSDigestCipher:byte[] messageEncrypt()",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalCipher:byte[] messageEncrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalCipher:byte[] messageDecrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalDigestCipher:byte[] messageEncrypt()",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.SignatureSpi:byte[] engineSign()",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.SignatureSpi:boolean engineVerify(byte[])"
        ]
    },
    "org.bouncycastle.crypto.digests.ShortenedDigest:int doFinal(byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:java.math.BigInteger calculateHashForZeroKnowledgeProof(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.lang.String,org.bouncycastle.crypto.Digest)",
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:byte[] calculateMacKey(java.math.BigInteger,org.bouncycastle.crypto.Digest)",
            "org.bouncycastle.crypto.agreement.kdf.DHKEKGenerator:int generateBytes(byte[],int,int)",
            "org.bouncycastle.crypto.agreement.srp.SRP6Util:java.math.BigInteger calculateX(org.bouncycastle.crypto.Digest,java.math.BigInteger,byte[],byte[],byte[])",
            "org.bouncycastle.crypto.agreement.srp.SRP6Util:java.math.BigInteger hashPaddedPair(org.bouncycastle.crypto.Digest,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)",
            "org.bouncycastle.crypto.commitments.GeneralHashCommitter:byte[] calculateCommitment(byte[],byte[])",
            "org.bouncycastle.crypto.commitments.HashCommitter:byte[] calculateCommitment(byte[],byte[])",
            "org.bouncycastle.crypto.digests.NonMemoableDigest:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.digests.ShortenedDigest:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.encodings.OAEPEncoding:void <init>(org.bouncycastle.crypto.AsymmetricBlockCipher,org.bouncycastle.crypto.Digest,org.bouncycastle.crypto.Digest,byte[])",
            "org.bouncycastle.crypto.encodings.OAEPEncoding:byte[] maskGeneratorFunction1(byte[],int,int,int)",
            "org.bouncycastle.crypto.engines.DESedeWrapEngine:byte[] calculateCMSKeyChecksum(byte[])",
            "org.bouncycastle.crypto.engines.RC2WrapEngine:byte[] calculateCMSKeyChecksum(byte[])",
            "org.bouncycastle.crypto.generators.BaseKDFBytesGenerator:int generateBytes(byte[],int,int)",
            "org.bouncycastle.crypto.generators.DSAParametersGenerator:void hash(org.bouncycastle.crypto.Digest,byte[],byte[])",
            "org.bouncycastle.crypto.generators.MGF1BytesGenerator:int generateBytes(byte[],int,int)",
            "org.bouncycastle.crypto.generators.OpenSSLPBEParametersGenerator:byte[] generateDerivedKey(int)",
            "org.bouncycastle.crypto.generators.PKCS12ParametersGenerator:byte[] generateDerivedKey(int,int)",
            "org.bouncycastle.crypto.generators.PKCS5S1ParametersGenerator:byte[] generateDerivedKey()",
            "org.bouncycastle.crypto.io.DigestOutputStream:byte[] getDigest()",
            "org.bouncycastle.crypto.macs.HMac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.HMac:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.macs.OldHMac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.OldHMac:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.prng.DigestRandomGenerator:void digestDoFinal(byte[])",
            "org.bouncycastle.crypto.prng.drbg.HashSP800DRBG:byte[] hash(byte[])",
            "org.bouncycastle.crypto.prng.drbg.Utils:byte[] hash_df(org.bouncycastle.crypto.Digest,byte[],int)",
            "org.bouncycastle.crypto.signers.DSADigestSigner:byte[] generateSignature()",
            "org.bouncycastle.crypto.signers.DSADigestSigner:boolean verifySignature(byte[])",
            "org.bouncycastle.crypto.signers.GenericSigner:byte[] generateSignature()",
            "org.bouncycastle.crypto.signers.GenericSigner:boolean verifySignature(byte[])",
            "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:void updateWithRecoveredMessage(byte[])",
            "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:byte[] generateSignature()",
            "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:boolean verifySignature(byte[])",
            "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:byte[] maskGeneratorFunction1(byte[],int,int,int)",
            "org.bouncycastle.crypto.signers.ISO9796d2Signer:byte[] generateSignature()",
            "org.bouncycastle.crypto.signers.ISO9796d2Signer:boolean verifySignature(byte[])",
            "org.bouncycastle.crypto.signers.PSSSigner:byte[] generateSignature()",
            "org.bouncycastle.crypto.signers.PSSSigner:boolean verifySignature(byte[])",
            "org.bouncycastle.crypto.signers.PSSSigner:byte[] maskGeneratorFunction1(byte[],int,int,int)",
            "org.bouncycastle.crypto.signers.RSADigestSigner:byte[] generateSignature()",
            "org.bouncycastle.crypto.signers.RSADigestSigner:boolean verifySignature(byte[])",
            "org.bouncycastle.crypto.tls.CombinedHash:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.tls.CombinedHash:void ssl3Complete(org.bouncycastle.crypto.Digest,byte[],byte[],int)",
            "org.bouncycastle.crypto.tls.DeferredHash:byte[] getFinalHash(short)",
            "org.bouncycastle.crypto.tls.SSL3Mac:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.tls.TlsDHEKeyExchange:byte[] generateServerKeyExchange()",
            "org.bouncycastle.crypto.tls.TlsECDHEKeyExchange:byte[] generateServerKeyExchange()",
            "org.bouncycastle.crypto.tls.TlsProtocol:byte[] getCurrentPRFHash(org.bouncycastle.crypto.tls.TlsContext,org.bouncycastle.crypto.tls.TlsHandshakeHash,byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner:byte[] engineSign()",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner:boolean engineVerify(byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpi:byte[] engineSign()",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpi:boolean engineVerify(byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.SignatureSpi:byte[] engineSign()",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.SignatureSpi:boolean engineVerify(byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.SignatureSpi:byte[] engineSign()",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.SignatureSpi:boolean engineVerify(byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi:byte[] engineSign()",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi:boolean engineVerify(byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.PSSSignatureSpi$NullPssDigest:int doFinal(byte[],int)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.DSABase:byte[] engineSign()",
            "org.bouncycastle.jcajce.provider.asymmetric.util.DSABase:boolean engineVerify(byte[])",
            "org.bouncycastle.jcajce.provider.digest.BCMessageDigest:byte[] engineDigest()",
            "org.bouncycastle.jce.provider.BrokenKDF2BytesGenerator:int generateBytes(byte[],int,int)",
            "org.bouncycastle.jce.provider.OldPKCS12ParametersGenerator:byte[] generateDerivedKey(int,int)",
            "org.bouncycastle.pqc.crypto.DigestingMessageSigner:byte[] generateSignature()",
            "org.bouncycastle.pqc.crypto.DigestingMessageSigner:boolean verify(byte[])",
            "org.bouncycastle.pqc.crypto.gmss.GMSSLeaf:void updateLeafCalc()",
            "org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters:void computeAuthPaths(int)",
            "org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc:void update(byte[])",
            "org.bouncycastle.pqc.crypto.gmss.GMSSRootSig:void initSign(byte[],byte[])",
            "org.bouncycastle.pqc.crypto.gmss.GMSSRootSig:void oneStep()",
            "org.bouncycastle.pqc.crypto.gmss.GMSSSigner:boolean verifySignature(byte[],byte[])",
            "org.bouncycastle.pqc.crypto.gmss.Treehash:void update(org.bouncycastle.pqc.crypto.gmss.util.GMSSRandom,byte[])",
            "org.bouncycastle.pqc.crypto.gmss.util.GMSSRandom:byte[] nextSeed(byte[])",
            "org.bouncycastle.pqc.crypto.gmss.util.WinternitzOTSVerify:byte[] Verify(byte[],byte[])",
            "org.bouncycastle.pqc.crypto.gmss.util.WinternitzOTSignature:byte[] getPublicKey()",
            "org.bouncycastle.pqc.crypto.gmss.util.WinternitzOTSignature:byte[] getSignature(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiCipher:byte[] messageEncrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiCipher:byte[] messageDecrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher:byte[] messageEncrypt()",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiCipher:byte[] messageEncrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiCipher:byte[] messageDecrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiDigestCipher:byte[] messageEncrypt()",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePKCSDigestCipher:byte[] messageEncrypt()",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalCipher:byte[] messageEncrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalCipher:byte[] messageDecrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalDigestCipher:byte[] messageEncrypt()",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.SignatureSpi:byte[] engineSign()",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.SignatureSpi:boolean engineVerify(byte[])"
        ]
    },
    "org.bouncycastle.crypto.examples.JPAKEExample:void main(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.agreement.jpake.JPAKEParticipant:void validateRound3PayloadReceived(org.bouncycastle.crypto.agreement.jpake.JPAKERound3Payload,java.math.BigInteger)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.examples.JPAKEExample:void main(java.lang.String[])"
        ]
    },
    "org.bouncycastle.crypto.tls.AbstractTlsContext:byte[] exportKeyingMaterial(java.lang.String,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.tls.TlsUtils:byte[] calculateKeyBlock(org.bouncycastle.crypto.tls.TlsContext,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsAEADCipher:void <init>(org.bouncycastle.crypto.tls.TlsContext,org.bouncycastle.crypto.modes.AEADBlockCipher,org.bouncycastle.crypto.modes.AEADBlockCipher,int,int)",
            "org.bouncycastle.crypto.tls.TlsBlockCipher:void <init>(org.bouncycastle.crypto.tls.TlsContext,org.bouncycastle.crypto.BlockCipher,org.bouncycastle.crypto.BlockCipher,org.bouncycastle.crypto.Digest,org.bouncycastle.crypto.Digest,int)",
            "org.bouncycastle.crypto.tls.TlsNullCipher:void <init>(org.bouncycastle.crypto.tls.TlsContext,org.bouncycastle.crypto.Digest,org.bouncycastle.crypto.Digest)",
            "org.bouncycastle.crypto.tls.TlsStreamCipher:void <init>(org.bouncycastle.crypto.tls.TlsContext,org.bouncycastle.crypto.StreamCipher,org.bouncycastle.crypto.StreamCipher,org.bouncycastle.crypto.Digest,org.bouncycastle.crypto.Digest,int)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsUtils:byte[] calculateMasterSecret(org.bouncycastle.crypto.tls.TlsContext,byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsProtocol:void establishMasterSecret(org.bouncycastle.crypto.tls.TlsContext,org.bouncycastle.crypto.tls.TlsKeyExchange)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsUtils:byte[] calculateVerifyData(org.bouncycastle.crypto.tls.TlsContext,java.lang.String,byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:org.bouncycastle.crypto.tls.DTLSTransport clientHandshake(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,org.bouncycastle.crypto.tls.DTLSRecordLayer)",
            "org.bouncycastle.crypto.tls.DTLSServerProtocol:org.bouncycastle.crypto.tls.DTLSTransport serverHandshake(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState,org.bouncycastle.crypto.tls.DTLSRecordLayer)",
            "org.bouncycastle.crypto.tls.TlsProtocol:byte[] createVerifyData(boolean)"
        ]
    },
    "org.bouncycastle.crypto.generators.SCrypt:byte[] SingleIterationPBKDF2(byte[],byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.generators.SCrypt:byte[] MFcrypt(byte[],byte[],int,int,int,int)"
        ]
    },
    "org.bouncycastle.jce.provider.BrokenPBE$Util:org.bouncycastle.crypto.CipherParameters makePBEMacParameters(org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey,java.security.spec.AlgorithmParameterSpec,int,int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.prng.SP800SecureRandomBuilder$HMacDRBGProvider:org.bouncycastle.crypto.prng.drbg.SP80090DRBG get(org.bouncycastle.crypto.prng.EntropySource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.prng.SP800SecureRandom:void nextBytes(byte[])"
        ]
    },
    "org.bouncycastle.crypto.io.CipherInputStream:int read(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.io.CipherInputStream:int nextChunk()",
            "org.bouncycastle.jcajce.io.CipherInputStream:int nextChunk()"
        ]
    },
    "org.bouncycastle.asn1.ASN1OutputStream:void writeTag(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1OutputStream:void writeEncoded(int,int,byte[])",
            "org.bouncycastle.asn1.BERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)"
        ]
    },
    "org.bouncycastle.asn1.ASN1OutputStream:void write(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1OutputStream:void writeEncoded(int,byte[])",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeEncoded(int,int,byte[])",
            "org.bouncycastle.asn1.DERObjectIdentifier:void encode(org.bouncycastle.asn1.ASN1OutputStream)"
        ]
    },
    "org.bouncycastle.crypto.tls.CertificateRequest:void encode(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSServerProtocol:byte[] generateCertificateRequest(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState,org.bouncycastle.crypto.tls.CertificateRequest)",
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void sendCertificateRequestMessage(org.bouncycastle.crypto.tls.CertificateRequest)"
        ]
    },
    "org.bouncycastle.crypto.tls.OCSPStatusRequest:void encode(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.CertificateStatusRequest:void encode(java.io.OutputStream)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsUtils:void writeOpaque8(byte[],java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:byte[] generateClientHello(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,org.bouncycastle.crypto.tls.TlsClient)",
            "org.bouncycastle.crypto.tls.DTLSServerProtocol:byte[] generateServerHello(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState)",
            "org.bouncycastle.crypto.tls.TlsClientProtocol:void sendClientHelloMessage()",
            "org.bouncycastle.crypto.tls.TlsECCUtils:void writeECFieldElement(org.bouncycastle.math.ec.ECFieldElement,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsECCUtils:void writeECFieldElement(int,java.math.BigInteger,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsECCUtils:void writeECParameter(java.math.BigInteger,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsECCUtils:void writeExplicitECParameters(short[],org.bouncycastle.crypto.params.ECDomainParameters,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsECCUtils:void writeECPoint(short[],org.bouncycastle.math.ec.ECPoint,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsSRTPUtils:byte[] createUseSRTPExtension(org.bouncycastle.crypto.tls.UseSRTPData)",
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void sendServerHelloMessage()"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsUtils:void writeOpaque16(byte[],java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DigitallySigned:void encode(java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.NewSessionTicket:void encode(java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.OCSPStatusRequest:void encode(java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.ServerName:void encode(java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsDHUtils:void writeDHParameter(java.math.BigInteger,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsPSKKeyExchange:byte[] generateServerKeyExchange()",
            "org.bouncycastle.crypto.tls.TlsPSKKeyExchange:void generateClientKeyExchange(java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsPSKKeyExchange:byte[] generatePremasterSecret()",
            "org.bouncycastle.crypto.tls.TlsProtocol:void writeExtensions(java.io.OutputStream,java.util.Hashtable)",
            "org.bouncycastle.crypto.tls.TlsProtocol:void writeSupplementalData(java.io.OutputStream,java.util.Vector)",
            "org.bouncycastle.crypto.tls.TlsRSAUtils:byte[] generateEncryptedPreMasterSecret(org.bouncycastle.crypto.tls.TlsContext,org.bouncycastle.crypto.params.RSAKeyParameters,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsSRPKeyExchange:void generateClientKeyExchange(java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.URLAndHash:void encode(java.io.OutputStream)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsUtils:void writeOpaque24(byte[],java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.Certificate:void encode(java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.CertificateStatus:void encode(java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsProtocol:void writeSupplementalData(java.io.OutputStream,java.util.Vector)"
        ]
    },
    "org.bouncycastle.crypto.tls.URLAndHash:void encode(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.CertificateURL:void encode(java.io.OutputStream)"
        ]
    },
    "org.bouncycastle.jcajce.io.CipherOutputStream:void write(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1OutputStream:void write(byte[],int,int)",
            "org.bouncycastle.crypto.io.CipherOutputStream:void write(byte[],int,int)",
            "org.bouncycastle.crypto.io.CipherOutputStream:void close()",
            "org.bouncycastle.crypto.tls.CertificateURL$ListBuffer16:void encodeTo(java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.RecordStream:byte[] decodeAndVerify(short,java.io.InputStream,int)",
            "org.bouncycastle.crypto.tls.RecordStream:void writeRecord(short,byte[],int,int)",
            "org.bouncycastle.jcajce.io.CipherOutputStream:void write(int)",
            "org.bouncycastle.util.io.BufferingOutputStream:void write(byte[],int,int)",
            "org.bouncycastle.util.io.BufferingOutputStream:void flush()",
            "org.bouncycastle.util.io.Streams:void pipeAll(java.io.InputStream,java.io.OutputStream)",
            "org.bouncycastle.util.io.Streams:long pipeAllLimited(java.io.InputStream,long,java.io.OutputStream)",
            "org.bouncycastle.util.io.TeeInputStream:int read(byte[],int,int)",
            "org.bouncycastle.util.io.TeeOutputStream:void write(byte[],int,int)"
        ]
    },
    "org.bouncycastle.util.io.TeeOutputStream:void write(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1OutputStream:void write(byte[])",
            "org.bouncycastle.asn1.DERGenerator:void writeDEREncoded(java.io.OutputStream,int,byte[])",
            "org.bouncycastle.crypto.tls.CertificateRequest:void encode(java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.HeartbeatMessage:void encode(org.bouncycastle.crypto.tls.TlsContext,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.OCSPStatusRequest:void encode(java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.RecordStream:void writeRecord(short,byte[],int,int)",
            "org.bouncycastle.crypto.tls.TlsRSAUtils:byte[] generateEncryptedPreMasterSecret(org.bouncycastle.crypto.tls.TlsContext,org.bouncycastle.crypto.params.RSAKeyParameters,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeOpaque8(byte[],java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeOpaque16(byte[],java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeOpaque24(byte[],java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.URLAndHash:void encode(java.io.OutputStream)",
            "org.bouncycastle.jcajce.io.CipherOutputStream:void write(byte[],int,int)",
            "org.bouncycastle.jcajce.io.CipherOutputStream:void close()",
            "org.bouncycastle.util.io.TeeOutputStream:void write(byte[])"
        ]
    },
    "org.bouncycastle.crypto.tls.CertificateURL:void encode(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void flush()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void finish()",
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void flush()",
            "org.bouncycastle.asn1.ASN1OutputStream:void flush()",
            "org.bouncycastle.crypto.io.CipherOutputStream:void flush()",
            "org.bouncycastle.crypto.tls.RecordStream:byte[] decodeAndVerify(short,java.io.InputStream,int)",
            "org.bouncycastle.crypto.tls.RecordStream:void writeRecord(short,byte[],int,int)",
            "org.bouncycastle.crypto.tls.RecordStream:void flush()",
            "org.bouncycastle.jcajce.io.CipherOutputStream:void flush()",
            "org.bouncycastle.util.io.TeeOutputStream:void flush()"
        ]
    },
    "org.bouncycastle.asn1.ASN1OutputStream:void flush()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.io.CipherOutputStream:void flush()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void flush()",
            "org.bouncycastle.asn1.ASN1OutputStream:void flush()",
            "org.bouncycastle.crypto.io.CipherOutputStream:void flush()",
            "org.bouncycastle.crypto.io.CipherOutputStream:void close()",
            "org.bouncycastle.crypto.tls.RecordStream:byte[] decodeAndVerify(short,java.io.InputStream,int)",
            "org.bouncycastle.crypto.tls.RecordStream:void writeRecord(short,byte[],int,int)",
            "org.bouncycastle.crypto.tls.RecordStream:void flush()",
            "org.bouncycastle.jcajce.io.CipherOutputStream:void flush()",
            "org.bouncycastle.util.io.TeeOutputStream:void flush()"
        ]
    },
    "org.bouncycastle.crypto.tls.RecordStream:void flush()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsProtocol:void flush()"
        ]
    },
    "org.bouncycastle.jcajce.io.CipherOutputStream:void flush()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void flush()",
            "org.bouncycastle.asn1.ASN1OutputStream:void flush()",
            "org.bouncycastle.crypto.io.CipherOutputStream:void flush()",
            "org.bouncycastle.crypto.tls.RecordStream:byte[] decodeAndVerify(short,java.io.InputStream,int)",
            "org.bouncycastle.crypto.tls.RecordStream:void writeRecord(short,byte[],int,int)",
            "org.bouncycastle.crypto.tls.RecordStream:void flush()",
            "org.bouncycastle.jcajce.io.CipherOutputStream:void flush()",
            "org.bouncycastle.jcajce.io.CipherOutputStream:void close()",
            "org.bouncycastle.util.io.TeeOutputStream:void flush()"
        ]
    },
    "org.bouncycastle.util.io.BufferingOutputStream:void write(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void <init>(java.io.OutputStream,int)",
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void bsFinishedWithStream()",
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void bsW(int,int)",
            "org.bouncycastle.asn1.ASN1OutputStream:void write(int)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeNull()",
            "org.bouncycastle.asn1.BERGenerator:void writeHdr(int)",
            "org.bouncycastle.asn1.BERGenerator:void writeBERBody(java.io.InputStream)",
            "org.bouncycastle.asn1.BERGenerator:void writeBEREnd()",
            "org.bouncycastle.asn1.DERGenerator:void writeLength(java.io.OutputStream,int)",
            "org.bouncycastle.asn1.DERGenerator:void writeDEREncoded(java.io.OutputStream,int,byte[])",
            "org.bouncycastle.crypto.io.CipherOutputStream:void write(int)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint8(short,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint8(int,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint16(int,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint24(int,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint32(long,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint48(long,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint64(long,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeVersion(org.bouncycastle.crypto.tls.ProtocolVersion,java.io.OutputStream)",
            "org.bouncycastle.util.Strings:void toUTF8ByteArray(char[],java.io.OutputStream)",
            "org.bouncycastle.util.encoders.Base64Encoder:int encode(byte[],int,int,java.io.OutputStream)",
            "org.bouncycastle.util.encoders.Base64Encoder:int decode(byte[],int,int,java.io.OutputStream)",
            "org.bouncycastle.util.encoders.Base64Encoder:int decode(java.lang.String,java.io.OutputStream)",
            "org.bouncycastle.util.encoders.Base64Encoder:int decodeLastBlock(java.io.OutputStream,char,char,char,char)",
            "org.bouncycastle.util.encoders.HexEncoder:int encode(byte[],int,int,java.io.OutputStream)",
            "org.bouncycastle.util.encoders.HexEncoder:int decode(byte[],int,int,java.io.OutputStream)",
            "org.bouncycastle.util.encoders.HexEncoder:int decode(java.lang.String,java.io.OutputStream)",
            "org.bouncycastle.util.io.TeeInputStream:int read()",
            "org.bouncycastle.util.io.TeeOutputStream:void write(int)"
        ]
    },
    "org.bouncycastle.util.io.TeeOutputStream:void flush()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void flush()",
            "org.bouncycastle.asn1.ASN1OutputStream:void flush()",
            "org.bouncycastle.crypto.io.CipherOutputStream:void flush()",
            "org.bouncycastle.crypto.tls.RecordStream:byte[] decodeAndVerify(short,java.io.InputStream,int)",
            "org.bouncycastle.crypto.tls.RecordStream:void writeRecord(short,byte[],int,int)",
            "org.bouncycastle.crypto.tls.RecordStream:void flush()",
            "org.bouncycastle.jcajce.io.CipherOutputStream:void flush()",
            "org.bouncycastle.util.io.TeeOutputStream:void flush()"
        ]
    },
    "org.bouncycastle.crypto.tls.HeartbeatMessage:org.bouncycastle.crypto.tls.HeartbeatMessage parse(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.util.io.Streams:byte[] readAll(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.BEROctetStringParser:org.bouncycastle.asn1.ASN1Primitive getLoadedObject()",
            "org.bouncycastle.asn1.DERGenerator:void writeDEREncoded(java.io.OutputStream,int,java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsRSAKeyExchange:void processClientKeyExchange(java.io.InputStream)"
        ]
    },
    "org.bouncycastle.util.io.Streams:byte[] readAllLimited(java.io.InputStream,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.util.io.TeeInputStream:int read(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.io.CipherInputStream:int nextChunk()",
            "org.bouncycastle.jcajce.io.CipherInputStream:int nextChunk()"
        ]
    },
    "org.bouncycastle.apache.bzip2.CBZip2InputStream:void bsFinishedWithStream()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2InputStream:void initialize()",
            "org.bouncycastle.apache.bzip2.CBZip2InputStream:void complete()"
        ]
    },
    "org.bouncycastle.jcajce.io.CipherInputStream:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2InputStream:void bsFinishedWithStream()",
            "org.bouncycastle.crypto.io.CipherInputStream:void close()",
            "org.bouncycastle.crypto.tls.RecordStream:void safeClose()",
            "org.bouncycastle.jcajce.io.CipherInputStream:void close()",
            "org.bouncycastle.util.io.TeeInputStream:void close()"
        ]
    },
    "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void finalize()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void <init>(java.io.OutputStream)",
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void <init>(java.io.OutputStream,int)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsProtocol:void processAlert()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsProtocol:void processRecord(short,byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsProtocol:void failWithError(short,short,java.lang.String,java.lang.Exception)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsProtocol:void safeReadRecord()",
            "org.bouncycastle.crypto.tls.TlsProtocol:void safeWriteRecord(short,byte[],int,int)",
            "org.bouncycastle.crypto.tls.TlsProtocol:void handleClose(boolean)"
        ]
    },
    "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void <init>(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void endCompression()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void finish()"
        ]
    },
    "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void endBlock()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void writeRun()",
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void finish()"
        ]
    },
    "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void bsPutUChar(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void initialize()",
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void endBlock()",
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void endCompression()"
        ]
    },
    "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void bsPutint(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void endBlock()",
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void endCompression()"
        ]
    },
    "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void bsPutIntVS(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void moveToFrontCodeAndSend()"
        ]
    },
    "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void sendMTFValues()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void moveToFrontCodeAndSend()"
        ]
    },
    "org.bouncycastle.asn1.ASN1OutputStream$ImplicitOutputStream:void write(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1OutputStream:void writeLength(int)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeEncoded(int,byte[])",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeTag(int,int)",
            "org.bouncycastle.asn1.BEROctetString:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.BERSequence:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.BERSet:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.BERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DERBMPString:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DERObjectIdentifier:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DERSequence:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DERSet:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DERUTCTime:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLSequence:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLSet:void encode(org.bouncycastle.asn1.ASN1OutputStream)"
        ]
    },
    "org.bouncycastle.asn1.ASN1OutputStream:void writeLength(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1OutputStream:void writeEncoded(int,byte[])",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeEncoded(int,int,byte[])",
            "org.bouncycastle.asn1.DERBMPString:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DERObjectIdentifier:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DERSequence:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DERSet:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DERUTCTime:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLSequence:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLSet:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)"
        ]
    },
    "org.bouncycastle.asn1.ASN1OutputStream:void writeEncoded(int,byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.DERBitString:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DERBoolean:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DEREnumerated:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DERGeneralString:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DERGeneralizedTime:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DERIA5String:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DERInteger:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DERNull:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DERNumericString:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DEROctetString:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DEROctetString:void encode(org.bouncycastle.asn1.DEROutputStream,byte[])",
            "org.bouncycastle.asn1.DERPrintableString:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DERT61String:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DERT61UTF8String:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DERUTF8String:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DERUniversalString:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DERVisibleString:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.LazyEncodedSequence:void encode(org.bouncycastle.asn1.ASN1OutputStream)"
        ]
    },
    "org.bouncycastle.asn1.BEROctetString:void encode(org.bouncycastle.asn1.ASN1OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeImplicitObject(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.LazyEncodedSequence:void encode(org.bouncycastle.asn1.ASN1OutputStream)"
        ]
    },
    "org.bouncycastle.asn1.BERSequence:void encode(org.bouncycastle.asn1.ASN1OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeImplicitObject(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.LazyEncodedSequence:void encode(org.bouncycastle.asn1.ASN1OutputStream)"
        ]
    },
    "org.bouncycastle.asn1.BERSet:void encode(org.bouncycastle.asn1.ASN1OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeImplicitObject(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.LazyEncodedSequence:void encode(org.bouncycastle.asn1.ASN1OutputStream)"
        ]
    },
    "org.bouncycastle.asn1.BERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeImplicitObject(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.LazyEncodedSequence:void encode(org.bouncycastle.asn1.ASN1OutputStream)"
        ]
    },
    "org.bouncycastle.asn1.DERBMPString:void encode(org.bouncycastle.asn1.ASN1OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeImplicitObject(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.LazyEncodedSequence:void encode(org.bouncycastle.asn1.ASN1OutputStream)"
        ]
    },
    "org.bouncycastle.asn1.DERObjectIdentifier:void encode(org.bouncycastle.asn1.ASN1OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeImplicitObject(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.LazyEncodedSequence:void encode(org.bouncycastle.asn1.ASN1OutputStream)"
        ]
    },
    "org.bouncycastle.asn1.DERSequence:void encode(org.bouncycastle.asn1.ASN1OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeImplicitObject(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.LazyEncodedSequence:void encode(org.bouncycastle.asn1.ASN1OutputStream)"
        ]
    },
    "org.bouncycastle.asn1.DERSet:void encode(org.bouncycastle.asn1.ASN1OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeImplicitObject(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.LazyEncodedSequence:void encode(org.bouncycastle.asn1.ASN1OutputStream)"
        ]
    },
    "org.bouncycastle.asn1.DERUTCTime:void encode(org.bouncycastle.asn1.ASN1OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeImplicitObject(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.LazyEncodedSequence:void encode(org.bouncycastle.asn1.ASN1OutputStream)"
        ]
    },
    "org.bouncycastle.asn1.DLSequence:void encode(org.bouncycastle.asn1.ASN1OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeImplicitObject(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.LazyEncodedSequence:void encode(org.bouncycastle.asn1.ASN1OutputStream)"
        ]
    },
    "org.bouncycastle.asn1.DLSet:void encode(org.bouncycastle.asn1.ASN1OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeImplicitObject(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.LazyEncodedSequence:void encode(org.bouncycastle.asn1.ASN1OutputStream)"
        ]
    },
    "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.BERGenerator:void writeBERHeader(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.BEROctetStringGenerator:void <init>(java.io.OutputStream)",
            "org.bouncycastle.asn1.BEROctetStringGenerator:void <init>(java.io.OutputStream,int,boolean)",
            "org.bouncycastle.asn1.BERSequenceGenerator:void <init>(java.io.OutputStream)",
            "org.bouncycastle.asn1.BERSequenceGenerator:void <init>(java.io.OutputStream,int,boolean)"
        ]
    },
    "org.bouncycastle.asn1.BEROctetStringGenerator$BufferedBEROctetStream:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void close()",
            "org.bouncycastle.asn1.ASN1OutputStream:void close()",
            "org.bouncycastle.crypto.io.CipherOutputStream:void close()",
            "org.bouncycastle.crypto.tls.RecordStream:void safeClose()",
            "org.bouncycastle.jcajce.io.CipherOutputStream:void close()",
            "org.bouncycastle.util.io.BufferingOutputStream:void close()",
            "org.bouncycastle.util.io.TeeInputStream:void close()",
            "org.bouncycastle.util.io.TeeOutputStream:void close()"
        ]
    },
    "org.bouncycastle.asn1.BERSequenceGenerator:void close()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.DERGenerator:void writeDEREncoded(int,byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.DERSequenceGenerator:void close()"
        ]
    },
    "org.bouncycastle.asn1.DERGenerator:void writeDEREncoded(java.io.OutputStream,int,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.tls.CertificateStatus:void encode(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSServerProtocol:byte[] generateCertificateStatus(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState,org.bouncycastle.crypto.tls.CertificateStatus)",
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void sendCertificateStatusMessage(org.bouncycastle.crypto.tls.CertificateStatus)"
        ]
    },
    "org.bouncycastle.crypto.tls.CertificateStatusRequest:void encode(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsExtensionsUtils:byte[] createStatusRequestExtension(org.bouncycastle.crypto.tls.CertificateStatusRequest)"
        ]
    },
    "org.bouncycastle.crypto.tls.DTLSReliableHandshake:void writeHandshakeFragment(org.bouncycastle.crypto.tls.DTLSReliableHandshake$Message,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSReliableHandshake:void writeMessage(org.bouncycastle.crypto.tls.DTLSReliableHandshake$Message)"
        ]
    },
    "org.bouncycastle.crypto.tls.DTLSServerProtocol:byte[] generateServerHello(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSServerProtocol:org.bouncycastle.crypto.tls.DTLSTransport serverHandshake(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState,org.bouncycastle.crypto.tls.DTLSRecordLayer)"
        ]
    },
    "org.bouncycastle.crypto.tls.HeartbeatExtension:void encode(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsExtensionsUtils:byte[] createHeartbeatExtension(org.bouncycastle.crypto.tls.HeartbeatExtension)"
        ]
    },
    "org.bouncycastle.crypto.tls.ServerName:void encode(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.ServerNameList:void encode(java.io.OutputStream)"
        ]
    },
    "org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm:void encode(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DigitallySigned:void encode(java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void encodeSupportedSignatureAlgorithms(java.util.Vector,boolean,java.io.OutputStream)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsECCUtils:void writeExplicitECParameters(short[],org.bouncycastle.crypto.params.ECDomainParameters,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsECDHEKeyExchange:byte[] generateServerKeyExchange()"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsECCUtils:void writeNamedECParameters(int,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsECDHEKeyExchange:byte[] generateServerKeyExchange()"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsProtocol$HandshakeMessage:void <init>(org.bouncycastle.crypto.tls.TlsProtocol,short,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsProtocol$HandshakeMessage:void <init>(org.bouncycastle.crypto.tls.TlsProtocol,short)",
            "org.bouncycastle.crypto.tls.TlsProtocol:void sendFinishedMessage()",
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void sendServerKeyExchangeMessage(byte[])"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsServerProtocol:void sendServerHelloMessage()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void handleHandshakeMessage(short,byte[])"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsUtils:void writeUint8Array(short[],java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint8ArrayWithUint8Length(short[],java.io.OutputStream)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsUtils:void writeUint8ArrayWithUint8Length(short[],java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.CertificateRequest:void encode(java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:byte[] generateClientHello(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,org.bouncycastle.crypto.tls.TlsClient)",
            "org.bouncycastle.crypto.tls.TlsClientProtocol:void sendClientHelloMessage()"
        ]
    },
    "org.bouncycastle.crypto.tls.CertificateURL$ListBuffer16:void <init>(org.bouncycastle.crypto.tls.CertificateURL)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.CertificateURL:void encode(java.io.OutputStream)"
        ]
    },
    "org.bouncycastle.crypto.tls.ServerNameList:void encode(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsExtensionsUtils:byte[] createServerNameExtension(org.bouncycastle.crypto.tls.ServerNameList)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsProtocol:void writeExtensions(java.io.OutputStream,java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:byte[] generateClientHello(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,org.bouncycastle.crypto.tls.TlsClient)",
            "org.bouncycastle.crypto.tls.DTLSServerProtocol:byte[] generateServerHello(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState)",
            "org.bouncycastle.crypto.tls.SessionParameters$Builder:org.bouncycastle.crypto.tls.SessionParameters$Builder setServerExtensions(java.util.Hashtable)",
            "org.bouncycastle.crypto.tls.TlsClientProtocol:void sendClientHelloMessage()",
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void sendServerHelloMessage()"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsProtocol:void writeSupplementalData(java.io.OutputStream,java.util.Vector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSProtocol:byte[] generateSupplementalData(java.util.Vector)",
            "org.bouncycastle.crypto.tls.TlsProtocol:void sendSupplementalDataMessage(java.util.Vector)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsUtils:void writeUint16Array(int[],java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint16ArrayWithUint16Length(int[],java.io.OutputStream)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsUtils:void writeUint16ArrayWithUint16Length(int[],java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:byte[] generateClientHello(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,org.bouncycastle.crypto.tls.TlsClient)",
            "org.bouncycastle.crypto.tls.TlsClientProtocol:void sendClientHelloMessage()",
            "org.bouncycastle.crypto.tls.TlsSRTPUtils:byte[] createUseSRTPExtension(org.bouncycastle.crypto.tls.UseSRTPData)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsUtils:void encodeSupportedSignatureAlgorithms(java.util.Vector,boolean,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.CertificateRequest:void encode(java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:byte[] createSignatureAlgorithmsExtension(java.util.Vector)"
        ]
    },
    "org.bouncycastle.crypto.tls.Certificate:void encode(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSProtocol:byte[] generateCertificate(org.bouncycastle.crypto.tls.Certificate)",
            "org.bouncycastle.crypto.tls.TlsProtocol:void sendCertificateMessage(org.bouncycastle.crypto.tls.Certificate)"
        ]
    },
    "org.bouncycastle.crypto.tls.NewSessionTicket:void encode(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSServerProtocol:byte[] generateNewSessionTicket(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState,org.bouncycastle.crypto.tls.NewSessionTicket)",
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void sendNewSessionTicketMessage(org.bouncycastle.crypto.tls.NewSessionTicket)"
        ]
    },
    "org.bouncycastle.crypto.tls.DTLSClientProtocol:byte[] generateClientHello(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,org.bouncycastle.crypto.tls.TlsClient)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:org.bouncycastle.crypto.tls.DTLSTransport clientHandshake(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,org.bouncycastle.crypto.tls.DTLSRecordLayer)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsClientProtocol:void sendClientHelloMessage()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsClientProtocol:void connect(org.bouncycastle.crypto.tls.TlsClient)"
        ]
    },
    "org.bouncycastle.util.Strings:byte[] toUTF8ByteArray(char[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.PBEParametersGenerator:byte[] PKCS5PasswordToUTF8Bytes(char[])",
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:java.math.BigInteger calculateS(char[])",
            "org.bouncycastle.util.Strings:byte[] toUTF8ByteArray(java.lang.String)"
        ]
    },
    "org.bouncycastle.util.encoders.Base64:byte[] encode(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.util.encoders.Base64:java.lang.String toBase64String(byte[],int,int)",
            "org.bouncycastle.util.encoders.Base64:byte[] encode(byte[])"
        ]
    },
    "org.bouncycastle.util.encoders.Base64:int encode(byte[],java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.util.encoders.Base64:int encode(byte[],int,int,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.util.encoders.Hex:byte[] encode(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpBinaryDataAsString(java.lang.String,byte[])",
            "org.bouncycastle.crypto.examples.DESExample:void performEncrypt(byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:java.lang.String toString()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:java.lang.String toString()",
            "org.bouncycastle.jce.provider.X509CRLObject:java.lang.String toString()",
            "org.bouncycastle.jce.provider.X509CertificateObject:java.lang.String toString()",
            "org.bouncycastle.util.encoders.Hex:java.lang.String toHexString(byte[],int,int)",
            "org.bouncycastle.util.encoders.Hex:byte[] encode(byte[])"
        ]
    },
    "org.bouncycastle.util.encoders.Hex:int encode(byte[],java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.util.encoders.Hex:int encode(byte[],int,int,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.util.encoders.UrlBase64:byte[] encode(byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.util.encoders.UrlBase64:int encode(byte[],java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.util.encoders.Base64:byte[] decode(byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.util.encoders.Hex:byte[] decode(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.examples.DESExample:void <init>(java.lang.String,java.lang.String,java.lang.String,boolean)"
        ]
    },
    "org.bouncycastle.util.encoders.UrlBase64:byte[] decode(byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.util.encoders.UrlBase64:int decode(byte[],java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.util.encoders.Base64:byte[] decode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PEMUtil:org.bouncycastle.asn1.ASN1Sequence readPEMObject(java.io.InputStream)",
            "org.bouncycastle.jce.provider.PEMUtil:org.bouncycastle.asn1.ASN1Sequence readPEMObject(java.io.InputStream)",
            "org.bouncycastle.util.io.pem.PemReader:org.bouncycastle.util.io.pem.PemObject loadObject(java.lang.String)"
        ]
    },
    "org.bouncycastle.util.encoders.Base64:int decode(java.lang.String,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.util.encoders.Hex:byte[] decode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.sec.SECNamedCurves$1:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.sec.SECNamedCurves$10:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.sec.SECNamedCurves$11:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.sec.SECNamedCurves$12:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.sec.SECNamedCurves$13:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.sec.SECNamedCurves$14:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.sec.SECNamedCurves$15:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.sec.SECNamedCurves$16:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.sec.SECNamedCurves$17:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.sec.SECNamedCurves$18:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.sec.SECNamedCurves$19:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.sec.SECNamedCurves$2:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.sec.SECNamedCurves$20:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.sec.SECNamedCurves$21:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.sec.SECNamedCurves$22:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.sec.SECNamedCurves$23:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.sec.SECNamedCurves$24:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.sec.SECNamedCurves$25:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.sec.SECNamedCurves$26:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.sec.SECNamedCurves$27:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.sec.SECNamedCurves$28:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.sec.SECNamedCurves$29:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.sec.SECNamedCurves$3:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.sec.SECNamedCurves$30:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.sec.SECNamedCurves$31:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.sec.SECNamedCurves$32:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.sec.SECNamedCurves$33:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.sec.SECNamedCurves$4:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.sec.SECNamedCurves$5:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.sec.SECNamedCurves$6:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.sec.SECNamedCurves$7:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.sec.SECNamedCurves$8:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.sec.SECNamedCurves$9:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.sec.SECNamedCurves:java.math.BigInteger fromHex(java.lang.String)",
            "org.bouncycastle.asn1.teletrust.TeleTrusTNamedCurves$1:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.teletrust.TeleTrusTNamedCurves$10:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.teletrust.TeleTrusTNamedCurves$11:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.teletrust.TeleTrusTNamedCurves$12:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.teletrust.TeleTrusTNamedCurves$13:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.teletrust.TeleTrusTNamedCurves$14:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.teletrust.TeleTrusTNamedCurves$2:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.teletrust.TeleTrusTNamedCurves$3:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.teletrust.TeleTrusTNamedCurves$4:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.teletrust.TeleTrusTNamedCurves$5:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.teletrust.TeleTrusTNamedCurves$6:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.teletrust.TeleTrusTNamedCurves$7:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.teletrust.TeleTrusTNamedCurves$8:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.teletrust.TeleTrusTNamedCurves$9:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.x500.style.IETFUtils:org.bouncycastle.asn1.ASN1Primitive decodeObject(java.lang.String)",
            "org.bouncycastle.asn1.x509.X509Name:org.bouncycastle.asn1.ASN1Primitive decodeObject(java.lang.String)",
            "org.bouncycastle.asn1.x9.X962NamedCurves$1:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.x9.X962NamedCurves$10:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.x9.X962NamedCurves$11:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.x9.X962NamedCurves$12:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.x9.X962NamedCurves$13:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.x9.X962NamedCurves$14:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.x9.X962NamedCurves$15:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.x9.X962NamedCurves$16:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.x9.X962NamedCurves$17:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.x9.X962NamedCurves$18:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.x9.X962NamedCurves$19:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.x9.X962NamedCurves$2:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.x9.X962NamedCurves$20:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.x9.X962NamedCurves$21:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.x9.X962NamedCurves$22:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.x9.X962NamedCurves$23:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.x9.X962NamedCurves$3:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.x9.X962NamedCurves$4:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.x9.X962NamedCurves$5:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.x9.X962NamedCurves$6:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.x9.X962NamedCurves$7:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.x9.X962NamedCurves$8:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.x9.X962NamedCurves$9:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.crypto.agreement.DHStandardGroups:org.bouncycastle.crypto.params.DHParameters fromPG(java.lang.String,java.lang.String)",
            "org.bouncycastle.crypto.agreement.DHStandardGroups:org.bouncycastle.crypto.params.DHParameters fromPGQ(java.lang.String,java.lang.String,java.lang.String)",
            "org.bouncycastle.crypto.examples.DESExample:void performDecrypt(byte[])",
            "org.bouncycastle.crypto.generators.DSAParametersGenerator:java.math.BigInteger calculateGenerator_FIPS186_3_Verifiable(org.bouncycastle.crypto.Digest,java.math.BigInteger,java.math.BigInteger,byte[],int)",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:void <clinit>()"
        ]
    },
    "org.bouncycastle.util.encoders.Hex:int decode(java.lang.String,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.util.encoders.UrlBase64:byte[] decode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.util.encoders.UrlBase64:int decode(java.lang.String,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.provider.JCEStreamCipher:byte[] engineWrap(java.security.Key)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.provider.JCEStreamCipher:java.security.Key engineUnwrap(byte[],java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.apache.bzip2.CBZip2InputStream:void initBlock()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2InputStream:void <init>(java.io.InputStream)",
            "org.bouncycastle.apache.bzip2.CBZip2InputStream:void setupRandPartA()",
            "org.bouncycastle.apache.bzip2.CBZip2InputStream:void setupNoRandPartA()"
        ]
    },
    "org.bouncycastle.apache.bzip2.CBZip2InputStream:char bsGetUChar()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2InputStream:void initialize()",
            "org.bouncycastle.apache.bzip2.CBZip2InputStream:void initBlock()"
        ]
    },
    "org.bouncycastle.apache.bzip2.CBZip2InputStream:int bsGetint()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2InputStream:int bsGetInt32()"
        ]
    },
    "org.bouncycastle.apache.bzip2.CBZip2InputStream:int bsGetIntVS(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2InputStream:void getAndMoveToFrontDecode()"
        ]
    },
    "org.bouncycastle.apache.bzip2.CBZip2InputStream:void recvDecodingTables()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2InputStream:void getAndMoveToFrontDecode()"
        ]
    },
    "org.bouncycastle.asn1.ASN1InputStream:org.bouncycastle.asn1.ASN1Primitive readObject()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1InputStream:org.bouncycastle.asn1.ASN1EncodableVector buildEncodableVector()",
            "org.bouncycastle.asn1.ASN1Primitive:org.bouncycastle.asn1.ASN1Primitive fromByteArray(byte[])",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.ASN1Primitive getObject(int)",
            "org.bouncycastle.asn1.LazyConstructionEnumeration:java.lang.Object readObject()",
            "org.bouncycastle.asn1.eac.CVCertificate:void setPrivateData(org.bouncycastle.asn1.DERApplicationSpecific)",
            "org.bouncycastle.asn1.eac.CVCertificate:void initFrom(org.bouncycastle.asn1.ASN1InputStream)",
            "org.bouncycastle.asn1.eac.CertificateBody:void setIso7816CertificateBody(org.bouncycastle.asn1.DERApplicationSpecific)",
            "org.bouncycastle.asn1.eac.CertificateHolderAuthorization:void setPrivateData(org.bouncycastle.asn1.ASN1InputStream)",
            "org.bouncycastle.asn1.util.Dump:void main(java.lang.String[])",
            "org.bouncycastle.asn1.x509.SubjectPublicKeyInfo:org.bouncycastle.asn1.ASN1Primitive parsePublicKey()",
            "org.bouncycastle.asn1.x509.SubjectPublicKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPublicKey()",
            "org.bouncycastle.asn1.x509.X509NameEntryConverter:org.bouncycastle.asn1.ASN1Primitive convertHexEncoded(java.lang.String,int)",
            "org.bouncycastle.crypto.tls.TlsUtils:org.bouncycastle.asn1.ASN1Primitive readASN1Object(byte[])",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(java.io.InputStream)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(java.io.InputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl:void readObject(java.io.ObjectInputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.Certificate readDERCertificate(org.bouncycastle.asn1.ASN1InputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.CRL readDERCRL(org.bouncycastle.asn1.ASN1InputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:org.bouncycastle.asn1.ASN1Primitive toASN1Object(java.security.cert.X509Certificate)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLEntryObject:java.lang.String toString()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:java.lang.String toString()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:java.util.List getExtendedKeyUsage()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:java.lang.String toString()",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:java.security.cert.Certificate[] engineGetCertificateChain(java.lang.String)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jcajce.provider.symmetric.CAST5$AlgParams:void engineInit(byte[],java.lang.String)",
            "org.bouncycastle.jcajce.provider.symmetric.IDEA$AlgParams:void engineInit(byte[],java.lang.String)",
            "org.bouncycastle.jce.PKCS10CertificationRequest:org.bouncycastle.asn1.ASN1Sequence toDERSequence(byte[])",
            "org.bouncycastle.jce.PKCS12Util:byte[] convertToDefiniteLength(byte[],char[],java.lang.String)",
            "org.bouncycastle.jce.X509Principal:org.bouncycastle.asn1.ASN1Sequence readSequence(org.bouncycastle.asn1.ASN1InputStream)",
            "org.bouncycastle.jce.netscape.NetscapeCertRequest:org.bouncycastle.asn1.ASN1Sequence getReq(byte[])",
            "org.bouncycastle.jce.netscape.NetscapeCertRequest:org.bouncycastle.asn1.ASN1Primitive getKeySpec()",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:org.bouncycastle.asn1.ASN1Primitive getObject(java.lang.String,byte[])",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier(java.security.PublicKey)",
            "org.bouncycastle.jce.provider.PEMUtil:org.bouncycastle.asn1.ASN1Sequence readPEMObject(java.io.InputStream)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCertBC(java.security.cert.CertPath,int,org.bouncycastle.jce.provider.PKIXNameConstraintValidator)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void checkCRLs(org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,java.util.List)",
            "org.bouncycastle.jce.provider.RFC3281CertPathUtilities:void checkCRLs(org.bouncycastle.x509.X509AttributeCertificate,org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.util.List)",
            "org.bouncycastle.jce.provider.X509AttrCertParser:org.bouncycastle.x509.X509AttributeCertificate readDERCertificate(java.io.InputStream)",
            "org.bouncycastle.jce.provider.X509CRLEntryObject:java.lang.String toString()",
            "org.bouncycastle.jce.provider.X509CRLObject:java.lang.String toString()",
            "org.bouncycastle.jce.provider.X509CRLParser:java.security.cert.CRL readDERCRL(java.io.InputStream)",
            "org.bouncycastle.jce.provider.X509CertPairParser:org.bouncycastle.x509.X509CertificatePair readDERCrossCertificatePair(java.io.InputStream)",
            "org.bouncycastle.jce.provider.X509CertParser:java.security.cert.Certificate readDERCertificate(java.io.InputStream)",
            "org.bouncycastle.jce.provider.X509CertificateObject:java.util.List getExtendedKeyUsage()",
            "org.bouncycastle.jce.provider.X509CertificateObject:java.lang.String toString()",
            "org.bouncycastle.jce.provider.X509LDAPCertStoreSpi:java.util.Collection engineGetCertificates(java.security.cert.CertSelector)",
            "org.bouncycastle.ocsp.CertificateID:org.bouncycastle.asn1.ocsp.CertID createCertID(org.bouncycastle.asn1.x509.AlgorithmIdentifier,java.security.cert.X509Certificate,org.bouncycastle.asn1.ASN1Integer,java.lang.String)",
            "org.bouncycastle.ocsp.OCSPReq:void <init>(org.bouncycastle.asn1.ASN1InputStream)",
            "org.bouncycastle.ocsp.OCSPResp:void <init>(org.bouncycastle.asn1.ASN1InputStream)",
            "org.bouncycastle.ocsp.RespID:void <init>(java.security.PublicKey)",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkNameConstraints()",
            "org.bouncycastle.x509.X509AttributeCertStoreSelector:boolean match(java.lang.Object)",
            "org.bouncycastle.x509.X509CertificatePair:byte[] getEncoded()",
            "org.bouncycastle.x509.X509V1CertificateGenerator:void setPublicKey(java.security.PublicKey)",
            "org.bouncycastle.x509.X509V2AttributeCertificate:org.bouncycastle.asn1.x509.AttributeCertificate getObject(java.io.InputStream)",
            "org.bouncycastle.x509.X509V2CRLGenerator:void addCRL(java.security.cert.X509CRL)",
            "org.bouncycastle.x509.X509V3CertificateGenerator:void setPublicKey(java.security.PublicKey)",
            "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure:org.bouncycastle.asn1.ASN1Sequence fromCertificate(java.security.cert.X509Certificate)",
            "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure:org.bouncycastle.asn1.ASN1Sequence fromKey(java.security.PublicKey)",
            "org.bouncycastle.x509.util.LDAPStoreHelper:java.util.Set createCrossCertificatePairs(java.util.List,org.bouncycastle.x509.X509CertPairStoreSelector)"
        ]
    },
    "org.bouncycastle.asn1.ASN1InputStream:int readLength()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1InputStream:org.bouncycastle.asn1.ASN1Primitive readObject()"
        ]
    },
    "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1Primitive readTaggedObject(boolean,int)",
            "org.bouncycastle.asn1.BERApplicationSpecificParser:org.bouncycastle.asn1.ASN1Primitive getLoadedObject()",
            "org.bouncycastle.asn1.BERSequenceParser:org.bouncycastle.asn1.ASN1Primitive getLoadedObject()",
            "org.bouncycastle.asn1.BERSetParser:org.bouncycastle.asn1.ASN1Primitive getLoadedObject()",
            "org.bouncycastle.asn1.DERExternalParser:org.bouncycastle.asn1.ASN1Primitive getLoadedObject()",
            "org.bouncycastle.asn1.DERSequenceParser:org.bouncycastle.asn1.ASN1Primitive getLoadedObject()",
            "org.bouncycastle.asn1.DERSetParser:org.bouncycastle.asn1.ASN1Primitive getLoadedObject()"
        ]
    },
    "org.bouncycastle.asn1.BERApplicationSpecificParser:org.bouncycastle.asn1.ASN1Encodable readObject()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.BERSequenceParser:org.bouncycastle.asn1.ASN1Encodable readObject()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.cms.OriginatorInfo getOriginatorInfo()",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1SetParser getRecipientInfos()",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.cms.EncryptedContentInfoParser getAuthEncryptedContentInfo()",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1SetParser getAuthAttrs()",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1SetParser getUnauthAttrs()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.cms.OriginatorInfo getOriginatorInfo()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1SetParser getRecipientInfos()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getMacAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.cms.ContentInfoParser getEncapsulatedContentInfo()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1SetParser getAuthAttrs()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1SetParser getUnauthAttrs()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.ContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EnvelopedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EnvelopedDataParser:org.bouncycastle.asn1.cms.OriginatorInfo getOriginatorInfo()",
            "org.bouncycastle.asn1.cms.EnvelopedDataParser:org.bouncycastle.asn1.ASN1SetParser getRecipientInfos()",
            "org.bouncycastle.asn1.cms.EnvelopedDataParser:org.bouncycastle.asn1.cms.EncryptedContentInfoParser getEncryptedContentInfo()",
            "org.bouncycastle.asn1.cms.EnvelopedDataParser:org.bouncycastle.asn1.ASN1SetParser getUnprotectedAttrs()",
            "org.bouncycastle.asn1.cms.SignedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.SignedDataParser:org.bouncycastle.asn1.ASN1SetParser getDigestAlgorithms()",
            "org.bouncycastle.asn1.cms.SignedDataParser:org.bouncycastle.asn1.cms.ContentInfoParser getEncapContentInfo()",
            "org.bouncycastle.asn1.cms.SignedDataParser:org.bouncycastle.asn1.ASN1SetParser getCertificates()",
            "org.bouncycastle.asn1.cms.SignedDataParser:org.bouncycastle.asn1.ASN1SetParser getCrls()",
            "org.bouncycastle.asn1.cms.SignedDataParser:org.bouncycastle.asn1.ASN1SetParser getSignerInfos()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()"
        ]
    },
    "org.bouncycastle.asn1.BERSetParser:org.bouncycastle.asn1.ASN1Encodable readObject()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.BERTaggedObjectParser:org.bouncycastle.asn1.ASN1Encodable getObjectParser(int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.cms.OriginatorInfo getOriginatorInfo()",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1SetParser getAuthAttrs()",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1SetParser getUnauthAttrs()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.cms.OriginatorInfo getOriginatorInfo()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1SetParser getAuthAttrs()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1SetParser getUnauthAttrs()",
            "org.bouncycastle.asn1.cms.ContentInfoParser:org.bouncycastle.asn1.ASN1Encodable getContent(int)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:org.bouncycastle.asn1.ASN1Encodable getEncryptedContent(int)",
            "org.bouncycastle.asn1.cms.EnvelopedDataParser:org.bouncycastle.asn1.cms.OriginatorInfo getOriginatorInfo()",
            "org.bouncycastle.asn1.cms.EnvelopedDataParser:org.bouncycastle.asn1.ASN1SetParser getUnprotectedAttrs()",
            "org.bouncycastle.asn1.cms.SignedDataParser:org.bouncycastle.asn1.ASN1SetParser getCertificates()",
            "org.bouncycastle.asn1.cms.SignedDataParser:org.bouncycastle.asn1.ASN1SetParser getCrls()"
        ]
    },
    "org.bouncycastle.asn1.DERExternalParser:org.bouncycastle.asn1.ASN1Encodable readObject()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.DERSequenceParser:org.bouncycastle.asn1.ASN1Encodable readObject()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.cms.OriginatorInfo getOriginatorInfo()",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1SetParser getRecipientInfos()",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.cms.EncryptedContentInfoParser getAuthEncryptedContentInfo()",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1SetParser getAuthAttrs()",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1SetParser getUnauthAttrs()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.cms.OriginatorInfo getOriginatorInfo()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1SetParser getRecipientInfos()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getMacAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.cms.ContentInfoParser getEncapsulatedContentInfo()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1SetParser getAuthAttrs()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1SetParser getUnauthAttrs()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.ContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EnvelopedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EnvelopedDataParser:org.bouncycastle.asn1.cms.OriginatorInfo getOriginatorInfo()",
            "org.bouncycastle.asn1.cms.EnvelopedDataParser:org.bouncycastle.asn1.ASN1SetParser getRecipientInfos()",
            "org.bouncycastle.asn1.cms.EnvelopedDataParser:org.bouncycastle.asn1.cms.EncryptedContentInfoParser getEncryptedContentInfo()",
            "org.bouncycastle.asn1.cms.EnvelopedDataParser:org.bouncycastle.asn1.ASN1SetParser getUnprotectedAttrs()",
            "org.bouncycastle.asn1.cms.SignedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.SignedDataParser:org.bouncycastle.asn1.ASN1SetParser getDigestAlgorithms()",
            "org.bouncycastle.asn1.cms.SignedDataParser:org.bouncycastle.asn1.cms.ContentInfoParser getEncapContentInfo()",
            "org.bouncycastle.asn1.cms.SignedDataParser:org.bouncycastle.asn1.ASN1SetParser getCertificates()",
            "org.bouncycastle.asn1.cms.SignedDataParser:org.bouncycastle.asn1.ASN1SetParser getCrls()",
            "org.bouncycastle.asn1.cms.SignedDataParser:org.bouncycastle.asn1.ASN1SetParser getSignerInfos()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()"
        ]
    },
    "org.bouncycastle.asn1.DERSetParser:org.bouncycastle.asn1.ASN1Encodable readObject()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.ASN1InputStream:org.bouncycastle.asn1.ASN1Primitive createPrimitiveDERObject(int,org.bouncycastle.asn1.DefiniteLengthInputStream,byte[][])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1InputStream:org.bouncycastle.asn1.ASN1Primitive buildObject(int,int,int)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1Encodable readObject()"
        ]
    },
    "org.bouncycastle.asn1.ASN1InputStream:char[] getBMPCharBuffer(org.bouncycastle.asn1.DefiniteLengthInputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1InputStream:org.bouncycastle.asn1.ASN1Primitive createPrimitiveDERObject(int,org.bouncycastle.asn1.DefiniteLengthInputStream,byte[][])"
        ]
    },
    "org.bouncycastle.crypto.tls.CertificateRequest:org.bouncycastle.crypto.tls.CertificateRequest parse(org.bouncycastle.crypto.tls.TlsContext,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:void processCertificateRequest(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,byte[])",
            "org.bouncycastle.crypto.tls.TlsClientProtocol:void handleHandshakeMessage(short,byte[])"
        ]
    },
    "org.bouncycastle.crypto.tls.CertificateStatus:org.bouncycastle.crypto.tls.CertificateStatus parse(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:void processCertificateStatus(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,byte[])",
            "org.bouncycastle.crypto.tls.TlsClientProtocol:void handleHandshakeMessage(short,byte[])"
        ]
    },
    "org.bouncycastle.crypto.tls.CertificateStatusRequest:org.bouncycastle.crypto.tls.CertificateStatusRequest parse(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsExtensionsUtils:org.bouncycastle.crypto.tls.CertificateStatusRequest readStatusRequestExtension(byte[])"
        ]
    },
    "org.bouncycastle.crypto.tls.CertificateURL:org.bouncycastle.crypto.tls.CertificateURL parse(org.bouncycastle.crypto.tls.TlsContext,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.tls.DTLSClientProtocol:void processServerHello(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:org.bouncycastle.crypto.tls.DTLSTransport clientHandshake(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,org.bouncycastle.crypto.tls.DTLSRecordLayer)"
        ]
    },
    "org.bouncycastle.crypto.tls.DTLSServerProtocol:void processClientHello(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState,byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSServerProtocol:org.bouncycastle.crypto.tls.DTLSTransport serverHandshake(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState,org.bouncycastle.crypto.tls.DTLSRecordLayer)"
        ]
    },
    "org.bouncycastle.crypto.tls.HeartbeatExtension:org.bouncycastle.crypto.tls.HeartbeatExtension parse(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsExtensionsUtils:org.bouncycastle.crypto.tls.HeartbeatExtension readHeartbeatExtension(byte[])"
        ]
    },
    "org.bouncycastle.crypto.tls.ServerName:org.bouncycastle.crypto.tls.ServerName parse(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.ServerNameList:org.bouncycastle.crypto.tls.ServerNameList parse(java.io.InputStream)"
        ]
    },
    "org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm:org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm parse(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DigitallySigned:org.bouncycastle.crypto.tls.DigitallySigned parse(org.bouncycastle.crypto.tls.TlsContext,java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:java.util.Vector parseSupportedSignatureAlgorithms(boolean,java.io.InputStream)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsClientProtocol:void receiveServerHelloMessage(java.io.ByteArrayInputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsClientProtocol:void handleHandshakeMessage(short,byte[])"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsECCUtils:short[] readSupportedPointFormatsExtension(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsECCUtils:short[] getSupportedPointFormatsExtension(java.util.Hashtable)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsECCUtils:org.bouncycastle.crypto.params.ECDomainParameters readECParameters(int[],short[],java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsECDHEKeyExchange:void processServerKeyExchange(java.io.InputStream)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsServerProtocol:void receiveClientHelloMessage(java.io.ByteArrayInputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void handleHandshakeMessage(short,byte[])"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsUtils:byte[] readOpaque8(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:byte[] processHelloVerifyRequest(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,byte[])",
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:void processServerHello(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,byte[])",
            "org.bouncycastle.crypto.tls.DTLSServerProtocol:void processClientHello(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState,byte[])",
            "org.bouncycastle.crypto.tls.TlsClientProtocol:void receiveServerHelloMessage(java.io.ByteArrayInputStream)",
            "org.bouncycastle.crypto.tls.TlsECCUtils:java.math.BigInteger readECFieldElement(int,java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsECCUtils:java.math.BigInteger readECParameter(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsECCUtils:org.bouncycastle.crypto.params.ECDomainParameters readECParameters(int[],short[],java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsECDHEKeyExchange:void processServerKeyExchange(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsECDHKeyExchange:void processClientKeyExchange(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsSRPKeyExchange:void processServerKeyExchange(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsSRPUtils:byte[] readSRPExtension(byte[])",
            "org.bouncycastle.crypto.tls.TlsSRTPUtils:org.bouncycastle.crypto.tls.UseSRTPData readUseSRTPExtension(byte[])",
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void receiveClientHelloMessage(java.io.ByteArrayInputStream)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsUtils:short[] readUint8Array(int,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSServerProtocol:void processClientHello(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState,byte[])",
            "org.bouncycastle.crypto.tls.TlsECCUtils:short[] readSupportedPointFormatsExtension(byte[])",
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void receiveClientHelloMessage(java.io.ByteArrayInputStream)"
        ]
    },
    "org.bouncycastle.crypto.tls.URLAndHash:org.bouncycastle.crypto.tls.URLAndHash parse(org.bouncycastle.crypto.tls.TlsContext,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.CertificateURL:org.bouncycastle.crypto.tls.CertificateURL parse(org.bouncycastle.crypto.tls.TlsContext,java.io.InputStream)"
        ]
    },
    "org.bouncycastle.crypto.tls.OCSPStatusRequest:org.bouncycastle.crypto.tls.OCSPStatusRequest parse(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.CertificateStatusRequest:org.bouncycastle.crypto.tls.CertificateStatusRequest parse(java.io.InputStream)"
        ]
    },
    "org.bouncycastle.crypto.tls.ServerNameList:org.bouncycastle.crypto.tls.ServerNameList parse(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsExtensionsUtils:org.bouncycastle.crypto.tls.ServerNameList readServerNameExtension(byte[])"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsECCUtils:int[] readSupportedEllipticCurvesExtension(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsECCUtils:int[] getSupportedEllipticCurvesExtension(java.util.Hashtable)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsProtocol:java.util.Hashtable readExtensions(java.io.ByteArrayInputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:void processServerHello(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,byte[])",
            "org.bouncycastle.crypto.tls.DTLSServerProtocol:void processClientHello(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState,byte[])",
            "org.bouncycastle.crypto.tls.SessionParameters:java.util.Hashtable readServerExtensions()",
            "org.bouncycastle.crypto.tls.TlsClientProtocol:void receiveServerHelloMessage(java.io.ByteArrayInputStream)",
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void receiveClientHelloMessage(java.io.ByteArrayInputStream)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsProtocol:java.util.Vector readSupplementalDataMessage(java.io.ByteArrayInputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:void processServerSupplementalData(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,byte[])",
            "org.bouncycastle.crypto.tls.DTLSServerProtocol:void processClientSupplementalData(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState,byte[])",
            "org.bouncycastle.crypto.tls.TlsClientProtocol:void handleHandshakeMessage(short,byte[])",
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void handleHandshakeMessage(short,byte[])"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsSRTPUtils:org.bouncycastle.crypto.tls.UseSRTPData readUseSRTPExtension(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsSRTPUtils:org.bouncycastle.crypto.tls.UseSRTPData getUseSRTPExtension(java.util.Hashtable)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsUtils:byte[] readOpaque16(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.CertificateRequest:org.bouncycastle.crypto.tls.CertificateRequest parse(org.bouncycastle.crypto.tls.TlsContext,java.io.InputStream)",
            "org.bouncycastle.crypto.tls.DigitallySigned:org.bouncycastle.crypto.tls.DigitallySigned parse(org.bouncycastle.crypto.tls.TlsContext,java.io.InputStream)",
            "org.bouncycastle.crypto.tls.NewSessionTicket:org.bouncycastle.crypto.tls.NewSessionTicket parse(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.OCSPStatusRequest:org.bouncycastle.crypto.tls.OCSPStatusRequest parse(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.ServerName:org.bouncycastle.crypto.tls.ServerName parse(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsDHUtils:java.math.BigInteger readDHParameter(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsPSKKeyExchange:void processServerKeyExchange(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsProtocol:java.util.Hashtable readExtensions(java.io.ByteArrayInputStream)",
            "org.bouncycastle.crypto.tls.TlsProtocol:java.util.Vector readSupplementalDataMessage(java.io.ByteArrayInputStream)",
            "org.bouncycastle.crypto.tls.TlsRSAKeyExchange:void processClientKeyExchange(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsSRPKeyExchange:void processServerKeyExchange(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.URLAndHash:org.bouncycastle.crypto.tls.URLAndHash parse(org.bouncycastle.crypto.tls.TlsContext,java.io.InputStream)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsUtils:int[] readUint16Array(int,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSServerProtocol:void processClientHello(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState,byte[])",
            "org.bouncycastle.crypto.tls.TlsECCUtils:int[] readSupportedEllipticCurvesExtension(byte[])",
            "org.bouncycastle.crypto.tls.TlsSRTPUtils:org.bouncycastle.crypto.tls.UseSRTPData readUseSRTPExtension(byte[])",
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void receiveClientHelloMessage(java.io.ByteArrayInputStream)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsUtils:java.util.Vector parseSupportedSignatureAlgorithms(boolean,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.CertificateRequest:org.bouncycastle.crypto.tls.CertificateRequest parse(org.bouncycastle.crypto.tls.TlsContext,java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:java.util.Vector readSignatureAlgorithmsExtension(byte[])"
        ]
    },
    "org.bouncycastle.crypto.tls.Certificate:org.bouncycastle.crypto.tls.Certificate parse(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:org.bouncycastle.crypto.tls.Certificate processServerCertificate(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,byte[])",
            "org.bouncycastle.crypto.tls.DTLSServerProtocol:void processClientCertificate(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState,byte[])",
            "org.bouncycastle.crypto.tls.TlsClientProtocol:void handleHandshakeMessage(short,byte[])",
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void receiveCertificateMessage(java.io.ByteArrayInputStream)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsUtils:byte[] readOpaque24(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.Certificate:org.bouncycastle.crypto.tls.Certificate parse(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.CertificateStatus:org.bouncycastle.crypto.tls.CertificateStatus parse(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsProtocol:java.util.Vector readSupplementalDataMessage(java.io.ByteArrayInputStream)"
        ]
    },
    "org.bouncycastle.crypto.tls.NewSessionTicket:org.bouncycastle.crypto.tls.NewSessionTicket parse(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:void processNewSessionTicket(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,byte[])",
            "org.bouncycastle.crypto.tls.TlsClientProtocol:void receiveNewSessionTicketMessage(java.io.ByteArrayInputStream)"
        ]
    },
    "org.bouncycastle.crypto.tls.DTLSClientProtocol:byte[] processHelloVerifyRequest(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:org.bouncycastle.crypto.tls.DTLSTransport clientHandshake(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,org.bouncycastle.crypto.tls.DTLSRecordLayer)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.PEMUtil:org.bouncycastle.asn1.ASN1Sequence readPEMObject(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.Certificate readPEMCertificate(java.io.InputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.CRL readPEMCRL(java.io.InputStream)"
        ]
    },
    "org.bouncycastle.jce.provider.PEMUtil:org.bouncycastle.asn1.ASN1Sequence readPEMObject(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.X509AttrCertParser:org.bouncycastle.x509.X509AttributeCertificate readPEMCertificate(java.io.InputStream)",
            "org.bouncycastle.jce.provider.X509CRLParser:java.security.cert.CRL readPEMCRL(java.io.InputStream)",
            "org.bouncycastle.jce.provider.X509CertParser:java.security.cert.Certificate readPEMCertificate(java.io.InputStream)"
        ]
    },
    "org.bouncycastle.jce.provider.X509AttrCertParser:java.util.Collection engineReadAll()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.X509StreamParser:java.util.Collection readAll()"
        ]
    },
    "org.bouncycastle.x509.X509StreamParser:java.lang.Object read()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.util.LDAPStoreHelper:java.util.Set createAttributeCertificates(java.util.List,org.bouncycastle.x509.X509AttributeCertStoreSelector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.util.LDAPStoreHelper:java.util.Collection getAACertificates(org.bouncycastle.x509.X509AttributeCertStoreSelector)",
            "org.bouncycastle.x509.util.LDAPStoreHelper:java.util.Collection getAttributeDescriptorCertificates(org.bouncycastle.x509.X509AttributeCertStoreSelector)",
            "org.bouncycastle.x509.util.LDAPStoreHelper:java.util.Collection getAttributeCertificateAttributes(org.bouncycastle.x509.X509AttributeCertStoreSelector)"
        ]
    },
    "org.bouncycastle.jce.provider.X509CRLParser:java.util.Collection engineReadAll()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.X509StreamParser:java.util.Collection readAll()"
        ]
    },
    "org.bouncycastle.x509.util.LDAPStoreHelper:java.util.Set createCRLs(java.util.List,org.bouncycastle.x509.X509CRLStoreSelector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.util.LDAPStoreHelper:java.util.Collection getAuthorityRevocationLists(org.bouncycastle.x509.X509CRLStoreSelector)",
            "org.bouncycastle.x509.util.LDAPStoreHelper:java.util.Collection getAttributeCertificateRevocationLists(org.bouncycastle.x509.X509CRLStoreSelector)",
            "org.bouncycastle.x509.util.LDAPStoreHelper:java.util.Collection getAttributeAuthorityRevocationLists(org.bouncycastle.x509.X509CRLStoreSelector)",
            "org.bouncycastle.x509.util.LDAPStoreHelper:java.util.Collection getDeltaCertificateRevocationLists(org.bouncycastle.x509.X509CRLStoreSelector)",
            "org.bouncycastle.x509.util.LDAPStoreHelper:java.util.Collection getCertificateRevocationLists(org.bouncycastle.x509.X509CRLStoreSelector)"
        ]
    },
    "org.bouncycastle.jce.provider.X509CertPairParser:java.util.Collection engineReadAll()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.X509StreamParser:java.util.Collection readAll()"
        ]
    },
    "org.bouncycastle.x509.util.LDAPStoreHelper:java.util.Set createCrossCertificatePairs(java.util.List,org.bouncycastle.x509.X509CertPairStoreSelector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.util.LDAPStoreHelper:java.util.Collection getCrossCertificatePairs(org.bouncycastle.x509.X509CertPairStoreSelector)"
        ]
    },
    "org.bouncycastle.jce.provider.X509CertParser:java.util.Collection engineReadAll()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.X509StreamParser:java.util.Collection readAll()"
        ]
    },
    "org.bouncycastle.x509.util.LDAPStoreHelper:java.util.Set createCerts(java.util.List,org.bouncycastle.x509.X509CertStoreSelector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.util.LDAPStoreHelper:java.util.Collection getUserCertificates(org.bouncycastle.x509.X509CertStoreSelector)",
            "org.bouncycastle.x509.util.LDAPStoreHelper:java.util.Collection getCACertificates(org.bouncycastle.x509.X509CertStoreSelector)"
        ]
    },
    "org.bouncycastle.util.io.Streams:int readFully(java.io.InputStream,byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1InputStream:void readFully(byte[])",
            "org.bouncycastle.asn1.ASN1InputStream:byte[] getBuffer(org.bouncycastle.asn1.DefiniteLengthInputStream,byte[][])",
            "org.bouncycastle.asn1.DERBitString:org.bouncycastle.asn1.DERBitString fromInputStream(int,java.io.InputStream)",
            "org.bouncycastle.asn1.DefiniteLengthInputStream:byte[] toByteArray()",
            "org.bouncycastle.crypto.tls.TlsUtils:byte[] readAllOrNothing(int,java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:byte[] readFully(int,java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void readFully(byte[],java.io.InputStream)",
            "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$BouncyCastleStore:void engineLoad(java.io.InputStream,char[])"
        ]
    },
    "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:void engineUpdateAAD(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:void engineUpdateAAD(java.nio.ByteBuffer)"
        ]
    },
    "org.bouncycastle.crypto.modes.GCMBlockCipher:int processByte(byte,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$AEADGenericBlockCipher:int processByte(byte,byte[],int)"
        ]
    },
    "org.bouncycastle.crypto.modes.GCMBlockCipher:int processBytes(byte[],int,int,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.io.CipherInputStream:int nextChunk()",
            "org.bouncycastle.crypto.io.CipherOutputStream:void write(byte[],int,int)",
            "org.bouncycastle.crypto.tls.TlsAEADCipher:byte[] encodePlaintext(long,short,byte[],int,int)",
            "org.bouncycastle.crypto.tls.TlsAEADCipher:byte[] decodeCiphertext(long,short,byte[],int,int)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher$AEADGenericBlockCipher:int processBytes(byte[],int,int,byte[],int)"
        ]
    },
    "org.bouncycastle.crypto.modes.OCBBlockCipher:void reset(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.modes.OCBBlockCipher:int doFinal(byte[],int)",
            "org.bouncycastle.crypto.modes.OCBBlockCipher:void reset()"
        ]
    },
    "org.bouncycastle.crypto.BufferedAsymmetricBlockCipher:byte[] doFinal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.elgamal.CipherSpi:byte[] engineDoFinal(byte[],int,int)",
            "org.bouncycastle.jcajce.provider.asymmetric.elgamal.CipherSpi:int engineDoFinal(byte[],int,int,byte[],int)"
        ]
    },
    "org.bouncycastle.crypto.encodings.ISO9796d1Encoding:byte[] encodeBlock(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.encodings.ISO9796d1Encoding:byte[] processBlock(byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.encodings.ISO9796d1Encoding:byte[] decodeBlock(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.encodings.ISO9796d1Encoding:byte[] processBlock(byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.encodings.PKCS1Encoding:byte[] decodeBlock(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.encodings.PKCS1Encoding:byte[] processBlock(byte[],int,int)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi:byte[] engineDoFinal(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:java.security.Key engineUnwrap(byte[],java.lang.String,int)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi:int engineDoFinal(byte[],int,int,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.tls.DefaultTlsEncryptionCredentials:byte[] decryptPreMasterSecret(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsRSAUtils:byte[] safeDecryptPreMasterSecret(org.bouncycastle.crypto.tls.TlsContext,org.bouncycastle.crypto.tls.TlsEncryptionCredentials,byte[])"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dsa.AlgorithmParameterGeneratorSpi:java.security.AlgorithmParameters engineGenerateParameters()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dsa.KeyPairGeneratorSpi:java.security.KeyPair generateKeyPair()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.tls.AbstractTlsSigner:byte[] generateRawSignature(org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DefaultTlsSignerCredentials:byte[] generateCertificateSignature(byte[])"
        ]
    },
    "org.bouncycastle.crypto.tls.DefaultTlsSignerCredentials:byte[] generateCertificateSignature(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:org.bouncycastle.crypto.tls.DTLSTransport clientHandshake(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,org.bouncycastle.crypto.tls.DTLSRecordLayer)",
            "org.bouncycastle.crypto.tls.TlsClientProtocol:void handleHandshakeMessage(short,byte[])",
            "org.bouncycastle.crypto.tls.TlsDHEKeyExchange:byte[] generateServerKeyExchange()",
            "org.bouncycastle.crypto.tls.TlsECDHEKeyExchange:byte[] generateServerKeyExchange()"
        ]
    },
    "org.bouncycastle.crypto.tls.DTLSClientProtocol:byte[] generateClientKeyExchange(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:org.bouncycastle.crypto.tls.DTLSTransport clientHandshake(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,org.bouncycastle.crypto.tls.DTLSRecordLayer)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsClientProtocol:void sendClientKeyExchangeMessage()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsClientProtocol:void handleHandshakeMessage(short,byte[])"
        ]
    },
    "org.bouncycastle.crypto.tls.DTLSServerProtocol:void processClientKeyExchange(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState,byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSServerProtocol:org.bouncycastle.crypto.tls.DTLSTransport serverHandshake(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState,org.bouncycastle.crypto.tls.DTLSRecordLayer)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsServerProtocol:void receiveClientKeyExchangeMessage(java.io.ByteArrayInputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void handleHandshakeMessage(short,byte[])"
        ]
    },
    "org.bouncycastle.pqc.crypto.gmss.GMSSKeyPairGenerator:org.bouncycastle.crypto.AsymmetricCipherKeyPair genKeyPair()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.crypto.gmss.GMSSKeyPairGenerator:org.bouncycastle.crypto.AsymmetricCipherKeyPair generateKeyPair()"
        ]
    },
    "org.bouncycastle.pqc.jcajce.provider.util.AsymmetricHybridCipher:int doFinal(byte[],int,int,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.jcajce.provider.util.CipherSpiExt:int engineDoFinal(byte[],int,int,byte[],int)"
        ]
    },
    "org.bouncycastle.pqc.jcajce.provider.util.CipherSpiExt:byte[] engineDoFinal(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.jcajce.provider.util.CipherSpiExt:byte[] doFinal()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.jcajce.provider.util.CipherSpiExt:byte[] doFinal(byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.tls.DTLSRecordLayer:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSRecordLayer:void closeTransport()",
            "org.bouncycastle.crypto.tls.DTLSTransport:void close()"
        ]
    },
    "org.bouncycastle.crypto.tls.DTLSRecordLayer:void closeTransport()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSRecordLayer:int receive(byte[],int,int,int)",
            "org.bouncycastle.crypto.tls.DTLSRecordLayer:void close()",
            "org.bouncycastle.crypto.tls.DTLSRecordLayer:void fail(short)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsOutputStream:void write(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1OutputStream:void write(byte[],int,int)",
            "org.bouncycastle.crypto.io.CipherOutputStream:void write(byte[],int,int)",
            "org.bouncycastle.crypto.io.CipherOutputStream:void close()",
            "org.bouncycastle.crypto.tls.CertificateURL$ListBuffer16:void encodeTo(java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.RecordStream:byte[] decodeAndVerify(short,java.io.InputStream,int)",
            "org.bouncycastle.crypto.tls.RecordStream:void writeRecord(short,byte[],int,int)",
            "org.bouncycastle.crypto.tls.TlsOutputStream:void write(int)",
            "org.bouncycastle.util.io.BufferingOutputStream:void write(byte[],int,int)",
            "org.bouncycastle.util.io.BufferingOutputStream:void flush()",
            "org.bouncycastle.util.io.Streams:void pipeAll(java.io.InputStream,java.io.OutputStream)",
            "org.bouncycastle.util.io.Streams:long pipeAllLimited(java.io.InputStream,long,java.io.OutputStream)",
            "org.bouncycastle.util.io.TeeInputStream:int read(byte[],int,int)",
            "org.bouncycastle.util.io.TeeOutputStream:void write(byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsProtocol$HandshakeMessage:void writeToRecordStream()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsClientProtocol:void sendCertificateVerifyMessage(org.bouncycastle.crypto.tls.DigitallySigned)",
            "org.bouncycastle.crypto.tls.TlsClientProtocol:void sendClientHelloMessage()",
            "org.bouncycastle.crypto.tls.TlsClientProtocol:void sendClientKeyExchangeMessage()",
            "org.bouncycastle.crypto.tls.TlsProtocol:void sendCertificateMessage(org.bouncycastle.crypto.tls.Certificate)",
            "org.bouncycastle.crypto.tls.TlsProtocol:void sendFinishedMessage()",
            "org.bouncycastle.crypto.tls.TlsProtocol:void sendSupplementalDataMessage(java.util.Vector)",
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void sendCertificateRequestMessage(org.bouncycastle.crypto.tls.CertificateRequest)",
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void sendCertificateStatusMessage(org.bouncycastle.crypto.tls.CertificateStatus)",
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void sendNewSessionTicketMessage(org.bouncycastle.crypto.tls.NewSessionTicket)",
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void sendServerHelloMessage()",
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void sendServerKeyExchangeMessage(byte[])"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsServerProtocol:void sendServerHelloDoneMessage()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void handleHandshakeMessage(short,byte[])"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsProtocol:void raiseWarning(short,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsClientProtocol:void handleHandshakeMessage(short,byte[])",
            "org.bouncycastle.crypto.tls.TlsProtocol:void sendCertificateMessage(org.bouncycastle.crypto.tls.Certificate)",
            "org.bouncycastle.crypto.tls.TlsProtocol:void handleClose(boolean)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsProtocol:void completeHandshake()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsClientProtocol:void connect(org.bouncycastle.crypto.tls.TlsClient)",
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void accept(org.bouncycastle.crypto.tls.TlsServer)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsProtocol:int readApplicationData(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsInputStream:int read(byte[],int,int)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ec.IESCipher:void engineInit(int,java.security.Key,java.security.AlgorithmParameters,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ec.IESCipher:void engineInit(int,java.security.Key,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi:void engineInit(java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi:void engineInit(java.security.Key,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x509.X509Name:java.lang.String toString(boolean,java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.X509Name:java.lang.String toString()"
        ]
    },
    "org.bouncycastle.i18n.LocalizedMessage$FilteredArguments:java.lang.Object filter(int,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.i18n.LocalizedMessage$FilteredArguments:java.lang.Object[] getFilteredArgs(java.util.Locale)"
        ]
    },
    "org.bouncycastle.i18n.filter.TrustedInput:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:java.lang.String toString(boolean,java.util.Hashtable)",
            "org.bouncycastle.i18n.LocalizedMessage$FilteredArguments:java.lang.Object filter(int,java.lang.Object)",
            "org.bouncycastle.i18n.filter.TrustedInput:java.lang.String toString()",
            "org.bouncycastle.i18n.filter.UntrustedInput:java.lang.String getString()",
            "org.bouncycastle.i18n.filter.UntrustedInput:java.lang.String toString()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.CertPath engineGenerateCertPath(java.util.List)"
        ]
    },
    "org.bouncycastle.i18n.filter.UntrustedInput:java.lang.String getString()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.i18n.filter.UntrustedInput:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:java.lang.String toString(boolean,java.util.Hashtable)",
            "org.bouncycastle.i18n.LocalizedMessage$FilteredArguments:java.lang.Object filter(int,java.lang.Object)",
            "org.bouncycastle.i18n.filter.TrustedInput:java.lang.String toString()",
            "org.bouncycastle.i18n.filter.UntrustedInput:java.lang.String getString()",
            "org.bouncycastle.i18n.filter.UntrustedInput:java.lang.String toString()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.CertPath engineGenerateCertPath(java.util.List)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.CertPath engineGenerateCertPath(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.examples.PKCS12Example:void main(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.provider.CertPathValidatorUtilities:java.security.cert.TrustAnchor findTrustAnchor(java.security.cert.X509Certificate,java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.provider.PKIXAttrCertPathBuilderSpi:java.security.cert.CertPathBuilderResult build(org.bouncycastle.x509.X509AttributeCertificate,java.security.cert.X509Certificate,org.bouncycastle.x509.ExtendedPKIXBuilderParameters,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.PKIXAttrCertPathBuilderSpi:java.security.cert.CertPathBuilderResult engineBuild(java.security.cert.CertPathParameters)",
            "org.bouncycastle.jce.provider.PKIXAttrCertPathBuilderSpi:java.security.cert.CertPathBuilderResult build(org.bouncycastle.x509.X509AttributeCertificate,java.security.cert.X509Certificate,org.bouncycastle.x509.ExtendedPKIXBuilderParameters,java.util.List)"
        ]
    },
    "org.bouncycastle.jce.provider.PKIXCertPathBuilderSpi:java.security.cert.CertPathBuilderResult build(java.security.cert.X509Certificate,org.bouncycastle.x509.ExtendedPKIXBuilderParameters,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.PKIXCertPathBuilderSpi:java.security.cert.CertPathBuilderResult engineBuild(java.security.cert.CertPathParameters)",
            "org.bouncycastle.jce.provider.PKIXCertPathBuilderSpi:java.security.cert.CertPathBuilderResult build(java.security.cert.X509Certificate,org.bouncycastle.x509.ExtendedPKIXBuilderParameters,java.util.List)"
        ]
    },
    "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:java.util.Set processCRLF(java.security.cert.X509CRL,java.lang.Object,java.security.cert.X509Certificate,java.security.PublicKey,org.bouncycastle.x509.ExtendedPKIXParameters,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void checkCRL(org.bouncycastle.asn1.x509.DistributionPoint,org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,org.bouncycastle.jce.provider.CertStatus,org.bouncycastle.jce.provider.ReasonsMask,java.util.List)",
            "org.bouncycastle.jce.provider.RFC3281CertPathUtilities:void checkCRL(org.bouncycastle.asn1.x509.DistributionPoint,org.bouncycastle.x509.X509AttributeCertificate,org.bouncycastle.x509.ExtendedPKIXParameters,java.util.Date,java.security.cert.X509Certificate,org.bouncycastle.jce.provider.CertStatus,org.bouncycastle.jce.provider.ReasonsMask,java.util.List)"
        ]
    },
    "org.bouncycastle.ocsp.CertificateID:void <init>(java.lang.String,java.security.cert.X509Certificate,java.math.BigInteger,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.ocsp.CertificateID:void <init>(java.lang.String,java.security.cert.X509Certificate,java.math.BigInteger)"
        ]
    },
    "org.bouncycastle.ocsp.CertificateID:boolean matchesIssuer(java.security.cert.X509Certificate,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.provider.CertStoreCollectionSpi:java.util.Collection engineGetCertificates(java.security.cert.CertSelector)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.AttributeCertificateHolder:boolean match(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi:java.security.cert.CertPathValidatorResult engineValidate(java.security.cert.CertPath,java.security.cert.CertPathParameters)",
            "org.bouncycastle.util.CollectionStore:java.util.Collection getMatches(org.bouncycastle.util.Selector)"
        ]
    },
    "org.bouncycastle.x509.examples.AttrCertExample:void main(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.PKIXCertPathReviewer:void doChecks()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.PKIXCertPathReviewer:java.util.List[] getErrors()",
            "org.bouncycastle.x509.PKIXCertPathReviewer:java.util.List getErrors(int)",
            "org.bouncycastle.x509.PKIXCertPathReviewer:java.util.List[] getNotifications()",
            "org.bouncycastle.x509.PKIXCertPathReviewer:java.util.List getNotifications(int)",
            "org.bouncycastle.x509.PKIXCertPathReviewer:java.security.cert.PolicyNode getPolicyTree()",
            "org.bouncycastle.x509.PKIXCertPathReviewer:java.security.PublicKey getSubjectPublicKey()",
            "org.bouncycastle.x509.PKIXCertPathReviewer:java.security.cert.TrustAnchor getTrustAnchor()",
            "org.bouncycastle.x509.PKIXCertPathReviewer:boolean isValidCertPath()"
        ]
    },
    "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure:void <init>(java.security.cert.X509Certificate)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.examples.PKCS12Example:java.security.cert.Certificate createIntermediateCert(java.security.PublicKey,java.security.PrivateKey,java.security.cert.X509Certificate)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsProtocol:void processRecord(short,byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.RecordStream:boolean readRecord()"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsSRPKeyExchange:void generateClientKeyExchange(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:byte[] generateClientKeyExchange(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState)",
            "org.bouncycastle.crypto.tls.TlsClientProtocol:void sendClientKeyExchangeMessage()"
        ]
    },
    "org.bouncycastle.crypto.prng.ReversedWindowGenerator:void addSeedMaterial(long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.prng.ReversedWindowGenerator:void addSeedMaterial(long)"
        ]
    },
    "org.bouncycastle.crypto.prng.DigestRandomGenerator:void nextBytes(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.prng.DigestRandomGenerator:void nextBytes(byte[])",
            "org.bouncycastle.crypto.prng.ReversedWindowGenerator:void doNextBytes(byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.prng.SP800SecureRandomBuilder$ConfigurableDualECDRBGProvider:org.bouncycastle.crypto.prng.drbg.SP80090DRBG get(org.bouncycastle.crypto.prng.EntropySource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.prng.SP800SecureRandom:void nextBytes(byte[])"
        ]
    },
    "org.bouncycastle.crypto.prng.drbg.DualECSP800DRBG:void <init>(org.bouncycastle.crypto.Digest,int,org.bouncycastle.crypto.prng.EntropySource,byte[],byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.prng.SP800SecureRandomBuilder$DualECDRBGProvider:org.bouncycastle.crypto.prng.drbg.SP80090DRBG get(org.bouncycastle.crypto.prng.EntropySource)"
        ]
    },
    "org.bouncycastle.crypto.prng.SP800SecureRandomBuilder$HashDRBGProvider:org.bouncycastle.crypto.prng.drbg.SP80090DRBG get(org.bouncycastle.crypto.prng.EntropySource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.prng.SP800SecureRandom:void nextBytes(byte[])"
        ]
    },
    "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:java.math.BigInteger[] calculateZeroKnowledgeProof(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.lang.String,org.bouncycastle.crypto.Digest,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.agreement.jpake.JPAKEParticipant:org.bouncycastle.crypto.agreement.jpake.JPAKERound1Payload createRound1PayloadToSend()",
            "org.bouncycastle.crypto.agreement.jpake.JPAKEParticipant:org.bouncycastle.crypto.agreement.jpake.JPAKERound2Payload createRound2PayloadToSend()"
        ]
    },
    "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:void validateZeroKnowledgeProof(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger[],java.lang.String,org.bouncycastle.crypto.Digest)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.agreement.jpake.JPAKEParticipant:void validateRound1PayloadReceived(org.bouncycastle.crypto.agreement.jpake.JPAKERound1Payload)",
            "org.bouncycastle.crypto.agreement.jpake.JPAKEParticipant:void validateRound2PayloadReceived(org.bouncycastle.crypto.agreement.jpake.JPAKERound2Payload)"
        ]
    },
    "org.bouncycastle.crypto.agreement.srp.SRP6Client:java.math.BigInteger calculateS()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.agreement.srp.SRP6Client:java.math.BigInteger calculateSecret(java.math.BigInteger)"
        ]
    },
    "org.bouncycastle.crypto.agreement.srp.SRP6Server:java.math.BigInteger generateServerCredentials()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.agreement.srp.SRP6Client:java.math.BigInteger calculateSecret(java.math.BigInteger)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsSRPKeyExchange:byte[] generatePremasterSecret()"
        ]
    },
    "org.bouncycastle.crypto.agreement.srp.SRP6Server:java.math.BigInteger calculateSecret(java.math.BigInteger)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.encodings.OAEPEncoding:void <init>(org.bouncycastle.crypto.AsymmetricBlockCipher)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.encodings.OAEPEncoding:void <init>(org.bouncycastle.crypto.AsymmetricBlockCipher,org.bouncycastle.crypto.Digest)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.elgamal.CipherSpi:void initFromSpec(javax.crypto.spec.OAEPParameterSpec)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.elgamal.CipherSpi:void engineSetPadding(java.lang.String)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi:void initFromSpec(javax.crypto.spec.OAEPParameterSpec)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi:void <init>(javax.crypto.spec.OAEPParameterSpec)",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi:void engineSetPadding(java.lang.String)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi:void engineInit(int,java.security.Key,java.security.AlgorithmParameters,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi:void engineInit(int,java.security.Key,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.generators.OpenSSLPBEParametersGenerator:org.bouncycastle.crypto.CipherParameters generateDerivedMacParameters(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.symmetric.util.PBE$Util:org.bouncycastle.crypto.CipherParameters makePBEMacParameters(org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey,java.security.spec.AlgorithmParameterSpec)",
            "org.bouncycastle.jcajce.provider.symmetric.util.PBE$Util:org.bouncycastle.crypto.CipherParameters makePBEMacParameters(javax.crypto.spec.PBEKeySpec,int,int,int)",
            "org.bouncycastle.jce.provider.BrokenPBE$Util:org.bouncycastle.crypto.CipherParameters makePBEMacParameters(org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey,java.security.spec.AlgorithmParameterSpec,int,int,int)"
        ]
    },
    "org.bouncycastle.crypto.generators.PKCS5S1ParametersGenerator:org.bouncycastle.crypto.CipherParameters generateDerivedMacParameters(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.symmetric.util.PBE$Util:org.bouncycastle.crypto.CipherParameters makePBEMacParameters(org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey,java.security.spec.AlgorithmParameterSpec)",
            "org.bouncycastle.jcajce.provider.symmetric.util.PBE$Util:org.bouncycastle.crypto.CipherParameters makePBEMacParameters(javax.crypto.spec.PBEKeySpec,int,int,int)",
            "org.bouncycastle.jce.provider.BrokenPBE$Util:org.bouncycastle.crypto.CipherParameters makePBEMacParameters(org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey,java.security.spec.AlgorithmParameterSpec,int,int,int)"
        ]
    },
    "org.bouncycastle.crypto.prng.ReversedWindowGenerator:void addSeedMaterial(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.prng.ReversedWindowGenerator:void addSeedMaterial(byte[])"
        ]
    },
    "org.bouncycastle.crypto.tls.AbstractTlsSigner:boolean verifyRawSignature(byte[],org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.tls.DTLSReliableHandshake:void sendMessage(short,byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:org.bouncycastle.crypto.tls.DTLSTransport clientHandshake(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,org.bouncycastle.crypto.tls.DTLSRecordLayer)",
            "org.bouncycastle.crypto.tls.DTLSServerProtocol:org.bouncycastle.crypto.tls.DTLSTransport serverHandshake(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState,org.bouncycastle.crypto.tls.DTLSRecordLayer)"
        ]
    },
    "org.bouncycastle.crypto.tls.DTLSReliableHandshake:void notifyHelloComplete()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:org.bouncycastle.crypto.tls.DTLSTransport clientHandshake(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,org.bouncycastle.crypto.tls.DTLSRecordLayer)",
            "org.bouncycastle.crypto.tls.DTLSServerProtocol:org.bouncycastle.crypto.tls.DTLSTransport serverHandshake(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState,org.bouncycastle.crypto.tls.DTLSRecordLayer)"
        ]
    },
    "org.bouncycastle.crypto.tls.RecordStream:void notifyHelloComplete()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsClientProtocol:void handleHandshakeMessage(short,byte[])",
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void sendServerHelloMessage()"
        ]
    },
    "org.bouncycastle.crypto.tls.DTLSReliableHandshake:org.bouncycastle.crypto.tls.TlsHandshakeHash prepareToFinish()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:org.bouncycastle.crypto.tls.DTLSTransport clientHandshake(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,org.bouncycastle.crypto.tls.DTLSRecordLayer)",
            "org.bouncycastle.crypto.tls.DTLSServerProtocol:org.bouncycastle.crypto.tls.DTLSTransport serverHandshake(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState,org.bouncycastle.crypto.tls.DTLSRecordLayer)"
        ]
    },
    "org.bouncycastle.crypto.tls.RecordStream:org.bouncycastle.crypto.tls.TlsHandshakeHash prepareToFinish()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsClientProtocol:void handleHandshakeMessage(short,byte[])",
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void receiveClientKeyExchangeMessage(java.io.ByteArrayInputStream)"
        ]
    },
    "org.bouncycastle.crypto.tls.DeferredHash:void sealHashAlgorithms()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:org.bouncycastle.crypto.tls.DTLSTransport clientHandshake(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,org.bouncycastle.crypto.tls.DTLSRecordLayer)",
            "org.bouncycastle.crypto.tls.DTLSServerProtocol:org.bouncycastle.crypto.tls.DTLSTransport serverHandshake(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState,org.bouncycastle.crypto.tls.DTLSRecordLayer)",
            "org.bouncycastle.crypto.tls.TlsClientProtocol:void handleHandshakeMessage(short,byte[])",
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void handleHandshakeMessage(short,byte[])"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsProtocol:void sendFinishedMessage()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsClientProtocol:void handleHandshakeMessage(short,byte[])",
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void handleHandshakeMessage(short,byte[])"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.rsa.ISOSignatureSpi:byte[] engineSign()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpiLe:byte[] engineSign()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpiLe:boolean engineVerify(byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.crypto.DigestingMessageSigner:boolean verifySignature(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsDHEKeyExchange:void processServerKeyExchange(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsDSASigner:boolean verifyRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,byte[],org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])",
            "org.bouncycastle.crypto.tls.TlsECDHEKeyExchange:void processServerKeyExchange(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsRSASigner:boolean verifyRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,byte[],org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])",
            "org.bouncycastle.crypto.tls.TlsSRPKeyExchange:void processServerKeyExchange(java.io.InputStream)"
        ]
    },
    "org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters:void nextKey(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters:org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters nextKey()",
            "org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters:void nextTree(int)"
        ]
    },
    "org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters:void <init>(byte[][],byte[][],byte[][][],byte[][][],org.bouncycastle.pqc.crypto.gmss.Treehash[][],org.bouncycastle.pqc.crypto.gmss.Treehash[][],java.util.Vector[],java.util.Vector[],java.util.Vector[][],java.util.Vector[][],byte[][],byte[][],org.bouncycastle.pqc.crypto.gmss.GMSSParameters,org.bouncycastle.pqc.crypto.gmss.GMSSDigestProvider)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.crypto.gmss.GMSSKeyPairGenerator:org.bouncycastle.crypto.AsymmetricCipherKeyPair genKeyPair()"
        ]
    },
    "org.bouncycastle.pqc.crypto.gmss.GMSSLeaf:void <init>(org.bouncycastle.crypto.Digest,int,int,byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters:void <init>(int[],byte[][],byte[][],byte[][][],byte[][][],byte[][][],org.bouncycastle.pqc.crypto.gmss.Treehash[][],org.bouncycastle.pqc.crypto.gmss.Treehash[][],java.util.Vector[],java.util.Vector[],java.util.Vector[][],java.util.Vector[][],org.bouncycastle.pqc.crypto.gmss.GMSSLeaf[],org.bouncycastle.pqc.crypto.gmss.GMSSLeaf[],org.bouncycastle.pqc.crypto.gmss.GMSSLeaf[],int[],byte[][],org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc[],byte[][],org.bouncycastle.pqc.crypto.gmss.GMSSRootSig[],org.bouncycastle.pqc.crypto.gmss.GMSSParameters,org.bouncycastle.pqc.crypto.gmss.GMSSDigestProvider)",
            "org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters:void updateKey(int)"
        ]
    },
    "org.bouncycastle.pqc.crypto.gmss.GMSSSigner:void init(boolean,org.bouncycastle.crypto.CipherParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.crypto.DigestingMessageSigner:void init(boolean,org.bouncycastle.crypto.CipherParameters)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsProtocol:void establishMasterSecret(org.bouncycastle.crypto.tls.TlsContext,org.bouncycastle.crypto.tls.TlsKeyExchange)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:org.bouncycastle.crypto.tls.DTLSTransport clientHandshake(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,org.bouncycastle.crypto.tls.DTLSRecordLayer)",
            "org.bouncycastle.crypto.tls.DTLSServerProtocol:org.bouncycastle.crypto.tls.DTLSTransport serverHandshake(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState,org.bouncycastle.crypto.tls.DTLSRecordLayer)",
            "org.bouncycastle.crypto.tls.TlsClientProtocol:void handleHandshakeMessage(short,byte[])",
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void receiveClientKeyExchangeMessage(java.io.ByteArrayInputStream)"
        ]
    },
    "org.bouncycastle.crypto.generators.SCrypt:byte[] MFcrypt(byte[],byte[],int,int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.generators.SCrypt:byte[] generate(byte[],byte[],int,int,int,int)"
        ]
    },
    "org.bouncycastle.jcajce.io.CipherInputStream:int nextChunk()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.io.CipherInputStream:int read()",
            "org.bouncycastle.jcajce.io.CipherInputStream:int read(byte[],int,int)"
        ]
    },
    "org.bouncycastle.asn1.ASN1OutputStream:void writeEncoded(int,int,byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.DERApplicationSpecific:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DERExternal:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)"
        ]
    },
    "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeImplicitObject(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.LazyEncodedSequence:void encode(org.bouncycastle.asn1.ASN1OutputStream)"
        ]
    },
    "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeImplicitObject(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.LazyEncodedSequence:void encode(org.bouncycastle.asn1.ASN1OutputStream)"
        ]
    },
    "org.bouncycastle.crypto.tls.DTLSServerProtocol:byte[] generateCertificateRequest(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState,org.bouncycastle.crypto.tls.CertificateRequest)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSServerProtocol:org.bouncycastle.crypto.tls.DTLSTransport serverHandshake(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState,org.bouncycastle.crypto.tls.DTLSRecordLayer)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsServerProtocol:void sendCertificateRequestMessage(org.bouncycastle.crypto.tls.CertificateRequest)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void handleHandshakeMessage(short,byte[])"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsECCUtils:void writeECFieldElement(org.bouncycastle.math.ec.ECFieldElement,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsECCUtils:void writeExplicitECParameters(short[],org.bouncycastle.crypto.params.ECDomainParameters,java.io.OutputStream)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsECCUtils:void writeECFieldElement(int,java.math.BigInteger,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.tls.TlsECCUtils:void writeECParameter(java.math.BigInteger,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsECCUtils:void writeECExponent(int,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsECCUtils:void writeExplicitECParameters(short[],org.bouncycastle.crypto.params.ECDomainParameters,java.io.OutputStream)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsECCUtils:void writeECPoint(short[],org.bouncycastle.math.ec.ECPoint,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsECCUtils:org.bouncycastle.crypto.params.ECPrivateKeyParameters generateEphemeralClientKeyExchange(java.security.SecureRandom,short[],org.bouncycastle.crypto.params.ECDomainParameters,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsECDHEKeyExchange:byte[] generateServerKeyExchange()"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsSRTPUtils:byte[] createUseSRTPExtension(org.bouncycastle.crypto.tls.UseSRTPData)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsSRTPUtils:void addUseSRTPExtension(java.util.Hashtable,org.bouncycastle.crypto.tls.UseSRTPData)"
        ]
    },
    "org.bouncycastle.crypto.tls.DigitallySigned:void encode(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:byte[] generateCertificateVerify(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,org.bouncycastle.crypto.tls.DigitallySigned)",
            "org.bouncycastle.crypto.tls.TlsClientProtocol:void sendCertificateVerifyMessage(org.bouncycastle.crypto.tls.DigitallySigned)",
            "org.bouncycastle.crypto.tls.TlsDHEKeyExchange:byte[] generateServerKeyExchange()",
            "org.bouncycastle.crypto.tls.TlsECDHEKeyExchange:byte[] generateServerKeyExchange()"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsDHUtils:void writeDHParameter(java.math.BigInteger,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.ServerDHParams:void encode(java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsDHUtils:org.bouncycastle.crypto.params.DHPrivateKeyParameters generateEphemeralClientKeyExchange(java.security.SecureRandom,org.bouncycastle.crypto.params.DHParameters,java.io.OutputStream)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsPSKKeyExchange:byte[] generatePremasterSecret()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsProtocol:void establishMasterSecret(org.bouncycastle.crypto.tls.TlsContext,org.bouncycastle.crypto.tls.TlsKeyExchange)"
        ]
    },
    "org.bouncycastle.jcajce.io.CipherOutputStream:void write(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void <init>(java.io.OutputStream,int)",
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void bsFinishedWithStream()",
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void bsW(int,int)",
            "org.bouncycastle.asn1.ASN1OutputStream:void write(int)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeNull()",
            "org.bouncycastle.asn1.BERGenerator:void writeHdr(int)",
            "org.bouncycastle.asn1.BERGenerator:void writeBERBody(java.io.InputStream)",
            "org.bouncycastle.asn1.BERGenerator:void writeBEREnd()",
            "org.bouncycastle.asn1.DERGenerator:void writeLength(java.io.OutputStream,int)",
            "org.bouncycastle.asn1.DERGenerator:void writeDEREncoded(java.io.OutputStream,int,byte[])",
            "org.bouncycastle.crypto.io.CipherOutputStream:void write(int)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint8(short,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint8(int,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint16(int,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint24(int,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint32(long,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint48(long,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint64(long,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeVersion(org.bouncycastle.crypto.tls.ProtocolVersion,java.io.OutputStream)",
            "org.bouncycastle.util.Strings:void toUTF8ByteArray(char[],java.io.OutputStream)",
            "org.bouncycastle.util.encoders.Base64Encoder:int encode(byte[],int,int,java.io.OutputStream)",
            "org.bouncycastle.util.encoders.Base64Encoder:int decode(byte[],int,int,java.io.OutputStream)",
            "org.bouncycastle.util.encoders.Base64Encoder:int decode(java.lang.String,java.io.OutputStream)",
            "org.bouncycastle.util.encoders.Base64Encoder:int decodeLastBlock(java.io.OutputStream,char,char,char,char)",
            "org.bouncycastle.util.encoders.HexEncoder:int encode(byte[],int,int,java.io.OutputStream)",
            "org.bouncycastle.util.encoders.HexEncoder:int decode(byte[],int,int,java.io.OutputStream)",
            "org.bouncycastle.util.encoders.HexEncoder:int decode(java.lang.String,java.io.OutputStream)",
            "org.bouncycastle.util.io.TeeInputStream:int read()",
            "org.bouncycastle.util.io.TeeOutputStream:void write(int)"
        ]
    },
    "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void finish()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void close()"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsProtocol:void flush()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsOutputStream:void flush()"
        ]
    },
    "org.bouncycastle.asn1.BEROctetStringParser:org.bouncycastle.asn1.ASN1Primitive getLoadedObject()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1InputStream:org.bouncycastle.asn1.ASN1Primitive readObject()",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.BEROctetStringParser:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"
        ]
    },
    "org.bouncycastle.apache.bzip2.CBZip2InputStream:void initialize()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2InputStream:void <init>(java.io.InputStream)"
        ]
    },
    "org.bouncycastle.apache.bzip2.CBZip2InputStream:void complete()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2InputStream:void initBlock()"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsProtocol:void handleClose(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsProtocol:void processAlert()",
            "org.bouncycastle.crypto.tls.TlsProtocol:void close()"
        ]
    },
    "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void writeRun()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void write(int)",
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void writeRun()",
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void finish()"
        ]
    },
    "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void initialize()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void <init>(java.io.OutputStream,int)"
        ]
    },
    "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void moveToFrontCodeAndSend()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void endBlock()"
        ]
    },
    "org.bouncycastle.asn1.DERBitString:void encode(org.bouncycastle.asn1.ASN1OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeImplicitObject(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.LazyEncodedSequence:void encode(org.bouncycastle.asn1.ASN1OutputStream)"
        ]
    },
    "org.bouncycastle.asn1.DERBoolean:void encode(org.bouncycastle.asn1.ASN1OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeImplicitObject(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.LazyEncodedSequence:void encode(org.bouncycastle.asn1.ASN1OutputStream)"
        ]
    },
    "org.bouncycastle.asn1.DEREnumerated:void encode(org.bouncycastle.asn1.ASN1OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeImplicitObject(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.LazyEncodedSequence:void encode(org.bouncycastle.asn1.ASN1OutputStream)"
        ]
    },
    "org.bouncycastle.asn1.DERGeneralString:void encode(org.bouncycastle.asn1.ASN1OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeImplicitObject(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.LazyEncodedSequence:void encode(org.bouncycastle.asn1.ASN1OutputStream)"
        ]
    },
    "org.bouncycastle.asn1.DERGeneralizedTime:void encode(org.bouncycastle.asn1.ASN1OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeImplicitObject(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.LazyEncodedSequence:void encode(org.bouncycastle.asn1.ASN1OutputStream)"
        ]
    },
    "org.bouncycastle.asn1.DERIA5String:void encode(org.bouncycastle.asn1.ASN1OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeImplicitObject(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.LazyEncodedSequence:void encode(org.bouncycastle.asn1.ASN1OutputStream)"
        ]
    },
    "org.bouncycastle.asn1.DERInteger:void encode(org.bouncycastle.asn1.ASN1OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeImplicitObject(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.LazyEncodedSequence:void encode(org.bouncycastle.asn1.ASN1OutputStream)"
        ]
    },
    "org.bouncycastle.asn1.DERNull:void encode(org.bouncycastle.asn1.ASN1OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeImplicitObject(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.LazyEncodedSequence:void encode(org.bouncycastle.asn1.ASN1OutputStream)"
        ]
    },
    "org.bouncycastle.asn1.DERNumericString:void encode(org.bouncycastle.asn1.ASN1OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeImplicitObject(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.LazyEncodedSequence:void encode(org.bouncycastle.asn1.ASN1OutputStream)"
        ]
    },
    "org.bouncycastle.asn1.DEROctetString:void encode(org.bouncycastle.asn1.ASN1OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeImplicitObject(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.LazyEncodedSequence:void encode(org.bouncycastle.asn1.ASN1OutputStream)"
        ]
    },
    "org.bouncycastle.asn1.DEROctetString:void encode(org.bouncycastle.asn1.DEROutputStream,byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.BEROctetStringGenerator$BufferedBEROctetStream:void write(int)",
            "org.bouncycastle.asn1.BEROctetStringGenerator$BufferedBEROctetStream:void write(byte[],int,int)",
            "org.bouncycastle.asn1.BEROctetStringGenerator$BufferedBEROctetStream:void close()"
        ]
    },
    "org.bouncycastle.asn1.DERPrintableString:void encode(org.bouncycastle.asn1.ASN1OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeImplicitObject(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.LazyEncodedSequence:void encode(org.bouncycastle.asn1.ASN1OutputStream)"
        ]
    },
    "org.bouncycastle.asn1.DERT61String:void encode(org.bouncycastle.asn1.ASN1OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeImplicitObject(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.LazyEncodedSequence:void encode(org.bouncycastle.asn1.ASN1OutputStream)"
        ]
    },
    "org.bouncycastle.asn1.DERT61UTF8String:void encode(org.bouncycastle.asn1.ASN1OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeImplicitObject(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.LazyEncodedSequence:void encode(org.bouncycastle.asn1.ASN1OutputStream)"
        ]
    },
    "org.bouncycastle.asn1.DERUTF8String:void encode(org.bouncycastle.asn1.ASN1OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeImplicitObject(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.LazyEncodedSequence:void encode(org.bouncycastle.asn1.ASN1OutputStream)"
        ]
    },
    "org.bouncycastle.asn1.DERUniversalString:void encode(org.bouncycastle.asn1.ASN1OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeImplicitObject(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.LazyEncodedSequence:void encode(org.bouncycastle.asn1.ASN1OutputStream)"
        ]
    },
    "org.bouncycastle.asn1.DERVisibleString:void encode(org.bouncycastle.asn1.ASN1OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeImplicitObject(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.LazyEncodedSequence:void encode(org.bouncycastle.asn1.ASN1OutputStream)"
        ]
    },
    "org.bouncycastle.asn1.LazyEncodedSequence:void encode(org.bouncycastle.asn1.ASN1OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeImplicitObject(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.LazyEncodedSequence:void encode(org.bouncycastle.asn1.ASN1OutputStream)"
        ]
    },
    "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:byte[] getEncoded()",
            "org.bouncycastle.asn1.ASN1Set:byte[] getEncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.BERSequence:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.BERSet:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.BERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DERBitString:java.lang.String getString()",
            "org.bouncycastle.asn1.DERSequence:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DERSet:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DERUniversalString:java.lang.String getString()",
            "org.bouncycastle.asn1.DLSequence:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLSet:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl:void writeObject(java.io.ObjectOutputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:javax.security.auth.x500.X500Principal getIssuerX500Principal()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:javax.security.auth.x500.X500Principal getSubjectX500Principal()",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:java.util.Set getQualifierSet(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.jce.provider.X509CertificateObject:javax.security.auth.x500.X500Principal getIssuerX500Principal()",
            "org.bouncycastle.jce.provider.X509CertificateObject:javax.security.auth.x500.X500Principal getSubjectX500Principal()",
            "org.bouncycastle.ocsp.BasicOCSPResp:java.util.List getCertList(java.lang.String)",
            "org.bouncycastle.ocsp.OCSPReq:java.util.List getCertList(java.lang.String)",
            "org.bouncycastle.ocsp.OCSPReq:boolean verify(java.security.PublicKey,java.lang.String)",
            "org.bouncycastle.ocsp.OCSPReq:byte[] getEncoded()",
            "org.bouncycastle.ocsp.OCSPReqGenerator:org.bouncycastle.ocsp.OCSPReq generateRequest(org.bouncycastle.asn1.DERObjectIdentifier,java.security.PrivateKey,java.security.cert.X509Certificate[],java.lang.String,java.security.SecureRandom)"
        ]
    },
    "org.bouncycastle.asn1.ASN1OutputStream:void writeImplicitObject(org.bouncycastle.asn1.ASN1Primitive)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)"
        ]
    },
    "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:byte[] getEncoded()",
            "org.bouncycastle.asn1.ASN1Object:byte[] getEncoded(java.lang.String)",
            "org.bouncycastle.asn1.ASN1Set:byte[] getEncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.BERSequence:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.BERSet:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.BERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DERBitString:java.lang.String getString()",
            "org.bouncycastle.asn1.DERSequence:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DERSet:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DERUniversalString:java.lang.String getString()",
            "org.bouncycastle.asn1.DLSequence:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLSet:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl:void writeObject(java.io.ObjectOutputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:javax.security.auth.x500.X500Principal getIssuerX500Principal()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:javax.security.auth.x500.X500Principal getSubjectX500Principal()",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void doStore(java.io.OutputStream,char[],boolean)",
            "org.bouncycastle.jce.PKCS12Util:byte[] convertToDefiniteLength(byte[])",
            "org.bouncycastle.jce.PKCS12Util:byte[] convertToDefiniteLength(byte[],char[],java.lang.String)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:java.util.Set getQualifierSet(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.jce.provider.X509CertificateObject:javax.security.auth.x500.X500Principal getIssuerX500Principal()",
            "org.bouncycastle.jce.provider.X509CertificateObject:javax.security.auth.x500.X500Principal getSubjectX500Principal()",
            "org.bouncycastle.ocsp.BasicOCSPResp:java.util.List getCertList(java.lang.String)",
            "org.bouncycastle.ocsp.OCSPReq:java.util.List getCertList(java.lang.String)",
            "org.bouncycastle.ocsp.OCSPReq:boolean verify(java.security.PublicKey,java.lang.String)",
            "org.bouncycastle.ocsp.OCSPReq:byte[] getEncoded()",
            "org.bouncycastle.ocsp.OCSPReqGenerator:org.bouncycastle.ocsp.OCSPReq generateRequest(org.bouncycastle.asn1.DERObjectIdentifier,java.security.PrivateKey,java.security.cert.X509Certificate[],java.lang.String,java.security.SecureRandom)"
        ]
    },
    "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:byte[] getEncoded()",
            "org.bouncycastle.asn1.ASN1Object:byte[] getEncoded(java.lang.String)",
            "org.bouncycastle.asn1.ASN1Set:byte[] getEncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.BERSequence:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.BERSet:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.BERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DERBitString:java.lang.String getString()",
            "org.bouncycastle.asn1.DERSequence:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DERSet:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DERUniversalString:java.lang.String getString()",
            "org.bouncycastle.asn1.DLSequence:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLSet:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl:void writeObject(java.io.ObjectOutputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:javax.security.auth.x500.X500Principal getIssuerX500Principal()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:javax.security.auth.x500.X500Principal getSubjectX500Principal()",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:java.util.Set getQualifierSet(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.jce.provider.X509CertificateObject:javax.security.auth.x500.X500Principal getIssuerX500Principal()",
            "org.bouncycastle.jce.provider.X509CertificateObject:javax.security.auth.x500.X500Principal getSubjectX500Principal()",
            "org.bouncycastle.ocsp.BasicOCSPResp:java.util.List getCertList(java.lang.String)",
            "org.bouncycastle.ocsp.OCSPReq:java.util.List getCertList(java.lang.String)",
            "org.bouncycastle.ocsp.OCSPReq:boolean verify(java.security.PublicKey,java.lang.String)",
            "org.bouncycastle.ocsp.OCSPReq:byte[] getEncoded()",
            "org.bouncycastle.ocsp.OCSPReqGenerator:org.bouncycastle.ocsp.OCSPReq generateRequest(org.bouncycastle.asn1.DERObjectIdentifier,java.security.PrivateKey,java.security.cert.X509Certificate[],java.lang.String,java.security.SecureRandom)"
        ]
    },
    "org.bouncycastle.asn1.BEROctetStringGenerator:void <init>(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.BEROctetStringGenerator:void <init>(java.io.OutputStream,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.BERSequenceGenerator:void <init>(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.BERSequenceGenerator:void <init>(java.io.OutputStream,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.DERSequenceGenerator:void close()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.tls.DTLSServerProtocol:byte[] generateCertificateStatus(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState,org.bouncycastle.crypto.tls.CertificateStatus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSServerProtocol:org.bouncycastle.crypto.tls.DTLSTransport serverHandshake(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState,org.bouncycastle.crypto.tls.DTLSRecordLayer)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsServerProtocol:void sendCertificateStatusMessage(org.bouncycastle.crypto.tls.CertificateStatus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void handleHandshakeMessage(short,byte[])"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsExtensionsUtils:byte[] createStatusRequestExtension(org.bouncycastle.crypto.tls.CertificateStatusRequest)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsExtensionsUtils:void addStatusRequestExtension(java.util.Hashtable,org.bouncycastle.crypto.tls.CertificateStatusRequest)"
        ]
    },
    "org.bouncycastle.crypto.tls.DTLSReliableHandshake:void writeMessage(org.bouncycastle.crypto.tls.DTLSReliableHandshake$Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSReliableHandshake:void sendMessage(short,byte[])",
            "org.bouncycastle.crypto.tls.DTLSReliableHandshake:void resendOutboundFlight()"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsExtensionsUtils:byte[] createHeartbeatExtension(org.bouncycastle.crypto.tls.HeartbeatExtension)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsExtensionsUtils:void addHeartbeatExtension(java.util.Hashtable,org.bouncycastle.crypto.tls.HeartbeatExtension)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsProtocol$HandshakeMessage:void <init>(org.bouncycastle.crypto.tls.TlsProtocol,short)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsClientProtocol:void sendCertificateVerifyMessage(org.bouncycastle.crypto.tls.DigitallySigned)",
            "org.bouncycastle.crypto.tls.TlsClientProtocol:void sendClientHelloMessage()",
            "org.bouncycastle.crypto.tls.TlsClientProtocol:void sendClientKeyExchangeMessage()",
            "org.bouncycastle.crypto.tls.TlsProtocol:void sendCertificateMessage(org.bouncycastle.crypto.tls.Certificate)",
            "org.bouncycastle.crypto.tls.TlsProtocol:void sendSupplementalDataMessage(java.util.Vector)",
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void sendCertificateRequestMessage(org.bouncycastle.crypto.tls.CertificateRequest)",
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void sendCertificateStatusMessage(org.bouncycastle.crypto.tls.CertificateStatus)",
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void sendNewSessionTicketMessage(org.bouncycastle.crypto.tls.NewSessionTicket)",
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void sendServerHelloMessage()"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsServerProtocol:void sendServerKeyExchangeMessage(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void handleHandshakeMessage(short,byte[])"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsExtensionsUtils:byte[] createServerNameExtension(org.bouncycastle.crypto.tls.ServerNameList)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsExtensionsUtils:void addServerNameExtension(java.util.Hashtable,org.bouncycastle.crypto.tls.ServerNameList)"
        ]
    },
    "org.bouncycastle.crypto.tls.SessionParameters$Builder:org.bouncycastle.crypto.tls.SessionParameters$Builder setServerExtensions(java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsProtocol:void completeHandshake()"
        ]
    },
    "org.bouncycastle.crypto.tls.DTLSProtocol:byte[] generateSupplementalData(java.util.Vector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:org.bouncycastle.crypto.tls.DTLSTransport clientHandshake(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,org.bouncycastle.crypto.tls.DTLSRecordLayer)",
            "org.bouncycastle.crypto.tls.DTLSServerProtocol:org.bouncycastle.crypto.tls.DTLSTransport serverHandshake(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState,org.bouncycastle.crypto.tls.DTLSRecordLayer)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsProtocol:void sendSupplementalDataMessage(java.util.Vector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsClientProtocol:void handleHandshakeMessage(short,byte[])",
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void handleHandshakeMessage(short,byte[])"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsUtils:byte[] createSignatureAlgorithmsExtension(java.util.Vector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsUtils:void addSignatureAlgorithmsExtension(java.util.Hashtable,java.util.Vector)"
        ]
    },
    "org.bouncycastle.crypto.tls.DTLSProtocol:byte[] generateCertificate(org.bouncycastle.crypto.tls.Certificate)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:org.bouncycastle.crypto.tls.DTLSTransport clientHandshake(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,org.bouncycastle.crypto.tls.DTLSRecordLayer)",
            "org.bouncycastle.crypto.tls.DTLSServerProtocol:org.bouncycastle.crypto.tls.DTLSTransport serverHandshake(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState,org.bouncycastle.crypto.tls.DTLSRecordLayer)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsProtocol:void sendCertificateMessage(org.bouncycastle.crypto.tls.Certificate)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsClientProtocol:void handleHandshakeMessage(short,byte[])",
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void handleHandshakeMessage(short,byte[])"
        ]
    },
    "org.bouncycastle.crypto.tls.DTLSServerProtocol:byte[] generateNewSessionTicket(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState,org.bouncycastle.crypto.tls.NewSessionTicket)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSServerProtocol:org.bouncycastle.crypto.tls.DTLSTransport serverHandshake(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState,org.bouncycastle.crypto.tls.DTLSRecordLayer)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsServerProtocol:void sendNewSessionTicketMessage(org.bouncycastle.crypto.tls.NewSessionTicket)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void handleHandshakeMessage(short,byte[])"
        ]
    },
    "org.bouncycastle.crypto.PBEParametersGenerator:byte[] PKCS5PasswordToUTF8Bytes(char[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey:byte[] getEncoded()",
            "org.bouncycastle.jcajce.provider.symmetric.util.PBE$Util:byte[] convertPassword(int,javax.crypto.spec.PBEKeySpec)"
        ]
    },
    "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:java.math.BigInteger calculateS(char[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.agreement.jpake.JPAKEParticipant:org.bouncycastle.crypto.agreement.jpake.JPAKERound2Payload createRound2PayloadToSend()",
            "org.bouncycastle.crypto.agreement.jpake.JPAKEParticipant:java.math.BigInteger calculateKeyingMaterial()"
        ]
    },
    "org.bouncycastle.util.Strings:byte[] toUTF8ByteArray(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.DERT61UTF8String:void <init>(java.lang.String)",
            "org.bouncycastle.asn1.DERUTF8String:void <init>(java.lang.String)",
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:void updateDigest(org.bouncycastle.crypto.Digest,java.lang.String)",
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:void updateDigestIncludingSize(org.bouncycastle.crypto.Digest,java.lang.String)",
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:void updateMac(org.bouncycastle.crypto.Mac,java.lang.String)",
            "org.bouncycastle.crypto.tls.ServerName:void encode(java.io.OutputStream)"
        ]
    },
    "org.bouncycastle.util.encoders.Base64:java.lang.String toBase64String(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.util.encoders.Base64:java.lang.String toBase64String(byte[])"
        ]
    },
    "org.bouncycastle.util.encoders.Base64:byte[] encode(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.util.io.pem.PemWriter:void writeEncoded(byte[])"
        ]
    },
    "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpBinaryDataAsString(java.lang.String,byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:java.lang.String toString(boolean,java.util.Hashtable)",
            "org.bouncycastle.i18n.LocalizedMessage$FilteredArguments:java.lang.Object filter(int,java.lang.Object)",
            "org.bouncycastle.i18n.filter.TrustedInput:java.lang.String toString()",
            "org.bouncycastle.i18n.filter.UntrustedInput:java.lang.String getString()",
            "org.bouncycastle.i18n.filter.UntrustedInput:java.lang.String toString()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.CertPath engineGenerateCertPath(java.util.List)"
        ]
    },
    "org.bouncycastle.jce.provider.X509CRLObject:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:java.lang.String toString(boolean,java.util.Hashtable)",
            "org.bouncycastle.i18n.LocalizedMessage$FilteredArguments:java.lang.Object filter(int,java.lang.Object)",
            "org.bouncycastle.i18n.filter.TrustedInput:java.lang.String toString()",
            "org.bouncycastle.i18n.filter.UntrustedInput:java.lang.String getString()",
            "org.bouncycastle.i18n.filter.UntrustedInput:java.lang.String toString()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.CertPath engineGenerateCertPath(java.util.List)"
        ]
    },
    "org.bouncycastle.util.encoders.Hex:java.lang.String toHexString(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.util.encoders.Hex:java.lang.String toHexString(byte[])"
        ]
    },
    "org.bouncycastle.util.encoders.Hex:byte[] encode(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1OctetString:java.lang.String toString()",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String outputApplicationSpecific(java.lang.String,java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.String)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.examples.DESExample:void <init>(java.lang.String,java.lang.String,java.lang.String,boolean)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.pqc.crypto.gmss.GMSSLeaf:java.lang.String toString()",
            "org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc:java.lang.String toString()",
            "org.bouncycastle.pqc.crypto.gmss.GMSSRootSig:java.lang.String toString()",
            "org.bouncycastle.pqc.crypto.gmss.Treehash:java.lang.String toString()",
            "org.bouncycastle.pqc.jcajce.provider.gmss.BCGMSSPublicKey:java.lang.String toString()"
        ]
    },
    "org.bouncycastle.util.io.pem.PemReader:org.bouncycastle.util.io.pem.PemObject loadObject(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.util.io.pem.PemReader:org.bouncycastle.util.io.pem.PemObject readPemObject()"
        ]
    },
    "org.bouncycastle.asn1.sec.SECNamedCurves$1:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.sec.SECNamedCurves$10:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.sec.SECNamedCurves$11:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.sec.SECNamedCurves$12:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.sec.SECNamedCurves$13:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.sec.SECNamedCurves$14:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.sec.SECNamedCurves$15:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.sec.SECNamedCurves$16:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.sec.SECNamedCurves$17:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.sec.SECNamedCurves$18:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.sec.SECNamedCurves$19:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.sec.SECNamedCurves$2:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.sec.SECNamedCurves$20:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.sec.SECNamedCurves$21:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.sec.SECNamedCurves$22:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.sec.SECNamedCurves$23:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.sec.SECNamedCurves$24:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.sec.SECNamedCurves$25:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.sec.SECNamedCurves$26:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.sec.SECNamedCurves$27:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.sec.SECNamedCurves$28:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.sec.SECNamedCurves$29:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.sec.SECNamedCurves$3:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.sec.SECNamedCurves$30:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.sec.SECNamedCurves$31:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.sec.SECNamedCurves$32:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.sec.SECNamedCurves$33:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.sec.SECNamedCurves$4:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.sec.SECNamedCurves$5:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.sec.SECNamedCurves$6:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.sec.SECNamedCurves$7:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.sec.SECNamedCurves$8:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.sec.SECNamedCurves$9:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.sec.SECNamedCurves:java.math.BigInteger fromHex(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.sec.SECNamedCurves:java.math.BigInteger access$000(java.lang.String)"
        ]
    },
    "org.bouncycastle.asn1.teletrust.TeleTrusTNamedCurves$1:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.teletrust.TeleTrusTNamedCurves$10:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.teletrust.TeleTrusTNamedCurves$11:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.teletrust.TeleTrusTNamedCurves$12:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.teletrust.TeleTrusTNamedCurves$13:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.teletrust.TeleTrusTNamedCurves$14:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.teletrust.TeleTrusTNamedCurves$2:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.teletrust.TeleTrusTNamedCurves$3:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.teletrust.TeleTrusTNamedCurves$4:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.teletrust.TeleTrusTNamedCurves$5:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.teletrust.TeleTrusTNamedCurves$6:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.teletrust.TeleTrusTNamedCurves$7:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.teletrust.TeleTrusTNamedCurves$8:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.teletrust.TeleTrusTNamedCurves$9:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.x500.style.IETFUtils:org.bouncycastle.asn1.ASN1Primitive decodeObject(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String canonicalize(java.lang.String)"
        ]
    },
    "org.bouncycastle.asn1.x509.X509Name:org.bouncycastle.asn1.ASN1Primitive decodeObject(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.X509Name:java.lang.String canonicalize(java.lang.String)"
        ]
    },
    "org.bouncycastle.asn1.x9.X962NamedCurves$1:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.x9.X962NamedCurves$10:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.x9.X962NamedCurves$11:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.x9.X962NamedCurves$12:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.x9.X962NamedCurves$13:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.x9.X962NamedCurves$14:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.x9.X962NamedCurves$15:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.x9.X962NamedCurves$16:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.x9.X962NamedCurves$17:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.x9.X962NamedCurves$18:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.x9.X962NamedCurves$19:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.x9.X962NamedCurves$2:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.x9.X962NamedCurves$20:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.x9.X962NamedCurves$21:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.x9.X962NamedCurves$22:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.x9.X962NamedCurves$23:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.x9.X962NamedCurves$3:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.x9.X962NamedCurves$4:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.x9.X962NamedCurves$5:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.x9.X962NamedCurves$6:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.x9.X962NamedCurves$7:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.x9.X962NamedCurves$8:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.asn1.x9.X962NamedCurves$9:org.bouncycastle.asn1.x9.X9ECParameters createParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()"
        ]
    },
    "org.bouncycastle.crypto.agreement.DHStandardGroups:org.bouncycastle.crypto.params.DHParameters fromPG(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.agreement.DHStandardGroups:void <clinit>()"
        ]
    },
    "org.bouncycastle.crypto.agreement.DHStandardGroups:org.bouncycastle.crypto.params.DHParameters fromPGQ(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.agreement.DHStandardGroups:void <clinit>()"
        ]
    },
    "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.prng.SP800SecureRandomBuilder$CTRDRBGProvider:org.bouncycastle.crypto.prng.drbg.SP80090DRBG get(org.bouncycastle.crypto.prng.EntropySource)",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:byte[] Block_Cipher_df(byte[],int)",
            "org.bouncycastle.crypto.prng.drbg.CTRSP800DRBG:void <clinit>()"
        ]
    },
    "org.bouncycastle.apache.bzip2.CBZip2InputStream:void <init>(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.apache.bzip2.CBZip2InputStream:void setupRandPartA()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2InputStream:void setupBlock()",
            "org.bouncycastle.apache.bzip2.CBZip2InputStream:void setupRandPartB()",
            "org.bouncycastle.apache.bzip2.CBZip2InputStream:void setupRandPartC()"
        ]
    },
    "org.bouncycastle.apache.bzip2.CBZip2InputStream:void setupNoRandPartA()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2InputStream:void setupBlock()",
            "org.bouncycastle.apache.bzip2.CBZip2InputStream:void setupNoRandPartB()",
            "org.bouncycastle.apache.bzip2.CBZip2InputStream:void setupNoRandPartC()"
        ]
    },
    "org.bouncycastle.apache.bzip2.CBZip2InputStream:int bsGetInt32()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2InputStream:void initBlock()",
            "org.bouncycastle.apache.bzip2.CBZip2InputStream:void complete()"
        ]
    },
    "org.bouncycastle.asn1.ASN1InputStream:org.bouncycastle.asn1.ASN1EncodableVector buildEncodableVector()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1InputStream:org.bouncycastle.asn1.ASN1EncodableVector buildDEREncodableVector(org.bouncycastle.asn1.DefiniteLengthInputStream)"
        ]
    },
    "org.bouncycastle.asn1.ASN1Primitive:org.bouncycastle.asn1.ASN1Primitive fromByteArray(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Null:org.bouncycastle.asn1.ASN1Null getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1TaggedObject getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBMPString:org.bouncycastle.asn1.DERBMPString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEREnumerated:org.bouncycastle.asn1.ASN1Enumerated getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERGeneralString:org.bouncycastle.asn1.DERGeneralString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERGeneralizedTime:org.bouncycastle.asn1.ASN1GeneralizedTime getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERIA5String:org.bouncycastle.asn1.DERIA5String getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERInteger:org.bouncycastle.asn1.ASN1Integer getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERNumericString:org.bouncycastle.asn1.DERNumericString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERPrintableString:org.bouncycastle.asn1.DERPrintableString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERT61String:org.bouncycastle.asn1.DERT61String getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERT61UTF8String:org.bouncycastle.asn1.DERT61UTF8String getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERUTCTime:org.bouncycastle.asn1.ASN1UTCTime getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERUTF8String:org.bouncycastle.asn1.DERUTF8String getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERUniversalString:org.bouncycastle.asn1.DERUniversalString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERVisibleString:org.bouncycastle.asn1.DERVisibleString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.dvcs.DVCSResponse:org.bouncycastle.asn1.dvcs.DVCSResponse getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Encodable parsePrivateKey()",
            "org.bouncycastle.asn1.x500.style.IETFUtils:org.bouncycastle.asn1.ASN1Encodable valueFromHexString(java.lang.String,int)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:org.bouncycastle.asn1.ASN1Primitive decodeObject(java.lang.String)",
            "org.bouncycastle.asn1.x509.Extension:org.bouncycastle.asn1.ASN1Primitive convertValueToObject(org.bouncycastle.asn1.x509.Extension)",
            "org.bouncycastle.asn1.x509.GeneralName:org.bouncycastle.asn1.x509.GeneralName getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.X509Extension:org.bouncycastle.asn1.ASN1Primitive convertValueToObject(org.bouncycastle.asn1.x509.X509Extension)",
            "org.bouncycastle.asn1.x509.X509Name:org.bouncycastle.asn1.ASN1Primitive decodeObject(java.lang.String)",
            "org.bouncycastle.crypto.signers.DSADigestSigner:java.math.BigInteger[] derDecode(byte[])",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(byte[])",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(byte[])",
            "org.bouncycastle.jcajce.JcaJceUtils:org.bouncycastle.asn1.ASN1Encodable extractParameters(java.security.AlgorithmParameters)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.AlgorithmParametersSpi:void engineInit(byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner:java.math.BigInteger[] derDecode(byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey:org.bouncycastle.asn1.DERBitString getPublicKeyDetails(org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey:void readObject(java.io.ObjectInputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey:void populateFromPubKeyInfo(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey:void readObject(java.io.ObjectInputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpi:boolean engineVerify(byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpiLe:boolean engineVerify(byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey:org.bouncycastle.asn1.DERBitString getPublicKeyDetails(org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey:void readObject(java.io.ObjectInputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey:void populateFromPubKeyInfo(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey:void readObject(java.io.ObjectInputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$StdDSAEncoder:java.math.BigInteger[] decode(byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:org.bouncycastle.asn1.DERBitString getPublicKeyDetails(org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void readObject(java.io.ObjectInputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey:void populateFromPubKeyInfo(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey:void readObject(java.io.ObjectInputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.elgamal.AlgorithmParametersSpi:void engineInit(byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.AlgorithmParametersSpi:void engineInit(byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.ies.AlgorithmParametersSpi:void engineInit(byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:void <init>(org.bouncycastle.asn1.x509.Certificate)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:org.bouncycastle.asn1.x509.SubjectKeyIdentifier createSubjectKeyId(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jcajce.provider.symmetric.PBEPBKDF2$AlgParams:void engineInit(byte[])",
            "org.bouncycastle.jcajce.provider.symmetric.PBEPKCS12$AlgParams:void engineInit(byte[])",
            "org.bouncycastle.jcajce.provider.symmetric.RC2$AlgParams:void engineInit(byte[],java.lang.String)",
            "org.bouncycastle.jcajce.provider.symmetric.util.IvAlgorithmParameters:void engineInit(byte[])",
            "org.bouncycastle.jcajce.provider.symmetric.util.IvAlgorithmParameters:void engineInit(byte[],java.lang.String)",
            "org.bouncycastle.jce.ECKeyUtil:java.security.PublicKey publicToExplicitParameters(java.security.PublicKey,java.security.Provider)",
            "org.bouncycastle.jce.ECKeyUtil:java.security.PrivateKey privateToExplicitParameters(java.security.PrivateKey,java.security.Provider)",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void <init>(java.lang.String,org.bouncycastle.asn1.x509.X509Name,java.security.PublicKey,org.bouncycastle.asn1.ASN1Set,java.security.PrivateKey,java.lang.String)",
            "org.bouncycastle.jce.PrincipalUtil:org.bouncycastle.jce.X509Principal getIssuerX509Principal(java.security.cert.X509Certificate)",
            "org.bouncycastle.jce.PrincipalUtil:org.bouncycastle.jce.X509Principal getSubjectX509Principal(java.security.cert.X509Certificate)",
            "org.bouncycastle.jce.PrincipalUtil:org.bouncycastle.jce.X509Principal getIssuerX509Principal(java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:java.util.Date getValidCertDateFromValidityModel(org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.CertPath,int)",
            "org.bouncycastle.jce.provider.JCEECPrivateKey:org.bouncycastle.asn1.DERBitString getPublicKeyDetails(org.bouncycastle.jce.provider.JCEECPublicKey)",
            "org.bouncycastle.jce.provider.JCEECPrivateKey:void readObject(java.io.ObjectInputStream)",
            "org.bouncycastle.jce.provider.JCEECPublicKey:void populateFromPubKeyInfo(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jce.provider.JCEECPublicKey:void readObject(java.io.ObjectInputStream)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CertificateObject:void <init>(org.bouncycastle.asn1.x509.Certificate)",
            "org.bouncycastle.ocsp.BasicOCSPRespGenerator:org.bouncycastle.ocsp.BasicOCSPResp generateResponse(java.lang.String,java.security.PrivateKey,java.security.cert.X509Certificate[],java.util.Date,java.lang.String,java.security.SecureRandom)",
            "org.bouncycastle.ocsp.OCSPReqGenerator:org.bouncycastle.ocsp.OCSPReq generateRequest(org.bouncycastle.asn1.DERObjectIdentifier,java.security.PrivateKey,java.security.cert.X509Certificate[],java.lang.String,java.security.SecureRandom)",
            "org.bouncycastle.ocsp.OCSPResp:java.lang.Object getResponseObject()",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PublicKey generatePublic(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PublicKey generatePublic(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyFactorySpi:java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.x509.PKIXCertPathReviewer:java.util.Collection getTrustAnchors(java.security.cert.X509Certificate,java.util.Set)",
            "org.bouncycastle.x509.X509AttributeCertStoreSelector:boolean match(java.lang.Object)",
            "org.bouncycastle.x509.X509AttributeCertStoreSelector:void addTargetName(byte[])",
            "org.bouncycastle.x509.X509AttributeCertStoreSelector:void addTargetGroup(byte[])",
            "org.bouncycastle.x509.X509AttributeCertStoreSelector:java.util.Set extractGeneralNames(java.util.Collection)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:org.bouncycastle.asn1.ASN1Primitive fromExtensionValue(byte[])"
        ]
    },
    "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.ASN1Primitive getObject()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.ASN1Primitive getObject(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.eac.CVCertificateRequest:void <init>(org.bouncycastle.asn1.DERApplicationSpecific)",
            "org.bouncycastle.asn1.eac.CVCertificateRequest:void initCertBody(org.bouncycastle.asn1.DERApplicationSpecific)",
            "org.bouncycastle.asn1.eac.CertificateBody:void setIso7816CertificateBody(org.bouncycastle.asn1.DERApplicationSpecific)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String outputApplicationSpecific(java.lang.String,java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.String)"
        ]
    },
    "org.bouncycastle.asn1.LazyConstructionEnumeration:java.lang.Object readObject()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.LazyConstructionEnumeration:void <init>(byte[])",
            "org.bouncycastle.asn1.LazyConstructionEnumeration:java.lang.Object nextElement()"
        ]
    },
    "org.bouncycastle.asn1.eac.CVCertificate:void setPrivateData(org.bouncycastle.asn1.DERApplicationSpecific)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.eac.CVCertificate:void initFrom(org.bouncycastle.asn1.ASN1InputStream)",
            "org.bouncycastle.asn1.eac.CVCertificate:void <init>(org.bouncycastle.asn1.DERApplicationSpecific)"
        ]
    },
    "org.bouncycastle.asn1.eac.CVCertificate:void initFrom(org.bouncycastle.asn1.ASN1InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.eac.CVCertificate:void <init>(org.bouncycastle.asn1.ASN1InputStream)"
        ]
    },
    "org.bouncycastle.asn1.eac.CertificateBody:void setIso7816CertificateBody(org.bouncycastle.asn1.DERApplicationSpecific)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.eac.CertificateBody:void <init>(org.bouncycastle.asn1.DERApplicationSpecific)"
        ]
    },
    "org.bouncycastle.asn1.eac.CertificateHolderAuthorization:void setPrivateData(org.bouncycastle.asn1.ASN1InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.eac.CertificateHolderAuthorization:void <init>(org.bouncycastle.asn1.DERApplicationSpecific)"
        ]
    },
    "org.bouncycastle.asn1.util.Dump:void main(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.SubjectPublicKeyInfo:org.bouncycastle.asn1.ASN1Primitive parsePublicKey()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey:void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.elgamal.BCElGamalPublicKey:void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.BCGOST3410PublicKey:void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.BCRSAPublicKey:void populateFromPublicKeyInfo(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jce.provider.JCEDHPublicKey:void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jce.provider.JCEElGamalPublicKey:void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jce.provider.JCERSAPublicKey:void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jce.provider.JDKDSAPublicKey:void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PublicKey generatePublic(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PublicKey generatePublic(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PublicKey generatePublic(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PublicKey generatePublic(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyFactorySpi:java.security.PublicKey generatePublic(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)"
        ]
    },
    "org.bouncycastle.asn1.x509.SubjectPublicKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPublicKey()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.X509NameEntryConverter:org.bouncycastle.asn1.ASN1Primitive convertHexEncoded(java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.X509DefaultEntryConverter:org.bouncycastle.asn1.ASN1Primitive getConvertedValue(org.bouncycastle.asn1.ASN1ObjectIdentifier,java.lang.String)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsUtils:org.bouncycastle.asn1.ASN1Primitive readASN1Object(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsUtils:org.bouncycastle.asn1.ASN1Primitive readDERObject(byte[])"
        ]
    },
    "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl:void readObject(java.io.ObjectInputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.JCEECPrivateKey:void readObject(java.io.ObjectInputStream)",
            "org.bouncycastle.jce.provider.JCERSAPrivateKey:void readObject(java.io.ObjectInputStream)",
            "org.bouncycastle.jce.provider.JDKDSAPrivateKey:void readObject(java.io.ObjectInputStream)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.Certificate readDERCertificate(org.bouncycastle.asn1.ASN1InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.Certificate engineGenerateCertificate(java.io.InputStream)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.CRL readDERCRL(org.bouncycastle.asn1.ASN1InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.CRL engineGenerateCRL(java.io.InputStream)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.CertPath engineGenerateCertPath(java.io.InputStream,java.lang.String)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:org.bouncycastle.asn1.ASN1Primitive toASN1Object(java.security.cert.X509Certificate)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] getEncoded(java.lang.String)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLEntryObject:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:java.lang.String toString(boolean,java.util.Hashtable)",
            "org.bouncycastle.i18n.LocalizedMessage$FilteredArguments:java.lang.Object filter(int,java.lang.Object)",
            "org.bouncycastle.i18n.filter.TrustedInput:java.lang.String toString()",
            "org.bouncycastle.i18n.filter.UntrustedInput:java.lang.String getString()",
            "org.bouncycastle.i18n.filter.UntrustedInput:java.lang.String toString()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.CertPath engineGenerateCertPath(java.util.List)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:java.util.List getExtendedKeyUsage()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.symmetric.CAST5$AlgParams:void engineInit(byte[],java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.symmetric.IDEA$AlgParams:void engineInit(byte[],java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.PKCS10CertificationRequest:org.bouncycastle.asn1.ASN1Sequence toDERSequence(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.PKCS10CertificationRequest:void <init>(byte[])"
        ]
    },
    "org.bouncycastle.jce.PKCS12Util:byte[] convertToDefiniteLength(byte[],char[],java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.X509Principal:org.bouncycastle.asn1.ASN1Sequence readSequence(org.bouncycastle.asn1.ASN1InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.X509Principal:void <init>(byte[])"
        ]
    },
    "org.bouncycastle.jce.netscape.NetscapeCertRequest:org.bouncycastle.asn1.ASN1Sequence getReq(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.netscape.NetscapeCertRequest:void <init>(byte[])"
        ]
    },
    "org.bouncycastle.jce.netscape.NetscapeCertRequest:org.bouncycastle.asn1.ASN1Primitive getKeySpec()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.netscape.NetscapeCertRequest:void <init>(java.lang.String,org.bouncycastle.asn1.x509.AlgorithmIdentifier,java.security.PublicKey)",
            "org.bouncycastle.jce.netscape.NetscapeCertRequest:void sign(java.security.PrivateKey,java.security.SecureRandom)",
            "org.bouncycastle.jce.netscape.NetscapeCertRequest:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"
        ]
    },
    "org.bouncycastle.jce.provider.CertPathValidatorUtilities:org.bouncycastle.asn1.ASN1Primitive getObject(java.lang.String,byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)"
        ]
    },
    "org.bouncycastle.jce.provider.CertPathValidatorUtilities:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier(java.security.PublicKey)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi:java.security.cert.CertPathValidatorResult engineValidate(java.security.cert.CertPath,java.security.cert.CertPathParameters)",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkSignatures()"
        ]
    },
    "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCertBC(java.security.cert.CertPath,int,org.bouncycastle.jce.provider.PKIXNameConstraintValidator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi:java.security.cert.CertPathValidatorResult engineValidate(java.security.cert.CertPath,java.security.cert.CertPathParameters)"
        ]
    },
    "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void checkCRLs(org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCertA(java.security.cert.CertPath,org.bouncycastle.x509.ExtendedPKIXParameters,int,java.security.PublicKey,boolean,javax.security.auth.x500.X500Principal,java.security.cert.X509Certificate)"
        ]
    },
    "org.bouncycastle.jce.provider.RFC3281CertPathUtilities:void checkCRLs(org.bouncycastle.x509.X509AttributeCertificate,org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.PKIXAttrCertPathValidatorSpi:java.security.cert.CertPathValidatorResult engineValidate(java.security.cert.CertPath,java.security.cert.CertPathParameters)"
        ]
    },
    "org.bouncycastle.jce.provider.X509AttrCertParser:org.bouncycastle.x509.X509AttributeCertificate readDERCertificate(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.X509AttrCertParser:java.lang.Object engineRead()"
        ]
    },
    "org.bouncycastle.jce.provider.X509CRLEntryObject:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:java.lang.String toString(boolean,java.util.Hashtable)",
            "org.bouncycastle.i18n.LocalizedMessage$FilteredArguments:java.lang.Object filter(int,java.lang.Object)",
            "org.bouncycastle.i18n.filter.TrustedInput:java.lang.String toString()",
            "org.bouncycastle.i18n.filter.UntrustedInput:java.lang.String getString()",
            "org.bouncycastle.i18n.filter.UntrustedInput:java.lang.String toString()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.CertPath engineGenerateCertPath(java.util.List)"
        ]
    },
    "org.bouncycastle.jce.provider.X509CRLParser:java.security.cert.CRL readDERCRL(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.X509CRLParser:java.lang.Object engineRead()"
        ]
    },
    "org.bouncycastle.jce.provider.X509CertPairParser:org.bouncycastle.x509.X509CertificatePair readDERCrossCertificatePair(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.X509CertPairParser:java.lang.Object engineRead()"
        ]
    },
    "org.bouncycastle.jce.provider.X509CertParser:java.security.cert.Certificate readDERCertificate(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.X509CertParser:java.lang.Object engineRead()"
        ]
    },
    "org.bouncycastle.jce.provider.X509CertificateObject:java.util.List getExtendedKeyUsage()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.provider.X509LDAPCertStoreSpi:java.util.Collection engineGetCertificates(java.security.cert.CertSelector)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.ocsp.OCSPReq:void <init>(org.bouncycastle.asn1.ASN1InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.ocsp.OCSPReq:void <init>(byte[])",
            "org.bouncycastle.ocsp.OCSPReq:void <init>(java.io.InputStream)"
        ]
    },
    "org.bouncycastle.ocsp.OCSPResp:void <init>(org.bouncycastle.asn1.ASN1InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.ocsp.OCSPResp:void <init>(byte[])",
            "org.bouncycastle.ocsp.OCSPResp:void <init>(java.io.InputStream)"
        ]
    },
    "org.bouncycastle.ocsp.RespID:void <init>(java.security.PublicKey)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.ocsp.BasicOCSPRespGenerator:void <init>(java.security.PublicKey)"
        ]
    },
    "org.bouncycastle.x509.PKIXCertPathReviewer:void checkNameConstraints()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.PKIXCertPathReviewer:void doChecks()"
        ]
    },
    "org.bouncycastle.x509.X509AttributeCertStoreSelector:boolean match(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi:java.security.cert.CertPathValidatorResult engineValidate(java.security.cert.CertPath,java.security.cert.CertPathParameters)",
            "org.bouncycastle.util.CollectionStore:java.util.Collection getMatches(org.bouncycastle.util.Selector)",
            "org.bouncycastle.x509.util.LDAPStoreHelper:java.util.Set createAttributeCertificates(java.util.List,org.bouncycastle.x509.X509AttributeCertStoreSelector)"
        ]
    },
    "org.bouncycastle.x509.X509CertificatePair:byte[] getEncoded()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.X509V1CertificateGenerator:void setPublicKey(java.security.PublicKey)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.examples.PKCS12Example:java.security.cert.Certificate createMasterCert(java.security.PublicKey,java.security.PrivateKey)",
            "org.bouncycastle.x509.examples.AttrCertExample:java.security.cert.X509Certificate createAcIssuerCert(java.security.PublicKey,java.security.PrivateKey)"
        ]
    },
    "org.bouncycastle.x509.X509V2AttributeCertificate:org.bouncycastle.asn1.x509.AttributeCertificate getObject(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.X509V2AttributeCertificate:void <init>(java.io.InputStream)"
        ]
    },
    "org.bouncycastle.x509.X509V2CRLGenerator:void addCRL(java.security.cert.X509CRL)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.X509V3CertificateGenerator:void setPublicKey(java.security.PublicKey)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.examples.PKCS12Example:java.security.cert.Certificate createIntermediateCert(java.security.PublicKey,java.security.PrivateKey,java.security.cert.X509Certificate)",
            "org.bouncycastle.jce.examples.PKCS12Example:java.security.cert.Certificate createCert(java.security.PublicKey,java.security.PrivateKey,java.security.PublicKey)",
            "org.bouncycastle.x509.examples.AttrCertExample:java.security.cert.X509Certificate createClientCert(java.security.PublicKey,java.security.PrivateKey,java.security.PublicKey)"
        ]
    },
    "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure:org.bouncycastle.asn1.ASN1Sequence fromKey(java.security.PublicKey)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure:void <init>(java.security.PublicKey)"
        ]
    },
    "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1Primitive readTaggedObject(boolean,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1InputStream:org.bouncycastle.asn1.ASN1Primitive buildObject(int,int,int)",
            "org.bouncycastle.asn1.BERTaggedObjectParser:org.bouncycastle.asn1.ASN1Primitive getLoadedObject()"
        ]
    },
    "org.bouncycastle.asn1.BERApplicationSpecificParser:org.bouncycastle.asn1.ASN1Primitive getLoadedObject()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1InputStream:org.bouncycastle.asn1.ASN1Primitive readObject()",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.BERApplicationSpecificParser:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"
        ]
    },
    "org.bouncycastle.asn1.BERSequenceParser:org.bouncycastle.asn1.ASN1Primitive getLoadedObject()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1InputStream:org.bouncycastle.asn1.ASN1Primitive readObject()",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.BERSequenceParser:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"
        ]
    },
    "org.bouncycastle.asn1.BERSetParser:org.bouncycastle.asn1.ASN1Primitive getLoadedObject()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1InputStream:org.bouncycastle.asn1.ASN1Primitive readObject()",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.BERSetParser:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"
        ]
    },
    "org.bouncycastle.asn1.DERExternalParser:org.bouncycastle.asn1.ASN1Primitive getLoadedObject()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1InputStream:org.bouncycastle.asn1.ASN1Primitive readObject()",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.DERExternalParser:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"
        ]
    },
    "org.bouncycastle.asn1.DERSequenceParser:org.bouncycastle.asn1.ASN1Primitive getLoadedObject()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.DERSequenceParser:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"
        ]
    },
    "org.bouncycastle.asn1.DERSetParser:org.bouncycastle.asn1.ASN1Primitive getLoadedObject()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.DERSetParser:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"
        ]
    },
    "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.cms.OriginatorInfo getOriginatorInfo()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1SetParser getRecipientInfos()"
        ]
    },
    "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1SetParser getRecipientInfos()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.cms.EncryptedContentInfoParser getAuthEncryptedContentInfo()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1SetParser getAuthAttrs()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1SetParser getUnauthAttrs()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cms.AuthenticatedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.cms.OriginatorInfo getOriginatorInfo()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1SetParser getRecipientInfos()"
        ]
    },
    "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1SetParser getRecipientInfos()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getMacAlgorithm()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.cms.ContentInfoParser getEncapsulatedContentInfo()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.cms.ContentInfoParser getEnapsulatedContentInfo()"
        ]
    },
    "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1SetParser getAuthAttrs()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1SetParser getUnauthAttrs()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cms.ContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.cms.ContentInfoParser getEncapsulatedContentInfo()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.SignedDataParser:org.bouncycastle.asn1.cms.ContentInfoParser getEncapContentInfo()"
        ]
    },
    "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.cms.EncryptedContentInfoParser getAuthEncryptedContentInfo()",
            "org.bouncycastle.asn1.cms.EnvelopedDataParser:org.bouncycastle.asn1.cms.EncryptedContentInfoParser getEncryptedContentInfo()"
        ]
    },
    "org.bouncycastle.asn1.cms.EnvelopedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cms.EnvelopedDataParser:org.bouncycastle.asn1.cms.OriginatorInfo getOriginatorInfo()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.EnvelopedDataParser:org.bouncycastle.asn1.ASN1SetParser getRecipientInfos()"
        ]
    },
    "org.bouncycastle.asn1.cms.EnvelopedDataParser:org.bouncycastle.asn1.ASN1SetParser getRecipientInfos()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cms.EnvelopedDataParser:org.bouncycastle.asn1.cms.EncryptedContentInfoParser getEncryptedContentInfo()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cms.EnvelopedDataParser:org.bouncycastle.asn1.ASN1SetParser getUnprotectedAttrs()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cms.SignedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.SignedDataParser:org.bouncycastle.asn1.cms.SignedDataParser getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.cms.SignedDataParser:org.bouncycastle.asn1.ASN1SetParser getDigestAlgorithms()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cms.SignedDataParser:org.bouncycastle.asn1.cms.ContentInfoParser getEncapContentInfo()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cms.SignedDataParser:org.bouncycastle.asn1.ASN1SetParser getCertificates()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cms.SignedDataParser:org.bouncycastle.asn1.ASN1SetParser getCrls()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cms.SignedDataParser:org.bouncycastle.asn1.ASN1SetParser getSignerInfos()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.TimeStampedDataParser getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cms.ContentInfoParser:org.bouncycastle.asn1.ASN1Encodable getContent(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:org.bouncycastle.asn1.ASN1Encodable getEncryptedContent(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.ASN1InputStream:org.bouncycastle.asn1.ASN1Primitive buildObject(int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1InputStream:org.bouncycastle.asn1.ASN1Primitive readObject()"
        ]
    },
    "org.bouncycastle.crypto.tls.DTLSClientProtocol:void processCertificateRequest(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:org.bouncycastle.crypto.tls.DTLSTransport clientHandshake(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,org.bouncycastle.crypto.tls.DTLSRecordLayer)"
        ]
    },
    "org.bouncycastle.crypto.tls.DTLSClientProtocol:void processCertificateStatus(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:org.bouncycastle.crypto.tls.DTLSTransport clientHandshake(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,org.bouncycastle.crypto.tls.DTLSRecordLayer)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsExtensionsUtils:org.bouncycastle.crypto.tls.CertificateStatusRequest readStatusRequestExtension(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsExtensionsUtils:org.bouncycastle.crypto.tls.CertificateStatusRequest getStatusRequestExtension(java.util.Hashtable)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsExtensionsUtils:org.bouncycastle.crypto.tls.HeartbeatExtension readHeartbeatExtension(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsExtensionsUtils:org.bouncycastle.crypto.tls.HeartbeatExtension getHeartbeatExtension(java.util.Hashtable)"
        ]
    },
    "org.bouncycastle.crypto.tls.DigitallySigned:org.bouncycastle.crypto.tls.DigitallySigned parse(org.bouncycastle.crypto.tls.TlsContext,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSServerProtocol:void processCertificateVerify(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState,byte[],org.bouncycastle.crypto.tls.TlsHandshakeHash)",
            "org.bouncycastle.crypto.tls.TlsDHEKeyExchange:void processServerKeyExchange(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsECDHEKeyExchange:void processServerKeyExchange(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsSRPKeyExchange:void processServerKeyExchange(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void receiveCertificateVerifyMessage(java.io.ByteArrayInputStream)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsECCUtils:short[] getSupportedPointFormatsExtension(java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.AbstractTlsClient:void processServerExtensions(java.util.Hashtable)",
            "org.bouncycastle.crypto.tls.AbstractTlsServer:void processClientExtensions(java.util.Hashtable)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsECCUtils:java.math.BigInteger readECFieldElement(int,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsECCUtils:org.bouncycastle.crypto.params.ECDomainParameters readECParameters(int[],short[],java.io.InputStream)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsECCUtils:java.math.BigInteger readECParameter(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsECCUtils:int readECExponent(int,java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsECCUtils:org.bouncycastle.crypto.params.ECDomainParameters readECParameters(int[],short[],java.io.InputStream)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsECDHKeyExchange:void processClientKeyExchange(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSServerProtocol:void processClientKeyExchange(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState,byte[])",
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void receiveClientKeyExchangeMessage(java.io.ByteArrayInputStream)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsSRPUtils:byte[] readSRPExtension(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsSRPUtils:byte[] getSRPExtension(java.util.Hashtable)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsExtensionsUtils:org.bouncycastle.crypto.tls.ServerNameList readServerNameExtension(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsExtensionsUtils:org.bouncycastle.crypto.tls.ServerNameList getServerNameExtension(java.util.Hashtable)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsECCUtils:int[] getSupportedEllipticCurvesExtension(java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.AbstractTlsClient:void processServerExtensions(java.util.Hashtable)",
            "org.bouncycastle.crypto.tls.AbstractTlsServer:void processClientExtensions(java.util.Hashtable)"
        ]
    },
    "org.bouncycastle.crypto.tls.SessionParameters:java.util.Hashtable readServerExtensions()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsClientProtocol:void receiveServerHelloMessage(java.io.ByteArrayInputStream)"
        ]
    },
    "org.bouncycastle.crypto.tls.DTLSClientProtocol:void processServerSupplementalData(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:org.bouncycastle.crypto.tls.DTLSTransport clientHandshake(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,org.bouncycastle.crypto.tls.DTLSRecordLayer)"
        ]
    },
    "org.bouncycastle.crypto.tls.DTLSServerProtocol:void processClientSupplementalData(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState,byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSServerProtocol:org.bouncycastle.crypto.tls.DTLSTransport serverHandshake(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState,org.bouncycastle.crypto.tls.DTLSRecordLayer)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsSRTPUtils:org.bouncycastle.crypto.tls.UseSRTPData getUseSRTPExtension(java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.tls.TlsDHUtils:java.math.BigInteger readDHParameter(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.ServerDHParams:org.bouncycastle.crypto.tls.ServerDHParams parse(java.io.InputStream)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsUtils:java.util.Vector readSignatureAlgorithmsExtension(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsUtils:java.util.Vector getSignatureAlgorithmsExtension(java.util.Hashtable)"
        ]
    },
    "org.bouncycastle.crypto.tls.DTLSClientProtocol:void processNewSessionTicket(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:org.bouncycastle.crypto.tls.DTLSTransport clientHandshake(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,org.bouncycastle.crypto.tls.DTLSRecordLayer)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsClientProtocol:void receiveNewSessionTicketMessage(java.io.ByteArrayInputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsClientProtocol:void handleHandshakeMessage(short,byte[])"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.Certificate readPEMCertificate(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.Certificate engineGenerateCertificate(java.io.InputStream)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.CRL readPEMCRL(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.CRL engineGenerateCRL(java.io.InputStream)"
        ]
    },
    "org.bouncycastle.jce.provider.X509AttrCertParser:org.bouncycastle.x509.X509AttributeCertificate readPEMCertificate(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.X509AttrCertParser:java.lang.Object engineRead()"
        ]
    },
    "org.bouncycastle.jce.provider.X509CRLParser:java.security.cert.CRL readPEMCRL(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.X509CRLParser:java.lang.Object engineRead()"
        ]
    },
    "org.bouncycastle.jce.provider.X509CertParser:java.security.cert.Certificate readPEMCertificate(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.X509CertParser:java.lang.Object engineRead()"
        ]
    },
    "org.bouncycastle.x509.X509StreamParser:java.util.Collection readAll()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.util.LDAPStoreHelper:java.util.Collection getAACertificates(org.bouncycastle.x509.X509AttributeCertStoreSelector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.X509StoreLDAPAttrCerts:java.util.Collection engineGetMatches(org.bouncycastle.util.Selector)"
        ]
    },
    "org.bouncycastle.x509.util.LDAPStoreHelper:java.util.Collection getAttributeDescriptorCertificates(org.bouncycastle.x509.X509AttributeCertStoreSelector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.X509StoreLDAPAttrCerts:java.util.Collection engineGetMatches(org.bouncycastle.util.Selector)"
        ]
    },
    "org.bouncycastle.x509.util.LDAPStoreHelper:java.util.Collection getAttributeCertificateAttributes(org.bouncycastle.x509.X509AttributeCertStoreSelector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.X509StoreLDAPAttrCerts:java.util.Collection engineGetMatches(org.bouncycastle.util.Selector)"
        ]
    },
    "org.bouncycastle.x509.util.LDAPStoreHelper:java.util.Collection getAuthorityRevocationLists(org.bouncycastle.x509.X509CRLStoreSelector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.X509StoreLDAPCRLs:java.util.Collection engineGetMatches(org.bouncycastle.util.Selector)"
        ]
    },
    "org.bouncycastle.x509.util.LDAPStoreHelper:java.util.Collection getAttributeCertificateRevocationLists(org.bouncycastle.x509.X509CRLStoreSelector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.X509StoreLDAPCRLs:java.util.Collection engineGetMatches(org.bouncycastle.util.Selector)"
        ]
    },
    "org.bouncycastle.x509.util.LDAPStoreHelper:java.util.Collection getAttributeAuthorityRevocationLists(org.bouncycastle.x509.X509CRLStoreSelector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.X509StoreLDAPCRLs:java.util.Collection engineGetMatches(org.bouncycastle.util.Selector)"
        ]
    },
    "org.bouncycastle.x509.util.LDAPStoreHelper:java.util.Collection getDeltaCertificateRevocationLists(org.bouncycastle.x509.X509CRLStoreSelector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.X509StoreLDAPCRLs:java.util.Collection engineGetMatches(org.bouncycastle.util.Selector)"
        ]
    },
    "org.bouncycastle.x509.util.LDAPStoreHelper:java.util.Collection getCertificateRevocationLists(org.bouncycastle.x509.X509CRLStoreSelector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.X509StoreLDAPCRLs:java.util.Collection engineGetMatches(org.bouncycastle.util.Selector)"
        ]
    },
    "org.bouncycastle.x509.util.LDAPStoreHelper:java.util.Collection getCrossCertificatePairs(org.bouncycastle.x509.X509CertPairStoreSelector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.X509StoreLDAPCertPairs:java.util.Collection engineGetMatches(org.bouncycastle.util.Selector)",
            "org.bouncycastle.jce.provider.X509StoreLDAPCerts:java.util.Collection getCertificatesFromCrossCertificatePairs(org.bouncycastle.x509.X509CertStoreSelector)"
        ]
    },
    "org.bouncycastle.x509.util.LDAPStoreHelper:java.util.Collection getUserCertificates(org.bouncycastle.x509.X509CertStoreSelector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.X509StoreLDAPCerts:java.util.Collection engineGetMatches(org.bouncycastle.util.Selector)"
        ]
    },
    "org.bouncycastle.x509.util.LDAPStoreHelper:java.util.Collection getCACertificates(org.bouncycastle.x509.X509CertStoreSelector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.X509StoreLDAPCerts:java.util.Collection engineGetMatches(org.bouncycastle.util.Selector)"
        ]
    },
    "org.bouncycastle.asn1.ASN1InputStream:void readFully(byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.ASN1InputStream:byte[] getBuffer(org.bouncycastle.asn1.DefiniteLengthInputStream,byte[][])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1InputStream:org.bouncycastle.asn1.ASN1Primitive createPrimitiveDERObject(int,org.bouncycastle.asn1.DefiniteLengthInputStream,byte[][])"
        ]
    },
    "org.bouncycastle.asn1.DefiniteLengthInputStream:byte[] toByteArray()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1InputStream:org.bouncycastle.asn1.ASN1Primitive buildObject(int,int,int)",
            "org.bouncycastle.asn1.ASN1InputStream:byte[] getBuffer(org.bouncycastle.asn1.DefiniteLengthInputStream,byte[][])",
            "org.bouncycastle.asn1.ASN1InputStream:org.bouncycastle.asn1.ASN1Primitive createPrimitiveDERObject(int,org.bouncycastle.asn1.DefiniteLengthInputStream,byte[][])",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1Primitive readTaggedObject(boolean,int)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1Encodable readObject()",
            "org.bouncycastle.asn1.DEROctetStringParser:org.bouncycastle.asn1.ASN1Primitive getLoadedObject()"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsUtils:byte[] readAllOrNothing(int,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.RecordStream:boolean readRecord()"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsUtils:byte[] readFully(int,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.Certificate:org.bouncycastle.crypto.tls.Certificate parse(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.CertificateURL:org.bouncycastle.crypto.tls.CertificateURL parse(org.bouncycastle.crypto.tls.TlsContext,java.io.InputStream)",
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:void processServerHello(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,byte[])",
            "org.bouncycastle.crypto.tls.DTLSProtocol:void processFinished(byte[],byte[])",
            "org.bouncycastle.crypto.tls.DTLSServerProtocol:void processClientHello(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState,byte[])",
            "org.bouncycastle.crypto.tls.OCSPStatusRequest:org.bouncycastle.crypto.tls.OCSPStatusRequest parse(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.RecordStream:byte[] decodeAndVerify(short,java.io.InputStream,int)",
            "org.bouncycastle.crypto.tls.ServerNameList:org.bouncycastle.crypto.tls.ServerNameList parse(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsClientProtocol:void receiveServerHelloMessage(java.io.ByteArrayInputStream)",
            "org.bouncycastle.crypto.tls.TlsProtocol:void processFinishedMessage(java.io.ByteArrayInputStream)",
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void receiveClientHelloMessage(java.io.ByteArrayInputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:byte[] readOpaque8(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:byte[] readOpaque16(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:byte[] readOpaque24(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.URLAndHash:org.bouncycastle.crypto.tls.URLAndHash parse(org.bouncycastle.crypto.tls.TlsContext,java.io.InputStream)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsUtils:void readFully(byte[],java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$BouncyCastleStore:void engineLoad(java.io.InputStream,char[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:void engineUpdateAAD(java.nio.ByteBuffer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.modes.OCBBlockCipher:void reset()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.elgamal.CipherSpi:byte[] engineDoFinal(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:java.security.Key engineUnwrap(byte[],java.lang.String,int)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.elgamal.CipherSpi:int engineDoFinal(byte[],int,int,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.encodings.ISO9796d1Encoding:byte[] processBlock(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.BufferedAsymmetricBlockCipher:byte[] doFinal()",
            "org.bouncycastle.crypto.encodings.ISO9796d1Encoding:byte[] encodeBlock(byte[],int,int)",
            "org.bouncycastle.crypto.encodings.ISO9796d1Encoding:byte[] decodeBlock(byte[],int,int)",
            "org.bouncycastle.crypto.encodings.OAEPEncoding:byte[] encodeBlock(byte[],int,int)",
            "org.bouncycastle.crypto.encodings.OAEPEncoding:byte[] decodeBlock(byte[],int,int)",
            "org.bouncycastle.crypto.encodings.PKCS1Encoding:byte[] encodeBlock(byte[],int,int)",
            "org.bouncycastle.crypto.encodings.PKCS1Encoding:byte[] decodeBlock(byte[],int,int)",
            "org.bouncycastle.crypto.signers.GenericSigner:byte[] generateSignature()",
            "org.bouncycastle.crypto.signers.GenericSigner:boolean verifySignature(byte[])",
            "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:void updateWithRecoveredMessage(byte[])",
            "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:byte[] generateSignature()",
            "org.bouncycastle.crypto.signers.ISO9796d2Signer:void updateWithRecoveredMessage(byte[])",
            "org.bouncycastle.crypto.signers.ISO9796d2Signer:byte[] generateSignature()",
            "org.bouncycastle.crypto.signers.ISO9796d2Signer:boolean verifySignature(byte[])",
            "org.bouncycastle.crypto.signers.PSSSigner:byte[] generateSignature()",
            "org.bouncycastle.crypto.signers.PSSSigner:boolean verifySignature(byte[])",
            "org.bouncycastle.crypto.signers.RSADigestSigner:byte[] generateSignature()",
            "org.bouncycastle.crypto.signers.RSADigestSigner:boolean verifySignature(byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi:byte[] engineDoFinal(byte[],int,int)",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi:int engineDoFinal(byte[],int,int,byte[],int)",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi:byte[] engineSign()",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi:boolean engineVerify(byte[])"
        ]
    },
    "org.bouncycastle.pqc.crypto.gmss.GMSSKeyPairGenerator:org.bouncycastle.crypto.AsymmetricCipherKeyPair generateKeyPair()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.generators.EphemeralKeyPairGenerator:org.bouncycastle.crypto.EphemeralKeyPair generate()"
        ]
    },
    "org.bouncycastle.pqc.jcajce.provider.util.CipherSpiExt:int engineDoFinal(byte[],int,int,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.tls.DTLSTransport:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSRecordLayer:void closeTransport()"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsOutputStream:void write(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void <init>(java.io.OutputStream,int)",
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void bsFinishedWithStream()",
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void bsW(int,int)",
            "org.bouncycastle.asn1.ASN1OutputStream:void write(int)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeNull()",
            "org.bouncycastle.asn1.BERGenerator:void writeHdr(int)",
            "org.bouncycastle.asn1.BERGenerator:void writeBERBody(java.io.InputStream)",
            "org.bouncycastle.asn1.BERGenerator:void writeBEREnd()",
            "org.bouncycastle.asn1.DERGenerator:void writeLength(java.io.OutputStream,int)",
            "org.bouncycastle.asn1.DERGenerator:void writeDEREncoded(java.io.OutputStream,int,byte[])",
            "org.bouncycastle.crypto.io.CipherOutputStream:void write(int)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint8(short,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint8(int,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint16(int,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint24(int,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint32(long,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint48(long,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint64(long,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeVersion(org.bouncycastle.crypto.tls.ProtocolVersion,java.io.OutputStream)",
            "org.bouncycastle.util.Strings:void toUTF8ByteArray(char[],java.io.OutputStream)",
            "org.bouncycastle.util.encoders.Base64Encoder:int encode(byte[],int,int,java.io.OutputStream)",
            "org.bouncycastle.util.encoders.Base64Encoder:int decode(byte[],int,int,java.io.OutputStream)",
            "org.bouncycastle.util.encoders.Base64Encoder:int decode(java.lang.String,java.io.OutputStream)",
            "org.bouncycastle.util.encoders.Base64Encoder:int decodeLastBlock(java.io.OutputStream,char,char,char,char)",
            "org.bouncycastle.util.encoders.HexEncoder:int encode(byte[],int,int,java.io.OutputStream)",
            "org.bouncycastle.util.encoders.HexEncoder:int decode(byte[],int,int,java.io.OutputStream)",
            "org.bouncycastle.util.encoders.HexEncoder:int decode(java.lang.String,java.io.OutputStream)",
            "org.bouncycastle.util.io.TeeInputStream:int read()",
            "org.bouncycastle.util.io.TeeOutputStream:void write(int)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsClientProtocol:void sendCertificateVerifyMessage(org.bouncycastle.crypto.tls.DigitallySigned)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsClientProtocol:void handleHandshakeMessage(short,byte[])"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsInputStream:int read(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ConstructedOctetStream:int read(byte[],int,int)",
            "org.bouncycastle.asn1.DefiniteLengthInputStream:int read(byte[],int,int)",
            "org.bouncycastle.asn1.IndefiniteLengthInputStream:int read(byte[],int,int)",
            "org.bouncycastle.crypto.io.DigestInputStream:int read(byte[],int,int)",
            "org.bouncycastle.crypto.io.MacInputStream:int read(byte[],int,int)",
            "org.bouncycastle.crypto.io.SignerInputStream:int read(byte[],int,int)",
            "org.bouncycastle.crypto.parsers.DHIESPublicKeyParser:org.bouncycastle.crypto.params.AsymmetricKeyParameter readKey(java.io.InputStream)",
            "org.bouncycastle.crypto.parsers.ECIESPublicKeyParser:org.bouncycastle.crypto.params.AsymmetricKeyParameter readKey(java.io.InputStream)",
            "org.bouncycastle.util.io.Streams:void drain(java.io.InputStream)",
            "org.bouncycastle.util.io.Streams:int readFully(java.io.InputStream,byte[],int,int)",
            "org.bouncycastle.util.io.Streams:void pipeAll(java.io.InputStream,java.io.OutputStream)",
            "org.bouncycastle.util.io.Streams:long pipeAllLimited(java.io.InputStream,long,java.io.OutputStream)",
            "org.bouncycastle.util.io.TeeInputStream:int read(byte[],int,int)"
        ]
    },
    "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.util.Dump:void main(java.lang.String[])",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLEntryObject:java.lang.String toString()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:java.lang.String toString()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:java.lang.String toString()",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.provider.X509CRLEntryObject:java.lang.String toString()",
            "org.bouncycastle.jce.provider.X509CRLObject:java.lang.String toString()",
            "org.bouncycastle.jce.provider.X509CertificateObject:java.lang.String toString()"
        ]
    },
    "org.bouncycastle.asn1.x509.X509Name:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.DistributionPointName:java.lang.String toString()",
            "org.bouncycastle.asn1.x509.GeneralName:java.lang.String toString()",
            "org.bouncycastle.asn1.x509.RoleSyntax:java.lang.String[] getRoleAuthorityAsString()",
            "org.bouncycastle.asn1.x509.X509Name:java.lang.String toString(boolean,java.util.Hashtable)",
            "org.bouncycastle.i18n.LocalizedMessage$FilteredArguments:java.lang.Object filter(int,java.lang.Object)",
            "org.bouncycastle.i18n.filter.TrustedInput:java.lang.String toString()",
            "org.bouncycastle.i18n.filter.UntrustedInput:java.lang.String getString()",
            "org.bouncycastle.i18n.filter.UntrustedInput:java.lang.String toString()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.CertPath engineGenerateCertPath(java.util.List)",
            "org.bouncycastle.jce.X509Principal:java.lang.String getName()"
        ]
    },
    "org.bouncycastle.i18n.LocalizedMessage$FilteredArguments:java.lang.Object[] getFilteredArgs(java.util.Locale)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.i18n.LocalizedMessage:java.lang.String getEntry(java.lang.String,java.util.Locale,java.util.TimeZone)",
            "org.bouncycastle.i18n.LocalizedMessage:java.lang.String addExtraArgs(java.lang.String,java.util.Locale)"
        ]
    },
    "org.bouncycastle.jce.provider.PKIXAttrCertPathBuilderSpi:java.security.cert.CertPathBuilderResult engineBuild(java.security.cert.CertPathParameters)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.provider.PKIXCertPathBuilderSpi:java.security.cert.CertPathBuilderResult engineBuild(java.security.cert.CertPathParameters)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void checkCRL(org.bouncycastle.asn1.x509.DistributionPoint,org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,org.bouncycastle.jce.provider.CertStatus,org.bouncycastle.jce.provider.ReasonsMask,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void checkCRLs(org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,java.util.List)"
        ]
    },
    "org.bouncycastle.jce.provider.RFC3281CertPathUtilities:void checkCRL(org.bouncycastle.asn1.x509.DistributionPoint,org.bouncycastle.x509.X509AttributeCertificate,org.bouncycastle.x509.ExtendedPKIXParameters,java.util.Date,java.security.cert.X509Certificate,org.bouncycastle.jce.provider.CertStatus,org.bouncycastle.jce.provider.ReasonsMask,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.RFC3281CertPathUtilities:void checkCRLs(org.bouncycastle.x509.X509AttributeCertificate,org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.util.List)"
        ]
    },
    "org.bouncycastle.ocsp.CertificateID:void <init>(java.lang.String,java.security.cert.X509Certificate,java.math.BigInteger)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.util.CollectionStore:java.util.Collection getMatches(org.bouncycastle.util.Selector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.X509StoreAttrCertCollection:java.util.Collection engineGetMatches(org.bouncycastle.util.Selector)",
            "org.bouncycastle.jce.provider.X509StoreCRLCollection:java.util.Collection engineGetMatches(org.bouncycastle.util.Selector)",
            "org.bouncycastle.jce.provider.X509StoreCertCollection:java.util.Collection engineGetMatches(org.bouncycastle.util.Selector)",
            "org.bouncycastle.jce.provider.X509StoreCertPairCollection:java.util.Collection engineGetMatches(org.bouncycastle.util.Selector)"
        ]
    },
    "org.bouncycastle.x509.PKIXCertPathReviewer:java.util.List[] getErrors()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.PKIXCertPathReviewer:java.util.List getErrors(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.PKIXCertPathReviewer:java.util.List[] getNotifications()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.PKIXCertPathReviewer:java.util.List getNotifications(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.PKIXCertPathReviewer:java.security.cert.PolicyNode getPolicyTree()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.PKIXCertPathReviewer:java.security.PublicKey getSubjectPublicKey()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.PKIXCertPathReviewer:java.security.cert.TrustAnchor getTrustAnchor()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.PKIXCertPathReviewer:boolean isValidCertPath()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.prng.DigestRandomGenerator:void nextBytes(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiCipher:byte[] messageEncrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiCipher:byte[] messageDecrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiCipher:byte[] messageEncrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiCipher:byte[] messageDecrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalCipher:byte[] messageEncrypt(byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalCipher:byte[] messageDecrypt(byte[])"
        ]
    },
    "org.bouncycastle.crypto.prng.ReversedWindowGenerator:void doNextBytes(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.prng.ReversedWindowGenerator:void nextBytes(byte[])",
            "org.bouncycastle.crypto.prng.ReversedWindowGenerator:void nextBytes(byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.prng.SP800SecureRandomBuilder$DualECDRBGProvider:org.bouncycastle.crypto.prng.drbg.SP80090DRBG get(org.bouncycastle.crypto.prng.EntropySource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.prng.SP800SecureRandom:void nextBytes(byte[])"
        ]
    },
    "org.bouncycastle.crypto.agreement.jpake.JPAKEParticipant:org.bouncycastle.crypto.agreement.jpake.JPAKERound1Payload createRound1PayloadToSend()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.examples.JPAKEExample:void main(java.lang.String[])"
        ]
    },
    "org.bouncycastle.crypto.agreement.jpake.JPAKEParticipant:org.bouncycastle.crypto.agreement.jpake.JPAKERound2Payload createRound2PayloadToSend()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.examples.JPAKEExample:void main(java.lang.String[])"
        ]
    },
    "org.bouncycastle.crypto.agreement.jpake.JPAKEParticipant:void validateRound1PayloadReceived(org.bouncycastle.crypto.agreement.jpake.JPAKERound1Payload)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.examples.JPAKEExample:void main(java.lang.String[])"
        ]
    },
    "org.bouncycastle.crypto.agreement.jpake.JPAKEParticipant:void validateRound2PayloadReceived(org.bouncycastle.crypto.agreement.jpake.JPAKERound2Payload)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.examples.JPAKEExample:void main(java.lang.String[])"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsSRPKeyExchange:byte[] generatePremasterSecret()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsProtocol:void establishMasterSecret(org.bouncycastle.crypto.tls.TlsContext,org.bouncycastle.crypto.tls.TlsKeyExchange)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.elgamal.CipherSpi:void engineSetPadding(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi:void <init>(javax.crypto.spec.OAEPParameterSpec)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi$OAEPPadding:void <init>()"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi:void engineSetPadding(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters:org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters nextKey()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.crypto.DigestingMessageSigner:void init(boolean,org.bouncycastle.crypto.CipherParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsRSASigner:org.bouncycastle.crypto.Signer makeSigner(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,boolean,boolean,org.bouncycastle.crypto.CipherParameters)"
        ]
    },
    "org.bouncycastle.crypto.generators.SCrypt:byte[] generate(byte[],byte[],int,int,int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.io.CipherInputStream:int read()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2InputStream:int bsR(int)",
            "org.bouncycastle.apache.bzip2.CBZip2InputStream:void getAndMoveToFrontDecode()",
            "org.bouncycastle.asn1.ASN1InputStream:int readTagNumber(java.io.InputStream,int)",
            "org.bouncycastle.asn1.ASN1InputStream:int readLength(java.io.InputStream,int)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1Encodable readObject()",
            "org.bouncycastle.asn1.BERGenerator:void writeBERBody(java.io.InputStream)",
            "org.bouncycastle.asn1.ConstructedOctetStream:int read()",
            "org.bouncycastle.asn1.DERBitString:org.bouncycastle.asn1.DERBitString fromInputStream(int,java.io.InputStream)",
            "org.bouncycastle.asn1.DefiniteLengthInputStream:int read()",
            "org.bouncycastle.asn1.IndefiniteLengthInputStream:void <init>(java.io.InputStream,int)",
            "org.bouncycastle.asn1.IndefiniteLengthInputStream:int read(byte[],int,int)",
            "org.bouncycastle.asn1.IndefiniteLengthInputStream:int read()",
            "org.bouncycastle.crypto.io.DigestInputStream:int read()",
            "org.bouncycastle.crypto.io.MacInputStream:int read()",
            "org.bouncycastle.crypto.io.SignerInputStream:int read()",
            "org.bouncycastle.crypto.parsers.ECIESPublicKeyParser:org.bouncycastle.crypto.params.AsymmetricKeyParameter readKey(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:short readUint8(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:int readUint16(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:int readUint24(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:long readUint32(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:long readUint48(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:org.bouncycastle.crypto.tls.ProtocolVersion readVersion(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:int readVersionRaw(java.io.InputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PEMUtil:java.lang.String readLine(java.io.InputStream)",
            "org.bouncycastle.jce.provider.PEMUtil:java.lang.String readLine(java.io.InputStream)",
            "org.bouncycastle.jce.provider.X509AttrCertParser:java.lang.Object engineRead()",
            "org.bouncycastle.jce.provider.X509CRLParser:java.lang.Object engineRead()",
            "org.bouncycastle.jce.provider.X509CertPairParser:java.lang.Object engineRead()",
            "org.bouncycastle.jce.provider.X509CertParser:java.lang.Object engineRead()",
            "org.bouncycastle.util.io.TeeInputStream:int read()"
        ]
    },
    "org.bouncycastle.jcajce.io.CipherInputStream:int read(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ConstructedOctetStream:int read(byte[],int,int)",
            "org.bouncycastle.asn1.DefiniteLengthInputStream:int read(byte[],int,int)",
            "org.bouncycastle.asn1.IndefiniteLengthInputStream:int read(byte[],int,int)",
            "org.bouncycastle.crypto.io.DigestInputStream:int read(byte[],int,int)",
            "org.bouncycastle.crypto.io.MacInputStream:int read(byte[],int,int)",
            "org.bouncycastle.crypto.io.SignerInputStream:int read(byte[],int,int)",
            "org.bouncycastle.crypto.parsers.DHIESPublicKeyParser:org.bouncycastle.crypto.params.AsymmetricKeyParameter readKey(java.io.InputStream)",
            "org.bouncycastle.crypto.parsers.ECIESPublicKeyParser:org.bouncycastle.crypto.params.AsymmetricKeyParameter readKey(java.io.InputStream)",
            "org.bouncycastle.util.io.Streams:void drain(java.io.InputStream)",
            "org.bouncycastle.util.io.Streams:int readFully(java.io.InputStream,byte[],int,int)",
            "org.bouncycastle.util.io.Streams:void pipeAll(java.io.InputStream,java.io.OutputStream)",
            "org.bouncycastle.util.io.Streams:long pipeAllLimited(java.io.InputStream,long,java.io.OutputStream)",
            "org.bouncycastle.util.io.TeeInputStream:int read(byte[],int,int)"
        ]
    },
    "org.bouncycastle.asn1.DERApplicationSpecific:void encode(org.bouncycastle.asn1.ASN1OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeImplicitObject(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.LazyEncodedSequence:void encode(org.bouncycastle.asn1.ASN1OutputStream)"
        ]
    },
    "org.bouncycastle.asn1.DERExternal:void encode(org.bouncycastle.asn1.ASN1OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeImplicitObject(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.LazyEncodedSequence:void encode(org.bouncycastle.asn1.ASN1OutputStream)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsECCUtils:void writeECExponent(int,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsECCUtils:void writeExplicitECParameters(short[],org.bouncycastle.crypto.params.ECDomainParameters,java.io.OutputStream)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsECCUtils:org.bouncycastle.crypto.params.ECPrivateKeyParameters generateEphemeralClientKeyExchange(java.security.SecureRandom,short[],org.bouncycastle.crypto.params.ECDomainParameters,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsECDHKeyExchange:void generateClientKeyExchange(java.io.OutputStream)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsSRTPUtils:void addUseSRTPExtension(java.util.Hashtable,org.bouncycastle.crypto.tls.UseSRTPData)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.tls.DTLSClientProtocol:byte[] generateCertificateVerify(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,org.bouncycastle.crypto.tls.DigitallySigned)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:org.bouncycastle.crypto.tls.DTLSTransport clientHandshake(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,org.bouncycastle.crypto.tls.DTLSRecordLayer)"
        ]
    },
    "org.bouncycastle.crypto.tls.ServerDHParams:void encode(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsDHUtils:org.bouncycastle.crypto.params.DHPrivateKeyParameters generateEphemeralServerKeyExchange(java.security.SecureRandom,org.bouncycastle.crypto.params.DHParameters,java.io.OutputStream)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsOutputStream:void flush()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void flush()",
            "org.bouncycastle.asn1.ASN1OutputStream:void flush()",
            "org.bouncycastle.crypto.io.CipherOutputStream:void flush()",
            "org.bouncycastle.crypto.tls.RecordStream:byte[] decodeAndVerify(short,java.io.InputStream,int)",
            "org.bouncycastle.crypto.tls.RecordStream:void writeRecord(short,byte[],int,int)",
            "org.bouncycastle.crypto.tls.RecordStream:void flush()",
            "org.bouncycastle.jcajce.io.CipherOutputStream:void flush()",
            "org.bouncycastle.util.io.TeeOutputStream:void flush()"
        ]
    },
    "org.bouncycastle.asn1.BEROctetStringParser:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsProtocol:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsInputStream:void close()",
            "org.bouncycastle.crypto.tls.TlsOutputStream:void close()"
        ]
    },
    "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void write(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void <init>(java.io.OutputStream,int)",
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void bsFinishedWithStream()",
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void bsW(int,int)",
            "org.bouncycastle.asn1.ASN1OutputStream:void write(int)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeNull()",
            "org.bouncycastle.asn1.BERGenerator:void writeHdr(int)",
            "org.bouncycastle.asn1.BERGenerator:void writeBERBody(java.io.InputStream)",
            "org.bouncycastle.asn1.BERGenerator:void writeBEREnd()",
            "org.bouncycastle.asn1.DERGenerator:void writeLength(java.io.OutputStream,int)",
            "org.bouncycastle.asn1.DERGenerator:void writeDEREncoded(java.io.OutputStream,int,byte[])",
            "org.bouncycastle.crypto.io.CipherOutputStream:void write(int)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint8(short,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint8(int,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint16(int,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint24(int,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint32(long,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint48(long,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint64(long,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeVersion(org.bouncycastle.crypto.tls.ProtocolVersion,java.io.OutputStream)",
            "org.bouncycastle.util.Strings:void toUTF8ByteArray(char[],java.io.OutputStream)",
            "org.bouncycastle.util.encoders.Base64Encoder:int encode(byte[],int,int,java.io.OutputStream)",
            "org.bouncycastle.util.encoders.Base64Encoder:int decode(byte[],int,int,java.io.OutputStream)",
            "org.bouncycastle.util.encoders.Base64Encoder:int decode(java.lang.String,java.io.OutputStream)",
            "org.bouncycastle.util.encoders.Base64Encoder:int decodeLastBlock(java.io.OutputStream,char,char,char,char)",
            "org.bouncycastle.util.encoders.HexEncoder:int encode(byte[],int,int,java.io.OutputStream)",
            "org.bouncycastle.util.encoders.HexEncoder:int decode(byte[],int,int,java.io.OutputStream)",
            "org.bouncycastle.util.encoders.HexEncoder:int decode(java.lang.String,java.io.OutputStream)",
            "org.bouncycastle.util.io.TeeInputStream:int read()",
            "org.bouncycastle.util.io.TeeOutputStream:void write(int)"
        ]
    },
    "org.bouncycastle.asn1.BEROctetStringGenerator$BufferedBEROctetStream:void write(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void <init>(java.io.OutputStream,int)",
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void bsFinishedWithStream()",
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void bsW(int,int)",
            "org.bouncycastle.asn1.ASN1OutputStream:void write(int)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeNull()",
            "org.bouncycastle.asn1.BERGenerator:void writeHdr(int)",
            "org.bouncycastle.asn1.BERGenerator:void writeBERBody(java.io.InputStream)",
            "org.bouncycastle.asn1.BERGenerator:void writeBEREnd()",
            "org.bouncycastle.asn1.DERGenerator:void writeLength(java.io.OutputStream,int)",
            "org.bouncycastle.asn1.DERGenerator:void writeDEREncoded(java.io.OutputStream,int,byte[])",
            "org.bouncycastle.crypto.io.CipherOutputStream:void write(int)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint8(short,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint8(int,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint16(int,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint24(int,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint32(long,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint48(long,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeUint64(long,java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:void writeVersion(org.bouncycastle.crypto.tls.ProtocolVersion,java.io.OutputStream)",
            "org.bouncycastle.util.Strings:void toUTF8ByteArray(char[],java.io.OutputStream)",
            "org.bouncycastle.util.encoders.Base64Encoder:int encode(byte[],int,int,java.io.OutputStream)",
            "org.bouncycastle.util.encoders.Base64Encoder:int decode(byte[],int,int,java.io.OutputStream)",
            "org.bouncycastle.util.encoders.Base64Encoder:int decode(java.lang.String,java.io.OutputStream)",
            "org.bouncycastle.util.encoders.Base64Encoder:int decodeLastBlock(java.io.OutputStream,char,char,char,char)",
            "org.bouncycastle.util.encoders.HexEncoder:int encode(byte[],int,int,java.io.OutputStream)",
            "org.bouncycastle.util.encoders.HexEncoder:int decode(byte[],int,int,java.io.OutputStream)",
            "org.bouncycastle.util.encoders.HexEncoder:int decode(java.lang.String,java.io.OutputStream)",
            "org.bouncycastle.util.io.TeeInputStream:int read()",
            "org.bouncycastle.util.io.TeeOutputStream:void write(int)"
        ]
    },
    "org.bouncycastle.asn1.BEROctetStringGenerator$BufferedBEROctetStream:void write(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1OutputStream:void write(byte[],int,int)",
            "org.bouncycastle.crypto.io.CipherOutputStream:void write(byte[],int,int)",
            "org.bouncycastle.crypto.io.CipherOutputStream:void close()",
            "org.bouncycastle.crypto.tls.CertificateURL$ListBuffer16:void encodeTo(java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.RecordStream:byte[] decodeAndVerify(short,java.io.InputStream,int)",
            "org.bouncycastle.crypto.tls.RecordStream:void writeRecord(short,byte[],int,int)",
            "org.bouncycastle.util.io.BufferingOutputStream:void write(byte[],int,int)",
            "org.bouncycastle.util.io.BufferingOutputStream:void flush()",
            "org.bouncycastle.util.io.Streams:void pipeAll(java.io.InputStream,java.io.OutputStream)",
            "org.bouncycastle.util.io.Streams:long pipeAllLimited(java.io.InputStream,long,java.io.OutputStream)",
            "org.bouncycastle.util.io.TeeInputStream:int read(byte[],int,int)",
            "org.bouncycastle.util.io.TeeOutputStream:void write(byte[],int,int)"
        ]
    },
    "org.bouncycastle.asn1.ASN1Object:byte[] getEncoded()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:byte[] getEncoded(java.lang.String)",
            "org.bouncycastle.asn1.BERConstructedOctetString:byte[] toByteArray(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.ASN1Primitive getObject(int)",
            "org.bouncycastle.asn1.DERExternal:int encodedLength()",
            "org.bouncycastle.asn1.isismtt.ocsp.RequestedCertificate:byte[] getCertificateBytes()",
            "org.bouncycastle.asn1.x509.V2TBSCertListGenerator:org.bouncycastle.asn1.ASN1Sequence createReasonExtension(int)",
            "org.bouncycastle.asn1.x509.V2TBSCertListGenerator:org.bouncycastle.asn1.ASN1Sequence createInvalidityDateExtension(org.bouncycastle.asn1.ASN1GeneralizedTime)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpi:byte[] engineSign()",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpiLe:byte[] engineSign()",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpiLe:boolean engineVerify(byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.BCRSAPublicKey:void writeObject(java.io.ObjectOutputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLEntryObject:javax.security.auth.x500.X500Principal getCertificateIssuer()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLEntryObject:byte[] getExtensionValue(java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:byte[] getExtensionValue(java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:javax.security.auth.x500.X500Principal getIssuerX500Principal()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:java.security.Principal getIssuerDN()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getExtensionValue(java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:java.util.Collection getAlternativeNames(byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.symmetric.AES$AlgParamsGCM:byte[] engineGetEncoded()",
            "org.bouncycastle.jcajce.provider.symmetric.AES$AlgParamsGCM:byte[] engineGetEncoded(java.lang.String)",
            "org.bouncycastle.jcajce.provider.symmetric.CAST5$AlgParams:byte[] engineGetEncoded(java.lang.String)",
            "org.bouncycastle.jcajce.provider.symmetric.IDEA$AlgParams:byte[] engineGetEncoded(java.lang.String)",
            "org.bouncycastle.jcajce.provider.symmetric.RC2$AlgParams:byte[] engineGetEncoded(java.lang.String)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:java.security.AlgorithmParameters engineGetParameters()",
            "org.bouncycastle.jcajce.provider.symmetric.util.IvAlgorithmParameters:byte[] engineGetEncoded(java.lang.String)",
            "org.bouncycastle.jce.ECKeyUtil:java.security.PublicKey publicToExplicitParameters(java.security.PublicKey,java.security.Provider)",
            "org.bouncycastle.jce.ECKeyUtil:java.security.PrivateKey privateToExplicitParameters(java.security.PrivateKey,java.security.Provider)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509AttrCertParser:org.bouncycastle.x509.X509AttributeCertificate readDERCertificate(java.io.InputStream)",
            "org.bouncycastle.jce.provider.X509AttrCertParser:org.bouncycastle.x509.X509AttributeCertificate getCertificate()",
            "org.bouncycastle.jce.provider.X509AttrCertParser:org.bouncycastle.x509.X509AttributeCertificate readPEMCertificate(java.io.InputStream)",
            "org.bouncycastle.jce.provider.X509CRLEntryObject:javax.security.auth.x500.X500Principal getCertificateIssuer()",
            "org.bouncycastle.jce.provider.X509CRLEntryObject:byte[] getExtensionValue(java.lang.String)",
            "org.bouncycastle.jce.provider.X509CRLObject:byte[] getExtensionValue(java.lang.String)",
            "org.bouncycastle.jce.provider.X509CRLObject:javax.security.auth.x500.X500Principal getIssuerX500Principal()",
            "org.bouncycastle.jce.provider.X509CertificateObject:java.security.Principal getIssuerDN()",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getExtensionValue(java.lang.String)",
            "org.bouncycastle.jce.provider.X509CertificateObject:java.util.Collection getAlternativeNames(byte[])",
            "org.bouncycastle.jce.provider.X509LDAPCertStoreSpi:java.util.Collection engineGetCertificates(java.security.cert.CertSelector)",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.ocsp.BasicOCSPResp:byte[] getTBSResponseData()",
            "org.bouncycastle.ocsp.BasicOCSPResp:byte[] getEncoded()",
            "org.bouncycastle.ocsp.OCSPReq:byte[] getTBSRequest()",
            "org.bouncycastle.ocsp.OCSPResp:byte[] getEncoded()",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PrivateKey:byte[] getEncoded()",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PublicKey:byte[] getEncoded()",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey:byte[] getEncoded()",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcEliecePublicKey:byte[] getEncoded()",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey:byte[] getEncoded()",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.PKIXCertPathReviewer:java.util.Collection getTrustAnchors(java.security.cert.X509Certificate,java.util.Set)",
            "org.bouncycastle.x509.X509V2AttributeCertificate:void verify(java.security.PublicKey,java.lang.String)",
            "org.bouncycastle.x509.X509V2AttributeCertificate:byte[] getEncoded()"
        ]
    },
    "org.bouncycastle.asn1.ASN1Set:byte[] getEncoded(org.bouncycastle.asn1.ASN1Encodable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Set:void sort()"
        ]
    },
    "org.bouncycastle.asn1.DERBitString:java.lang.String getString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.DERBitString:java.lang.String toString()",
            "org.bouncycastle.asn1.x500.DirectoryString:java.lang.String getString()",
            "org.bouncycastle.asn1.x500.DirectoryString:java.lang.String toString()",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String canonicalize(java.lang.String)",
            "org.bouncycastle.asn1.x509.DisplayText:java.lang.String getString()",
            "org.bouncycastle.asn1.x509.RoleSyntax:void <init>(org.bouncycastle.asn1.x509.GeneralNames,org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.asn1.x509.RoleSyntax:java.lang.String getRoleNameAsString()",
            "org.bouncycastle.asn1.x509.RoleSyntax:java.lang.String[] getRoleAuthorityAsString()",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:java.lang.String canonicalize(java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:java.util.Collection getAlternativeNames(byte[])",
            "org.bouncycastle.jce.provider.X509CertificateObject:java.util.Collection getAlternativeNames(byte[])",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.DERUniversalString:java.lang.String getString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.DERUniversalString:java.lang.String toString()",
            "org.bouncycastle.asn1.x500.DirectoryString:java.lang.String getString()",
            "org.bouncycastle.asn1.x500.DirectoryString:java.lang.String toString()",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String canonicalize(java.lang.String)",
            "org.bouncycastle.asn1.x509.DisplayText:java.lang.String getString()",
            "org.bouncycastle.asn1.x509.RoleSyntax:void <init>(org.bouncycastle.asn1.x509.GeneralNames,org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.asn1.x509.RoleSyntax:java.lang.String getRoleNameAsString()",
            "org.bouncycastle.asn1.x509.RoleSyntax:java.lang.String[] getRoleAuthorityAsString()",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:java.lang.String canonicalize(java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:java.util.Collection getAlternativeNames(byte[])",
            "org.bouncycastle.jce.provider.X509CertificateObject:java.util.Collection getAlternativeNames(byte[])",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl:void writeObject(java.io.ObjectOutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.JCEECPrivateKey:void writeObject(java.io.ObjectOutputStream)",
            "org.bouncycastle.jce.provider.JCERSAPrivateKey:void writeObject(java.io.ObjectOutputStream)",
            "org.bouncycastle.jce.provider.JDKDSAPrivateKey:void writeObject(java.io.ObjectOutputStream)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:javax.security.auth.x500.X500Principal getIssuerX500Principal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:java.util.List sortCerts(java.util.List)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:boolean isRevoked(java.security.cert.Certificate)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:javax.security.auth.x500.X500Principal getEncodedIssuerPrincipal(java.lang.Object)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:java.util.Set getCompleteCRLs(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.util.Date,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:java.util.Collection findIssuerCerts(java.security.cert.X509Certificate,org.bouncycastle.x509.ExtendedPKIXBuilderParameters)",
            "org.bouncycastle.jce.provider.PKIXAttrCertPathBuilderSpi:java.security.cert.CertPathBuilderResult build(org.bouncycastle.x509.X509AttributeCertificate,java.security.cert.X509Certificate,org.bouncycastle.x509.ExtendedPKIXBuilderParameters,java.util.List)",
            "org.bouncycastle.jce.provider.X509CRLObject:boolean isRevoked(java.security.cert.Certificate)",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean match(java.security.cert.Certificate)",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkSignatures()",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkCRLs(java.security.cert.PKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,java.util.Vector,int)",
            "org.bouncycastle.x509.util.LDAPStoreHelper:javax.security.auth.x500.X500Principal getCertificateIssuer(java.security.cert.X509Certificate)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:javax.security.auth.x500.X500Principal getSubjectX500Principal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:java.util.List sortCerts(java.util.List)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:javax.security.auth.x500.X500Principal getSubjectPrincipal(java.security.cert.X509Certificate)",
            "org.bouncycastle.jce.provider.PKIXAttrCertPathBuilderSpi:java.security.cert.CertPathBuilderResult build(org.bouncycastle.x509.X509AttributeCertificate,java.security.cert.X509Certificate,org.bouncycastle.x509.ExtendedPKIXBuilderParameters,java.util.List)",
            "org.bouncycastle.jce.provider.RFC3281CertPathUtilities:void processAttrCert4(java.security.cert.X509Certificate,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.X509LDAPCertStoreSpi:java.util.Set certSubjectSerialSearch(java.security.cert.X509CertSelector,java.lang.String[],java.lang.String,java.lang.String)",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean match(java.security.cert.Certificate)",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkSignatures()",
            "org.bouncycastle.x509.examples.AttrCertExample:void main(java.lang.String[])",
            "org.bouncycastle.x509.util.LDAPStoreHelper:java.util.List certSubjectSerialSearch(org.bouncycastle.x509.X509CertStoreSelector,java.lang.String[],java.lang.String[],java.lang.String[])",
            "org.bouncycastle.x509.util.LDAPStoreHelper:java.util.List crossCertificatePairSubjectSearch(org.bouncycastle.x509.X509CertPairStoreSelector,java.lang.String[],java.lang.String[],java.lang.String[])"
        ]
    },
    "org.bouncycastle.jce.provider.CertPathValidatorUtilities:java.util.Set getQualifierSet(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void prepareNextCertB1(int,java.util.List[],java.lang.String,java.util.Map,java.security.cert.X509Certificate)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:org.bouncycastle.jce.provider.PKIXPolicyNode prepareCertB(java.security.cert.CertPath,int,java.util.List[],org.bouncycastle.jce.provider.PKIXPolicyNode,int)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:org.bouncycastle.jce.provider.PKIXPolicyNode processCertD(java.security.cert.CertPath,int,java.util.Set,org.bouncycastle.jce.provider.PKIXPolicyNode,java.util.List[],int)",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkPolicy()"
        ]
    },
    "org.bouncycastle.jce.provider.X509CertificateObject:javax.security.auth.x500.X500Principal getIssuerX500Principal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:java.util.List sortCerts(java.util.List)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:boolean isRevoked(java.security.cert.Certificate)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:javax.security.auth.x500.X500Principal getEncodedIssuerPrincipal(java.lang.Object)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:java.util.Set getCompleteCRLs(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.util.Date,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:java.util.Collection findIssuerCerts(java.security.cert.X509Certificate,org.bouncycastle.x509.ExtendedPKIXBuilderParameters)",
            "org.bouncycastle.jce.provider.PKIXAttrCertPathBuilderSpi:java.security.cert.CertPathBuilderResult build(org.bouncycastle.x509.X509AttributeCertificate,java.security.cert.X509Certificate,org.bouncycastle.x509.ExtendedPKIXBuilderParameters,java.util.List)",
            "org.bouncycastle.jce.provider.X509CRLObject:boolean isRevoked(java.security.cert.Certificate)",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean match(java.security.cert.Certificate)",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkSignatures()",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkCRLs(java.security.cert.PKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,java.util.Vector,int)",
            "org.bouncycastle.x509.util.LDAPStoreHelper:javax.security.auth.x500.X500Principal getCertificateIssuer(java.security.cert.X509Certificate)"
        ]
    },
    "org.bouncycastle.jce.provider.X509CertificateObject:javax.security.auth.x500.X500Principal getSubjectX500Principal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:java.util.List sortCerts(java.util.List)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:javax.security.auth.x500.X500Principal getSubjectPrincipal(java.security.cert.X509Certificate)",
            "org.bouncycastle.jce.provider.PKIXAttrCertPathBuilderSpi:java.security.cert.CertPathBuilderResult build(org.bouncycastle.x509.X509AttributeCertificate,java.security.cert.X509Certificate,org.bouncycastle.x509.ExtendedPKIXBuilderParameters,java.util.List)",
            "org.bouncycastle.jce.provider.RFC3281CertPathUtilities:void processAttrCert4(java.security.cert.X509Certificate,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.X509LDAPCertStoreSpi:java.util.Set certSubjectSerialSearch(java.security.cert.X509CertSelector,java.lang.String[],java.lang.String,java.lang.String)",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean match(java.security.cert.Certificate)",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkSignatures()",
            "org.bouncycastle.x509.examples.AttrCertExample:void main(java.lang.String[])",
            "org.bouncycastle.x509.util.LDAPStoreHelper:java.util.List certSubjectSerialSearch(org.bouncycastle.x509.X509CertStoreSelector,java.lang.String[],java.lang.String[],java.lang.String[])",
            "org.bouncycastle.x509.util.LDAPStoreHelper:java.util.List crossCertificatePairSubjectSearch(org.bouncycastle.x509.X509CertPairStoreSelector,java.lang.String[],java.lang.String[],java.lang.String[])"
        ]
    },
    "org.bouncycastle.ocsp.BasicOCSPResp:java.util.List getCertList(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.ocsp.BasicOCSPResp:java.security.cert.X509Certificate[] getCerts(java.lang.String)",
            "org.bouncycastle.ocsp.BasicOCSPResp:java.security.cert.CertStore getCertificates(java.lang.String,java.lang.String)"
        ]
    },
    "org.bouncycastle.ocsp.OCSPReq:java.util.List getCertList(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.ocsp.OCSPReq:java.security.cert.X509Certificate[] getCerts(java.lang.String)",
            "org.bouncycastle.ocsp.OCSPReq:java.security.cert.CertStore getCertificates(java.lang.String,java.lang.String)"
        ]
    },
    "org.bouncycastle.ocsp.OCSPReq:boolean verify(java.security.PublicKey,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.ocsp.OCSPReq:byte[] getEncoded()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.ocsp.OCSPReqGenerator:org.bouncycastle.ocsp.OCSPReq generateRequest(org.bouncycastle.asn1.DERObjectIdentifier,java.security.PrivateKey,java.security.cert.X509Certificate[],java.lang.String,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.ocsp.OCSPReqGenerator:org.bouncycastle.ocsp.OCSPReq generate()",
            "org.bouncycastle.ocsp.OCSPReqGenerator:org.bouncycastle.ocsp.OCSPReq generate(java.lang.String,java.security.PrivateKey,java.security.cert.X509Certificate[],java.lang.String,java.security.SecureRandom)"
        ]
    },
    "org.bouncycastle.asn1.ASN1Object:byte[] getEncoded(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(int,org.bouncycastle.asn1.ASN1EncodableVector)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.agreement.kdf.DHKEKGenerator:int generateBytes(byte[],int,int)",
            "org.bouncycastle.crypto.agreement.kdf.ECDHKEKGenerator:int generateBytes(byte[],int,int)",
            "org.bouncycastle.crypto.signers.DSADigestSigner:byte[] derEncode(java.math.BigInteger,java.math.BigInteger)",
            "org.bouncycastle.crypto.signers.RSADigestSigner:byte[] derEncode(byte[])",
            "org.bouncycastle.crypto.tls.Certificate:void encode(java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.CertificateRequest:void encode(java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.CertificateStatus:void encode(java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.OCSPStatusRequest:void encode(java.io.OutputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:org.bouncycastle.asn1.ASN1Primitive readDERObject(byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.dh.AlgorithmParametersSpi:byte[] engineGetEncoded()",
            "org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey:byte[] getEncoded()",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.AlgorithmParametersSpi:byte[] engineGetEncoded()",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner:byte[] derEncode(java.math.BigInteger,java.math.BigInteger)",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey:byte[] getEncoded()",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey:byte[] getEncoded()",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$StdDSAEncoder:byte[] encode(java.math.BigInteger,java.math.BigInteger)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:byte[] getEncoded()",
            "org.bouncycastle.jcajce.provider.asymmetric.elgamal.AlgorithmParametersSpi:byte[] engineGetEncoded()",
            "org.bouncycastle.jcajce.provider.asymmetric.elgamal.BCElGamalPrivateKey:byte[] getEncoded()",
            "org.bouncycastle.jcajce.provider.asymmetric.elgamal.BCElGamalPublicKey:byte[] getEncoded()",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.AlgorithmParametersSpi:byte[] engineGetEncoded()",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.BCGOST3410PrivateKey:byte[] getEncoded()",
            "org.bouncycastle.jcajce.provider.asymmetric.ies.AlgorithmParametersSpi:byte[] engineGetEncoded()",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.AlgorithmParametersSpi$OAEP:byte[] engineGetEncoded()",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.AlgorithmParametersSpi$PSS:byte[] engineGetEncoded()",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi:byte[] derEncode(byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedSubjectPublicKeyInfo(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLEntryObject:byte[] getEncoded()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:byte[] getEncoded()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:byte[] getTBSCertList()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getTBSCertificate()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getEncoded()",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void doStore(java.io.OutputStream,char[],boolean)",
            "org.bouncycastle.jcajce.provider.symmetric.PBEPBKDF2$AlgParams:byte[] engineGetEncoded()",
            "org.bouncycastle.jcajce.provider.symmetric.PBEPKCS12$AlgParams:byte[] engineGetEncoded()",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void <init>(java.lang.String,org.bouncycastle.asn1.x509.X509Name,java.security.PublicKey,org.bouncycastle.asn1.ASN1Set,java.security.PrivateKey,java.lang.String)",
            "org.bouncycastle.jce.PKCS10CertificationRequest:boolean verify(java.security.PublicKey,java.lang.String)",
            "org.bouncycastle.jce.PKCS10CertificationRequest:byte[] getEncoded()",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.X509Principal:byte[] getEncoded()",
            "org.bouncycastle.jce.netscape.NetscapeCertRequest:void sign(java.security.PrivateKey,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.JCEDHPrivateKey:byte[] getEncoded()",
            "org.bouncycastle.jce.provider.JCEECPrivateKey:byte[] getEncoded()",
            "org.bouncycastle.jce.provider.JDKDSAPrivateKey:byte[] getEncoded()",
            "org.bouncycastle.jce.provider.JDKDSAPublicKey:byte[] getEncoded()",
            "org.bouncycastle.jce.provider.X509CRLEntryObject:byte[] getEncoded()",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CRLObject:byte[] getEncoded()",
            "org.bouncycastle.jce.provider.X509CRLObject:byte[] getTBSCertList()",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getTBSCertificate()",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getEncoded()",
            "org.bouncycastle.ocsp.BasicOCSPResp:byte[] getExtensionValue(java.lang.String)",
            "org.bouncycastle.ocsp.BasicOCSPResp:boolean verify(java.security.PublicKey,java.lang.String)",
            "org.bouncycastle.ocsp.BasicOCSPRespGenerator:org.bouncycastle.ocsp.BasicOCSPResp generateResponse(java.lang.String,java.security.PrivateKey,java.security.cert.X509Certificate[],java.util.Date,java.lang.String,java.security.SecureRandom)",
            "org.bouncycastle.ocsp.OCSPReq:byte[] getExtensionValue(java.lang.String)",
            "org.bouncycastle.ocsp.Req:byte[] getExtensionValue(java.lang.String)",
            "org.bouncycastle.ocsp.RespData:byte[] getExtensionValue(java.lang.String)",
            "org.bouncycastle.ocsp.SingleResp:byte[] getExtensionValue(java.lang.String)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedSubjectPublicKeyInfo(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.x509.X509CertificatePair:byte[] getEncoded()",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509V2AttributeCertificate:byte[] getExtensionValue(java.lang.String)"
        ]
    },
    "org.bouncycastle.jce.PKCS12Util:byte[] convertToDefiniteLength(byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.tls.TlsExtensionsUtils:void addStatusRequestExtension(java.util.Hashtable,org.bouncycastle.crypto.tls.CertificateStatusRequest)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.tls.DTLSReliableHandshake:void resendOutboundFlight()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSReliableHandshake:org.bouncycastle.crypto.tls.DTLSReliableHandshake$Message receiveMessage()",
            "org.bouncycastle.crypto.tls.DTLSReliableHandshake:void access$400(org.bouncycastle.crypto.tls.DTLSReliableHandshake)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsExtensionsUtils:void addHeartbeatExtension(java.util.Hashtable,org.bouncycastle.crypto.tls.HeartbeatExtension)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.tls.TlsExtensionsUtils:void addServerNameExtension(java.util.Hashtable,org.bouncycastle.crypto.tls.ServerNameList)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.tls.TlsUtils:void addSignatureAlgorithmsExtension(java.util.Hashtable,java.util.Vector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.AbstractTlsClient:java.util.Hashtable getClientExtensions()"
        ]
    },
    "org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey:byte[] getEncoded()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.KeyFactory:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi:void encodeKey(java.security.Key,java.io.DataOutputStream)",
            "org.bouncycastle.jcajce.provider.symmetric.DES$KeyFactory:java.security.spec.KeySpec engineGetKeySpec(javax.crypto.SecretKey,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.symmetric.DESede$KeyFactory:java.security.spec.KeySpec engineGetKeySpec(javax.crypto.SecretKey,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineInit(java.security.Key,java.security.spec.AlgorithmParameterSpec)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseSecretKeyFactory:java.security.spec.KeySpec engineGetKeySpec(javax.crypto.SecretKey,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseSecretKeyFactory:javax.crypto.SecretKey engineTranslateKey(javax.crypto.SecretKey)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.PBE$Util:org.bouncycastle.crypto.CipherParameters makePBEParameters(org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey,java.security.spec.AlgorithmParameterSpec,java.lang.String)",
            "org.bouncycastle.jcajce.provider.symmetric.util.PBE$Util:org.bouncycastle.crypto.CipherParameters makePBEMacParameters(org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey,java.security.spec.AlgorithmParameterSpec)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.provider.BrokenPBE$Util:org.bouncycastle.crypto.CipherParameters makePBEParameters(org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey,java.security.spec.AlgorithmParameterSpec,int,int,java.lang.String,int,int)",
            "org.bouncycastle.jce.provider.BrokenPBE$Util:org.bouncycastle.crypto.CipherParameters makePBEMacParameters(org.bouncycastle.jcajce.provider.symmetric.util.BCPBEKey,java.security.spec.AlgorithmParameterSpec,int,int,int)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)"
        ]
    },
    "org.bouncycastle.jcajce.provider.symmetric.util.PBE$Util:byte[] convertPassword(int,javax.crypto.spec.PBEKeySpec)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.symmetric.util.PBE$Util:org.bouncycastle.crypto.CipherParameters makePBEParameters(javax.crypto.spec.PBEKeySpec,int,int,int,int)",
            "org.bouncycastle.jcajce.provider.symmetric.util.PBE$Util:org.bouncycastle.crypto.CipherParameters makePBEMacParameters(javax.crypto.spec.PBEKeySpec,int,int,int)"
        ]
    },
    "org.bouncycastle.crypto.agreement.jpake.JPAKEParticipant:java.math.BigInteger calculateKeyingMaterial()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.examples.JPAKEExample:void main(java.lang.String[])"
        ]
    },
    "org.bouncycastle.asn1.DERT61UTF8String:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.DERUTF8String:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.PKIFreeText:void <init>(java.lang.String)",
            "org.bouncycastle.asn1.cmp.PKIFreeText:void <init>(java.lang.String[])",
            "org.bouncycastle.asn1.esf.SignerLocation:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x500.DirectoryString:void <init>(java.lang.String)",
            "org.bouncycastle.asn1.x500.style.BCStyle:org.bouncycastle.asn1.ASN1Encodable stringToValue(org.bouncycastle.asn1.ASN1ObjectIdentifier,java.lang.String)",
            "org.bouncycastle.asn1.x500.style.RFC4519Style:org.bouncycastle.asn1.ASN1Encodable stringToValue(org.bouncycastle.asn1.ASN1ObjectIdentifier,java.lang.String)",
            "org.bouncycastle.asn1.x509.DisplayText:void <init>(int,java.lang.String)",
            "org.bouncycastle.asn1.x509.DisplayText:void <init>(java.lang.String)",
            "org.bouncycastle.asn1.x509.X509DefaultEntryConverter:org.bouncycastle.asn1.ASN1Primitive getConvertedValue(org.bouncycastle.asn1.ASN1ObjectIdentifier,java.lang.String)"
        ]
    },
    "org.bouncycastle.util.encoders.Base64:java.lang.String toBase64String(byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.util.io.pem.PemWriter:void writeEncoded(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.util.io.pem.PemWriter:void writeObject(org.bouncycastle.util.io.pem.PemObjectGenerator)"
        ]
    },
    "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String outputApplicationSpecific(java.lang.String,java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.String)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)"
        ]
    },
    "org.bouncycastle.util.encoders.Hex:java.lang.String toHexString(byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.ASN1OctetString:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.DistributionPointName:java.lang.String toString()",
            "org.bouncycastle.asn1.x509.GeneralName:java.lang.String toString()",
            "org.bouncycastle.asn1.x509.RoleSyntax:java.lang.String[] getRoleAuthorityAsString()",
            "org.bouncycastle.asn1.x509.X509Name:java.lang.String toString(boolean,java.util.Hashtable)",
            "org.bouncycastle.i18n.LocalizedMessage$FilteredArguments:java.lang.Object filter(int,java.lang.Object)",
            "org.bouncycastle.i18n.filter.TrustedInput:java.lang.String toString()",
            "org.bouncycastle.i18n.filter.UntrustedInput:java.lang.String getString()",
            "org.bouncycastle.i18n.filter.UntrustedInput:java.lang.String toString()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.CertPath engineGenerateCertPath(java.util.List)"
        ]
    },
    "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String outputApplicationSpecific(java.lang.String,java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)"
        ]
    },
    "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x500.style.BCStyle:int calcHashCode(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:void appendTypeAndValue(java.lang.StringBuffer,org.bouncycastle.asn1.x500.AttributeTypeAndValue,java.util.Hashtable)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:boolean atvAreEqual(org.bouncycastle.asn1.x500.AttributeTypeAndValue,org.bouncycastle.asn1.x500.AttributeTypeAndValue)",
            "org.bouncycastle.asn1.x500.style.RFC4519Style:int calcHashCode(org.bouncycastle.asn1.ASN1Encodable)"
        ]
    },
    "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.X509Name:org.bouncycastle.asn1.x509.X509Name getInstance(java.lang.Object)",
            "org.bouncycastle.jce.X509Principal:void <init>(byte[])",
            "org.bouncycastle.jce.X509Principal:void <init>(org.bouncycastle.asn1.x509.X509Name)",
            "org.bouncycastle.jce.X509Principal:void <init>(org.bouncycastle.asn1.x500.X500Name)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCertBC(java.security.cert.CertPath,int,org.bouncycastle.jce.provider.PKIXNameConstraintValidator)"
        ]
    },
    "org.bouncycastle.pqc.crypto.gmss.GMSSLeaf:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:java.lang.String toString(boolean,java.util.Hashtable)",
            "org.bouncycastle.i18n.LocalizedMessage$FilteredArguments:java.lang.Object filter(int,java.lang.Object)",
            "org.bouncycastle.i18n.filter.TrustedInput:java.lang.String toString()",
            "org.bouncycastle.i18n.filter.UntrustedInput:java.lang.String getString()",
            "org.bouncycastle.i18n.filter.UntrustedInput:java.lang.String toString()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.CertPath engineGenerateCertPath(java.util.List)"
        ]
    },
    "org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:java.lang.String toString(boolean,java.util.Hashtable)",
            "org.bouncycastle.i18n.LocalizedMessage$FilteredArguments:java.lang.Object filter(int,java.lang.Object)",
            "org.bouncycastle.i18n.filter.TrustedInput:java.lang.String toString()",
            "org.bouncycastle.i18n.filter.UntrustedInput:java.lang.String getString()",
            "org.bouncycastle.i18n.filter.UntrustedInput:java.lang.String toString()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.CertPath engineGenerateCertPath(java.util.List)"
        ]
    },
    "org.bouncycastle.pqc.crypto.gmss.GMSSRootSig:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:java.lang.String toString(boolean,java.util.Hashtable)",
            "org.bouncycastle.i18n.LocalizedMessage$FilteredArguments:java.lang.Object filter(int,java.lang.Object)",
            "org.bouncycastle.i18n.filter.TrustedInput:java.lang.String toString()",
            "org.bouncycastle.i18n.filter.UntrustedInput:java.lang.String getString()",
            "org.bouncycastle.i18n.filter.UntrustedInput:java.lang.String toString()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.CertPath engineGenerateCertPath(java.util.List)"
        ]
    },
    "org.bouncycastle.pqc.crypto.gmss.Treehash:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:java.lang.String toString(boolean,java.util.Hashtable)",
            "org.bouncycastle.i18n.LocalizedMessage$FilteredArguments:java.lang.Object filter(int,java.lang.Object)",
            "org.bouncycastle.i18n.filter.TrustedInput:java.lang.String toString()",
            "org.bouncycastle.i18n.filter.UntrustedInput:java.lang.String getString()",
            "org.bouncycastle.i18n.filter.UntrustedInput:java.lang.String toString()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.CertPath engineGenerateCertPath(java.util.List)"
        ]
    },
    "org.bouncycastle.pqc.jcajce.provider.gmss.BCGMSSPublicKey:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:java.lang.String toString(boolean,java.util.Hashtable)",
            "org.bouncycastle.i18n.LocalizedMessage$FilteredArguments:java.lang.Object filter(int,java.lang.Object)",
            "org.bouncycastle.i18n.filter.TrustedInput:java.lang.String toString()",
            "org.bouncycastle.i18n.filter.UntrustedInput:java.lang.String getString()",
            "org.bouncycastle.i18n.filter.UntrustedInput:java.lang.String toString()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.CertPath engineGenerateCertPath(java.util.List)"
        ]
    },
    "org.bouncycastle.util.io.pem.PemReader:org.bouncycastle.util.io.pem.PemObject readPemObject()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x9.X9ECParametersHolder:org.bouncycastle.asn1.x9.X9ECParameters getParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.sec.SECNamedCurves:org.bouncycastle.asn1.x9.X9ECParameters getByOID(org.bouncycastle.asn1.ASN1ObjectIdentifier)",
            "org.bouncycastle.asn1.teletrust.TeleTrusTNamedCurves:org.bouncycastle.asn1.x9.X9ECParameters getByOID(org.bouncycastle.asn1.ASN1ObjectIdentifier)",
            "org.bouncycastle.asn1.x9.X962NamedCurves:org.bouncycastle.asn1.x9.X9ECParameters getByOID(org.bouncycastle.asn1.ASN1ObjectIdentifier)"
        ]
    },
    "org.bouncycastle.asn1.sec.SECNamedCurves:java.math.BigInteger access$000(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.sec.SECNamedCurves$1:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.sec.SECNamedCurves$10:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.sec.SECNamedCurves$11:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.sec.SECNamedCurves$12:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.sec.SECNamedCurves$13:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.sec.SECNamedCurves$14:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.sec.SECNamedCurves$15:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.sec.SECNamedCurves$16:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.sec.SECNamedCurves$17:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.sec.SECNamedCurves$18:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.sec.SECNamedCurves$19:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.sec.SECNamedCurves$2:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.sec.SECNamedCurves$20:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.sec.SECNamedCurves$21:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.sec.SECNamedCurves$22:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.sec.SECNamedCurves$23:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.sec.SECNamedCurves$24:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.sec.SECNamedCurves$25:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.sec.SECNamedCurves$26:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.sec.SECNamedCurves$27:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.sec.SECNamedCurves$28:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.sec.SECNamedCurves$29:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.sec.SECNamedCurves$3:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.sec.SECNamedCurves$30:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.sec.SECNamedCurves$31:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.sec.SECNamedCurves$32:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.sec.SECNamedCurves$33:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.sec.SECNamedCurves$4:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.sec.SECNamedCurves$5:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.sec.SECNamedCurves$6:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.sec.SECNamedCurves$7:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.sec.SECNamedCurves$8:org.bouncycastle.asn1.x9.X9ECParameters createParameters()",
            "org.bouncycastle.asn1.sec.SECNamedCurves$9:org.bouncycastle.asn1.x9.X9ECParameters createParameters()"
        ]
    },
    "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String canonicalize(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x500.style.BCStyle:int calcHashCode(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:boolean atvAreEqual(org.bouncycastle.asn1.x500.AttributeTypeAndValue,org.bouncycastle.asn1.x500.AttributeTypeAndValue)",
            "org.bouncycastle.asn1.x500.style.RFC4519Style:int calcHashCode(org.bouncycastle.asn1.ASN1Encodable)"
        ]
    },
    "org.bouncycastle.asn1.x509.X509Name:java.lang.String canonicalize(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.X509Name:int hashCode()",
            "org.bouncycastle.asn1.x509.X509Name:boolean equivalentStrings(java.lang.String,java.lang.String)"
        ]
    },
    "org.bouncycastle.crypto.agreement.DHStandardGroups:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.agreement.DHStandardGroups:void <clinit>()",
            "org.bouncycastle.crypto.tls.DefaultTlsServer:org.bouncycastle.crypto.params.DHParameters getDHParameters()"
        ]
    },
    "org.bouncycastle.apache.bzip2.CBZip2InputStream:void setupBlock()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2InputStream:void <init>(java.io.InputStream)",
            "org.bouncycastle.apache.bzip2.CBZip2InputStream:void setupRandPartA()",
            "org.bouncycastle.apache.bzip2.CBZip2InputStream:void setupNoRandPartA()"
        ]
    },
    "org.bouncycastle.apache.bzip2.CBZip2InputStream:void setupRandPartB()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2InputStream:int read()"
        ]
    },
    "org.bouncycastle.apache.bzip2.CBZip2InputStream:void setupRandPartC()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2InputStream:int read()",
            "org.bouncycastle.apache.bzip2.CBZip2InputStream:void setupRandPartB()"
        ]
    },
    "org.bouncycastle.apache.bzip2.CBZip2InputStream:void setupNoRandPartB()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2InputStream:int read()"
        ]
    },
    "org.bouncycastle.apache.bzip2.CBZip2InputStream:void setupNoRandPartC()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2InputStream:int read()",
            "org.bouncycastle.apache.bzip2.CBZip2InputStream:void setupNoRandPartB()"
        ]
    },
    "org.bouncycastle.asn1.ASN1InputStream:org.bouncycastle.asn1.ASN1EncodableVector buildDEREncodableVector(org.bouncycastle.asn1.DefiniteLengthInputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1InputStream:org.bouncycastle.asn1.ASN1Primitive buildObject(int,int,int)"
        ]
    },
    "org.bouncycastle.asn1.ASN1Null:org.bouncycastle.asn1.ASN1Null getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Null:org.bouncycastle.asn1.ASN1Null getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBMPString:org.bouncycastle.asn1.DERBMPString getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.DERInteger:org.bouncycastle.asn1.ASN1Integer getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.DERNumericString:org.bouncycastle.asn1.DERNumericString getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.DERPrintableString:org.bouncycastle.asn1.DERPrintableString getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.DERT61String:org.bouncycastle.asn1.DERT61String getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.DERT61UTF8String:org.bouncycastle.asn1.DERT61UTF8String getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.DERUTF8String:org.bouncycastle.asn1.DERUTF8String getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.DERVisibleString:org.bouncycastle.asn1.DERVisibleString getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.cmp.CertResponse:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.CertStatus:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.Challenge:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.PBMParameter:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CCMParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.DigestedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.GCMParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.RecipientKeyIdentifier:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.SignerInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.TimeStampedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherHashAlgAndValue:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentIdentifier:org.bouncycastle.asn1.ess.ContentIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ess.ESSCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.icao.DataGroupHash:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.isismtt.ocsp.CertHash:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.isismtt.x509.ProfessionInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.EncryptedPrivateKeyInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.SignerInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.tsp.MessageImprint:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ua.DSTU4145ECBinary:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ua.DSTU4145Params:org.bouncycastle.asn1.ua.DSTU4145Params getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ua.DSTU4145PublicKey:org.bouncycastle.asn1.ua.DSTU4145PublicKey getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.DigestInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.Extension:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.SubjectKeyIdentifier:org.bouncycastle.asn1.x509.SubjectKeyIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.X509Extensions:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.qualified.BiometricData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpiLe:byte[] engineSign()",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.BCGOST3410PrivateKey:void <init>(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.AlgorithmParametersSpi$OAEP:void engineInit(byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:boolean isIndirectCRL(java.security.cert.X509CRL)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:java.util.Collection getAlternativeNames(byte[])",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:javax.crypto.Cipher createCipher(int,char[],org.bouncycastle.asn1.x509.AlgorithmIdentifier)",
            "org.bouncycastle.jce.PKCS12Util:byte[] convertToDefiniteLength(byte[],char[],java.lang.String)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectIP(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.X509CRLObject:boolean isIndirectCRL(java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CertificateObject:java.util.Collection getAlternativeNames(byte[])",
            "org.bouncycastle.pqc.asn1.GMSSPublicKey:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.pqc.asn1.RainbowPublicKey:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.cmp.CAKeyUpdAnnContent:org.bouncycastle.asn1.'cmp'.CAKeyUpdAnnContent getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cmp.CRLAnnContent:org.bouncycastle.asn1.'cmp'.CRLAnnContent getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cmp.CertConfirmContent:org.bouncycastle.asn1.'cmp'.CertConfirmContent getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cmp.CertRepMessage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.CertRepMessage:org.bouncycastle.asn1.'cmp'.CertRepMessage getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cmp.CertResponse:org.bouncycastle.asn1.'cmp'.CertResponse getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cmp.CertStatus:org.bouncycastle.asn1.'cmp'.CertStatus getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cmp.CertifiedKeyPair:org.bouncycastle.asn1.'cmp'.CertifiedKeyPair getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cmp.Challenge:org.bouncycastle.asn1.'cmp'.Challenge getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cmp.ErrorMsgContent:org.bouncycastle.asn1.'cmp'.ErrorMsgContent getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cmp.GenMsgContent:org.bouncycastle.asn1.'cmp'.GenMsgContent getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cmp.GenRepContent:org.bouncycastle.asn1.'cmp'.GenRepContent getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cmp.InfoTypeAndValue:org.bouncycastle.asn1.'cmp'.InfoTypeAndValue getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cmp.KeyRecRepContent:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.KeyRecRepContent:org.bouncycastle.asn1.'cmp'.KeyRecRepContent getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cmp.OOBCertHash:org.bouncycastle.asn1.'cmp'.OOBCertHash getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cmp.PBMParameter:org.bouncycastle.asn1.'cmp'.PBMParameter getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cmp.PKIFreeText:org.bouncycastle.asn1.'cmp'.PKIFreeText getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cmp.PKIHeader:org.bouncycastle.asn1.'cmp'.PKIHeader getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cmp.PKIMessage:org.bouncycastle.asn1.'cmp'.PKIMessage getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cmp.PKIMessages:org.bouncycastle.asn1.'cmp'.PKIMessages getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cmp.PKIStatusInfo:org.bouncycastle.asn1.'cmp'.PKIStatusInfo getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cmp.POPODecKeyChallContent:org.bouncycastle.asn1.'cmp'.POPODecKeyChallContent getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cmp.POPODecKeyRespContent:org.bouncycastle.asn1.'cmp'.POPODecKeyRespContent getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cmp.PollRepContent:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.PollRepContent:org.bouncycastle.asn1.'cmp'.PollRepContent getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cmp.PollReqContent:org.bouncycastle.asn1.'cmp'.PollReqContent getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cmp.ProtectedPart:org.bouncycastle.asn1.'cmp'.ProtectedPart getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cmp.RevAnnContent:org.bouncycastle.asn1.'cmp'.RevAnnContent getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cmp.RevDetails:org.bouncycastle.asn1.'cmp'.RevDetails getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cmp.RevRepContent:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.RevRepContent:org.bouncycastle.asn1.'cmp'.RevRepContent getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cmp.RevReqContent:org.bouncycastle.asn1.'cmp'.RevReqContent getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cms.Attribute:org.bouncycastle.asn1.cms.Attribute getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cms.CCMParameters:org.bouncycastle.asn1.cms.CCMParameters getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cms.CompressedData:org.bouncycastle.asn1.cms.CompressedData getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cms.ContentInfo:org.bouncycastle.asn1.cms.ContentInfo getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cms.DigestedData:org.bouncycastle.asn1.cms.DigestedData getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfo:org.bouncycastle.asn1.cms.EncryptedContentInfo getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cms.EncryptedData:org.bouncycastle.asn1.cms.EncryptedData getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cms.EnvelopedData:org.bouncycastle.asn1.cms.EnvelopedData getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cms.GCMParameters:org.bouncycastle.asn1.cms.GCMParameters getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cms.IssuerAndSerialNumber:org.bouncycastle.asn1.cms.IssuerAndSerialNumber getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cms.KEKRecipientInfo:org.bouncycastle.asn1.cms.KEKRecipientInfo getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cms.KeyAgreeRecipientInfo:org.bouncycastle.asn1.cms.KeyAgreeRecipientInfo getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cms.KeyTransRecipientInfo:org.bouncycastle.asn1.cms.KeyTransRecipientInfo getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cms.MetaData:org.bouncycastle.asn1.cms.MetaData getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cms.OriginatorInfo:org.bouncycastle.asn1.cms.OriginatorInfo getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cms.OriginatorPublicKey:org.bouncycastle.asn1.cms.OriginatorPublicKey getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cms.OtherKeyAttribute:org.bouncycastle.asn1.cms.OtherKeyAttribute getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cms.OtherRecipientInfo:org.bouncycastle.asn1.cms.OtherRecipientInfo getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cms.OtherRevocationInfoFormat:org.bouncycastle.asn1.cms.OtherRevocationInfoFormat getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cms.PasswordRecipientInfo:org.bouncycastle.asn1.cms.PasswordRecipientInfo getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cms.RecipientEncryptedKey:org.bouncycastle.asn1.cms.RecipientEncryptedKey getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cms.RecipientKeyIdentifier:org.bouncycastle.asn1.cms.RecipientKeyIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cms.SCVPReqRes:org.bouncycastle.asn1.cms.SCVPReqRes getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cms.SignedData:org.bouncycastle.asn1.cms.SignedData getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cms.SignerInfo:org.bouncycastle.asn1.cms.SignerInfo getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cms.TimeStampAndCRL:org.bouncycastle.asn1.cms.TimeStampAndCRL getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cms.TimeStampTokenEvidence:org.bouncycastle.asn1.cms.TimeStampTokenEvidence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cms.TimeStampedData:org.bouncycastle.asn1.cms.TimeStampedData getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.crmf.AttributeTypeAndValue:org.bouncycastle.asn1.crmf.AttributeTypeAndValue getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.crmf.CertId:org.bouncycastle.asn1.crmf.CertId getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.crmf.CertReqMessages:org.bouncycastle.asn1.crmf.CertReqMessages getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.crmf.CertReqMsg:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.crmf.CertReqMsg:org.bouncycastle.asn1.crmf.CertReqMsg getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.crmf.CertRequest:org.bouncycastle.asn1.crmf.CertRequest getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.crmf.CertTemplate:org.bouncycastle.asn1.crmf.CertTemplate getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.crmf.Controls:org.bouncycastle.asn1.crmf.Controls getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.crmf.EncKeyWithID:org.bouncycastle.asn1.crmf.EncKeyWithID getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.crmf.EncryptedValue:org.bouncycastle.asn1.crmf.EncryptedValue getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.crmf.OptionalValidity:org.bouncycastle.asn1.crmf.OptionalValidity getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.crmf.PKIPublicationInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.crmf.PKIPublicationInfo:org.bouncycastle.asn1.crmf.PKIPublicationInfo getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.crmf.PKMACValue:org.bouncycastle.asn1.crmf.PKMACValue getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.crmf.POPOSigningKey:org.bouncycastle.asn1.crmf.POPOSigningKey getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.crmf.POPOSigningKeyInput:org.bouncycastle.asn1.crmf.POPOSigningKeyInput getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.crmf.SinglePubInfo:org.bouncycastle.asn1.crmf.SinglePubInfo getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cryptopro.GOST28147Parameters:org.bouncycastle.asn1.cryptopro.GOST28147Parameters getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cryptopro.GOST3410PublicKeyAlgParameters:org.bouncycastle.asn1.cryptopro.GOST3410PublicKeyAlgParameters getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.dvcs.DVCSCertInfo:org.bouncycastle.asn1.dvcs.DVCSCertInfo getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.dvcs.DVCSErrorNotice:org.bouncycastle.asn1.dvcs.DVCSErrorNotice getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.dvcs.DVCSRequest:org.bouncycastle.asn1.dvcs.DVCSRequest getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.dvcs.DVCSRequestInformation:org.bouncycastle.asn1.dvcs.DVCSRequestInformation getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.dvcs.PathProcInput:org.bouncycastle.asn1.dvcs.PathProcInput getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.dvcs.TargetEtcChain:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.dvcs.TargetEtcChain:org.bouncycastle.asn1.dvcs.TargetEtcChain getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.eac.CVCertificateRequest:void <init>(org.bouncycastle.asn1.DERApplicationSpecific)",
            "org.bouncycastle.asn1.eac.CVCertificateRequest:void initCertBody(org.bouncycastle.asn1.DERApplicationSpecific)",
            "org.bouncycastle.asn1.eac.PublicKeyDataObject:org.bouncycastle.asn1.eac.PublicKeyDataObject getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.esf.CommitmentTypeIndication:org.bouncycastle.asn1.esf.CommitmentTypeIndication getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.esf.CommitmentTypeQualifier:org.bouncycastle.asn1.esf.CommitmentTypeQualifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.esf.CompleteRevocationRefs:org.bouncycastle.asn1.esf.CompleteRevocationRefs getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.esf.CrlIdentifier:org.bouncycastle.asn1.esf.CrlIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.esf.CrlListID:org.bouncycastle.asn1.esf.CrlListID getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.esf.CrlOcspRef:org.bouncycastle.asn1.esf.CrlOcspRef getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.esf.CrlValidatedID:org.bouncycastle.asn1.esf.CrlValidatedID getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.esf.OcspIdentifier:org.bouncycastle.asn1.esf.OcspIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.esf.OcspListID:org.bouncycastle.asn1.esf.OcspListID getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.esf.OcspResponsesID:org.bouncycastle.asn1.esf.OcspResponsesID getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.esf.OtherHashAlgAndValue:org.bouncycastle.asn1.esf.OtherHashAlgAndValue getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.esf.OtherRevRefs:org.bouncycastle.asn1.esf.OtherRevRefs getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.esf.OtherRevVals:org.bouncycastle.asn1.esf.OtherRevVals getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.esf.RevocationValues:org.bouncycastle.asn1.esf.RevocationValues getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.esf.SPUserNotice:org.bouncycastle.asn1.esf.SPUserNotice getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.esf.SigPolicyQualifierInfo:org.bouncycastle.asn1.esf.SigPolicyQualifierInfo getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.esf.SigPolicyQualifiers:org.bouncycastle.asn1.esf.SigPolicyQualifiers getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.esf.SignaturePolicyId:org.bouncycastle.asn1.esf.SignaturePolicyId getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.esf.SignerAttribute:org.bouncycastle.asn1.esf.SignerAttribute getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.esf.SignerLocation:void <init>(org.bouncycastle.asn1.DERUTF8String,org.bouncycastle.asn1.DERUTF8String,org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.SignerLocation:org.bouncycastle.asn1.esf.SignerLocation getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ess.ContentHints:org.bouncycastle.asn1.ess.ContentHints getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ess.ESSCertID:org.bouncycastle.asn1.ess.ESSCertID getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:org.bouncycastle.asn1.ess.ESSCertIDv2 getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.ess.OtherCertID getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ess.OtherSigningCertificate:org.bouncycastle.asn1.ess.OtherSigningCertificate getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ess.OtherSigningCertificate:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.SigningCertificate:org.bouncycastle.asn1.ess.SigningCertificate getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ess.SigningCertificate:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.SigningCertificateV2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.icao.CscaMasterList:org.bouncycastle.asn1.icao.CscaMasterList getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.icao.DataGroupHash:org.bouncycastle.asn1.icao.DataGroupHash getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.icao.LDSSecurityObject:org.bouncycastle.asn1.icao.LDSSecurityObject getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.icao.LDSSecurityObject:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.icao.LDSVersionInfo:org.bouncycastle.asn1.icao.LDSVersionInfo getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.isismtt.x509.AdmissionSyntax:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.isismtt.x509.Admissions:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.isismtt.x509.MonetaryLimit:org.bouncycastle.asn1.isismtt.x509.MonetaryLimit getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.isismtt.x509.ProfessionInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.misc.CAST5CBCParameters:org.bouncycastle.asn1.misc.CAST5CBCParameters getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.misc.IDEACBCPar:org.bouncycastle.asn1.misc.IDEACBCPar getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.mozilla.PublicKeyAndChallenge:org.bouncycastle.asn1.mozilla.PublicKeyAndChallenge getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ocsp.BasicOCSPResponse:org.bouncycastle.asn1.ocsp.BasicOCSPResponse getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ocsp.CertID:org.bouncycastle.asn1.ocsp.CertID getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ocsp.CrlID:org.bouncycastle.asn1.ocsp.CrlID getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ocsp.OCSPRequest:org.bouncycastle.asn1.ocsp.OCSPRequest getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ocsp.OCSPResponse:org.bouncycastle.asn1.ocsp.OCSPResponse getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ocsp.Request:org.bouncycastle.asn1.ocsp.Request getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ocsp.ResponseData:org.bouncycastle.asn1.ocsp.ResponseData getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ocsp.RevokedInfo:org.bouncycastle.asn1.ocsp.RevokedInfo getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ocsp.Signature:org.bouncycastle.asn1.ocsp.Signature getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ocsp.SingleResponse:org.bouncycastle.asn1.ocsp.SingleResponse getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ocsp.TBSRequest:org.bouncycastle.asn1.ocsp.TBSRequest getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.pkcs.AuthenticatedSafe:org.bouncycastle.asn1.pkcs.AuthenticatedSafe getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.pkcs.CRLBag:org.bouncycastle.asn1.pkcs.CRLBag getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.pkcs.CertBag:org.bouncycastle.asn1.pkcs.CertBag getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.pkcs.CertificationRequest:org.bouncycastle.asn1.pkcs.CertificationRequest getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.pkcs.CertificationRequestInfo:org.bouncycastle.asn1.pkcs.CertificationRequestInfo getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.pkcs.ContentInfo:org.bouncycastle.asn1.pkcs.ContentInfo getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.pkcs.DHParameter:org.bouncycastle.asn1.pkcs.DHParameter getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.pkcs.EncryptedData:org.bouncycastle.asn1.pkcs.EncryptedData getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.pkcs.EncryptedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.EncryptedPrivateKeyInfo:org.bouncycastle.asn1.pkcs.EncryptedPrivateKeyInfo getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.pkcs.EncryptionScheme:org.bouncycastle.asn1.pkcs.EncryptionScheme getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.pkcs.IssuerAndSerialNumber:org.bouncycastle.asn1.pkcs.IssuerAndSerialNumber getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.pkcs.KeyDerivationFunc:org.bouncycastle.asn1.pkcs.KeyDerivationFunc getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.pkcs.MacData:org.bouncycastle.asn1.pkcs.MacData getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.pkcs.PBEParameter:org.bouncycastle.asn1.pkcs.PBEParameter getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:org.bouncycastle.asn1.pkcs.PBES2Parameters getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PBKDF2Params:org.bouncycastle.asn1.pkcs.PBKDF2Params getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.pkcs.PKCS12PBEParams:org.bouncycastle.asn1.pkcs.PKCS12PBEParams getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.pkcs.Pfx:org.bouncycastle.asn1.pkcs.Pfx getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.pkcs.PrivateKeyInfo getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.pkcs.RC2CBCParameter:org.bouncycastle.asn1.pkcs.RC2CBCParameter getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.pkcs.RSAESOAEPparams:org.bouncycastle.asn1.pkcs.RSAESOAEPparams getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.pkcs.RSAPrivateKey:org.bouncycastle.asn1.pkcs.RSAPrivateKey getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.pkcs.RSAPublicKey:org.bouncycastle.asn1.pkcs.RSAPublicKey getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.pkcs.RSASSAPSSparams:org.bouncycastle.asn1.pkcs.RSASSAPSSparams getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.pkcs.SafeBag:org.bouncycastle.asn1.pkcs.SafeBag getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.pkcs.SignedData:org.bouncycastle.asn1.pkcs.SignedData getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.sec.ECPrivateKey:org.bouncycastle.asn1.sec.ECPrivateKey getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.tsp.Accuracy:org.bouncycastle.asn1.tsp.Accuracy getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.tsp.MessageImprint:org.bouncycastle.asn1.tsp.MessageImprint getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.tsp.TSTInfo:org.bouncycastle.asn1.tsp.TSTInfo getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.tsp.TimeStampReq:org.bouncycastle.asn1.tsp.TimeStampReq getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.tsp.TimeStampResp:org.bouncycastle.asn1.tsp.TimeStampResp getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ua.DSTU4145BinaryField:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ua.DSTU4145BinaryField:org.bouncycastle.asn1.ua.DSTU4145BinaryField getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ua.DSTU4145ECBinary:org.bouncycastle.asn1.ua.DSTU4145ECBinary getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ua.DSTU4145Params:org.bouncycastle.asn1.ua.DSTU4145Params getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String outputApplicationSpecific(java.lang.String,java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.String)",
            "org.bouncycastle.asn1.x500.AttributeTypeAndValue:org.bouncycastle.asn1.x500.AttributeTypeAndValue getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x500.X500Name:org.bouncycastle.asn1.x500.X500Name getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x500.X500Name:org.bouncycastle.asn1.x500.X500Name getInstance(org.bouncycastle.asn1.x500.X500NameStyle,java.lang.Object)",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.AccessDescription:org.bouncycastle.asn1.x509.AccessDescription getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.AlgorithmIdentifier:org.bouncycastle.asn1.x509.AlgorithmIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.AttCertValidityPeriod:org.bouncycastle.asn1.x509.AttCertValidityPeriod getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.Attribute:org.bouncycastle.asn1.x509.Attribute getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.AttributeCertificate:org.bouncycastle.asn1.x509.AttributeCertificate getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.AttributeCertificateInfo:org.bouncycastle.asn1.x509.AttributeCertificateInfo getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.AttributeCertificateInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.AuthorityInformationAccess:org.bouncycastle.asn1.x509.AuthorityInformationAccess getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.AuthorityKeyIdentifier:org.bouncycastle.asn1.x509.AuthorityKeyIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.BasicConstraints:org.bouncycastle.asn1.x509.BasicConstraints getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.CRLDistPoint:org.bouncycastle.asn1.x509.CRLDistPoint getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.Certificate:org.bouncycastle.asn1.x509.Certificate getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.CertificateList:org.bouncycastle.asn1.x509.CertificateList getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.CertificatePolicies:org.bouncycastle.asn1.x509.CertificatePolicies getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.DSAParameter:org.bouncycastle.asn1.x509.DSAParameter getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.DigestInfo:org.bouncycastle.asn1.x509.DigestInfo getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:org.bouncycastle.asn1.x509.ExtendedKeyUsage getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.Extension:org.bouncycastle.asn1.x509.Extension getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.Extensions:org.bouncycastle.asn1.x509.Extensions getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.GeneralNames:org.bouncycastle.asn1.x509.GeneralNames getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.GeneralSubtree:org.bouncycastle.asn1.x509.GeneralSubtree getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.Holder:org.bouncycastle.asn1.x509.Holder getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.IetfAttrSyntax:org.bouncycastle.asn1.x509.IetfAttrSyntax getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.IssuerSerial:org.bouncycastle.asn1.x509.IssuerSerial getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.IssuingDistributionPoint:org.bouncycastle.asn1.x509.IssuingDistributionPoint getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.NameConstraints:org.bouncycastle.asn1.x509.NameConstraints getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.NoticeReference:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.NoticeReference:org.bouncycastle.asn1.x509.NoticeReference getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.ObjectDigestInfo:org.bouncycastle.asn1.x509.ObjectDigestInfo getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.PolicyConstraints:org.bouncycastle.asn1.x509.PolicyConstraints getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.PolicyInformation:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.PolicyInformation:org.bouncycastle.asn1.x509.PolicyInformation getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.PolicyMappings:org.bouncycastle.asn1.x509.PolicyMappings getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.PolicyQualifierInfo:org.bouncycastle.asn1.x509.PolicyQualifierInfo getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.PrivateKeyUsagePeriod:org.bouncycastle.asn1.x509.PrivateKeyUsagePeriod getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.RoleSyntax:org.bouncycastle.asn1.x509.RoleSyntax getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.SubjectDirectoryAttributes:org.bouncycastle.asn1.x509.SubjectDirectoryAttributes getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.SubjectDirectoryAttributes:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.SubjectPublicKeyInfo:org.bouncycastle.asn1.x509.SubjectPublicKeyInfo getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.TBSCertList$CRLEntry:org.bouncycastle.asn1.x509.TBSCertList$CRLEntry getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.TBSCertList:org.bouncycastle.asn1.x509.TBSCertList getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.TBSCertList:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.TBSCertificate:org.bouncycastle.asn1.x509.TBSCertificate getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.TBSCertificateStructure:org.bouncycastle.asn1.x509.TBSCertificateStructure getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.TargetInformation:org.bouncycastle.asn1.x509.TargetInformation getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.Targets:org.bouncycastle.asn1.x509.Targets getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.UserNotice:org.bouncycastle.asn1.x509.UserNotice getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.V2Form:org.bouncycastle.asn1.x509.V2Form getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.X509CertificateStructure:org.bouncycastle.asn1.x509.X509CertificateStructure getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.X509Extensions:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:org.bouncycastle.asn1.x509.X509Name getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.qualified.BiometricData:org.bouncycastle.asn1.x509.qualified.BiometricData getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.MonetaryValue:org.bouncycastle.asn1.x509.qualified.MonetaryValue getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.QCStatement:org.bouncycastle.asn1.x509.qualified.QCStatement getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.SemanticsInformation:org.bouncycastle.asn1.x509.qualified.SemanticsInformation getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.SemanticsInformation:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.sigi.NameOrPseudonym:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9Curve:void <init>(org.bouncycastle.asn1.x9.X9FieldID,org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9ECParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9ECParameters:org.bouncycastle.asn1.x9.X9ECParameters getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x9.X9FieldID:org.bouncycastle.asn1.x9.X9FieldID getInstance(java.lang.Object)",
            "org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey:void <init>(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey:void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PEMUtil:org.bouncycastle.asn1.ASN1Sequence readPEMObject(java.io.InputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:java.util.Collection getAlternativeNames(byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:java.lang.String getSignatureName(org.bouncycastle.asn1.x509.AlgorithmIdentifier)",
            "org.bouncycastle.jce.X509Principal:org.bouncycastle.asn1.ASN1Sequence readSequence(org.bouncycastle.asn1.ASN1InputStream)",
            "org.bouncycastle.jce.netscape.NetscapeCertRequest:org.bouncycastle.asn1.ASN1Sequence getReq(byte[])",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void prepareNextCertB1(int,java.util.List[],java.lang.String,java.util.Map,java.security.cert.X509Certificate)",
            "org.bouncycastle.jce.provider.JCEDHPrivateKey:void <init>(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jce.provider.JCEDHPublicKey:void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:org.bouncycastle.jce.provider.PKIXPolicyNode prepareCertB(java.security.cert.CertPath,int,java.util.List[],org.bouncycastle.jce.provider.PKIXPolicyNode,int)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void prepareNextCertA(java.security.cert.CertPath,int)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:org.bouncycastle.jce.provider.PKIXPolicyNode processCertE(java.security.cert.CertPath,int,org.bouncycastle.jce.provider.PKIXPolicyNode)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCertBC(java.security.cert.CertPath,int,org.bouncycastle.jce.provider.PKIXNameConstraintValidator)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:org.bouncycastle.jce.provider.PKIXPolicyNode processCertD(java.security.cert.CertPath,int,java.util.Set,org.bouncycastle.jce.provider.PKIXPolicyNode,java.util.List[],int)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:int prepareNextCertI1(java.security.cert.CertPath,int,int)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:int prepareNextCertI2(java.security.cert.CertPath,int,int)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void prepareNextCertG(java.security.cert.CertPath,int,org.bouncycastle.jce.provider.PKIXNameConstraintValidator)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:int wrapupCertB(java.security.cert.CertPath,int,int)",
            "org.bouncycastle.jce.provider.X509CertificateObject:java.util.Collection getAlternativeNames(byte[])",
            "org.bouncycastle.jce.provider.X509SignatureUtil:java.lang.String getSignatureName(org.bouncycastle.asn1.x509.AlgorithmIdentifier)",
            "org.bouncycastle.pqc.asn1.GMSSPublicKey:org.bouncycastle.pqc.asn1.GMSSPublicKey getInstance(java.lang.Object)",
            "org.bouncycastle.pqc.asn1.McElieceCCA2PrivateKey:org.bouncycastle.pqc.asn1.McElieceCCA2PrivateKey getInstance(java.lang.Object)",
            "org.bouncycastle.pqc.asn1.McElieceCCA2PublicKey:org.bouncycastle.pqc.asn1.McElieceCCA2PublicKey getInstance(java.lang.Object)",
            "org.bouncycastle.pqc.asn1.McEliecePrivateKey:org.bouncycastle.pqc.asn1.McEliecePrivateKey getInstance(java.lang.Object)",
            "org.bouncycastle.pqc.asn1.McEliecePublicKey:org.bouncycastle.pqc.asn1.McEliecePublicKey getInstance(java.lang.Object)",
            "org.bouncycastle.pqc.asn1.ParSet:org.bouncycastle.pqc.asn1.ParSet getInstance(java.lang.Object)",
            "org.bouncycastle.pqc.asn1.RainbowPrivateKey:org.bouncycastle.pqc.asn1.RainbowPrivateKey getInstance(java.lang.Object)",
            "org.bouncycastle.pqc.asn1.RainbowPublicKey:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.pqc.asn1.RainbowPublicKey:org.bouncycastle.pqc.asn1.RainbowPublicKey getInstance(java.lang.Object)",
            "org.bouncycastle.x509.X509V2CRLGenerator:void addCRL(java.security.cert.X509CRL)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cms.AttributeTable:void <init>(org.bouncycastle.asn1.cms.Attributes)",
            "org.bouncycastle.asn1.cms.Attributes:org.bouncycastle.asn1.cms.Attributes getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthenticatedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.EncryptedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.EnvelopedData:void <init>(org.bouncycastle.asn1.cms.OriginatorInfo,org.bouncycastle.asn1.ASN1Set,org.bouncycastle.asn1.cms.EncryptedContentInfo,org.bouncycastle.asn1.cms.Attributes)",
            "org.bouncycastle.asn1.cms.EnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.SignerInfo:void <init>(org.bouncycastle.asn1.cms.SignerIdentifier,org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.cms.Attributes,org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1OctetString,org.bouncycastle.asn1.cms.Attributes)",
            "org.bouncycastle.asn1.icao.CscaMasterList:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x500.RDN:org.bouncycastle.asn1.x500.RDN getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.Attribute:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1TaggedObject getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1TaggedObject getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cmp.CertifiedKeyPair:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.KeyRecRepContent:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.RevRepContent:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.Evidence:org.bouncycastle.asn1.cms.Evidence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cms.SCVPReqRes:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.SignedData:org.bouncycastle.asn1.ASN1Integer calculateVersion(org.bouncycastle.asn1.ASN1ObjectIdentifier,org.bouncycastle.asn1.ASN1Set,org.bouncycastle.asn1.ASN1Set,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.crmf.POPOPrivKey:org.bouncycastle.asn1.crmf.POPOPrivKey getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.dvcs.DVCSCertInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.dvcs.DVCSRequestInformation:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.dvcs.DVCSResponse:org.bouncycastle.asn1.dvcs.DVCSResponse getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.dvcs.PathProcInput:org.bouncycastle.asn1.dvcs.PathProcInput getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.dvcs.TargetEtcChain:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.eac.UnsignedInteger:org.bouncycastle.asn1.eac.UnsignedInteger getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.esf.SignerAttribute:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.isismtt.x509.ProcurationSyntax:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.EncryptedData:org.bouncycastle.asn1.ASN1OctetString getContent()",
            "org.bouncycastle.asn1.x509.AuthorityKeyIdentifier:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.CertificatePair:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.DistributionPoint:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.GeneralSubtree:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.Holder:org.bouncycastle.asn1.x509.Holder getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.Holder:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.IssuingDistributionPoint:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.NameConstraints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.PolicyConstraints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.RoleSyntax:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.V2Form:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.sigi.PersonalData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:int prepareNextCertI1(java.security.cert.CertPath,int,int)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:int prepareNextCertI2(java.security.cert.CertPath,int,int)"
        ]
    },
    "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.eac.CVCertificate:org.bouncycastle.asn1.eac.CVCertificate getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.eac.CVCertificateRequest:void <init>(org.bouncycastle.asn1.DERApplicationSpecific)",
            "org.bouncycastle.asn1.eac.CVCertificateRequest:void initCertBody(org.bouncycastle.asn1.DERApplicationSpecific)",
            "org.bouncycastle.asn1.eac.CVCertificateRequest:org.bouncycastle.asn1.eac.CVCertificateRequest getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.eac.CertificateBody:org.bouncycastle.asn1.eac.CertificateBody getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.DERBMPString:org.bouncycastle.asn1.DERBMPString getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.DERBMPString:org.bouncycastle.asn1.DERBMPString getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)"
        ]
    },
    "org.bouncycastle.asn1.DEREnumerated:org.bouncycastle.asn1.ASN1Enumerated getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.DEREnumerated:org.bouncycastle.asn1.ASN1Enumerated getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.dvcs.ServiceType:org.bouncycastle.asn1.dvcs.ServiceType getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ocsp.OCSPResponseStatus:org.bouncycastle.asn1.ocsp.OCSPResponseStatus getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.CRLReason:org.bouncycastle.asn1.x509.CRLReason getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.ObjectDigestInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLEntryObject:java.lang.String toString()",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCertStatus(java.util.Date,java.security.cert.X509CRL,java.lang.Object,org.bouncycastle.jce.provider.CertStatus)",
            "org.bouncycastle.jce.provider.X509CRLEntryObject:java.lang.String toString()",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkCRLs(java.security.cert.PKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,java.util.Vector,int)"
        ]
    },
    "org.bouncycastle.asn1.DERGeneralString:org.bouncycastle.asn1.DERGeneralString getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.DERGeneralString:org.bouncycastle.asn1.DERGeneralString getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)"
        ]
    },
    "org.bouncycastle.asn1.DERGeneralizedTime:org.bouncycastle.asn1.ASN1GeneralizedTime getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.DERGeneralizedTime:org.bouncycastle.asn1.ASN1GeneralizedTime getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.cmp.PKIHeaderBuilder:org.bouncycastle.asn1.'cmp'.PKIHeaderBuilder setMessageTime(org.bouncycastle.asn1.DERGeneralizedTime)",
            "org.bouncycastle.asn1.cmp.RevAnnContent:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.dvcs.DVCSTime:org.bouncycastle.asn1.dvcs.DVCSTime getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ocsp.ResponseData:void <init>(org.bouncycastle.asn1.ocsp.ResponderID,org.bouncycastle.asn1.DERGeneralizedTime,org.bouncycastle.asn1.ASN1Sequence,org.bouncycastle.asn1.x509.X509Extensions)",
            "org.bouncycastle.asn1.ocsp.ResponseData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ocsp.RevokedInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ocsp.SingleResponse:void <init>(org.bouncycastle.asn1.ocsp.CertID,org.bouncycastle.asn1.ocsp.CertStatus,org.bouncycastle.asn1.DERGeneralizedTime,org.bouncycastle.asn1.DERGeneralizedTime,org.bouncycastle.asn1.x509.Extensions)",
            "org.bouncycastle.asn1.ocsp.SingleResponse:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.tsp.TSTInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.AttCertValidityPeriod:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:java.util.Date getValidCertDateFromValidityModel(org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.CertPath,int)"
        ]
    },
    "org.bouncycastle.asn1.DERIA5String:org.bouncycastle.asn1.DERIA5String getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.DERIA5String:org.bouncycastle.asn1.DERIA5String getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.cms.MetaData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.TimeStampedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.esf.SPuri:org.bouncycastle.asn1.esf.SPuri getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.isismtt.x509.NamingAuthority:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.mozilla.PublicKeyAndChallenge:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.GeneralName:java.lang.String toString()",
            "org.bouncycastle.asn1.x509.qualified.BiometricData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void addAdditionalStoresFromCRLDistributionPoint(org.bouncycastle.asn1.x509.CRLDistPoint,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.lang.String extractNameAsString(org.bouncycastle.asn1.x509.GeneralName)"
        ]
    },
    "org.bouncycastle.asn1.DERInteger:org.bouncycastle.asn1.ASN1Integer getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.DERInteger:org.bouncycastle.asn1.ASN1Integer getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.cmp.CertResponse:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.CertStatus:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.ErrorMsgContent:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.PBMParameter:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.PKIHeader:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.PKIStatus:org.bouncycastle.asn1.'cmp'.PKIStatus getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cmp.PKIStatusInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.PKIStatusInfo:void <init>(org.bouncycastle.asn1.'cmp'.PKIStatus)",
            "org.bouncycastle.asn1.cmp.PKIStatusInfo:void <init>(org.bouncycastle.asn1.'cmp'.PKIStatus,org.bouncycastle.asn1.'cmp'.PKIFreeText)",
            "org.bouncycastle.asn1.cmp.PKIStatusInfo:void <init>(org.bouncycastle.asn1.'cmp'.PKIStatus,org.bouncycastle.asn1.'cmp'.PKIFreeText,org.bouncycastle.asn1.'cmp'.PKIFailureInfo)",
            "org.bouncycastle.asn1.cmp.POPODecKeyRespContent:org.bouncycastle.asn1.ASN1Integer[] toASN1IntegerArray()",
            "org.bouncycastle.asn1.cmp.PollRepContent:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.PollReqContent:org.bouncycastle.asn1.ASN1Integer[] sequenceToASN1IntegerArray(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.CCMParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.EncryptedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.EnvelopedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.GCMParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.SignedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.TimeStampedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.crmf.CertId:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.crmf.CertRequest:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.crmf.PKIPublicationInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.crmf.SinglePubInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.dvcs.DVCSCertInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.dvcs.DVCSRequestInformation:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.CrlIdentifier:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.icao.CscaMasterList:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.icao.DataGroupHash:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.icao.LDSSecurityObject:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.isismtt.x509.MonetaryLimit:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.DHParameter:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PBKDF2Params:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PKCS12PBEParams:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.RSAPublicKey:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.tsp.TSTInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.tsp.TimeStampReq:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ua.DSTU4145BinaryField:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ua.DSTU4145ECBinary:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.AttributeCertificateInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.BasicConstraints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.CRLNumber:org.bouncycastle.asn1.x509.CRLNumber getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.DSAParameter:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.IssuerSerial:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.NoticeReference:org.bouncycastle.asn1.ASN1Integer[] getNoticeNumbers()",
            "org.bouncycastle.asn1.x509.RSAPublicKeyStructure:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.TBSCertList$CRLEntry:org.bouncycastle.asn1.ASN1Integer getUserCertificate()",
            "org.bouncycastle.asn1.x509.TBSCertList:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.TBSCertificate:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.TBSCertificateStructure:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.MonetaryValue:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.DHValidationParms:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9Curve:void <init>(org.bouncycastle.asn1.x9.X9FieldID,org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey:boolean isPKCSParam(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$StdDSAEncoder:java.math.BigInteger[] decode(byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.elgamal.BCElGamalPrivateKey:void <init>(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:java.lang.String toString()",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:java.util.Set getDeltaCRLs(java.util.Date,org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.JCEDHPrivateKey:void <init>(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jce.provider.JCEDHPublicKey:boolean isPKCSParam(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.jce.provider.JCEECPrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jce.provider.JCEElGamalPrivateKey:void <init>(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jce.provider.JDKDSAPrivateKey:void <init>(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:int prepareNextCertJ(java.security.cert.CertPath,int,int)",
            "org.bouncycastle.jce.provider.X509CRLObject:java.lang.String toString()",
            "org.bouncycastle.pqc.asn1.GMSSPublicKey:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.pqc.asn1.RainbowPrivateKey:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.pqc.asn1.RainbowPublicKey:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.x509.X509CRLStoreSelector:boolean match(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.DERNumericString:org.bouncycastle.asn1.DERNumericString getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.DERNumericString:org.bouncycastle.asn1.DERNumericString getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)"
        ]
    },
    "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.cmp.InfoTypeAndValue:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.OtherRecipientInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.OtherRevocationInfoFormat:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.eac.ECDSAPublicKey:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.eac.PublicKeyDataObject:org.bouncycastle.asn1.eac.PublicKeyDataObject getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.eac.RSAPublicKey:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.SigPolicyQualifierInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.SignaturePolicyId:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.isismtt.x509.ProfessionInfo:org.bouncycastle.asn1.ASN1ObjectIdentifier[] getProfessionOIDs()",
            "org.bouncycastle.asn1.pkcs.EncryptedData:org.bouncycastle.asn1.ASN1ObjectIdentifier getContentType()",
            "org.bouncycastle.asn1.tsp.TSTInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.tsp.TimeStampReq:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ua.DSTU4145Params:org.bouncycastle.asn1.ua.DSTU4145Params getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.AccessDescription:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.AlgorithmIdentifier:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.Attribute:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.CertPolicyId:org.bouncycastle.asn1.x509.CertPolicyId getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.Extension:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.KeyPurposeId:org.bouncycastle.asn1.x509.KeyPurposeId getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.ObjectDigestInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.PolicyInformation:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.PolicyQualifierInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Extensions:void <init>(java.util.Vector,java.util.Hashtable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.qualified.QCStatement:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.qualified.SemanticsInformation:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:java.util.Collection getAlternativeNames(byte[])",
            "org.bouncycastle.jce.ECKeyUtil:java.security.PublicKey publicToExplicitParameters(java.security.PublicKey,java.security.Provider)",
            "org.bouncycastle.jce.ECKeyUtil:java.security.PrivateKey privateToExplicitParameters(java.security.PrivateKey,java.security.Provider)",
            "org.bouncycastle.jce.provider.JCEECPrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void prepareNextCertA(java.security.cert.CertPath,int)",
            "org.bouncycastle.jce.provider.X509CertificateObject:java.util.Collection getAlternativeNames(byte[])",
            "org.bouncycastle.pqc.asn1.RainbowPrivateKey:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.pqc.asn1.RainbowPublicKey:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.DERPrintableString:org.bouncycastle.asn1.DERPrintableString getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.DERPrintableString:org.bouncycastle.asn1.DERPrintableString getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.icao.LDSVersionInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.isismtt.x509.MonetaryLimit:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.isismtt.x509.ProfessionInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.DERT61String:org.bouncycastle.asn1.DERT61String getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.DERT61String:org.bouncycastle.asn1.DERT61String getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)"
        ]
    },
    "org.bouncycastle.asn1.DERT61UTF8String:org.bouncycastle.asn1.DERT61UTF8String getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.DERT61UTF8String:org.bouncycastle.asn1.DERT61UTF8String getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)"
        ]
    },
    "org.bouncycastle.asn1.DERUTCTime:org.bouncycastle.asn1.ASN1UTCTime getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.DERUTCTime:org.bouncycastle.asn1.ASN1UTCTime getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.esf.CrlIdentifier:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.DERUTF8String:org.bouncycastle.asn1.DERUTF8String getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.DERUTF8String:org.bouncycastle.asn1.DERUTF8String getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.cms.MetaData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.SignerLocation:void <init>(org.bouncycastle.asn1.DERUTF8String,org.bouncycastle.asn1.DERUTF8String,org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.DERUniversalString:org.bouncycastle.asn1.DERUniversalString getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.DERUniversalString:org.bouncycastle.asn1.DERUniversalString getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)"
        ]
    },
    "org.bouncycastle.asn1.DERVisibleString:org.bouncycastle.asn1.DERVisibleString getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.DERVisibleString:org.bouncycastle.asn1.DERVisibleString getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)"
        ]
    },
    "org.bouncycastle.asn1.dvcs.DVCSResponse:org.bouncycastle.asn1.dvcs.DVCSResponse getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.dvcs.DVCSResponse:org.bouncycastle.asn1.dvcs.DVCSResponse getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.dvcs.DVCSResponse:org.bouncycastle.asn1.dvcs.DVCSResponse getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)"
        ]
    },
    "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.esf.OtherRevRefs:org.bouncycastle.asn1.esf.OtherRevRefs getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.esf.OtherRevVals:org.bouncycastle.asn1.esf.OtherRevVals getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Encodable parsePrivateKey()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey:void <init>(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPrivateKey:void <init>(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.elgamal.BCElGamalPrivateKey:void <init>(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.BCGOST3410PrivateKey:void <init>(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.BCRSAPrivateCrtKey:void <init>(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jce.ECKeyUtil:java.security.PrivateKey privateToExplicitParameters(java.security.PrivateKey,java.security.Provider)",
            "org.bouncycastle.jce.provider.JCEDHPrivateKey:void <init>(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jce.provider.JCEECPrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jce.provider.JCEElGamalPrivateKey:void <init>(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jce.provider.JCERSAPrivateCrtKey:void <init>(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jce.provider.JDKDSAPrivateKey:void <init>(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)"
        ]
    },
    "org.bouncycastle.asn1.x500.style.IETFUtils:org.bouncycastle.asn1.ASN1Encodable valueFromHexString(java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x500.style.BCStyle:org.bouncycastle.asn1.ASN1Encodable stringToValue(org.bouncycastle.asn1.ASN1ObjectIdentifier,java.lang.String)",
            "org.bouncycastle.asn1.x500.style.RFC4519Style:org.bouncycastle.asn1.ASN1Encodable stringToValue(org.bouncycastle.asn1.ASN1ObjectIdentifier,java.lang.String)"
        ]
    },
    "org.bouncycastle.asn1.x509.Extension:org.bouncycastle.asn1.ASN1Primitive convertValueToObject(org.bouncycastle.asn1.x509.Extension)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.Extension:org.bouncycastle.asn1.ASN1Encodable getParsedValue()"
        ]
    },
    "org.bouncycastle.asn1.x509.GeneralName:org.bouncycastle.asn1.x509.GeneralName getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.PKIHeader:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.crmf.CertId:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.crmf.EncKeyWithID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.crmf.POPOSigningKeyInput:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.crmf.SinglePubInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.dvcs.DVCSErrorNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.dvcs.DVCSRequest:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.isismtt.x509.AdmissionSyntax:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.isismtt.x509.ProcurationSyntax:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.AccessDescription:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.GeneralName:org.bouncycastle.asn1.x509.GeneralName getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.GeneralName:org.bouncycastle.asn1.x509.GeneralName getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.x509.GeneralNames:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.GeneralSubtree:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.qualified.SemanticsInformation:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:java.util.Collection getAlternativeNames(byte[])",
            "org.bouncycastle.jce.provider.X509CertificateObject:java.util.Collection getAlternativeNames(byte[])",
            "org.bouncycastle.ocsp.OCSPReq:org.bouncycastle.asn1.x509.GeneralName getRequestorName()",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkNameConstraints()",
            "org.bouncycastle.x509.X509AttributeCertStoreSelector:boolean match(java.lang.Object)",
            "org.bouncycastle.x509.X509AttributeCertStoreSelector:void addTargetName(byte[])",
            "org.bouncycastle.x509.X509AttributeCertStoreSelector:void addTargetGroup(byte[])",
            "org.bouncycastle.x509.X509AttributeCertStoreSelector:java.util.Set extractGeneralNames(java.util.Collection)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.x509.X509Extension:org.bouncycastle.asn1.ASN1Primitive convertValueToObject(org.bouncycastle.asn1.x509.X509Extension)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.BasicConstraints:org.bouncycastle.asn1.x509.BasicConstraints getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.X509Extension:org.bouncycastle.asn1.ASN1Encodable getParsedValue()"
        ]
    },
    "org.bouncycastle.crypto.signers.DSADigestSigner:java.math.BigInteger[] derDecode(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.signers.DSADigestSigner:boolean verifySignature(byte[])"
        ]
    },
    "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.JcaJceUtils:org.bouncycastle.asn1.ASN1Encodable extractParameters(java.security.AlgorithmParameters)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dsa.AlgorithmParametersSpi:void engineInit(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.AlgorithmParametersSpi:void engineInit(byte[],java.lang.String)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner:java.math.BigInteger[] derDecode(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner:boolean engineVerify(byte[])"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey:org.bouncycastle.asn1.DERBitString getPublicKeyDetails(org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey:void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPrivateKeyParameters,org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey,java.security.spec.ECParameterSpec)",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey:void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPrivateKeyParameters,org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey,org.bouncycastle.jce.spec.ECParameterSpec)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey:void readObject(java.io.ObjectInputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey:void populateFromPubKeyInfo(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey:void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey:void readObject(java.io.ObjectInputStream)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey:void readObject(java.io.ObjectInputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey:org.bouncycastle.asn1.DERBitString getPublicKeyDetails(org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey:void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPrivateKeyParameters,org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey,java.security.spec.ECParameterSpec,org.bouncycastle.jcajce.provider.config.ProviderConfiguration)",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey:void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPrivateKeyParameters,org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey,org.bouncycastle.jce.spec.ECParameterSpec,org.bouncycastle.jcajce.provider.config.ProviderConfiguration)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey:void readObject(java.io.ObjectInputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey:void populateFromPubKeyInfo(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey:void <init>(java.lang.String,org.bouncycastle.asn1.x509.SubjectPublicKeyInfo,org.bouncycastle.jcajce.provider.config.ProviderConfiguration)",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey:void readObject(java.io.ObjectInputStream)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey:void readObject(java.io.ObjectInputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$StdDSAEncoder:java.math.BigInteger[] decode(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.util.DSABase:boolean engineVerify(byte[])"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:org.bouncycastle.asn1.DERBitString getPublicKeyDetails(org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPrivateKeyParameters,org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey,java.security.spec.ECParameterSpec)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPrivateKeyParameters,org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey,org.bouncycastle.jce.spec.ECParameterSpec)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void readObject(java.io.ObjectInputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey:void populateFromPubKeyInfo(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey:void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey:void readObject(java.io.ObjectInputStream)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey:void readObject(java.io.ObjectInputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.elgamal.AlgorithmParametersSpi:void engineInit(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.elgamal.AlgorithmParametersSpi:void engineInit(byte[],java.lang.String)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.gost.AlgorithmParametersSpi:void engineInit(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.gost.AlgorithmParametersSpi:void engineInit(byte[],java.lang.String)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ies.AlgorithmParametersSpi:void engineInit(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.ies.AlgorithmParametersSpi:void engineInit(byte[],java.lang.String)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:void <init>(org.bouncycastle.asn1.x509.Certificate)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.Certificate readDERCertificate(org.bouncycastle.asn1.ASN1InputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.Certificate getCertificate()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.Certificate readPEMCertificate(java.io.InputStream)"
        ]
    },
    "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:org.bouncycastle.asn1.x509.SubjectKeyIdentifier createSubjectKeyId(java.security.PublicKey)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void doStore(java.io.OutputStream,char[],boolean)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:org.bouncycastle.asn1.x509.SubjectKeyIdentifier access$100(org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi,java.security.PublicKey)"
        ]
    },
    "org.bouncycastle.jcajce.provider.symmetric.PBEPBKDF2$AlgParams:void engineInit(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.symmetric.PBEPBKDF2$AlgParams:void engineInit(byte[],java.lang.String)"
        ]
    },
    "org.bouncycastle.jcajce.provider.symmetric.PBEPKCS12$AlgParams:void engineInit(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.symmetric.PBEPKCS12$AlgParams:void engineInit(byte[],java.lang.String)"
        ]
    },
    "org.bouncycastle.jcajce.provider.symmetric.RC2$AlgParams:void engineInit(byte[],java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.symmetric.util.IvAlgorithmParameters:void engineInit(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.symmetric.util.IvAlgorithmParameters:void engineInit(byte[],java.lang.String)"
        ]
    },
    "org.bouncycastle.jcajce.provider.symmetric.util.IvAlgorithmParameters:void engineInit(byte[],java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.ECKeyUtil:java.security.PublicKey publicToExplicitParameters(java.security.PublicKey,java.security.Provider)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.ECKeyUtil:java.security.PublicKey publicToExplicitParameters(java.security.PublicKey,java.lang.String)"
        ]
    },
    "org.bouncycastle.jce.ECKeyUtil:java.security.PrivateKey privateToExplicitParameters(java.security.PrivateKey,java.security.Provider)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.ECKeyUtil:java.security.PrivateKey privateToExplicitParameters(java.security.PrivateKey,java.lang.String)"
        ]
    },
    "org.bouncycastle.jce.PKCS10CertificationRequest:void <init>(java.lang.String,org.bouncycastle.asn1.x509.X509Name,java.security.PublicKey,org.bouncycastle.asn1.ASN1Set,java.security.PrivateKey,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.PKCS10CertificationRequest:void <init>(java.lang.String,org.bouncycastle.asn1.x509.X509Name,java.security.PublicKey,org.bouncycastle.asn1.ASN1Set,java.security.PrivateKey)",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void <init>(java.lang.String,javax.security.auth.x500.X500Principal,java.security.PublicKey,org.bouncycastle.asn1.ASN1Set,java.security.PrivateKey)",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void <init>(java.lang.String,javax.security.auth.x500.X500Principal,java.security.PublicKey,org.bouncycastle.asn1.ASN1Set,java.security.PrivateKey,java.lang.String)"
        ]
    },
    "org.bouncycastle.jce.PrincipalUtil:org.bouncycastle.jce.X509Principal getIssuerX509Principal(java.security.cert.X509Certificate)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.AttributeCertificateHolder:void <init>(java.security.cert.X509Certificate)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean match(java.security.cert.Certificate)",
            "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure:org.bouncycastle.asn1.ASN1Sequence fromCertificate(java.security.cert.X509Certificate)"
        ]
    },
    "org.bouncycastle.jce.PrincipalUtil:org.bouncycastle.jce.X509Principal getSubjectX509Principal(java.security.cert.X509Certificate)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.examples.PKCS12Example:java.security.cert.Certificate createIntermediateCert(java.security.PublicKey,java.security.PrivateKey,java.security.cert.X509Certificate)",
            "org.bouncycastle.ocsp.CertificateID:org.bouncycastle.asn1.ocsp.CertID createCertID(org.bouncycastle.asn1.x509.AlgorithmIdentifier,java.security.cert.X509Certificate,org.bouncycastle.asn1.ASN1Integer,java.lang.String)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean match(java.security.cert.Certificate)"
        ]
    },
    "org.bouncycastle.jce.PrincipalUtil:org.bouncycastle.jce.X509Principal getIssuerX509Principal(java.security.cert.X509CRL)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.provider.CertPathValidatorUtilities:java.util.Date getValidCertDateFromValidityModel(org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.CertPath,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.PKIXAttrCertPathValidatorSpi:java.security.cert.CertPathValidatorResult engineValidate(java.security.cert.CertPath,java.security.cert.CertPathParameters)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCertA(java.security.cert.CertPath,org.bouncycastle.x509.ExtendedPKIXParameters,int,java.security.PublicKey,boolean,javax.security.auth.x500.X500Principal,java.security.cert.X509Certificate)"
        ]
    },
    "org.bouncycastle.jce.provider.JCEECPrivateKey:org.bouncycastle.asn1.DERBitString getPublicKeyDetails(org.bouncycastle.jce.provider.JCEECPublicKey)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.JCEECPrivateKey:void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPrivateKeyParameters,org.bouncycastle.jce.provider.JCEECPublicKey,java.security.spec.ECParameterSpec)",
            "org.bouncycastle.jce.provider.JCEECPrivateKey:void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPrivateKeyParameters,org.bouncycastle.jce.provider.JCEECPublicKey,org.bouncycastle.jce.spec.ECParameterSpec)"
        ]
    },
    "org.bouncycastle.jce.provider.JCEECPrivateKey:void readObject(java.io.ObjectInputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.provider.JCEECPublicKey:void populateFromPubKeyInfo(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.JCEECPublicKey:void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jce.provider.JCEECPublicKey:void readObject(java.io.ObjectInputStream)"
        ]
    },
    "org.bouncycastle.jce.provider.JCEECPublicKey:void readObject(java.io.ObjectInputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void checkCRL(org.bouncycastle.asn1.x509.DistributionPoint,org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,org.bouncycastle.jce.provider.CertStatus,org.bouncycastle.jce.provider.ReasonsMask,java.util.List)",
            "org.bouncycastle.jce.provider.RFC3281CertPathUtilities:void checkCRL(org.bouncycastle.asn1.x509.DistributionPoint,org.bouncycastle.x509.X509AttributeCertificate,org.bouncycastle.x509.ExtendedPKIXParameters,java.util.Date,java.security.cert.X509Certificate,org.bouncycastle.jce.provider.CertStatus,org.bouncycastle.jce.provider.ReasonsMask,java.util.List)"
        ]
    },
    "org.bouncycastle.jce.provider.X509CertificateObject:void <init>(org.bouncycastle.asn1.x509.Certificate)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.X509CertParser:java.security.cert.Certificate readDERCertificate(java.io.InputStream)",
            "org.bouncycastle.jce.provider.X509CertParser:java.security.cert.Certificate getCertificate()",
            "org.bouncycastle.jce.provider.X509CertParser:java.security.cert.Certificate readPEMCertificate(java.io.InputStream)",
            "org.bouncycastle.x509.X509CertificatePair:void <init>(org.bouncycastle.asn1.x509.CertificatePair)",
            "org.bouncycastle.x509.X509V1CertificateGenerator:java.security.cert.X509Certificate generateJcaObject(org.bouncycastle.asn1.x509.TBSCertificate,byte[])",
            "org.bouncycastle.x509.X509V3CertificateGenerator:java.security.cert.X509Certificate generateJcaObject(org.bouncycastle.asn1.x509.TBSCertificate,byte[])"
        ]
    },
    "org.bouncycastle.ocsp.BasicOCSPRespGenerator:org.bouncycastle.ocsp.BasicOCSPResp generateResponse(java.lang.String,java.security.PrivateKey,java.security.cert.X509Certificate[],java.util.Date,java.lang.String,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.ocsp.BasicOCSPRespGenerator:org.bouncycastle.ocsp.BasicOCSPResp generate(java.lang.String,java.security.PrivateKey,java.security.cert.X509Certificate[],java.util.Date,java.lang.String,java.security.SecureRandom)"
        ]
    },
    "org.bouncycastle.ocsp.OCSPResp:java.lang.Object getResponseObject()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PublicKey generatePublic(java.security.spec.KeySpec)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PublicKey generatePublic(java.security.spec.KeySpec)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyFactorySpi:java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.PKIXCertPathReviewer:java.util.Collection getTrustAnchors(java.security.cert.X509Certificate,java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkSignatures()"
        ]
    },
    "org.bouncycastle.x509.X509AttributeCertStoreSelector:void addTargetName(byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.X509AttributeCertStoreSelector:void addTargetGroup(byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.X509AttributeCertStoreSelector:java.util.Set extractGeneralNames(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.X509AttributeCertStoreSelector:void setTargetNames(java.util.Collection)",
            "org.bouncycastle.x509.X509AttributeCertStoreSelector:void setTargetGroups(java.util.Collection)"
        ]
    },
    "org.bouncycastle.x509.extension.X509ExtensionUtil:org.bouncycastle.asn1.ASN1Primitive fromExtensionValue(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkSignatures()",
            "org.bouncycastle.x509.X509CRLStoreSelector:boolean match(java.lang.Object)",
            "org.bouncycastle.x509.X509V3CertificateGenerator:void copyAndAddExtension(java.lang.String,boolean,java.security.cert.X509Certificate)",
            "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure:void <init>(byte[])",
            "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure:org.bouncycastle.asn1.ASN1Sequence fromCertificate(java.security.cert.X509Certificate)",
            "org.bouncycastle.x509.extension.SubjectKeyIdentifierStructure:void <init>(byte[])",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.eac.CVCertificateRequest:void <init>(org.bouncycastle.asn1.DERApplicationSpecific)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.eac.CVCertificateRequest:org.bouncycastle.asn1.eac.CVCertificateRequest getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.eac.CVCertificateRequest:void initCertBody(org.bouncycastle.asn1.DERApplicationSpecific)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.eac.CVCertificateRequest:void <init>(org.bouncycastle.asn1.DERApplicationSpecific)"
        ]
    },
    "org.bouncycastle.asn1.LazyConstructionEnumeration:void <init>(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.LazyEncodedSequence:void parse()",
            "org.bouncycastle.asn1.LazyEncodedSequence:java.util.Enumeration getObjects()"
        ]
    },
    "org.bouncycastle.asn1.LazyConstructionEnumeration:java.lang.Object nextElement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1EncodableVector:void addAll(org.bouncycastle.asn1.ASN1EncodableVector)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Encodable getNext(java.util.Enumeration)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Encodable getNext(java.util.Enumeration)",
            "org.bouncycastle.asn1.BERConstructedOctetString:org.bouncycastle.asn1.BEROctetString fromSequence(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROctetString:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.BEROctetString:org.bouncycastle.asn1.BEROctetString fromSequence(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequence:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERSet:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.BERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequence:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERSet:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSequence:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.LazyEncodedSequence:void parse()",
            "org.bouncycastle.asn1.cmp.ErrorMsgContent:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.KeyRecRepContent:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.PKIFreeText:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.PKIHeader:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.PKIMessage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.RevRepContent:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AttributeTable:org.bouncycastle.asn1.ASN1EncodableVector getAll(org.bouncycastle.asn1.ASN1ObjectIdentifier)",
            "org.bouncycastle.asn1.cms.AttributeTable:int size()",
            "org.bouncycastle.asn1.cms.AttributeTable:org.bouncycastle.asn1.ASN1EncodableVector toASN1EncodableVector()",
            "org.bouncycastle.asn1.cms.AttributeTable:java.util.Hashtable copyTable(java.util.Hashtable)",
            "org.bouncycastle.asn1.cms.AuthenticatedData:int calculateVersion(org.bouncycastle.asn1.cms.OriginatorInfo)",
            "org.bouncycastle.asn1.cms.EnvelopedData:int calculateVersion(org.bouncycastle.asn1.cms.OriginatorInfo,org.bouncycastle.asn1.ASN1Set,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.cms.SignedData:org.bouncycastle.asn1.ASN1Integer calculateVersion(org.bouncycastle.asn1.ASN1ObjectIdentifier,org.bouncycastle.asn1.ASN1Set,org.bouncycastle.asn1.ASN1Set,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.cms.SignedData:boolean checkForVersion3(org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.cms.SignedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.SignerInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.TimeStampTokenEvidence:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.crmf.CertReqMsg:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.crmf.CertTemplate:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.crmf.OptionalValidity:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cryptopro.ECGOST3410ParamSetParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cryptopro.GOST28147Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cryptopro.GOST3410ParamSetParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.eac.CVCertificateRequest:void initCertBody(org.bouncycastle.asn1.DERApplicationSpecific)",
            "org.bouncycastle.asn1.eac.ECDSAPublicKey:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.eac.Flags:java.lang.String decode(java.util.Hashtable)",
            "org.bouncycastle.asn1.eac.RSAPublicKey:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.CompleteRevocationRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.CrlListID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.CrlOcspRef:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OcspListID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.RevocationValues:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.SPUserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.SignerAttribute:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.SignerLocation:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.icao.DataGroupHash:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.icao.LDSSecurityObject:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.isismtt.x509.AdmissionSyntax:org.bouncycastle.asn1.isismtt.x509.Admissions[] getContentsOfAdmissions()",
            "org.bouncycastle.asn1.isismtt.x509.Admissions:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.isismtt.x509.Admissions:org.bouncycastle.asn1.isismtt.x509.ProfessionInfo[] getProfessionInfos()",
            "org.bouncycastle.asn1.isismtt.x509.MonetaryLimit:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.isismtt.x509.NamingAuthority:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.isismtt.x509.ProcurationSyntax:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.isismtt.x509.ProfessionInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.isismtt.x509.ProfessionInfo:org.bouncycastle.asn1.x500.DirectoryString[] getProfessionItems()",
            "org.bouncycastle.asn1.isismtt.x509.ProfessionInfo:org.bouncycastle.asn1.ASN1ObjectIdentifier[] getProfessionOIDs()",
            "org.bouncycastle.asn1.ocsp.CrlID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.oiw.ElGamalParameter:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.ContentInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.DHParameter:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.EncryptedPrivateKeyInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PBES2Algorithms:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PBKDF2Params:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.RSAPrivateKey:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.RSAPublicKey:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.SignedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.SignerInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.sec.ECPrivateKey:org.bouncycastle.asn1.ASN1Primitive getObjectInTag(int)",
            "org.bouncycastle.asn1.sec.ECPrivateKeyStructure:org.bouncycastle.asn1.ASN1Primitive getObjectInTag(int)",
            "org.bouncycastle.asn1.smime.SMIMECapabilities:java.util.Vector getCapabilities(org.bouncycastle.asn1.ASN1ObjectIdentifier)",
            "org.bouncycastle.asn1.tsp.TSTInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.tsp.TimeStampResp:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String outputApplicationSpecific(java.lang.String,java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.String)",
            "org.bouncycastle.asn1.x500.X500Name:void <init>(org.bouncycastle.asn1.x500.X500NameStyle,org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x500.style.BCStyle:java.util.Hashtable copyHashTable(java.util.Hashtable)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String[] findAttrNamesForOID(org.bouncycastle.asn1.ASN1ObjectIdentifier,java.util.Hashtable)",
            "org.bouncycastle.asn1.x500.style.RFC4519Style:java.util.Hashtable copyHashTable(java.util.Hashtable)",
            "org.bouncycastle.asn1.x509.AuthorityKeyIdentifier:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.CertificatePair:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.DSAParameter:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.DigestInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(java.util.Vector)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:org.bouncycastle.asn1.x509.KeyPurposeId[] getUsages()",
            "org.bouncycastle.asn1.x509.Extensions:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.Extensions:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.Extensions:boolean equivalent(org.bouncycastle.asn1.x509.Extensions)",
            "org.bouncycastle.asn1.x509.IetfAttrSyntax:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.IetfAttrSyntax:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.NameConstraints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.NoticeReference:org.bouncycastle.asn1.ASN1EncodableVector convertVector(java.util.Vector)",
            "org.bouncycastle.asn1.x509.PolicyMappings:void <init>(java.util.Hashtable)",
            "org.bouncycastle.asn1.x509.PrivateKeyUsagePeriod:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.RSAPublicKeyStructure:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.SubjectDirectoryAttributes:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.SubjectDirectoryAttributes:void <init>(java.util.Vector)",
            "org.bouncycastle.asn1.x509.SubjectDirectoryAttributes:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.SubjectPublicKeyInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.TBSCertList$RevokedCertificatesEnumeration:java.lang.Object nextElement()",
            "org.bouncycastle.asn1.x509.TargetInformation:org.bouncycastle.asn1.x509.Targets[] getTargetsObjects()",
            "org.bouncycastle.asn1.x509.Targets:org.bouncycastle.asn1.x509.Target[] getTargets()",
            "org.bouncycastle.asn1.x509.X509Extensions:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Extensions:void <init>(java.util.Vector,java.util.Hashtable)",
            "org.bouncycastle.asn1.x509.X509Extensions:void <init>(java.util.Vector,java.util.Vector)",
            "org.bouncycastle.asn1.x509.X509Extensions:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.X509Extensions:boolean equivalent(org.bouncycastle.asn1.x509.X509Extensions)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(java.util.Vector,java.util.Hashtable,org.bouncycastle.asn1.x509.X509NameEntryConverter)",
            "org.bouncycastle.asn1.x509.qualified.BiometricData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.qualified.MonetaryValue:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.qualified.QCStatement:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.qualified.SemanticsInformation:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.sigi.NameOrPseudonym:org.bouncycastle.asn1.x500.DirectoryString[] getGivenName()",
            "org.bouncycastle.asn1.x509.sigi.PersonalData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.DHDomainParameters:org.bouncycastle.asn1.ASN1Encodable getNext(java.util.Enumeration)",
            "org.bouncycastle.asn1.x9.ECNamedCurveTable:void addEnumeration(java.util.Vector,java.util.Enumeration)",
            "org.bouncycastle.asn1.x9.KeySpecificInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.OtherInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.digests.SkeinEngine:void initParams(java.util.Hashtable)",
            "org.bouncycastle.crypto.params.SkeinParameters$Builder:void <init>(java.util.Hashtable)",
            "org.bouncycastle.crypto.params.SkeinParameters$Builder:void <init>(org.bouncycastle.crypto.params.SkeinParameters)",
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:void processServerHello(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,byte[])",
            "org.bouncycastle.crypto.tls.DTLSReliableHandshake:void checkInboundFlight()",
            "org.bouncycastle.crypto.tls.DTLSReliableHandshake:boolean checkAll(java.util.Hashtable)",
            "org.bouncycastle.crypto.tls.DTLSReliableHandshake:void resetAll(java.util.Hashtable)",
            "org.bouncycastle.crypto.tls.DeferredHash:void update(byte)",
            "org.bouncycastle.crypto.tls.DeferredHash:void update(byte[],int,int)",
            "org.bouncycastle.crypto.tls.DeferredHash:void reset()",
            "org.bouncycastle.crypto.tls.DeferredHash:void checkStopBuffering()",
            "org.bouncycastle.crypto.tls.TlsClientProtocol:void receiveServerHelloMessage(java.io.ByteArrayInputStream)",
            "org.bouncycastle.crypto.tls.TlsProtocol:void writeExtensions(java.io.OutputStream,java.util.Hashtable)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl:void writeObject(java.io.ObjectOutputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLEntryObject:java.util.Set getExtensionOIDs(boolean)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLEntryObject:java.lang.String toString()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:java.util.Set getExtensionOIDs(boolean)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:java.util.Set loadCRLEntries()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:java.security.cert.X509CRLEntry getRevokedCertificate(java.math.BigInteger)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:java.lang.String toString()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:boolean isRevoked(java.security.cert.Certificate)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:java.util.Set getCriticalExtensionOIDs()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:java.util.Set getNonCriticalExtensionOIDs()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:boolean hasUnsupportedCriticalExtension()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:java.lang.String toString()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:java.util.Collection getAlternativeNames(byte[])",
            "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi:java.lang.String engineGetCertificateAlias(java.security.cert.Certificate)",
            "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi:void saveStore(java.io.OutputStream)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:java.util.Enumeration engineAliases()",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:java.lang.String engineGetCertificateAlias(java.security.cert.Certificate)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:java.security.cert.Certificate[] engineGetCertificateChain(java.lang.String)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:int engineSize()",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void doStore(java.io.OutputStream,char[],boolean)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:java.util.Set getQualifierSet(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void prepareNextCertB1(int,java.util.List[],java.lang.String,java.util.Map,java.security.cert.X509Certificate)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:org.bouncycastle.jce.provider.PKIXPolicyNode prepareCertB(java.security.cert.CertPath,int,java.util.List[],org.bouncycastle.jce.provider.PKIXPolicyNode,int)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCertBC(java.security.cert.CertPath,int,org.bouncycastle.jce.provider.PKIXNameConstraintValidator)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:org.bouncycastle.jce.provider.PKIXPolicyNode processCertD(java.security.cert.CertPath,int,java.util.Set,org.bouncycastle.jce.provider.PKIXPolicyNode,java.util.List[],int)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:int prepareNextCertI1(java.security.cert.CertPath,int,int)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:int prepareNextCertI2(java.security.cert.CertPath,int,int)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:int wrapupCertB(java.security.cert.CertPath,int,int)",
            "org.bouncycastle.jce.provider.X509CRLEntryObject:java.util.Set getExtensionOIDs(boolean)",
            "org.bouncycastle.jce.provider.X509CRLEntryObject:java.lang.String toString()",
            "org.bouncycastle.jce.provider.X509CRLObject:java.util.Set getExtensionOIDs(boolean)",
            "org.bouncycastle.jce.provider.X509CRLObject:java.util.Set loadCRLEntries()",
            "org.bouncycastle.jce.provider.X509CRLObject:java.security.cert.X509CRLEntry getRevokedCertificate(java.math.BigInteger)",
            "org.bouncycastle.jce.provider.X509CRLObject:java.lang.String toString()",
            "org.bouncycastle.jce.provider.X509CRLObject:boolean isRevoked(java.security.cert.Certificate)",
            "org.bouncycastle.jce.provider.X509CertificateObject:java.util.Set getCriticalExtensionOIDs()",
            "org.bouncycastle.jce.provider.X509CertificateObject:java.util.Set getNonCriticalExtensionOIDs()",
            "org.bouncycastle.jce.provider.X509CertificateObject:boolean hasUnsupportedCriticalExtension()",
            "org.bouncycastle.jce.provider.X509CertificateObject:java.lang.String toString()",
            "org.bouncycastle.jce.provider.X509CertificateObject:java.util.Collection getAlternativeNames(byte[])",
            "org.bouncycastle.ocsp.BasicOCSPResp:java.util.Set getExtensionOIDs(boolean)",
            "org.bouncycastle.ocsp.BasicOCSPResp:java.util.List getCertList(java.lang.String)",
            "org.bouncycastle.ocsp.OCSPReq:java.util.List getCertList(java.lang.String)",
            "org.bouncycastle.ocsp.OCSPReq:java.util.Set getExtensionOIDs(boolean)",
            "org.bouncycastle.ocsp.OCSPUtil:java.util.Iterator getAlgNames()",
            "org.bouncycastle.ocsp.Req:java.util.Set getExtensionOIDs(boolean)",
            "org.bouncycastle.ocsp.RespData:java.util.Set getExtensionOIDs(boolean)",
            "org.bouncycastle.ocsp.SingleResp:java.util.Set getExtensionOIDs(boolean)",
            "org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc:java.util.Vector getStack()",
            "org.bouncycastle.pqc.crypto.gmss.GMSSUtils:java.util.Vector[] clone(java.util.Vector[])",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkPolicy()",
            "org.bouncycastle.x509.X509Util:java.util.Iterator getAlgNames()",
            "org.bouncycastle.x509.X509V2AttributeCertificate:java.util.Set getExtensionOIDs(boolean)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.eac.CVCertificate:void <init>(org.bouncycastle.asn1.DERApplicationSpecific)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.eac.CVCertificate:org.bouncycastle.asn1.eac.CVCertificate getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.eac.CVCertificate:void <init>(org.bouncycastle.asn1.ASN1InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.eac.CertificateBody:void <init>(org.bouncycastle.asn1.DERApplicationSpecific)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.eac.CertificateBody:org.bouncycastle.asn1.eac.CertificateBody getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.eac.CertificateHolderAuthorization:void <init>(org.bouncycastle.asn1.DERApplicationSpecific)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.eac.CertificateBody:void setIso7816CertificateBody(org.bouncycastle.asn1.DERApplicationSpecific)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.KeyFactorySpi:java.security.PublicKey generatePublic(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.elgamal.BCElGamalPublicKey:void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.elgamal.KeyFactorySpi:java.security.PublicKey generatePublic(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.gost.BCGOST3410PublicKey:void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.gost.KeyFactorySpi:java.security.PublicKey generatePublic(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.rsa.BCRSAPublicKey:void populateFromPublicKeyInfo(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.BCRSAPublicKey:void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)"
        ]
    },
    "org.bouncycastle.jce.provider.JCEDHPublicKey:void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.provider.JCEElGamalPublicKey:void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.provider.JCERSAPublicKey:void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.provider.JDKDSAPublicKey:void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PublicKey generatePublic(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PublicKey generatePublic(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyFactorySpi:java.security.PublicKey generatePublic(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.BouncyCastleProvider:java.security.PublicKey getPublicKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.BouncyCastlePQCProvider:java.security.PublicKey getPublicKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyFactorySpi:java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec)"
        ]
    },
    "org.bouncycastle.asn1.x509.X509DefaultEntryConverter:org.bouncycastle.asn1.ASN1Primitive getConvertedValue(org.bouncycastle.asn1.ASN1ObjectIdentifier,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.X509Name:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsUtils:org.bouncycastle.asn1.ASN1Primitive readDERObject(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.Certificate:org.bouncycastle.crypto.tls.Certificate parse(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.CertificateRequest:org.bouncycastle.crypto.tls.CertificateRequest parse(org.bouncycastle.crypto.tls.TlsContext,java.io.InputStream)",
            "org.bouncycastle.crypto.tls.CertificateStatus:org.bouncycastle.crypto.tls.CertificateStatus parse(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.OCSPStatusRequest:org.bouncycastle.crypto.tls.OCSPStatusRequest parse(java.io.InputStream)"
        ]
    },
    "org.bouncycastle.jce.provider.JCERSAPrivateKey:void readObject(java.io.ObjectInputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.provider.JDKDSAPrivateKey:void readObject(java.io.ObjectInputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.Certificate engineGenerateCertificate(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.util.Collection engineGenerateCertificates(java.io.InputStream)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.CRL engineGenerateCRL(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.util.Collection engineGenerateCRLs(java.io.InputStream)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.CertPath engineGenerateCertPath(java.io.InputStream,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.CertPath engineGenerateCertPath(java.io.InputStream)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] getEncoded(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] getEncoded()"
        ]
    },
    "org.bouncycastle.jce.PKCS10CertificationRequest:void <init>(byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.X509Principal:void <init>(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.PKCS10CertificationRequest:org.bouncycastle.asn1.x509.X509Name convertName(javax.security.auth.x500.X500Principal)",
            "org.bouncycastle.ocsp.OCSPReqGenerator:void setRequestorName(javax.security.auth.x500.X500Principal)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateIssuer:void <init>(javax.security.auth.x500.X500Principal)",
            "org.bouncycastle.x509.X509Util:org.bouncycastle.jce.X509Principal convertPrincipal(javax.security.auth.x500.X500Principal)",
            "org.bouncycastle.x509.X509V1CertificateGenerator:void setIssuerDN(javax.security.auth.x500.X500Principal)",
            "org.bouncycastle.x509.X509V1CertificateGenerator:void setSubjectDN(javax.security.auth.x500.X500Principal)",
            "org.bouncycastle.x509.X509V2CRLGenerator:void setIssuerDN(javax.security.auth.x500.X500Principal)",
            "org.bouncycastle.x509.X509V3CertificateGenerator:void setIssuerDN(javax.security.auth.x500.X500Principal)",
            "org.bouncycastle.x509.X509V3CertificateGenerator:void setSubjectDN(javax.security.auth.x500.X500Principal)"
        ]
    },
    "org.bouncycastle.jce.netscape.NetscapeCertRequest:void <init>(byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.netscape.NetscapeCertRequest:void <init>(java.lang.String,org.bouncycastle.asn1.x509.AlgorithmIdentifier,java.security.PublicKey)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.netscape.NetscapeCertRequest:void sign(java.security.PrivateKey,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.netscape.NetscapeCertRequest:void sign(java.security.PrivateKey)"
        ]
    },
    "org.bouncycastle.jce.netscape.NetscapeCertRequest:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.jce.provider.CertPathValidatorUtilities:org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void prepareNextCertB1(int,java.util.List[],java.lang.String,java.util.Map,java.security.cert.X509Certificate)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCertStatus(java.util.Date,java.security.cert.X509CRL,java.lang.Object,org.bouncycastle.jce.provider.CertStatus)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:java.util.Set getDeltaCRLs(java.util.Date,org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:org.bouncycastle.jce.provider.ReasonsMask processCRLD(java.security.cert.X509CRL,org.bouncycastle.asn1.x509.DistributionPoint)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:java.util.Set processCRLA1i(java.util.Date,org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.X509Certificate,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLC(java.security.cert.X509CRL,java.security.cert.X509CRL,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:org.bouncycastle.jce.provider.PKIXPolicyNode prepareCertB(java.security.cert.CertPath,int,java.util.List[],org.bouncycastle.jce.provider.PKIXPolicyNode,int)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void prepareNextCertA(java.security.cert.CertPath,int)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:org.bouncycastle.jce.provider.PKIXPolicyNode processCertE(java.security.cert.CertPath,int,org.bouncycastle.jce.provider.PKIXPolicyNode)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCertBC(java.security.cert.CertPath,int,org.bouncycastle.jce.provider.PKIXNameConstraintValidator)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:org.bouncycastle.jce.provider.PKIXPolicyNode processCertD(java.security.cert.CertPath,int,java.util.Set,org.bouncycastle.jce.provider.PKIXPolicyNode,java.util.List[],int)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:int prepareNextCertI1(java.security.cert.CertPath,int,int)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:int prepareNextCertI2(java.security.cert.CertPath,int,int)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void prepareNextCertG(java.security.cert.CertPath,int,org.bouncycastle.jce.provider.PKIXNameConstraintValidator)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void checkCRLs(org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,java.util.List)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:int prepareNextCertJ(java.security.cert.CertPath,int,int)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void prepareNextCertK(java.security.cert.CertPath,int)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:int prepareNextCertM(java.security.cert.CertPath,int,int)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:int wrapupCertB(java.security.cert.CertPath,int,int)",
            "org.bouncycastle.jce.provider.RFC3281CertPathUtilities:void processAttrCert7(org.bouncycastle.x509.X509AttributeCertificate,java.security.cert.CertPath,java.security.cert.CertPath,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.RFC3281CertPathUtilities:void checkCRLs(org.bouncycastle.x509.X509AttributeCertificate,org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.util.List)",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkNameConstraints()",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkPathLength()",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkSignatures()",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkPolicy()",
            "org.bouncycastle.x509.PKIXCertPathReviewer:boolean processQcStatements(java.security.cert.X509Certificate,int)",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkCRLs(java.security.cert.PKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,java.util.Vector,int)"
        ]
    },
    "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCertA(java.security.cert.CertPath,org.bouncycastle.x509.ExtendedPKIXParameters,int,java.security.PublicKey,boolean,javax.security.auth.x500.X500Principal,java.security.cert.X509Certificate)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi:java.security.cert.CertPathValidatorResult engineValidate(java.security.cert.CertPath,java.security.cert.CertPathParameters)"
        ]
    },
    "org.bouncycastle.jce.provider.PKIXAttrCertPathValidatorSpi:java.security.cert.CertPathValidatorResult engineValidate(java.security.cert.CertPath,java.security.cert.CertPathParameters)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.ocsp.OCSPReq:void <init>(byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.ocsp.OCSPReq:void <init>(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.ocsp.OCSPResp:void <init>(byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.ocsp.OCSPResp:void <init>(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.ocsp.BasicOCSPRespGenerator:void <init>(java.security.PublicKey)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.examples.PKCS12Example:java.security.cert.Certificate createMasterCert(java.security.PublicKey,java.security.PrivateKey)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.examples.PKCS12Example:void main(java.lang.String[])"
        ]
    },
    "org.bouncycastle.x509.examples.AttrCertExample:java.security.cert.X509Certificate createAcIssuerCert(java.security.PublicKey,java.security.PrivateKey)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.examples.AttrCertExample:void main(java.lang.String[])"
        ]
    },
    "org.bouncycastle.x509.X509V2AttributeCertificate:void <init>(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.X509V2AttributeCertificate:void <init>(byte[])"
        ]
    },
    "org.bouncycastle.jce.examples.PKCS12Example:java.security.cert.Certificate createCert(java.security.PublicKey,java.security.PrivateKey,java.security.PublicKey)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.examples.PKCS12Example:void main(java.lang.String[])"
        ]
    },
    "org.bouncycastle.x509.examples.AttrCertExample:java.security.cert.X509Certificate createClientCert(java.security.PublicKey,java.security.PrivateKey,java.security.PublicKey)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.examples.AttrCertExample:void main(java.lang.String[])"
        ]
    },
    "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure:void <init>(java.security.PublicKey)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.examples.PKCS12Example:java.security.cert.Certificate createCert(java.security.PublicKey,java.security.PrivateKey,java.security.PublicKey)"
        ]
    },
    "org.bouncycastle.asn1.BERTaggedObjectParser:org.bouncycastle.asn1.ASN1Primitive getLoadedObject()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1InputStream:org.bouncycastle.asn1.ASN1Primitive readObject()",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.BERTaggedObjectParser:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"
        ]
    },
    "org.bouncycastle.asn1.BERApplicationSpecificParser:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.BERSequenceParser:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.cms.OriginatorInfo getOriginatorInfo()",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.cms.OriginatorInfo getOriginatorInfo()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getMacAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EnvelopedDataParser:org.bouncycastle.asn1.cms.OriginatorInfo getOriginatorInfo()",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.BERSetParser:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.DERExternalParser:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.DERSequenceParser:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.cms.OriginatorInfo getOriginatorInfo()",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.cms.OriginatorInfo getOriginatorInfo()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getMacAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EnvelopedDataParser:org.bouncycastle.asn1.cms.OriginatorInfo getOriginatorInfo()",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.DERSetParser:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.cms.ContentInfoParser getEnapsulatedContentInfo()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cms.SignedDataParser:org.bouncycastle.asn1.cms.SignedDataParser getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.TimeStampedDataParser getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.tls.TlsExtensionsUtils:org.bouncycastle.crypto.tls.CertificateStatusRequest getStatusRequestExtension(java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.tls.TlsExtensionsUtils:org.bouncycastle.crypto.tls.HeartbeatExtension getHeartbeatExtension(java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.tls.AbstractTlsClient:void processServerExtensions(java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:void processServerHello(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,byte[])",
            "org.bouncycastle.crypto.tls.TlsClientProtocol:void receiveServerHelloMessage(java.io.ByteArrayInputStream)"
        ]
    },
    "org.bouncycastle.crypto.tls.AbstractTlsServer:void processClientExtensions(java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.tls.TlsECCUtils:int readECExponent(int,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsECCUtils:org.bouncycastle.crypto.params.ECDomainParameters readECParameters(int[],short[],java.io.InputStream)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsSRPUtils:byte[] getSRPExtension(java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.tls.TlsExtensionsUtils:org.bouncycastle.crypto.tls.ServerNameList getServerNameExtension(java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.tls.TlsUtils:java.util.Vector getSignatureAlgorithmsExtension(java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.AbstractTlsServer:void processClientExtensions(java.util.Hashtable)"
        ]
    },
    "org.bouncycastle.jce.provider.X509StoreLDAPAttrCerts:java.util.Collection engineGetMatches(org.bouncycastle.util.Selector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.X509Store:java.util.Collection getMatches(org.bouncycastle.util.Selector)"
        ]
    },
    "org.bouncycastle.jce.provider.X509StoreLDAPCRLs:java.util.Collection engineGetMatches(org.bouncycastle.util.Selector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.X509Store:java.util.Collection getMatches(org.bouncycastle.util.Selector)"
        ]
    },
    "org.bouncycastle.jce.provider.X509StoreLDAPCertPairs:java.util.Collection engineGetMatches(org.bouncycastle.util.Selector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.X509Store:java.util.Collection getMatches(org.bouncycastle.util.Selector)"
        ]
    },
    "org.bouncycastle.jce.provider.X509StoreLDAPCerts:java.util.Collection getCertificatesFromCrossCertificatePairs(org.bouncycastle.x509.X509CertStoreSelector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.X509StoreLDAPCerts:java.util.Collection engineGetMatches(org.bouncycastle.util.Selector)"
        ]
    },
    "org.bouncycastle.jce.provider.X509StoreLDAPCerts:java.util.Collection engineGetMatches(org.bouncycastle.util.Selector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.X509Store:java.util.Collection getMatches(org.bouncycastle.util.Selector)"
        ]
    },
    "org.bouncycastle.asn1.DEROctetStringParser:org.bouncycastle.asn1.ASN1Primitive getLoadedObject()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.DEROctetStringParser:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"
        ]
    },
    "org.bouncycastle.crypto.tls.DTLSProtocol:void processFinished(byte[],byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:org.bouncycastle.crypto.tls.DTLSTransport clientHandshake(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,org.bouncycastle.crypto.tls.DTLSRecordLayer)",
            "org.bouncycastle.crypto.tls.DTLSServerProtocol:org.bouncycastle.crypto.tls.DTLSTransport serverHandshake(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState,org.bouncycastle.crypto.tls.DTLSRecordLayer)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsProtocol:void processFinishedMessage(java.io.ByteArrayInputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsClientProtocol:void handleHandshakeMessage(short,byte[])",
            "org.bouncycastle.crypto.tls.TlsServerProtocol:void handleHandshakeMessage(short,byte[])"
        ]
    },
    "org.bouncycastle.asn1.x509.DistributionPointName:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.DistributionPoint:java.lang.String toString()",
            "org.bouncycastle.asn1.x509.DistributionPointName:java.lang.String toString()",
            "org.bouncycastle.asn1.x509.GeneralName:java.lang.String toString()",
            "org.bouncycastle.asn1.x509.IssuingDistributionPoint:java.lang.String toString()",
            "org.bouncycastle.asn1.x509.RoleSyntax:java.lang.String[] getRoleAuthorityAsString()",
            "org.bouncycastle.asn1.x509.X509Name:java.lang.String toString(boolean,java.util.Hashtable)",
            "org.bouncycastle.i18n.LocalizedMessage$FilteredArguments:java.lang.Object filter(int,java.lang.Object)",
            "org.bouncycastle.i18n.filter.TrustedInput:java.lang.String toString()",
            "org.bouncycastle.i18n.filter.UntrustedInput:java.lang.String getString()",
            "org.bouncycastle.i18n.filter.UntrustedInput:java.lang.String toString()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.CertPath engineGenerateCertPath(java.util.List)"
        ]
    },
    "org.bouncycastle.asn1.x509.GeneralName:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.DistributionPointName:java.lang.String toString()",
            "org.bouncycastle.asn1.x509.GeneralName:java.lang.String toString()",
            "org.bouncycastle.asn1.x509.RoleSyntax:java.lang.String[] getRoleAuthorityAsString()",
            "org.bouncycastle.asn1.x509.X509Name:java.lang.String toString(boolean,java.util.Hashtable)",
            "org.bouncycastle.i18n.LocalizedMessage$FilteredArguments:java.lang.Object filter(int,java.lang.Object)",
            "org.bouncycastle.i18n.filter.TrustedInput:java.lang.String toString()",
            "org.bouncycastle.i18n.filter.UntrustedInput:java.lang.String getString()",
            "org.bouncycastle.i18n.filter.UntrustedInput:java.lang.String toString()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.CertPath engineGenerateCertPath(java.util.List)"
        ]
    },
    "org.bouncycastle.asn1.x509.RoleSyntax:java.lang.String[] getRoleAuthorityAsString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.RoleSyntax:java.lang.String toString()"
        ]
    },
    "org.bouncycastle.jce.X509Principal:java.lang.String getName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.util.LDAPStoreHelper:java.util.List attrCertSubjectSerialSearch(org.bouncycastle.x509.X509AttributeCertStoreSelector,java.lang.String[],java.lang.String[],java.lang.String[])"
        ]
    },
    "org.bouncycastle.i18n.LocalizedMessage:java.lang.String getEntry(java.lang.String,java.util.Locale,java.util.TimeZone)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.i18n.ErrorBundle:java.lang.String getSummary(java.util.Locale,java.util.TimeZone)",
            "org.bouncycastle.i18n.ErrorBundle:java.lang.String getSummary(java.util.Locale)",
            "org.bouncycastle.i18n.ErrorBundle:java.lang.String getDetail(java.util.Locale,java.util.TimeZone)",
            "org.bouncycastle.i18n.ErrorBundle:java.lang.String getDetail(java.util.Locale)",
            "org.bouncycastle.i18n.LocaleString:java.lang.String getLocaleString(java.util.Locale)",
            "org.bouncycastle.i18n.MessageBundle:java.lang.String getTitle(java.util.Locale,java.util.TimeZone)",
            "org.bouncycastle.i18n.MessageBundle:java.lang.String getTitle(java.util.Locale)",
            "org.bouncycastle.i18n.TextBundle:java.lang.String getText(java.util.Locale,java.util.TimeZone)",
            "org.bouncycastle.i18n.TextBundle:java.lang.String getText(java.util.Locale)"
        ]
    },
    "org.bouncycastle.i18n.LocalizedMessage:java.lang.String addExtraArgs(java.lang.String,java.util.Locale)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.i18n.LocalizedMessage:java.lang.String getEntry(java.lang.String,java.util.Locale,java.util.TimeZone)"
        ]
    },
    "org.bouncycastle.jce.provider.X509StoreAttrCertCollection:java.util.Collection engineGetMatches(org.bouncycastle.util.Selector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.X509Store:java.util.Collection getMatches(org.bouncycastle.util.Selector)"
        ]
    },
    "org.bouncycastle.jce.provider.X509StoreCRLCollection:java.util.Collection engineGetMatches(org.bouncycastle.util.Selector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.X509Store:java.util.Collection getMatches(org.bouncycastle.util.Selector)"
        ]
    },
    "org.bouncycastle.jce.provider.X509StoreCertCollection:java.util.Collection engineGetMatches(org.bouncycastle.util.Selector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.X509Store:java.util.Collection getMatches(org.bouncycastle.util.Selector)"
        ]
    },
    "org.bouncycastle.jce.provider.X509StoreCertPairCollection:java.util.Collection engineGetMatches(org.bouncycastle.util.Selector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.X509Store:java.util.Collection getMatches(org.bouncycastle.util.Selector)"
        ]
    },
    "org.bouncycastle.crypto.prng.ReversedWindowGenerator:void nextBytes(byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.prng.ReversedWindowGenerator:void nextBytes(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.prng.ReversedWindowGenerator:void doNextBytes(byte[],int,int)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.rsa.CipherSpi$OAEPPadding:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.tls.TlsRSASigner:org.bouncycastle.crypto.Signer makeSigner(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,boolean,boolean,org.bouncycastle.crypto.CipherParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsRSASigner:byte[] generateRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])",
            "org.bouncycastle.crypto.tls.TlsRSASigner:boolean verifyRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,byte[],org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])",
            "org.bouncycastle.crypto.tls.TlsRSASigner:org.bouncycastle.crypto.Signer createSigner(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.params.AsymmetricKeyParameter)",
            "org.bouncycastle.crypto.tls.TlsRSASigner:org.bouncycastle.crypto.Signer createVerifyer(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.params.AsymmetricKeyParameter)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsECDHKeyExchange:void generateClientKeyExchange(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:byte[] generateClientKeyExchange(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState)",
            "org.bouncycastle.crypto.tls.TlsClientProtocol:void sendClientKeyExchangeMessage()"
        ]
    },
    "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ess.ESSCertIDv2:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.pkcs.PBES2Algorithms:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PBKDF2Params:boolean isDefaultPrf()",
            "org.bouncycastle.asn1.pkcs.PBKDF2Params:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.pkcs.RSAESOAEPparams:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.pkcs.RSASSAPSSparams:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.x509.Extensions:boolean equivalent(org.bouncycastle.asn1.x509.Extensions)",
            "org.bouncycastle.asn1.x509.X509Extensions:boolean equivalent(org.bouncycastle.asn1.x509.X509Extensions)",
            "org.bouncycastle.asn1.x509.X509Name:java.util.Vector getValues(org.bouncycastle.asn1.ASN1ObjectIdentifier)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.BCGOST3410PrivateKey:boolean compareObj(java.lang.Object,java.lang.Object)",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.BCRSAPublicKey:void writeObject(java.io.ObjectOutputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.Certificate readDERCertificate(org.bouncycastle.asn1.ASN1InputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.CRL readDERCRL(org.bouncycastle.asn1.ASN1InputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLEntryObject:boolean equals(java.lang.Object)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void verify(java.security.PublicKey,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:boolean equals(java.lang.Object)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:boolean isAlgIdEqual(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.x509.AlgorithmIdentifier)",
            "org.bouncycastle.jce.X509LDAPCertStoreParameters:boolean checkField(java.lang.Object,java.lang.Object)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void addAdditionalStoresFromAltNames(java.security.cert.X509Certificate,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:boolean withinDNSubtree(org.bouncycastle.asn1.ASN1Sequence,org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:boolean equals(java.lang.Object,java.lang.Object)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLC(java.security.cert.X509CRL,java.security.cert.X509CRL,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.X509AttrCertParser:org.bouncycastle.x509.X509AttributeCertificate readDERCertificate(java.io.InputStream)",
            "org.bouncycastle.jce.provider.X509CRLEntryObject:boolean equals(java.lang.Object)",
            "org.bouncycastle.jce.provider.X509CRLObject:void verify(java.security.PublicKey,java.lang.String)",
            "org.bouncycastle.jce.provider.X509CRLObject:boolean equals(java.lang.Object)",
            "org.bouncycastle.jce.provider.X509CRLParser:java.security.cert.CRL readDERCRL(java.io.InputStream)",
            "org.bouncycastle.jce.provider.X509CertParser:java.security.cert.Certificate readDERCertificate(java.io.InputStream)",
            "org.bouncycastle.jce.provider.X509CertificateObject:boolean isAlgIdEqual(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.x509.AlgorithmIdentifier)",
            "org.bouncycastle.ocsp.BasicOCSPResp:boolean equals(java.lang.Object)",
            "org.bouncycastle.ocsp.CertificateID:boolean matchesIssuer(java.security.cert.X509Certificate,java.lang.String)",
            "org.bouncycastle.ocsp.OCSPResp:boolean equals(java.lang.Object)",
            "org.bouncycastle.ocsp.RespID:boolean equals(java.lang.Object)",
            "org.bouncycastle.util.Arrays:boolean areEqual(java.lang.Object[],java.lang.Object[])",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean equals(java.lang.Object)",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean equals(java.lang.Object)",
            "org.bouncycastle.x509.X509V2AttributeCertificate:void verify(java.security.PublicKey,java.lang.String)"
        ]
    },
    "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.DERExternal:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.cms.SignedData:org.bouncycastle.asn1.ASN1Integer calculateVersion(org.bouncycastle.asn1.ASN1ObjectIdentifier,org.bouncycastle.asn1.ASN1Set,org.bouncycastle.asn1.ASN1Set,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.ocsp.ResponseData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.ocsp.TBSRequest:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.pkcs.PBES2Algorithms:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.RSASSAPSSparams:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.smime.SMIMECapabilities:java.util.Vector getCapabilities(org.bouncycastle.asn1.ASN1ObjectIdentifier)",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.x500.X500Name:org.bouncycastle.asn1.x500.RDN[] getRDNs(org.bouncycastle.asn1.ASN1ObjectIdentifier)",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.BCStyle:org.bouncycastle.asn1.ASN1Encodable stringToValue(org.bouncycastle.asn1.ASN1ObjectIdentifier,java.lang.String)",
            "org.bouncycastle.asn1.x500.style.BCStyle:boolean areEqual(org.bouncycastle.asn1.x500.X500Name,org.bouncycastle.asn1.x500.X500Name)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String[] findAttrNamesForOID(org.bouncycastle.asn1.ASN1ObjectIdentifier,java.util.Hashtable)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:boolean atvAreEqual(org.bouncycastle.asn1.x500.AttributeTypeAndValue,org.bouncycastle.asn1.x500.AttributeTypeAndValue)",
            "org.bouncycastle.asn1.x500.style.RFC4519Style:org.bouncycastle.asn1.ASN1Encodable stringToValue(org.bouncycastle.asn1.ASN1ObjectIdentifier,java.lang.String)",
            "org.bouncycastle.asn1.x500.style.RFC4519Style:boolean areEqual(org.bouncycastle.asn1.x500.X500Name,org.bouncycastle.asn1.x500.X500Name)",
            "org.bouncycastle.asn1.x509.CertificatePolicies:org.bouncycastle.asn1.x509.PolicyInformation getPolicyInformation(org.bouncycastle.asn1.ASN1ObjectIdentifier)",
            "org.bouncycastle.asn1.x509.Extension:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.Extensions:boolean equivalent(org.bouncycastle.asn1.x509.Extensions)",
            "org.bouncycastle.asn1.x509.X509DefaultEntryConverter:org.bouncycastle.asn1.ASN1Primitive getConvertedValue(org.bouncycastle.asn1.ASN1ObjectIdentifier,java.lang.String)",
            "org.bouncycastle.asn1.x509.X509Extension:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.X509Extensions:boolean equivalent(org.bouncycastle.asn1.x509.X509Extensions)",
            "org.bouncycastle.asn1.x509.X509Name:java.util.Vector getValues(org.bouncycastle.asn1.ASN1ObjectIdentifier)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x9.X9Curve:void <init>(org.bouncycastle.asn1.x9.X9FieldID,org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9Curve:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey:void <init>(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey:void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.dh.KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.dh.KeyFactorySpi:java.security.PublicKey generatePublic(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSAUtil:boolean isDsaOid(org.bouncycastle.asn1.ASN1ObjectIdentifier)",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey:void populateFromPubKeyInfo(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.KeyFactorySpi:java.security.PublicKey generatePublic(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi:java.security.PublicKey generatePublic(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.KeyFactorySpi:java.security.PublicKey generatePublic(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.elgamal.KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.elgamal.KeyFactorySpi:java.security.PublicKey generatePublic(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.BCGOST3410PrivateKey:boolean compareObj(java.lang.Object,java.lang.Object)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.KeyFactorySpi:java.security.PublicKey generatePublic(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.RSAUtil:boolean isRsaOid(org.bouncycastle.asn1.ASN1ObjectIdentifier)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.Certificate readDERCertificate(org.bouncycastle.asn1.ASN1InputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.CRL readDERCRL(org.bouncycastle.asn1.ASN1InputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLEntryObject:java.lang.String toString()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:java.lang.String toString()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:java.lang.String toString()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:boolean isAlgIdEqual(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.x509.AlgorithmIdentifier)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:java.lang.String getSignatureName(org.bouncycastle.asn1.x509.AlgorithmIdentifier)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:java.lang.String getDigestAlgName(org.bouncycastle.asn1.DERObjectIdentifier)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:java.security.PrivateKey unwrapKey(org.bouncycastle.asn1.x509.AlgorithmIdentifier,byte[],char[],boolean)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:byte[] cryptData(boolean,org.bouncycastle.asn1.x509.AlgorithmIdentifier,char[],boolean,byte[])",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void doStore(java.io.OutputStream,char[],boolean)",
            "org.bouncycastle.jcajce.provider.symmetric.PBEPBKDF2$BasePBKDF2:int getDigestCode(org.bouncycastle.asn1.ASN1ObjectIdentifier)",
            "org.bouncycastle.jce.ECKeyUtil:java.security.PublicKey publicToExplicitParameters(java.security.PublicKey,java.security.Provider)",
            "org.bouncycastle.jce.ECKeyUtil:java.security.PrivateKey privateToExplicitParameters(java.security.PrivateKey,java.security.Provider)",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.PKCS10CertificationRequest:java.lang.String getSignatureName(org.bouncycastle.asn1.x509.AlgorithmIdentifier)",
            "org.bouncycastle.jce.PKCS10CertificationRequest:java.lang.String getDigestAlgName(org.bouncycastle.asn1.DERObjectIdentifier)",
            "org.bouncycastle.jce.X509LDAPCertStoreParameters:boolean checkField(java.lang.Object,java.lang.Object)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void addAdditionalStoresFromAltNames(java.security.cert.X509Certificate,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.JCEDHPrivateKey:void <init>(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jce.provider.JCEDHPublicKey:void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jce.provider.JCEECPublicKey:void populateFromPubKeyInfo(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jce.provider.JDKDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:boolean withinDNSubtree(org.bouncycastle.asn1.ASN1Sequence,org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:boolean equals(java.lang.Object,java.lang.Object)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLC(java.security.cert.X509CRL,java.security.cert.X509CRL,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.X509AttrCertParser:org.bouncycastle.x509.X509AttributeCertificate readDERCertificate(java.io.InputStream)",
            "org.bouncycastle.jce.provider.X509CRLEntryObject:java.lang.String toString()",
            "org.bouncycastle.jce.provider.X509CRLObject:java.lang.String toString()",
            "org.bouncycastle.jce.provider.X509CRLParser:java.security.cert.CRL readDERCRL(java.io.InputStream)",
            "org.bouncycastle.jce.provider.X509CertParser:java.security.cert.Certificate readDERCertificate(java.io.InputStream)",
            "org.bouncycastle.jce.provider.X509CertificateObject:java.lang.String toString()",
            "org.bouncycastle.jce.provider.X509CertificateObject:boolean isAlgIdEqual(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.x509.AlgorithmIdentifier)",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.X509SignatureUtil:java.lang.String getSignatureName(org.bouncycastle.asn1.x509.AlgorithmIdentifier)",
            "org.bouncycastle.jce.provider.X509SignatureUtil:java.lang.String getDigestAlgName(org.bouncycastle.asn1.DERObjectIdentifier)",
            "org.bouncycastle.ocsp.CertificateID:boolean equals(java.lang.Object)",
            "org.bouncycastle.ocsp.OCSPResp:java.lang.Object getResponseObject()",
            "org.bouncycastle.util.Arrays:boolean areEqual(java.lang.Object[],java.lang.Object[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean equals(java.lang.Object)",
            "org.bouncycastle.x509.PKIXCertPathReviewer:boolean processQcStatements(java.security.cert.X509Certificate,int)",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkCRLs(java.security.cert.PKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,java.util.Vector,int)",
            "org.bouncycastle.x509.PKIXCertPathReviewer:java.util.Vector getOCSPUrls(org.bouncycastle.asn1.x509.AuthorityInformationAccess)"
        ]
    },
    "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.BERTaggedObject:void <init>(int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERTaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERTaggedObject:void <init>(int)",
            "org.bouncycastle.asn1.DERTaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERTaggedObject:void <init>(int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLTaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)"
        ]
    },
    "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1TaggedObject getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Encodable getObjectParser(int,boolean)",
            "org.bouncycastle.asn1.DERBMPString:org.bouncycastle.asn1.DERBMPString getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.DERBitString:org.bouncycastle.asn1.DERBitString getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.DERBoolean:org.bouncycastle.asn1.ASN1Boolean getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.DEREnumerated:org.bouncycastle.asn1.ASN1Enumerated getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.DERExternal:void <init>(org.bouncycastle.asn1.ASN1EncodableVector)",
            "org.bouncycastle.asn1.DERGeneralString:org.bouncycastle.asn1.DERGeneralString getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.DERGeneralizedTime:org.bouncycastle.asn1.ASN1GeneralizedTime getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.DERIA5String:org.bouncycastle.asn1.DERIA5String getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.DERInteger:org.bouncycastle.asn1.ASN1Integer getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.DERNumericString:org.bouncycastle.asn1.DERNumericString getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.DERPrintableString:org.bouncycastle.asn1.DERPrintableString getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.DERT61String:org.bouncycastle.asn1.DERT61String getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.DERT61UTF8String:org.bouncycastle.asn1.DERT61UTF8String getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.DERUTCTime:org.bouncycastle.asn1.ASN1UTCTime getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.DERUTF8String:org.bouncycastle.asn1.DERUTF8String getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.DERUniversalString:org.bouncycastle.asn1.DERUniversalString getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.DERVisibleString:org.bouncycastle.asn1.DERVisibleString getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.cmp.CMPCertificate:org.bouncycastle.asn1.'cmp'.CMPCertificate getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cmp.CertOrEncCert:void <init>(org.bouncycastle.asn1.ASN1TaggedObject)",
            "org.bouncycastle.asn1.cmp.CertifiedKeyPair:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.KeyRecRepContent:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.PKIBody:void <init>(org.bouncycastle.asn1.ASN1TaggedObject)",
            "org.bouncycastle.asn1.cms.ContentInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.cms.Time:org.bouncycastle.asn1.cms.Time getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.crmf.PKIArchiveOptions:void <init>(org.bouncycastle.asn1.ASN1TaggedObject)",
            "org.bouncycastle.asn1.crmf.POPOSigningKey:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.crmf.POPOSigningKeyInput:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.dvcs.CertEtcToken:void <init>(org.bouncycastle.asn1.ASN1TaggedObject)",
            "org.bouncycastle.asn1.dvcs.DVCSTime:org.bouncycastle.asn1.dvcs.DVCSTime getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.dvcs.Data:org.bouncycastle.asn1.dvcs.Data getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.esf.CrlOcspRef:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.RevocationValues:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.isismtt.ocsp.RequestedCertificate:org.bouncycastle.asn1.isismtt.ocsp.RequestedCertificate getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.isismtt.x509.ProcurationSyntax:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ocsp.CertStatus:org.bouncycastle.asn1.ocsp.CertStatus getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.ocsp.ResponderID:org.bouncycastle.asn1.ocsp.ResponderID getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.pkcs.CRLBag:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.CertBag:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.ContentInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.SafeBag:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.sec.ECPrivateKey:org.bouncycastle.asn1.ASN1Primitive getObjectInTag(int)",
            "org.bouncycastle.asn1.sec.ECPrivateKeyStructure:org.bouncycastle.asn1.ASN1Primitive getObjectInTag(int)",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.x500.DirectoryString getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:org.bouncycastle.asn1.x509.AttCertIssuer getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.x509.DisplayText:org.bouncycastle.asn1.x509.DisplayText getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.x509.Time:org.bouncycastle.asn1.x509.Time getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.x509.X509Extensions:org.bouncycastle.asn1.x509.X509Extensions getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x9.OtherInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X962Parameters:org.bouncycastle.asn1.x9.X962Parameters getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)"
        ]
    },
    "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.BEROctetString:int encodedLength()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.LazyEncodedSequence:int encodedLength()"
        ]
    },
    "org.bouncycastle.asn1.BERSequence:int encodedLength()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.LazyEncodedSequence:int encodedLength()"
        ]
    },
    "org.bouncycastle.asn1.BERSet:int encodedLength()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.LazyEncodedSequence:int encodedLength()"
        ]
    },
    "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)"
        ]
    },
    "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.LazyEncodedSequence:int encodedLength()"
        ]
    },
    "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.eac.CVCertificate:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.eac.CVCertificateRequest:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.eac.CertificateBody:void <init>(org.bouncycastle.asn1.DERApplicationSpecific,org.bouncycastle.asn1.eac.CertificationAuthorityReference,org.bouncycastle.asn1.eac.PublicKeyDataObject,org.bouncycastle.asn1.eac.CertificateHolderReference,org.bouncycastle.asn1.eac.CertificateHolderAuthorization,org.bouncycastle.asn1.eac.PackedDate,org.bouncycastle.asn1.eac.PackedDate)",
            "org.bouncycastle.asn1.eac.CertificateBody:org.bouncycastle.asn1.ASN1Primitive profileToASN1Object()",
            "org.bouncycastle.asn1.eac.CertificateBody:org.bouncycastle.asn1.ASN1Primitive requestToASN1Object()"
        ]
    },
    "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.SubjectPublicKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.PKCS10CertificationRequest:java.security.PublicKey getPublicKey(java.lang.String)",
            "org.bouncycastle.jce.netscape.NetscapeCertRequest:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.jce.netscape.NetscapeCertRequest:void <init>(java.lang.String,org.bouncycastle.asn1.x509.AlgorithmIdentifier,java.security.PublicKey)"
        ]
    },
    "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.DERExternal:void <init>(org.bouncycastle.asn1.ASN1EncodableVector)"
        ]
    },
    "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.DERSequence:int getBodyLength()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.DERSequence:int encodedLength()",
            "org.bouncycastle.asn1.DERSequence:void encode(org.bouncycastle.asn1.ASN1OutputStream)"
        ]
    },
    "org.bouncycastle.asn1.DERSet:int getBodyLength()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.DERSet:int encodedLength()",
            "org.bouncycastle.asn1.DERSet:void encode(org.bouncycastle.asn1.ASN1OutputStream)"
        ]
    },
    "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)"
        ]
    },
    "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.LazyEncodedSequence:int encodedLength()"
        ]
    },
    "org.bouncycastle.asn1.DLSequence:int getBodyLength()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.DLSequence:int encodedLength()",
            "org.bouncycastle.asn1.DLSequence:void encode(org.bouncycastle.asn1.ASN1OutputStream)"
        ]
    },
    "org.bouncycastle.asn1.DLSet:int getBodyLength()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.DLSet:int encodedLength()",
            "org.bouncycastle.asn1.DLSet:void encode(org.bouncycastle.asn1.ASN1OutputStream)"
        ]
    },
    "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)"
        ]
    },
    "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.LazyEncodedSequence:int encodedLength()"
        ]
    },
    "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:org.bouncycastle.asn1.cms.AuthEnvelopedData getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.KeyTransRecipientInfo:void <init>(org.bouncycastle.asn1.cms.RecipientIdentifier,org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1OctetString)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ess.ContentHints:org.bouncycastle.asn1.ess.ContentHints getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ess.ESSCertIDv2:org.bouncycastle.asn1.ess.ESSCertIDv2 getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.ess.OtherCertID getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:org.bouncycastle.asn1.pkcs.PBES2Parameters getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)"
        ]
    },
    "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.isismtt.x509.AdditionalInformationSyntax:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.isismtt.x509.Restriction:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.sigi.NameOrPseudonym:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.pkcs.PBES2Algorithms:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.x509.Extensions:boolean equivalent(org.bouncycastle.asn1.x509.Extensions)",
            "org.bouncycastle.asn1.x509.X509Extensions:boolean equivalent(org.bouncycastle.asn1.x509.X509Extensions)",
            "org.bouncycastle.asn1.x509.X509Name:java.util.Vector getValues(org.bouncycastle.asn1.ASN1ObjectIdentifier)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.BCGOST3410PrivateKey:boolean compareObj(java.lang.Object,java.lang.Object)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.Certificate readDERCertificate(org.bouncycastle.asn1.ASN1InputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.CRL readDERCRL(org.bouncycastle.asn1.ASN1InputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:boolean isRevoked(java.security.cert.Certificate)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:boolean isAlgIdEqual(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.x509.AlgorithmIdentifier)",
            "org.bouncycastle.jce.X509LDAPCertStoreParameters:boolean checkField(java.lang.Object,java.lang.Object)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void addAdditionalStoresFromAltNames(java.security.cert.X509Certificate,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:boolean withinDNSubtree(org.bouncycastle.asn1.ASN1Sequence,org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:boolean equals(java.lang.Object,java.lang.Object)",
            "org.bouncycastle.jce.provider.X509AttrCertParser:org.bouncycastle.x509.X509AttributeCertificate readDERCertificate(java.io.InputStream)",
            "org.bouncycastle.jce.provider.X509CRLObject:boolean isRevoked(java.security.cert.Certificate)",
            "org.bouncycastle.jce.provider.X509CRLParser:java.security.cert.CRL readDERCRL(java.io.InputStream)",
            "org.bouncycastle.jce.provider.X509CertParser:java.security.cert.Certificate readDERCertificate(java.io.InputStream)",
            "org.bouncycastle.jce.provider.X509CertificateObject:boolean isAlgIdEqual(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.x509.AlgorithmIdentifier)",
            "org.bouncycastle.util.Arrays:boolean areEqual(java.lang.Object[],java.lang.Object[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean equals(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.AttCertIssuer:org.bouncycastle.asn1.x509.AttCertIssuer getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:org.bouncycastle.asn1.x509.ExtendedKeyUsage getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.UserNotice:org.bouncycastle.asn1.x509.UserNotice getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.DERObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509V2AttributeCertificateGenerator:void addExtension(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509V2CRLGenerator:void addExtension(org.bouncycastle.asn1.DERObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509V3CertificateGenerator:void addExtension(org.bouncycastle.asn1.DERObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)"
        ]
    },
    "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.pkcs.PBES2Algorithms:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.x509.Extensions:boolean equivalent(org.bouncycastle.asn1.x509.Extensions)",
            "org.bouncycastle.asn1.x509.X509Extensions:boolean equivalent(org.bouncycastle.asn1.x509.X509Extensions)",
            "org.bouncycastle.asn1.x509.X509Name:java.util.Vector getValues(org.bouncycastle.asn1.ASN1ObjectIdentifier)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.BCGOST3410PrivateKey:boolean compareObj(java.lang.Object,java.lang.Object)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.Certificate readDERCertificate(org.bouncycastle.asn1.ASN1InputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.CRL readDERCRL(org.bouncycastle.asn1.ASN1InputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:boolean isAlgIdEqual(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.x509.AlgorithmIdentifier)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:java.security.cert.Certificate[] engineGetCertificateChain(java.lang.String)",
            "org.bouncycastle.jce.X509LDAPCertStoreParameters:boolean checkField(java.lang.Object,java.lang.Object)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void addAdditionalStoresFromAltNames(java.security.cert.X509Certificate,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:boolean isSelfIssued(java.security.cert.X509Certificate)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:boolean withinDNSubtree(org.bouncycastle.asn1.ASN1Sequence,org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:boolean equals(java.lang.Object,java.lang.Object)",
            "org.bouncycastle.jce.provider.X509AttrCertParser:org.bouncycastle.x509.X509AttributeCertificate readDERCertificate(java.io.InputStream)",
            "org.bouncycastle.jce.provider.X509CRLParser:java.security.cert.CRL readDERCRL(java.io.InputStream)",
            "org.bouncycastle.jce.provider.X509CertParser:java.security.cert.Certificate readDERCertificate(java.io.InputStream)",
            "org.bouncycastle.jce.provider.X509CertificateObject:boolean isAlgIdEqual(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.x509.AlgorithmIdentifier)",
            "org.bouncycastle.util.Arrays:boolean areEqual(java.lang.Object[],java.lang.Object[])",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean equals(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.DHDomainParameters:org.bouncycastle.asn1.x9.DHDomainParameters getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9FieldID:org.bouncycastle.asn1.x9.X9FieldID getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(byte[])",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(java.io.InputStream)"
        ]
    },
    "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void <init>(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void readObject(java.io.ObjectInputStream)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPrivateKey:byte[] getEncoded()",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.BCRSAPrivateCrtKey:byte[] getEncoded()",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.BCRSAPrivateKey:byte[] getEncoded()",
            "org.bouncycastle.jce.provider.JCEElGamalPrivateKey:byte[] getEncoded()",
            "org.bouncycastle.jce.provider.JCERSAPrivateCrtKey:byte[] getEncoded()",
            "org.bouncycastle.jce.provider.JCERSAPrivateKey:byte[] getEncoded()"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] getEncoded(java.lang.String)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.CRL createCRL(org.bouncycastle.asn1.x509.CertificateList)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:void checkSignature(java.security.PublicKey,java.security.Signature)"
        ]
    },
    "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.PKCS10CertificationRequest:boolean verify(java.security.PublicKey,java.lang.String)"
        ]
    },
    "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:java.util.Set getCompleteCRLs(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.util.Date,org.bouncycastle.x509.ExtendedPKIXParameters)"
        ]
    },
    "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void intersectPermittedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree[])"
        ]
    },
    "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCertBC(java.security.cert.CertPath,int,org.bouncycastle.jce.provider.PKIXNameConstraintValidator)",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkNameConstraints()"
        ]
    },
    "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCertBC(java.security.cert.CertPath,int,org.bouncycastle.jce.provider.PKIXNameConstraintValidator)",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkNameConstraints()"
        ]
    },
    "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void prepareNextCertG(java.security.cert.CertPath,int,org.bouncycastle.jce.provider.PKIXNameConstraintValidator)",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkNameConstraints()"
        ]
    },
    "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void checkCRL(org.bouncycastle.asn1.x509.DistributionPoint,org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,org.bouncycastle.jce.provider.CertStatus,org.bouncycastle.jce.provider.ReasonsMask,java.util.List)",
            "org.bouncycastle.jce.provider.RFC3281CertPathUtilities:void checkCRL(org.bouncycastle.asn1.x509.DistributionPoint,org.bouncycastle.x509.X509AttributeCertificate,org.bouncycastle.x509.ExtendedPKIXParameters,java.util.Date,java.security.cert.X509Certificate,org.bouncycastle.jce.provider.CertStatus,org.bouncycastle.jce.provider.ReasonsMask,java.util.List)"
        ]
    },
    "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.X509CRLParser:java.security.cert.CRL readDERCRL(java.io.InputStream)",
            "org.bouncycastle.jce.provider.X509CRLParser:java.security.cert.CRL getCRL()",
            "org.bouncycastle.jce.provider.X509CRLParser:java.security.cert.CRL readPEMCRL(java.io.InputStream)",
            "org.bouncycastle.x509.X509V2CRLGenerator:java.security.cert.X509CRL generateJcaObject(org.bouncycastle.asn1.x509.TBSCertList,byte[])"
        ]
    },
    "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.X509CertificateObject:void checkSignature(java.security.PublicKey,java.security.Signature)"
        ]
    },
    "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean match(java.security.cert.Certificate)"
        ]
    },
    "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.AttributeCertificateHolder:java.security.Principal[] getPrincipals(org.bouncycastle.asn1.x509.GeneralNames)"
        ]
    },
    "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.security.Principal[] getPrincipals()"
        ]
    },
    "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean match(java.security.cert.Certificate)"
        ]
    },
    "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.X509V1CertificateGenerator:java.security.cert.X509Certificate generate(java.security.PrivateKey,java.security.SecureRandom)",
            "org.bouncycastle.x509.X509V2CRLGenerator:java.security.cert.X509CRL generate(java.security.PrivateKey,java.security.SecureRandom)",
            "org.bouncycastle.x509.X509V3CertificateGenerator:java.security.cert.X509Certificate generate(java.security.PrivateKey,java.security.SecureRandom)"
        ]
    },
    "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.X509V1CertificateGenerator:java.security.cert.X509Certificate generate(java.security.PrivateKey,java.lang.String,java.security.SecureRandom)",
            "org.bouncycastle.x509.X509V2AttributeCertificateGenerator:org.bouncycastle.x509.X509AttributeCertificate generate(java.security.PrivateKey,java.lang.String,java.security.SecureRandom)",
            "org.bouncycastle.x509.X509V2CRLGenerator:java.security.cert.X509CRL generate(java.security.PrivateKey,java.lang.String,java.security.SecureRandom)",
            "org.bouncycastle.x509.X509V3CertificateGenerator:java.security.cert.X509Certificate generate(java.security.PrivateKey,java.lang.String,java.security.SecureRandom)"
        ]
    },
    "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getIssuerAlternativeNames(java.security.cert.X509Certificate)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getSubjectAlternativeNames(java.security.cert.X509Certificate)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsInputStream:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2InputStream:void bsFinishedWithStream()",
            "org.bouncycastle.crypto.io.CipherInputStream:void close()",
            "org.bouncycastle.crypto.tls.RecordStream:void safeClose()",
            "org.bouncycastle.jcajce.io.CipherInputStream:void close()",
            "org.bouncycastle.util.io.TeeInputStream:void close()"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsOutputStream:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2OutputStream:void close()",
            "org.bouncycastle.asn1.ASN1OutputStream:void close()",
            "org.bouncycastle.crypto.io.CipherOutputStream:void close()",
            "org.bouncycastle.crypto.tls.RecordStream:void safeClose()",
            "org.bouncycastle.jcajce.io.CipherOutputStream:void close()",
            "org.bouncycastle.util.io.BufferingOutputStream:void close()",
            "org.bouncycastle.util.io.TeeInputStream:void close()",
            "org.bouncycastle.util.io.TeeOutputStream:void close()"
        ]
    },
    "org.bouncycastle.asn1.BERConstructedOctetString:byte[] toByteArray(org.bouncycastle.asn1.ASN1Primitive)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Primitive)"
        ]
    },
    "org.bouncycastle.asn1.DERExternal:int encodedLength()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.LazyEncodedSequence:int encodedLength()"
        ]
    },
    "org.bouncycastle.asn1.isismtt.ocsp.RequestedCertificate:byte[] getCertificateBytes()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.V2TBSCertListGenerator:org.bouncycastle.asn1.ASN1Sequence createReasonExtension(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.V2TBSCertListGenerator:void addCRLEntry(org.bouncycastle.asn1.ASN1Integer,org.bouncycastle.asn1.x509.Time,int,org.bouncycastle.asn1.ASN1GeneralizedTime)",
            "org.bouncycastle.asn1.x509.V2TBSCertListGenerator:void <clinit>()"
        ]
    },
    "org.bouncycastle.asn1.x509.V2TBSCertListGenerator:org.bouncycastle.asn1.ASN1Sequence createInvalidityDateExtension(org.bouncycastle.asn1.ASN1GeneralizedTime)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.V2TBSCertListGenerator:void addCRLEntry(org.bouncycastle.asn1.ASN1Integer,org.bouncycastle.asn1.x509.Time,int,org.bouncycastle.asn1.ASN1GeneralizedTime)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.rsa.BCRSAPublicKey:void writeObject(java.io.ObjectOutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLEntryObject:javax.security.auth.x500.X500Principal getCertificateIssuer()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLEntryObject:java.lang.String toString()",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCertStatus(java.util.Date,java.security.cert.X509CRL,java.lang.Object,org.bouncycastle.jce.provider.CertStatus)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLEntryObject:byte[] getExtensionValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:byte[] getExtensionValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:boolean isIndirectCRL(java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:java.util.Set getDeltaCRLs(java.util.Date,org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:boolean isIndirectCRL(java.security.cert.X509CRL)",
            "org.bouncycastle.x509.X509CRLStoreSelector:boolean match(java.lang.Object)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:javax.security.auth.x500.X500Principal getIssuerX500Principal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:javax.security.auth.x500.X500Principal getIssuerPrincipal(java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:java.util.Set[] processCRLA1ii(java.util.Date,org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.X509Certificate,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLC(java.security.cert.X509CRL,java.security.cert.X509CRL,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkCRLs(java.security.cert.PKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,java.util.Vector,int)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:java.security.Principal getIssuerDN()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:java.lang.String toString()",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:java.security.cert.Certificate[] engineGetCertificateChain(java.lang.String)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:boolean isSelfIssued(java.security.cert.X509Certificate)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getExtensionValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:java.security.cert.Certificate[] engineGetCertificateChain(java.lang.String)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:java.util.Date getValidCertDateFromValidityModel(org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.CertPath,int)",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkSignatures()",
            "org.bouncycastle.x509.PKIXCertPathReviewer:java.util.Collection getTrustAnchors(java.security.cert.X509Certificate,java.util.Set)",
            "org.bouncycastle.x509.X509V3CertificateGenerator:void copyAndAddExtension(java.lang.String,boolean,java.security.cert.X509Certificate)",
            "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure:org.bouncycastle.asn1.ASN1Sequence fromCertificate(java.security.cert.X509Certificate)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getIssuerAlternativeNames(java.security.cert.X509Certificate)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getSubjectAlternativeNames(java.security.cert.X509Certificate)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:java.util.Collection getAlternativeNames(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:java.util.Collection getSubjectAlternativeNames()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:java.util.Collection getIssuerAlternativeNames()"
        ]
    },
    "org.bouncycastle.jcajce.provider.symmetric.AES$AlgParamsGCM:byte[] engineGetEncoded()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.symmetric.AES$AlgParamsGCM:byte[] engineGetEncoded(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.symmetric.CAST5$AlgParams:byte[] engineGetEncoded(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.symmetric.IDEA$AlgParams:byte[] engineGetEncoded(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.symmetric.IDEA$AlgParams:byte[] engineGetEncoded()",
            "org.bouncycastle.jcajce.provider.symmetric.IDEA$AlgParams:byte[] engineGetEncoded(java.lang.String)"
        ]
    },
    "org.bouncycastle.jcajce.provider.symmetric.RC2$AlgParams:byte[] engineGetEncoded(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:java.security.AlgorithmParameters engineGetParameters()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.symmetric.util.IvAlgorithmParameters:byte[] engineGetEncoded(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.symmetric.util.IvAlgorithmParameters:byte[] engineGetEncoded()",
            "org.bouncycastle.jcajce.provider.symmetric.util.IvAlgorithmParameters:byte[] engineGetEncoded(java.lang.String)"
        ]
    },
    "org.bouncycastle.jce.provider.X509AttrCertParser:org.bouncycastle.x509.X509AttributeCertificate getCertificate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.X509AttrCertParser:org.bouncycastle.x509.X509AttributeCertificate readDERCertificate(java.io.InputStream)",
            "org.bouncycastle.jce.provider.X509AttrCertParser:java.lang.Object engineRead()"
        ]
    },
    "org.bouncycastle.jce.provider.X509CRLEntryObject:javax.security.auth.x500.X500Principal getCertificateIssuer()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCertStatus(java.util.Date,java.security.cert.X509CRL,java.lang.Object,org.bouncycastle.jce.provider.CertStatus)",
            "org.bouncycastle.jce.provider.X509CRLEntryObject:java.lang.String toString()"
        ]
    },
    "org.bouncycastle.jce.provider.X509CRLEntryObject:byte[] getExtensionValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)"
        ]
    },
    "org.bouncycastle.jce.provider.X509CRLObject:byte[] getExtensionValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:boolean isIndirectCRL(java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:java.util.Set getDeltaCRLs(java.util.Date,org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:boolean isIndirectCRL(java.security.cert.X509CRL)",
            "org.bouncycastle.x509.X509CRLStoreSelector:boolean match(java.lang.Object)"
        ]
    },
    "org.bouncycastle.jce.provider.X509CRLObject:javax.security.auth.x500.X500Principal getIssuerX500Principal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:javax.security.auth.x500.X500Principal getIssuerPrincipal(java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:java.util.Set[] processCRLA1ii(java.util.Date,org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.X509Certificate,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLC(java.security.cert.X509CRL,java.security.cert.X509CRL,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkCRLs(java.security.cert.PKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,java.util.Vector,int)"
        ]
    },
    "org.bouncycastle.jce.provider.X509CertificateObject:java.security.Principal getIssuerDN()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:java.security.cert.Certificate[] engineGetCertificateChain(java.lang.String)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:boolean isSelfIssued(java.security.cert.X509Certificate)",
            "org.bouncycastle.jce.provider.X509CertificateObject:java.lang.String toString()"
        ]
    },
    "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getExtensionValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:java.security.cert.Certificate[] engineGetCertificateChain(java.lang.String)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:java.util.Date getValidCertDateFromValidityModel(org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.CertPath,int)",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkSignatures()",
            "org.bouncycastle.x509.PKIXCertPathReviewer:java.util.Collection getTrustAnchors(java.security.cert.X509Certificate,java.util.Set)",
            "org.bouncycastle.x509.X509V3CertificateGenerator:void copyAndAddExtension(java.lang.String,boolean,java.security.cert.X509Certificate)",
            "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure:org.bouncycastle.asn1.ASN1Sequence fromCertificate(java.security.cert.X509Certificate)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getIssuerAlternativeNames(java.security.cert.X509Certificate)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getSubjectAlternativeNames(java.security.cert.X509Certificate)"
        ]
    },
    "org.bouncycastle.jce.provider.X509CertificateObject:java.util.Collection getAlternativeNames(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.X509CertificateObject:java.util.Collection getSubjectAlternativeNames()",
            "org.bouncycastle.jce.provider.X509CertificateObject:java.util.Collection getIssuerAlternativeNames()"
        ]
    },
    "org.bouncycastle.ocsp.BasicOCSPResp:byte[] getTBSResponseData()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.ocsp.BasicOCSPResp:byte[] getEncoded()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.ocsp.OCSPRespGenerator:org.bouncycastle.ocsp.OCSPResp generate(int,java.lang.Object)"
        ]
    },
    "org.bouncycastle.ocsp.OCSPReq:byte[] getTBSRequest()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.ocsp.OCSPResp:byte[] getEncoded()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PrivateKey:byte[] getEncoded()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil:org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePrivateKeyParameter(java.security.PrivateKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.KeyFactory:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi:void encodeKey(java.security.Key,java.io.DataOutputStream)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineInit(java.security.Key,java.security.spec.AlgorithmParameterSpec)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.ECKeyUtil:java.security.PrivateKey privateToExplicitParameters(java.security.PrivateKey,java.security.Provider)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)"
        ]
    },
    "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PublicKey:byte[] getEncoded()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil:org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePublicKeyParameter(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.KeyFactory:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi:void encodeKey(java.security.Key,java.io.DataOutputStream)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:org.bouncycastle.asn1.x509.SubjectKeyIdentifier createSubjectKeyId(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineInit(java.security.Key,java.security.spec.AlgorithmParameterSpec)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.ECKeyUtil:java.security.PublicKey publicToExplicitParameters(java.security.PublicKey,java.security.Provider)",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void <init>(java.lang.String,org.bouncycastle.asn1.x509.X509Name,java.security.PublicKey,org.bouncycastle.asn1.ASN1Set,java.security.PrivateKey,java.lang.String)",
            "org.bouncycastle.jce.netscape.NetscapeCertRequest:org.bouncycastle.asn1.ASN1Primitive getKeySpec()",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier(java.security.PublicKey)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.ocsp.CertificateID:org.bouncycastle.asn1.ocsp.CertID createCertID(org.bouncycastle.asn1.x509.AlgorithmIdentifier,java.security.cert.X509Certificate,org.bouncycastle.asn1.ASN1Integer,java.lang.String)",
            "org.bouncycastle.ocsp.RespID:void <init>(java.security.PublicKey)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean match(java.security.cert.Certificate)",
            "org.bouncycastle.x509.X509V1CertificateGenerator:void setPublicKey(java.security.PublicKey)",
            "org.bouncycastle.x509.X509V3CertificateGenerator:void setPublicKey(java.security.PublicKey)",
            "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure:org.bouncycastle.asn1.ASN1Sequence fromCertificate(java.security.cert.X509Certificate)",
            "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure:org.bouncycastle.asn1.ASN1Sequence fromKey(java.security.PublicKey)",
            "org.bouncycastle.x509.extension.SubjectKeyIdentifierStructure:org.bouncycastle.asn1.ASN1OctetString fromPublicKey(java.security.PublicKey)"
        ]
    },
    "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey:byte[] getEncoded()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil:org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePrivateKeyParameter(java.security.PrivateKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.KeyFactory:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi:void encodeKey(java.security.Key,java.io.DataOutputStream)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineInit(java.security.Key,java.security.spec.AlgorithmParameterSpec)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.ECKeyUtil:java.security.PrivateKey privateToExplicitParameters(java.security.PrivateKey,java.security.Provider)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)"
        ]
    },
    "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcEliecePublicKey:byte[] getEncoded()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil:org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePublicKeyParameter(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.KeyFactory:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi:void encodeKey(java.security.Key,java.io.DataOutputStream)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:org.bouncycastle.asn1.x509.SubjectKeyIdentifier createSubjectKeyId(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineInit(java.security.Key,java.security.spec.AlgorithmParameterSpec)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.ECKeyUtil:java.security.PublicKey publicToExplicitParameters(java.security.PublicKey,java.security.Provider)",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void <init>(java.lang.String,org.bouncycastle.asn1.x509.X509Name,java.security.PublicKey,org.bouncycastle.asn1.ASN1Set,java.security.PrivateKey,java.lang.String)",
            "org.bouncycastle.jce.netscape.NetscapeCertRequest:org.bouncycastle.asn1.ASN1Primitive getKeySpec()",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier(java.security.PublicKey)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.ocsp.CertificateID:org.bouncycastle.asn1.ocsp.CertID createCertID(org.bouncycastle.asn1.x509.AlgorithmIdentifier,java.security.cert.X509Certificate,org.bouncycastle.asn1.ASN1Integer,java.lang.String)",
            "org.bouncycastle.ocsp.RespID:void <init>(java.security.PublicKey)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean match(java.security.cert.Certificate)",
            "org.bouncycastle.x509.X509V1CertificateGenerator:void setPublicKey(java.security.PublicKey)",
            "org.bouncycastle.x509.X509V3CertificateGenerator:void setPublicKey(java.security.PublicKey)",
            "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure:org.bouncycastle.asn1.ASN1Sequence fromCertificate(java.security.cert.X509Certificate)",
            "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure:org.bouncycastle.asn1.ASN1Sequence fromKey(java.security.PublicKey)",
            "org.bouncycastle.x509.extension.SubjectKeyIdentifierStructure:org.bouncycastle.asn1.ASN1OctetString fromPublicKey(java.security.PublicKey)"
        ]
    },
    "org.bouncycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey:byte[] getEncoded()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil:org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePrivateKeyParameter(java.security.PrivateKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.KeyFactory:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi:void encodeKey(java.security.Key,java.io.DataOutputStream)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineInit(java.security.Key,java.security.spec.AlgorithmParameterSpec)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.ECKeyUtil:java.security.PrivateKey privateToExplicitParameters(java.security.PrivateKey,java.security.Provider)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)"
        ]
    },
    "org.bouncycastle.x509.X509V2AttributeCertificate:void verify(java.security.PublicKey,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.examples.AttrCertExample:void main(java.lang.String[])"
        ]
    },
    "org.bouncycastle.x509.X509V2AttributeCertificate:byte[] getEncoded()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.X509V2AttributeCertificate:boolean equals(java.lang.Object)",
            "org.bouncycastle.x509.X509V2AttributeCertificate:int hashCode()"
        ]
    },
    "org.bouncycastle.asn1.ASN1Set:void sort()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Set:void <init>(org.bouncycastle.asn1.ASN1EncodableVector,boolean)",
            "org.bouncycastle.asn1.ASN1Set:void <init>(org.bouncycastle.asn1.ASN1Encodable[],boolean)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Primitive toDERObject()"
        ]
    },
    "org.bouncycastle.asn1.DERBitString:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.DistributionPoint:java.lang.String toString()",
            "org.bouncycastle.asn1.x509.DistributionPointName:java.lang.String toString()",
            "org.bouncycastle.asn1.x509.GeneralName:java.lang.String toString()",
            "org.bouncycastle.asn1.x509.IssuingDistributionPoint:java.lang.String toString()",
            "org.bouncycastle.asn1.x509.RoleSyntax:java.lang.String[] getRoleAuthorityAsString()",
            "org.bouncycastle.asn1.x509.X509Name:java.lang.String toString(boolean,java.util.Hashtable)",
            "org.bouncycastle.i18n.LocalizedMessage$FilteredArguments:java.lang.Object filter(int,java.lang.Object)",
            "org.bouncycastle.i18n.filter.TrustedInput:java.lang.String toString()",
            "org.bouncycastle.i18n.filter.UntrustedInput:java.lang.String getString()",
            "org.bouncycastle.i18n.filter.UntrustedInput:java.lang.String toString()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.CertPath engineGenerateCertPath(java.util.List)"
        ]
    },
    "org.bouncycastle.asn1.x500.DirectoryString:java.lang.String getString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.esf.SignerLocation:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x500.DirectoryString:java.lang.String getString()",
            "org.bouncycastle.asn1.x500.DirectoryString:java.lang.String toString()",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String canonicalize(java.lang.String)",
            "org.bouncycastle.asn1.x509.DisplayText:java.lang.String getString()",
            "org.bouncycastle.asn1.x509.RoleSyntax:void <init>(org.bouncycastle.asn1.x509.GeneralNames,org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.asn1.x509.RoleSyntax:java.lang.String getRoleNameAsString()",
            "org.bouncycastle.asn1.x509.RoleSyntax:java.lang.String[] getRoleAuthorityAsString()",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:java.lang.String canonicalize(java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:java.util.Collection getAlternativeNames(byte[])",
            "org.bouncycastle.jce.provider.X509CertificateObject:java.util.Collection getAlternativeNames(byte[])",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.x500.DirectoryString:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.DistributionPointName:java.lang.String toString()",
            "org.bouncycastle.asn1.x509.GeneralName:java.lang.String toString()",
            "org.bouncycastle.asn1.x509.RoleSyntax:java.lang.String[] getRoleAuthorityAsString()",
            "org.bouncycastle.asn1.x509.X509Name:java.lang.String toString(boolean,java.util.Hashtable)",
            "org.bouncycastle.i18n.LocalizedMessage$FilteredArguments:java.lang.Object filter(int,java.lang.Object)",
            "org.bouncycastle.i18n.filter.TrustedInput:java.lang.String toString()",
            "org.bouncycastle.i18n.filter.UntrustedInput:java.lang.String getString()",
            "org.bouncycastle.i18n.filter.UntrustedInput:java.lang.String toString()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.CertPath engineGenerateCertPath(java.util.List)"
        ]
    },
    "org.bouncycastle.asn1.x509.DisplayText:java.lang.String getString()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.RoleSyntax:void <init>(org.bouncycastle.asn1.x509.GeneralNames,org.bouncycastle.asn1.x509.GeneralName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.RoleSyntax:void <init>(org.bouncycastle.asn1.x509.GeneralName)"
        ]
    },
    "org.bouncycastle.asn1.x509.RoleSyntax:java.lang.String getRoleNameAsString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.RoleSyntax:java.lang.String toString()"
        ]
    },
    "org.bouncycastle.asn1.DERUniversalString:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.DistributionPointName:java.lang.String toString()",
            "org.bouncycastle.asn1.x509.GeneralName:java.lang.String toString()",
            "org.bouncycastle.asn1.x509.RoleSyntax:java.lang.String[] getRoleAuthorityAsString()",
            "org.bouncycastle.asn1.x509.X509Name:java.lang.String toString(boolean,java.util.Hashtable)",
            "org.bouncycastle.i18n.LocalizedMessage$FilteredArguments:java.lang.Object filter(int,java.lang.Object)",
            "org.bouncycastle.i18n.filter.TrustedInput:java.lang.String toString()",
            "org.bouncycastle.i18n.filter.UntrustedInput:java.lang.String getString()",
            "org.bouncycastle.i18n.filter.UntrustedInput:java.lang.String toString()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.CertPath engineGenerateCertPath(java.util.List)"
        ]
    },
    "org.bouncycastle.jce.provider.JCEECPrivateKey:void writeObject(java.io.ObjectOutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.provider.JCERSAPrivateKey:void writeObject(java.io.ObjectOutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.provider.JDKDSAPrivateKey:void writeObject(java.io.ObjectOutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:java.util.List sortCerts(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.util.List)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:boolean isRevoked(java.security.cert.Certificate)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.provider.CertPathValidatorUtilities:javax.security.auth.x500.X500Principal getEncodedIssuerPrincipal(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:java.security.cert.TrustAnchor findTrustAnchor(java.security.cert.X509Certificate,java.util.Set,java.lang.String)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCertStatus(java.util.Date,java.security.cert.X509CRL,java.lang.Object,org.bouncycastle.jce.provider.CertStatus)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:java.util.Set getCompleteCRLs(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.util.Date,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCertA(java.security.cert.CertPath,org.bouncycastle.x509.ExtendedPKIXParameters,int,java.security.PublicKey,boolean,javax.security.auth.x500.X500Principal,java.security.cert.X509Certificate)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void checkCRLs(org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,java.util.List)",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkCRLs(java.security.cert.PKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,java.util.Vector,int)",
            "org.bouncycastle.x509.PKIXCertPathReviewer:java.util.Collection getTrustAnchors(java.security.cert.X509Certificate,java.util.Set)"
        ]
    },
    "org.bouncycastle.jce.provider.CertPathValidatorUtilities:java.util.Set getCompleteCRLs(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.util.Date,org.bouncycastle.x509.ExtendedPKIXParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void checkCRL(org.bouncycastle.asn1.x509.DistributionPoint,org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,org.bouncycastle.jce.provider.CertStatus,org.bouncycastle.jce.provider.ReasonsMask,java.util.List)",
            "org.bouncycastle.jce.provider.RFC3281CertPathUtilities:void checkCRL(org.bouncycastle.asn1.x509.DistributionPoint,org.bouncycastle.x509.X509AttributeCertificate,org.bouncycastle.x509.ExtendedPKIXParameters,java.util.Date,java.security.cert.X509Certificate,org.bouncycastle.jce.provider.CertStatus,org.bouncycastle.jce.provider.ReasonsMask,java.util.List)"
        ]
    },
    "org.bouncycastle.jce.provider.CertPathValidatorUtilities:java.util.Collection findIssuerCerts(java.security.cert.X509Certificate,org.bouncycastle.x509.ExtendedPKIXBuilderParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.PKIXAttrCertPathBuilderSpi:java.security.cert.CertPathBuilderResult build(org.bouncycastle.x509.X509AttributeCertificate,java.security.cert.X509Certificate,org.bouncycastle.x509.ExtendedPKIXBuilderParameters,java.util.List)",
            "org.bouncycastle.jce.provider.PKIXCertPathBuilderSpi:java.security.cert.CertPathBuilderResult build(java.security.cert.X509Certificate,org.bouncycastle.x509.ExtendedPKIXBuilderParameters,java.util.List)"
        ]
    },
    "org.bouncycastle.jce.provider.X509CRLObject:boolean isRevoked(java.security.cert.Certificate)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.AttributeCertificateIssuer:boolean match(java.security.cert.Certificate)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.CertStoreCollectionSpi:java.util.Collection engineGetCertificates(java.security.cert.CertSelector)",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean match(java.lang.Object)",
            "org.bouncycastle.x509.examples.AttrCertExample:void main(java.lang.String[])"
        ]
    },
    "org.bouncycastle.x509.PKIXCertPathReviewer:void checkCRLs(java.security.cert.PKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,java.util.Vector,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkRevocation(java.security.cert.PKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,java.util.Vector,java.util.Vector,int)"
        ]
    },
    "org.bouncycastle.x509.util.LDAPStoreHelper:javax.security.auth.x500.X500Principal getCertificateIssuer(java.security.cert.X509Certificate)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.util.LDAPStoreHelper:java.util.List cRLIssuerSearch(org.bouncycastle.x509.X509CRLStoreSelector,java.lang.String[],java.lang.String[],java.lang.String[])"
        ]
    },
    "org.bouncycastle.jce.provider.CertPathValidatorUtilities:javax.security.auth.x500.X500Principal getSubjectPrincipal(java.security.cert.X509Certificate)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi:java.security.cert.CertPathValidatorResult engineValidate(java.security.cert.CertPath,java.security.cert.CertPathParameters)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCertBC(java.security.cert.CertPath,int,org.bouncycastle.jce.provider.PKIXNameConstraintValidator)",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkNameConstraints()",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkSignatures()"
        ]
    },
    "org.bouncycastle.jce.provider.RFC3281CertPathUtilities:void processAttrCert4(java.security.cert.X509Certificate,org.bouncycastle.x509.ExtendedPKIXParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.PKIXAttrCertPathValidatorSpi:java.security.cert.CertPathValidatorResult engineValidate(java.security.cert.CertPath,java.security.cert.CertPathParameters)"
        ]
    },
    "org.bouncycastle.jce.provider.X509LDAPCertStoreSpi:java.util.Set certSubjectSerialSearch(java.security.cert.X509CertSelector,java.lang.String[],java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.X509LDAPCertStoreSpi:java.util.Set getEndCertificates(java.security.cert.X509CertSelector)",
            "org.bouncycastle.jce.provider.X509LDAPCertStoreSpi:java.util.Set getCACertificates(java.security.cert.X509CertSelector)",
            "org.bouncycastle.jce.provider.X509LDAPCertStoreSpi:java.util.Set getCrossCertificates(java.security.cert.X509CertSelector)"
        ]
    },
    "org.bouncycastle.x509.util.LDAPStoreHelper:java.util.List certSubjectSerialSearch(org.bouncycastle.x509.X509CertStoreSelector,java.lang.String[],java.lang.String[],java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.util.LDAPStoreHelper:java.util.Collection getUserCertificates(org.bouncycastle.x509.X509CertStoreSelector)",
            "org.bouncycastle.x509.util.LDAPStoreHelper:java.util.Collection getCACertificates(org.bouncycastle.x509.X509CertStoreSelector)"
        ]
    },
    "org.bouncycastle.x509.util.LDAPStoreHelper:java.util.List crossCertificatePairSubjectSearch(org.bouncycastle.x509.X509CertPairStoreSelector,java.lang.String[],java.lang.String[],java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.util.LDAPStoreHelper:java.util.Collection getCrossCertificatePairs(org.bouncycastle.x509.X509CertPairStoreSelector)"
        ]
    },
    "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void prepareNextCertB1(int,java.util.List[],java.lang.String,java.util.Map,java.security.cert.X509Certificate)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkPolicy()"
        ]
    },
    "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:org.bouncycastle.jce.provider.PKIXPolicyNode prepareCertB(java.security.cert.CertPath,int,java.util.List[],org.bouncycastle.jce.provider.PKIXPolicyNode,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi:java.security.cert.CertPathValidatorResult engineValidate(java.security.cert.CertPath,java.security.cert.CertPathParameters)"
        ]
    },
    "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:org.bouncycastle.jce.provider.PKIXPolicyNode processCertD(java.security.cert.CertPath,int,java.util.Set,org.bouncycastle.jce.provider.PKIXPolicyNode,java.util.List[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi:java.security.cert.CertPathValidatorResult engineValidate(java.security.cert.CertPath,java.security.cert.CertPathParameters)"
        ]
    },
    "org.bouncycastle.x509.PKIXCertPathReviewer:void checkPolicy()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.PKIXCertPathReviewer:void doChecks()"
        ]
    },
    "org.bouncycastle.ocsp.BasicOCSPResp:java.security.cert.X509Certificate[] getCerts(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.ocsp.BasicOCSPResp:java.security.cert.CertStore getCertificates(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.ocsp.OCSPReq:java.security.cert.X509Certificate[] getCerts(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.ocsp.OCSPReq:java.security.cert.CertStore getCertificates(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.ocsp.OCSPReqGenerator:org.bouncycastle.ocsp.OCSPReq generate()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.ocsp.OCSPReqGenerator:org.bouncycastle.ocsp.OCSPReq generate(java.lang.String,java.security.PrivateKey,java.security.cert.X509Certificate[],java.lang.String,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.ocsp.OCSPReqGenerator:org.bouncycastle.ocsp.OCSPReq generate(java.lang.String,java.security.PrivateKey,java.security.cert.X509Certificate[],java.lang.String)"
        ]
    },
    "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(int,org.bouncycastle.asn1.ASN1EncodableVector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.BERApplicationSpecific:void <init>(int,org.bouncycastle.asn1.ASN1EncodableVector)",
            "org.bouncycastle.asn1.eac.CVCertificate:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.eac.CVCertificateRequest:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.eac.CertificateBody:org.bouncycastle.asn1.ASN1Primitive profileToASN1Object()",
            "org.bouncycastle.asn1.eac.CertificateBody:org.bouncycastle.asn1.ASN1Primitive requestToASN1Object()",
            "org.bouncycastle.asn1.eac.CertificateHolderAuthorization:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"
        ]
    },
    "org.bouncycastle.crypto.signers.DSADigestSigner:byte[] derEncode(java.math.BigInteger,java.math.BigInteger)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.signers.DSADigestSigner:byte[] generateSignature()"
        ]
    },
    "org.bouncycastle.crypto.signers.RSADigestSigner:byte[] derEncode(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.signers.RSADigestSigner:byte[] generateSignature()",
            "org.bouncycastle.crypto.signers.RSADigestSigner:boolean verifySignature(byte[])"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dh.AlgorithmParametersSpi:byte[] engineGetEncoded()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.dh.AlgorithmParametersSpi:byte[] engineGetEncoded(java.lang.String)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey:byte[] getEncoded()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil:org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePrivateKeyParameter(java.security.PrivateKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.KeyFactory:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi:void encodeKey(java.security.Key,java.io.DataOutputStream)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineInit(java.security.Key,java.security.spec.AlgorithmParameterSpec)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.ECKeyUtil:java.security.PrivateKey privateToExplicitParameters(java.security.PrivateKey,java.security.Provider)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dsa.AlgorithmParametersSpi:byte[] engineGetEncoded()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.AlgorithmParametersSpi:byte[] engineGetEncoded(java.lang.String)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner:byte[] derEncode(java.math.BigInteger,java.math.BigInteger)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner:byte[] engineSign()"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey:byte[] getEncoded()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey:void writeObject(java.io.ObjectOutputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil:org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePrivateKeyParameter(java.security.PrivateKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.KeyFactory:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi:void encodeKey(java.security.Key,java.io.DataOutputStream)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineInit(java.security.Key,java.security.spec.AlgorithmParameterSpec)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.ECKeyUtil:java.security.PrivateKey privateToExplicitParameters(java.security.PrivateKey,java.security.Provider)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey:byte[] getEncoded()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey:void writeObject(java.io.ObjectOutputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil:org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePrivateKeyParameter(java.security.PrivateKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.KeyFactory:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi:void encodeKey(java.security.Key,java.io.DataOutputStream)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineInit(java.security.Key,java.security.spec.AlgorithmParameterSpec)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.ECKeyUtil:java.security.PrivateKey privateToExplicitParameters(java.security.PrivateKey,java.security.Provider)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$StdDSAEncoder:byte[] encode(java.math.BigInteger,java.math.BigInteger)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.util.DSABase:byte[] engineSign()"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:byte[] getEncoded()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void writeObject(java.io.ObjectOutputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil:org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePrivateKeyParameter(java.security.PrivateKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.KeyFactory:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi:void encodeKey(java.security.Key,java.io.DataOutputStream)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineInit(java.security.Key,java.security.spec.AlgorithmParameterSpec)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.ECKeyUtil:java.security.PrivateKey privateToExplicitParameters(java.security.PrivateKey,java.security.Provider)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.elgamal.AlgorithmParametersSpi:byte[] engineGetEncoded()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.elgamal.AlgorithmParametersSpi:byte[] engineGetEncoded(java.lang.String)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.elgamal.BCElGamalPrivateKey:byte[] getEncoded()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil:org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePrivateKeyParameter(java.security.PrivateKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.KeyFactory:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi:void encodeKey(java.security.Key,java.io.DataOutputStream)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineInit(java.security.Key,java.security.spec.AlgorithmParameterSpec)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.ECKeyUtil:java.security.PrivateKey privateToExplicitParameters(java.security.PrivateKey,java.security.Provider)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.elgamal.BCElGamalPublicKey:byte[] getEncoded()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil:org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePublicKeyParameter(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.KeyFactory:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi:void encodeKey(java.security.Key,java.io.DataOutputStream)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:org.bouncycastle.asn1.x509.SubjectKeyIdentifier createSubjectKeyId(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineInit(java.security.Key,java.security.spec.AlgorithmParameterSpec)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.ECKeyUtil:java.security.PublicKey publicToExplicitParameters(java.security.PublicKey,java.security.Provider)",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void <init>(java.lang.String,org.bouncycastle.asn1.x509.X509Name,java.security.PublicKey,org.bouncycastle.asn1.ASN1Set,java.security.PrivateKey,java.lang.String)",
            "org.bouncycastle.jce.netscape.NetscapeCertRequest:org.bouncycastle.asn1.ASN1Primitive getKeySpec()",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier(java.security.PublicKey)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.ocsp.CertificateID:org.bouncycastle.asn1.ocsp.CertID createCertID(org.bouncycastle.asn1.x509.AlgorithmIdentifier,java.security.cert.X509Certificate,org.bouncycastle.asn1.ASN1Integer,java.lang.String)",
            "org.bouncycastle.ocsp.RespID:void <init>(java.security.PublicKey)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean match(java.security.cert.Certificate)",
            "org.bouncycastle.x509.X509V1CertificateGenerator:void setPublicKey(java.security.PublicKey)",
            "org.bouncycastle.x509.X509V3CertificateGenerator:void setPublicKey(java.security.PublicKey)",
            "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure:org.bouncycastle.asn1.ASN1Sequence fromCertificate(java.security.cert.X509Certificate)",
            "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure:org.bouncycastle.asn1.ASN1Sequence fromKey(java.security.PublicKey)",
            "org.bouncycastle.x509.extension.SubjectKeyIdentifierStructure:org.bouncycastle.asn1.ASN1OctetString fromPublicKey(java.security.PublicKey)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.gost.AlgorithmParametersSpi:byte[] engineGetEncoded()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.gost.AlgorithmParametersSpi:byte[] engineGetEncoded(java.lang.String)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.gost.BCGOST3410PrivateKey:byte[] getEncoded()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil:org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePrivateKeyParameter(java.security.PrivateKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.KeyFactory:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi:void encodeKey(java.security.Key,java.io.DataOutputStream)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineInit(java.security.Key,java.security.spec.AlgorithmParameterSpec)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.ECKeyUtil:java.security.PrivateKey privateToExplicitParameters(java.security.PrivateKey,java.security.Provider)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ies.AlgorithmParametersSpi:byte[] engineGetEncoded()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.ies.AlgorithmParametersSpi:byte[] engineGetEncoded(java.lang.String)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.rsa.AlgorithmParametersSpi$OAEP:byte[] engineGetEncoded()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.AlgorithmParametersSpi$OAEP:byte[] engineGetEncoded(java.lang.String)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.rsa.AlgorithmParametersSpi$PSS:byte[] engineGetEncoded()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.AlgorithmParametersSpi$PSS:byte[] engineGetEncoded(java.lang.String)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi:byte[] derEncode(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi:byte[] engineSign()",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi:boolean engineVerify(byte[])"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedSubjectPublicKeyInfo(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey:byte[] getEncoded()",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey:byte[] getEncoded()",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey:byte[] getEncoded()",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey:byte[] getEncoded()",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.BCGOST3410PublicKey:byte[] getEncoded()",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedSubjectPublicKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedSubjectPublicKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,byte[])",
            "org.bouncycastle.jce.provider.JCEDHPublicKey:byte[] getEncoded()",
            "org.bouncycastle.jce.provider.JCEECPublicKey:byte[] getEncoded()"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLEntryObject:byte[] getEncoded()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.X509V2CRLGenerator:void addCRL(java.security.cert.X509CRL)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:byte[] getEncoded()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:byte[] getTBSCertList()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void verify(java.security.PublicKey,java.lang.String)",
            "org.bouncycastle.jce.PrincipalUtil:org.bouncycastle.jce.X509Principal getIssuerX509Principal(java.security.cert.X509CRL)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getTBSCertificate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:void checkSignature(java.security.PublicKey,java.security.Signature)",
            "org.bouncycastle.jce.PrincipalUtil:org.bouncycastle.jce.X509Principal getIssuerX509Principal(java.security.cert.X509Certificate)",
            "org.bouncycastle.jce.PrincipalUtil:org.bouncycastle.jce.X509Principal getSubjectX509Principal(java.security.cert.X509Certificate)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getEncoded()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] getEncoded(java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:org.bouncycastle.asn1.ASN1Primitive toASN1Object(java.security.cert.X509Certificate)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:boolean isRevoked(java.security.cert.Certificate)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:boolean equals(java.lang.Object)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:int calculateHashCode()",
            "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi:void encodeCertificate(java.security.cert.Certificate,java.io.DataOutputStream)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void doStore(java.io.OutputStream,char[],boolean)",
            "org.bouncycastle.jce.provider.X509CRLObject:boolean isRevoked(java.security.cert.Certificate)",
            "org.bouncycastle.jce.provider.X509CertificateObject:boolean equals(java.lang.Object)",
            "org.bouncycastle.ocsp.BasicOCSPRespGenerator:org.bouncycastle.ocsp.BasicOCSPResp generateResponse(java.lang.String,java.security.PrivateKey,java.security.cert.X509Certificate[],java.util.Date,java.lang.String,java.security.SecureRandom)",
            "org.bouncycastle.ocsp.OCSPReqGenerator:org.bouncycastle.ocsp.OCSPReq generateRequest(org.bouncycastle.asn1.DERObjectIdentifier,java.security.PrivateKey,java.security.cert.X509Certificate[],java.lang.String,java.security.SecureRandom)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean match(java.security.cert.Certificate)",
            "org.bouncycastle.x509.X509CertificatePair:byte[] getEncoded()"
        ]
    },
    "org.bouncycastle.jcajce.provider.symmetric.PBEPBKDF2$AlgParams:byte[] engineGetEncoded()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.symmetric.PBEPBKDF2$AlgParams:byte[] engineGetEncoded(java.lang.String)"
        ]
    },
    "org.bouncycastle.jcajce.provider.symmetric.PBEPKCS12$AlgParams:byte[] engineGetEncoded()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.symmetric.PBEPKCS12$AlgParams:byte[] engineGetEncoded(java.lang.String)"
        ]
    },
    "org.bouncycastle.jce.PKCS10CertificationRequest:boolean verify(java.security.PublicKey,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.PKCS10CertificationRequest:boolean verify(java.lang.String)"
        ]
    },
    "org.bouncycastle.jce.PKCS10CertificationRequest:byte[] getEncoded()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:byte[] getEncoded(java.lang.String)"
        ]
    },
    "org.bouncycastle.jce.X509Principal:byte[] getEncoded()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:byte[] getEncoded(java.lang.String)",
            "org.bouncycastle.ocsp.CertificateID:org.bouncycastle.asn1.ocsp.CertID createCertID(org.bouncycastle.asn1.x509.AlgorithmIdentifier,java.security.cert.X509Certificate,org.bouncycastle.asn1.ASN1Integer,java.lang.String)"
        ]
    },
    "org.bouncycastle.jce.provider.JCEDHPrivateKey:byte[] getEncoded()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil:org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePrivateKeyParameter(java.security.PrivateKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.KeyFactory:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi:void encodeKey(java.security.Key,java.io.DataOutputStream)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineInit(java.security.Key,java.security.spec.AlgorithmParameterSpec)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.ECKeyUtil:java.security.PrivateKey privateToExplicitParameters(java.security.PrivateKey,java.security.Provider)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)"
        ]
    },
    "org.bouncycastle.jce.provider.JCEECPrivateKey:byte[] getEncoded()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil:org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePrivateKeyParameter(java.security.PrivateKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.KeyFactory:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi:void encodeKey(java.security.Key,java.io.DataOutputStream)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineInit(java.security.Key,java.security.spec.AlgorithmParameterSpec)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.ECKeyUtil:java.security.PrivateKey privateToExplicitParameters(java.security.PrivateKey,java.security.Provider)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.provider.JCEECPrivateKey:void writeObject(java.io.ObjectOutputStream)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)"
        ]
    },
    "org.bouncycastle.jce.provider.JDKDSAPrivateKey:byte[] getEncoded()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil:org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePrivateKeyParameter(java.security.PrivateKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.KeyFactory:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi:void encodeKey(java.security.Key,java.io.DataOutputStream)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineInit(java.security.Key,java.security.spec.AlgorithmParameterSpec)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.ECKeyUtil:java.security.PrivateKey privateToExplicitParameters(java.security.PrivateKey,java.security.Provider)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)"
        ]
    },
    "org.bouncycastle.jce.provider.JDKDSAPublicKey:byte[] getEncoded()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil:org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePublicKeyParameter(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.KeyFactory:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi:void encodeKey(java.security.Key,java.io.DataOutputStream)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:org.bouncycastle.asn1.x509.SubjectKeyIdentifier createSubjectKeyId(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineInit(java.security.Key,java.security.spec.AlgorithmParameterSpec)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.ECKeyUtil:java.security.PublicKey publicToExplicitParameters(java.security.PublicKey,java.security.Provider)",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void <init>(java.lang.String,org.bouncycastle.asn1.x509.X509Name,java.security.PublicKey,org.bouncycastle.asn1.ASN1Set,java.security.PrivateKey,java.lang.String)",
            "org.bouncycastle.jce.netscape.NetscapeCertRequest:org.bouncycastle.asn1.ASN1Primitive getKeySpec()",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier(java.security.PublicKey)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.ocsp.CertificateID:org.bouncycastle.asn1.ocsp.CertID createCertID(org.bouncycastle.asn1.x509.AlgorithmIdentifier,java.security.cert.X509Certificate,org.bouncycastle.asn1.ASN1Integer,java.lang.String)",
            "org.bouncycastle.ocsp.RespID:void <init>(java.security.PublicKey)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean match(java.security.cert.Certificate)",
            "org.bouncycastle.x509.X509V1CertificateGenerator:void setPublicKey(java.security.PublicKey)",
            "org.bouncycastle.x509.X509V3CertificateGenerator:void setPublicKey(java.security.PublicKey)",
            "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure:org.bouncycastle.asn1.ASN1Sequence fromCertificate(java.security.cert.X509Certificate)",
            "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure:org.bouncycastle.asn1.ASN1Sequence fromKey(java.security.PublicKey)",
            "org.bouncycastle.x509.extension.SubjectKeyIdentifierStructure:org.bouncycastle.asn1.ASN1OctetString fromPublicKey(java.security.PublicKey)"
        ]
    },
    "org.bouncycastle.jce.provider.X509CRLEntryObject:byte[] getEncoded()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.X509V2CRLGenerator:void addCRL(java.security.cert.X509CRL)"
        ]
    },
    "org.bouncycastle.jce.provider.X509CRLObject:byte[] getEncoded()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.provider.X509CRLObject:byte[] getTBSCertList()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.PrincipalUtil:org.bouncycastle.jce.X509Principal getIssuerX509Principal(java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void verify(java.security.PublicKey,java.lang.String)"
        ]
    },
    "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getTBSCertificate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.PrincipalUtil:org.bouncycastle.jce.X509Principal getIssuerX509Principal(java.security.cert.X509Certificate)",
            "org.bouncycastle.jce.PrincipalUtil:org.bouncycastle.jce.X509Principal getSubjectX509Principal(java.security.cert.X509Certificate)",
            "org.bouncycastle.jce.provider.X509CertificateObject:void checkSignature(java.security.PublicKey,java.security.Signature)"
        ]
    },
    "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getEncoded()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] getEncoded(java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:org.bouncycastle.asn1.ASN1Primitive toASN1Object(java.security.cert.X509Certificate)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:boolean isRevoked(java.security.cert.Certificate)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:boolean equals(java.lang.Object)",
            "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi:void encodeCertificate(java.security.cert.Certificate,java.io.DataOutputStream)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void doStore(java.io.OutputStream,char[],boolean)",
            "org.bouncycastle.jce.provider.X509CRLObject:boolean isRevoked(java.security.cert.Certificate)",
            "org.bouncycastle.jce.provider.X509CertificateObject:boolean equals(java.lang.Object)",
            "org.bouncycastle.jce.provider.X509CertificateObject:int calculateHashCode()",
            "org.bouncycastle.ocsp.BasicOCSPRespGenerator:org.bouncycastle.ocsp.BasicOCSPResp generateResponse(java.lang.String,java.security.PrivateKey,java.security.cert.X509Certificate[],java.util.Date,java.lang.String,java.security.SecureRandom)",
            "org.bouncycastle.ocsp.OCSPReqGenerator:org.bouncycastle.ocsp.OCSPReq generateRequest(org.bouncycastle.asn1.DERObjectIdentifier,java.security.PrivateKey,java.security.cert.X509Certificate[],java.lang.String,java.security.SecureRandom)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean match(java.security.cert.Certificate)",
            "org.bouncycastle.x509.X509CertificatePair:byte[] getEncoded()"
        ]
    },
    "org.bouncycastle.ocsp.BasicOCSPResp:byte[] getExtensionValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)"
        ]
    },
    "org.bouncycastle.ocsp.BasicOCSPResp:boolean verify(java.security.PublicKey,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.ocsp.OCSPReq:byte[] getExtensionValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)"
        ]
    },
    "org.bouncycastle.ocsp.Req:byte[] getExtensionValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)"
        ]
    },
    "org.bouncycastle.ocsp.RespData:byte[] getExtensionValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)"
        ]
    },
    "org.bouncycastle.ocsp.SingleResp:byte[] getExtensionValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)"
        ]
    },
    "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedSubjectPublicKeyInfo(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedSubjectPublicKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedSubjectPublicKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,byte[])"
        ]
    },
    "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)"
        ]
    },
    "org.bouncycastle.x509.X509V2AttributeCertificate:byte[] getExtensionValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:org.bouncycastle.asn1.ASN1Primitive getExtensionValue(java.security.cert.X509Extension,java.lang.String)",
            "org.bouncycastle.jce.provider.RFC3281CertPathUtilities:void checkCRLs(org.bouncycastle.x509.X509AttributeCertificate,org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.util.List)",
            "org.bouncycastle.jce.provider.RFC3281CertPathUtilities:void checkCRL(org.bouncycastle.asn1.x509.DistributionPoint,org.bouncycastle.x509.X509AttributeCertificate,org.bouncycastle.x509.ExtendedPKIXParameters,java.util.Date,java.security.cert.X509Certificate,org.bouncycastle.jce.provider.CertStatus,org.bouncycastle.jce.provider.ReasonsMask,java.util.List)",
            "org.bouncycastle.x509.X509AttributeCertStoreSelector:boolean match(java.lang.Object)"
        ]
    },
    "org.bouncycastle.crypto.tls.DTLSReliableHandshake:void access$400(org.bouncycastle.crypto.tls.DTLSReliableHandshake)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSReliableHandshake$1:void receivedHandshakeRecord(int,byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.tls.AbstractTlsClient:java.util.Hashtable getClientExtensions()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:byte[] generateClientHello(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,org.bouncycastle.crypto.tls.TlsClient)",
            "org.bouncycastle.crypto.tls.SRPTlsClient:java.util.Hashtable getClientExtensions()",
            "org.bouncycastle.crypto.tls.TlsClientProtocol:void sendClientHelloMessage()"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:int engineGetKeySize(java.security.Key)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.dh.KeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.KeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.KeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.KeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.asymmetric.elgamal.KeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.KeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.KeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.KeyFactory:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi:void encodeKey(java.security.Key,java.io.DataOutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi:void saveStore(java.io.OutputStream)",
            "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi:void access$000(org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi,java.security.Key,java.io.DataOutputStream)"
        ]
    },
    "org.bouncycastle.jcajce.provider.symmetric.DES$KeyFactory:java.security.spec.KeySpec engineGetKeySpec(javax.crypto.SecretKey,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.symmetric.DESede$KeyFactory:java.security.spec.KeySpec engineGetKeySpec(javax.crypto.SecretKey,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:int engineGetKeySize(java.security.Key)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.symmetric.util.BaseSecretKeyFactory:java.security.spec.KeySpec engineGetKeySpec(javax.crypto.SecretKey,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.symmetric.util.BaseSecretKeyFactory:javax.crypto.SecretKey engineTranslateKey(javax.crypto.SecretKey)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:int engineGetKeySize(java.security.Key)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:int engineGetKeySize(java.security.Key)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:int engineGetKeySize(java.security.Key)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.provider.JCEStreamCipher:int engineGetKeySize(java.security.Key)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cmp.PKIFreeText:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cmp.PKIFreeText:void <init>(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.esf.SignerLocation:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.esf.SignerLocation:org.bouncycastle.asn1.esf.SignerLocation getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x500.DirectoryString:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.isismtt.x509.AdditionalInformationSyntax:void <init>(java.lang.String)",
            "org.bouncycastle.asn1.isismtt.x509.Restriction:void <init>(java.lang.String)",
            "org.bouncycastle.asn1.x509.sigi.NameOrPseudonym:void <init>(java.lang.String)"
        ]
    },
    "org.bouncycastle.asn1.x500.style.BCStyle:org.bouncycastle.asn1.ASN1Encodable stringToValue(org.bouncycastle.asn1.ASN1ObjectIdentifier,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x500.X500NameBuilder:org.bouncycastle.asn1.x500.X500NameBuilder addRDN(org.bouncycastle.asn1.ASN1ObjectIdentifier,java.lang.String)",
            "org.bouncycastle.asn1.x500.X500NameBuilder:org.bouncycastle.asn1.x500.X500NameBuilder addMultiValuedRDN(org.bouncycastle.asn1.ASN1ObjectIdentifier[],java.lang.String[])"
        ]
    },
    "org.bouncycastle.asn1.x500.style.RFC4519Style:org.bouncycastle.asn1.ASN1Encodable stringToValue(org.bouncycastle.asn1.ASN1ObjectIdentifier,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x500.X500NameBuilder:org.bouncycastle.asn1.x500.X500NameBuilder addRDN(org.bouncycastle.asn1.ASN1ObjectIdentifier,java.lang.String)",
            "org.bouncycastle.asn1.x500.X500NameBuilder:org.bouncycastle.asn1.x500.X500NameBuilder addMultiValuedRDN(org.bouncycastle.asn1.ASN1ObjectIdentifier[],java.lang.String[])"
        ]
    },
    "org.bouncycastle.asn1.x509.DisplayText:void <init>(int,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.DisplayText:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.NoticeReference:void <init>(java.lang.String,org.bouncycastle.asn1.ASN1EncodableVector)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.x509.NoticeReference,java.lang.String)"
        ]
    },
    "org.bouncycastle.util.io.pem.PemWriter:void writeObject(org.bouncycastle.util.io.pem.PemObjectGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] getEncoded(java.lang.String)"
        ]
    },
    "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Primitive)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x500.style.BCStyle:int calcHashCode(org.bouncycastle.asn1.ASN1Encodable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x500.style.BCStyle:int calculateHashCode(org.bouncycastle.asn1.x500.X500Name)"
        ]
    },
    "org.bouncycastle.asn1.x500.style.IETFUtils:void appendTypeAndValue(java.lang.StringBuffer,org.bouncycastle.asn1.x500.AttributeTypeAndValue,java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x500.style.IETFUtils:void appendRDN(java.lang.StringBuffer,org.bouncycastle.asn1.x500.RDN,java.util.Hashtable)"
        ]
    },
    "org.bouncycastle.asn1.x500.style.IETFUtils:boolean atvAreEqual(org.bouncycastle.asn1.x500.AttributeTypeAndValue,org.bouncycastle.asn1.x500.AttributeTypeAndValue)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x500.style.IETFUtils:boolean rDNAreEqual(org.bouncycastle.asn1.x500.RDN,org.bouncycastle.asn1.x500.RDN)"
        ]
    },
    "org.bouncycastle.asn1.x500.style.RFC4519Style:int calcHashCode(org.bouncycastle.asn1.ASN1Encodable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x500.style.RFC4519Style:int calculateHashCode(org.bouncycastle.asn1.x500.X500Name)"
        ]
    },
    "org.bouncycastle.asn1.x509.X509Name:org.bouncycastle.asn1.x509.X509Name getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.X509Name:org.bouncycastle.asn1.x509.X509Name getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.jce.PrincipalUtil:org.bouncycastle.jce.X509Principal getIssuerX509Principal(java.security.cert.X509Certificate)",
            "org.bouncycastle.jce.PrincipalUtil:org.bouncycastle.jce.X509Principal getSubjectX509Principal(java.security.cert.X509Certificate)",
            "org.bouncycastle.jce.PrincipalUtil:org.bouncycastle.jce.X509Principal getIssuerX509Principal(java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)"
        ]
    },
    "org.bouncycastle.jce.X509Principal:void <init>(org.bouncycastle.asn1.x509.X509Name)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.PrincipalUtil:org.bouncycastle.jce.X509Principal getIssuerX509Principal(java.security.cert.X509Certificate)",
            "org.bouncycastle.jce.PrincipalUtil:org.bouncycastle.jce.X509Principal getSubjectX509Principal(java.security.cert.X509Certificate)",
            "org.bouncycastle.jce.PrincipalUtil:org.bouncycastle.jce.X509Principal getIssuerX509Principal(java.security.cert.X509CRL)"
        ]
    },
    "org.bouncycastle.jce.X509Principal:void <init>(org.bouncycastle.asn1.x500.X500Name)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:java.security.Principal getIssuerDN()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:java.security.Principal getIssuerDN()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:java.security.Principal getSubjectDN()",
            "org.bouncycastle.jce.provider.X509CRLObject:java.security.Principal getIssuerDN()",
            "org.bouncycastle.jce.provider.X509CertificateObject:java.security.Principal getIssuerDN()",
            "org.bouncycastle.jce.provider.X509CertificateObject:java.security.Principal getSubjectDN()"
        ]
    },
    "org.bouncycastle.asn1.sec.SECNamedCurves:org.bouncycastle.asn1.x9.X9ECParameters getByOID(org.bouncycastle.asn1.ASN1ObjectIdentifier)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.nist.NISTNamedCurves:org.bouncycastle.asn1.x9.X9ECParameters getByOID(org.bouncycastle.asn1.ASN1ObjectIdentifier)",
            "org.bouncycastle.asn1.sec.SECNamedCurves:org.bouncycastle.asn1.x9.X9ECParameters getByName(java.lang.String)",
            "org.bouncycastle.asn1.x9.ECNamedCurveTable:org.bouncycastle.asn1.x9.X9ECParameters getByOID(org.bouncycastle.asn1.ASN1ObjectIdentifier)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil:org.bouncycastle.asn1.x9.X9ECParameters getNamedCurveByOid(org.bouncycastle.asn1.ASN1ObjectIdentifier)"
        ]
    },
    "org.bouncycastle.asn1.teletrust.TeleTrusTNamedCurves:org.bouncycastle.asn1.x9.X9ECParameters getByOID(org.bouncycastle.asn1.ASN1ObjectIdentifier)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.teletrust.TeleTrusTNamedCurves:org.bouncycastle.asn1.x9.X9ECParameters getByName(java.lang.String)",
            "org.bouncycastle.asn1.x9.ECNamedCurveTable:org.bouncycastle.asn1.x9.X9ECParameters getByOID(org.bouncycastle.asn1.ASN1ObjectIdentifier)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil:org.bouncycastle.asn1.x9.X9ECParameters getNamedCurveByOid(org.bouncycastle.asn1.ASN1ObjectIdentifier)"
        ]
    },
    "org.bouncycastle.asn1.x9.X962NamedCurves:org.bouncycastle.asn1.x9.X9ECParameters getByOID(org.bouncycastle.asn1.ASN1ObjectIdentifier)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.ECNamedCurveTable:org.bouncycastle.asn1.x9.X9ECParameters getByOID(org.bouncycastle.asn1.ASN1ObjectIdentifier)",
            "org.bouncycastle.asn1.x9.X962NamedCurves:org.bouncycastle.asn1.x9.X9ECParameters getByName(java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil:org.bouncycastle.asn1.x9.X9ECParameters getNamedCurveByOid(org.bouncycastle.asn1.ASN1ObjectIdentifier)"
        ]
    },
    "org.bouncycastle.asn1.x509.X509Name:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Sequence:int hashCode()",
            "org.bouncycastle.asn1.ASN1Set:int hashCode()",
            "org.bouncycastle.asn1.ASN1TaggedObject:int hashCode()",
            "org.bouncycastle.asn1.x509.X509Name:int hashCode()",
            "org.bouncycastle.jce.X509LDAPCertStoreParameters:int addHashCode(int,java.lang.Object)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:int hashCollection(java.util.Collection)",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Matrix:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Vector:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2mVector:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.Permutation:int hashCode()",
            "org.bouncycastle.util.Arrays:int hashCode(java.lang.Object[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:int hashCode()"
        ]
    },
    "org.bouncycastle.asn1.x509.X509Name:boolean equivalentStrings(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)"
        ]
    },
    "org.bouncycastle.crypto.tls.DefaultTlsServer:org.bouncycastle.crypto.params.DHParameters getDHParameters()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.apache.bzip2.CBZip2InputStream:int read()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.apache.bzip2.CBZip2InputStream:int bsR(int)",
            "org.bouncycastle.apache.bzip2.CBZip2InputStream:void getAndMoveToFrontDecode()",
            "org.bouncycastle.asn1.ASN1InputStream:int readTagNumber(java.io.InputStream,int)",
            "org.bouncycastle.asn1.ASN1InputStream:int readLength(java.io.InputStream,int)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1Encodable readObject()",
            "org.bouncycastle.asn1.BERGenerator:void writeBERBody(java.io.InputStream)",
            "org.bouncycastle.asn1.ConstructedOctetStream:int read()",
            "org.bouncycastle.asn1.DERBitString:org.bouncycastle.asn1.DERBitString fromInputStream(int,java.io.InputStream)",
            "org.bouncycastle.asn1.DefiniteLengthInputStream:int read()",
            "org.bouncycastle.asn1.IndefiniteLengthInputStream:void <init>(java.io.InputStream,int)",
            "org.bouncycastle.asn1.IndefiniteLengthInputStream:int read(byte[],int,int)",
            "org.bouncycastle.asn1.IndefiniteLengthInputStream:int read()",
            "org.bouncycastle.crypto.io.DigestInputStream:int read()",
            "org.bouncycastle.crypto.io.MacInputStream:int read()",
            "org.bouncycastle.crypto.io.SignerInputStream:int read()",
            "org.bouncycastle.crypto.parsers.ECIESPublicKeyParser:org.bouncycastle.crypto.params.AsymmetricKeyParameter readKey(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:short readUint8(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:int readUint16(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:int readUint24(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:long readUint32(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:long readUint48(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:org.bouncycastle.crypto.tls.ProtocolVersion readVersion(java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsUtils:int readVersionRaw(java.io.InputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PEMUtil:java.lang.String readLine(java.io.InputStream)",
            "org.bouncycastle.jce.provider.PEMUtil:java.lang.String readLine(java.io.InputStream)",
            "org.bouncycastle.jce.provider.X509AttrCertParser:java.lang.Object engineRead()",
            "org.bouncycastle.jce.provider.X509CRLParser:java.lang.Object engineRead()",
            "org.bouncycastle.jce.provider.X509CertPairParser:java.lang.Object engineRead()",
            "org.bouncycastle.jce.provider.X509CertParser:java.lang.Object engineRead()",
            "org.bouncycastle.util.io.TeeInputStream:int read()"
        ]
    },
    "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Encodable getObjectParser(int,boolean)",
            "org.bouncycastle.asn1.cmp.PKIHeader:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.KeyAgreeRecipientInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Encodable getId()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Encodable getId()",
            "org.bouncycastle.asn1.cms.ecc.MQVuserKeyingMaterial:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.crmf.EncryptedValue:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.crmf.PKIArchiveOptions:void <init>(org.bouncycastle.asn1.ASN1TaggedObject)",
            "org.bouncycastle.asn1.eac.ECDSAPublicKey:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.eac.UnsignedInteger:void <init>(org.bouncycastle.asn1.ASN1TaggedObject)",
            "org.bouncycastle.asn1.isismtt.ocsp.RequestedCertificate:void <init>(org.bouncycastle.asn1.ASN1TaggedObject)",
            "org.bouncycastle.asn1.ocsp.ResponderID:org.bouncycastle.asn1.ocsp.ResponderID getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.pkcs.EncryptedData:org.bouncycastle.asn1.ASN1OctetString getContent()",
            "org.bouncycastle.asn1.x509.AuthorityKeyIdentifier:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.GeneralName:org.bouncycastle.asn1.x509.GeneralName getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.SubjectKeyIdentifier:org.bouncycastle.asn1.x509.SubjectKeyIdentifier getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)"
        ]
    },
    "org.bouncycastle.asn1.DERBMPString:org.bouncycastle.asn1.DERBMPString getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.DERInteger:org.bouncycastle.asn1.ASN1Integer getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.crmf.CertTemplate:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.crmf.POPOPrivKey:void <init>(org.bouncycastle.asn1.ASN1TaggedObject)",
            "org.bouncycastle.asn1.isismtt.x509.DeclarationOfMajority:int notYoungerThan()",
            "org.bouncycastle.asn1.ocsp.CrlID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ocsp.ResponseData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ocsp.TBSRequest:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.RSASSAPSSparams:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.tsp.Accuracy:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.AuthorityKeyIdentifier:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.GeneralSubtree:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.PolicyConstraints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.TBSCertificate:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.TBSCertificateStructure:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.sigi.PersonalData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.DHPublicKey:org.bouncycastle.asn1.x9.DHPublicKey getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:int prepareNextCertI1(java.security.cert.CertPath,int,int)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:int prepareNextCertI2(java.security.cert.CertPath,int,int)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:int wrapupCertB(java.security.cert.CertPath,int,int)",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkPolicy()"
        ]
    },
    "org.bouncycastle.asn1.DERNumericString:org.bouncycastle.asn1.DERNumericString getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.GeneralName:org.bouncycastle.asn1.x509.GeneralName getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.DERPrintableString:org.bouncycastle.asn1.DERPrintableString getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.isismtt.x509.ProcurationSyntax:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.sigi.PersonalData:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.DERT61String:org.bouncycastle.asn1.DERT61String getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.DERT61UTF8String:org.bouncycastle.asn1.DERT61UTF8String getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.DERUTF8String:org.bouncycastle.asn1.DERUTF8String getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.DERVisibleString:org.bouncycastle.asn1.DERVisibleString getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cmp.CertResponse:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.CertResponse:org.bouncycastle.asn1.'cmp'.CertResponse getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.cmp.CertStatus:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.CertStatus:org.bouncycastle.asn1.'cmp'.CertStatus getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.cmp.Challenge:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.Challenge:org.bouncycastle.asn1.'cmp'.Challenge getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.cmp.PBMParameter:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.PBMParameter:org.bouncycastle.asn1.'cmp'.PBMParameter getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.cms.AuthenticatedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.AuthenticatedData:org.bouncycastle.asn1.cms.AuthenticatedData getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.cms.CCMParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.CCMParameters:org.bouncycastle.asn1.cms.CCMParameters getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.cms.DigestedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.DigestedData:org.bouncycastle.asn1.cms.DigestedData getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.cms.GCMParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.GCMParameters:org.bouncycastle.asn1.cms.GCMParameters getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.cms.RecipientKeyIdentifier:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.RecipientKeyIdentifier:org.bouncycastle.asn1.cms.RecipientKeyIdentifier getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.cms.SignerInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.SignerInfo:org.bouncycastle.asn1.cms.SignerInfo getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.cms.TimeStampedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.TimeStampedData:org.bouncycastle.asn1.cms.TimeStampedData getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.esf.OtherHashAlgAndValue:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.esf.OtherHashAlgAndValue:org.bouncycastle.asn1.esf.OtherHashAlgAndValue getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.ess.ContentIdentifier:org.bouncycastle.asn1.ess.ContentIdentifier getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.ess.ESSCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ess.ESSCertID:org.bouncycastle.asn1.ess.ESSCertID getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.icao.DataGroupHash:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.icao.DataGroupHash:org.bouncycastle.asn1.icao.DataGroupHash getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.isismtt.ocsp.CertHash:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.isismtt.ocsp.CertHash:org.bouncycastle.asn1.isismtt.ocsp.CertHash getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.isismtt.x509.ProfessionInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.isismtt.x509.ProfessionInfo:org.bouncycastle.asn1.isismtt.x509.ProfessionInfo getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.pkcs.EncryptedPrivateKeyInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.pkcs.EncryptedPrivateKeyInfo:org.bouncycastle.asn1.pkcs.EncryptedPrivateKeyInfo getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.pkcs.PrivateKeyInfo getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.pkcs.SignerInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.pkcs.SignerInfo:org.bouncycastle.asn1.pkcs.SignerInfo getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.tsp.MessageImprint:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.tsp.MessageImprint:org.bouncycastle.asn1.tsp.MessageImprint getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.ua.DSTU4145ECBinary:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ua.DSTU4145ECBinary:org.bouncycastle.asn1.ua.DSTU4145ECBinary getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.ua.DSTU4145Params:org.bouncycastle.asn1.ua.DSTU4145Params getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey:void populateFromPubKeyInfo(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)"
        ]
    },
    "org.bouncycastle.asn1.ua.DSTU4145PublicKey:org.bouncycastle.asn1.ua.DSTU4145PublicKey getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.DigestInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.DigestInfo:org.bouncycastle.asn1.x509.DigestInfo getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x509.Extension:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.Extension:org.bouncycastle.asn1.x509.Extension getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x509.SubjectKeyIdentifier:org.bouncycastle.asn1.x509.SubjectKeyIdentifier getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.SubjectKeyIdentifier:org.bouncycastle.asn1.x509.SubjectKeyIdentifier getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.x509.SubjectKeyIdentifier:org.bouncycastle.asn1.x509.SubjectKeyIdentifier fromExtensions(org.bouncycastle.asn1.x509.Extensions)"
        ]
    },
    "org.bouncycastle.asn1.x509.X509Extensions:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.X509Extensions:org.bouncycastle.asn1.x509.X509Extensions getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x509.qualified.BiometricData:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.qualified.BiometricData:org.bouncycastle.asn1.x509.qualified.BiometricData getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.gost.BCGOST3410PrivateKey:void <init>(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.gost.KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.rsa.AlgorithmParametersSpi$OAEP:void engineInit(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.AlgorithmParametersSpi$OAEP:void engineInit(byte[],java.lang.String)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:boolean isIndirectCRL(java.security.cert.X509CRL)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)"
        ]
    },
    "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:javax.crypto.Cipher createCipher(int,char[],org.bouncycastle.asn1.x509.AlgorithmIdentifier)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:java.security.PrivateKey unwrapKey(org.bouncycastle.asn1.x509.AlgorithmIdentifier,byte[],char[],boolean)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:byte[] cryptData(boolean,org.bouncycastle.asn1.x509.AlgorithmIdentifier,char[],boolean,byte[])"
        ]
    },
    "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectIP(java.util.Set,java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void intersectPermittedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree[])"
        ]
    },
    "org.bouncycastle.jce.provider.X509CRLObject:boolean isIndirectCRL(java.security.cert.X509CRL)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCertStatus(java.util.Date,java.security.cert.X509CRL,java.lang.Object,org.bouncycastle.jce.provider.CertStatus)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)"
        ]
    },
    "org.bouncycastle.pqc.asn1.GMSSPublicKey:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.asn1.GMSSPublicKey:org.bouncycastle.pqc.asn1.GMSSPublicKey getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.pqc.asn1.RainbowPublicKey:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.asn1.RainbowPublicKey:org.bouncycastle.pqc.asn1.RainbowPublicKey getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Encodable getObjectParser(int,boolean)",
            "org.bouncycastle.asn1.cmp.CertRepMessage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.PKIFreeText:org.bouncycastle.asn1.'cmp'.PKIFreeText getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.cmp.PKIHeader:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.PKIMessage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.PKIStatusInfo:org.bouncycastle.asn1.'cmp'.PKIStatusInfo getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.cmp.RevRepContent:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:org.bouncycastle.asn1.cms.AuthEnvelopedData getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.cms.AuthenticatedData:org.bouncycastle.asn1.cms.AuthenticatedData getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.cms.CompressedData:org.bouncycastle.asn1.cms.CompressedData getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.cms.ContentInfo:org.bouncycastle.asn1.cms.ContentInfo getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.cms.DigestedData:org.bouncycastle.asn1.cms.DigestedData getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.cms.EnvelopedData:org.bouncycastle.asn1.cms.EnvelopedData getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.cms.KEKIdentifier:org.bouncycastle.asn1.cms.KEKIdentifier getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.cms.KEKRecipientInfo:org.bouncycastle.asn1.cms.KEKRecipientInfo getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.cms.KeyAgreeRecipientIdentifier:org.bouncycastle.asn1.cms.KeyAgreeRecipientIdentifier getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.cms.KeyAgreeRecipientInfo:org.bouncycastle.asn1.cms.KeyAgreeRecipientInfo getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.cms.OriginatorInfo:org.bouncycastle.asn1.cms.OriginatorInfo getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.cms.OriginatorPublicKey:org.bouncycastle.asn1.cms.OriginatorPublicKey getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.cms.OtherRecipientInfo:org.bouncycastle.asn1.cms.OtherRecipientInfo getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.cms.OtherRevocationInfoFormat:org.bouncycastle.asn1.cms.OtherRevocationInfoFormat getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.cms.PasswordRecipientInfo:org.bouncycastle.asn1.cms.PasswordRecipientInfo getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.cms.RecipientEncryptedKey:org.bouncycastle.asn1.cms.RecipientEncryptedKey getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.cms.RecipientKeyIdentifier:org.bouncycastle.asn1.cms.RecipientKeyIdentifier getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.cms.TimeStampTokenEvidence:org.bouncycastle.asn1.cms.TimeStampTokenEvidence getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.cms.ecc.MQVuserKeyingMaterial:org.bouncycastle.asn1.cms.ecc.MQVuserKeyingMaterial getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.crmf.CertId:org.bouncycastle.asn1.crmf.CertId getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.crmf.CertTemplate:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.crmf.PKMACValue:org.bouncycastle.asn1.crmf.PKMACValue getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.crmf.POPOSigningKey:org.bouncycastle.asn1.crmf.POPOSigningKey getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.cryptopro.ECGOST3410ParamSetParameters:org.bouncycastle.asn1.cryptopro.ECGOST3410ParamSetParameters getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.cryptopro.GOST28147Parameters:org.bouncycastle.asn1.cryptopro.GOST28147Parameters getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.cryptopro.GOST3410ParamSetParameters:org.bouncycastle.asn1.cryptopro.GOST3410ParamSetParameters getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.cryptopro.GOST3410PublicKeyAlgParameters:org.bouncycastle.asn1.cryptopro.GOST3410PublicKeyAlgParameters getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.dvcs.DVCSCertInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.dvcs.DVCSCertInfo:org.bouncycastle.asn1.dvcs.DVCSCertInfo getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.dvcs.DVCSErrorNotice:org.bouncycastle.asn1.dvcs.DVCSErrorNotice getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.dvcs.DVCSRequest:org.bouncycastle.asn1.dvcs.DVCSRequest getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.dvcs.DVCSRequestInformation:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.dvcs.DVCSRequestInformation:org.bouncycastle.asn1.dvcs.DVCSRequestInformation getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.dvcs.DVCSResponse:org.bouncycastle.asn1.dvcs.DVCSResponse getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.dvcs.Data:org.bouncycastle.asn1.dvcs.Data getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.dvcs.PathProcInput:org.bouncycastle.asn1.dvcs.PathProcInput getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.dvcs.TargetEtcChain:org.bouncycastle.asn1.dvcs.TargetEtcChain getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.esf.SignerAttribute:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.SignerLocation:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.isismtt.x509.DeclarationOfMajority:org.bouncycastle.asn1.ASN1Sequence fullAgeAtCountry()",
            "org.bouncycastle.asn1.isismtt.x509.NamingAuthority:org.bouncycastle.asn1.isismtt.x509.NamingAuthority getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.ocsp.BasicOCSPResponse:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ocsp.BasicOCSPResponse:org.bouncycastle.asn1.ocsp.BasicOCSPResponse getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.ocsp.CertID:org.bouncycastle.asn1.ocsp.CertID getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.ocsp.OCSPRequest:org.bouncycastle.asn1.ocsp.OCSPRequest getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.ocsp.OCSPResponse:org.bouncycastle.asn1.ocsp.OCSPResponse getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.ocsp.Request:org.bouncycastle.asn1.ocsp.Request getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.ocsp.ResponseBytes:org.bouncycastle.asn1.ocsp.ResponseBytes getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.ocsp.ResponseData:org.bouncycastle.asn1.ocsp.ResponseData getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.ocsp.RevokedInfo:org.bouncycastle.asn1.ocsp.RevokedInfo getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.ocsp.Signature:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ocsp.Signature:org.bouncycastle.asn1.ocsp.Signature getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.ocsp.SingleResponse:org.bouncycastle.asn1.ocsp.SingleResponse getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.ocsp.TBSRequest:org.bouncycastle.asn1.ocsp.TBSRequest getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.pkcs.PrivateKeyInfo getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.pkcs.RSAPrivateKey:org.bouncycastle.asn1.pkcs.RSAPrivateKey getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure:org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.pkcs.RSAPublicKey:org.bouncycastle.asn1.pkcs.RSAPublicKey getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.x500.X500Name:org.bouncycastle.asn1.x500.X500Name getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.x509.AlgorithmIdentifier:org.bouncycastle.asn1.x509.AlgorithmIdentifier getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.x509.AttributeCertificateInfo:org.bouncycastle.asn1.x509.AttributeCertificateInfo getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.x509.AuthorityKeyIdentifier:org.bouncycastle.asn1.x509.AuthorityKeyIdentifier getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.x509.BasicConstraints:org.bouncycastle.asn1.x509.BasicConstraints getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.x509.CRLDistPoint:org.bouncycastle.asn1.x509.CRLDistPoint getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.x509.Certificate:org.bouncycastle.asn1.x509.Certificate getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.x509.CertificateList:org.bouncycastle.asn1.x509.CertificateList getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.x509.CertificatePolicies:org.bouncycastle.asn1.x509.CertificatePolicies getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.x509.DSAParameter:org.bouncycastle.asn1.x509.DSAParameter getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.x509.DigestInfo:org.bouncycastle.asn1.x509.DigestInfo getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.x509.DistributionPoint:org.bouncycastle.asn1.x509.DistributionPoint getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:org.bouncycastle.asn1.x509.ExtendedKeyUsage getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.x509.Extensions:org.bouncycastle.asn1.x509.Extensions getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.x509.GeneralName:org.bouncycastle.asn1.x509.GeneralName getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.GeneralNames:org.bouncycastle.asn1.x509.GeneralNames getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.x509.GeneralSubtree:org.bouncycastle.asn1.x509.GeneralSubtree getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.x509.IssuerSerial:org.bouncycastle.asn1.x509.IssuerSerial getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.x509.IssuingDistributionPoint:org.bouncycastle.asn1.x509.IssuingDistributionPoint getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.x509.NameConstraints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ObjectDigestInfo:org.bouncycastle.asn1.x509.ObjectDigestInfo getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.x509.RSAPublicKeyStructure:org.bouncycastle.asn1.x509.RSAPublicKeyStructure getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.x509.SubjectPublicKeyInfo:org.bouncycastle.asn1.x509.SubjectPublicKeyInfo getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.x509.TBSCertList:org.bouncycastle.asn1.x509.TBSCertList getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.x509.TBSCertList:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.TBSCertificate:org.bouncycastle.asn1.x509.TBSCertificate getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.x509.TBSCertificate:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.TBSCertificateStructure:org.bouncycastle.asn1.x509.TBSCertificateStructure getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.x509.V2Form:org.bouncycastle.asn1.x509.V2Form getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.x509.X509CertificateStructure:org.bouncycastle.asn1.x509.X509CertificateStructure getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.x509.X509Extensions:org.bouncycastle.asn1.x509.X509Extensions getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:org.bouncycastle.asn1.x509.X509Name getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.x9.DHDomainParameters:org.bouncycastle.asn1.x9.DHDomainParameters getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.x9.DHValidationParms:org.bouncycastle.asn1.x9.DHValidationParms getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.Certificate readDERCertificate(org.bouncycastle.asn1.ASN1InputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.CRL readDERCRL(org.bouncycastle.asn1.ASN1InputStream)",
            "org.bouncycastle.jce.provider.X509AttrCertParser:org.bouncycastle.x509.X509AttributeCertificate readDERCertificate(java.io.InputStream)",
            "org.bouncycastle.jce.provider.X509AttrCertParser:org.bouncycastle.x509.X509AttributeCertificate getCertificate()",
            "org.bouncycastle.jce.provider.X509CRLParser:java.security.cert.CRL readDERCRL(java.io.InputStream)",
            "org.bouncycastle.jce.provider.X509CertParser:java.security.cert.Certificate readDERCertificate(java.io.InputStream)"
        ]
    },
    "org.bouncycastle.asn1.cmp.CAKeyUpdAnnContent:org.bouncycastle.asn1.'cmp'.CAKeyUpdAnnContent getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.PKIBody:org.bouncycastle.asn1.ASN1Encodable getBodyForType(int,org.bouncycastle.asn1.ASN1Encodable)"
        ]
    },
    "org.bouncycastle.asn1.cmp.CRLAnnContent:org.bouncycastle.asn1.'cmp'.CRLAnnContent getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.PKIBody:org.bouncycastle.asn1.ASN1Encodable getBodyForType(int,org.bouncycastle.asn1.ASN1Encodable)"
        ]
    },
    "org.bouncycastle.asn1.cmp.CertConfirmContent:org.bouncycastle.asn1.'cmp'.CertConfirmContent getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.PKIBody:org.bouncycastle.asn1.ASN1Encodable getBodyForType(int,org.bouncycastle.asn1.ASN1Encodable)"
        ]
    },
    "org.bouncycastle.asn1.cmp.CertRepMessage:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.CertRepMessage:org.bouncycastle.asn1.'cmp'.CertRepMessage getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.cmp.CertRepMessage:org.bouncycastle.asn1.'cmp'.CertRepMessage getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.PKIBody:org.bouncycastle.asn1.ASN1Encodable getBodyForType(int,org.bouncycastle.asn1.ASN1Encodable)"
        ]
    },
    "org.bouncycastle.asn1.cmp.CertResponse:org.bouncycastle.asn1.'cmp'.CertResponse getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.CertRepMessage:org.bouncycastle.asn1.'cmp'.CertResponse[] getResponse()"
        ]
    },
    "org.bouncycastle.asn1.cmp.CertStatus:org.bouncycastle.asn1.'cmp'.CertStatus getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.CertConfirmContent:org.bouncycastle.asn1.'cmp'.CertStatus[] toCertStatusArray()"
        ]
    },
    "org.bouncycastle.asn1.cmp.CertifiedKeyPair:org.bouncycastle.asn1.'cmp'.CertifiedKeyPair getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.CertResponse:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.KeyRecRepContent:org.bouncycastle.asn1.'cmp'.CertifiedKeyPair[] getKeyPairHist()"
        ]
    },
    "org.bouncycastle.asn1.cmp.Challenge:org.bouncycastle.asn1.'cmp'.Challenge getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.POPODecKeyChallContent:org.bouncycastle.asn1.'cmp'.Challenge[] toChallengeArray()"
        ]
    },
    "org.bouncycastle.asn1.cmp.ErrorMsgContent:org.bouncycastle.asn1.'cmp'.ErrorMsgContent getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.PKIBody:org.bouncycastle.asn1.ASN1Encodable getBodyForType(int,org.bouncycastle.asn1.ASN1Encodable)"
        ]
    },
    "org.bouncycastle.asn1.cmp.GenMsgContent:org.bouncycastle.asn1.'cmp'.GenMsgContent getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.PKIBody:org.bouncycastle.asn1.ASN1Encodable getBodyForType(int,org.bouncycastle.asn1.ASN1Encodable)"
        ]
    },
    "org.bouncycastle.asn1.cmp.GenRepContent:org.bouncycastle.asn1.'cmp'.GenRepContent getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.PKIBody:org.bouncycastle.asn1.ASN1Encodable getBodyForType(int,org.bouncycastle.asn1.ASN1Encodable)"
        ]
    },
    "org.bouncycastle.asn1.cmp.InfoTypeAndValue:org.bouncycastle.asn1.'cmp'.InfoTypeAndValue getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.GenMsgContent:org.bouncycastle.asn1.'cmp'.InfoTypeAndValue[] toInfoTypeAndValueArray()",
            "org.bouncycastle.asn1.cmp.GenRepContent:org.bouncycastle.asn1.'cmp'.InfoTypeAndValue[] toInfoTypeAndValueArray()",
            "org.bouncycastle.asn1.cmp.PKIHeader:org.bouncycastle.asn1.'cmp'.InfoTypeAndValue[] getGeneralInfo()"
        ]
    },
    "org.bouncycastle.asn1.cmp.KeyRecRepContent:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.KeyRecRepContent:org.bouncycastle.asn1.'cmp'.KeyRecRepContent getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.cmp.KeyRecRepContent:org.bouncycastle.asn1.'cmp'.KeyRecRepContent getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.PKIBody:org.bouncycastle.asn1.ASN1Encodable getBodyForType(int,org.bouncycastle.asn1.ASN1Encodable)"
        ]
    },
    "org.bouncycastle.asn1.cmp.OOBCertHash:org.bouncycastle.asn1.'cmp'.OOBCertHash getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cmp.PBMParameter:org.bouncycastle.asn1.'cmp'.PBMParameter getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cmp.PKIFreeText:org.bouncycastle.asn1.'cmp'.PKIFreeText getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.ErrorMsgContent:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.PKIFreeText:org.bouncycastle.asn1.'cmp'.PKIFreeText getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.cmp.PKIStatusInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.PollRepContent:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.cmp.PKIHeader:org.bouncycastle.asn1.'cmp'.PKIHeader getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.PKIHeaderBuilder:org.bouncycastle.asn1.'cmp'.PKIHeader build()",
            "org.bouncycastle.asn1.cmp.PKIMessage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.ProtectedPart:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.cmp.PKIMessage:org.bouncycastle.asn1.'cmp'.PKIMessage getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.PKIMessages:org.bouncycastle.asn1.'cmp'.PKIMessage[] toPKIMessageArray()"
        ]
    },
    "org.bouncycastle.asn1.cmp.PKIMessages:org.bouncycastle.asn1.'cmp'.PKIMessages getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.PKIBody:org.bouncycastle.asn1.ASN1Encodable getBodyForType(int,org.bouncycastle.asn1.ASN1Encodable)"
        ]
    },
    "org.bouncycastle.asn1.cmp.PKIStatusInfo:org.bouncycastle.asn1.'cmp'.PKIStatusInfo getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.CertResponse:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.CertStatus:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.ErrorMsgContent:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.KeyRecRepContent:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.PKIStatusInfo:org.bouncycastle.asn1.'cmp'.PKIStatusInfo getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.cmp.RevRepContent:org.bouncycastle.asn1.'cmp'.PKIStatusInfo[] getStatus()",
            "org.bouncycastle.asn1.dvcs.DVCSErrorNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.tsp.TimeStampResp:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.cmp.POPODecKeyChallContent:org.bouncycastle.asn1.'cmp'.POPODecKeyChallContent getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.PKIBody:org.bouncycastle.asn1.ASN1Encodable getBodyForType(int,org.bouncycastle.asn1.ASN1Encodable)"
        ]
    },
    "org.bouncycastle.asn1.cmp.POPODecKeyRespContent:org.bouncycastle.asn1.'cmp'.POPODecKeyRespContent getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.PKIBody:org.bouncycastle.asn1.ASN1Encodable getBodyForType(int,org.bouncycastle.asn1.ASN1Encodable)"
        ]
    },
    "org.bouncycastle.asn1.cmp.PollRepContent:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.PollRepContent:org.bouncycastle.asn1.'cmp'.PollRepContent getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.cmp.PollRepContent:org.bouncycastle.asn1.'cmp'.PollRepContent getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.PKIBody:org.bouncycastle.asn1.ASN1Encodable getBodyForType(int,org.bouncycastle.asn1.ASN1Encodable)"
        ]
    },
    "org.bouncycastle.asn1.cmp.PollReqContent:org.bouncycastle.asn1.'cmp'.PollReqContent getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.PKIBody:org.bouncycastle.asn1.ASN1Encodable getBodyForType(int,org.bouncycastle.asn1.ASN1Encodable)"
        ]
    },
    "org.bouncycastle.asn1.cmp.ProtectedPart:org.bouncycastle.asn1.'cmp'.ProtectedPart getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cmp.RevAnnContent:org.bouncycastle.asn1.'cmp'.RevAnnContent getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.PKIBody:org.bouncycastle.asn1.ASN1Encodable getBodyForType(int,org.bouncycastle.asn1.ASN1Encodable)"
        ]
    },
    "org.bouncycastle.asn1.cmp.RevDetails:org.bouncycastle.asn1.'cmp'.RevDetails getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.RevReqContent:org.bouncycastle.asn1.'cmp'.RevDetails[] toRevDetailsArray()"
        ]
    },
    "org.bouncycastle.asn1.cmp.RevRepContent:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.RevRepContent:org.bouncycastle.asn1.'cmp'.RevRepContent getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.cmp.RevRepContent:org.bouncycastle.asn1.'cmp'.RevRepContent getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.PKIBody:org.bouncycastle.asn1.ASN1Encodable getBodyForType(int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.cmp.RevRepContentBuilder:org.bouncycastle.asn1.'cmp'.RevRepContent build()"
        ]
    },
    "org.bouncycastle.asn1.cmp.RevReqContent:org.bouncycastle.asn1.'cmp'.RevReqContent getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.PKIBody:org.bouncycastle.asn1.ASN1Encodable getBodyForType(int,org.bouncycastle.asn1.ASN1Encodable)"
        ]
    },
    "org.bouncycastle.asn1.cms.Attribute:org.bouncycastle.asn1.cms.Attribute getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.AttributeTable:void <init>(org.bouncycastle.asn1.ASN1EncodableVector)",
            "org.bouncycastle.asn1.cms.AttributeTable:void <init>(org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.cms.AttributeTable:org.bouncycastle.asn1.ASN1EncodableVector toASN1EncodableVector()",
            "org.bouncycastle.asn1.cms.Attributes:org.bouncycastle.asn1.cms.Attribute[] getAttributes()"
        ]
    },
    "org.bouncycastle.asn1.cms.CCMParameters:org.bouncycastle.asn1.cms.CCMParameters getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cms.CompressedData:org.bouncycastle.asn1.cms.CompressedData getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.CompressedData:org.bouncycastle.asn1.cms.CompressedData getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)"
        ]
    },
    "org.bouncycastle.asn1.cms.ContentInfo:org.bouncycastle.asn1.cms.ContentInfo getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.AuthenticatedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.CompressedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.ContentInfo:org.bouncycastle.asn1.cms.ContentInfo getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.cms.DigestedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.SCVPReqRes:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.SignedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.TimeStampAndCRL:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.dvcs.CertEtcToken:void <init>(org.bouncycastle.asn1.ASN1TaggedObject)",
            "org.bouncycastle.asn1.dvcs.DVCSTime:org.bouncycastle.asn1.dvcs.DVCSTime getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.tsp.TimeStampResp:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.cms.DigestedData:org.bouncycastle.asn1.cms.DigestedData getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.DigestedData:org.bouncycastle.asn1.cms.DigestedData getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)"
        ]
    },
    "org.bouncycastle.asn1.cms.EncryptedContentInfo:org.bouncycastle.asn1.cms.EncryptedContentInfo getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.EncryptedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.EnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.cms.EncryptedData:org.bouncycastle.asn1.cms.EncryptedData getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cms.EnvelopedData:org.bouncycastle.asn1.cms.EnvelopedData getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.EnvelopedData:org.bouncycastle.asn1.cms.EnvelopedData getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)"
        ]
    },
    "org.bouncycastle.asn1.cms.GCMParameters:org.bouncycastle.asn1.cms.GCMParameters getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.symmetric.AES$AlgParamsGCM:void engineInit(byte[])",
            "org.bouncycastle.jcajce.provider.symmetric.AES$AlgParamsGCM:void engineInit(byte[],java.lang.String)"
        ]
    },
    "org.bouncycastle.asn1.cms.IssuerAndSerialNumber:org.bouncycastle.asn1.cms.IssuerAndSerialNumber getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.KeyAgreeRecipientIdentifier:org.bouncycastle.asn1.cms.KeyAgreeRecipientIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Encodable getId()"
        ]
    },
    "org.bouncycastle.asn1.cms.KEKRecipientInfo:org.bouncycastle.asn1.cms.KEKRecipientInfo getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.KEKRecipientInfo:org.bouncycastle.asn1.cms.KEKRecipientInfo getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)"
        ]
    },
    "org.bouncycastle.asn1.cms.KeyAgreeRecipientInfo:org.bouncycastle.asn1.cms.KeyAgreeRecipientInfo getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.KeyAgreeRecipientInfo:org.bouncycastle.asn1.cms.KeyAgreeRecipientInfo getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)"
        ]
    },
    "org.bouncycastle.asn1.cms.KeyTransRecipientInfo:org.bouncycastle.asn1.cms.KeyTransRecipientInfo getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Integer getVersion()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Encodable getInfo()"
        ]
    },
    "org.bouncycastle.asn1.cms.MetaData:org.bouncycastle.asn1.cms.MetaData getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.TimeStampedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)"
        ]
    },
    "org.bouncycastle.asn1.cms.OriginatorInfo:org.bouncycastle.asn1.cms.OriginatorInfo getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.cms.OriginatorInfo getOriginatorInfo()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.cms.OriginatorInfo getOriginatorInfo()",
            "org.bouncycastle.asn1.cms.EnvelopedDataParser:org.bouncycastle.asn1.cms.OriginatorInfo getOriginatorInfo()",
            "org.bouncycastle.asn1.cms.OriginatorInfo:org.bouncycastle.asn1.cms.OriginatorInfo getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)"
        ]
    },
    "org.bouncycastle.asn1.cms.OriginatorPublicKey:org.bouncycastle.asn1.cms.OriginatorPublicKey getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.OriginatorPublicKey:org.bouncycastle.asn1.cms.OriginatorPublicKey getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.cms.ecc.MQVuserKeyingMaterial:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.cms.OtherKeyAttribute:org.bouncycastle.asn1.cms.OtherKeyAttribute getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.KEKIdentifier:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.RecipientKeyIdentifier:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.cms.OtherRecipientInfo:org.bouncycastle.asn1.cms.OtherRecipientInfo getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.OtherRecipientInfo:org.bouncycastle.asn1.cms.OtherRecipientInfo getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)"
        ]
    },
    "org.bouncycastle.asn1.cms.OtherRevocationInfoFormat:org.bouncycastle.asn1.cms.OtherRevocationInfoFormat getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.OtherRevocationInfoFormat:org.bouncycastle.asn1.cms.OtherRevocationInfoFormat getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)"
        ]
    },
    "org.bouncycastle.asn1.cms.PasswordRecipientInfo:org.bouncycastle.asn1.cms.PasswordRecipientInfo getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.PasswordRecipientInfo:org.bouncycastle.asn1.cms.PasswordRecipientInfo getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)"
        ]
    },
    "org.bouncycastle.asn1.cms.RecipientEncryptedKey:org.bouncycastle.asn1.cms.RecipientEncryptedKey getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.RecipientEncryptedKey:org.bouncycastle.asn1.cms.RecipientEncryptedKey getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)"
        ]
    },
    "org.bouncycastle.asn1.cms.RecipientKeyIdentifier:org.bouncycastle.asn1.cms.RecipientKeyIdentifier getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.RecipientKeyIdentifier:org.bouncycastle.asn1.cms.RecipientKeyIdentifier getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)"
        ]
    },
    "org.bouncycastle.asn1.cms.SCVPReqRes:org.bouncycastle.asn1.cms.SCVPReqRes getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cms.SignedData:org.bouncycastle.asn1.cms.SignedData getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cms.SignerInfo:org.bouncycastle.asn1.cms.SignerInfo getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.SignedData:boolean checkForVersion3(org.bouncycastle.asn1.ASN1Set)"
        ]
    },
    "org.bouncycastle.asn1.cms.TimeStampAndCRL:org.bouncycastle.asn1.cms.TimeStampAndCRL getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.TimeStampTokenEvidence:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.cms.TimeStampTokenEvidence:org.bouncycastle.asn1.cms.TimeStampTokenEvidence getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.TimeStampTokenEvidence:org.bouncycastle.asn1.cms.TimeStampTokenEvidence getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)"
        ]
    },
    "org.bouncycastle.asn1.cms.TimeStampedData:org.bouncycastle.asn1.cms.TimeStampedData getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.crmf.AttributeTypeAndValue:org.bouncycastle.asn1.crmf.AttributeTypeAndValue getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.crmf.CertReqMsg:org.bouncycastle.asn1.crmf.AttributeTypeAndValue[] getRegInfo()",
            "org.bouncycastle.asn1.crmf.Controls:org.bouncycastle.asn1.crmf.AttributeTypeAndValue[] toAttributeTypeAndValueArray()"
        ]
    },
    "org.bouncycastle.asn1.crmf.CertId:org.bouncycastle.asn1.crmf.CertId getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.RevAnnContent:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.RevRepContent:org.bouncycastle.asn1.crmf.CertId[] getRevCerts()",
            "org.bouncycastle.asn1.crmf.CertId:org.bouncycastle.asn1.crmf.CertId getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)"
        ]
    },
    "org.bouncycastle.asn1.crmf.CertReqMessages:org.bouncycastle.asn1.crmf.CertReqMessages getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.PKIBody:org.bouncycastle.asn1.ASN1Encodable getBodyForType(int,org.bouncycastle.asn1.ASN1Encodable)"
        ]
    },
    "org.bouncycastle.asn1.crmf.CertReqMsg:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.crmf.CertReqMsg:org.bouncycastle.asn1.crmf.CertReqMsg getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.crmf.CertReqMsg:org.bouncycastle.asn1.crmf.CertReqMsg getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.crmf.CertReqMessages:org.bouncycastle.asn1.crmf.CertReqMsg[] toCertReqMsgArray()"
        ]
    },
    "org.bouncycastle.asn1.crmf.CertRequest:org.bouncycastle.asn1.crmf.CertRequest getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.crmf.CertReqMsg:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.crmf.CertTemplate:org.bouncycastle.asn1.crmf.CertTemplate getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.RevDetails:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.crmf.CertRequest:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.crmf.CertTemplateBuilder:org.bouncycastle.asn1.crmf.CertTemplate build()"
        ]
    },
    "org.bouncycastle.asn1.crmf.Controls:org.bouncycastle.asn1.crmf.Controls getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.crmf.CertRequest:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.crmf.EncKeyWithID:org.bouncycastle.asn1.crmf.EncKeyWithID getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.crmf.EncryptedValue:org.bouncycastle.asn1.crmf.EncryptedValue getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.CertOrEncCert:void <init>(org.bouncycastle.asn1.ASN1TaggedObject)",
            "org.bouncycastle.asn1.cmp.CertifiedKeyPair:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.crmf.EncryptedKey:org.bouncycastle.asn1.crmf.EncryptedKey getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.crmf.OptionalValidity:org.bouncycastle.asn1.crmf.OptionalValidity getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.crmf.CertTemplate:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.crmf.PKIPublicationInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.crmf.PKIPublicationInfo:org.bouncycastle.asn1.crmf.PKIPublicationInfo getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.crmf.PKIPublicationInfo:org.bouncycastle.asn1.crmf.PKIPublicationInfo getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.CertifiedKeyPair:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.crmf.PKMACValue:org.bouncycastle.asn1.crmf.PKMACValue getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.crmf.PKMACValue:org.bouncycastle.asn1.crmf.PKMACValue getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.crmf.POPOSigningKeyInput:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.crmf.POPOSigningKey:org.bouncycastle.asn1.crmf.POPOSigningKey getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.crmf.POPOSigningKey:org.bouncycastle.asn1.crmf.POPOSigningKey getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)"
        ]
    },
    "org.bouncycastle.asn1.crmf.POPOSigningKeyInput:org.bouncycastle.asn1.crmf.POPOSigningKeyInput getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.crmf.POPOSigningKey:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.crmf.SinglePubInfo:org.bouncycastle.asn1.crmf.SinglePubInfo getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.crmf.PKIPublicationInfo:org.bouncycastle.asn1.crmf.SinglePubInfo[] getPubInfos()"
        ]
    },
    "org.bouncycastle.asn1.cryptopro.GOST28147Parameters:org.bouncycastle.asn1.cryptopro.GOST28147Parameters getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cryptopro.GOST28147Parameters:org.bouncycastle.asn1.cryptopro.GOST28147Parameters getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:javax.crypto.Cipher createCipher(int,char[],org.bouncycastle.asn1.x509.AlgorithmIdentifier)"
        ]
    },
    "org.bouncycastle.asn1.cryptopro.GOST3410PublicKeyAlgParameters:org.bouncycastle.asn1.cryptopro.GOST3410PublicKeyAlgParameters getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cryptopro.GOST3410PublicKeyAlgParameters:org.bouncycastle.asn1.cryptopro.GOST3410PublicKeyAlgParameters getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey:void populateFromPubKeyInfo(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)"
        ]
    },
    "org.bouncycastle.asn1.dvcs.DVCSCertInfo:org.bouncycastle.asn1.dvcs.DVCSCertInfo getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.dvcs.DVCSCertInfo:org.bouncycastle.asn1.dvcs.DVCSCertInfo getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.dvcs.DVCSCertInfoBuilder:org.bouncycastle.asn1.dvcs.DVCSCertInfo build()",
            "org.bouncycastle.asn1.dvcs.DVCSResponse:org.bouncycastle.asn1.dvcs.DVCSResponse getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.dvcs.DVCSErrorNotice:org.bouncycastle.asn1.dvcs.DVCSErrorNotice getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.dvcs.DVCSErrorNotice:org.bouncycastle.asn1.dvcs.DVCSErrorNotice getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)"
        ]
    },
    "org.bouncycastle.asn1.dvcs.DVCSRequest:org.bouncycastle.asn1.dvcs.DVCSRequest getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.dvcs.DVCSRequest:org.bouncycastle.asn1.dvcs.DVCSRequest getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)"
        ]
    },
    "org.bouncycastle.asn1.dvcs.DVCSRequestInformation:org.bouncycastle.asn1.dvcs.DVCSRequestInformation getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.dvcs.DVCSCertInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.dvcs.DVCSRequest:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.dvcs.DVCSRequestInformation:org.bouncycastle.asn1.dvcs.DVCSRequestInformation getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.dvcs.DVCSRequestInformationBuilder:org.bouncycastle.asn1.dvcs.DVCSRequestInformation build()"
        ]
    },
    "org.bouncycastle.asn1.dvcs.PathProcInput:org.bouncycastle.asn1.dvcs.PathProcInput getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.dvcs.PathProcInput:org.bouncycastle.asn1.dvcs.PathProcInput getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)"
        ]
    },
    "org.bouncycastle.asn1.dvcs.TargetEtcChain:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.dvcs.TargetEtcChain:org.bouncycastle.asn1.dvcs.TargetEtcChain getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.dvcs.TargetEtcChain:org.bouncycastle.asn1.dvcs.TargetEtcChain getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.dvcs.Data:org.bouncycastle.asn1.dvcs.TargetEtcChain[] getCerts()",
            "org.bouncycastle.asn1.dvcs.TargetEtcChain:org.bouncycastle.asn1.dvcs.TargetEtcChain getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.dvcs.TargetEtcChain:org.bouncycastle.asn1.dvcs.TargetEtcChain[] arrayFromSequence(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.eac.PublicKeyDataObject:org.bouncycastle.asn1.eac.PublicKeyDataObject getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.eac.CertificateBody:void setIso7816CertificateBody(org.bouncycastle.asn1.DERApplicationSpecific)",
            "org.bouncycastle.asn1.eac.CertificateBody:void setPublicKey(org.bouncycastle.asn1.eac.PublicKeyDataObject)"
        ]
    },
    "org.bouncycastle.asn1.esf.CommitmentTypeIndication:org.bouncycastle.asn1.esf.CommitmentTypeIndication getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.esf.CommitmentTypeQualifier:org.bouncycastle.asn1.esf.CommitmentTypeQualifier getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.esf.CompleteRevocationRefs:org.bouncycastle.asn1.esf.CompleteRevocationRefs getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.esf.CrlIdentifier:org.bouncycastle.asn1.esf.CrlIdentifier getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.esf.CrlValidatedID:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.esf.CrlListID:org.bouncycastle.asn1.esf.CrlListID getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.esf.CrlOcspRef:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.esf.CrlOcspRef:org.bouncycastle.asn1.esf.CrlOcspRef getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.esf.CompleteRevocationRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.CompleteRevocationRefs:org.bouncycastle.asn1.esf.CrlOcspRef[] getCrlOcspRefs()"
        ]
    },
    "org.bouncycastle.asn1.esf.CrlValidatedID:org.bouncycastle.asn1.esf.CrlValidatedID getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.esf.CrlListID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.CrlListID:org.bouncycastle.asn1.esf.CrlValidatedID[] getCrls()"
        ]
    },
    "org.bouncycastle.asn1.esf.OcspIdentifier:org.bouncycastle.asn1.esf.OcspIdentifier getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.esf.OcspResponsesID:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.esf.OcspListID:org.bouncycastle.asn1.esf.OcspListID getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.esf.CrlOcspRef:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.esf.OcspResponsesID:org.bouncycastle.asn1.esf.OcspResponsesID getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.esf.OcspListID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OcspListID:org.bouncycastle.asn1.esf.OcspResponsesID[] getOcspResponses()"
        ]
    },
    "org.bouncycastle.asn1.esf.OtherHashAlgAndValue:org.bouncycastle.asn1.esf.OtherHashAlgAndValue getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.esf.OtherHash:org.bouncycastle.asn1.esf.OtherHash getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.esf.SignaturePolicyId:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.esf.OtherRevRefs:org.bouncycastle.asn1.esf.OtherRevRefs getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.esf.CrlOcspRef:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.esf.OtherRevVals:org.bouncycastle.asn1.esf.OtherRevVals getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.esf.RevocationValues:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.esf.RevocationValues:org.bouncycastle.asn1.esf.RevocationValues getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.esf.SPUserNotice:org.bouncycastle.asn1.esf.SPUserNotice getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.esf.SigPolicyQualifierInfo:org.bouncycastle.asn1.esf.SigPolicyQualifierInfo getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.esf.SigPolicyQualifiers:org.bouncycastle.asn1.esf.SigPolicyQualifierInfo getInfoAt(int)"
        ]
    },
    "org.bouncycastle.asn1.esf.SigPolicyQualifiers:org.bouncycastle.asn1.esf.SigPolicyQualifiers getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.esf.SignaturePolicyId:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.esf.SignaturePolicyId:org.bouncycastle.asn1.esf.SignaturePolicyId getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.esf.SignaturePolicyIdentifier:org.bouncycastle.asn1.esf.SignaturePolicyIdentifier getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.esf.SignerAttribute:org.bouncycastle.asn1.esf.SignerAttribute getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.esf.SignerLocation:void <init>(org.bouncycastle.asn1.DERUTF8String,org.bouncycastle.asn1.DERUTF8String,org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.esf.SignerLocation:org.bouncycastle.asn1.esf.SignerLocation getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.ess.ContentHints:org.bouncycastle.asn1.ess.ContentHints getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.ess.ESSCertID:org.bouncycastle.asn1.ess.ESSCertID getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.dvcs.CertEtcToken:void <init>(org.bouncycastle.asn1.ASN1TaggedObject)",
            "org.bouncycastle.asn1.ess.SigningCertificate:org.bouncycastle.asn1.ess.ESSCertID[] getCerts()"
        ]
    },
    "org.bouncycastle.asn1.ess.ESSCertIDv2:org.bouncycastle.asn1.ess.ESSCertIDv2 getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ess.SigningCertificateV2:org.bouncycastle.asn1.ess.ESSCertIDv2[] getCerts()"
        ]
    },
    "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.ess.OtherCertID getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ess.OtherSigningCertificate:org.bouncycastle.asn1.ess.OtherCertID[] getCerts()"
        ]
    },
    "org.bouncycastle.asn1.ess.OtherSigningCertificate:org.bouncycastle.asn1.ess.OtherSigningCertificate getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.ess.OtherSigningCertificate:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ess.OtherSigningCertificate:org.bouncycastle.asn1.ess.OtherSigningCertificate getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.ess.SigningCertificate:org.bouncycastle.asn1.ess.SigningCertificate getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.ess.SigningCertificate:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ess.SigningCertificate:org.bouncycastle.asn1.ess.SigningCertificate getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.ess.SigningCertificateV2:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ess.SigningCertificateV2:org.bouncycastle.asn1.ess.SigningCertificateV2 getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.icao.CscaMasterList:org.bouncycastle.asn1.icao.CscaMasterList getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.icao.DataGroupHash:org.bouncycastle.asn1.icao.DataGroupHash getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.icao.LDSSecurityObject:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.icao.LDSSecurityObject:org.bouncycastle.asn1.icao.LDSSecurityObject getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.icao.LDSSecurityObject:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.icao.LDSSecurityObject:org.bouncycastle.asn1.icao.LDSSecurityObject getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.icao.LDSVersionInfo:org.bouncycastle.asn1.icao.LDSVersionInfo getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.icao.LDSSecurityObject:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.isismtt.x509.AdmissionSyntax:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.isismtt.x509.AdmissionSyntax:org.bouncycastle.asn1.isismtt.x509.AdmissionSyntax getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.isismtt.x509.Admissions:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.isismtt.x509.Admissions:org.bouncycastle.asn1.isismtt.x509.Admissions getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.isismtt.x509.MonetaryLimit:org.bouncycastle.asn1.isismtt.x509.MonetaryLimit getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.misc.CAST5CBCParameters:org.bouncycastle.asn1.misc.CAST5CBCParameters getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.symmetric.CAST5$AlgParams:void engineInit(byte[],java.lang.String)"
        ]
    },
    "org.bouncycastle.asn1.misc.IDEACBCPar:org.bouncycastle.asn1.misc.IDEACBCPar getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.mozilla.PublicKeyAndChallenge:org.bouncycastle.asn1.mozilla.PublicKeyAndChallenge getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.ocsp.BasicOCSPResponse:org.bouncycastle.asn1.ocsp.BasicOCSPResponse getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.esf.RevocationValues:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.RevocationValues:org.bouncycastle.asn1.ocsp.BasicOCSPResponse[] getOcspVals()",
            "org.bouncycastle.asn1.ocsp.BasicOCSPResponse:org.bouncycastle.asn1.ocsp.BasicOCSPResponse getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.ocsp.OCSPResp:java.lang.Object getResponseObject()"
        ]
    },
    "org.bouncycastle.asn1.ocsp.CertID:org.bouncycastle.asn1.ocsp.CertID getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ocsp.CertID:org.bouncycastle.asn1.ocsp.CertID getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.ocsp.Request:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ocsp.SingleResponse:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.ocsp.CrlID:org.bouncycastle.asn1.ocsp.CrlID getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.ocsp.OCSPRequest:org.bouncycastle.asn1.ocsp.OCSPRequest getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ocsp.OCSPRequest:org.bouncycastle.asn1.ocsp.OCSPRequest getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.ocsp.OCSPReq:void <init>(org.bouncycastle.asn1.ASN1InputStream)"
        ]
    },
    "org.bouncycastle.asn1.ocsp.OCSPResponse:org.bouncycastle.asn1.ocsp.OCSPResponse getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ocsp.OCSPResponse:org.bouncycastle.asn1.ocsp.OCSPResponse getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.crypto.tls.CertificateStatus:org.bouncycastle.crypto.tls.CertificateStatus parse(java.io.InputStream)",
            "org.bouncycastle.ocsp.OCSPResp:void <init>(org.bouncycastle.asn1.ASN1InputStream)"
        ]
    },
    "org.bouncycastle.asn1.ocsp.Request:org.bouncycastle.asn1.ocsp.Request getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ocsp.Request:org.bouncycastle.asn1.ocsp.Request getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.ocsp.OCSPReq:org.bouncycastle.ocsp.Req[] getRequestList()"
        ]
    },
    "org.bouncycastle.asn1.ocsp.ResponseData:org.bouncycastle.asn1.ocsp.ResponseData getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ocsp.BasicOCSPResponse:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ocsp.ResponseData:org.bouncycastle.asn1.ocsp.ResponseData getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)"
        ]
    },
    "org.bouncycastle.asn1.ocsp.RevokedInfo:org.bouncycastle.asn1.ocsp.RevokedInfo getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ocsp.RevokedInfo:org.bouncycastle.asn1.ocsp.RevokedInfo getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.ocsp.SingleResp:java.lang.Object getCertStatus()"
        ]
    },
    "org.bouncycastle.asn1.ocsp.Signature:org.bouncycastle.asn1.ocsp.Signature getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ocsp.Signature:org.bouncycastle.asn1.ocsp.Signature getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)"
        ]
    },
    "org.bouncycastle.asn1.ocsp.SingleResponse:org.bouncycastle.asn1.ocsp.SingleResponse getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ocsp.SingleResponse:org.bouncycastle.asn1.ocsp.SingleResponse getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.ocsp.BasicOCSPResp:org.bouncycastle.ocsp.SingleResp[] getResponses()",
            "org.bouncycastle.ocsp.RespData:org.bouncycastle.ocsp.SingleResp[] getResponses()"
        ]
    },
    "org.bouncycastle.asn1.ocsp.TBSRequest:org.bouncycastle.asn1.ocsp.TBSRequest getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ocsp.OCSPRequest:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ocsp.TBSRequest:org.bouncycastle.asn1.ocsp.TBSRequest getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)"
        ]
    },
    "org.bouncycastle.asn1.pkcs.AuthenticatedSafe:org.bouncycastle.asn1.pkcs.AuthenticatedSafe getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])"
        ]
    },
    "org.bouncycastle.asn1.pkcs.CRLBag:org.bouncycastle.asn1.pkcs.CRLBag getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.pkcs.CertBag:org.bouncycastle.asn1.pkcs.CertBag getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])"
        ]
    },
    "org.bouncycastle.asn1.pkcs.CertificationRequest:org.bouncycastle.asn1.pkcs.CertificationRequest getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.PKIBody:org.bouncycastle.asn1.ASN1Encodable getBodyForType(int,org.bouncycastle.asn1.ASN1Encodable)"
        ]
    },
    "org.bouncycastle.asn1.pkcs.CertificationRequestInfo:org.bouncycastle.asn1.pkcs.CertificationRequestInfo getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.pkcs.CertificationRequest:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.pkcs.ContentInfo:org.bouncycastle.asn1.pkcs.ContentInfo getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.pkcs.AuthenticatedSafe:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.Pfx:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.SignedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.pkcs.DHParameter:org.bouncycastle.asn1.pkcs.DHParameter getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.dh.AlgorithmParametersSpi:void engineInit(byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey:void <init>(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey:void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jce.provider.JCEDHPrivateKey:void <init>(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jce.provider.JCEDHPublicKey:void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)"
        ]
    },
    "org.bouncycastle.asn1.pkcs.EncryptedData:org.bouncycastle.asn1.pkcs.EncryptedData getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])"
        ]
    },
    "org.bouncycastle.asn1.pkcs.EncryptedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.pkcs.EncryptedData:org.bouncycastle.asn1.pkcs.EncryptedData getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.pkcs.EncryptedPrivateKeyInfo:org.bouncycastle.asn1.pkcs.EncryptedPrivateKeyInfo getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])"
        ]
    },
    "org.bouncycastle.asn1.pkcs.EncryptionScheme:org.bouncycastle.asn1.pkcs.EncryptionScheme getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.pkcs.PBES2Algorithms:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.pkcs.IssuerAndSerialNumber:org.bouncycastle.asn1.pkcs.IssuerAndSerialNumber getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.pkcs.SignerInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.pkcs.KeyDerivationFunc:org.bouncycastle.asn1.pkcs.KeyDerivationFunc getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.pkcs.PBES2Algorithms:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.pkcs.MacData:org.bouncycastle.asn1.pkcs.MacData getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.pkcs.Pfx:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.pkcs.PBEParameter:org.bouncycastle.asn1.pkcs.PBEParameter getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.pkcs.PBES2Parameters:org.bouncycastle.asn1.pkcs.PBES2Parameters getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:javax.crypto.Cipher createCipher(int,char[],org.bouncycastle.asn1.x509.AlgorithmIdentifier)"
        ]
    },
    "org.bouncycastle.asn1.pkcs.PBKDF2Params:org.bouncycastle.asn1.pkcs.PBKDF2Params getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.pkcs.PBES2Algorithms:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:javax.crypto.Cipher createCipher(int,char[],org.bouncycastle.asn1.x509.AlgorithmIdentifier)",
            "org.bouncycastle.jcajce.provider.symmetric.PBEPBKDF2$AlgParams:void engineInit(byte[])"
        ]
    },
    "org.bouncycastle.asn1.pkcs.PKCS12PBEParams:org.bouncycastle.asn1.pkcs.PKCS12PBEParams getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:java.security.PrivateKey unwrapKey(org.bouncycastle.asn1.x509.AlgorithmIdentifier,byte[],char[],boolean)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:byte[] cryptData(boolean,org.bouncycastle.asn1.x509.AlgorithmIdentifier,char[],boolean,byte[])",
            "org.bouncycastle.jcajce.provider.symmetric.PBEPKCS12$AlgParams:void engineInit(byte[])"
        ]
    },
    "org.bouncycastle.asn1.pkcs.Pfx:org.bouncycastle.asn1.pkcs.Pfx getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS12Util:byte[] convertToDefiniteLength(byte[])",
            "org.bouncycastle.jce.PKCS12Util:byte[] convertToDefiniteLength(byte[],char[],java.lang.String)"
        ]
    },
    "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.pkcs.PrivateKeyInfo getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.crmf.EncKeyWithID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.pkcs.PrivateKeyInfo getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(byte[])",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(java.io.InputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey:void readObject(java.io.ObjectInputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey:void readObject(java.io.ObjectInputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void readObject(java.io.ObjectInputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.KeyFactorySpi:java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:java.security.Key engineUnwrap(byte[],java.lang.String,int)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi:java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil:org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePrivateKeyParameter(java.security.PrivateKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.KeyFactory:java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:java.security.Key engineUnwrap(byte[],java.lang.String,int)",
            "org.bouncycastle.jce.ECKeyUtil:java.security.PrivateKey privateToExplicitParameters(java.security.PrivateKey,java.security.Provider)",
            "org.bouncycastle.jce.provider.JCEECPrivateKey:void readObject(java.io.ObjectInputStream)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:java.security.Key engineUnwrap(byte[],java.lang.String,int)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyFactorySpi:java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec)"
        ]
    },
    "org.bouncycastle.asn1.pkcs.RC2CBCParameter:org.bouncycastle.asn1.pkcs.RC2CBCParameter getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.symmetric.RC2$AlgParams:void engineInit(byte[],java.lang.String)"
        ]
    },
    "org.bouncycastle.asn1.pkcs.RSAESOAEPparams:org.bouncycastle.asn1.pkcs.RSAESOAEPparams getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.AlgorithmParametersSpi$OAEP:void engineInit(byte[])"
        ]
    },
    "org.bouncycastle.asn1.pkcs.RSAPrivateKey:org.bouncycastle.asn1.pkcs.RSAPrivateKey getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.pkcs.RSAPrivateKey:org.bouncycastle.asn1.pkcs.RSAPrivateKey getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.BCRSAPrivateCrtKey:void <init>(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.KeyFactorySpi:java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.jce.provider.JCERSAPrivateCrtKey:void <init>(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)"
        ]
    },
    "org.bouncycastle.asn1.pkcs.RSAPublicKey:org.bouncycastle.asn1.pkcs.RSAPublicKey getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.pkcs.RSAPublicKey:org.bouncycastle.asn1.pkcs.RSAPublicKey getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.BCRSAPublicKey:void populateFromPublicKeyInfo(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)"
        ]
    },
    "org.bouncycastle.asn1.pkcs.RSASSAPSSparams:org.bouncycastle.asn1.pkcs.RSASSAPSSparams getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.AlgorithmParametersSpi$PSS:void engineInit(byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:java.lang.String getSignatureName(org.bouncycastle.asn1.x509.AlgorithmIdentifier)",
            "org.bouncycastle.jce.PKCS10CertificationRequest:java.lang.String getSignatureName(org.bouncycastle.asn1.x509.AlgorithmIdentifier)",
            "org.bouncycastle.jce.provider.X509SignatureUtil:java.lang.String getSignatureName(org.bouncycastle.asn1.x509.AlgorithmIdentifier)"
        ]
    },
    "org.bouncycastle.asn1.pkcs.SafeBag:org.bouncycastle.asn1.pkcs.SafeBag getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])"
        ]
    },
    "org.bouncycastle.asn1.pkcs.SignedData:org.bouncycastle.asn1.pkcs.SignedData getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.Certificate readDERCertificate(org.bouncycastle.asn1.ASN1InputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.CRL readDERCRL(org.bouncycastle.asn1.ASN1InputStream)"
        ]
    },
    "org.bouncycastle.asn1.sec.ECPrivateKey:org.bouncycastle.asn1.sec.ECPrivateKey getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)"
        ]
    },
    "org.bouncycastle.asn1.tsp.Accuracy:org.bouncycastle.asn1.tsp.Accuracy getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.tsp.TSTInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.tsp.MessageImprint:org.bouncycastle.asn1.tsp.MessageImprint getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.tsp.TSTInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.tsp.TimeStampReq:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.tsp.TSTInfo:org.bouncycastle.asn1.tsp.TSTInfo getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.tsp.TimeStampReq:org.bouncycastle.asn1.tsp.TimeStampReq getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.tsp.TimeStampResp:org.bouncycastle.asn1.tsp.TimeStampResp getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.ua.DSTU4145BinaryField:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ua.DSTU4145BinaryField:org.bouncycastle.asn1.ua.DSTU4145BinaryField getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.ua.DSTU4145BinaryField:org.bouncycastle.asn1.ua.DSTU4145BinaryField getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ua.DSTU4145ECBinary:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.ua.DSTU4145ECBinary:org.bouncycastle.asn1.ua.DSTU4145ECBinary getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ua.DSTU4145Params:org.bouncycastle.asn1.ua.DSTU4145Params getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x500.AttributeTypeAndValue:org.bouncycastle.asn1.x500.AttributeTypeAndValue getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x500.RDN:org.bouncycastle.asn1.x500.AttributeTypeAndValue getFirst()",
            "org.bouncycastle.asn1.x500.RDN:org.bouncycastle.asn1.x500.AttributeTypeAndValue[] getTypesAndValues()"
        ]
    },
    "org.bouncycastle.asn1.x500.X500Name:org.bouncycastle.asn1.x500.X500Name getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.PKIHeader:void <clinit>()",
            "org.bouncycastle.asn1.cms.IssuerAndSerialNumber:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.IssuerAndSerialNumber:void <init>(org.bouncycastle.asn1.x509.X509Name,java.math.BigInteger)",
            "org.bouncycastle.asn1.cms.IssuerAndSerialNumber:void <init>(org.bouncycastle.asn1.x509.X509Name,org.bouncycastle.asn1.ASN1Integer)",
            "org.bouncycastle.asn1.esf.CrlIdentifier:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ocsp.ResponderID:org.bouncycastle.asn1.ocsp.ResponderID getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ocsp.ResponderID:org.bouncycastle.asn1.x500.X500Name getName()",
            "org.bouncycastle.asn1.pkcs.CertificationRequestInfo:void <init>(org.bouncycastle.asn1.x509.X509Name,org.bouncycastle.asn1.x509.SubjectPublicKeyInfo,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.CertificationRequestInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.IssuerAndSerialNumber:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.IssuerAndSerialNumber:void <init>(org.bouncycastle.asn1.x509.X509Name,java.math.BigInteger)",
            "org.bouncycastle.asn1.pkcs.IssuerAndSerialNumber:void <init>(org.bouncycastle.asn1.x509.X509Name,org.bouncycastle.asn1.ASN1Integer)",
            "org.bouncycastle.asn1.x500.X500Name:org.bouncycastle.asn1.x500.X500Name getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.x509.GeneralName:void <init>(org.bouncycastle.asn1.x509.X509Name)",
            "org.bouncycastle.asn1.x509.GeneralName:java.lang.String toString()",
            "org.bouncycastle.asn1.x509.TBSCertList:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.TBSCertificate:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.TBSCertificateStructure:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.V1TBSCertificateGenerator:void setIssuer(org.bouncycastle.asn1.x509.X509Name)",
            "org.bouncycastle.asn1.x509.V1TBSCertificateGenerator:void setSubject(org.bouncycastle.asn1.x509.X509Name)",
            "org.bouncycastle.asn1.x509.V2TBSCertListGenerator:void setIssuer(org.bouncycastle.asn1.x509.X509Name)",
            "org.bouncycastle.asn1.x509.V3TBSCertificateGenerator:void setIssuer(org.bouncycastle.asn1.x509.X509Name)",
            "org.bouncycastle.asn1.x509.V3TBSCertificateGenerator:void setSubject(org.bouncycastle.asn1.x509.X509Name)",
            "org.bouncycastle.crypto.tls.CertificateRequest:org.bouncycastle.crypto.tls.CertificateRequest parse(org.bouncycastle.crypto.tls.TlsContext,java.io.InputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLEntryObject:org.bouncycastle.asn1.x500.X500Name loadCertificateIssuer(boolean,org.bouncycastle.asn1.x500.X500Name)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:java.security.Principal getIssuerDN()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:java.util.Set loadCRLEntries()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:java.security.cert.X509CRLEntry getRevokedCertificate(java.math.BigInteger)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:boolean isRevoked(java.security.cert.Certificate)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:java.security.Principal getIssuerDN()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:java.security.Principal getSubjectDN()",
            "org.bouncycastle.jce.provider.X509CRLEntryObject:org.bouncycastle.asn1.x500.X500Name loadCertificateIssuer(boolean,org.bouncycastle.asn1.x500.X500Name)",
            "org.bouncycastle.jce.provider.X509CRLObject:java.security.Principal getIssuerDN()",
            "org.bouncycastle.jce.provider.X509CRLObject:java.util.Set loadCRLEntries()",
            "org.bouncycastle.jce.provider.X509CRLObject:java.security.cert.X509CRLEntry getRevokedCertificate(java.math.BigInteger)",
            "org.bouncycastle.jce.provider.X509CRLObject:boolean isRevoked(java.security.cert.Certificate)",
            "org.bouncycastle.jce.provider.X509CertificateObject:java.security.Principal getIssuerDN()",
            "org.bouncycastle.jce.provider.X509CertificateObject:java.security.Principal getSubjectDN()",
            "org.bouncycastle.ocsp.RespID:void <init>(javax.security.auth.x500.X500Principal)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.x500.X500Name:org.bouncycastle.asn1.x500.X500Name getInstance(org.bouncycastle.asn1.x500.X500NameStyle,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x500.X500Name:org.bouncycastle.asn1.x500.X500Name getInstance(org.bouncycastle.asn1.x500.X500NameStyle,java.lang.Object)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:java.util.Collection getAlternativeNames(byte[])",
            "org.bouncycastle.jce.provider.X509CertificateObject:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.x509.AccessDescription:org.bouncycastle.asn1.x509.AccessDescription getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.AuthorityInformationAccess:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.x509.AlgorithmIdentifier:org.bouncycastle.asn1.x509.AlgorithmIdentifier getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.Challenge:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.PBMParameter:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthenticatedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getMacAlgorithm()",
            "org.bouncycastle.asn1.cms.CompressedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.DigestedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.KEKRecipientInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.KeyAgreeRecipientInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.KeyTransRecipientInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.OriginatorPublicKey:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.PasswordRecipientInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.SignerInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.crmf.PKMACValue:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.crmf.POPOSigningKey:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherHashAlgAndValue:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.icao.LDSSecurityObject:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.isismtt.ocsp.CertHash:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ocsp.BasicOCSPResponse:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ocsp.CertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ocsp.Signature:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.CertificationRequest:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.EncryptedData:org.bouncycastle.asn1.x509.AlgorithmIdentifier getEncryptionAlgorithm()",
            "org.bouncycastle.asn1.pkcs.EncryptedPrivateKeyInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.EncryptionScheme:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.KeyDerivationFunc:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PBKDF2Params:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.SignerInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.tsp.MessageImprint:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.AlgorithmIdentifier:org.bouncycastle.asn1.x509.AlgorithmIdentifier getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.x509.AttributeCertificate:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.AttributeCertificateInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.Certificate:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.CertificateList:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.DigestInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ObjectDigestInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.SubjectPublicKeyInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.TBSCertList:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.TBSCertificate:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.TBSCertificateStructure:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509CertificateStructure:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.qualified.BiometricData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.AlgorithmParametersSpi$OAEP:void engineInit(byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.AlgorithmParametersSpi$PSS:void engineInit(byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.BCRSAPublicKey:void readObject(java.io.ObjectInputStream)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:javax.crypto.Cipher createCipher(int,char[],org.bouncycastle.asn1.x509.AlgorithmIdentifier)"
        ]
    },
    "org.bouncycastle.asn1.x509.AttCertValidityPeriod:org.bouncycastle.asn1.x509.AttCertValidityPeriod getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.AttributeCertificateInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.x509.Attribute:org.bouncycastle.asn1.x509.Attribute getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.esf.SignerAttribute:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.SubjectDirectoryAttributes:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.x509.X509Attribute:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509V2AttributeCertificateGenerator:void addAttribute(org.bouncycastle.x509.X509Attribute)"
        ]
    },
    "org.bouncycastle.asn1.x509.AttributeCertificate:org.bouncycastle.asn1.x509.AttributeCertificate getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.CMPCertificate:org.bouncycastle.asn1.'cmp'.CMPCertificate getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.esf.SignerAttribute:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.x509.X509V2AttributeCertificate:org.bouncycastle.asn1.x509.AttributeCertificate getObject(java.io.InputStream)"
        ]
    },
    "org.bouncycastle.asn1.x509.AttributeCertificateInfo:org.bouncycastle.asn1.x509.AttributeCertificateInfo getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.AttributeCertificate:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.AttributeCertificateInfo:org.bouncycastle.asn1.x509.AttributeCertificateInfo getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.x509.V2AttributeCertificateInfoGenerator:org.bouncycastle.asn1.x509.AttributeCertificateInfo generateAttributeCertificateInfo()"
        ]
    },
    "org.bouncycastle.asn1.x509.AttributeCertificateInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.AttributeCertificateInfo:org.bouncycastle.asn1.x509.AttributeCertificateInfo getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x509.AuthorityInformationAccess:org.bouncycastle.asn1.x509.AuthorityInformationAccess getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkSignatures()"
        ]
    },
    "org.bouncycastle.asn1.x509.AuthorityKeyIdentifier:org.bouncycastle.asn1.x509.AuthorityKeyIdentifier getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.AuthorityKeyIdentifier:org.bouncycastle.asn1.x509.AuthorityKeyIdentifier getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.x509.AuthorityKeyIdentifier:org.bouncycastle.asn1.x509.AuthorityKeyIdentifier fromExtensions(org.bouncycastle.asn1.x509.Extensions)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:java.security.cert.Certificate[] engineGetCertificateChain(java.lang.String)",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkSignatures()",
            "org.bouncycastle.x509.PKIXCertPathReviewer:java.util.Collection getTrustAnchors(java.security.cert.X509Certificate,java.util.Set)"
        ]
    },
    "org.bouncycastle.asn1.x509.BasicConstraints:org.bouncycastle.asn1.x509.BasicConstraints getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.BasicConstraints:org.bouncycastle.asn1.x509.BasicConstraints getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.x509.BasicConstraints:org.bouncycastle.asn1.x509.BasicConstraints getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.BasicConstraints:org.bouncycastle.asn1.x509.BasicConstraints fromExtensions(org.bouncycastle.asn1.x509.Extensions)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:void <init>(org.bouncycastle.asn1.x509.Certificate)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:java.lang.String toString()",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void prepareNextCertK(java.security.cert.CertPath,int)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:int prepareNextCertM(java.security.cert.CertPath,int,int)",
            "org.bouncycastle.jce.provider.X509CertificateObject:void <init>(org.bouncycastle.asn1.x509.Certificate)",
            "org.bouncycastle.jce.provider.X509CertificateObject:java.lang.String toString()",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkPathLength()",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkSignatures()",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkCRLs(java.security.cert.PKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,java.util.Vector,int)"
        ]
    },
    "org.bouncycastle.asn1.x509.CRLDistPoint:org.bouncycastle.asn1.x509.CRLDistPoint getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.CRLDistPoint:org.bouncycastle.asn1.x509.CRLDistPoint getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:java.lang.String toString()",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:java.util.Set processCRLA1i(java.util.Date,org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.X509Certificate,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void checkCRLs(org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,java.util.List)",
            "org.bouncycastle.jce.provider.RFC3281CertPathUtilities:void checkCRLs(org.bouncycastle.x509.X509AttributeCertificate,org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.util.List)",
            "org.bouncycastle.jce.provider.X509CRLObject:java.lang.String toString()",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkSignatures()"
        ]
    },
    "org.bouncycastle.asn1.x509.Certificate:org.bouncycastle.asn1.x509.Certificate getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.CMPCertificate:org.bouncycastle.asn1.'cmp'.CMPCertificate getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.icao.CscaMasterList:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.isismtt.ocsp.RequestedCertificate:org.bouncycastle.asn1.isismtt.ocsp.RequestedCertificate getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.Certificate:org.bouncycastle.asn1.x509.Certificate getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.crypto.tls.Certificate:org.bouncycastle.crypto.tls.Certificate parse(java.io.InputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.Certificate readDERCertificate(org.bouncycastle.asn1.ASN1InputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.Certificate getCertificate()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.Certificate readPEMCertificate(java.io.InputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:boolean isRevoked(java.security.cert.Certificate)",
            "org.bouncycastle.jce.provider.X509CRLObject:boolean isRevoked(java.security.cert.Certificate)",
            "org.bouncycastle.jce.provider.X509CertParser:java.security.cert.Certificate readDERCertificate(java.io.InputStream)",
            "org.bouncycastle.jce.provider.X509CertParser:java.security.cert.Certificate getCertificate()",
            "org.bouncycastle.jce.provider.X509CertParser:java.security.cert.Certificate readPEMCertificate(java.io.InputStream)",
            "org.bouncycastle.x509.X509CertificatePair:byte[] getEncoded()",
            "org.bouncycastle.x509.X509V1CertificateGenerator:java.security.cert.X509Certificate generateJcaObject(org.bouncycastle.asn1.x509.TBSCertificate,byte[])",
            "org.bouncycastle.x509.X509V3CertificateGenerator:java.security.cert.X509Certificate generateJcaObject(org.bouncycastle.asn1.x509.TBSCertificate,byte[])",
            "org.bouncycastle.x509.util.LDAPStoreHelper:java.util.Set createCrossCertificatePairs(java.util.List,org.bouncycastle.x509.X509CertPairStoreSelector)"
        ]
    },
    "org.bouncycastle.asn1.x509.CertificateList:org.bouncycastle.asn1.x509.CertificateList getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.CRLAnnContent:org.bouncycastle.asn1.x509.CertificateList[] getCertificateLists()",
            "org.bouncycastle.asn1.cmp.RevRepContent:org.bouncycastle.asn1.x509.CertificateList[] getCrls()",
            "org.bouncycastle.asn1.cms.TimeStampAndCRL:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.RevocationValues:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.RevocationValues:org.bouncycastle.asn1.x509.CertificateList[] getCrlVals()",
            "org.bouncycastle.asn1.x509.CertificateList:org.bouncycastle.asn1.x509.CertificateList getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.CRL readPEMCRL(java.io.InputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.CRL readDERCRL(org.bouncycastle.asn1.ASN1InputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.CRL getCRL()",
            "org.bouncycastle.jce.provider.X509CRLParser:java.security.cert.CRL readDERCRL(java.io.InputStream)",
            "org.bouncycastle.jce.provider.X509CRLParser:java.security.cert.CRL getCRL()",
            "org.bouncycastle.jce.provider.X509CRLParser:java.security.cert.CRL readPEMCRL(java.io.InputStream)"
        ]
    },
    "org.bouncycastle.asn1.x509.CertificatePolicies:org.bouncycastle.asn1.x509.CertificatePolicies getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.CertificatePolicies:org.bouncycastle.asn1.x509.CertificatePolicies getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.x509.CertificatePolicies:org.bouncycastle.asn1.x509.CertificatePolicies fromExtensions(org.bouncycastle.asn1.x509.Extensions)"
        ]
    },
    "org.bouncycastle.asn1.x509.DSAParameter:org.bouncycastle.asn1.x509.DSAParameter getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.DSAParameter:org.bouncycastle.asn1.x509.DSAParameter getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.AlgorithmParametersSpi:void engineInit(byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPrivateKey:void <init>(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jce.provider.JDKDSAPrivateKey:void <init>(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jce.provider.JDKDSAPublicKey:void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)"
        ]
    },
    "org.bouncycastle.asn1.x509.DigestInfo:org.bouncycastle.asn1.x509.DigestInfo getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.dvcs.DVCSCertInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.dvcs.Data:org.bouncycastle.asn1.dvcs.Data getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.MacData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.DigestInfo:org.bouncycastle.asn1.x509.DigestInfo getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)"
        ]
    },
    "org.bouncycastle.asn1.x509.ExtendedKeyUsage:org.bouncycastle.asn1.x509.ExtendedKeyUsage getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:org.bouncycastle.asn1.x509.ExtendedKeyUsage getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:org.bouncycastle.asn1.x509.ExtendedKeyUsage fromExtensions(org.bouncycastle.asn1.x509.Extensions)"
        ]
    },
    "org.bouncycastle.asn1.x509.Extension:org.bouncycastle.asn1.x509.Extension getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.dvcs.CertEtcToken:org.bouncycastle.asn1.dvcs.CertEtcToken getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.Extensions:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.x509.Extensions:org.bouncycastle.asn1.x509.Extensions getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.RevAnnContent:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.RevDetails:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.RevDetails:void <init>(org.bouncycastle.asn1.crmf.CertTemplate,org.bouncycastle.asn1.x509.X509Extensions)",
            "org.bouncycastle.asn1.crmf.CertTemplateBuilder:org.bouncycastle.asn1.crmf.CertTemplateBuilder setExtensions(org.bouncycastle.asn1.x509.X509Extensions)",
            "org.bouncycastle.asn1.dvcs.DVCSCertInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ocsp.ResponseData:void <init>(org.bouncycastle.asn1.ocsp.ResponderID,org.bouncycastle.asn1.DERGeneralizedTime,org.bouncycastle.asn1.ASN1Sequence,org.bouncycastle.asn1.x509.X509Extensions)",
            "org.bouncycastle.asn1.ocsp.SingleResponse:void <init>(org.bouncycastle.asn1.ocsp.CertID,org.bouncycastle.asn1.ocsp.CertStatus,org.bouncycastle.asn1.DERGeneralizedTime,org.bouncycastle.asn1.DERGeneralizedTime,org.bouncycastle.asn1.x509.X509Extensions)",
            "org.bouncycastle.asn1.ocsp.SingleResponse:void <init>(org.bouncycastle.asn1.ocsp.CertID,org.bouncycastle.asn1.ocsp.CertStatus,org.bouncycastle.asn1.DERGeneralizedTime,org.bouncycastle.asn1.DERGeneralizedTime,org.bouncycastle.asn1.x509.Extensions)",
            "org.bouncycastle.asn1.ocsp.TBSRequest:void <init>(org.bouncycastle.asn1.x509.GeneralName,org.bouncycastle.asn1.ASN1Sequence,org.bouncycastle.asn1.x509.X509Extensions)",
            "org.bouncycastle.asn1.x509.AttributeCertificateInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.Extensions:org.bouncycastle.asn1.x509.Extensions getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.x509.TBSCertList$CRLEntry:org.bouncycastle.asn1.x509.Extensions getExtensions()",
            "org.bouncycastle.asn1.x509.TBSCertList:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.TBSCertificate:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.V2AttributeCertificateInfoGenerator:void setExtensions(org.bouncycastle.asn1.x509.X509Extensions)",
            "org.bouncycastle.asn1.x509.V2TBSCertListGenerator:void setExtensions(org.bouncycastle.asn1.x509.X509Extensions)",
            "org.bouncycastle.asn1.x509.V3TBSCertificateGenerator:void setExtensions(org.bouncycastle.asn1.x509.X509Extensions)",
            "org.bouncycastle.crypto.tls.OCSPStatusRequest:org.bouncycastle.crypto.tls.OCSPStatusRequest parse(java.io.InputStream)",
            "org.bouncycastle.ocsp.OCSPReqGenerator$RequestObject:org.bouncycastle.asn1.ocsp.Request toRequest()",
            "org.bouncycastle.x509.X509V2CRLGenerator:void addCRLEntry(java.math.BigInteger,java.util.Date,org.bouncycastle.asn1.x509.X509Extensions)"
        ]
    },
    "org.bouncycastle.asn1.x509.GeneralNames:org.bouncycastle.asn1.x509.GeneralNames getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.AttCertIssuer:org.bouncycastle.asn1.x509.AttCertIssuer getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.AuthorityKeyIdentifier:void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo,org.bouncycastle.asn1.x509.GeneralNames,java.math.BigInteger)",
            "org.bouncycastle.asn1.x509.AuthorityKeyIdentifier:void <init>(org.bouncycastle.asn1.x509.GeneralNames,java.math.BigInteger)",
            "org.bouncycastle.asn1.x509.AuthorityKeyIdentifier:void <init>(byte[],org.bouncycastle.asn1.x509.GeneralNames,java.math.BigInteger)",
            "org.bouncycastle.asn1.x509.GeneralNames:org.bouncycastle.asn1.x509.GeneralNames getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.x509.GeneralNames:org.bouncycastle.asn1.x509.GeneralNames fromExtensions(org.bouncycastle.asn1.x509.Extensions,org.bouncycastle.asn1.ASN1ObjectIdentifier)",
            "org.bouncycastle.asn1.x509.IetfAttrSyntax:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.IssuerSerial:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.V2Form:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLEntryObject:org.bouncycastle.asn1.x500.X500Name loadCertificateIssuer(boolean,org.bouncycastle.asn1.x500.X500Name)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLEntryObject:java.lang.String toString()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:java.util.Set loadCRLEntries()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:java.security.cert.X509CRLEntry getRevokedCertificate(java.math.BigInteger)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:boolean isRevoked(java.security.cert.Certificate)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void addAdditionalStoresFromCRLDistributionPoint(org.bouncycastle.asn1.x509.CRLDistPoint,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCertBC(java.security.cert.CertPath,int,org.bouncycastle.jce.provider.PKIXNameConstraintValidator)",
            "org.bouncycastle.jce.provider.X509CRLEntryObject:org.bouncycastle.asn1.x500.X500Name loadCertificateIssuer(boolean,org.bouncycastle.asn1.x500.X500Name)",
            "org.bouncycastle.jce.provider.X509CRLEntryObject:java.lang.String toString()",
            "org.bouncycastle.jce.provider.X509CRLObject:java.util.Set loadCRLEntries()",
            "org.bouncycastle.jce.provider.X509CRLObject:java.security.cert.X509CRLEntry getRevokedCertificate(java.math.BigInteger)",
            "org.bouncycastle.jce.provider.X509CRLObject:boolean isRevoked(java.security.cert.Certificate)",
            "org.bouncycastle.x509.AttributeCertificateHolder:void <init>(org.bouncycastle.jce.X509Principal,java.math.BigInteger)",
            "org.bouncycastle.x509.AttributeCertificateHolder:org.bouncycastle.asn1.x509.GeneralNames generateGeneralNames(org.bouncycastle.jce.X509Principal)",
            "org.bouncycastle.x509.AttributeCertificateIssuer:void <init>(org.bouncycastle.jce.X509Principal)",
            "org.bouncycastle.x509.PKIXCertPathReviewer:java.util.Vector getCRLDistUrls(org.bouncycastle.asn1.x509.CRLDistPoint)"
        ]
    },
    "org.bouncycastle.asn1.x509.GeneralSubtree:org.bouncycastle.asn1.x509.GeneralSubtree getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.NameConstraints:org.bouncycastle.asn1.x509.GeneralSubtree[] createArray(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.x509.Holder:org.bouncycastle.asn1.x509.Holder getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.AttributeCertificateInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.x509.AttributeCertificateHolder:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.x509.IetfAttrSyntax:org.bouncycastle.asn1.x509.IetfAttrSyntax getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.IssuerSerial:org.bouncycastle.asn1.x509.IssuerSerial getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ess.ESSCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.isismtt.x509.ProcurationSyntax:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.IssuerSerial:org.bouncycastle.asn1.x509.IssuerSerial getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)"
        ]
    },
    "org.bouncycastle.asn1.x509.IssuingDistributionPoint:org.bouncycastle.asn1.x509.IssuingDistributionPoint getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.IssuingDistributionPoint:org.bouncycastle.asn1.x509.IssuingDistributionPoint getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:boolean isIndirectCRL(java.security.cert.X509CRL)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:java.lang.String toString()",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:org.bouncycastle.jce.provider.ReasonsMask processCRLD(java.security.cert.X509CRL,org.bouncycastle.asn1.x509.DistributionPoint)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLC(java.security.cert.X509CRL,java.security.cert.X509CRL,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.X509CRLObject:boolean isIndirectCRL(java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:java.lang.String toString()",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkCRLs(java.security.cert.PKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,java.util.Vector,int)"
        ]
    },
    "org.bouncycastle.asn1.x509.NameConstraints:org.bouncycastle.asn1.x509.NameConstraints getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void prepareNextCertG(java.security.cert.CertPath,int,org.bouncycastle.jce.provider.PKIXNameConstraintValidator)",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkNameConstraints()"
        ]
    },
    "org.bouncycastle.asn1.x509.NoticeReference:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.NoticeReference:org.bouncycastle.asn1.x509.NoticeReference getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x509.NoticeReference:org.bouncycastle.asn1.x509.NoticeReference getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.esf.SPUserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.x509.ObjectDigestInfo:org.bouncycastle.asn1.x509.ObjectDigestInfo getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.ObjectDigestInfo:org.bouncycastle.asn1.x509.ObjectDigestInfo getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)"
        ]
    },
    "org.bouncycastle.asn1.x509.PolicyConstraints:org.bouncycastle.asn1.x509.PolicyConstraints getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.PolicyConstraints:org.bouncycastle.asn1.x509.PolicyConstraints fromExtensions(org.bouncycastle.asn1.x509.Extensions)"
        ]
    },
    "org.bouncycastle.asn1.x509.PolicyInformation:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.PolicyInformation:org.bouncycastle.asn1.x509.PolicyInformation getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x509.PolicyInformation:org.bouncycastle.asn1.x509.PolicyInformation getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.dvcs.DVCSCertInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.dvcs.DVCSRequestInformation:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.dvcs.PathProcInput:org.bouncycastle.asn1.x509.PolicyInformation[] fromSequence(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherSigningCertificate:org.bouncycastle.asn1.x509.PolicyInformation[] getPolicies()",
            "org.bouncycastle.asn1.ess.SigningCertificate:org.bouncycastle.asn1.x509.PolicyInformation[] getPolicies()",
            "org.bouncycastle.asn1.ess.SigningCertificateV2:org.bouncycastle.asn1.x509.PolicyInformation[] getPolicies()",
            "org.bouncycastle.asn1.x509.CertificatePolicies:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void prepareNextCertB1(int,java.util.List[],java.lang.String,java.util.Map,java.security.cert.X509Certificate)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:org.bouncycastle.jce.provider.PKIXPolicyNode prepareCertB(java.security.cert.CertPath,int,java.util.List[],org.bouncycastle.jce.provider.PKIXPolicyNode,int)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:org.bouncycastle.jce.provider.PKIXPolicyNode processCertD(java.security.cert.CertPath,int,java.util.Set,org.bouncycastle.jce.provider.PKIXPolicyNode,java.util.List[],int)",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkPolicy()"
        ]
    },
    "org.bouncycastle.asn1.x509.PolicyMappings:org.bouncycastle.asn1.x509.PolicyMappings getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.PolicyQualifierInfo:org.bouncycastle.asn1.x509.PolicyQualifierInfo getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.PrivateKeyUsagePeriod:org.bouncycastle.asn1.x509.PrivateKeyUsagePeriod getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.RoleSyntax:org.bouncycastle.asn1.x509.RoleSyntax getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.SubjectDirectoryAttributes:org.bouncycastle.asn1.x509.SubjectDirectoryAttributes getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.SubjectDirectoryAttributes:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.SubjectDirectoryAttributes:org.bouncycastle.asn1.x509.SubjectDirectoryAttributes getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x509.SubjectPublicKeyInfo:org.bouncycastle.asn1.x509.SubjectPublicKeyInfo getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.crmf.POPOSigningKeyInput:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.mozilla.PublicKeyAndChallenge:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.CertificationRequestInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.SubjectPublicKeyInfo:org.bouncycastle.asn1.x509.SubjectPublicKeyInfo getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.x509.TBSCertificate:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.TBSCertificateStructure:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(byte[])",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(java.io.InputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey:org.bouncycastle.asn1.DERBitString getPublicKeyDetails(org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey:void readObject(java.io.ObjectInputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey:org.bouncycastle.asn1.DERBitString getPublicKeyDetails(org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey:void readObject(java.io.ObjectInputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:org.bouncycastle.asn1.DERBitString getPublicKeyDetails(org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey:void readObject(java.io.ObjectInputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi:java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil:org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePublicKeyParameter(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.KeyFactory:java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec)",
            "org.bouncycastle.jce.ECKeyUtil:java.security.PublicKey publicToExplicitParameters(java.security.PublicKey,java.security.Provider)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier(java.security.PublicKey)",
            "org.bouncycastle.jce.provider.JCEECPrivateKey:org.bouncycastle.asn1.DERBitString getPublicKeyDetails(org.bouncycastle.jce.provider.JCEECPublicKey)",
            "org.bouncycastle.jce.provider.JCEECPublicKey:void readObject(java.io.ObjectInputStream)",
            "org.bouncycastle.ocsp.CertificateID:org.bouncycastle.asn1.ocsp.CertID createCertID(org.bouncycastle.asn1.x509.AlgorithmIdentifier,java.security.cert.X509Certificate,org.bouncycastle.asn1.ASN1Integer,java.lang.String)",
            "org.bouncycastle.ocsp.RespID:void <init>(java.security.PublicKey)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PublicKey generatePublic(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PublicKey generatePublic(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyFactorySpi:java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec)",
            "org.bouncycastle.x509.X509V3CertificateGenerator:void setPublicKey(java.security.PublicKey)",
            "org.bouncycastle.x509.extension.SubjectKeyIdentifierStructure:org.bouncycastle.asn1.ASN1OctetString fromPublicKey(java.security.PublicKey)"
        ]
    },
    "org.bouncycastle.asn1.x509.TBSCertList$CRLEntry:org.bouncycastle.asn1.x509.TBSCertList$CRLEntry getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.TBSCertList$RevokedCertificatesEnumeration:java.lang.Object nextElement()",
            "org.bouncycastle.asn1.x509.TBSCertList:org.bouncycastle.asn1.x509.TBSCertList$CRLEntry[] getRevokedCertificates()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:boolean isRevoked(java.security.cert.Certificate)",
            "org.bouncycastle.jce.provider.X509CRLObject:boolean isRevoked(java.security.cert.Certificate)"
        ]
    },
    "org.bouncycastle.asn1.x509.TBSCertList:org.bouncycastle.asn1.x509.TBSCertList getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.CertificateList:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.TBSCertList:org.bouncycastle.asn1.x509.TBSCertList getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.jce.PrincipalUtil:org.bouncycastle.jce.X509Principal getIssuerX509Principal(java.security.cert.X509CRL)"
        ]
    },
    "org.bouncycastle.asn1.x509.TBSCertList:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.TBSCertList:org.bouncycastle.asn1.x509.TBSCertList getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.V2TBSCertListGenerator:org.bouncycastle.asn1.x509.TBSCertList generateTBSCertList()"
        ]
    },
    "org.bouncycastle.asn1.x509.TBSCertificate:org.bouncycastle.asn1.x509.TBSCertificate getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.Certificate:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.TBSCertificate:org.bouncycastle.asn1.x509.TBSCertificate getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.x509.V1TBSCertificateGenerator:org.bouncycastle.asn1.x509.TBSCertificate generateTBSCertificate()",
            "org.bouncycastle.asn1.x509.V3TBSCertificateGenerator:org.bouncycastle.asn1.x509.TBSCertificate generateTBSCertificate()"
        ]
    },
    "org.bouncycastle.asn1.x509.TBSCertificateStructure:org.bouncycastle.asn1.x509.TBSCertificateStructure getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.TBSCertificateStructure:org.bouncycastle.asn1.x509.TBSCertificateStructure getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.x509.X509CertificateStructure:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.jce.PrincipalUtil:org.bouncycastle.jce.X509Principal getIssuerX509Principal(java.security.cert.X509Certificate)",
            "org.bouncycastle.jce.PrincipalUtil:org.bouncycastle.jce.X509Principal getSubjectX509Principal(java.security.cert.X509Certificate)"
        ]
    },
    "org.bouncycastle.asn1.x509.TargetInformation:org.bouncycastle.asn1.x509.TargetInformation getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.RFC3281CertPathUtilities:void processAttrCert7(org.bouncycastle.x509.X509AttributeCertificate,java.security.cert.CertPath,java.security.cert.CertPath,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.x509.X509AttributeCertStoreSelector:boolean match(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x509.Targets:org.bouncycastle.asn1.x509.Targets getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.TargetInformation:org.bouncycastle.asn1.x509.Targets[] getTargetsObjects()"
        ]
    },
    "org.bouncycastle.asn1.x509.UserNotice:org.bouncycastle.asn1.x509.UserNotice getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.V2Form:org.bouncycastle.asn1.x509.V2Form getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.AttCertIssuer:org.bouncycastle.asn1.x509.AttCertIssuer getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.V2Form:org.bouncycastle.asn1.x509.V2Form getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)"
        ]
    },
    "org.bouncycastle.asn1.x509.X509CertificateStructure:org.bouncycastle.asn1.x509.X509CertificateStructure getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.X509CertificateStructure:org.bouncycastle.asn1.x509.X509CertificateStructure getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)"
        ]
    },
    "org.bouncycastle.asn1.x509.qualified.BiometricData:org.bouncycastle.asn1.x509.qualified.BiometricData getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.qualified.MonetaryValue:org.bouncycastle.asn1.x509.qualified.MonetaryValue getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.PKIXCertPathReviewer:boolean processQcStatements(java.security.cert.X509Certificate,int)"
        ]
    },
    "org.bouncycastle.asn1.x509.qualified.QCStatement:org.bouncycastle.asn1.x509.qualified.QCStatement getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.PKIXCertPathReviewer:boolean processQcStatements(java.security.cert.X509Certificate,int)"
        ]
    },
    "org.bouncycastle.asn1.x509.qualified.SemanticsInformation:org.bouncycastle.asn1.x509.qualified.SemanticsInformation getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.qualified.SemanticsInformation:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.qualified.SemanticsInformation:org.bouncycastle.asn1.x509.qualified.SemanticsInformation getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x509.sigi.NameOrPseudonym:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.sigi.NameOrPseudonym:org.bouncycastle.asn1.x509.sigi.NameOrPseudonym getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x9.X9Curve:void <init>(org.bouncycastle.asn1.x9.X9FieldID,org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.x9.X9ECParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParameters:org.bouncycastle.asn1.x9.X9ECParameters getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x9.X9ECParameters:org.bouncycastle.asn1.x9.X9ECParameters getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey:void populateFromPubKeyInfo(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jce.provider.JCEECPrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jce.provider.JCEECPublicKey:void populateFromPubKeyInfo(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)"
        ]
    },
    "org.bouncycastle.asn1.x9.X9FieldID:org.bouncycastle.asn1.x9.X9FieldID getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.X9ECParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey:void <init>(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.dh.KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:java.lang.String getSignatureName(org.bouncycastle.asn1.x509.AlgorithmIdentifier)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:void verify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:void verify(java.security.PublicKey,java.lang.String)"
        ]
    },
    "org.bouncycastle.jce.provider.JCEDHPrivateKey:void <init>(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void prepareNextCertA(java.security.cert.CertPath,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi:java.security.cert.CertPathValidatorResult engineValidate(java.security.cert.CertPath,java.security.cert.CertPathParameters)"
        ]
    },
    "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:org.bouncycastle.jce.provider.PKIXPolicyNode processCertE(java.security.cert.CertPath,int,org.bouncycastle.jce.provider.PKIXPolicyNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi:java.security.cert.CertPathValidatorResult engineValidate(java.security.cert.CertPath,java.security.cert.CertPathParameters)"
        ]
    },
    "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:int prepareNextCertI1(java.security.cert.CertPath,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi:java.security.cert.CertPathValidatorResult engineValidate(java.security.cert.CertPath,java.security.cert.CertPathParameters)"
        ]
    },
    "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:int prepareNextCertI2(java.security.cert.CertPath,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi:java.security.cert.CertPathValidatorResult engineValidate(java.security.cert.CertPath,java.security.cert.CertPathParameters)"
        ]
    },
    "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void prepareNextCertG(java.security.cert.CertPath,int,org.bouncycastle.jce.provider.PKIXNameConstraintValidator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi:java.security.cert.CertPathValidatorResult engineValidate(java.security.cert.CertPath,java.security.cert.CertPathParameters)"
        ]
    },
    "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:int wrapupCertB(java.security.cert.CertPath,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi:java.security.cert.CertPathValidatorResult engineValidate(java.security.cert.CertPath,java.security.cert.CertPathParameters)"
        ]
    },
    "org.bouncycastle.jce.provider.X509SignatureUtil:java.lang.String getSignatureName(org.bouncycastle.asn1.x509.AlgorithmIdentifier)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:void verify(java.security.PublicKey)",
            "org.bouncycastle.jce.provider.X509CertificateObject:void verify(java.security.PublicKey,java.lang.String)"
        ]
    },
    "org.bouncycastle.pqc.asn1.GMSSPublicKey:org.bouncycastle.pqc.asn1.GMSSPublicKey getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.asn1.McElieceCCA2PrivateKey:org.bouncycastle.pqc.asn1.McElieceCCA2PrivateKey getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)"
        ]
    },
    "org.bouncycastle.pqc.asn1.McElieceCCA2PublicKey:org.bouncycastle.pqc.asn1.McElieceCCA2PublicKey getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PublicKey generatePublic(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)"
        ]
    },
    "org.bouncycastle.pqc.asn1.McEliecePrivateKey:org.bouncycastle.pqc.asn1.McEliecePrivateKey getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)"
        ]
    },
    "org.bouncycastle.pqc.asn1.McEliecePublicKey:org.bouncycastle.pqc.asn1.McEliecePublicKey getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PublicKey generatePublic(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)"
        ]
    },
    "org.bouncycastle.pqc.asn1.ParSet:org.bouncycastle.pqc.asn1.ParSet getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.asn1.RainbowPrivateKey:org.bouncycastle.pqc.asn1.RainbowPrivateKey getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)"
        ]
    },
    "org.bouncycastle.pqc.asn1.RainbowPublicKey:org.bouncycastle.pqc.asn1.RainbowPublicKey getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyFactorySpi:java.security.PublicKey generatePublic(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)"
        ]
    },
    "org.bouncycastle.asn1.cms.AttributeTable:void <init>(org.bouncycastle.asn1.cms.Attributes)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cms.Attributes:org.bouncycastle.asn1.cms.Attributes getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.MetaData:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.cms.EncryptedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.EncryptedData:org.bouncycastle.asn1.cms.EncryptedData getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.cms.EnvelopedData:void <init>(org.bouncycastle.asn1.cms.OriginatorInfo,org.bouncycastle.asn1.ASN1Set,org.bouncycastle.asn1.cms.EncryptedContentInfo,org.bouncycastle.asn1.cms.Attributes)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cms.EnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.EnvelopedData:org.bouncycastle.asn1.cms.EnvelopedData getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.cms.SignerInfo:void <init>(org.bouncycastle.asn1.cms.SignerIdentifier,org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.cms.Attributes,org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1OctetString,org.bouncycastle.asn1.cms.Attributes)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.icao.CscaMasterList:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.icao.CscaMasterList:org.bouncycastle.asn1.icao.CscaMasterList getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x500.RDN:org.bouncycastle.asn1.x500.RDN getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x500.X500Name:void <init>(org.bouncycastle.asn1.x500.X500NameStyle,org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.x509.Attribute:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.Attribute:org.bouncycastle.asn1.x509.Attribute getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.cmp.CertifiedKeyPair:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.CertifiedKeyPair:org.bouncycastle.asn1.'cmp'.CertifiedKeyPair getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.cms.Evidence:org.bouncycastle.asn1.cms.Evidence getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.TimeStampedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()"
        ]
    },
    "org.bouncycastle.asn1.cms.SCVPReqRes:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.SCVPReqRes:org.bouncycastle.asn1.cms.SCVPReqRes getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.cms.SignedData:org.bouncycastle.asn1.ASN1Integer calculateVersion(org.bouncycastle.asn1.ASN1ObjectIdentifier,org.bouncycastle.asn1.ASN1Set,org.bouncycastle.asn1.ASN1Set,org.bouncycastle.asn1.ASN1Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.SignedData:void <init>(org.bouncycastle.asn1.ASN1Set,org.bouncycastle.asn1.cms.ContentInfo,org.bouncycastle.asn1.ASN1Set,org.bouncycastle.asn1.ASN1Set,org.bouncycastle.asn1.ASN1Set)"
        ]
    },
    "org.bouncycastle.asn1.crmf.POPOPrivKey:org.bouncycastle.asn1.crmf.POPOPrivKey getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.crmf.POPOPrivKey:org.bouncycastle.asn1.crmf.POPOPrivKey getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)"
        ]
    },
    "org.bouncycastle.asn1.dvcs.DVCSCertInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.dvcs.DVCSCertInfo:org.bouncycastle.asn1.dvcs.DVCSCertInfo getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.dvcs.DVCSRequestInformation:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.dvcs.DVCSRequestInformation:org.bouncycastle.asn1.dvcs.DVCSRequestInformation getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.eac.UnsignedInteger:org.bouncycastle.asn1.eac.UnsignedInteger getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.eac.ECDSAPublicKey:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.eac.RSAPublicKey:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.esf.SignerAttribute:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.esf.SignerAttribute:org.bouncycastle.asn1.esf.SignerAttribute getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.isismtt.x509.ProcurationSyntax:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.isismtt.x509.ProcurationSyntax:org.bouncycastle.asn1.isismtt.x509.ProcurationSyntax getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.pkcs.EncryptedData:org.bouncycastle.asn1.ASN1OctetString getContent()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])"
        ]
    },
    "org.bouncycastle.asn1.x509.AuthorityKeyIdentifier:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.AuthorityKeyIdentifier:org.bouncycastle.asn1.x509.AuthorityKeyIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure:void <init>(byte[])",
            "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure:void <init>(org.bouncycastle.asn1.x509.X509Extension)",
            "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure:void <init>(org.bouncycastle.asn1.x509.Extension)",
            "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure:void <init>(java.security.cert.X509Certificate)",
            "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure:void <init>(java.security.PublicKey)"
        ]
    },
    "org.bouncycastle.asn1.x509.CertificatePair:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.CertificatePair:org.bouncycastle.asn1.x509.CertificatePair getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x509.DistributionPoint:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.DistributionPoint:org.bouncycastle.asn1.x509.DistributionPoint getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x509.GeneralSubtree:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.GeneralSubtree:org.bouncycastle.asn1.x509.GeneralSubtree getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.x509.GeneralSubtree:org.bouncycastle.asn1.x509.GeneralSubtree getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x509.Holder:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.Holder:org.bouncycastle.asn1.x509.Holder getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x509.IssuingDistributionPoint:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.IssuingDistributionPoint:org.bouncycastle.asn1.x509.IssuingDistributionPoint getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x509.NameConstraints:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.NameConstraints:org.bouncycastle.asn1.x509.NameConstraints getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x509.PolicyConstraints:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.PolicyConstraints:org.bouncycastle.asn1.x509.PolicyConstraints getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x509.RoleSyntax:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.RoleSyntax:org.bouncycastle.asn1.x509.RoleSyntax getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x509.V2Form:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.V2Form:org.bouncycastle.asn1.x509.V2Form getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x509.sigi.PersonalData:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.sigi.PersonalData:org.bouncycastle.asn1.x509.sigi.PersonalData getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.eac.CVCertificate:org.bouncycastle.asn1.eac.CVCertificate getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.eac.CVCertificateRequest:org.bouncycastle.asn1.eac.CVCertificateRequest getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.eac.CertificateBody:org.bouncycastle.asn1.eac.CertificateBody getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.eac.CVCertificate:void setPrivateData(org.bouncycastle.asn1.DERApplicationSpecific)",
            "org.bouncycastle.asn1.eac.CVCertificateRequest:void initCertBody(org.bouncycastle.asn1.DERApplicationSpecific)"
        ]
    },
    "org.bouncycastle.asn1.DEREnumerated:org.bouncycastle.asn1.ASN1Enumerated getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.dvcs.ServiceType:org.bouncycastle.asn1.dvcs.ServiceType getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.ocsp.RevokedInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.dvcs.ServiceType:org.bouncycastle.asn1.dvcs.ServiceType getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.dvcs.DVCSRequestInformation:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.dvcs.ServiceType:org.bouncycastle.asn1.dvcs.ServiceType getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)"
        ]
    },
    "org.bouncycastle.asn1.ocsp.OCSPResponseStatus:org.bouncycastle.asn1.ocsp.OCSPResponseStatus getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ocsp.OCSPResponse:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.x509.CRLReason:org.bouncycastle.asn1.x509.CRLReason getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ocsp.RevokedInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLEntryObject:java.lang.String toString()",
            "org.bouncycastle.jce.provider.X509CRLEntryObject:java.lang.String toString()"
        ]
    },
    "org.bouncycastle.asn1.x509.ObjectDigestInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.ObjectDigestInfo:org.bouncycastle.asn1.x509.ObjectDigestInfo getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCertStatus(java.util.Date,java.security.cert.X509CRL,java.lang.Object,org.bouncycastle.jce.provider.CertStatus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLI(java.util.Date,java.security.cert.X509CRL,java.lang.Object,org.bouncycastle.jce.provider.CertStatus,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLJ(java.util.Date,java.security.cert.X509CRL,java.lang.Object,org.bouncycastle.jce.provider.CertStatus)"
        ]
    },
    "org.bouncycastle.asn1.DERGeneralString:org.bouncycastle.asn1.DERGeneralString getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.DERGeneralizedTime:org.bouncycastle.asn1.ASN1GeneralizedTime getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.PKIHeader:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.isismtt.x509.DeclarationOfMajority:org.bouncycastle.asn1.ASN1GeneralizedTime getDateOfBirth()",
            "org.bouncycastle.asn1.ocsp.CrlID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ocsp.SingleResponse:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.PrivateKeyUsagePeriod:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.sigi.PersonalData:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.cmp.PKIHeaderBuilder:org.bouncycastle.asn1.'cmp'.PKIHeaderBuilder setMessageTime(org.bouncycastle.asn1.DERGeneralizedTime)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cmp.RevAnnContent:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.RevAnnContent:org.bouncycastle.asn1.'cmp'.RevAnnContent getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.dvcs.DVCSTime:org.bouncycastle.asn1.dvcs.DVCSTime getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.dvcs.DVCSCertInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.dvcs.DVCSRequestInformation:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.dvcs.DVCSTime:org.bouncycastle.asn1.dvcs.DVCSTime getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)"
        ]
    },
    "org.bouncycastle.asn1.ocsp.ResponseData:void <init>(org.bouncycastle.asn1.ocsp.ResponderID,org.bouncycastle.asn1.DERGeneralizedTime,org.bouncycastle.asn1.ASN1Sequence,org.bouncycastle.asn1.x509.X509Extensions)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.ocsp.BasicOCSPRespGenerator:org.bouncycastle.ocsp.BasicOCSPResp generateResponse(java.lang.String,java.security.PrivateKey,java.security.cert.X509Certificate[],java.util.Date,java.lang.String,java.security.SecureRandom)"
        ]
    },
    "org.bouncycastle.asn1.ocsp.ResponseData:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ocsp.ResponseData:org.bouncycastle.asn1.ocsp.ResponseData getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.ocsp.RevokedInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ocsp.RevokedInfo:org.bouncycastle.asn1.ocsp.RevokedInfo getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.ocsp.SingleResponse:void <init>(org.bouncycastle.asn1.ocsp.CertID,org.bouncycastle.asn1.ocsp.CertStatus,org.bouncycastle.asn1.DERGeneralizedTime,org.bouncycastle.asn1.DERGeneralizedTime,org.bouncycastle.asn1.x509.Extensions)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ocsp.SingleResponse:void <init>(org.bouncycastle.asn1.ocsp.CertID,org.bouncycastle.asn1.ocsp.CertStatus,org.bouncycastle.asn1.DERGeneralizedTime,org.bouncycastle.asn1.DERGeneralizedTime,org.bouncycastle.asn1.x509.X509Extensions)"
        ]
    },
    "org.bouncycastle.asn1.ocsp.SingleResponse:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ocsp.SingleResponse:org.bouncycastle.asn1.ocsp.SingleResponse getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.tsp.TSTInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.tsp.TSTInfo:org.bouncycastle.asn1.tsp.TSTInfo getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x509.AttCertValidityPeriod:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.AttCertValidityPeriod:org.bouncycastle.asn1.x509.AttCertValidityPeriod getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.DERIA5String:org.bouncycastle.asn1.DERIA5String getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ocsp.CrlID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.GeneralName:org.bouncycastle.asn1.x509.GeneralName getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.cms.MetaData:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.MetaData:org.bouncycastle.asn1.cms.MetaData getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.esf.SPuri:org.bouncycastle.asn1.esf.SPuri getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.isismtt.x509.NamingAuthority:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.isismtt.x509.NamingAuthority:org.bouncycastle.asn1.isismtt.x509.NamingAuthority getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.mozilla.PublicKeyAndChallenge:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.mozilla.PublicKeyAndChallenge:org.bouncycastle.asn1.mozilla.PublicKeyAndChallenge getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void addAdditionalStoresFromCRLDistributionPoint(org.bouncycastle.asn1.x509.CRLDistPoint,org.bouncycastle.x509.ExtendedPKIXParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:java.util.Set processCRLA1i(java.util.Date,org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.X509Certificate,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void checkCRLs(org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,java.util.List)",
            "org.bouncycastle.jce.provider.RFC3281CertPathUtilities:void checkCRLs(org.bouncycastle.x509.X509AttributeCertificate,org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.util.List)"
        ]
    },
    "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.lang.String extractNameAsString(org.bouncycastle.asn1.x509.GeneralName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectEmail(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDNS(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectURI(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)"
        ]
    },
    "org.bouncycastle.asn1.cmp.ErrorMsgContent:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.ErrorMsgContent:org.bouncycastle.asn1.'cmp'.ErrorMsgContent getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.cmp.PKIHeader:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.PKIHeader:org.bouncycastle.asn1.'cmp'.PKIHeader getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.cmp.PKIStatus:org.bouncycastle.asn1.'cmp'.PKIStatus getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.RevAnnContent:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.cmp.PKIStatusInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.PKIStatusInfo:org.bouncycastle.asn1.'cmp'.PKIStatusInfo getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.cmp.PKIStatusInfo:void <init>(org.bouncycastle.asn1.'cmp'.PKIStatus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cmp.PKIStatusInfo:void <init>(org.bouncycastle.asn1.'cmp'.PKIStatus,org.bouncycastle.asn1.'cmp'.PKIFreeText)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cmp.PKIStatusInfo:void <init>(org.bouncycastle.asn1.'cmp'.PKIStatus,org.bouncycastle.asn1.'cmp'.PKIFreeText,org.bouncycastle.asn1.'cmp'.PKIFailureInfo)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cmp.POPODecKeyRespContent:org.bouncycastle.asn1.ASN1Integer[] toASN1IntegerArray()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cmp.PollReqContent:org.bouncycastle.asn1.ASN1Integer[] sequenceToASN1IntegerArray(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.PollReqContent:org.bouncycastle.asn1.ASN1Integer[][] getCertReqIds()"
        ]
    },
    "org.bouncycastle.asn1.cms.SignedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.SignedData:org.bouncycastle.asn1.cms.SignedData getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.crmf.CertId:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.crmf.CertId:org.bouncycastle.asn1.crmf.CertId getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.crmf.CertRequest:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.crmf.CertRequest:org.bouncycastle.asn1.crmf.CertRequest getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.crmf.SinglePubInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.crmf.SinglePubInfo:org.bouncycastle.asn1.crmf.SinglePubInfo getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.esf.CrlIdentifier:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.esf.CrlIdentifier:org.bouncycastle.asn1.esf.CrlIdentifier getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.isismtt.x509.MonetaryLimit:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.isismtt.x509.MonetaryLimit:org.bouncycastle.asn1.isismtt.x509.MonetaryLimit getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.pkcs.DHParameter:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.pkcs.DHParameter:org.bouncycastle.asn1.pkcs.DHParameter getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.pkcs.PBKDF2Params:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.pkcs.PBKDF2Params:org.bouncycastle.asn1.pkcs.PBKDF2Params getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.pkcs.PKCS12PBEParams:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.pkcs.PKCS12PBEParams:org.bouncycastle.asn1.pkcs.PKCS12PBEParams getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.pkcs.RSAPublicKey:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.pkcs.RSAPublicKey:org.bouncycastle.asn1.pkcs.RSAPublicKey getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.tsp.TimeStampReq:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.tsp.TimeStampReq:org.bouncycastle.asn1.tsp.TimeStampReq getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x509.BasicConstraints:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.BasicConstraints:org.bouncycastle.asn1.x509.BasicConstraints getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x509.CRLNumber:org.bouncycastle.asn1.x509.CRLNumber getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.DSAParameter:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.DSAParameter:org.bouncycastle.asn1.x509.DSAParameter getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x509.IssuerSerial:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.IssuerSerial:org.bouncycastle.asn1.x509.IssuerSerial getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x509.NoticeReference:org.bouncycastle.asn1.ASN1Integer[] getNoticeNumbers()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.RSAPublicKeyStructure:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.RSAPublicKeyStructure:org.bouncycastle.asn1.x509.RSAPublicKeyStructure getInstance(java.lang.Object)",
            "org.bouncycastle.jce.provider.JCERSAPublicKey:void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)"
        ]
    },
    "org.bouncycastle.asn1.x509.TBSCertList$CRLEntry:org.bouncycastle.asn1.ASN1Integer getUserCertificate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLEntryObject:java.math.BigInteger getSerialNumber()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:java.security.cert.X509CRLEntry getRevokedCertificate(java.math.BigInteger)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:boolean isRevoked(java.security.cert.Certificate)",
            "org.bouncycastle.jce.provider.X509CRLEntryObject:java.math.BigInteger getSerialNumber()",
            "org.bouncycastle.jce.provider.X509CRLObject:java.security.cert.X509CRLEntry getRevokedCertificate(java.math.BigInteger)",
            "org.bouncycastle.jce.provider.X509CRLObject:boolean isRevoked(java.security.cert.Certificate)"
        ]
    },
    "org.bouncycastle.asn1.x509.TBSCertificate:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.TBSCertificate:org.bouncycastle.asn1.x509.TBSCertificate getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x509.TBSCertificateStructure:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.TBSCertificateStructure:org.bouncycastle.asn1.x509.TBSCertificateStructure getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.qualified.MonetaryValue:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.x509.qualified.MonetaryValue:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.qualified.MonetaryValue:org.bouncycastle.asn1.x509.qualified.MonetaryValue getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.qualified.BiometricData:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.x9.DHValidationParms:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.DHValidationParms:org.bouncycastle.asn1.x9.DHValidationParms getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey:boolean isPKCSParam(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey:void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey:void <init>(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey:void readObject(java.io.ObjectInputStream)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey:void <init>(java.lang.String,org.bouncycastle.asn1.pkcs.PrivateKeyInfo,org.bouncycastle.jcajce.provider.config.ProviderConfiguration)",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey:void readObject(java.io.ObjectInputStream)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.elgamal.BCElGamalPrivateKey:void <init>(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.elgamal.KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)"
        ]
    },
    "org.bouncycastle.jce.provider.CertPathValidatorUtilities:java.util.Set getDeltaCRLs(java.util.Date,org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.X509CRL)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:java.util.Set processCRLA1i(java.util.Date,org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.X509Certificate,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:java.util.Set[] processCRLA1ii(java.util.Date,org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.X509Certificate,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void checkCRL(org.bouncycastle.asn1.x509.DistributionPoint,org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,org.bouncycastle.jce.provider.CertStatus,org.bouncycastle.jce.provider.ReasonsMask,java.util.List)",
            "org.bouncycastle.jce.provider.RFC3281CertPathUtilities:void checkCRL(org.bouncycastle.asn1.x509.DistributionPoint,org.bouncycastle.x509.X509AttributeCertificate,org.bouncycastle.x509.ExtendedPKIXParameters,java.util.Date,java.security.cert.X509Certificate,org.bouncycastle.jce.provider.CertStatus,org.bouncycastle.jce.provider.ReasonsMask,java.util.List)"
        ]
    },
    "org.bouncycastle.jce.provider.JCEDHPublicKey:boolean isPKCSParam(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.JCEDHPublicKey:void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)"
        ]
    },
    "org.bouncycastle.jce.provider.JCEECPrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.JCEECPrivateKey:void <init>(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jce.provider.JCEECPrivateKey:void readObject(java.io.ObjectInputStream)"
        ]
    },
    "org.bouncycastle.jce.provider.JCEElGamalPrivateKey:void <init>(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.provider.JDKDSAPrivateKey:void <init>(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:int prepareNextCertJ(java.security.cert.CertPath,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi:java.security.cert.CertPathValidatorResult engineValidate(java.security.cert.CertPath,java.security.cert.CertPathParameters)"
        ]
    },
    "org.bouncycastle.pqc.asn1.RainbowPrivateKey:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.asn1.RainbowPrivateKey:org.bouncycastle.pqc.asn1.RainbowPrivateKey getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.x509.X509CRLStoreSelector:boolean match(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi:java.security.cert.CertPathValidatorResult engineValidate(java.security.cert.CertPath,java.security.cert.CertPathParameters)",
            "org.bouncycastle.util.CollectionStore:java.util.Collection getMatches(org.bouncycastle.util.Selector)",
            "org.bouncycastle.x509.X509CRLStoreSelector:boolean match(java.security.cert.CRL)",
            "org.bouncycastle.x509.util.LDAPStoreHelper:java.util.Set createCRLs(java.util.List,org.bouncycastle.x509.X509CRLStoreSelector)"
        ]
    },
    "org.bouncycastle.asn1.cmp.InfoTypeAndValue:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.InfoTypeAndValue:org.bouncycastle.asn1.'cmp'.InfoTypeAndValue getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.cms.OtherRecipientInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.OtherRecipientInfo:org.bouncycastle.asn1.cms.OtherRecipientInfo getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.cms.OtherRevocationInfoFormat:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.OtherRevocationInfoFormat:org.bouncycastle.asn1.cms.OtherRevocationInfoFormat getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.eac.ECDSAPublicKey:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.eac.PublicKeyDataObject:org.bouncycastle.asn1.eac.PublicKeyDataObject getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.eac.RSAPublicKey:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.eac.PublicKeyDataObject:org.bouncycastle.asn1.eac.PublicKeyDataObject getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.esf.SigPolicyQualifierInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.esf.SigPolicyQualifierInfo:org.bouncycastle.asn1.esf.SigPolicyQualifierInfo getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.esf.SignaturePolicyId:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.esf.SignaturePolicyId:org.bouncycastle.asn1.esf.SignaturePolicyId getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.isismtt.x509.ProfessionInfo:org.bouncycastle.asn1.ASN1ObjectIdentifier[] getProfessionOIDs()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.pkcs.EncryptedData:org.bouncycastle.asn1.ASN1ObjectIdentifier getContentType()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.AccessDescription:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.AccessDescription:org.bouncycastle.asn1.x509.AccessDescription getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x509.AlgorithmIdentifier:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.pkcs.PBES2Algorithms:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.AlgorithmIdentifier:org.bouncycastle.asn1.x509.AlgorithmIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.jce.netscape.NetscapeCertRequest:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.x509.CertPolicyId:org.bouncycastle.asn1.x509.CertPolicyId getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.KeyPurposeId:org.bouncycastle.asn1.x509.KeyPurposeId getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(java.util.Vector)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:org.bouncycastle.asn1.x509.KeyPurposeId[] getUsages()"
        ]
    },
    "org.bouncycastle.asn1.x509.PolicyQualifierInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.PolicyQualifierInfo:org.bouncycastle.asn1.x509.PolicyQualifierInfo getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x509.X509Extensions:void <init>(java.util.Vector,java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.X509Extensions:void <init>(java.util.Hashtable)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:org.bouncycastle.asn1.x509.X509Extensions generate()"
        ]
    },
    "org.bouncycastle.asn1.x509.qualified.QCStatement:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.qualified.QCStatement:org.bouncycastle.asn1.x509.qualified.QCStatement getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.icao.LDSVersionInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.icao.LDSVersionInfo:org.bouncycastle.asn1.icao.LDSVersionInfo getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.DERUTCTime:org.bouncycastle.asn1.ASN1UTCTime getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.DERUniversalString:org.bouncycastle.asn1.DERUniversalString getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.dvcs.DVCSResponse:org.bouncycastle.asn1.dvcs.DVCSResponse getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPrivateKey:void <init>(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.rsa.BCRSAPrivateCrtKey:void <init>(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)"
        ]
    },
    "org.bouncycastle.jce.provider.JCERSAPrivateCrtKey:void <init>(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.BouncyCastleProvider:java.security.PrivateKey getPrivateKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.BouncyCastlePQCProvider:java.security.PrivateKey getPrivateKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyFactorySpi:java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec)"
        ]
    },
    "org.bouncycastle.asn1.x509.Extension:org.bouncycastle.asn1.ASN1Encodable getParsedValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.Extensions:org.bouncycastle.asn1.ASN1Encodable getExtensionParsedValue(org.bouncycastle.asn1.ASN1ObjectIdentifier)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLEntryObject:org.bouncycastle.asn1.x500.X500Name loadCertificateIssuer(boolean,org.bouncycastle.asn1.x500.X500Name)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:java.util.Set loadCRLEntries()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:java.security.cert.X509CRLEntry getRevokedCertificate(java.math.BigInteger)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:boolean isRevoked(java.security.cert.Certificate)",
            "org.bouncycastle.jce.provider.X509CRLEntryObject:org.bouncycastle.asn1.x500.X500Name loadCertificateIssuer(boolean,org.bouncycastle.asn1.x500.X500Name)",
            "org.bouncycastle.jce.provider.X509CRLObject:java.util.Set loadCRLEntries()",
            "org.bouncycastle.jce.provider.X509CRLObject:java.security.cert.X509CRLEntry getRevokedCertificate(java.math.BigInteger)",
            "org.bouncycastle.jce.provider.X509CRLObject:boolean isRevoked(java.security.cert.Certificate)",
            "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure:void <init>(org.bouncycastle.asn1.x509.Extension)"
        ]
    },
    "org.bouncycastle.asn1.crmf.EncKeyWithID:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.crmf.EncKeyWithID:org.bouncycastle.asn1.crmf.EncKeyWithID getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.crmf.POPOSigningKeyInput:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.crmf.POPOSigningKeyInput:org.bouncycastle.asn1.crmf.POPOSigningKeyInput getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.dvcs.DVCSErrorNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.dvcs.DVCSErrorNotice:org.bouncycastle.asn1.dvcs.DVCSErrorNotice getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.dvcs.DVCSRequest:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.dvcs.DVCSRequest:org.bouncycastle.asn1.dvcs.DVCSRequest getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x509.GeneralName:org.bouncycastle.asn1.x509.GeneralName getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.isismtt.x509.Admissions:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ocsp.TBSRequest:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.tsp.TSTInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.RoleSyntax:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.Target:void <init>(org.bouncycastle.asn1.ASN1TaggedObject)"
        ]
    },
    "org.bouncycastle.asn1.x509.GeneralNames:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.GeneralNames:org.bouncycastle.asn1.x509.GeneralNames getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.ocsp.OCSPReq:org.bouncycastle.asn1.x509.GeneralName getRequestorName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.X509Extension:org.bouncycastle.asn1.ASN1Encodable getParsedValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure:void <init>(org.bouncycastle.asn1.x509.X509Extension)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dsa.AlgorithmParametersSpi:void engineInit(byte[],java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey:void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPrivateKeyParameters,org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey,java.security.spec.ECParameterSpec)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.KeyPairGeneratorSpi:java.security.KeyPair generateKeyPair()"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey:void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPrivateKeyParameters,org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey,org.bouncycastle.jce.spec.ECParameterSpec)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.KeyPairGeneratorSpi:java.security.KeyPair generateKeyPair()"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey:void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.KeyFactorySpi:java.security.PublicKey generatePublic(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey:void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPrivateKeyParameters,org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey,java.security.spec.ECParameterSpec,org.bouncycastle.jcajce.provider.config.ProviderConfiguration)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC:java.security.KeyPair generateKeyPair()"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey:void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPrivateKeyParameters,org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey,org.bouncycastle.jce.spec.ECParameterSpec,org.bouncycastle.jcajce.provider.config.ProviderConfiguration)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC:java.security.KeyPair generateKeyPair()"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey:void <init>(java.lang.String,org.bouncycastle.asn1.x509.SubjectPublicKeyInfo,org.bouncycastle.jcajce.provider.config.ProviderConfiguration)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi:java.security.PublicKey generatePublic(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPrivateKeyParameters,org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey,java.security.spec.ECParameterSpec)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.KeyPairGeneratorSpi:java.security.KeyPair generateKeyPair()"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPrivateKeyParameters,org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey,org.bouncycastle.jce.spec.ECParameterSpec)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.KeyPairGeneratorSpi:java.security.KeyPair generateKeyPair()"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey:void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.KeyFactorySpi:java.security.PublicKey generatePublic(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.elgamal.AlgorithmParametersSpi:void engineInit(byte[],java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.gost.AlgorithmParametersSpi:void engineInit(byte[],java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ies.AlgorithmParametersSpi:void engineInit(byte[],java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.Certificate getCertificate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.Certificate readDERCertificate(org.bouncycastle.asn1.ASN1InputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.Certificate engineGenerateCertificate(java.io.InputStream)"
        ]
    },
    "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:org.bouncycastle.asn1.x509.SubjectKeyIdentifier access$100(org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi,java.security.PublicKey)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$CertId:void <init>(org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi,java.security.PublicKey)"
        ]
    },
    "org.bouncycastle.jcajce.provider.symmetric.PBEPBKDF2$AlgParams:void engineInit(byte[],java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.symmetric.PBEPKCS12$AlgParams:void engineInit(byte[],java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.ECKeyUtil:java.security.PublicKey publicToExplicitParameters(java.security.PublicKey,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.ECKeyUtil:java.security.PrivateKey privateToExplicitParameters(java.security.PrivateKey,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.PKCS10CertificationRequest:void <init>(java.lang.String,org.bouncycastle.asn1.x509.X509Name,java.security.PublicKey,org.bouncycastle.asn1.ASN1Set,java.security.PrivateKey)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.PKCS10CertificationRequest:void <init>(java.lang.String,javax.security.auth.x500.X500Principal,java.security.PublicKey,org.bouncycastle.asn1.ASN1Set,java.security.PrivateKey)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.PKCS10CertificationRequest:void <init>(java.lang.String,javax.security.auth.x500.X500Principal,java.security.PublicKey,org.bouncycastle.asn1.ASN1Set,java.security.PrivateKey,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.AttributeCertificateHolder:void <init>(java.security.cert.X509Certificate)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.examples.AttrCertExample:void main(java.lang.String[])"
        ]
    },
    "org.bouncycastle.jce.provider.JCEECPrivateKey:void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPrivateKeyParameters,org.bouncycastle.jce.provider.JCEECPublicKey,java.security.spec.ECParameterSpec)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.provider.JCEECPrivateKey:void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPrivateKeyParameters,org.bouncycastle.jce.provider.JCEECPublicKey,org.bouncycastle.jce.spec.ECParameterSpec)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.provider.JCEECPublicKey:void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.provider.X509CertParser:java.security.cert.Certificate getCertificate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.X509CertParser:java.security.cert.Certificate readDERCertificate(java.io.InputStream)",
            "org.bouncycastle.jce.provider.X509CertParser:java.lang.Object engineRead()"
        ]
    },
    "org.bouncycastle.x509.X509CertificatePair:void <init>(org.bouncycastle.asn1.x509.CertificatePair)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.X509CertPairParser:org.bouncycastle.x509.X509CertificatePair readDERCrossCertificatePair(java.io.InputStream)",
            "org.bouncycastle.x509.util.LDAPStoreHelper:java.util.Set createCrossCertificatePairs(java.util.List,org.bouncycastle.x509.X509CertPairStoreSelector)"
        ]
    },
    "org.bouncycastle.x509.X509V1CertificateGenerator:java.security.cert.X509Certificate generateJcaObject(org.bouncycastle.asn1.x509.TBSCertificate,byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.X509V1CertificateGenerator:java.security.cert.X509Certificate generate(java.security.PrivateKey,java.security.SecureRandom)",
            "org.bouncycastle.x509.X509V1CertificateGenerator:java.security.cert.X509Certificate generate(java.security.PrivateKey,java.lang.String,java.security.SecureRandom)"
        ]
    },
    "org.bouncycastle.x509.X509V3CertificateGenerator:java.security.cert.X509Certificate generateJcaObject(org.bouncycastle.asn1.x509.TBSCertificate,byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.X509V3CertificateGenerator:java.security.cert.X509Certificate generate(java.security.PrivateKey,java.security.SecureRandom)",
            "org.bouncycastle.x509.X509V3CertificateGenerator:java.security.cert.X509Certificate generate(java.security.PrivateKey,java.lang.String,java.security.SecureRandom)"
        ]
    },
    "org.bouncycastle.ocsp.BasicOCSPRespGenerator:org.bouncycastle.ocsp.BasicOCSPResp generate(java.lang.String,java.security.PrivateKey,java.security.cert.X509Certificate[],java.util.Date,java.lang.String,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.ocsp.BasicOCSPRespGenerator:org.bouncycastle.ocsp.BasicOCSPResp generate(java.lang.String,java.security.PrivateKey,java.security.cert.X509Certificate[],java.util.Date,java.lang.String)"
        ]
    },
    "org.bouncycastle.x509.X509AttributeCertStoreSelector:void setTargetNames(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.X509AttributeCertStoreSelector:void setTargetGroups(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.X509V3CertificateGenerator:void copyAndAddExtension(java.lang.String,boolean,java.security.cert.X509Certificate)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.X509V3CertificateGenerator:void copyAndAddExtension(org.bouncycastle.asn1.DERObjectIdentifier,boolean,java.security.cert.X509Certificate)"
        ]
    },
    "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure:void <init>(byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.extension.SubjectKeyIdentifierStructure:void <init>(byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.LazyEncodedSequence:void parse()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.LazyEncodedSequence:org.bouncycastle.asn1.ASN1Encodable getObjectAt(int)",
            "org.bouncycastle.asn1.LazyEncodedSequence:int size()",
            "org.bouncycastle.asn1.LazyEncodedSequence:org.bouncycastle.asn1.ASN1Primitive toDERObject()",
            "org.bouncycastle.asn1.LazyEncodedSequence:org.bouncycastle.asn1.ASN1Primitive toDLObject()"
        ]
    },
    "org.bouncycastle.asn1.LazyEncodedSequence:java.util.Enumeration getObjects()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Sequence:int hashCode()",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.BERConstructedOctetString:org.bouncycastle.asn1.BEROctetString fromSequence(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.BEROctetString:org.bouncycastle.asn1.BEROctetString fromSequence(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.BERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cmp.ErrorMsgContent:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.KeyRecRepContent:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.PKIFreeText:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.PKIHeader:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.PKIMessage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.RevRepContent:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.SignedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.SignerInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.TimeStampTokenEvidence:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.crmf.CertReqMsg:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.crmf.CertTemplate:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.crmf.OptionalValidity:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cryptopro.ECGOST3410ParamSetParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cryptopro.GOST28147Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cryptopro.GOST3410ParamSetParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.eac.CVCertificateRequest:void initCertBody(org.bouncycastle.asn1.DERApplicationSpecific)",
            "org.bouncycastle.asn1.eac.ECDSAPublicKey:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.eac.RSAPublicKey:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.CompleteRevocationRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.CrlListID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.CrlOcspRef:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OcspListID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.RevocationValues:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.SPUserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.SignerAttribute:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.SignerLocation:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.icao.DataGroupHash:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.icao.LDSSecurityObject:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.isismtt.x509.AdmissionSyntax:org.bouncycastle.asn1.isismtt.x509.Admissions[] getContentsOfAdmissions()",
            "org.bouncycastle.asn1.isismtt.x509.Admissions:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.isismtt.x509.Admissions:org.bouncycastle.asn1.isismtt.x509.ProfessionInfo[] getProfessionInfos()",
            "org.bouncycastle.asn1.isismtt.x509.MonetaryLimit:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.isismtt.x509.NamingAuthority:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.isismtt.x509.ProcurationSyntax:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.isismtt.x509.ProfessionInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.isismtt.x509.ProfessionInfo:org.bouncycastle.asn1.x500.DirectoryString[] getProfessionItems()",
            "org.bouncycastle.asn1.isismtt.x509.ProfessionInfo:org.bouncycastle.asn1.ASN1ObjectIdentifier[] getProfessionOIDs()",
            "org.bouncycastle.asn1.ocsp.CrlID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.oiw.ElGamalParameter:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.ContentInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.DHParameter:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.EncryptedPrivateKeyInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PBES2Algorithms:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PBKDF2Params:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.RSAPrivateKey:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.RSAPublicKey:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.SignedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.SignerInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.sec.ECPrivateKey:org.bouncycastle.asn1.ASN1Primitive getObjectInTag(int)",
            "org.bouncycastle.asn1.sec.ECPrivateKeyStructure:org.bouncycastle.asn1.ASN1Primitive getObjectInTag(int)",
            "org.bouncycastle.asn1.smime.SMIMECapabilities:java.util.Vector getCapabilities(org.bouncycastle.asn1.ASN1ObjectIdentifier)",
            "org.bouncycastle.asn1.tsp.TSTInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.tsp.TimeStampResp:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String outputApplicationSpecific(java.lang.String,java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.String)",
            "org.bouncycastle.asn1.x500.X500Name:void <init>(org.bouncycastle.asn1.x500.X500NameStyle,org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.AuthorityKeyIdentifier:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.CertificatePair:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.DSAParameter:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.DigestInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:org.bouncycastle.asn1.x509.KeyPurposeId[] getUsages()",
            "org.bouncycastle.asn1.x509.Extensions:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.IetfAttrSyntax:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.NameConstraints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.PrivateKeyUsagePeriod:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.RSAPublicKeyStructure:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.SubjectDirectoryAttributes:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.SubjectPublicKeyInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.TBSCertList:java.util.Enumeration getRevokedCertificateEnumeration()",
            "org.bouncycastle.asn1.x509.TargetInformation:org.bouncycastle.asn1.x509.Targets[] getTargetsObjects()",
            "org.bouncycastle.asn1.x509.Targets:org.bouncycastle.asn1.x509.Target[] getTargets()",
            "org.bouncycastle.asn1.x509.X509Extensions:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.qualified.BiometricData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.qualified.MonetaryValue:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.qualified.QCStatement:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.qualified.SemanticsInformation:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.sigi.NameOrPseudonym:org.bouncycastle.asn1.x500.DirectoryString[] getGivenName()",
            "org.bouncycastle.asn1.x509.sigi.PersonalData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.KeySpecificInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.OtherInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:java.util.Collection getAlternativeNames(byte[])",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:java.util.Set getQualifierSet(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void prepareNextCertB1(int,java.util.List[],java.lang.String,java.util.Map,java.security.cert.X509Certificate)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:org.bouncycastle.jce.provider.PKIXPolicyNode prepareCertB(java.security.cert.CertPath,int,java.util.List[],org.bouncycastle.jce.provider.PKIXPolicyNode,int)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:org.bouncycastle.jce.provider.PKIXPolicyNode processCertD(java.security.cert.CertPath,int,java.util.Set,org.bouncycastle.jce.provider.PKIXPolicyNode,java.util.List[],int)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:int prepareNextCertI1(java.security.cert.CertPath,int,int)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:int prepareNextCertI2(java.security.cert.CertPath,int,int)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:int wrapupCertB(java.security.cert.CertPath,int,int)",
            "org.bouncycastle.jce.provider.X509CertificateObject:java.util.Collection getAlternativeNames(byte[])",
            "org.bouncycastle.ocsp.BasicOCSPResp:java.util.List getCertList(java.lang.String)",
            "org.bouncycastle.ocsp.OCSPReq:java.util.List getCertList(java.lang.String)",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkPolicy()",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.ASN1EncodableVector:void addAll(org.bouncycastle.asn1.ASN1EncodableVector)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Encodable getNext(java.util.Enumeration)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Sequence:int hashCode()",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)"
        ]
    },
    "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Encodable getNext(java.util.Enumeration)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Set:int hashCode()",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)"
        ]
    },
    "org.bouncycastle.asn1.BERConstructedOctetString:org.bouncycastle.asn1.BEROctetString fromSequence(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.BEROctetString:org.bouncycastle.asn1.BEROctetString fromSequence(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)"
        ]
    },
    "org.bouncycastle.asn1.cmp.PKIFreeText:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.PKIFreeText:org.bouncycastle.asn1.'cmp'.PKIFreeText getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.cmp.PKIMessage:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.PKIMessage:org.bouncycastle.asn1.'cmp'.PKIMessage getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.cms.AttributeTable:org.bouncycastle.asn1.ASN1EncodableVector getAll(org.bouncycastle.asn1.ASN1ObjectIdentifier)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.AttributeTable:org.bouncycastle.asn1.ASN1EncodableVector getAll(org.bouncycastle.asn1.DERObjectIdentifier)"
        ]
    },
    "org.bouncycastle.asn1.cms.AttributeTable:int size()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cms.AttributeTable:org.bouncycastle.asn1.ASN1EncodableVector toASN1EncodableVector()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.AttributeTable:org.bouncycastle.asn1.cms.Attributes toASN1Structure()"
        ]
    },
    "org.bouncycastle.asn1.cms.AttributeTable:java.util.Hashtable copyTable(java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.AttributeTable:void <init>(java.util.Hashtable)",
            "org.bouncycastle.asn1.cms.AttributeTable:java.util.Hashtable toHashtable()"
        ]
    },
    "org.bouncycastle.asn1.cms.AuthenticatedData:int calculateVersion(org.bouncycastle.asn1.cms.OriginatorInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.AuthenticatedData:void <init>(org.bouncycastle.asn1.cms.OriginatorInfo,org.bouncycastle.asn1.ASN1Set,org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.cms.ContentInfo,org.bouncycastle.asn1.ASN1Set,org.bouncycastle.asn1.ASN1OctetString,org.bouncycastle.asn1.ASN1Set)"
        ]
    },
    "org.bouncycastle.asn1.cms.EnvelopedData:int calculateVersion(org.bouncycastle.asn1.cms.OriginatorInfo,org.bouncycastle.asn1.ASN1Set,org.bouncycastle.asn1.ASN1Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.EnvelopedData:void <init>(org.bouncycastle.asn1.cms.OriginatorInfo,org.bouncycastle.asn1.ASN1Set,org.bouncycastle.asn1.cms.EncryptedContentInfo,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.cms.EnvelopedData:void <init>(org.bouncycastle.asn1.cms.OriginatorInfo,org.bouncycastle.asn1.ASN1Set,org.bouncycastle.asn1.cms.EncryptedContentInfo,org.bouncycastle.asn1.cms.Attributes)"
        ]
    },
    "org.bouncycastle.asn1.cms.SignedData:boolean checkForVersion3(org.bouncycastle.asn1.ASN1Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.SignedData:org.bouncycastle.asn1.ASN1Integer calculateVersion(org.bouncycastle.asn1.ASN1ObjectIdentifier,org.bouncycastle.asn1.ASN1Set,org.bouncycastle.asn1.ASN1Set,org.bouncycastle.asn1.ASN1Set)"
        ]
    },
    "org.bouncycastle.asn1.cms.TimeStampTokenEvidence:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.TimeStampTokenEvidence:org.bouncycastle.asn1.cms.TimeStampTokenEvidence getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.crmf.CertTemplate:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.crmf.CertTemplate:org.bouncycastle.asn1.crmf.CertTemplate getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.crmf.OptionalValidity:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.crmf.OptionalValidity:org.bouncycastle.asn1.crmf.OptionalValidity getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.cryptopro.ECGOST3410ParamSetParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cryptopro.ECGOST3410ParamSetParameters:org.bouncycastle.asn1.cryptopro.ECGOST3410ParamSetParameters getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.cryptopro.GOST28147Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cryptopro.GOST28147Parameters:org.bouncycastle.asn1.cryptopro.GOST28147Parameters getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.cryptopro.GOST3410ParamSetParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cryptopro.GOST3410ParamSetParameters:org.bouncycastle.asn1.cryptopro.GOST3410ParamSetParameters getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.eac.Flags:java.lang.String decode(java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.esf.CompleteRevocationRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.esf.CompleteRevocationRefs:org.bouncycastle.asn1.esf.CompleteRevocationRefs getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.esf.CrlListID:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.esf.CrlListID:org.bouncycastle.asn1.esf.CrlListID getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.esf.CrlOcspRef:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.esf.CrlOcspRef:org.bouncycastle.asn1.esf.CrlOcspRef getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.esf.OcspListID:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.esf.OcspListID:org.bouncycastle.asn1.esf.OcspListID getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.esf.RevocationValues:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.esf.RevocationValues:org.bouncycastle.asn1.esf.RevocationValues getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.esf.SPUserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.esf.SPUserNotice:org.bouncycastle.asn1.esf.SPUserNotice getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.isismtt.x509.AdmissionSyntax:org.bouncycastle.asn1.isismtt.x509.Admissions[] getContentsOfAdmissions()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.isismtt.x509.Admissions:org.bouncycastle.asn1.isismtt.x509.ProfessionInfo[] getProfessionInfos()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.isismtt.x509.ProfessionInfo:org.bouncycastle.asn1.x500.DirectoryString[] getProfessionItems()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.ocsp.CrlID:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ocsp.CrlID:org.bouncycastle.asn1.ocsp.CrlID getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.oiw.ElGamalParameter:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.elgamal.AlgorithmParametersSpi:void engineInit(byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.elgamal.BCElGamalPrivateKey:void <init>(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.elgamal.BCElGamalPublicKey:void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jce.provider.JCEElGamalPrivateKey:void <init>(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jce.provider.JCEElGamalPublicKey:void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)"
        ]
    },
    "org.bouncycastle.asn1.pkcs.ContentInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.pkcs.ContentInfo:org.bouncycastle.asn1.pkcs.ContentInfo getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.pkcs.PBES2Algorithms:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.pkcs.RSAPrivateKey:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.pkcs.RSAPrivateKey:org.bouncycastle.asn1.pkcs.RSAPrivateKey getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure:org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.pkcs.SignedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.pkcs.SignedData:org.bouncycastle.asn1.pkcs.SignedData getInstance(java.lang.Object)",
            "org.bouncycastle.jce.provider.X509AttrCertParser:org.bouncycastle.x509.X509AttributeCertificate readDERCertificate(java.io.InputStream)",
            "org.bouncycastle.jce.provider.X509CRLParser:java.security.cert.CRL readDERCRL(java.io.InputStream)",
            "org.bouncycastle.jce.provider.X509CertParser:java.security.cert.Certificate readDERCertificate(java.io.InputStream)"
        ]
    },
    "org.bouncycastle.asn1.sec.ECPrivateKey:org.bouncycastle.asn1.ASN1Primitive getObjectInTag(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.sec.ECPrivateKey:org.bouncycastle.asn1.DERBitString getPublicKey()",
            "org.bouncycastle.asn1.sec.ECPrivateKey:org.bouncycastle.asn1.ASN1Primitive getParameters()"
        ]
    },
    "org.bouncycastle.asn1.sec.ECPrivateKeyStructure:org.bouncycastle.asn1.ASN1Primitive getObjectInTag(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.sec.ECPrivateKeyStructure:org.bouncycastle.asn1.DERBitString getPublicKey()",
            "org.bouncycastle.asn1.sec.ECPrivateKeyStructure:org.bouncycastle.asn1.ASN1Primitive getParameters()"
        ]
    },
    "org.bouncycastle.asn1.smime.SMIMECapabilities:java.util.Vector getCapabilities(org.bouncycastle.asn1.ASN1ObjectIdentifier)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.tsp.TimeStampResp:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.tsp.TimeStampResp:org.bouncycastle.asn1.tsp.TimeStampResp getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x500.X500Name:void <init>(org.bouncycastle.asn1.x500.X500NameStyle,org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x500.X500Name:org.bouncycastle.asn1.x500.X500Name getInstance(org.bouncycastle.asn1.x500.X500NameStyle,java.lang.Object)",
            "org.bouncycastle.asn1.x500.X500Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.x500.style.BCStyle:java.util.Hashtable copyHashTable(java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x500.style.BCStyle:void <init>()"
        ]
    },
    "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String[] findAttrNamesForOID(org.bouncycastle.asn1.ASN1ObjectIdentifier,java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x500.style.BCStyle:java.lang.String[] oidToAttrNames(org.bouncycastle.asn1.ASN1ObjectIdentifier)",
            "org.bouncycastle.asn1.x500.style.RFC4519Style:java.lang.String[] oidToAttrNames(org.bouncycastle.asn1.ASN1ObjectIdentifier)"
        ]
    },
    "org.bouncycastle.asn1.x500.style.RFC4519Style:java.util.Hashtable copyHashTable(java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x500.style.RFC4519Style:void <init>()"
        ]
    },
    "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(java.util.Vector)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.ExtendedKeyUsage:org.bouncycastle.asn1.x509.KeyPurposeId[] getUsages()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.Extensions:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.Extensions:org.bouncycastle.asn1.x509.Extensions getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x509.Extensions:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Extensions:org.bouncycastle.asn1.x509.X509Extensions getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.x509.Extensions:boolean equivalent(org.bouncycastle.asn1.x509.Extensions)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.IetfAttrSyntax:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.IetfAttrSyntax:org.bouncycastle.asn1.x509.IetfAttrSyntax getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x509.IetfAttrSyntax:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.x509.NoticeReference:org.bouncycastle.asn1.ASN1EncodableVector convertVector(java.util.Vector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.NoticeReference:void <init>(java.lang.String,java.util.Vector)"
        ]
    },
    "org.bouncycastle.asn1.x509.PolicyMappings:void <init>(java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.PrivateKeyUsagePeriod:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.PrivateKeyUsagePeriod:org.bouncycastle.asn1.x509.PrivateKeyUsagePeriod getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x509.SubjectDirectoryAttributes:void <init>(java.util.Vector)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.SubjectDirectoryAttributes:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.x509.SubjectPublicKeyInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.SubjectPublicKeyInfo:org.bouncycastle.asn1.x509.SubjectPublicKeyInfo getInstance(java.lang.Object)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:org.bouncycastle.asn1.x509.SubjectKeyIdentifier createSubjectKeyId(java.security.PublicKey)",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void <init>(java.lang.String,org.bouncycastle.asn1.x509.X509Name,java.security.PublicKey,org.bouncycastle.asn1.ASN1Set,java.security.PrivateKey,java.lang.String)",
            "org.bouncycastle.jce.netscape.NetscapeCertRequest:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.x509.X509V1CertificateGenerator:void setPublicKey(java.security.PublicKey)",
            "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure:org.bouncycastle.asn1.ASN1Sequence fromCertificate(java.security.cert.X509Certificate)",
            "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure:org.bouncycastle.asn1.ASN1Sequence fromKey(java.security.PublicKey)"
        ]
    },
    "org.bouncycastle.asn1.x509.TBSCertList$RevokedCertificatesEnumeration:java.lang.Object nextElement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1EncodableVector:void addAll(org.bouncycastle.asn1.ASN1EncodableVector)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Encodable getNext(java.util.Enumeration)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Encodable getNext(java.util.Enumeration)",
            "org.bouncycastle.asn1.BERConstructedOctetString:org.bouncycastle.asn1.BEROctetString fromSequence(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROctetString:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.BEROctetString:org.bouncycastle.asn1.BEROctetString fromSequence(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequence:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERSet:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.BERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequence:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERSet:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSequence:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cmp.ErrorMsgContent:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.KeyRecRepContent:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.PKIFreeText:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.PKIHeader:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.PKIMessage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.RevRepContent:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AttributeTable:org.bouncycastle.asn1.ASN1EncodableVector getAll(org.bouncycastle.asn1.ASN1ObjectIdentifier)",
            "org.bouncycastle.asn1.cms.AttributeTable:int size()",
            "org.bouncycastle.asn1.cms.AttributeTable:org.bouncycastle.asn1.ASN1EncodableVector toASN1EncodableVector()",
            "org.bouncycastle.asn1.cms.AttributeTable:java.util.Hashtable copyTable(java.util.Hashtable)",
            "org.bouncycastle.asn1.cms.AuthenticatedData:int calculateVersion(org.bouncycastle.asn1.cms.OriginatorInfo)",
            "org.bouncycastle.asn1.cms.EnvelopedData:int calculateVersion(org.bouncycastle.asn1.cms.OriginatorInfo,org.bouncycastle.asn1.ASN1Set,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.cms.SignedData:org.bouncycastle.asn1.ASN1Integer calculateVersion(org.bouncycastle.asn1.ASN1ObjectIdentifier,org.bouncycastle.asn1.ASN1Set,org.bouncycastle.asn1.ASN1Set,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.cms.SignedData:boolean checkForVersion3(org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.cms.SignedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.SignerInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.TimeStampTokenEvidence:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.crmf.CertReqMsg:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.crmf.CertTemplate:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.crmf.OptionalValidity:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cryptopro.ECGOST3410ParamSetParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cryptopro.GOST28147Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cryptopro.GOST3410ParamSetParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.eac.CVCertificateRequest:void initCertBody(org.bouncycastle.asn1.DERApplicationSpecific)",
            "org.bouncycastle.asn1.eac.ECDSAPublicKey:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.eac.Flags:java.lang.String decode(java.util.Hashtable)",
            "org.bouncycastle.asn1.eac.RSAPublicKey:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.CompleteRevocationRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.CrlListID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.CrlOcspRef:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OcspListID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.RevocationValues:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.SPUserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.SignerAttribute:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.SignerLocation:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.icao.DataGroupHash:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.icao.LDSSecurityObject:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.isismtt.x509.AdmissionSyntax:org.bouncycastle.asn1.isismtt.x509.Admissions[] getContentsOfAdmissions()",
            "org.bouncycastle.asn1.isismtt.x509.Admissions:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.isismtt.x509.Admissions:org.bouncycastle.asn1.isismtt.x509.ProfessionInfo[] getProfessionInfos()",
            "org.bouncycastle.asn1.isismtt.x509.MonetaryLimit:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.isismtt.x509.NamingAuthority:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.isismtt.x509.ProcurationSyntax:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.isismtt.x509.ProfessionInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.isismtt.x509.ProfessionInfo:org.bouncycastle.asn1.x500.DirectoryString[] getProfessionItems()",
            "org.bouncycastle.asn1.isismtt.x509.ProfessionInfo:org.bouncycastle.asn1.ASN1ObjectIdentifier[] getProfessionOIDs()",
            "org.bouncycastle.asn1.ocsp.CrlID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.oiw.ElGamalParameter:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.ContentInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.DHParameter:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.EncryptedPrivateKeyInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PBES2Algorithms:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PBKDF2Params:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.RSAPrivateKey:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.RSAPublicKey:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.SignedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.SignerInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.sec.ECPrivateKey:org.bouncycastle.asn1.ASN1Primitive getObjectInTag(int)",
            "org.bouncycastle.asn1.sec.ECPrivateKeyStructure:org.bouncycastle.asn1.ASN1Primitive getObjectInTag(int)",
            "org.bouncycastle.asn1.smime.SMIMECapabilities:java.util.Vector getCapabilities(org.bouncycastle.asn1.ASN1ObjectIdentifier)",
            "org.bouncycastle.asn1.tsp.TSTInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.tsp.TimeStampResp:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String outputApplicationSpecific(java.lang.String,java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.String)",
            "org.bouncycastle.asn1.x500.X500Name:void <init>(org.bouncycastle.asn1.x500.X500NameStyle,org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x500.style.BCStyle:java.util.Hashtable copyHashTable(java.util.Hashtable)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String[] findAttrNamesForOID(org.bouncycastle.asn1.ASN1ObjectIdentifier,java.util.Hashtable)",
            "org.bouncycastle.asn1.x500.style.RFC4519Style:java.util.Hashtable copyHashTable(java.util.Hashtable)",
            "org.bouncycastle.asn1.x509.AuthorityKeyIdentifier:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.CertificatePair:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.DSAParameter:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.DigestInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(java.util.Vector)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:org.bouncycastle.asn1.x509.KeyPurposeId[] getUsages()",
            "org.bouncycastle.asn1.x509.Extensions:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.Extensions:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.Extensions:boolean equivalent(org.bouncycastle.asn1.x509.Extensions)",
            "org.bouncycastle.asn1.x509.IetfAttrSyntax:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.IetfAttrSyntax:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.NameConstraints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.NoticeReference:org.bouncycastle.asn1.ASN1EncodableVector convertVector(java.util.Vector)",
            "org.bouncycastle.asn1.x509.PolicyMappings:void <init>(java.util.Hashtable)",
            "org.bouncycastle.asn1.x509.PrivateKeyUsagePeriod:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.RSAPublicKeyStructure:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.SubjectDirectoryAttributes:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.SubjectDirectoryAttributes:void <init>(java.util.Vector)",
            "org.bouncycastle.asn1.x509.SubjectDirectoryAttributes:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.SubjectPublicKeyInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.TBSCertList$RevokedCertificatesEnumeration:java.lang.Object nextElement()",
            "org.bouncycastle.asn1.x509.TargetInformation:org.bouncycastle.asn1.x509.Targets[] getTargetsObjects()",
            "org.bouncycastle.asn1.x509.Targets:org.bouncycastle.asn1.x509.Target[] getTargets()",
            "org.bouncycastle.asn1.x509.X509Extensions:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Extensions:void <init>(java.util.Vector,java.util.Hashtable)",
            "org.bouncycastle.asn1.x509.X509Extensions:void <init>(java.util.Vector,java.util.Vector)",
            "org.bouncycastle.asn1.x509.X509Extensions:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.X509Extensions:boolean equivalent(org.bouncycastle.asn1.x509.X509Extensions)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(java.util.Vector,java.util.Hashtable,org.bouncycastle.asn1.x509.X509NameEntryConverter)",
            "org.bouncycastle.asn1.x509.qualified.BiometricData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.qualified.MonetaryValue:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.qualified.QCStatement:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.qualified.SemanticsInformation:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.sigi.NameOrPseudonym:org.bouncycastle.asn1.x500.DirectoryString[] getGivenName()",
            "org.bouncycastle.asn1.x509.sigi.PersonalData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.DHDomainParameters:org.bouncycastle.asn1.ASN1Encodable getNext(java.util.Enumeration)",
            "org.bouncycastle.asn1.x9.ECNamedCurveTable:void addEnumeration(java.util.Vector,java.util.Enumeration)",
            "org.bouncycastle.asn1.x9.KeySpecificInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.OtherInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.digests.SkeinEngine:void initParams(java.util.Hashtable)",
            "org.bouncycastle.crypto.params.SkeinParameters$Builder:void <init>(java.util.Hashtable)",
            "org.bouncycastle.crypto.params.SkeinParameters$Builder:void <init>(org.bouncycastle.crypto.params.SkeinParameters)",
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:void processServerHello(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,byte[])",
            "org.bouncycastle.crypto.tls.DTLSReliableHandshake:void checkInboundFlight()",
            "org.bouncycastle.crypto.tls.DTLSReliableHandshake:boolean checkAll(java.util.Hashtable)",
            "org.bouncycastle.crypto.tls.DTLSReliableHandshake:void resetAll(java.util.Hashtable)",
            "org.bouncycastle.crypto.tls.DeferredHash:void update(byte)",
            "org.bouncycastle.crypto.tls.DeferredHash:void update(byte[],int,int)",
            "org.bouncycastle.crypto.tls.DeferredHash:void reset()",
            "org.bouncycastle.crypto.tls.DeferredHash:void checkStopBuffering()",
            "org.bouncycastle.crypto.tls.TlsClientProtocol:void receiveServerHelloMessage(java.io.ByteArrayInputStream)",
            "org.bouncycastle.crypto.tls.TlsProtocol:void writeExtensions(java.io.OutputStream,java.util.Hashtable)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.PKCS12BagAttributeCarrierImpl:void writeObject(java.io.ObjectOutputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLEntryObject:java.util.Set getExtensionOIDs(boolean)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLEntryObject:java.lang.String toString()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:java.util.Set getExtensionOIDs(boolean)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:java.util.Set loadCRLEntries()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:java.security.cert.X509CRLEntry getRevokedCertificate(java.math.BigInteger)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:java.lang.String toString()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:boolean isRevoked(java.security.cert.Certificate)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:java.util.Set getCriticalExtensionOIDs()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:java.util.Set getNonCriticalExtensionOIDs()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:boolean hasUnsupportedCriticalExtension()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:java.lang.String toString()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:java.util.Collection getAlternativeNames(byte[])",
            "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi:java.lang.String engineGetCertificateAlias(java.security.cert.Certificate)",
            "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi:void saveStore(java.io.OutputStream)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:java.util.Enumeration engineAliases()",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:java.lang.String engineGetCertificateAlias(java.security.cert.Certificate)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:java.security.cert.Certificate[] engineGetCertificateChain(java.lang.String)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:int engineSize()",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void doStore(java.io.OutputStream,char[],boolean)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:java.util.Set getQualifierSet(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void prepareNextCertB1(int,java.util.List[],java.lang.String,java.util.Map,java.security.cert.X509Certificate)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:org.bouncycastle.jce.provider.PKIXPolicyNode prepareCertB(java.security.cert.CertPath,int,java.util.List[],org.bouncycastle.jce.provider.PKIXPolicyNode,int)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCertBC(java.security.cert.CertPath,int,org.bouncycastle.jce.provider.PKIXNameConstraintValidator)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:org.bouncycastle.jce.provider.PKIXPolicyNode processCertD(java.security.cert.CertPath,int,java.util.Set,org.bouncycastle.jce.provider.PKIXPolicyNode,java.util.List[],int)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:int prepareNextCertI1(java.security.cert.CertPath,int,int)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:int prepareNextCertI2(java.security.cert.CertPath,int,int)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:int wrapupCertB(java.security.cert.CertPath,int,int)",
            "org.bouncycastle.jce.provider.X509CRLEntryObject:java.util.Set getExtensionOIDs(boolean)",
            "org.bouncycastle.jce.provider.X509CRLEntryObject:java.lang.String toString()",
            "org.bouncycastle.jce.provider.X509CRLObject:java.util.Set getExtensionOIDs(boolean)",
            "org.bouncycastle.jce.provider.X509CRLObject:java.util.Set loadCRLEntries()",
            "org.bouncycastle.jce.provider.X509CRLObject:java.security.cert.X509CRLEntry getRevokedCertificate(java.math.BigInteger)",
            "org.bouncycastle.jce.provider.X509CRLObject:java.lang.String toString()",
            "org.bouncycastle.jce.provider.X509CRLObject:boolean isRevoked(java.security.cert.Certificate)",
            "org.bouncycastle.jce.provider.X509CertificateObject:java.util.Set getCriticalExtensionOIDs()",
            "org.bouncycastle.jce.provider.X509CertificateObject:java.util.Set getNonCriticalExtensionOIDs()",
            "org.bouncycastle.jce.provider.X509CertificateObject:boolean hasUnsupportedCriticalExtension()",
            "org.bouncycastle.jce.provider.X509CertificateObject:java.lang.String toString()",
            "org.bouncycastle.jce.provider.X509CertificateObject:java.util.Collection getAlternativeNames(byte[])",
            "org.bouncycastle.ocsp.BasicOCSPResp:java.util.Set getExtensionOIDs(boolean)",
            "org.bouncycastle.ocsp.BasicOCSPResp:java.util.List getCertList(java.lang.String)",
            "org.bouncycastle.ocsp.OCSPReq:java.util.List getCertList(java.lang.String)",
            "org.bouncycastle.ocsp.OCSPReq:java.util.Set getExtensionOIDs(boolean)",
            "org.bouncycastle.ocsp.OCSPUtil:java.util.Iterator getAlgNames()",
            "org.bouncycastle.ocsp.Req:java.util.Set getExtensionOIDs(boolean)",
            "org.bouncycastle.ocsp.RespData:java.util.Set getExtensionOIDs(boolean)",
            "org.bouncycastle.ocsp.SingleResp:java.util.Set getExtensionOIDs(boolean)",
            "org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc:java.util.Vector getStack()",
            "org.bouncycastle.pqc.crypto.gmss.GMSSUtils:java.util.Vector[] clone(java.util.Vector[])",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkPolicy()",
            "org.bouncycastle.x509.X509Util:java.util.Iterator getAlgNames()",
            "org.bouncycastle.x509.X509V2AttributeCertificate:java.util.Set getExtensionOIDs(boolean)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.x509.TargetInformation:org.bouncycastle.asn1.x509.Targets[] getTargetsObjects()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.X509AttributeCertStoreSelector:boolean match(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x509.Targets:org.bouncycastle.asn1.x509.Target[] getTargets()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.X509AttributeCertStoreSelector:boolean match(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x509.X509Extensions:void <init>(java.util.Vector,java.util.Vector)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.X509Extensions:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cmp.RevDetails:void <init>(org.bouncycastle.asn1.crmf.CertTemplate,org.bouncycastle.asn1.x509.X509Extensions)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.V2AttributeCertificateInfoGenerator:void setExtensions(org.bouncycastle.asn1.x509.X509Extensions)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.x509.X509Extensions:boolean equivalent(org.bouncycastle.asn1.x509.X509Extensions)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.X509Name:void <init>(java.util.Vector,java.util.Hashtable,org.bouncycastle.asn1.x509.X509NameEntryConverter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.X509Name:void <init>(java.util.Vector,java.util.Hashtable)"
        ]
    },
    "org.bouncycastle.asn1.x509.sigi.NameOrPseudonym:org.bouncycastle.asn1.x500.DirectoryString[] getGivenName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x9.DHDomainParameters:org.bouncycastle.asn1.ASN1Encodable getNext(java.util.Enumeration)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.x9.ECNamedCurveTable:void addEnumeration(java.util.Vector,java.util.Enumeration)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.ECNamedCurveTable:java.util.Enumeration getNames()"
        ]
    },
    "org.bouncycastle.asn1.x9.KeySpecificInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.OtherInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.x9.OtherInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.digests.SkeinEngine:void initParams(java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.digests.SkeinEngine:void init(org.bouncycastle.crypto.params.SkeinParameters)"
        ]
    },
    "org.bouncycastle.crypto.params.SkeinParameters$Builder:void <init>(java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineInit(java.security.Key,java.security.spec.AlgorithmParameterSpec)"
        ]
    },
    "org.bouncycastle.crypto.params.SkeinParameters$Builder:void <init>(org.bouncycastle.crypto.params.SkeinParameters)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.tls.DTLSReliableHandshake:void checkInboundFlight()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSReliableHandshake:void sendMessage(short,byte[])",
            "org.bouncycastle.crypto.tls.DTLSReliableHandshake:void finish()"
        ]
    },
    "org.bouncycastle.crypto.tls.DTLSReliableHandshake:boolean checkAll(java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSReliableHandshake:org.bouncycastle.crypto.tls.DTLSReliableHandshake$Message receiveMessage()",
            "org.bouncycastle.crypto.tls.DTLSReliableHandshake:boolean access$300(java.util.Hashtable)"
        ]
    },
    "org.bouncycastle.crypto.tls.DTLSReliableHandshake:void resetAll(java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSReliableHandshake:org.bouncycastle.crypto.tls.DTLSReliableHandshake$Message receiveMessage()",
            "org.bouncycastle.crypto.tls.DTLSReliableHandshake:void prepareInboundFlight()",
            "org.bouncycastle.crypto.tls.DTLSReliableHandshake:void access$500(java.util.Hashtable)"
        ]
    },
    "org.bouncycastle.crypto.tls.DeferredHash:void reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:java.math.BigInteger calculateHashForZeroKnowledgeProof(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.lang.String,org.bouncycastle.crypto.Digest)",
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:byte[] calculateMacKey(java.math.BigInteger,org.bouncycastle.crypto.Digest)",
            "org.bouncycastle.crypto.agreement.kdf.DHKEKGenerator:int generateBytes(byte[],int,int)",
            "org.bouncycastle.crypto.encodings.OAEPEncoding:void <init>(org.bouncycastle.crypto.AsymmetricBlockCipher,org.bouncycastle.crypto.Digest,org.bouncycastle.crypto.Digest,byte[])",
            "org.bouncycastle.crypto.encodings.OAEPEncoding:byte[] maskGeneratorFunction1(byte[],int,int,int)",
            "org.bouncycastle.crypto.generators.BaseKDFBytesGenerator:int generateBytes(byte[],int,int)",
            "org.bouncycastle.crypto.generators.MGF1BytesGenerator:int generateBytes(byte[],int,int)",
            "org.bouncycastle.crypto.generators.OpenSSLPBEParametersGenerator:byte[] generateDerivedKey(int)",
            "org.bouncycastle.crypto.macs.HMac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.HMac:void reset()",
            "org.bouncycastle.crypto.macs.OldHMac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.OldHMac:void reset()",
            "org.bouncycastle.crypto.signers.DSADigestSigner:void reset()",
            "org.bouncycastle.crypto.signers.GenericSigner:void reset()",
            "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:void reset()",
            "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:byte[] maskGeneratorFunction1(byte[],int,int,int)",
            "org.bouncycastle.crypto.signers.ISO9796d2Signer:void reset()",
            "org.bouncycastle.crypto.signers.ISO9796d2Signer:boolean verifySignature(byte[])",
            "org.bouncycastle.crypto.signers.PSSSigner:void reset()",
            "org.bouncycastle.crypto.signers.PSSSigner:byte[] maskGeneratorFunction1(byte[],int,int,int)",
            "org.bouncycastle.crypto.signers.RSADigestSigner:void reset()",
            "org.bouncycastle.crypto.tls.CombinedHash:void reset()",
            "org.bouncycastle.crypto.tls.DTLSReliableHandshake:void resetHandshakeMessagesDigest()",
            "org.bouncycastle.crypto.tls.DeferredHash:void reset()",
            "org.bouncycastle.crypto.tls.SSL3Mac:void reset()",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner:void engineInitSign(java.security.PrivateKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi:void engineInitSign(java.security.PrivateKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.SignatureSpi:void engineInitSign(java.security.PrivateKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.SignatureSpi:void engineInitSign(java.security.PrivateKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi:void engineInitSign(java.security.PrivateKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.PSSSignatureSpi$NullPssDigest:void reset()",
            "org.bouncycastle.jcajce.provider.digest.BCMessageDigest:void engineReset()",
            "org.bouncycastle.jce.provider.BrokenKDF2BytesGenerator:int generateBytes(byte[],int,int)",
            "org.bouncycastle.pqc.crypto.DigestingMessageSigner:void reset()",
            "org.bouncycastle.pqc.crypto.gmss.GMSSSigner:void initSign()",
            "org.bouncycastle.pqc.crypto.gmss.GMSSSigner:void initVerify()",
            "org.bouncycastle.pqc.crypto.gmss.GMSSSigner:boolean verifySignature(byte[],byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher:void reset()",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiDigestCipher:void reset()",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePKCSDigestCipher:void reset()",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalDigestCipher:void reset()",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceFujisakiCipherSpi:void initCipherEncrypt(java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceFujisakiCipherSpi:void initCipherDecrypt(java.security.Key,java.security.spec.AlgorithmParameterSpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKobaraImaiCipherSpi:void initCipherEncrypt(java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKobaraImaiCipherSpi:void initCipherDecrypt(java.security.Key,java.security.spec.AlgorithmParameterSpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McEliecePKCSCipherSpi:void initCipherEncrypt(java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McEliecePKCSCipherSpi:void initCipherDecrypt(java.security.Key,java.security.spec.AlgorithmParameterSpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McEliecePointchevalCipherSpi:void initCipherEncrypt(java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McEliecePointchevalCipherSpi:void initCipherDecrypt(java.security.Key,java.security.spec.AlgorithmParameterSpec)",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.SignatureSpi:void engineInitSign(java.security.PrivateKey)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLEntryObject:java.util.Set getExtensionOIDs(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLEntryObject:java.util.Set getCriticalExtensionOIDs()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLEntryObject:java.util.Set getNonCriticalExtensionOIDs()"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:java.util.Set getExtensionOIDs(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:java.util.Set getCriticalExtensionOIDs()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:java.util.Set getNonCriticalExtensionOIDs()"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:java.util.Set loadCRLEntries()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:java.util.Set getRevokedCertificates()"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:java.security.cert.X509CRLEntry getRevokedCertificate(java.math.BigInteger)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCertStatus(java.util.Date,java.security.cert.X509CRL,java.lang.Object,org.bouncycastle.jce.provider.CertStatus)",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkCRLs(java.security.cert.PKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,java.util.Vector,int)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:java.util.Set getCriticalExtensionOIDs()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void prepareNextCertB1(int,java.util.List[],java.lang.String,java.util.Map,java.security.cert.X509Certificate)",
            "org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi:java.security.cert.CertPathValidatorResult engineValidate(java.security.cert.CertPath,java.security.cert.CertPathParameters)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:org.bouncycastle.jce.provider.PKIXPolicyNode prepareCertB(java.security.cert.CertPath,int,java.util.List[],org.bouncycastle.jce.provider.PKIXPolicyNode,int)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:org.bouncycastle.jce.provider.PKIXPolicyNode processCertD(java.security.cert.CertPath,int,java.util.Set,org.bouncycastle.jce.provider.PKIXPolicyNode,java.util.List[],int)",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkPolicy()",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkCriticalExtensions()"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:java.util.Set getNonCriticalExtensionOIDs()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:boolean hasUnsupportedCriticalExtension()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi:java.lang.String engineGetCertificateAlias(java.security.cert.Certificate)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi:void saveStore(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$BouncyCastleStore:void engineStore(java.io.OutputStream,char[])",
            "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi:void engineStore(java.io.OutputStream,char[])"
        ]
    },
    "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:java.util.Enumeration engineAliases()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:java.lang.String engineGetCertificateAlias(java.security.cert.Certificate)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:int engineSize()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.provider.X509CRLEntryObject:java.util.Set getExtensionOIDs(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.X509CRLEntryObject:java.util.Set getCriticalExtensionOIDs()",
            "org.bouncycastle.jce.provider.X509CRLEntryObject:java.util.Set getNonCriticalExtensionOIDs()"
        ]
    },
    "org.bouncycastle.jce.provider.X509CRLObject:java.util.Set getExtensionOIDs(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.X509CRLObject:java.util.Set getCriticalExtensionOIDs()",
            "org.bouncycastle.jce.provider.X509CRLObject:java.util.Set getNonCriticalExtensionOIDs()"
        ]
    },
    "org.bouncycastle.jce.provider.X509CRLObject:java.util.Set loadCRLEntries()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.X509CRLObject:java.util.Set getRevokedCertificates()"
        ]
    },
    "org.bouncycastle.jce.provider.X509CRLObject:java.security.cert.X509CRLEntry getRevokedCertificate(java.math.BigInteger)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCertStatus(java.util.Date,java.security.cert.X509CRL,java.lang.Object,org.bouncycastle.jce.provider.CertStatus)",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkCRLs(java.security.cert.PKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,java.util.Vector,int)"
        ]
    },
    "org.bouncycastle.jce.provider.X509CertificateObject:java.util.Set getCriticalExtensionOIDs()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void prepareNextCertB1(int,java.util.List[],java.lang.String,java.util.Map,java.security.cert.X509Certificate)",
            "org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi:java.security.cert.CertPathValidatorResult engineValidate(java.security.cert.CertPath,java.security.cert.CertPathParameters)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:org.bouncycastle.jce.provider.PKIXPolicyNode prepareCertB(java.security.cert.CertPath,int,java.util.List[],org.bouncycastle.jce.provider.PKIXPolicyNode,int)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:org.bouncycastle.jce.provider.PKIXPolicyNode processCertD(java.security.cert.CertPath,int,java.util.Set,org.bouncycastle.jce.provider.PKIXPolicyNode,java.util.List[],int)",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkPolicy()",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkCriticalExtensions()"
        ]
    },
    "org.bouncycastle.jce.provider.X509CertificateObject:java.util.Set getNonCriticalExtensionOIDs()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.provider.X509CertificateObject:boolean hasUnsupportedCriticalExtension()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.ocsp.BasicOCSPResp:java.util.Set getExtensionOIDs(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.ocsp.BasicOCSPResp:java.util.Set getCriticalExtensionOIDs()",
            "org.bouncycastle.ocsp.BasicOCSPResp:java.util.Set getNonCriticalExtensionOIDs()"
        ]
    },
    "org.bouncycastle.ocsp.OCSPReq:java.util.Set getExtensionOIDs(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.ocsp.OCSPReq:java.util.Set getCriticalExtensionOIDs()",
            "org.bouncycastle.ocsp.OCSPReq:java.util.Set getNonCriticalExtensionOIDs()"
        ]
    },
    "org.bouncycastle.ocsp.OCSPUtil:java.util.Iterator getAlgNames()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.ocsp.BasicOCSPRespGenerator:java.util.Iterator getSignatureAlgNames()",
            "org.bouncycastle.ocsp.OCSPReqGenerator:java.util.Iterator getSignatureAlgNames()"
        ]
    },
    "org.bouncycastle.ocsp.Req:java.util.Set getExtensionOIDs(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.ocsp.Req:java.util.Set getCriticalExtensionOIDs()",
            "org.bouncycastle.ocsp.Req:java.util.Set getNonCriticalExtensionOIDs()"
        ]
    },
    "org.bouncycastle.ocsp.RespData:java.util.Set getExtensionOIDs(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.ocsp.RespData:java.util.Set getCriticalExtensionOIDs()",
            "org.bouncycastle.ocsp.RespData:java.util.Set getNonCriticalExtensionOIDs()"
        ]
    },
    "org.bouncycastle.ocsp.SingleResp:java.util.Set getExtensionOIDs(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.ocsp.SingleResp:java.util.Set getCriticalExtensionOIDs()",
            "org.bouncycastle.ocsp.SingleResp:java.util.Set getNonCriticalExtensionOIDs()"
        ]
    },
    "org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc:java.util.Vector getStack()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters:void nextTree(int)"
        ]
    },
    "org.bouncycastle.pqc.crypto.gmss.GMSSUtils:java.util.Vector[] clone(java.util.Vector[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc:void <init>(org.bouncycastle.crypto.Digest,byte[][],int[],org.bouncycastle.pqc.crypto.gmss.Treehash[],java.util.Vector[])",
            "org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc:java.util.Vector[] getRetain()",
            "org.bouncycastle.pqc.crypto.gmss.GMSSUtils:java.util.Vector[][] clone(java.util.Vector[][])"
        ]
    },
    "org.bouncycastle.x509.X509Util:java.util.Iterator getAlgNames()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.X509V1CertificateGenerator:java.util.Iterator getSignatureAlgNames()",
            "org.bouncycastle.x509.X509V2AttributeCertificateGenerator:java.util.Iterator getSignatureAlgNames()",
            "org.bouncycastle.x509.X509V2CRLGenerator:java.util.Iterator getSignatureAlgNames()",
            "org.bouncycastle.x509.X509V3CertificateGenerator:java.util.Iterator getSignatureAlgNames()"
        ]
    },
    "org.bouncycastle.x509.X509V2AttributeCertificate:java.util.Set getExtensionOIDs(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.X509V2AttributeCertificate:java.util.Set getNonCriticalExtensionOIDs()",
            "org.bouncycastle.x509.X509V2AttributeCertificate:java.util.Set getCriticalExtensionOIDs()"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner:void engineInitVerify(java.security.PublicKey)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dsa.KeyFactorySpi:java.security.PublicKey generatePublic(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi:java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec)",
            "org.bouncycastle.jce.provider.BouncyCastleProvider:java.security.PublicKey getPublicKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.BouncyCastlePQCProvider:java.security.PublicKey getPublicKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.elgamal.KeyFactorySpi:java.security.PublicKey generatePublic(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi:java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec)",
            "org.bouncycastle.jce.provider.BouncyCastleProvider:java.security.PublicKey getPublicKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.BouncyCastlePQCProvider:java.security.PublicKey getPublicKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.gost.KeyFactorySpi:java.security.PublicKey generatePublic(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi:java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec)",
            "org.bouncycastle.jce.provider.BouncyCastleProvider:java.security.PublicKey getPublicKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.BouncyCastlePQCProvider:java.security.PublicKey getPublicKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.rsa.BCRSAPublicKey:void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.KeyFactorySpi:java.security.PublicKey generatePublic(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)"
        ]
    },
    "org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyFactorySpi:java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.X509Name:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.CertificationRequestInfo:void <init>(org.bouncycastle.asn1.x509.X509Name,org.bouncycastle.asn1.x509.SubjectPublicKeyInfo,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.IssuerAndSerialNumber:void <init>(org.bouncycastle.asn1.x509.X509Name,java.math.BigInteger)",
            "org.bouncycastle.asn1.pkcs.IssuerAndSerialNumber:void <init>(org.bouncycastle.asn1.x509.X509Name,org.bouncycastle.asn1.ASN1Integer)",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.V1TBSCertificateGenerator:void setIssuer(org.bouncycastle.asn1.x509.X509Name)",
            "org.bouncycastle.asn1.x509.V1TBSCertificateGenerator:void setSubject(org.bouncycastle.asn1.x509.X509Name)",
            "org.bouncycastle.asn1.x509.V2TBSCertListGenerator:void setIssuer(org.bouncycastle.asn1.x509.X509Name)",
            "org.bouncycastle.asn1.x509.V3TBSCertificateGenerator:void setSubject(org.bouncycastle.asn1.x509.X509Name)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.X509Principal:void <init>(org.bouncycastle.asn1.x509.X509Name)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.util.Collection engineGenerateCertificates(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.util.Collection engineGenerateCRLs(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.CertPath engineGenerateCertPath(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] getEncoded()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.PKCS10CertificationRequest:org.bouncycastle.asn1.x509.X509Name convertName(javax.security.auth.x500.X500Principal)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.PKCS10CertificationRequest:void <init>(java.lang.String,javax.security.auth.x500.X500Principal,java.security.PublicKey,org.bouncycastle.asn1.ASN1Set,java.security.PrivateKey)",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void <init>(java.lang.String,javax.security.auth.x500.X500Principal,java.security.PublicKey,org.bouncycastle.asn1.ASN1Set,java.security.PrivateKey,java.lang.String)"
        ]
    },
    "org.bouncycastle.ocsp.OCSPReqGenerator:void setRequestorName(javax.security.auth.x500.X500Principal)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.AttributeCertificateIssuer:void <init>(javax.security.auth.x500.X500Principal)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.examples.AttrCertExample:void main(java.lang.String[])"
        ]
    },
    "org.bouncycastle.x509.X509Util:org.bouncycastle.jce.X509Principal convertPrincipal(javax.security.auth.x500.X500Principal)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.AttributeCertificateHolder:void <init>(javax.security.auth.x500.X500Principal,java.math.BigInteger)",
            "org.bouncycastle.x509.AttributeCertificateHolder:void <init>(javax.security.auth.x500.X500Principal)"
        ]
    },
    "org.bouncycastle.x509.X509V1CertificateGenerator:void setIssuerDN(javax.security.auth.x500.X500Principal)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.X509V1CertificateGenerator:void setSubjectDN(javax.security.auth.x500.X500Principal)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.X509V2CRLGenerator:void setIssuerDN(javax.security.auth.x500.X500Principal)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.X509V3CertificateGenerator:void setIssuerDN(javax.security.auth.x500.X500Principal)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.X509V3CertificateGenerator:void setSubjectDN(javax.security.auth.x500.X500Principal)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.netscape.NetscapeCertRequest:void sign(java.security.PrivateKey)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.ASN1Object:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Sequence:int hashCode()",
            "org.bouncycastle.asn1.ASN1Set:int hashCode()",
            "org.bouncycastle.asn1.ASN1TaggedObject:int hashCode()",
            "org.bouncycastle.asn1.x509.CertificateList:int hashCode()",
            "org.bouncycastle.asn1.x509.X509Name:int hashCode()",
            "org.bouncycastle.jce.X509LDAPCertStoreParameters:int addHashCode(int,java.lang.Object)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:int hashCollection(java.util.Collection)",
            "org.bouncycastle.ocsp.BasicOCSPResp:int hashCode()",
            "org.bouncycastle.ocsp.OCSPResp:int hashCode()",
            "org.bouncycastle.ocsp.RespID:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Matrix:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Vector:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2mVector:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.Permutation:int hashCode()",
            "org.bouncycastle.util.Arrays:int hashCode(java.lang.Object[])",
            "org.bouncycastle.x509.AttributeCertificateHolder:int hashCode()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:int hashCode()"
        ]
    },
    "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object clone()",
            "org.bouncycastle.x509.X509V2AttributeCertificate:org.bouncycastle.x509.AttributeCertificateHolder getHolder()",
            "org.bouncycastle.x509.X509V2AttributeCertificateGenerator:void addAttribute(org.bouncycastle.x509.X509Attribute)",
            "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure:org.bouncycastle.asn1.ASN1Sequence fromCertificate(java.security.cert.X509Certificate)",
            "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure:org.bouncycastle.asn1.ASN1Sequence fromKey(java.security.PublicKey)",
            "org.bouncycastle.x509.extension.SubjectKeyIdentifierStructure:org.bouncycastle.asn1.ASN1OctetString fromPublicKey(java.security.PublicKey)"
        ]
    },
    "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:org.bouncycastle.jce.provider.ReasonsMask processCRLD(java.security.cert.X509CRL,org.bouncycastle.asn1.x509.DistributionPoint)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void checkCRL(org.bouncycastle.asn1.x509.DistributionPoint,org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,org.bouncycastle.jce.provider.CertStatus,org.bouncycastle.jce.provider.ReasonsMask,java.util.List)",
            "org.bouncycastle.jce.provider.RFC3281CertPathUtilities:void checkCRL(org.bouncycastle.asn1.x509.DistributionPoint,org.bouncycastle.x509.X509AttributeCertificate,org.bouncycastle.x509.ExtendedPKIXParameters,java.util.Date,java.security.cert.X509Certificate,org.bouncycastle.jce.provider.CertStatus,org.bouncycastle.jce.provider.ReasonsMask,java.util.List)"
        ]
    },
    "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:java.util.Set processCRLA1i(java.util.Date,org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.X509Certificate,java.security.cert.X509CRL)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLC(java.security.cert.X509CRL,java.security.cert.X509CRL,org.bouncycastle.x509.ExtendedPKIXParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void checkCRL(org.bouncycastle.asn1.x509.DistributionPoint,org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,org.bouncycastle.jce.provider.CertStatus,org.bouncycastle.jce.provider.ReasonsMask,java.util.List)",
            "org.bouncycastle.jce.provider.RFC3281CertPathUtilities:void checkCRL(org.bouncycastle.asn1.x509.DistributionPoint,org.bouncycastle.x509.X509AttributeCertificate,org.bouncycastle.x509.ExtendedPKIXParameters,java.util.Date,java.security.cert.X509Certificate,org.bouncycastle.jce.provider.CertStatus,org.bouncycastle.jce.provider.ReasonsMask,java.util.List)"
        ]
    },
    "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void prepareNextCertK(java.security.cert.CertPath,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi:java.security.cert.CertPathValidatorResult engineValidate(java.security.cert.CertPath,java.security.cert.CertPathParameters)"
        ]
    },
    "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:int prepareNextCertM(java.security.cert.CertPath,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi:java.security.cert.CertPathValidatorResult engineValidate(java.security.cert.CertPath,java.security.cert.CertPathParameters)"
        ]
    },
    "org.bouncycastle.jce.provider.RFC3281CertPathUtilities:void processAttrCert7(org.bouncycastle.x509.X509AttributeCertificate,java.security.cert.CertPath,java.security.cert.CertPath,org.bouncycastle.x509.ExtendedPKIXParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.PKIXAttrCertPathValidatorSpi:java.security.cert.CertPathValidatorResult engineValidate(java.security.cert.CertPath,java.security.cert.CertPathParameters)"
        ]
    },
    "org.bouncycastle.x509.PKIXCertPathReviewer:void checkPathLength()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.PKIXCertPathReviewer:void doChecks()"
        ]
    },
    "org.bouncycastle.x509.PKIXCertPathReviewer:boolean processQcStatements(java.security.cert.X509Certificate,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkCriticalExtensions()"
        ]
    },
    "org.bouncycastle.x509.X509V2AttributeCertificate:void <init>(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.X509AttrCertParser:org.bouncycastle.x509.X509AttributeCertificate readDERCertificate(java.io.InputStream)",
            "org.bouncycastle.jce.provider.X509AttrCertParser:org.bouncycastle.x509.X509AttributeCertificate getCertificate()",
            "org.bouncycastle.jce.provider.X509AttrCertParser:org.bouncycastle.x509.X509AttributeCertificate readPEMCertificate(java.io.InputStream)"
        ]
    },
    "org.bouncycastle.asn1.BERTaggedObjectParser:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.x509.X509Store:java.util.Collection getMatches(org.bouncycastle.util.Selector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:java.util.Collection findCertificates(org.bouncycastle.x509.X509CertStoreSelector,java.util.List)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:java.util.Collection findCertificates(org.bouncycastle.x509.X509AttributeCertStoreSelector,java.util.List)",
            "org.bouncycastle.jce.provider.PKIXCRLUtil:java.util.Collection findCRLs(org.bouncycastle.x509.X509CRLStoreSelector,java.util.List)"
        ]
    },
    "org.bouncycastle.asn1.DEROctetStringParser:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.x509.DistributionPoint:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.DistributionPointName:java.lang.String toString()",
            "org.bouncycastle.asn1.x509.GeneralName:java.lang.String toString()",
            "org.bouncycastle.asn1.x509.RoleSyntax:java.lang.String[] getRoleAuthorityAsString()",
            "org.bouncycastle.asn1.x509.X509Name:java.lang.String toString(boolean,java.util.Hashtable)",
            "org.bouncycastle.i18n.LocalizedMessage$FilteredArguments:java.lang.Object filter(int,java.lang.Object)",
            "org.bouncycastle.i18n.filter.TrustedInput:java.lang.String toString()",
            "org.bouncycastle.i18n.filter.UntrustedInput:java.lang.String getString()",
            "org.bouncycastle.i18n.filter.UntrustedInput:java.lang.String toString()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.CertPath engineGenerateCertPath(java.util.List)"
        ]
    },
    "org.bouncycastle.asn1.x509.IssuingDistributionPoint:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.DistributionPointName:java.lang.String toString()",
            "org.bouncycastle.asn1.x509.GeneralName:java.lang.String toString()",
            "org.bouncycastle.asn1.x509.RoleSyntax:java.lang.String[] getRoleAuthorityAsString()",
            "org.bouncycastle.asn1.x509.X509Name:java.lang.String toString(boolean,java.util.Hashtable)",
            "org.bouncycastle.i18n.LocalizedMessage$FilteredArguments:java.lang.Object filter(int,java.lang.Object)",
            "org.bouncycastle.i18n.filter.TrustedInput:java.lang.String toString()",
            "org.bouncycastle.i18n.filter.UntrustedInput:java.lang.String getString()",
            "org.bouncycastle.i18n.filter.UntrustedInput:java.lang.String toString()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.CertPath engineGenerateCertPath(java.util.List)"
        ]
    },
    "org.bouncycastle.asn1.x509.RoleSyntax:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.DistributionPointName:java.lang.String toString()",
            "org.bouncycastle.asn1.x509.GeneralName:java.lang.String toString()",
            "org.bouncycastle.asn1.x509.RoleSyntax:java.lang.String[] getRoleAuthorityAsString()",
            "org.bouncycastle.asn1.x509.X509Name:java.lang.String toString(boolean,java.util.Hashtable)",
            "org.bouncycastle.i18n.LocalizedMessage$FilteredArguments:java.lang.Object filter(int,java.lang.Object)",
            "org.bouncycastle.i18n.filter.TrustedInput:java.lang.String toString()",
            "org.bouncycastle.i18n.filter.UntrustedInput:java.lang.String getString()",
            "org.bouncycastle.i18n.filter.UntrustedInput:java.lang.String toString()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.CertPath engineGenerateCertPath(java.util.List)"
        ]
    },
    "org.bouncycastle.x509.util.LDAPStoreHelper:java.util.List attrCertSubjectSerialSearch(org.bouncycastle.x509.X509AttributeCertStoreSelector,java.lang.String[],java.lang.String[],java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.util.LDAPStoreHelper:java.util.Collection getAACertificates(org.bouncycastle.x509.X509AttributeCertStoreSelector)",
            "org.bouncycastle.x509.util.LDAPStoreHelper:java.util.Collection getAttributeDescriptorCertificates(org.bouncycastle.x509.X509AttributeCertStoreSelector)",
            "org.bouncycastle.x509.util.LDAPStoreHelper:java.util.Collection getAttributeCertificateAttributes(org.bouncycastle.x509.X509AttributeCertStoreSelector)"
        ]
    },
    "org.bouncycastle.i18n.ErrorBundle:java.lang.String getSummary(java.util.Locale,java.util.TimeZone)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.i18n.ErrorBundle:java.lang.String getSummary(java.util.Locale)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.i18n.ErrorBundle:java.lang.String getDetail(java.util.Locale,java.util.TimeZone)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.i18n.ErrorBundle:java.lang.String getDetail(java.util.Locale)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.i18n.LocaleString:java.lang.String getLocaleString(java.util.Locale)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.i18n.LocalizedMessage$FilteredArguments:java.lang.Object[] getFilteredArgs(java.util.Locale)"
        ]
    },
    "org.bouncycastle.i18n.MessageBundle:java.lang.String getTitle(java.util.Locale,java.util.TimeZone)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.i18n.MessageBundle:java.lang.String getTitle(java.util.Locale)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.i18n.TextBundle:java.lang.String getText(java.util.Locale,java.util.TimeZone)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.i18n.TextBundle:java.lang.String getText(java.util.Locale)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.i18n.LocalizedException:void <init>(org.bouncycastle.i18n.ErrorBundle)",
            "org.bouncycastle.i18n.LocalizedException:void <init>(org.bouncycastle.i18n.ErrorBundle,java.lang.Throwable)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsRSASigner:org.bouncycastle.crypto.Signer createSigner(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.params.AsymmetricKeyParameter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.AbstractTlsSigner:org.bouncycastle.crypto.Signer createSigner(org.bouncycastle.crypto.params.AsymmetricKeyParameter)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsRSASigner:org.bouncycastle.crypto.Signer createVerifyer(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.params.AsymmetricKeyParameter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.AbstractTlsSigner:org.bouncycastle.crypto.Signer createVerifyer(org.bouncycastle.crypto.params.AsymmetricKeyParameter)",
            "org.bouncycastle.crypto.tls.TlsDHEKeyExchange:org.bouncycastle.crypto.Signer initVerifyer(org.bouncycastle.crypto.tls.TlsSigner,org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.tls.SecurityParameters)",
            "org.bouncycastle.crypto.tls.TlsECDHEKeyExchange:org.bouncycastle.crypto.Signer initVerifyer(org.bouncycastle.crypto.tls.TlsSigner,org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.tls.SecurityParameters)",
            "org.bouncycastle.crypto.tls.TlsSRPKeyExchange:org.bouncycastle.crypto.Signer initVerifyer(org.bouncycastle.crypto.tls.TlsSigner,org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.tls.SecurityParameters)"
        ]
    },
    "org.bouncycastle.asn1.ess.ESSCertIDv2:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.pkcs.PBKDF2Params:boolean isDefaultPrf()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:javax.crypto.Cipher createCipher(int,char[],org.bouncycastle.asn1.x509.AlgorithmIdentifier)"
        ]
    },
    "org.bouncycastle.asn1.pkcs.PBKDF2Params:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.pkcs.RSAESOAEPparams:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.pkcs.RSASSAPSSparams:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.x509.X509Name:java.util.Vector getValues(org.bouncycastle.asn1.ASN1ObjectIdentifier)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCertBC(java.security.cert.CertPath,int,org.bouncycastle.jce.provider.PKIXNameConstraintValidator)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.gost.BCGOST3410PrivateKey:boolean compareObj(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.gost.BCGOST3410PrivateKey:boolean equals(java.lang.Object)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLEntryObject:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.x509.Extensions:boolean equivalent(org.bouncycastle.asn1.x509.Extensions)",
            "org.bouncycastle.asn1.x509.X509Extensions:boolean equivalent(org.bouncycastle.asn1.x509.X509Extensions)",
            "org.bouncycastle.asn1.x509.X509Name:java.util.Vector getValues(org.bouncycastle.asn1.ASN1ObjectIdentifier)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.BCGOST3410PrivateKey:boolean compareObj(java.lang.Object,java.lang.Object)",
            "org.bouncycastle.jce.X509LDAPCertStoreParameters:boolean checkField(java.lang.Object,java.lang.Object)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void addAdditionalStoresFromAltNames(java.security.cert.X509Certificate,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:boolean equals(java.lang.Object,java.lang.Object)",
            "org.bouncycastle.util.Arrays:boolean areEqual(java.lang.Object[],java.lang.Object[])"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void verify(java.security.PublicKey,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void verify(java.security.PublicKey)",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkCRLs(java.security.cert.PKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,java.util.Vector,int)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.x509.Extensions:boolean equivalent(org.bouncycastle.asn1.x509.Extensions)",
            "org.bouncycastle.asn1.x509.X509Extensions:boolean equivalent(org.bouncycastle.asn1.x509.X509Extensions)",
            "org.bouncycastle.asn1.x509.X509Name:java.util.Vector getValues(org.bouncycastle.asn1.ASN1ObjectIdentifier)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.BCGOST3410PrivateKey:boolean compareObj(java.lang.Object,java.lang.Object)",
            "org.bouncycastle.jce.X509LDAPCertStoreParameters:boolean checkField(java.lang.Object,java.lang.Object)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void addAdditionalStoresFromAltNames(java.security.cert.X509Certificate,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:boolean equals(java.lang.Object,java.lang.Object)",
            "org.bouncycastle.util.Arrays:boolean areEqual(java.lang.Object[],java.lang.Object[])"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:boolean isAlgIdEqual(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.x509.AlgorithmIdentifier)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:void checkSignature(java.security.PublicKey,java.security.Signature)"
        ]
    },
    "org.bouncycastle.jce.X509LDAPCertStoreParameters:boolean checkField(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.X509LDAPCertStoreParameters:boolean equal(java.lang.Object)"
        ]
    },
    "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void addAdditionalStoresFromAltNames(java.security.cert.X509Certificate,org.bouncycastle.x509.ExtendedPKIXParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.PKIXAttrCertPathBuilderSpi:java.security.cert.CertPathBuilderResult build(org.bouncycastle.x509.X509AttributeCertificate,java.security.cert.X509Certificate,org.bouncycastle.x509.ExtendedPKIXBuilderParameters,java.util.List)",
            "org.bouncycastle.jce.provider.PKIXCertPathBuilderSpi:java.security.cert.CertPathBuilderResult build(java.security.cert.X509Certificate,org.bouncycastle.x509.ExtendedPKIXBuilderParameters,java.util.List)"
        ]
    },
    "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:boolean withinDNSubtree(org.bouncycastle.asn1.ASN1Sequence,org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermittedDN(java.util.Set,org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcludedDN(java.util.Set,org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set unionDN(java.util.Set,org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:boolean equals(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:boolean collectionsAreEqual(java.util.Collection,java.util.Collection)"
        ]
    },
    "org.bouncycastle.jce.provider.X509CRLEntryObject:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.x509.Extensions:boolean equivalent(org.bouncycastle.asn1.x509.Extensions)",
            "org.bouncycastle.asn1.x509.X509Extensions:boolean equivalent(org.bouncycastle.asn1.x509.X509Extensions)",
            "org.bouncycastle.asn1.x509.X509Name:java.util.Vector getValues(org.bouncycastle.asn1.ASN1ObjectIdentifier)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.BCGOST3410PrivateKey:boolean compareObj(java.lang.Object,java.lang.Object)",
            "org.bouncycastle.jce.X509LDAPCertStoreParameters:boolean checkField(java.lang.Object,java.lang.Object)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void addAdditionalStoresFromAltNames(java.security.cert.X509Certificate,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:boolean equals(java.lang.Object,java.lang.Object)",
            "org.bouncycastle.util.Arrays:boolean areEqual(java.lang.Object[],java.lang.Object[])"
        ]
    },
    "org.bouncycastle.jce.provider.X509CRLObject:void verify(java.security.PublicKey,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.X509CRLObject:void verify(java.security.PublicKey)",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkCRLs(java.security.cert.PKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,java.util.Vector,int)"
        ]
    },
    "org.bouncycastle.jce.provider.X509CRLObject:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.x509.Extensions:boolean equivalent(org.bouncycastle.asn1.x509.Extensions)",
            "org.bouncycastle.asn1.x509.X509Extensions:boolean equivalent(org.bouncycastle.asn1.x509.X509Extensions)",
            "org.bouncycastle.asn1.x509.X509Name:java.util.Vector getValues(org.bouncycastle.asn1.ASN1ObjectIdentifier)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.BCGOST3410PrivateKey:boolean compareObj(java.lang.Object,java.lang.Object)",
            "org.bouncycastle.jce.X509LDAPCertStoreParameters:boolean checkField(java.lang.Object,java.lang.Object)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void addAdditionalStoresFromAltNames(java.security.cert.X509Certificate,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:boolean equals(java.lang.Object,java.lang.Object)",
            "org.bouncycastle.util.Arrays:boolean areEqual(java.lang.Object[],java.lang.Object[])"
        ]
    },
    "org.bouncycastle.jce.provider.X509CertificateObject:boolean isAlgIdEqual(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.x509.AlgorithmIdentifier)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.X509CertificateObject:void checkSignature(java.security.PublicKey,java.security.Signature)"
        ]
    },
    "org.bouncycastle.ocsp.BasicOCSPResp:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.x509.Extensions:boolean equivalent(org.bouncycastle.asn1.x509.Extensions)",
            "org.bouncycastle.asn1.x509.X509Extensions:boolean equivalent(org.bouncycastle.asn1.x509.X509Extensions)",
            "org.bouncycastle.asn1.x509.X509Name:java.util.Vector getValues(org.bouncycastle.asn1.ASN1ObjectIdentifier)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.BCGOST3410PrivateKey:boolean compareObj(java.lang.Object,java.lang.Object)",
            "org.bouncycastle.jce.X509LDAPCertStoreParameters:boolean checkField(java.lang.Object,java.lang.Object)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void addAdditionalStoresFromAltNames(java.security.cert.X509Certificate,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:boolean equals(java.lang.Object,java.lang.Object)",
            "org.bouncycastle.util.Arrays:boolean areEqual(java.lang.Object[],java.lang.Object[])"
        ]
    },
    "org.bouncycastle.ocsp.OCSPResp:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.x509.Extensions:boolean equivalent(org.bouncycastle.asn1.x509.Extensions)",
            "org.bouncycastle.asn1.x509.X509Extensions:boolean equivalent(org.bouncycastle.asn1.x509.X509Extensions)",
            "org.bouncycastle.asn1.x509.X509Name:java.util.Vector getValues(org.bouncycastle.asn1.ASN1ObjectIdentifier)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.BCGOST3410PrivateKey:boolean compareObj(java.lang.Object,java.lang.Object)",
            "org.bouncycastle.jce.X509LDAPCertStoreParameters:boolean checkField(java.lang.Object,java.lang.Object)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void addAdditionalStoresFromAltNames(java.security.cert.X509Certificate,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:boolean equals(java.lang.Object,java.lang.Object)",
            "org.bouncycastle.util.Arrays:boolean areEqual(java.lang.Object[],java.lang.Object[])"
        ]
    },
    "org.bouncycastle.ocsp.RespID:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.x509.Extensions:boolean equivalent(org.bouncycastle.asn1.x509.Extensions)",
            "org.bouncycastle.asn1.x509.X509Extensions:boolean equivalent(org.bouncycastle.asn1.x509.X509Extensions)",
            "org.bouncycastle.asn1.x509.X509Name:java.util.Vector getValues(org.bouncycastle.asn1.ASN1ObjectIdentifier)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.BCGOST3410PrivateKey:boolean compareObj(java.lang.Object,java.lang.Object)",
            "org.bouncycastle.jce.X509LDAPCertStoreParameters:boolean checkField(java.lang.Object,java.lang.Object)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void addAdditionalStoresFromAltNames(java.security.cert.X509Certificate,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:boolean equals(java.lang.Object,java.lang.Object)",
            "org.bouncycastle.util.Arrays:boolean areEqual(java.lang.Object[],java.lang.Object[])"
        ]
    },
    "org.bouncycastle.util.Arrays:boolean areEqual(java.lang.Object[],java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.AttributeCertificateHolder:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.x509.Extensions:boolean equivalent(org.bouncycastle.asn1.x509.Extensions)",
            "org.bouncycastle.asn1.x509.X509Extensions:boolean equivalent(org.bouncycastle.asn1.x509.X509Extensions)",
            "org.bouncycastle.asn1.x509.X509Name:java.util.Vector getValues(org.bouncycastle.asn1.ASN1ObjectIdentifier)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.BCGOST3410PrivateKey:boolean compareObj(java.lang.Object,java.lang.Object)",
            "org.bouncycastle.jce.X509LDAPCertStoreParameters:boolean checkField(java.lang.Object,java.lang.Object)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void addAdditionalStoresFromAltNames(java.security.cert.X509Certificate,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:boolean equals(java.lang.Object,java.lang.Object)",
            "org.bouncycastle.util.Arrays:boolean areEqual(java.lang.Object[],java.lang.Object[])",
            "org.bouncycastle.x509.X509AttributeCertStoreSelector:boolean match(java.lang.Object)"
        ]
    },
    "org.bouncycastle.x509.AttributeCertificateIssuer:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.x509.Extensions:boolean equivalent(org.bouncycastle.asn1.x509.Extensions)",
            "org.bouncycastle.asn1.x509.X509Extensions:boolean equivalent(org.bouncycastle.asn1.x509.X509Extensions)",
            "org.bouncycastle.asn1.x509.X509Name:java.util.Vector getValues(org.bouncycastle.asn1.ASN1ObjectIdentifier)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.BCGOST3410PrivateKey:boolean compareObj(java.lang.Object,java.lang.Object)",
            "org.bouncycastle.jce.X509LDAPCertStoreParameters:boolean checkField(java.lang.Object,java.lang.Object)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void addAdditionalStoresFromAltNames(java.security.cert.X509Certificate,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:boolean equals(java.lang.Object,java.lang.Object)",
            "org.bouncycastle.util.Arrays:boolean areEqual(java.lang.Object[],java.lang.Object[])",
            "org.bouncycastle.x509.X509AttributeCertStoreSelector:boolean match(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.DERExternal:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.ocsp.ResponseData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.ocsp.TBSRequest:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.x500.X500Name:org.bouncycastle.asn1.x500.RDN[] getRDNs(org.bouncycastle.asn1.ASN1ObjectIdentifier)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x500.style.BCStyle:boolean areEqual(org.bouncycastle.asn1.x500.X500Name,org.bouncycastle.asn1.x500.X500Name)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x500.style.RFC4519Style:boolean areEqual(org.bouncycastle.asn1.x500.X500Name,org.bouncycastle.asn1.x500.X500Name)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x509.CertificatePolicies:org.bouncycastle.asn1.x509.PolicyInformation getPolicyInformation(org.bouncycastle.asn1.ASN1ObjectIdentifier)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.Extension:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.pkcs.PBES2Algorithms:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.x509.Extensions:boolean equivalent(org.bouncycastle.asn1.x509.Extensions)",
            "org.bouncycastle.asn1.x509.X509Extensions:boolean equivalent(org.bouncycastle.asn1.x509.X509Extensions)",
            "org.bouncycastle.asn1.x509.X509Name:java.util.Vector getValues(org.bouncycastle.asn1.ASN1ObjectIdentifier)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.BCGOST3410PrivateKey:boolean compareObj(java.lang.Object,java.lang.Object)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.Certificate readDERCertificate(org.bouncycastle.asn1.ASN1InputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.CRL readDERCRL(org.bouncycastle.asn1.ASN1InputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:boolean isAlgIdEqual(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.x509.AlgorithmIdentifier)",
            "org.bouncycastle.jce.X509LDAPCertStoreParameters:boolean checkField(java.lang.Object,java.lang.Object)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void addAdditionalStoresFromAltNames(java.security.cert.X509Certificate,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:boolean withinDNSubtree(org.bouncycastle.asn1.ASN1Sequence,org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:boolean equals(java.lang.Object,java.lang.Object)",
            "org.bouncycastle.jce.provider.X509AttrCertParser:org.bouncycastle.x509.X509AttributeCertificate readDERCertificate(java.io.InputStream)",
            "org.bouncycastle.jce.provider.X509CRLParser:java.security.cert.CRL readDERCRL(java.io.InputStream)",
            "org.bouncycastle.jce.provider.X509CertParser:java.security.cert.Certificate readDERCertificate(java.io.InputStream)",
            "org.bouncycastle.jce.provider.X509CertificateObject:boolean isAlgIdEqual(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.x509.AlgorithmIdentifier)",
            "org.bouncycastle.util.Arrays:boolean areEqual(java.lang.Object[],java.lang.Object[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean equals(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x509.X509Extension:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.x509.Extensions:boolean equivalent(org.bouncycastle.asn1.x509.Extensions)",
            "org.bouncycastle.asn1.x509.X509Extensions:boolean equivalent(org.bouncycastle.asn1.x509.X509Extensions)",
            "org.bouncycastle.asn1.x509.X509Name:java.util.Vector getValues(org.bouncycastle.asn1.ASN1ObjectIdentifier)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.BCGOST3410PrivateKey:boolean compareObj(java.lang.Object,java.lang.Object)",
            "org.bouncycastle.jce.X509LDAPCertStoreParameters:boolean checkField(java.lang.Object,java.lang.Object)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void addAdditionalStoresFromAltNames(java.security.cert.X509Certificate,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:boolean equals(java.lang.Object,java.lang.Object)",
            "org.bouncycastle.util.Arrays:boolean areEqual(java.lang.Object[],java.lang.Object[])"
        ]
    },
    "org.bouncycastle.asn1.x9.X9Curve:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dh.KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi:java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.jce.provider.BouncyCastleProvider:java.security.PrivateKey getPrivateKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.BouncyCastlePQCProvider:java.security.PrivateKey getPrivateKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSAUtil:boolean isDsaOid(org.bouncycastle.asn1.ASN1ObjectIdentifier)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.KeyFactorySpi:java.security.PublicKey generatePublic(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dstu.KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi:java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.jce.provider.BouncyCastleProvider:java.security.PrivateKey getPrivateKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.BouncyCastlePQCProvider:java.security.PrivateKey getPrivateKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dstu.KeyFactorySpi:java.security.PublicKey generatePublic(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi:java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec)",
            "org.bouncycastle.jce.provider.BouncyCastleProvider:java.security.PublicKey getPublicKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.BouncyCastlePQCProvider:java.security.PublicKey getPublicKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi:java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.jce.provider.BouncyCastleProvider:java.security.PrivateKey getPrivateKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.BouncyCastlePQCProvider:java.security.PrivateKey getPrivateKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi:java.security.PublicKey generatePublic(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi:java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec)",
            "org.bouncycastle.jce.provider.BouncyCastleProvider:java.security.PublicKey getPublicKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.BouncyCastlePQCProvider:java.security.PublicKey getPublicKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ecgost.KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi:java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.jce.provider.BouncyCastleProvider:java.security.PrivateKey getPrivateKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.BouncyCastlePQCProvider:java.security.PrivateKey getPrivateKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ecgost.KeyFactorySpi:java.security.PublicKey generatePublic(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi:java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec)",
            "org.bouncycastle.jce.provider.BouncyCastleProvider:java.security.PublicKey getPublicKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.BouncyCastlePQCProvider:java.security.PublicKey getPublicKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.elgamal.KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi:java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.jce.provider.BouncyCastleProvider:java.security.PrivateKey getPrivateKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.BouncyCastlePQCProvider:java.security.PrivateKey getPrivateKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.gost.KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi:java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.jce.provider.BouncyCastleProvider:java.security.PrivateKey getPrivateKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.BouncyCastlePQCProvider:java.security.PrivateKey getPrivateKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.rsa.RSAUtil:boolean isRsaOid(org.bouncycastle.asn1.ASN1ObjectIdentifier)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.KeyFactorySpi:java.security.PublicKey generatePublic(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:java.lang.String getDigestAlgName(org.bouncycastle.asn1.DERObjectIdentifier)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:java.lang.String getSignatureName(org.bouncycastle.asn1.x509.AlgorithmIdentifier)"
        ]
    },
    "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:java.security.PrivateKey unwrapKey(org.bouncycastle.asn1.x509.AlgorithmIdentifier,byte[],char[],boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])"
        ]
    },
    "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:byte[] cryptData(boolean,org.bouncycastle.asn1.x509.AlgorithmIdentifier,char[],boolean,byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void doStore(java.io.OutputStream,char[],boolean)"
        ]
    },
    "org.bouncycastle.jcajce.provider.symmetric.PBEPBKDF2$BasePBKDF2:int getDigestCode(org.bouncycastle.asn1.ASN1ObjectIdentifier)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.symmetric.PBEPBKDF2$BasePBKDF2:javax.crypto.SecretKey engineGenerateSecret(java.security.spec.KeySpec)"
        ]
    },
    "org.bouncycastle.jce.PKCS10CertificationRequest:java.lang.String getSignatureName(org.bouncycastle.asn1.x509.AlgorithmIdentifier)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.PKCS10CertificationRequest:boolean verify(java.security.PublicKey,java.lang.String)"
        ]
    },
    "org.bouncycastle.jce.PKCS10CertificationRequest:java.lang.String getDigestAlgName(org.bouncycastle.asn1.DERObjectIdentifier)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.PKCS10CertificationRequest:java.lang.String getSignatureName(org.bouncycastle.asn1.x509.AlgorithmIdentifier)"
        ]
    },
    "org.bouncycastle.jce.provider.JDKDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.JDKDSAPublicKey:void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)"
        ]
    },
    "org.bouncycastle.jce.provider.X509SignatureUtil:java.lang.String getDigestAlgName(org.bouncycastle.asn1.DERObjectIdentifier)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.X509SignatureUtil:java.lang.String getSignatureName(org.bouncycastle.asn1.x509.AlgorithmIdentifier)"
        ]
    },
    "org.bouncycastle.ocsp.CertificateID:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.x509.Extensions:boolean equivalent(org.bouncycastle.asn1.x509.Extensions)",
            "org.bouncycastle.asn1.x509.X509Extensions:boolean equivalent(org.bouncycastle.asn1.x509.X509Extensions)",
            "org.bouncycastle.asn1.x509.X509Name:java.util.Vector getValues(org.bouncycastle.asn1.ASN1ObjectIdentifier)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.BCGOST3410PrivateKey:boolean compareObj(java.lang.Object,java.lang.Object)",
            "org.bouncycastle.jce.X509LDAPCertStoreParameters:boolean checkField(java.lang.Object,java.lang.Object)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void addAdditionalStoresFromAltNames(java.security.cert.X509Certificate,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:boolean equals(java.lang.Object,java.lang.Object)",
            "org.bouncycastle.util.Arrays:boolean areEqual(java.lang.Object[],java.lang.Object[])"
        ]
    },
    "org.bouncycastle.x509.PKIXCertPathReviewer:java.util.Vector getOCSPUrls(org.bouncycastle.asn1.x509.AuthorityInformationAccess)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkSignatures()"
        ]
    },
    "org.bouncycastle.asn1.BERTaggedObject:void <init>(int,org.bouncycastle.asn1.ASN1Encodable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.ContentInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"
        ]
    },
    "org.bouncycastle.asn1.BERTaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1Primitive readTaggedObject(boolean,int)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.EncryptedData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignedData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.pkcs.ContentInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.pkcs.EncryptedData:void <init>(org.bouncycastle.asn1.ASN1ObjectIdentifier,org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)"
        ]
    },
    "org.bouncycastle.asn1.BERTaggedObject:void <init>(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.DERTaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1Primitive readTaggedObject(boolean,int)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive toDERObject()",
            "org.bouncycastle.asn1.DERExternal:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cmp.CMPCertificate:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cmp.CertOrEncCert:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cmp.CertRepMessage:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cmp.CertifiedKeyPair:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cmp.KeyRecRepContent:void addOptional(org.bouncycastle.asn1.ASN1EncodableVector,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.cmp.OOBCertHash:void addOptional(org.bouncycastle.asn1.ASN1EncodableVector,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.cmp.PKIBody:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cmp.PKIHeader:void addOptional(org.bouncycastle.asn1.ASN1EncodableVector,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.cmp.PKIHeaderBuilder:void addOptional(org.bouncycastle.asn1.ASN1EncodableVector,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.cmp.PKIMessage:void addOptional(org.bouncycastle.asn1.ASN1EncodableVector,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.cmp.RevRepContent:void addOptional(org.bouncycastle.asn1.ASN1EncodableVector,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.cmp.RevRepContentBuilder:org.bouncycastle.asn1.'cmp'.RevRepContent build()",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.AuthenticatedData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.EnvelopedData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.Evidence:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.KeyAgreeRecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.KeyAgreeRecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:void <init>(org.bouncycastle.asn1.x509.SubjectKeyIdentifier)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:void <init>(org.bouncycastle.asn1.cms.OriginatorPublicKey)",
            "org.bouncycastle.asn1.cms.OriginatorInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.PasswordRecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:void <init>(org.bouncycastle.asn1.ASN1OctetString)",
            "org.bouncycastle.asn1.cms.RecipientInfo:void <init>(org.bouncycastle.asn1.cms.KeyAgreeRecipientInfo)",
            "org.bouncycastle.asn1.cms.RecipientInfo:void <init>(org.bouncycastle.asn1.cms.KEKRecipientInfo)",
            "org.bouncycastle.asn1.cms.RecipientInfo:void <init>(org.bouncycastle.asn1.cms.PasswordRecipientInfo)",
            "org.bouncycastle.asn1.cms.RecipientInfo:void <init>(org.bouncycastle.asn1.cms.OtherRecipientInfo)",
            "org.bouncycastle.asn1.cms.SCVPReqRes:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignedData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:void <init>(org.bouncycastle.asn1.ASN1OctetString)",
            "org.bouncycastle.asn1.cms.SignerInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.ecc.MQVuserKeyingMaterial:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.crmf.CertTemplateBuilder:void addOptional(org.bouncycastle.asn1.ASN1EncodableVector,int,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.crmf.EncryptedKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.crmf.EncryptedValue:void addOptional(org.bouncycastle.asn1.ASN1EncodableVector,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.crmf.OptionalValidity:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.crmf.PKIArchiveOptions:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.crmf.POPOPrivKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.crmf.POPOSigningKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.crmf.POPOSigningKeyInput:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.crmf.ProofOfPossession:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.dvcs.CertEtcToken:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.dvcs.DVCSCertInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.dvcs.DVCSCertInfoBuilder:org.bouncycastle.asn1.dvcs.DVCSCertInfo build()",
            "org.bouncycastle.asn1.dvcs.DVCSRequestInformation:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.dvcs.DVCSRequestInformationBuilder:org.bouncycastle.asn1.dvcs.DVCSRequestInformation build()",
            "org.bouncycastle.asn1.dvcs.Data:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.dvcs.PathProcInput:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.dvcs.TargetEtcChain:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.eac.ECDSAPublicKey:org.bouncycastle.asn1.ASN1EncodableVector getASN1EncodableVector(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean)",
            "org.bouncycastle.asn1.eac.UnsignedInteger:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.esf.CrlOcspRef:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.esf.RevocationValues:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.esf.SignerLocation:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.isismtt.x509.Admissions:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.isismtt.x509.DeclarationOfMajority:void <init>(int)",
            "org.bouncycastle.asn1.isismtt.x509.DeclarationOfMajority:void <init>(boolean,java.lang.String)",
            "org.bouncycastle.asn1.isismtt.x509.DeclarationOfMajority:void <init>(org.bouncycastle.asn1.ASN1GeneralizedTime)",
            "org.bouncycastle.asn1.isismtt.x509.ProcurationSyntax:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.isismtt.x509.ProfessionInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.ocsp.BasicOCSPResponse:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.ocsp.CertStatus:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.ocsp.CrlID:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.ocsp.OCSPRequest:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.ocsp.OCSPResponse:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.ocsp.Request:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.ocsp.ResponderID:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.ocsp.ResponseData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.ocsp.RevokedInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.ocsp.Signature:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.ocsp.SingleResponse:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.ocsp.TBSRequest:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.pkcs.CertificationRequestInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.pkcs.RSAESOAEPparams:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.pkcs.RSASSAPSSparams:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.pkcs.SignedData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.pkcs.SignerInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.sec.ECPrivateKey:void <init>(java.math.BigInteger,org.bouncycastle.asn1.DERBitString,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.sec.ECPrivateKeyStructure:void <init>(java.math.BigInteger,org.bouncycastle.asn1.DERBitString,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.smime.SMIMEEncryptionKeyPreferenceAttribute:void <init>(org.bouncycastle.asn1.cms.IssuerAndSerialNumber)",
            "org.bouncycastle.asn1.smime.SMIMEEncryptionKeyPreferenceAttribute:void <init>(org.bouncycastle.asn1.cms.RecipientKeyIdentifier)",
            "org.bouncycastle.asn1.smime.SMIMEEncryptionKeyPreferenceAttribute:void <init>(org.bouncycastle.asn1.ASN1OctetString)",
            "org.bouncycastle.asn1.tsp.Accuracy:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.tsp.TSTInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.tsp.TimeStampReq:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.ua.DSTU4145ECBinary:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.V2Form)",
            "org.bouncycastle.asn1.x509.AuthorityKeyIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.DistributionPoint:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.DistributionPointName:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.GeneralName:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.GeneralSubtree:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.Holder:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.IssuingDistributionPoint:void <init>(org.bouncycastle.asn1.x509.DistributionPointName,boolean,boolean,org.bouncycastle.asn1.x509.ReasonFlags,boolean,boolean)",
            "org.bouncycastle.asn1.x509.NameConstraints:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.PrivateKeyUsagePeriod:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.RoleSyntax:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.Target:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.V1TBSCertificateGenerator:void <init>()",
            "org.bouncycastle.asn1.x509.V2Form:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.V3TBSCertificateGenerator:void <init>()",
            "org.bouncycastle.asn1.x509.V3TBSCertificateGenerator:org.bouncycastle.asn1.x509.TBSCertificate generateTBSCertificate()",
            "org.bouncycastle.asn1.x509.sigi.PersonalData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.crypto.agreement.kdf.DHKEKGenerator:int generateBytes(byte[],int,int)",
            "org.bouncycastle.crypto.agreement.kdf.ECDHKEKGenerator:int generateBytes(byte[],int,int)"
        ]
    },
    "org.bouncycastle.asn1.DERTaggedObject:void <init>(int,org.bouncycastle.asn1.ASN1Encodable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.dvcs.DVCSResponse:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.esf.SignerAttribute:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.isismtt.ocsp.RequestedCertificate:void <init>(int,byte[])",
            "org.bouncycastle.asn1.isismtt.ocsp.RequestedCertificate:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.pkcs.CRLBag:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.pkcs.CertBag:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.CertificatePair:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.DistributionPoint:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.IetfAttrSyntax:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.PolicyConstraints:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.TBSCertList:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.Target:void <init>(int,org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.asn1.x509.V2TBSCertListGenerator:org.bouncycastle.asn1.x509.TBSCertList generateTBSCertList()",
            "org.bouncycastle.asn1.x9.OtherInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"
        ]
    },
    "org.bouncycastle.asn1.DLTaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive toDLObject()",
            "org.bouncycastle.asn1.pkcs.SafeBag:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"
        ]
    },
    "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Encodable getObjectParser(int,boolean)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthenticatedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.EnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.OriginatorInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.SignedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.SignerInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.dvcs.DVCSCertInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.CertificationRequestInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.SignedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.SignerInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.DistributionPointName:void <init>(org.bouncycastle.asn1.ASN1TaggedObject)"
        ]
    },
    "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1TaggedObject getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.crmf.POPOPrivKey:org.bouncycastle.asn1.crmf.POPOPrivKey getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.x509.DistributionPointName:org.bouncycastle.asn1.x509.DistributionPointName getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.x509.GeneralName:org.bouncycastle.asn1.x509.GeneralName getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)"
        ]
    },
    "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Encodable getObjectParser(int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.cms.OriginatorInfo getOriginatorInfo()",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1SetParser getAuthAttrs()",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1SetParser getUnauthAttrs()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.cms.OriginatorInfo getOriginatorInfo()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1SetParser getAuthAttrs()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1SetParser getUnauthAttrs()",
            "org.bouncycastle.asn1.cms.ContentInfoParser:org.bouncycastle.asn1.ASN1Encodable getContent(int)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:org.bouncycastle.asn1.ASN1Encodable getEncryptedContent(int)",
            "org.bouncycastle.asn1.cms.EnvelopedDataParser:org.bouncycastle.asn1.cms.OriginatorInfo getOriginatorInfo()",
            "org.bouncycastle.asn1.cms.EnvelopedDataParser:org.bouncycastle.asn1.ASN1SetParser getUnprotectedAttrs()",
            "org.bouncycastle.asn1.cms.SignedDataParser:org.bouncycastle.asn1.ASN1SetParser getCertificates()",
            "org.bouncycastle.asn1.cms.SignedDataParser:org.bouncycastle.asn1.ASN1SetParser getCrls()"
        ]
    },
    "org.bouncycastle.asn1.DERBitString:org.bouncycastle.asn1.DERBitString getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.PKIMessage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.crmf.CertTemplate:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.crmf.EncryptedValue:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.crmf.POPOPrivKey:void <init>(org.bouncycastle.asn1.ASN1TaggedObject)",
            "org.bouncycastle.asn1.x509.DistributionPoint:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.IssuingDistributionPoint:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.TBSCertificate:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.TBSCertificateStructure:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.DERBoolean:org.bouncycastle.asn1.ASN1Boolean getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.crmf.PKIArchiveOptions:void <init>(org.bouncycastle.asn1.ASN1TaggedObject)",
            "org.bouncycastle.asn1.dvcs.PathProcInput:org.bouncycastle.asn1.dvcs.PathProcInput getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.IssuingDistributionPoint:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.DERExternal:void <init>(org.bouncycastle.asn1.ASN1EncodableVector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1InputStream:org.bouncycastle.asn1.ASN1Primitive buildObject(int,int,int)",
            "org.bouncycastle.asn1.DERExternalParser:org.bouncycastle.asn1.ASN1Primitive getLoadedObject()"
        ]
    },
    "org.bouncycastle.asn1.cmp.CMPCertificate:org.bouncycastle.asn1.'cmp'.CMPCertificate getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.CAKeyUpdAnnContent:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.CertOrEncCert:void <init>(org.bouncycastle.asn1.ASN1TaggedObject)",
            "org.bouncycastle.asn1.cmp.CertRepMessage:org.bouncycastle.asn1.'cmp'.CMPCertificate[] getCaPubs()",
            "org.bouncycastle.asn1.cmp.KeyRecRepContent:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.KeyRecRepContent:org.bouncycastle.asn1.'cmp'.CMPCertificate[] getCaCerts()",
            "org.bouncycastle.asn1.cmp.PKIBody:org.bouncycastle.asn1.ASN1Encodable getBodyForType(int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.cmp.PKIMessage:org.bouncycastle.asn1.'cmp'.CMPCertificate[] getExtraCerts()"
        ]
    },
    "org.bouncycastle.asn1.cmp.CertOrEncCert:void <init>(org.bouncycastle.asn1.ASN1TaggedObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.CertOrEncCert:org.bouncycastle.asn1.'cmp'.CertOrEncCert getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.cmp.PKIBody:void <init>(org.bouncycastle.asn1.ASN1TaggedObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.PKIBody:org.bouncycastle.asn1.'cmp'.PKIBody getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.cms.ContentInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.ContentInfo:org.bouncycastle.asn1.cms.ContentInfo getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.KeyAgreeRecipientInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.cms.Time:org.bouncycastle.asn1.cms.Time getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.crmf.PKIArchiveOptions:void <init>(org.bouncycastle.asn1.ASN1TaggedObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.crmf.PKIArchiveOptions:org.bouncycastle.asn1.crmf.PKIArchiveOptions getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.crmf.POPOSigningKey:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.crmf.POPOSigningKey:org.bouncycastle.asn1.crmf.POPOSigningKey getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.dvcs.CertEtcToken:void <init>(org.bouncycastle.asn1.ASN1TaggedObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.dvcs.CertEtcToken:org.bouncycastle.asn1.dvcs.CertEtcToken getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.dvcs.DVCSTime:org.bouncycastle.asn1.dvcs.DVCSTime getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.dvcs.Data:org.bouncycastle.asn1.dvcs.Data getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.isismtt.ocsp.RequestedCertificate:org.bouncycastle.asn1.isismtt.ocsp.RequestedCertificate getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.ocsp.CertStatus:org.bouncycastle.asn1.ocsp.CertStatus getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.ocsp.ResponderID:org.bouncycastle.asn1.ocsp.ResponderID getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.pkcs.CRLBag:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.pkcs.CRLBag:org.bouncycastle.asn1.pkcs.CRLBag getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.pkcs.CertBag:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.pkcs.CertBag:org.bouncycastle.asn1.pkcs.CertBag getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.pkcs.SafeBag:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.pkcs.SafeBag:org.bouncycastle.asn1.pkcs.SafeBag getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.x500.DirectoryString getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.esf.SignerLocation:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.isismtt.x509.ProcurationSyntax:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.sigi.PersonalData:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.x509.AttCertIssuer:org.bouncycastle.asn1.x509.AttCertIssuer getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.DisplayText:org.bouncycastle.asn1.x509.DisplayText getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.Time:org.bouncycastle.asn1.x509.Time getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.crmf.OptionalValidity:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.x509.X509Extensions:org.bouncycastle.asn1.x509.X509Extensions getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.TBSCertificateStructure:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Extensions:org.bouncycastle.asn1.x509.X509Extensions getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.x509.X509Extensions:org.bouncycastle.asn1.x509.X509Extensions getInstance(java.lang.Object)",
            "org.bouncycastle.ocsp.BasicOCSPResp:org.bouncycastle.asn1.x509.X509Extensions getResponseExtensions()",
            "org.bouncycastle.ocsp.OCSPReq:org.bouncycastle.asn1.x509.X509Extensions getRequestExtensions()",
            "org.bouncycastle.ocsp.Req:org.bouncycastle.asn1.x509.X509Extensions getSingleRequestExtensions()",
            "org.bouncycastle.ocsp.RespData:org.bouncycastle.asn1.x509.X509Extensions getResponseExtensions()",
            "org.bouncycastle.ocsp.SingleResp:org.bouncycastle.asn1.x509.X509Extensions getSingleExtensions()"
        ]
    },
    "org.bouncycastle.asn1.x9.X962Parameters:org.bouncycastle.asn1.x9.X962Parameters getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.LazyEncodedSequence:int encodedLength()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.LazyEncodedSequence:int encodedLength()"
        ]
    },
    "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(int,org.bouncycastle.asn1.ASN1Encodable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.eac.CVCertificate:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.eac.CVCertificateRequest:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.eac.CertificateBody:void <init>(org.bouncycastle.asn1.DERApplicationSpecific,org.bouncycastle.asn1.eac.CertificationAuthorityReference,org.bouncycastle.asn1.eac.PublicKeyDataObject,org.bouncycastle.asn1.eac.CertificateHolderReference,org.bouncycastle.asn1.eac.CertificateHolderAuthorization,org.bouncycastle.asn1.eac.PackedDate,org.bouncycastle.asn1.eac.PackedDate)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.eac.CertificateBody:org.bouncycastle.asn1.ASN1Primitive profileToASN1Object()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.eac.CertificateBody:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"
        ]
    },
    "org.bouncycastle.asn1.eac.CertificateBody:org.bouncycastle.asn1.ASN1Primitive requestToASN1Object()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.eac.CertificateBody:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"
        ]
    },
    "org.bouncycastle.asn1.x509.SubjectPublicKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.util.SubjectPublicKeyInfoFactory:org.bouncycastle.asn1.x509.SubjectPublicKeyInfo createSubjectPublicKeyInfo(org.bouncycastle.crypto.params.AsymmetricKeyParameter)",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey:byte[] getEncoded()",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey:byte[] getEncoded()",
            "org.bouncycastle.jcajce.provider.asymmetric.elgamal.BCElGamalPublicKey:byte[] getEncoded()",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.BCGOST3410PublicKey:byte[] getEncoded()",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedSubjectPublicKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.JCEECPublicKey:byte[] getEncoded()",
            "org.bouncycastle.jce.provider.JDKDSAPublicKey:byte[] getEncoded()",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PublicKey:byte[] getEncoded()",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcEliecePublicKey:byte[] getEncoded()",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedSubjectPublicKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)"
        ]
    },
    "org.bouncycastle.jce.PKCS10CertificationRequest:java.security.PublicKey getPublicKey(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.PKCS10CertificationRequest:java.security.PublicKey getPublicKey()",
            "org.bouncycastle.jce.PKCS10CertificationRequest:boolean verify(java.lang.String)"
        ]
    },
    "org.bouncycastle.jce.netscape.NetscapeCertRequest:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.netscape.NetscapeCertRequest:void <init>(byte[])"
        ]
    },
    "org.bouncycastle.asn1.DERSequence:int encodedLength()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.LazyEncodedSequence:int encodedLength()"
        ]
    },
    "org.bouncycastle.asn1.DERSet:int encodedLength()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.LazyEncodedSequence:int encodedLength()"
        ]
    },
    "org.bouncycastle.asn1.DLSequence:int encodedLength()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.LazyEncodedSequence:int encodedLength()"
        ]
    },
    "org.bouncycastle.asn1.DLSet:int encodedLength()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.LazyEncodedSequence:int encodedLength()"
        ]
    },
    "org.bouncycastle.asn1.cms.AuthEnvelopedData:org.bouncycastle.asn1.cms.AuthEnvelopedData getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:org.bouncycastle.asn1.cms.AuthEnvelopedData getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)"
        ]
    },
    "org.bouncycastle.asn1.cms.KeyTransRecipientInfo:void <init>(org.bouncycastle.asn1.cms.RecipientIdentifier,org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1OctetString)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.util.PrivateKeyInfoFactory:org.bouncycastle.asn1.pkcs.PrivateKeyInfo createPrivateKeyInfo(org.bouncycastle.crypto.params.AsymmetricKeyParameter)",
            "org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey:byte[] getEncoded()",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey:byte[] getEncoded()",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey:byte[] getEncoded()",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:byte[] getEncoded()",
            "org.bouncycastle.jcajce.provider.asymmetric.elgamal.BCElGamalPrivateKey:byte[] getEncoded()",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.BCGOST3410PrivateKey:byte[] getEncoded()",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.ECKeyUtil:java.security.PrivateKey privateToExplicitParameters(java.security.PrivateKey,java.security.Provider)",
            "org.bouncycastle.jce.provider.JCEDHPrivateKey:byte[] getEncoded()",
            "org.bouncycastle.jce.provider.JCEECPrivateKey:byte[] getEncoded()",
            "org.bouncycastle.jce.provider.JDKDSAPrivateKey:byte[] getEncoded()",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PrivateKey:byte[] getEncoded()",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey:byte[] getEncoded()",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.BCRainbowPrivateKey:byte[] getEncoded()",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)"
        ]
    },
    "org.bouncycastle.asn1.isismtt.x509.AdditionalInformationSyntax:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.isismtt.x509.Restriction:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.x509.sigi.NameOrPseudonym:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.x509.AttCertIssuer:org.bouncycastle.asn1.x509.AttCertIssuer getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.AttCertIssuer:org.bouncycastle.asn1.x509.AttCertIssuer getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.x509.AttributeCertificateInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object clone()",
            "org.bouncycastle.x509.X509V2AttributeCertificateGenerator:void setIssuer(org.bouncycastle.x509.AttributeCertificateIssuer)"
        ]
    },
    "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.DERObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.X509V2AttributeCertificateGenerator:void addExtension(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Encodable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.X509V2CRLGenerator:void addExtension(org.bouncycastle.asn1.DERObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.X509V2CRLGenerator:void addExtension(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Encodable)"
        ]
    },
    "org.bouncycastle.x509.X509V3CertificateGenerator:void addExtension(org.bouncycastle.asn1.DERObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.examples.PKCS12Example:java.security.cert.Certificate createIntermediateCert(java.security.PublicKey,java.security.PrivateKey,java.security.cert.X509Certificate)",
            "org.bouncycastle.jce.examples.PKCS12Example:java.security.cert.Certificate createCert(java.security.PublicKey,java.security.PrivateKey,java.security.PublicKey)",
            "org.bouncycastle.x509.X509V3CertificateGenerator:void addExtension(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.examples.AttrCertExample:java.security.cert.X509Certificate createClientCert(java.security.PublicKey,java.security.PrivateKey,java.security.PublicKey)"
        ]
    },
    "org.bouncycastle.jce.provider.CertPathValidatorUtilities:boolean isSelfIssued(java.security.cert.X509Certificate)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCertBC(java.security.cert.CertPath,int,org.bouncycastle.jce.provider.PKIXNameConstraintValidator)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:org.bouncycastle.jce.provider.PKIXPolicyNode processCertD(java.security.cert.CertPath,int,java.util.Set,org.bouncycastle.jce.provider.PKIXPolicyNode,java.util.List[],int)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:int prepareNextCertL(java.security.cert.CertPath,int,int)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:int prepareNextCertH1(java.security.cert.CertPath,int,int)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:int prepareNextCertH2(java.security.cert.CertPath,int,int)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:int prepareNextCertH3(java.security.cert.CertPath,int,int)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:int wrapupCertA(int,java.security.cert.X509Certificate)",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkNameConstraints()",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkPathLength()",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkSignatures()",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkPolicy()"
        ]
    },
    "org.bouncycastle.asn1.x9.DHDomainParameters:org.bouncycastle.asn1.x9.DHDomainParameters getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.DHDomainParameters:org.bouncycastle.asn1.x9.DHDomainParameters getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey:void <init>(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey:void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jce.provider.JCEDHPrivateKey:void <init>(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jce.provider.JCEDHPublicKey:void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void <init>(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPrivateKey:byte[] getEncoded()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil:org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePrivateKeyParameter(java.security.PrivateKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.KeyFactory:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi:void encodeKey(java.security.Key,java.io.DataOutputStream)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineInit(java.security.Key,java.security.spec.AlgorithmParameterSpec)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.ECKeyUtil:java.security.PrivateKey privateToExplicitParameters(java.security.PrivateKey,java.security.Provider)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.rsa.BCRSAPrivateCrtKey:byte[] getEncoded()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil:org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePrivateKeyParameter(java.security.PrivateKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.KeyFactory:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi:void encodeKey(java.security.Key,java.io.DataOutputStream)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineInit(java.security.Key,java.security.spec.AlgorithmParameterSpec)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.ECKeyUtil:java.security.PrivateKey privateToExplicitParameters(java.security.PrivateKey,java.security.Provider)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.rsa.BCRSAPrivateKey:byte[] getEncoded()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil:org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePrivateKeyParameter(java.security.PrivateKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.KeyFactory:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi:void encodeKey(java.security.Key,java.io.DataOutputStream)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineInit(java.security.Key,java.security.spec.AlgorithmParameterSpec)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.ECKeyUtil:java.security.PrivateKey privateToExplicitParameters(java.security.PrivateKey,java.security.Provider)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)"
        ]
    },
    "org.bouncycastle.jce.provider.JCEElGamalPrivateKey:byte[] getEncoded()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil:org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePrivateKeyParameter(java.security.PrivateKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.KeyFactory:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi:void encodeKey(java.security.Key,java.io.DataOutputStream)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineInit(java.security.Key,java.security.spec.AlgorithmParameterSpec)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.ECKeyUtil:java.security.PrivateKey privateToExplicitParameters(java.security.PrivateKey,java.security.Provider)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)"
        ]
    },
    "org.bouncycastle.jce.provider.JCERSAPrivateCrtKey:byte[] getEncoded()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil:org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePrivateKeyParameter(java.security.PrivateKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.KeyFactory:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi:void encodeKey(java.security.Key,java.io.DataOutputStream)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineInit(java.security.Key,java.security.spec.AlgorithmParameterSpec)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.ECKeyUtil:java.security.PrivateKey privateToExplicitParameters(java.security.PrivateKey,java.security.Provider)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)"
        ]
    },
    "org.bouncycastle.jce.provider.JCERSAPrivateKey:byte[] getEncoded()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil:org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePrivateKeyParameter(java.security.PrivateKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.KeyFactory:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi:void encodeKey(java.security.Key,java.io.DataOutputStream)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineInit(java.security.Key,java.security.spec.AlgorithmParameterSpec)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.ECKeyUtil:java.security.PrivateKey privateToExplicitParameters(java.security.PrivateKey,java.security.Provider)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.CRL createCRL(org.bouncycastle.asn1.x509.CertificateList)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.CRL readPEMCRL(java.io.InputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.CRL readDERCRL(org.bouncycastle.asn1.ASN1InputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.CRL getCRL()"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:void checkSignature(java.security.PublicKey,java.security.Signature)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:void verify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:void verify(java.security.PublicKey,java.lang.String)"
        ]
    },
    "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void intersectPermittedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void intersectPermittedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void prepareNextCertG(java.security.cert.CertPath,int,org.bouncycastle.jce.provider.PKIXNameConstraintValidator)",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkNameConstraints()"
        ]
    },
    "org.bouncycastle.jce.provider.X509CRLParser:java.security.cert.CRL getCRL()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.X509CRLParser:java.security.cert.CRL readDERCRL(java.io.InputStream)",
            "org.bouncycastle.jce.provider.X509CRLParser:java.lang.Object engineRead()"
        ]
    },
    "org.bouncycastle.x509.X509V2CRLGenerator:java.security.cert.X509CRL generateJcaObject(org.bouncycastle.asn1.x509.TBSCertList,byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.X509V2CRLGenerator:java.security.cert.X509CRL generate(java.security.PrivateKey,java.security.SecureRandom)",
            "org.bouncycastle.x509.X509V2CRLGenerator:java.security.cert.X509CRL generate(java.security.PrivateKey,java.lang.String,java.security.SecureRandom)"
        ]
    },
    "org.bouncycastle.jce.provider.X509CertificateObject:void checkSignature(java.security.PublicKey,java.security.Signature)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.X509CertificateObject:void verify(java.security.PublicKey)",
            "org.bouncycastle.jce.provider.X509CertificateObject:void verify(java.security.PublicKey,java.lang.String)"
        ]
    },
    "org.bouncycastle.x509.AttributeCertificateHolder:java.security.Principal[] getPrincipals(org.bouncycastle.asn1.x509.GeneralNames)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.AttributeCertificateHolder:java.security.Principal[] getEntityNames()",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.security.Principal[] getIssuer()"
        ]
    },
    "org.bouncycastle.x509.AttributeCertificateIssuer:java.security.Principal[] getPrincipals()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:javax.security.auth.x500.X500Principal getEncodedIssuerPrincipal(java.lang.Object)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:java.util.Set getCompleteCRLs(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.util.Date,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXAttrCertPathBuilderSpi:java.security.cert.CertPathBuilderResult engineBuild(java.security.cert.CertPathParameters)",
            "org.bouncycastle.jce.provider.RFC3281CertPathUtilities:void checkCRLs(org.bouncycastle.x509.X509AttributeCertificate,org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.util.List)",
            "org.bouncycastle.x509.examples.AttrCertExample:void main(java.lang.String[])",
            "org.bouncycastle.x509.util.LDAPStoreHelper:java.util.List cRLIssuerSearch(org.bouncycastle.x509.X509CRLStoreSelector,java.lang.String[],java.lang.String[],java.lang.String[])"
        ]
    },
    "org.bouncycastle.x509.X509V1CertificateGenerator:java.security.cert.X509Certificate generate(java.security.PrivateKey,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.X509V1CertificateGenerator:java.security.cert.X509Certificate generate(java.security.PrivateKey)"
        ]
    },
    "org.bouncycastle.x509.X509V2CRLGenerator:java.security.cert.X509CRL generate(java.security.PrivateKey,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.X509V2CRLGenerator:java.security.cert.X509CRL generate(java.security.PrivateKey)"
        ]
    },
    "org.bouncycastle.x509.X509V3CertificateGenerator:java.security.cert.X509Certificate generate(java.security.PrivateKey,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.X509V3CertificateGenerator:java.security.cert.X509Certificate generate(java.security.PrivateKey)"
        ]
    },
    "org.bouncycastle.x509.X509V1CertificateGenerator:java.security.cert.X509Certificate generate(java.security.PrivateKey,java.lang.String,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.X509V1CertificateGenerator:java.security.cert.X509Certificate generateX509Certificate(java.security.PrivateKey,java.lang.String,java.security.SecureRandom)",
            "org.bouncycastle.x509.X509V1CertificateGenerator:java.security.cert.X509Certificate generate(java.security.PrivateKey,java.lang.String)"
        ]
    },
    "org.bouncycastle.x509.X509V2AttributeCertificateGenerator:org.bouncycastle.x509.X509AttributeCertificate generate(java.security.PrivateKey,java.lang.String,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.X509V2AttributeCertificateGenerator:org.bouncycastle.x509.X509AttributeCertificate generateCertificate(java.security.PrivateKey,java.lang.String,java.security.SecureRandom)",
            "org.bouncycastle.x509.X509V2AttributeCertificateGenerator:org.bouncycastle.x509.X509AttributeCertificate generate(java.security.PrivateKey,java.lang.String)"
        ]
    },
    "org.bouncycastle.x509.X509V2CRLGenerator:java.security.cert.X509CRL generate(java.security.PrivateKey,java.lang.String,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.X509V2CRLGenerator:java.security.cert.X509CRL generateX509CRL(java.security.PrivateKey,java.lang.String,java.security.SecureRandom)",
            "org.bouncycastle.x509.X509V2CRLGenerator:java.security.cert.X509CRL generate(java.security.PrivateKey,java.lang.String)"
        ]
    },
    "org.bouncycastle.x509.X509V3CertificateGenerator:java.security.cert.X509Certificate generate(java.security.PrivateKey,java.lang.String,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.X509V3CertificateGenerator:java.security.cert.X509Certificate generateX509Certificate(java.security.PrivateKey,java.lang.String,java.security.SecureRandom)",
            "org.bouncycastle.x509.X509V3CertificateGenerator:java.security.cert.X509Certificate generate(java.security.PrivateKey,java.lang.String)"
        ]
    },
    "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getIssuerAlternativeNames(java.security.cert.X509Certificate)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getSubjectAlternativeNames(java.security.cert.X509Certificate)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Primitive)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)"
        ]
    },
    "org.bouncycastle.asn1.x509.V2TBSCertListGenerator:void addCRLEntry(org.bouncycastle.asn1.ASN1Integer,org.bouncycastle.asn1.x509.Time,int,org.bouncycastle.asn1.ASN1GeneralizedTime)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.V2TBSCertListGenerator:void addCRLEntry(org.bouncycastle.asn1.ASN1Integer,org.bouncycastle.asn1.x509.Time,int)",
            "org.bouncycastle.x509.X509V2CRLGenerator:void addCRLEntry(java.math.BigInteger,java.util.Date,int,java.util.Date)"
        ]
    },
    "org.bouncycastle.asn1.x509.V2TBSCertListGenerator:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.V2TBSCertListGenerator:void addCRLEntry(org.bouncycastle.asn1.ASN1Integer,org.bouncycastle.asn1.x509.Time,int,org.bouncycastle.asn1.ASN1GeneralizedTime)",
            "org.bouncycastle.asn1.x509.V2TBSCertListGenerator:void <clinit>()",
            "org.bouncycastle.x509.X509V2CRLGenerator:void <init>()",
            "org.bouncycastle.x509.X509V2CRLGenerator:void reset()"
        ]
    },
    "org.bouncycastle.jce.provider.CertPathValidatorUtilities:javax.security.auth.x500.X500Principal getIssuerPrincipal(java.security.cert.X509CRL)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCertStatus(java.util.Date,java.security.cert.X509CRL,java.lang.Object,org.bouncycastle.jce.provider.CertStatus)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:java.util.Set getDeltaCRLs(java.util.Date,org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:java.util.Set processCRLF(java.security.cert.X509CRL,java.lang.Object,java.security.cert.X509Certificate,java.security.PublicKey,org.bouncycastle.x509.ExtendedPKIXParameters,java.util.List)",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkCRLs(java.security.cert.PKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,java.util.Vector,int)"
        ]
    },
    "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:java.util.Set[] processCRLA1ii(java.util.Date,org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.X509Certificate,java.security.cert.X509CRL)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:java.util.Collection getSubjectAlternativeNames()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:java.util.Collection getIssuerAlternativeNames()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void addAdditionalStoresFromAltNames(java.security.cert.X509Certificate,org.bouncycastle.x509.ExtendedPKIXParameters)"
        ]
    },
    "org.bouncycastle.jcajce.provider.symmetric.IDEA$AlgParams:byte[] engineGetEncoded()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.symmetric.util.IvAlgorithmParameters:byte[] engineGetEncoded()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.provider.X509CertificateObject:java.util.Collection getSubjectAlternativeNames()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.provider.X509CertificateObject:java.util.Collection getIssuerAlternativeNames()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void addAdditionalStoresFromAltNames(java.security.cert.X509Certificate,org.bouncycastle.x509.ExtendedPKIXParameters)"
        ]
    },
    "org.bouncycastle.ocsp.OCSPRespGenerator:org.bouncycastle.ocsp.OCSPResp generate(int,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil:org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePrivateKeyParameter(java.security.PrivateKey)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpi:void engineInitSign(java.security.PrivateKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.IESCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyAgreementSpi:void initFromKey(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi:void engineInitSign(java.security.PrivateKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.SignatureSpi:void engineInitSign(java.security.PrivateKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.SignatureSpi:void engineInitSign(java.security.PrivateKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.ies.CipherSpi:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil:org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePrivateKeyParameter(java.security.PrivateKey)"
        ]
    },
    "org.bouncycastle.x509.extension.SubjectKeyIdentifierStructure:org.bouncycastle.asn1.ASN1OctetString fromPublicKey(java.security.PublicKey)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.extension.SubjectKeyIdentifierStructure:void <init>(java.security.PublicKey)"
        ]
    },
    "org.bouncycastle.x509.X509V2AttributeCertificate:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.x509.Extensions:boolean equivalent(org.bouncycastle.asn1.x509.Extensions)",
            "org.bouncycastle.asn1.x509.X509Extensions:boolean equivalent(org.bouncycastle.asn1.x509.X509Extensions)",
            "org.bouncycastle.asn1.x509.X509Name:java.util.Vector getValues(org.bouncycastle.asn1.ASN1ObjectIdentifier)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.BCGOST3410PrivateKey:boolean compareObj(java.lang.Object,java.lang.Object)",
            "org.bouncycastle.jce.X509LDAPCertStoreParameters:boolean checkField(java.lang.Object,java.lang.Object)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void addAdditionalStoresFromAltNames(java.security.cert.X509Certificate,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:boolean equals(java.lang.Object,java.lang.Object)",
            "org.bouncycastle.util.Arrays:boolean areEqual(java.lang.Object[],java.lang.Object[])",
            "org.bouncycastle.x509.X509AttributeCertStoreSelector:boolean match(java.lang.Object)"
        ]
    },
    "org.bouncycastle.x509.X509V2AttributeCertificate:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.X509Name:int hashCode()",
            "org.bouncycastle.jce.X509LDAPCertStoreParameters:int addHashCode(int,java.lang.Object)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:int hashCollection(java.util.Collection)",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Matrix:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Vector:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2mVector:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.Permutation:int hashCode()",
            "org.bouncycastle.util.Arrays:int hashCode(java.lang.Object[])"
        ]
    },
    "org.bouncycastle.asn1.ASN1Set:void <init>(org.bouncycastle.asn1.ASN1EncodableVector,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.BERSet:void <init>(org.bouncycastle.asn1.ASN1EncodableVector)",
            "org.bouncycastle.asn1.DERSet:void <init>(org.bouncycastle.asn1.ASN1EncodableVector)",
            "org.bouncycastle.asn1.DERSet:void <init>(org.bouncycastle.asn1.ASN1EncodableVector,boolean)",
            "org.bouncycastle.asn1.DLSet:void <init>(org.bouncycastle.asn1.ASN1EncodableVector)"
        ]
    },
    "org.bouncycastle.asn1.ASN1Set:void <init>(org.bouncycastle.asn1.ASN1Encodable[],boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.BERSet:void <init>(org.bouncycastle.asn1.ASN1Encodable[])",
            "org.bouncycastle.asn1.DERSet:void <init>(org.bouncycastle.asn1.ASN1Encodable[])",
            "org.bouncycastle.asn1.DLSet:void <init>(org.bouncycastle.asn1.ASN1Encodable[])"
        ]
    },
    "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Primitive toDERObject()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)"
        ]
    },
    "org.bouncycastle.asn1.x509.RoleSyntax:void <init>(org.bouncycastle.asn1.x509.GeneralName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.RoleSyntax:void <init>(java.lang.String)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.CertPath engineGenerateCertPath(java.util.List)"
        ]
    },
    "org.bouncycastle.x509.AttributeCertificateIssuer:boolean match(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi:java.security.cert.CertPathValidatorResult engineValidate(java.security.cert.CertPath,java.security.cert.CertPathParameters)",
            "org.bouncycastle.util.CollectionStore:java.util.Collection getMatches(org.bouncycastle.util.Selector)"
        ]
    },
    "org.bouncycastle.x509.PKIXCertPathReviewer:void checkRevocation(java.security.cert.PKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,java.util.Vector,java.util.Vector,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkSignatures()"
        ]
    },
    "org.bouncycastle.x509.util.LDAPStoreHelper:java.util.List cRLIssuerSearch(org.bouncycastle.x509.X509CRLStoreSelector,java.lang.String[],java.lang.String[],java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.util.LDAPStoreHelper:java.util.Collection getAuthorityRevocationLists(org.bouncycastle.x509.X509CRLStoreSelector)",
            "org.bouncycastle.x509.util.LDAPStoreHelper:java.util.Collection getAttributeCertificateRevocationLists(org.bouncycastle.x509.X509CRLStoreSelector)",
            "org.bouncycastle.x509.util.LDAPStoreHelper:java.util.Collection getAttributeAuthorityRevocationLists(org.bouncycastle.x509.X509CRLStoreSelector)",
            "org.bouncycastle.x509.util.LDAPStoreHelper:java.util.Collection getDeltaCertificateRevocationLists(org.bouncycastle.x509.X509CRLStoreSelector)",
            "org.bouncycastle.x509.util.LDAPStoreHelper:java.util.Collection getCertificateRevocationLists(org.bouncycastle.x509.X509CRLStoreSelector)"
        ]
    },
    "org.bouncycastle.jce.provider.X509LDAPCertStoreSpi:java.util.Set getEndCertificates(java.security.cert.X509CertSelector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.X509LDAPCertStoreSpi:java.util.Collection engineGetCertificates(java.security.cert.CertSelector)"
        ]
    },
    "org.bouncycastle.jce.provider.X509LDAPCertStoreSpi:java.util.Set getCACertificates(java.security.cert.X509CertSelector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.X509LDAPCertStoreSpi:java.util.Collection engineGetCertificates(java.security.cert.CertSelector)"
        ]
    },
    "org.bouncycastle.jce.provider.X509LDAPCertStoreSpi:java.util.Set getCrossCertificates(java.security.cert.X509CertSelector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.X509LDAPCertStoreSpi:java.util.Collection engineGetCertificates(java.security.cert.CertSelector)"
        ]
    },
    "org.bouncycastle.ocsp.OCSPReqGenerator:org.bouncycastle.ocsp.OCSPReq generate(java.lang.String,java.security.PrivateKey,java.security.cert.X509Certificate[],java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.BERApplicationSpecific:void <init>(int,org.bouncycastle.asn1.ASN1EncodableVector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.BERApplicationSpecificParser:org.bouncycastle.asn1.ASN1Primitive getLoadedObject()"
        ]
    },
    "org.bouncycastle.asn1.eac.CertificateHolderAuthorization:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dh.AlgorithmParametersSpi:byte[] engineGetEncoded(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dsa.AlgorithmParametersSpi:byte[] engineGetEncoded(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey:void writeObject(java.io.ObjectOutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey:void writeObject(java.io.ObjectOutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void writeObject(java.io.ObjectOutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.elgamal.AlgorithmParametersSpi:byte[] engineGetEncoded(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.gost.AlgorithmParametersSpi:byte[] engineGetEncoded(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ies.AlgorithmParametersSpi:byte[] engineGetEncoded(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.rsa.AlgorithmParametersSpi$OAEP:byte[] engineGetEncoded(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.rsa.AlgorithmParametersSpi$PSS:byte[] engineGetEncoded(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey:byte[] getEncoded()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil:org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePublicKeyParameter(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.KeyFactory:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi:void encodeKey(java.security.Key,java.io.DataOutputStream)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:org.bouncycastle.asn1.x509.SubjectKeyIdentifier createSubjectKeyId(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineInit(java.security.Key,java.security.spec.AlgorithmParameterSpec)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.ECKeyUtil:java.security.PublicKey publicToExplicitParameters(java.security.PublicKey,java.security.Provider)",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void <init>(java.lang.String,org.bouncycastle.asn1.x509.X509Name,java.security.PublicKey,org.bouncycastle.asn1.ASN1Set,java.security.PrivateKey,java.lang.String)",
            "org.bouncycastle.jce.netscape.NetscapeCertRequest:org.bouncycastle.asn1.ASN1Primitive getKeySpec()",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier(java.security.PublicKey)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.ocsp.CertificateID:org.bouncycastle.asn1.ocsp.CertID createCertID(org.bouncycastle.asn1.x509.AlgorithmIdentifier,java.security.cert.X509Certificate,org.bouncycastle.asn1.ASN1Integer,java.lang.String)",
            "org.bouncycastle.ocsp.RespID:void <init>(java.security.PublicKey)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean match(java.security.cert.Certificate)",
            "org.bouncycastle.x509.X509V1CertificateGenerator:void setPublicKey(java.security.PublicKey)",
            "org.bouncycastle.x509.X509V3CertificateGenerator:void setPublicKey(java.security.PublicKey)",
            "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure:org.bouncycastle.asn1.ASN1Sequence fromCertificate(java.security.cert.X509Certificate)",
            "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure:org.bouncycastle.asn1.ASN1Sequence fromKey(java.security.PublicKey)",
            "org.bouncycastle.x509.extension.SubjectKeyIdentifierStructure:org.bouncycastle.asn1.ASN1OctetString fromPublicKey(java.security.PublicKey)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey:byte[] getEncoded()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey:org.bouncycastle.asn1.DERBitString getPublicKeyDetails(org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey:void writeObject(java.io.ObjectOutputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil:org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePublicKeyParameter(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.KeyFactory:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi:void encodeKey(java.security.Key,java.io.DataOutputStream)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:org.bouncycastle.asn1.x509.SubjectKeyIdentifier createSubjectKeyId(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineInit(java.security.Key,java.security.spec.AlgorithmParameterSpec)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.ECKeyUtil:java.security.PublicKey publicToExplicitParameters(java.security.PublicKey,java.security.Provider)",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void <init>(java.lang.String,org.bouncycastle.asn1.x509.X509Name,java.security.PublicKey,org.bouncycastle.asn1.ASN1Set,java.security.PrivateKey,java.lang.String)",
            "org.bouncycastle.jce.netscape.NetscapeCertRequest:org.bouncycastle.asn1.ASN1Primitive getKeySpec()",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier(java.security.PublicKey)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.ocsp.CertificateID:org.bouncycastle.asn1.ocsp.CertID createCertID(org.bouncycastle.asn1.x509.AlgorithmIdentifier,java.security.cert.X509Certificate,org.bouncycastle.asn1.ASN1Integer,java.lang.String)",
            "org.bouncycastle.ocsp.RespID:void <init>(java.security.PublicKey)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean match(java.security.cert.Certificate)",
            "org.bouncycastle.x509.X509V1CertificateGenerator:void setPublicKey(java.security.PublicKey)",
            "org.bouncycastle.x509.X509V3CertificateGenerator:void setPublicKey(java.security.PublicKey)",
            "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure:org.bouncycastle.asn1.ASN1Sequence fromCertificate(java.security.cert.X509Certificate)",
            "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure:org.bouncycastle.asn1.ASN1Sequence fromKey(java.security.PublicKey)",
            "org.bouncycastle.x509.extension.SubjectKeyIdentifierStructure:org.bouncycastle.asn1.ASN1OctetString fromPublicKey(java.security.PublicKey)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey:byte[] getEncoded()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey:org.bouncycastle.asn1.DERBitString getPublicKeyDetails(org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey:void writeObject(java.io.ObjectOutputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil:org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePublicKeyParameter(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.KeyFactory:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi:void encodeKey(java.security.Key,java.io.DataOutputStream)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:org.bouncycastle.asn1.x509.SubjectKeyIdentifier createSubjectKeyId(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineInit(java.security.Key,java.security.spec.AlgorithmParameterSpec)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.ECKeyUtil:java.security.PublicKey publicToExplicitParameters(java.security.PublicKey,java.security.Provider)",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void <init>(java.lang.String,org.bouncycastle.asn1.x509.X509Name,java.security.PublicKey,org.bouncycastle.asn1.ASN1Set,java.security.PrivateKey,java.lang.String)",
            "org.bouncycastle.jce.netscape.NetscapeCertRequest:org.bouncycastle.asn1.ASN1Primitive getKeySpec()",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier(java.security.PublicKey)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.ocsp.CertificateID:org.bouncycastle.asn1.ocsp.CertID createCertID(org.bouncycastle.asn1.x509.AlgorithmIdentifier,java.security.cert.X509Certificate,org.bouncycastle.asn1.ASN1Integer,java.lang.String)",
            "org.bouncycastle.ocsp.RespID:void <init>(java.security.PublicKey)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean match(java.security.cert.Certificate)",
            "org.bouncycastle.x509.X509V1CertificateGenerator:void setPublicKey(java.security.PublicKey)",
            "org.bouncycastle.x509.X509V3CertificateGenerator:void setPublicKey(java.security.PublicKey)",
            "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure:org.bouncycastle.asn1.ASN1Sequence fromCertificate(java.security.cert.X509Certificate)",
            "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure:org.bouncycastle.asn1.ASN1Sequence fromKey(java.security.PublicKey)",
            "org.bouncycastle.x509.extension.SubjectKeyIdentifierStructure:org.bouncycastle.asn1.ASN1OctetString fromPublicKey(java.security.PublicKey)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey:byte[] getEncoded()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:org.bouncycastle.asn1.DERBitString getPublicKeyDetails(org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey:void writeObject(java.io.ObjectOutputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil:org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePublicKeyParameter(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.KeyFactory:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi:void encodeKey(java.security.Key,java.io.DataOutputStream)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:org.bouncycastle.asn1.x509.SubjectKeyIdentifier createSubjectKeyId(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineInit(java.security.Key,java.security.spec.AlgorithmParameterSpec)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.ECKeyUtil:java.security.PublicKey publicToExplicitParameters(java.security.PublicKey,java.security.Provider)",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void <init>(java.lang.String,org.bouncycastle.asn1.x509.X509Name,java.security.PublicKey,org.bouncycastle.asn1.ASN1Set,java.security.PrivateKey,java.lang.String)",
            "org.bouncycastle.jce.netscape.NetscapeCertRequest:org.bouncycastle.asn1.ASN1Primitive getKeySpec()",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier(java.security.PublicKey)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.ocsp.CertificateID:org.bouncycastle.asn1.ocsp.CertID createCertID(org.bouncycastle.asn1.x509.AlgorithmIdentifier,java.security.cert.X509Certificate,org.bouncycastle.asn1.ASN1Integer,java.lang.String)",
            "org.bouncycastle.ocsp.RespID:void <init>(java.security.PublicKey)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean match(java.security.cert.Certificate)",
            "org.bouncycastle.x509.X509V1CertificateGenerator:void setPublicKey(java.security.PublicKey)",
            "org.bouncycastle.x509.X509V3CertificateGenerator:void setPublicKey(java.security.PublicKey)",
            "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure:org.bouncycastle.asn1.ASN1Sequence fromCertificate(java.security.cert.X509Certificate)",
            "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure:org.bouncycastle.asn1.ASN1Sequence fromKey(java.security.PublicKey)",
            "org.bouncycastle.x509.extension.SubjectKeyIdentifierStructure:org.bouncycastle.asn1.ASN1OctetString fromPublicKey(java.security.PublicKey)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.gost.BCGOST3410PublicKey:byte[] getEncoded()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil:org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePublicKeyParameter(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.KeyFactory:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi:void encodeKey(java.security.Key,java.io.DataOutputStream)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:org.bouncycastle.asn1.x509.SubjectKeyIdentifier createSubjectKeyId(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineInit(java.security.Key,java.security.spec.AlgorithmParameterSpec)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.ECKeyUtil:java.security.PublicKey publicToExplicitParameters(java.security.PublicKey,java.security.Provider)",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void <init>(java.lang.String,org.bouncycastle.asn1.x509.X509Name,java.security.PublicKey,org.bouncycastle.asn1.ASN1Set,java.security.PrivateKey,java.lang.String)",
            "org.bouncycastle.jce.netscape.NetscapeCertRequest:org.bouncycastle.asn1.ASN1Primitive getKeySpec()",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier(java.security.PublicKey)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.ocsp.CertificateID:org.bouncycastle.asn1.ocsp.CertID createCertID(org.bouncycastle.asn1.x509.AlgorithmIdentifier,java.security.cert.X509Certificate,org.bouncycastle.asn1.ASN1Integer,java.lang.String)",
            "org.bouncycastle.ocsp.RespID:void <init>(java.security.PublicKey)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean match(java.security.cert.Certificate)",
            "org.bouncycastle.x509.X509V1CertificateGenerator:void setPublicKey(java.security.PublicKey)",
            "org.bouncycastle.x509.X509V3CertificateGenerator:void setPublicKey(java.security.PublicKey)",
            "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure:org.bouncycastle.asn1.ASN1Sequence fromCertificate(java.security.cert.X509Certificate)",
            "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure:org.bouncycastle.asn1.ASN1Sequence fromKey(java.security.PublicKey)",
            "org.bouncycastle.x509.extension.SubjectKeyIdentifierStructure:org.bouncycastle.asn1.ASN1OctetString fromPublicKey(java.security.PublicKey)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedSubjectPublicKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey:byte[] getEncoded()",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:byte[] getEncoded()",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.BCRSAPublicKey:byte[] getEncoded()",
            "org.bouncycastle.jce.provider.JCEDHPublicKey:byte[] getEncoded()",
            "org.bouncycastle.jce.provider.JCEElGamalPublicKey:byte[] getEncoded()",
            "org.bouncycastle.jce.provider.JCERSAPublicKey:byte[] getEncoded()"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedSubjectPublicKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.provider.JCEDHPublicKey:byte[] getEncoded()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil:org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePublicKeyParameter(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.KeyFactory:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi:void encodeKey(java.security.Key,java.io.DataOutputStream)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:org.bouncycastle.asn1.x509.SubjectKeyIdentifier createSubjectKeyId(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineInit(java.security.Key,java.security.spec.AlgorithmParameterSpec)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.ECKeyUtil:java.security.PublicKey publicToExplicitParameters(java.security.PublicKey,java.security.Provider)",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void <init>(java.lang.String,org.bouncycastle.asn1.x509.X509Name,java.security.PublicKey,org.bouncycastle.asn1.ASN1Set,java.security.PrivateKey,java.lang.String)",
            "org.bouncycastle.jce.netscape.NetscapeCertRequest:org.bouncycastle.asn1.ASN1Primitive getKeySpec()",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier(java.security.PublicKey)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.ocsp.CertificateID:org.bouncycastle.asn1.ocsp.CertID createCertID(org.bouncycastle.asn1.x509.AlgorithmIdentifier,java.security.cert.X509Certificate,org.bouncycastle.asn1.ASN1Integer,java.lang.String)",
            "org.bouncycastle.ocsp.RespID:void <init>(java.security.PublicKey)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean match(java.security.cert.Certificate)",
            "org.bouncycastle.x509.X509V1CertificateGenerator:void setPublicKey(java.security.PublicKey)",
            "org.bouncycastle.x509.X509V3CertificateGenerator:void setPublicKey(java.security.PublicKey)",
            "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure:org.bouncycastle.asn1.ASN1Sequence fromCertificate(java.security.cert.X509Certificate)",
            "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure:org.bouncycastle.asn1.ASN1Sequence fromKey(java.security.PublicKey)",
            "org.bouncycastle.x509.extension.SubjectKeyIdentifierStructure:org.bouncycastle.asn1.ASN1OctetString fromPublicKey(java.security.PublicKey)"
        ]
    },
    "org.bouncycastle.jce.provider.JCEECPublicKey:byte[] getEncoded()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil:org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePublicKeyParameter(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.KeyFactory:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi:void encodeKey(java.security.Key,java.io.DataOutputStream)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:org.bouncycastle.asn1.x509.SubjectKeyIdentifier createSubjectKeyId(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineInit(java.security.Key,java.security.spec.AlgorithmParameterSpec)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.ECKeyUtil:java.security.PublicKey publicToExplicitParameters(java.security.PublicKey,java.security.Provider)",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void <init>(java.lang.String,org.bouncycastle.asn1.x509.X509Name,java.security.PublicKey,org.bouncycastle.asn1.ASN1Set,java.security.PrivateKey,java.lang.String)",
            "org.bouncycastle.jce.netscape.NetscapeCertRequest:org.bouncycastle.asn1.ASN1Primitive getKeySpec()",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier(java.security.PublicKey)",
            "org.bouncycastle.jce.provider.JCEECPrivateKey:org.bouncycastle.asn1.DERBitString getPublicKeyDetails(org.bouncycastle.jce.provider.JCEECPublicKey)",
            "org.bouncycastle.jce.provider.JCEECPublicKey:void writeObject(java.io.ObjectOutputStream)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.ocsp.CertificateID:org.bouncycastle.asn1.ocsp.CertID createCertID(org.bouncycastle.asn1.x509.AlgorithmIdentifier,java.security.cert.X509Certificate,org.bouncycastle.asn1.ASN1Integer,java.lang.String)",
            "org.bouncycastle.ocsp.RespID:void <init>(java.security.PublicKey)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean match(java.security.cert.Certificate)",
            "org.bouncycastle.x509.X509V1CertificateGenerator:void setPublicKey(java.security.PublicKey)",
            "org.bouncycastle.x509.X509V3CertificateGenerator:void setPublicKey(java.security.PublicKey)",
            "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure:org.bouncycastle.asn1.ASN1Sequence fromCertificate(java.security.cert.X509Certificate)",
            "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure:org.bouncycastle.asn1.ASN1Sequence fromKey(java.security.PublicKey)",
            "org.bouncycastle.x509.extension.SubjectKeyIdentifierStructure:org.bouncycastle.asn1.ASN1OctetString fromPublicKey(java.security.PublicKey)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.x509.Extensions:boolean equivalent(org.bouncycastle.asn1.x509.Extensions)",
            "org.bouncycastle.asn1.x509.X509Extensions:boolean equivalent(org.bouncycastle.asn1.x509.X509Extensions)",
            "org.bouncycastle.asn1.x509.X509Name:java.util.Vector getValues(org.bouncycastle.asn1.ASN1ObjectIdentifier)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.BCGOST3410PrivateKey:boolean compareObj(java.lang.Object,java.lang.Object)",
            "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi:java.lang.String engineGetCertificateAlias(java.security.cert.Certificate)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:java.lang.String engineGetCertificateAlias(java.security.cert.Certificate)",
            "org.bouncycastle.jce.X509LDAPCertStoreParameters:boolean checkField(java.lang.Object,java.lang.Object)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void addAdditionalStoresFromAltNames(java.security.cert.X509Certificate,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:boolean equals(java.lang.Object,java.lang.Object)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:java.util.Set processCRLF(java.security.cert.X509CRL,java.lang.Object,java.security.cert.X509Certificate,java.security.PublicKey,org.bouncycastle.x509.ExtendedPKIXParameters,java.util.List)",
            "org.bouncycastle.jce.provider.RFC3281CertPathUtilities:void processAttrCert4(java.security.cert.X509Certificate,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.util.Arrays:boolean areEqual(java.lang.Object[],java.lang.Object[])",
            "org.bouncycastle.x509.X509CertificatePair:boolean equals(java.lang.Object)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:int calculateHashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:int hashCode()"
        ]
    },
    "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi:void encodeCertificate(java.security.cert.Certificate,java.io.DataOutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi:void saveStore(java.io.OutputStream)"
        ]
    },
    "org.bouncycastle.jce.provider.X509CertificateObject:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.x509.Extensions:boolean equivalent(org.bouncycastle.asn1.x509.Extensions)",
            "org.bouncycastle.asn1.x509.X509Extensions:boolean equivalent(org.bouncycastle.asn1.x509.X509Extensions)",
            "org.bouncycastle.asn1.x509.X509Name:java.util.Vector getValues(org.bouncycastle.asn1.ASN1ObjectIdentifier)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.BCGOST3410PrivateKey:boolean compareObj(java.lang.Object,java.lang.Object)",
            "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi:java.lang.String engineGetCertificateAlias(java.security.cert.Certificate)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:java.lang.String engineGetCertificateAlias(java.security.cert.Certificate)",
            "org.bouncycastle.jce.X509LDAPCertStoreParameters:boolean checkField(java.lang.Object,java.lang.Object)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void addAdditionalStoresFromAltNames(java.security.cert.X509Certificate,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:boolean equals(java.lang.Object,java.lang.Object)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:java.util.Set processCRLF(java.security.cert.X509CRL,java.lang.Object,java.security.cert.X509Certificate,java.security.PublicKey,org.bouncycastle.x509.ExtendedPKIXParameters,java.util.List)",
            "org.bouncycastle.jce.provider.RFC3281CertPathUtilities:void processAttrCert4(java.security.cert.X509Certificate,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.util.Arrays:boolean areEqual(java.lang.Object[],java.lang.Object[])",
            "org.bouncycastle.x509.X509CertificatePair:boolean equals(java.lang.Object)"
        ]
    },
    "org.bouncycastle.jcajce.provider.symmetric.PBEPBKDF2$AlgParams:byte[] engineGetEncoded(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.symmetric.PBEPKCS12$AlgParams:byte[] engineGetEncoded(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.PKCS10CertificationRequest:boolean verify(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.PKCS10CertificationRequest:boolean verify()"
        ]
    },
    "org.bouncycastle.jce.provider.X509CertificateObject:int calculateHashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.X509CertificateObject:int hashCode()"
        ]
    },
    "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedSubjectPublicKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.jcajce.provider.gmss.BCGMSSPublicKey:byte[] getEncoded()",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey:byte[] getEncoded()"
        ]
    },
    "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedSubjectPublicKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.tls.DTLSReliableHandshake$1:void receivedHandshakeRecord(int,byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSRecordLayer:int receive(byte[],int,int,int)"
        ]
    },
    "org.bouncycastle.crypto.tls.SRPTlsClient:java.util.Hashtable getClientExtensions()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dh.KeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dsa.KeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dstu.KeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ecgost.KeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.elgamal.KeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.gost.KeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.rsa.KeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi:void access$000(org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi,java.security.Key,java.io.DataOutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry:void <init>(org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi,java.lang.String,java.security.Key,char[],java.security.cert.Certificate[])",
            "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry:java.lang.Object getObject(char[])"
        ]
    },
    "org.bouncycastle.asn1.isismtt.x509.AdditionalInformationSyntax:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.isismtt.x509.Restriction:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.sigi.NameOrPseudonym:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x500.X500NameBuilder:org.bouncycastle.asn1.x500.X500NameBuilder addRDN(org.bouncycastle.asn1.ASN1ObjectIdentifier,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x500.style.IETFUtils:org.bouncycastle.asn1.x500.RDN[] rDNsFromString(java.lang.String,org.bouncycastle.asn1.x500.X500NameStyle)"
        ]
    },
    "org.bouncycastle.asn1.x500.X500NameBuilder:org.bouncycastle.asn1.x500.X500NameBuilder addMultiValuedRDN(org.bouncycastle.asn1.ASN1ObjectIdentifier[],java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x500.style.IETFUtils:org.bouncycastle.asn1.x500.RDN[] rDNsFromString(java.lang.String,org.bouncycastle.asn1.x500.X500NameStyle)"
        ]
    },
    "org.bouncycastle.asn1.x509.NoticeReference:void <init>(java.lang.String,org.bouncycastle.asn1.ASN1EncodableVector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.NoticeReference:void <init>(java.lang.String,java.util.Vector)"
        ]
    },
    "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.x509.NoticeReference,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x500.style.BCStyle:int calculateHashCode(org.bouncycastle.asn1.x500.X500Name)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x500.X500Name:int hashCode()"
        ]
    },
    "org.bouncycastle.asn1.x500.style.IETFUtils:void appendRDN(java.lang.StringBuffer,org.bouncycastle.asn1.x500.RDN,java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x500.style.BCStyle:java.lang.String toString(org.bouncycastle.asn1.x500.X500Name)",
            "org.bouncycastle.asn1.x500.style.RFC4519Style:java.lang.String toString(org.bouncycastle.asn1.x500.X500Name)"
        ]
    },
    "org.bouncycastle.asn1.x500.style.IETFUtils:boolean rDNAreEqual(org.bouncycastle.asn1.x500.RDN,org.bouncycastle.asn1.x500.RDN)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x500.style.BCStyle:boolean rdnAreEqual(org.bouncycastle.asn1.x500.RDN,org.bouncycastle.asn1.x500.RDN)",
            "org.bouncycastle.asn1.x500.style.RFC4519Style:boolean rdnAreEqual(org.bouncycastle.asn1.x500.RDN,org.bouncycastle.asn1.x500.RDN)"
        ]
    },
    "org.bouncycastle.asn1.x500.style.RFC4519Style:int calculateHashCode(org.bouncycastle.asn1.x500.X500Name)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x500.X500Name:int hashCode()"
        ]
    },
    "org.bouncycastle.asn1.x509.X509Name:org.bouncycastle.asn1.x509.X509Name getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:java.security.Principal getIssuerDN()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:java.lang.String toString()"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:java.security.Principal getSubjectDN()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:java.lang.String toString()",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:java.security.cert.Certificate[] engineGetCertificateChain(java.lang.String)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:boolean isSelfIssued(java.security.cert.X509Certificate)"
        ]
    },
    "org.bouncycastle.jce.provider.X509CRLObject:java.security.Principal getIssuerDN()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.X509CRLObject:java.lang.String toString()"
        ]
    },
    "org.bouncycastle.jce.provider.X509CertificateObject:java.security.Principal getSubjectDN()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:java.security.cert.Certificate[] engineGetCertificateChain(java.lang.String)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:boolean isSelfIssued(java.security.cert.X509Certificate)",
            "org.bouncycastle.jce.provider.X509CertificateObject:java.lang.String toString()"
        ]
    },
    "org.bouncycastle.asn1.nist.NISTNamedCurves:org.bouncycastle.asn1.x9.X9ECParameters getByOID(org.bouncycastle.asn1.ASN1ObjectIdentifier)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.nist.NISTNamedCurves:org.bouncycastle.asn1.x9.X9ECParameters getByName(java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil:org.bouncycastle.asn1.x9.X9ECParameters getNamedCurveByOid(org.bouncycastle.asn1.ASN1ObjectIdentifier)"
        ]
    },
    "org.bouncycastle.asn1.sec.SECNamedCurves:org.bouncycastle.asn1.x9.X9ECParameters getByName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.ECNamedCurveTable:org.bouncycastle.asn1.x9.X9ECParameters getByName(java.lang.String)"
        ]
    },
    "org.bouncycastle.asn1.x9.ECNamedCurveTable:org.bouncycastle.asn1.x9.X9ECParameters getByOID(org.bouncycastle.asn1.ASN1ObjectIdentifier)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC:void initialize(java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.ECNamedCurveTable:org.bouncycastle.jce.spec.ECNamedCurveParameterSpec getParameterSpec(java.lang.String)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil:org.bouncycastle.asn1.x9.X9ECParameters getNamedCurveByOid(org.bouncycastle.asn1.ASN1ObjectIdentifier)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey:void populateFromPubKeyInfo(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jce.ECKeyUtil:java.security.PublicKey publicToExplicitParameters(java.security.PublicKey,java.security.Provider)",
            "org.bouncycastle.jce.ECKeyUtil:java.security.PrivateKey privateToExplicitParameters(java.security.PrivateKey,java.security.Provider)",
            "org.bouncycastle.jce.provider.JCEECPrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jce.provider.JCEECPublicKey:void populateFromPubKeyInfo(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)"
        ]
    },
    "org.bouncycastle.asn1.teletrust.TeleTrusTNamedCurves:org.bouncycastle.asn1.x9.X9ECParameters getByName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.ECNamedCurveTable:org.bouncycastle.asn1.x9.X9ECParameters getByName(java.lang.String)"
        ]
    },
    "org.bouncycastle.asn1.x9.X962NamedCurves:org.bouncycastle.asn1.x9.X9ECParameters getByName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.ECNamedCurveTable:org.bouncycastle.asn1.x9.X9ECParameters getByName(java.lang.String)"
        ]
    },
    "org.bouncycastle.asn1.ASN1Sequence:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Sequence:int hashCode()",
            "org.bouncycastle.asn1.ASN1Set:int hashCode()",
            "org.bouncycastle.asn1.ASN1TaggedObject:int hashCode()",
            "org.bouncycastle.asn1.DERExternal:int hashCode()",
            "org.bouncycastle.asn1.x509.X509Name:int hashCode()",
            "org.bouncycastle.jce.X509LDAPCertStoreParameters:int addHashCode(int,java.lang.Object)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:int hashCollection(java.util.Collection)",
            "org.bouncycastle.ocsp.CertificateID:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Matrix:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Vector:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2mVector:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.Permutation:int hashCode()",
            "org.bouncycastle.util.Arrays:int hashCode(java.lang.Object[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:int hashCode()"
        ]
    },
    "org.bouncycastle.asn1.ASN1Set:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Sequence:int hashCode()",
            "org.bouncycastle.asn1.ASN1Set:int hashCode()",
            "org.bouncycastle.asn1.ASN1TaggedObject:int hashCode()",
            "org.bouncycastle.asn1.DERExternal:int hashCode()",
            "org.bouncycastle.asn1.x509.X509Name:int hashCode()",
            "org.bouncycastle.jce.X509LDAPCertStoreParameters:int addHashCode(int,java.lang.Object)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:int hashCollection(java.util.Collection)",
            "org.bouncycastle.ocsp.CertificateID:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Matrix:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Vector:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2mVector:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.Permutation:int hashCode()",
            "org.bouncycastle.util.Arrays:int hashCode(java.lang.Object[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:int hashCode()"
        ]
    },
    "org.bouncycastle.asn1.ASN1TaggedObject:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Sequence:int hashCode()",
            "org.bouncycastle.asn1.ASN1Set:int hashCode()",
            "org.bouncycastle.asn1.ASN1TaggedObject:int hashCode()",
            "org.bouncycastle.asn1.DERExternal:int hashCode()",
            "org.bouncycastle.asn1.x509.X509Name:int hashCode()",
            "org.bouncycastle.jce.X509LDAPCertStoreParameters:int addHashCode(int,java.lang.Object)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:int hashCollection(java.util.Collection)",
            "org.bouncycastle.ocsp.CertificateID:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Matrix:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Vector:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2mVector:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.Permutation:int hashCode()",
            "org.bouncycastle.util.Arrays:int hashCode(java.lang.Object[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:int hashCode()"
        ]
    },
    "org.bouncycastle.jce.X509LDAPCertStoreParameters:int addHashCode(int,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.X509LDAPCertStoreParameters:int hashCode()"
        ]
    },
    "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:int hashCollection(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:int hashCode()"
        ]
    },
    "org.bouncycastle.pqc.math.linearalgebra.GF2Matrix:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.X509Name:int hashCode()",
            "org.bouncycastle.jce.X509LDAPCertStoreParameters:int addHashCode(int,java.lang.Object)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:int hashCollection(java.util.Collection)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PrivateKey:int hashCode()",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PublicKey:int hashCode()",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey:int hashCode()",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcEliecePublicKey:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Matrix:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Vector:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2mVector:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.Permutation:int hashCode()",
            "org.bouncycastle.util.Arrays:int hashCode(java.lang.Object[])"
        ]
    },
    "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.X509Name:int hashCode()",
            "org.bouncycastle.jce.X509LDAPCertStoreParameters:int addHashCode(int,java.lang.Object)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:int hashCollection(java.util.Collection)",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Matrix:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Vector:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2mVector:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nField:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.Permutation:int hashCode()",
            "org.bouncycastle.util.Arrays:int hashCode(java.lang.Object[])"
        ]
    },
    "org.bouncycastle.pqc.math.linearalgebra.GF2Vector:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.X509Name:int hashCode()",
            "org.bouncycastle.jce.X509LDAPCertStoreParameters:int addHashCode(int,java.lang.Object)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:int hashCollection(java.util.Collection)",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Matrix:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Vector:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2mVector:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.Permutation:int hashCode()",
            "org.bouncycastle.util.Arrays:int hashCode(java.lang.Object[])"
        ]
    },
    "org.bouncycastle.pqc.math.linearalgebra.GF2mVector:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.X509Name:int hashCode()",
            "org.bouncycastle.jce.X509LDAPCertStoreParameters:int addHashCode(int,java.lang.Object)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:int hashCollection(java.util.Collection)",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Matrix:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Vector:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2mVector:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.Permutation:int hashCode()",
            "org.bouncycastle.util.Arrays:int hashCode(java.lang.Object[])"
        ]
    },
    "org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.X509Name:int hashCode()",
            "org.bouncycastle.jce.X509LDAPCertStoreParameters:int addHashCode(int,java.lang.Object)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:int hashCollection(java.util.Collection)",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Matrix:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Vector:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2mVector:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.Permutation:int hashCode()",
            "org.bouncycastle.util.Arrays:int hashCode(java.lang.Object[])"
        ]
    },
    "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.X509Name:int hashCode()",
            "org.bouncycastle.jce.X509LDAPCertStoreParameters:int addHashCode(int,java.lang.Object)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:int hashCollection(java.util.Collection)",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Matrix:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Vector:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2mVector:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.Permutation:int hashCode()",
            "org.bouncycastle.util.Arrays:int hashCode(java.lang.Object[])"
        ]
    },
    "org.bouncycastle.pqc.math.linearalgebra.Permutation:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.X509Name:int hashCode()",
            "org.bouncycastle.jce.X509LDAPCertStoreParameters:int addHashCode(int,java.lang.Object)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:int hashCollection(java.util.Collection)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PrivateKey:int hashCode()",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Matrix:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Vector:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2mVector:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.Permutation:int hashCode()",
            "org.bouncycastle.util.Arrays:int hashCode(java.lang.Object[])"
        ]
    },
    "org.bouncycastle.util.Arrays:int hashCode(java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.AttributeCertificateIssuer:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.X509Name:int hashCode()",
            "org.bouncycastle.jce.X509LDAPCertStoreParameters:int addHashCode(int,java.lang.Object)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:int hashCollection(java.util.Collection)",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Matrix:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Vector:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2mVector:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.Permutation:int hashCode()",
            "org.bouncycastle.util.Arrays:int hashCode(java.lang.Object[])"
        ]
    },
    "org.bouncycastle.asn1.cms.EncryptedContentInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.EncryptedContentInfo:org.bouncycastle.asn1.cms.EncryptedContentInfo getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.cms.KeyAgreeRecipientInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.KeyAgreeRecipientInfo:org.bouncycastle.asn1.cms.KeyAgreeRecipientInfo getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Encodable getId()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Encodable getId()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cms.ecc.MQVuserKeyingMaterial:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.ecc.MQVuserKeyingMaterial:org.bouncycastle.asn1.cms.ecc.MQVuserKeyingMaterial getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.crmf.EncryptedValue:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.crmf.EncryptedValue:org.bouncycastle.asn1.crmf.EncryptedValue getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.eac.UnsignedInteger:void <init>(org.bouncycastle.asn1.ASN1TaggedObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.eac.UnsignedInteger:org.bouncycastle.asn1.eac.UnsignedInteger getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.isismtt.ocsp.RequestedCertificate:void <init>(org.bouncycastle.asn1.ASN1TaggedObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.isismtt.ocsp.RequestedCertificate:org.bouncycastle.asn1.isismtt.ocsp.RequestedCertificate getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.isismtt.ocsp.RequestedCertificate:void <init>(int,byte[])"
        ]
    },
    "org.bouncycastle.asn1.ocsp.ResponderID:org.bouncycastle.asn1.ocsp.ResponderID getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.esf.OcspIdentifier:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ocsp.ResponderID:org.bouncycastle.asn1.ocsp.ResponderID getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.ocsp.ResponseData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.tls.OCSPStatusRequest:org.bouncycastle.crypto.tls.OCSPStatusRequest parse(java.io.InputStream)"
        ]
    },
    "org.bouncycastle.asn1.x509.SubjectKeyIdentifier:org.bouncycastle.asn1.x509.SubjectKeyIdentifier getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.x509.SubjectKeyIdentifier getSubjectKeyIdentifier()"
        ]
    },
    "org.bouncycastle.asn1.crmf.POPOPrivKey:void <init>(org.bouncycastle.asn1.ASN1TaggedObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.crmf.POPOPrivKey:org.bouncycastle.asn1.crmf.POPOPrivKey getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.isismtt.x509.DeclarationOfMajority:int notYoungerThan()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.ocsp.TBSRequest:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ocsp.TBSRequest:org.bouncycastle.asn1.ocsp.TBSRequest getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.pkcs.RSASSAPSSparams:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.pkcs.RSASSAPSSparams:org.bouncycastle.asn1.pkcs.RSASSAPSSparams getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.tsp.Accuracy:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.tsp.Accuracy:org.bouncycastle.asn1.tsp.Accuracy getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x9.DHPublicKey:org.bouncycastle.asn1.x9.DHPublicKey getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cms.AuthenticatedData:org.bouncycastle.asn1.cms.AuthenticatedData getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.AuthenticatedData:org.bouncycastle.asn1.cms.AuthenticatedData getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)"
        ]
    },
    "org.bouncycastle.asn1.isismtt.ocsp.CertHash:org.bouncycastle.asn1.isismtt.ocsp.CertHash getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.isismtt.x509.ProfessionInfo:org.bouncycastle.asn1.isismtt.x509.ProfessionInfo getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.isismtt.x509.Admissions:org.bouncycastle.asn1.isismtt.x509.ProfessionInfo[] getProfessionInfos()"
        ]
    },
    "org.bouncycastle.asn1.pkcs.SignerInfo:org.bouncycastle.asn1.pkcs.SignerInfo getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.SubjectKeyIdentifier:org.bouncycastle.asn1.x509.SubjectKeyIdentifier fromExtensions(org.bouncycastle.asn1.x509.Extensions)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.rsa.AlgorithmParametersSpi$OAEP:void engineInit(byte[],java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cmp.PKIFreeText:org.bouncycastle.asn1.'cmp'.PKIFreeText getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.PKIHeader:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.cmp.PKIStatusInfo:org.bouncycastle.asn1.'cmp'.PKIStatusInfo getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.dvcs.CertEtcToken:void <init>(org.bouncycastle.asn1.ASN1TaggedObject)",
            "org.bouncycastle.asn1.dvcs.DVCSCertInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.cms.AuthEnvelopedData:org.bouncycastle.asn1.cms.AuthEnvelopedData getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cms.AuthenticatedData:org.bouncycastle.asn1.cms.AuthenticatedData getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cms.CompressedData:org.bouncycastle.asn1.cms.CompressedData getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cms.ContentInfo:org.bouncycastle.asn1.cms.ContentInfo getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.SCVPReqRes:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.cms.DigestedData:org.bouncycastle.asn1.cms.DigestedData getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cms.EnvelopedData:org.bouncycastle.asn1.cms.EnvelopedData getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.crmf.EncryptedKey:org.bouncycastle.asn1.crmf.EncryptedKey getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.crmf.POPOPrivKey:void <init>(org.bouncycastle.asn1.ASN1TaggedObject)"
        ]
    },
    "org.bouncycastle.asn1.cms.KEKIdentifier:org.bouncycastle.asn1.cms.KEKIdentifier getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cms.KEKRecipientInfo:org.bouncycastle.asn1.cms.KEKRecipientInfo getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.cms.KEKRecipientInfo getKEKInfo(org.bouncycastle.asn1.ASN1TaggedObject)"
        ]
    },
    "org.bouncycastle.asn1.cms.KeyAgreeRecipientIdentifier:org.bouncycastle.asn1.cms.KeyAgreeRecipientIdentifier getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cms.KeyAgreeRecipientInfo:org.bouncycastle.asn1.cms.KeyAgreeRecipientInfo getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Integer getVersion()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Encodable getInfo()"
        ]
    },
    "org.bouncycastle.asn1.cms.OriginatorInfo:org.bouncycastle.asn1.cms.OriginatorInfo getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthenticatedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.EnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.cms.OriginatorPublicKey:org.bouncycastle.asn1.cms.OriginatorPublicKey getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.cms.OriginatorPublicKey getOriginatorKey()"
        ]
    },
    "org.bouncycastle.asn1.cms.OtherRecipientInfo:org.bouncycastle.asn1.cms.OtherRecipientInfo getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Encodable getInfo()"
        ]
    },
    "org.bouncycastle.asn1.cms.OtherRevocationInfoFormat:org.bouncycastle.asn1.cms.OtherRevocationInfoFormat getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cms.PasswordRecipientInfo:org.bouncycastle.asn1.cms.PasswordRecipientInfo getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Integer getVersion()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Encodable getInfo()"
        ]
    },
    "org.bouncycastle.asn1.cms.RecipientEncryptedKey:org.bouncycastle.asn1.cms.RecipientEncryptedKey getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cms.RecipientKeyIdentifier:org.bouncycastle.asn1.cms.RecipientKeyIdentifier getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.KeyAgreeRecipientIdentifier:org.bouncycastle.asn1.cms.KeyAgreeRecipientIdentifier getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.cms.TimeStampTokenEvidence:org.bouncycastle.asn1.cms.TimeStampTokenEvidence getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.Evidence:void <init>(org.bouncycastle.asn1.ASN1TaggedObject)"
        ]
    },
    "org.bouncycastle.asn1.cms.ecc.MQVuserKeyingMaterial:org.bouncycastle.asn1.cms.ecc.MQVuserKeyingMaterial getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.crmf.CertId:org.bouncycastle.asn1.crmf.CertId getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.OOBCertHash:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.crmf.PKMACValue:org.bouncycastle.asn1.crmf.PKMACValue getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.crmf.POPOPrivKey:void <init>(org.bouncycastle.asn1.ASN1TaggedObject)"
        ]
    },
    "org.bouncycastle.asn1.crmf.POPOSigningKey:org.bouncycastle.asn1.crmf.POPOSigningKey getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.crmf.ProofOfPossession:void <init>(org.bouncycastle.asn1.ASN1TaggedObject)"
        ]
    },
    "org.bouncycastle.asn1.cryptopro.ECGOST3410ParamSetParameters:org.bouncycastle.asn1.cryptopro.ECGOST3410ParamSetParameters getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cryptopro.GOST28147Parameters:org.bouncycastle.asn1.cryptopro.GOST28147Parameters getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cryptopro.GOST3410ParamSetParameters:org.bouncycastle.asn1.cryptopro.GOST3410ParamSetParameters getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cryptopro.GOST3410PublicKeyAlgParameters:org.bouncycastle.asn1.cryptopro.GOST3410PublicKeyAlgParameters getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.dvcs.DVCSCertInfo:org.bouncycastle.asn1.dvcs.DVCSCertInfo getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.dvcs.DVCSErrorNotice:org.bouncycastle.asn1.dvcs.DVCSErrorNotice getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.dvcs.DVCSResponse:org.bouncycastle.asn1.dvcs.DVCSResponse getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.dvcs.DVCSRequest:org.bouncycastle.asn1.dvcs.DVCSRequest getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.dvcs.DVCSRequestInformation:org.bouncycastle.asn1.dvcs.DVCSRequestInformation getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.dvcs.Data:org.bouncycastle.asn1.dvcs.Data getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.dvcs.DVCSRequest:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.dvcs.Data:org.bouncycastle.asn1.dvcs.Data getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)"
        ]
    },
    "org.bouncycastle.asn1.dvcs.PathProcInput:org.bouncycastle.asn1.dvcs.PathProcInput getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.dvcs.TargetEtcChain:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.dvcs.TargetEtcChain:org.bouncycastle.asn1.dvcs.TargetEtcChain getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.isismtt.x509.DeclarationOfMajority:org.bouncycastle.asn1.ASN1Sequence fullAgeAtCountry()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.isismtt.x509.NamingAuthority:org.bouncycastle.asn1.isismtt.x509.NamingAuthority getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.isismtt.x509.Admissions:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.isismtt.x509.ProfessionInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.ocsp.BasicOCSPResponse:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ocsp.BasicOCSPResponse:org.bouncycastle.asn1.ocsp.BasicOCSPResponse getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.ocsp.BasicOCSPResponse:org.bouncycastle.asn1.ocsp.BasicOCSPResponse getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.ocsp.CertID:org.bouncycastle.asn1.ocsp.CertID getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.dvcs.CertEtcToken:void <init>(org.bouncycastle.asn1.ASN1TaggedObject)"
        ]
    },
    "org.bouncycastle.asn1.ocsp.OCSPRequest:org.bouncycastle.asn1.ocsp.OCSPRequest getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.ocsp.OCSPResponse:org.bouncycastle.asn1.ocsp.OCSPResponse getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.dvcs.CertEtcToken:void <init>(org.bouncycastle.asn1.ASN1TaggedObject)"
        ]
    },
    "org.bouncycastle.asn1.ocsp.Request:org.bouncycastle.asn1.ocsp.Request getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.ocsp.ResponseBytes:org.bouncycastle.asn1.ocsp.ResponseBytes getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ocsp.OCSPResponse:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.ocsp.ResponseData:org.bouncycastle.asn1.ocsp.ResponseData getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.ocsp.RevokedInfo:org.bouncycastle.asn1.ocsp.RevokedInfo getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ocsp.CertStatus:void <init>(org.bouncycastle.asn1.ASN1TaggedObject)"
        ]
    },
    "org.bouncycastle.asn1.ocsp.Signature:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ocsp.Signature:org.bouncycastle.asn1.ocsp.Signature getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.ocsp.Signature:org.bouncycastle.asn1.ocsp.Signature getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ocsp.OCSPRequest:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.ocsp.SingleResponse:org.bouncycastle.asn1.ocsp.SingleResponse getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.ocsp.TBSRequest:org.bouncycastle.asn1.ocsp.TBSRequest getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.pkcs.PrivateKeyInfo getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.pkcs.RSAPrivateKey:org.bouncycastle.asn1.pkcs.RSAPrivateKey getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure:org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.pkcs.RSAPublicKey:org.bouncycastle.asn1.pkcs.RSAPublicKey getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x500.X500Name:org.bouncycastle.asn1.x500.X500Name getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.crmf.CertTemplate:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ocsp.ResponderID:org.bouncycastle.asn1.ocsp.ResponderID getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.GeneralName:org.bouncycastle.asn1.x509.GeneralName getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x509.AlgorithmIdentifier:org.bouncycastle.asn1.x509.AlgorithmIdentifier getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.OOBCertHash:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.PKIHeader:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthenticatedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.PasswordRecipientInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.crmf.CertTemplate:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.crmf.EncryptedValue:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.RSAESOAEPparams:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.RSASSAPSSparams:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.x509.AttributeCertificateInfo:org.bouncycastle.asn1.x509.AttributeCertificateInfo getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.AuthorityKeyIdentifier:org.bouncycastle.asn1.x509.AuthorityKeyIdentifier getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.BasicConstraints:org.bouncycastle.asn1.x509.BasicConstraints getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.CRLDistPoint:org.bouncycastle.asn1.x509.CRLDistPoint getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.Certificate:org.bouncycastle.asn1.x509.Certificate getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.dvcs.CertEtcToken:void <init>(org.bouncycastle.asn1.ASN1TaggedObject)",
            "org.bouncycastle.asn1.x509.CertificatePair:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.x509.CertificateList:org.bouncycastle.asn1.x509.CertificateList getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.dvcs.CertEtcToken:void <init>(org.bouncycastle.asn1.ASN1TaggedObject)"
        ]
    },
    "org.bouncycastle.asn1.x509.CertificatePolicies:org.bouncycastle.asn1.x509.CertificatePolicies getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.DSAParameter:org.bouncycastle.asn1.x509.DSAParameter getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.DigestInfo:org.bouncycastle.asn1.x509.DigestInfo getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.DistributionPoint:org.bouncycastle.asn1.x509.DistributionPoint getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.ExtendedKeyUsage:org.bouncycastle.asn1.x509.ExtendedKeyUsage getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.Extensions:org.bouncycastle.asn1.x509.Extensions getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.crmf.CertTemplate:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.dvcs.DVCSRequestInformation:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ocsp.Request:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ocsp.ResponseData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ocsp.SingleResponse:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ocsp.TBSRequest:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.tsp.TSTInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.tsp.TimeStampReq:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.x509.GeneralNames:org.bouncycastle.asn1.x509.GeneralNames getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.dvcs.DVCSRequestInformation:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.AuthorityKeyIdentifier:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.DistributionPoint:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.DistributionPointName:void <init>(org.bouncycastle.asn1.ASN1TaggedObject)",
            "org.bouncycastle.asn1.x509.Holder:void <init>(org.bouncycastle.asn1.ASN1TaggedObject)",
            "org.bouncycastle.asn1.x509.Holder:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.IetfAttrSyntax:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.RoleSyntax:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.x509.GeneralSubtree:org.bouncycastle.asn1.x509.GeneralSubtree getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.IssuerSerial:org.bouncycastle.asn1.x509.IssuerSerial getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.Holder:void <init>(org.bouncycastle.asn1.ASN1TaggedObject)",
            "org.bouncycastle.asn1.x509.Holder:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.V2Form:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.x509.IssuingDistributionPoint:org.bouncycastle.asn1.x509.IssuingDistributionPoint getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.ObjectDigestInfo:org.bouncycastle.asn1.x509.ObjectDigestInfo getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.Holder:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.V2Form:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.x509.RSAPublicKeyStructure:org.bouncycastle.asn1.x509.RSAPublicKeyStructure getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.SubjectPublicKeyInfo:org.bouncycastle.asn1.x509.SubjectPublicKeyInfo getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.crmf.CertTemplate:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.x509.TBSCertList:org.bouncycastle.asn1.x509.TBSCertList getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.TBSCertificate:org.bouncycastle.asn1.x509.TBSCertificate getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.TBSCertificateStructure:org.bouncycastle.asn1.x509.TBSCertificateStructure getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.V2Form:org.bouncycastle.asn1.x509.V2Form getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.AttCertIssuer:org.bouncycastle.asn1.x509.AttCertIssuer getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x509.X509CertificateStructure:org.bouncycastle.asn1.x509.X509CertificateStructure getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.X509Extensions:org.bouncycastle.asn1.x509.X509Extensions getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x9.DHDomainParameters:org.bouncycastle.asn1.x9.DHDomainParameters getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x9.DHValidationParms:org.bouncycastle.asn1.x9.DHValidationParms getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cmp.PKIBody:org.bouncycastle.asn1.ASN1Encodable getBodyForType(int,org.bouncycastle.asn1.ASN1Encodable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.PKIBody:void <init>(org.bouncycastle.asn1.ASN1TaggedObject)",
            "org.bouncycastle.asn1.cmp.PKIBody:void <init>(int,org.bouncycastle.asn1.ASN1Encodable)"
        ]
    },
    "org.bouncycastle.asn1.cmp.CertRepMessage:org.bouncycastle.asn1.'cmp'.CertResponse[] getResponse()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cmp.CertConfirmContent:org.bouncycastle.asn1.'cmp'.CertStatus[] toCertStatusArray()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cmp.KeyRecRepContent:org.bouncycastle.asn1.'cmp'.CertifiedKeyPair[] getKeyPairHist()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cmp.POPODecKeyChallContent:org.bouncycastle.asn1.'cmp'.Challenge[] toChallengeArray()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cmp.GenMsgContent:org.bouncycastle.asn1.'cmp'.InfoTypeAndValue[] toInfoTypeAndValueArray()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cmp.GenRepContent:org.bouncycastle.asn1.'cmp'.InfoTypeAndValue[] toInfoTypeAndValueArray()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cmp.PKIHeader:org.bouncycastle.asn1.'cmp'.InfoTypeAndValue[] getGeneralInfo()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cmp.PKIHeaderBuilder:org.bouncycastle.asn1.'cmp'.PKIHeader build()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cmp.ProtectedPart:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.ProtectedPart:org.bouncycastle.asn1.'cmp'.ProtectedPart getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.cmp.PKIMessages:org.bouncycastle.asn1.'cmp'.PKIMessage[] toPKIMessageArray()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cmp.RevRepContent:org.bouncycastle.asn1.'cmp'.PKIStatusInfo[] getStatus()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cmp.RevReqContent:org.bouncycastle.asn1.'cmp'.RevDetails[] toRevDetailsArray()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cmp.RevRepContentBuilder:org.bouncycastle.asn1.'cmp'.RevRepContent build()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cms.AttributeTable:void <init>(org.bouncycastle.asn1.ASN1EncodableVector)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cms.AttributeTable:void <init>(org.bouncycastle.asn1.ASN1Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.AttributeTable:void <init>(org.bouncycastle.asn1.cms.Attributes)"
        ]
    },
    "org.bouncycastle.asn1.cms.Attributes:org.bouncycastle.asn1.cms.Attribute[] getAttributes()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cms.CompressedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.CompressedData:org.bouncycastle.asn1.cms.CompressedData getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.cms.TimeStampAndCRL:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.TimeStampAndCRL:org.bouncycastle.asn1.cms.TimeStampAndCRL getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.jcajce.provider.symmetric.AES$AlgParamsGCM:void engineInit(byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.symmetric.AES$AlgParamsGCM:void engineInit(byte[],java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cms.KeyAgreeRecipientIdentifier:org.bouncycastle.asn1.cms.KeyAgreeRecipientIdentifier getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.KeyAgreeRecipientIdentifier:org.bouncycastle.asn1.cms.KeyAgreeRecipientIdentifier getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.cms.RecipientEncryptedKey:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Integer getVersion()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.EnvelopedData:int calculateVersion(org.bouncycastle.asn1.cms.OriginatorInfo,org.bouncycastle.asn1.ASN1Set,org.bouncycastle.asn1.ASN1Set)"
        ]
    },
    "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Encodable getInfo()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cms.KEKIdentifier:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.KEKIdentifier:org.bouncycastle.asn1.cms.KEKIdentifier getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.crmf.CertReqMsg:org.bouncycastle.asn1.crmf.AttributeTypeAndValue[] getRegInfo()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.crmf.Controls:org.bouncycastle.asn1.crmf.AttributeTypeAndValue[] toAttributeTypeAndValueArray()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cmp.RevRepContent:org.bouncycastle.asn1.crmf.CertId[] getRevCerts()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.crmf.CertReqMessages:org.bouncycastle.asn1.crmf.CertReqMsg[] toCertReqMsgArray()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cmp.RevDetails:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.RevDetails:org.bouncycastle.asn1.'cmp'.RevDetails getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.crmf.CertTemplateBuilder:org.bouncycastle.asn1.crmf.CertTemplate build()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.crmf.EncryptedKey:org.bouncycastle.asn1.crmf.EncryptedKey getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.crmf.PKIArchiveOptions:void <init>(org.bouncycastle.asn1.ASN1TaggedObject)"
        ]
    },
    "org.bouncycastle.asn1.crmf.PKIPublicationInfo:org.bouncycastle.asn1.crmf.SinglePubInfo[] getPubInfos()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.dvcs.DVCSCertInfoBuilder:org.bouncycastle.asn1.dvcs.DVCSCertInfo build()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.dvcs.DVCSRequestInformationBuilder:org.bouncycastle.asn1.dvcs.DVCSRequestInformation build()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.dvcs.Data:org.bouncycastle.asn1.dvcs.TargetEtcChain[] getCerts()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.dvcs.TargetEtcChain:org.bouncycastle.asn1.dvcs.TargetEtcChain[] arrayFromSequence(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.dvcs.DVCSCertInfo:org.bouncycastle.asn1.dvcs.TargetEtcChain[] getCerts()"
        ]
    },
    "org.bouncycastle.asn1.eac.CertificateBody:void setPublicKey(org.bouncycastle.asn1.eac.PublicKeyDataObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.eac.CertificateBody:void setIso7816CertificateBody(org.bouncycastle.asn1.DERApplicationSpecific)",
            "org.bouncycastle.asn1.eac.CertificateBody:void <init>(org.bouncycastle.asn1.DERApplicationSpecific,org.bouncycastle.asn1.eac.CertificationAuthorityReference,org.bouncycastle.asn1.eac.PublicKeyDataObject,org.bouncycastle.asn1.eac.CertificateHolderReference,org.bouncycastle.asn1.eac.CertificateHolderAuthorization,org.bouncycastle.asn1.eac.PackedDate,org.bouncycastle.asn1.eac.PackedDate)"
        ]
    },
    "org.bouncycastle.asn1.esf.CrlValidatedID:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.esf.CrlValidatedID:org.bouncycastle.asn1.esf.CrlValidatedID getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.esf.CompleteRevocationRefs:org.bouncycastle.asn1.esf.CrlOcspRef[] getCrlOcspRefs()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.esf.CrlListID:org.bouncycastle.asn1.esf.CrlValidatedID[] getCrls()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.esf.OcspResponsesID:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.esf.OcspResponsesID:org.bouncycastle.asn1.esf.OcspResponsesID getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.esf.OcspListID:org.bouncycastle.asn1.esf.OcspResponsesID[] getOcspResponses()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.esf.OtherHash:org.bouncycastle.asn1.esf.OtherHash getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.esf.CrlValidatedID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OcspResponsesID:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.esf.SigPolicyQualifiers:org.bouncycastle.asn1.esf.SigPolicyQualifierInfo getInfoAt(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.esf.SignaturePolicyIdentifier:org.bouncycastle.asn1.esf.SignaturePolicyIdentifier getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.ess.SigningCertificate:org.bouncycastle.asn1.ess.ESSCertID[] getCerts()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.ess.SigningCertificateV2:org.bouncycastle.asn1.ess.ESSCertIDv2[] getCerts()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.ess.OtherSigningCertificate:org.bouncycastle.asn1.ess.OtherCertID[] getCerts()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.ess.SigningCertificateV2:org.bouncycastle.asn1.ess.SigningCertificateV2 getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.isismtt.x509.AdmissionSyntax:org.bouncycastle.asn1.isismtt.x509.AdmissionSyntax getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.isismtt.x509.Admissions:org.bouncycastle.asn1.isismtt.x509.Admissions getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.isismtt.x509.AdmissionSyntax:org.bouncycastle.asn1.isismtt.x509.Admissions[] getContentsOfAdmissions()"
        ]
    },
    "org.bouncycastle.asn1.esf.RevocationValues:org.bouncycastle.asn1.ocsp.BasicOCSPResponse[] getOcspVals()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.ocsp.Request:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ocsp.Request:org.bouncycastle.asn1.ocsp.Request getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.ocsp.OCSPReq:org.bouncycastle.ocsp.Req[] getRequestList()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.ocsp.SingleResp:java.lang.Object getCertStatus()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.ocsp.BasicOCSPResp:org.bouncycastle.ocsp.SingleResp[] getResponses()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.ocsp.RespData:org.bouncycastle.ocsp.SingleResp[] getResponses()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.ocsp.OCSPRequest:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ocsp.OCSPRequest:org.bouncycastle.asn1.ocsp.OCSPRequest getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.pkcs.CertificationRequest:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.pkcs.CertificationRequest:org.bouncycastle.asn1.pkcs.CertificationRequest getInstance(java.lang.Object)",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void <init>(byte[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.pkcs.AuthenticatedSafe:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.pkcs.AuthenticatedSafe:org.bouncycastle.asn1.pkcs.AuthenticatedSafe getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.pkcs.Pfx:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.pkcs.Pfx:org.bouncycastle.asn1.pkcs.Pfx getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dh.AlgorithmParametersSpi:void engineInit(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.dh.AlgorithmParametersSpi:void engineInit(byte[],java.lang.String)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.rsa.KeyFactorySpi:java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi:java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.dh.KeyFactorySpi:java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.KeyFactorySpi:java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.KeyFactorySpi:java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi:java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.KeyFactorySpi:java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.jcajce.provider.asymmetric.elgamal.KeyFactorySpi:java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.KeyFactorySpi:java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.KeyFactory:java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.rsa.AlgorithmParametersSpi$PSS:void engineInit(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.AlgorithmParametersSpi$PSS:void engineInit(byte[],java.lang.String)"
        ]
    },
    "org.bouncycastle.asn1.x500.RDN:org.bouncycastle.asn1.x500.AttributeTypeAndValue getFirst()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x500.X500Name:org.bouncycastle.asn1.ASN1ObjectIdentifier[] getAttributeTypes()",
            "org.bouncycastle.asn1.x500.X500Name:org.bouncycastle.asn1.x500.RDN[] getRDNs(org.bouncycastle.asn1.ASN1ObjectIdentifier)",
            "org.bouncycastle.asn1.x500.style.BCStyle:boolean areEqual(org.bouncycastle.asn1.x500.X500Name,org.bouncycastle.asn1.x500.X500Name)",
            "org.bouncycastle.asn1.x500.style.BCStyle:int calculateHashCode(org.bouncycastle.asn1.x500.X500Name)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:void appendRDN(java.lang.StringBuffer,org.bouncycastle.asn1.x500.RDN,java.util.Hashtable)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:boolean rDNAreEqual(org.bouncycastle.asn1.x500.RDN,org.bouncycastle.asn1.x500.RDN)",
            "org.bouncycastle.asn1.x500.style.RFC4519Style:boolean areEqual(org.bouncycastle.asn1.x500.X500Name,org.bouncycastle.asn1.x500.X500Name)",
            "org.bouncycastle.asn1.x500.style.RFC4519Style:int calculateHashCode(org.bouncycastle.asn1.x500.X500Name)"
        ]
    },
    "org.bouncycastle.asn1.x500.RDN:org.bouncycastle.asn1.x500.AttributeTypeAndValue[] getTypesAndValues()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x500.X500Name:org.bouncycastle.asn1.ASN1ObjectIdentifier[] getAttributeTypes()",
            "org.bouncycastle.asn1.x500.X500Name:org.bouncycastle.asn1.x500.RDN[] getRDNs(org.bouncycastle.asn1.ASN1ObjectIdentifier)",
            "org.bouncycastle.asn1.x500.style.BCStyle:int calculateHashCode(org.bouncycastle.asn1.x500.X500Name)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:void appendRDN(java.lang.StringBuffer,org.bouncycastle.asn1.x500.RDN,java.util.Hashtable)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:boolean rDNAreEqual(org.bouncycastle.asn1.x500.RDN,org.bouncycastle.asn1.x500.RDN)",
            "org.bouncycastle.asn1.x500.style.RFC4519Style:int calculateHashCode(org.bouncycastle.asn1.x500.X500Name)"
        ]
    },
    "org.bouncycastle.asn1.cmp.PKIHeader:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.PKIHeader:org.bouncycastle.asn1.'cmp'.PKIHeader getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cmp.PKIHeader:void <clinit>()",
            "org.bouncycastle.asn1.cmp.PKIHeaderBuilder:org.bouncycastle.asn1.'cmp'.PKIHeader build()",
            "org.bouncycastle.asn1.cmp.PKIMessage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.ProtectedPart:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.cms.IssuerAndSerialNumber:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.IssuerAndSerialNumber:org.bouncycastle.asn1.cms.IssuerAndSerialNumber getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.cms.IssuerAndSerialNumber:void <init>(org.bouncycastle.asn1.x509.X509Name,java.math.BigInteger)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cms.IssuerAndSerialNumber:void <init>(org.bouncycastle.asn1.x509.X509Name,org.bouncycastle.asn1.ASN1Integer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.ocsp.ResponderID:org.bouncycastle.asn1.x500.X500Name getName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.pkcs.CertificationRequestInfo:void <init>(org.bouncycastle.asn1.x509.X509Name,org.bouncycastle.asn1.x509.SubjectPublicKeyInfo,org.bouncycastle.asn1.ASN1Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.PKCS10CertificationRequest:void <init>(java.lang.String,org.bouncycastle.asn1.x509.X509Name,java.security.PublicKey,org.bouncycastle.asn1.ASN1Set,java.security.PrivateKey,java.lang.String)"
        ]
    },
    "org.bouncycastle.asn1.pkcs.CertificationRequestInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.pkcs.CertificationRequestInfo:org.bouncycastle.asn1.pkcs.CertificationRequestInfo getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.pkcs.IssuerAndSerialNumber:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.pkcs.IssuerAndSerialNumber:org.bouncycastle.asn1.pkcs.IssuerAndSerialNumber getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.pkcs.IssuerAndSerialNumber:void <init>(org.bouncycastle.asn1.x509.X509Name,java.math.BigInteger)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.pkcs.IssuerAndSerialNumber:void <init>(org.bouncycastle.asn1.x509.X509Name,org.bouncycastle.asn1.ASN1Integer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.GeneralName:void <init>(org.bouncycastle.asn1.x509.X509Name)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.x509.AttributeCertificateHolder:void <init>(org.bouncycastle.jce.X509Principal,java.math.BigInteger)",
            "org.bouncycastle.x509.AttributeCertificateHolder:org.bouncycastle.asn1.x509.GeneralNames generateGeneralNames(org.bouncycastle.jce.X509Principal)",
            "org.bouncycastle.x509.AttributeCertificateIssuer:void <init>(org.bouncycastle.jce.X509Principal)",
            "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure:org.bouncycastle.asn1.ASN1Sequence fromCertificate(java.security.cert.X509Certificate)"
        ]
    },
    "org.bouncycastle.asn1.x509.V1TBSCertificateGenerator:void setIssuer(org.bouncycastle.asn1.x509.X509Name)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.X509V1CertificateGenerator:void setIssuerDN(javax.security.auth.x500.X500Principal)",
            "org.bouncycastle.x509.X509V1CertificateGenerator:void setIssuerDN(org.bouncycastle.asn1.x509.X509Name)"
        ]
    },
    "org.bouncycastle.asn1.x509.V1TBSCertificateGenerator:void setSubject(org.bouncycastle.asn1.x509.X509Name)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.X509V1CertificateGenerator:void setSubjectDN(javax.security.auth.x500.X500Principal)",
            "org.bouncycastle.x509.X509V1CertificateGenerator:void setSubjectDN(org.bouncycastle.asn1.x509.X509Name)"
        ]
    },
    "org.bouncycastle.asn1.x509.V2TBSCertListGenerator:void setIssuer(org.bouncycastle.asn1.x509.X509Name)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.X509V2CRLGenerator:void setIssuerDN(javax.security.auth.x500.X500Principal)",
            "org.bouncycastle.x509.X509V2CRLGenerator:void setIssuerDN(org.bouncycastle.asn1.x509.X509Name)"
        ]
    },
    "org.bouncycastle.asn1.x509.V3TBSCertificateGenerator:void setIssuer(org.bouncycastle.asn1.x509.X509Name)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.X509V3CertificateGenerator:void setIssuerDN(javax.security.auth.x500.X500Principal)",
            "org.bouncycastle.x509.X509V3CertificateGenerator:void setIssuerDN(org.bouncycastle.asn1.x509.X509Name)"
        ]
    },
    "org.bouncycastle.asn1.x509.V3TBSCertificateGenerator:void setSubject(org.bouncycastle.asn1.x509.X509Name)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.X509V3CertificateGenerator:void setSubjectDN(javax.security.auth.x500.X500Principal)",
            "org.bouncycastle.x509.X509V3CertificateGenerator:void setSubjectDN(org.bouncycastle.asn1.x509.X509Name)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLEntryObject:org.bouncycastle.asn1.x500.X500Name loadCertificateIssuer(boolean,org.bouncycastle.asn1.x500.X500Name)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLEntryObject:void <init>(org.bouncycastle.asn1.x509.TBSCertList$CRLEntry,boolean,org.bouncycastle.asn1.x500.X500Name)"
        ]
    },
    "org.bouncycastle.jce.provider.X509CRLEntryObject:org.bouncycastle.asn1.x500.X500Name loadCertificateIssuer(boolean,org.bouncycastle.asn1.x500.X500Name)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.X509CRLEntryObject:void <init>(org.bouncycastle.asn1.x509.TBSCertList$CRLEntry,boolean,org.bouncycastle.asn1.x500.X500Name)"
        ]
    },
    "org.bouncycastle.ocsp.RespID:void <init>(javax.security.auth.x500.X500Principal)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.AuthorityInformationAccess:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.AuthorityInformationAccess:org.bouncycastle.asn1.x509.AuthorityInformationAccess getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.cms.KEKRecipientInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.KEKRecipientInfo:org.bouncycastle.asn1.cms.KEKRecipientInfo getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.cms.KeyTransRecipientInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.KeyTransRecipientInfo:org.bouncycastle.asn1.cms.KeyTransRecipientInfo getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.cms.OriginatorPublicKey:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.OriginatorPublicKey:org.bouncycastle.asn1.cms.OriginatorPublicKey getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.cms.PasswordRecipientInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.PasswordRecipientInfo:org.bouncycastle.asn1.cms.PasswordRecipientInfo getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.crmf.PKMACValue:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.crmf.PKMACValue:org.bouncycastle.asn1.crmf.PKMACValue getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.ocsp.CertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ocsp.CertID:org.bouncycastle.asn1.ocsp.CertID getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.pkcs.EncryptedData:org.bouncycastle.asn1.x509.AlgorithmIdentifier getEncryptionAlgorithm()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])"
        ]
    },
    "org.bouncycastle.asn1.pkcs.EncryptionScheme:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.pkcs.EncryptionScheme:org.bouncycastle.asn1.pkcs.EncryptionScheme getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.pkcs.KeyDerivationFunc:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.pkcs.KeyDerivationFunc:org.bouncycastle.asn1.pkcs.KeyDerivationFunc getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x509.AttributeCertificate:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.AttributeCertificate:org.bouncycastle.asn1.x509.AttributeCertificate getInstance(java.lang.Object)",
            "org.bouncycastle.x509.X509V2AttributeCertificateGenerator:org.bouncycastle.x509.X509AttributeCertificate generate(java.security.PrivateKey,java.lang.String,java.security.SecureRandom)"
        ]
    },
    "org.bouncycastle.asn1.x509.Certificate:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.Certificate:org.bouncycastle.asn1.x509.Certificate getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x509.CertificateList:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.CertificateList:org.bouncycastle.asn1.x509.CertificateList getInstance(java.lang.Object)",
            "org.bouncycastle.x509.X509V2CRLGenerator:java.security.cert.X509CRL generateJcaObject(org.bouncycastle.asn1.x509.TBSCertList,byte[])"
        ]
    },
    "org.bouncycastle.asn1.x509.X509CertificateStructure:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.X509CertificateStructure:org.bouncycastle.asn1.x509.X509CertificateStructure getInstance(java.lang.Object)",
            "org.bouncycastle.ocsp.BasicOCSPRespGenerator:org.bouncycastle.ocsp.BasicOCSPResp generateResponse(java.lang.String,java.security.PrivateKey,java.security.cert.X509Certificate[],java.util.Date,java.lang.String,java.security.SecureRandom)",
            "org.bouncycastle.ocsp.OCSPReqGenerator:org.bouncycastle.ocsp.OCSPReq generateRequest(org.bouncycastle.asn1.DERObjectIdentifier,java.security.PrivateKey,java.security.cert.X509Certificate[],java.lang.String,java.security.SecureRandom)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.rsa.BCRSAPublicKey:void readObject(java.io.ObjectInputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.X509Attribute:void <init>(org.bouncycastle.asn1.ASN1Encodable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.X509V2AttributeCertificate:org.bouncycastle.x509.X509Attribute[] getAttributes()",
            "org.bouncycastle.x509.X509V2AttributeCertificate:org.bouncycastle.x509.X509Attribute[] getAttributes(java.lang.String)"
        ]
    },
    "org.bouncycastle.x509.X509V2AttributeCertificateGenerator:void addAttribute(org.bouncycastle.x509.X509Attribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.examples.AttrCertExample:void main(java.lang.String[])"
        ]
    },
    "org.bouncycastle.asn1.x509.V2AttributeCertificateInfoGenerator:org.bouncycastle.asn1.x509.AttributeCertificateInfo generateAttributeCertificateInfo()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.X509V2AttributeCertificateGenerator:org.bouncycastle.x509.X509AttributeCertificate generate(java.security.PrivateKey,java.lang.String,java.security.SecureRandom)"
        ]
    },
    "org.bouncycastle.asn1.x509.AuthorityKeyIdentifier:org.bouncycastle.asn1.x509.AuthorityKeyIdentifier fromExtensions(org.bouncycastle.asn1.x509.Extensions)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.BasicConstraints:org.bouncycastle.asn1.x509.BasicConstraints fromExtensions(org.bouncycastle.asn1.x509.Extensions)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.isismtt.ocsp.RequestedCertificate:org.bouncycastle.asn1.isismtt.ocsp.RequestedCertificate getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.isismtt.ocsp.RequestedCertificate:org.bouncycastle.asn1.isismtt.ocsp.RequestedCertificate getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)"
        ]
    },
    "org.bouncycastle.asn1.cmp.CRLAnnContent:org.bouncycastle.asn1.x509.CertificateList[] getCertificateLists()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cmp.RevRepContent:org.bouncycastle.asn1.x509.CertificateList[] getCrls()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.esf.RevocationValues:org.bouncycastle.asn1.x509.CertificateList[] getCrlVals()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.CRL getCRL()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.CRL readDERCRL(org.bouncycastle.asn1.ASN1InputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.CRL engineGenerateCRL(java.io.InputStream)"
        ]
    },
    "org.bouncycastle.asn1.x509.CertificatePolicies:org.bouncycastle.asn1.x509.CertificatePolicies fromExtensions(org.bouncycastle.asn1.x509.Extensions)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.pkcs.MacData:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.pkcs.MacData:org.bouncycastle.asn1.pkcs.MacData getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x509.ExtendedKeyUsage:org.bouncycastle.asn1.x509.ExtendedKeyUsage fromExtensions(org.bouncycastle.asn1.x509.Extensions)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.dvcs.CertEtcToken:org.bouncycastle.asn1.dvcs.CertEtcToken getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.dvcs.CertEtcToken:org.bouncycastle.asn1.dvcs.CertEtcToken[] arrayFromSequence(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.dvcs.TargetEtcChain:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.cmp.RevDetails:void <init>(org.bouncycastle.asn1.crmf.CertTemplate,org.bouncycastle.asn1.x509.X509Extensions)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.crmf.CertTemplateBuilder:org.bouncycastle.asn1.crmf.CertTemplateBuilder setExtensions(org.bouncycastle.asn1.x509.X509Extensions)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.ocsp.SingleResponse:void <init>(org.bouncycastle.asn1.ocsp.CertID,org.bouncycastle.asn1.ocsp.CertStatus,org.bouncycastle.asn1.DERGeneralizedTime,org.bouncycastle.asn1.DERGeneralizedTime,org.bouncycastle.asn1.x509.X509Extensions)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.ocsp.BasicOCSPRespGenerator$ResponseObject:org.bouncycastle.asn1.ocsp.SingleResponse toResponse()"
        ]
    },
    "org.bouncycastle.asn1.ocsp.TBSRequest:void <init>(org.bouncycastle.asn1.x509.GeneralName,org.bouncycastle.asn1.ASN1Sequence,org.bouncycastle.asn1.x509.X509Extensions)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.ocsp.OCSPReqGenerator:org.bouncycastle.ocsp.OCSPReq generateRequest(org.bouncycastle.asn1.DERObjectIdentifier,java.security.PrivateKey,java.security.cert.X509Certificate[],java.lang.String,java.security.SecureRandom)"
        ]
    },
    "org.bouncycastle.asn1.x509.TBSCertList$CRLEntry:org.bouncycastle.asn1.x509.Extensions getExtensions()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLEntryObject:java.util.Set getExtensionOIDs(boolean)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLEntryObject:org.bouncycastle.asn1.x509.Extension getExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLEntryObject:boolean hasExtensions()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLEntryObject:java.lang.String toString()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:java.util.Set loadCRLEntries()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:java.security.cert.X509CRLEntry getRevokedCertificate(java.math.BigInteger)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:boolean isRevoked(java.security.cert.Certificate)",
            "org.bouncycastle.jce.provider.X509CRLEntryObject:java.util.Set getExtensionOIDs(boolean)",
            "org.bouncycastle.jce.provider.X509CRLEntryObject:org.bouncycastle.asn1.x509.Extension getExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier)",
            "org.bouncycastle.jce.provider.X509CRLEntryObject:boolean hasExtensions()",
            "org.bouncycastle.jce.provider.X509CRLEntryObject:java.lang.String toString()",
            "org.bouncycastle.jce.provider.X509CRLObject:java.util.Set loadCRLEntries()",
            "org.bouncycastle.jce.provider.X509CRLObject:java.security.cert.X509CRLEntry getRevokedCertificate(java.math.BigInteger)",
            "org.bouncycastle.jce.provider.X509CRLObject:boolean isRevoked(java.security.cert.Certificate)"
        ]
    },
    "org.bouncycastle.asn1.x509.V2AttributeCertificateInfoGenerator:void setExtensions(org.bouncycastle.asn1.x509.X509Extensions)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.X509V2AttributeCertificateGenerator:org.bouncycastle.x509.X509AttributeCertificate generate(java.security.PrivateKey,java.lang.String,java.security.SecureRandom)"
        ]
    },
    "org.bouncycastle.asn1.x509.V2TBSCertListGenerator:void setExtensions(org.bouncycastle.asn1.x509.X509Extensions)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.X509V2CRLGenerator:org.bouncycastle.asn1.x509.TBSCertList generateCertList()"
        ]
    },
    "org.bouncycastle.asn1.x509.V3TBSCertificateGenerator:void setExtensions(org.bouncycastle.asn1.x509.X509Extensions)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.X509V3CertificateGenerator:org.bouncycastle.asn1.x509.TBSCertificate generateTbsCert()"
        ]
    },
    "org.bouncycastle.ocsp.OCSPReqGenerator$RequestObject:org.bouncycastle.asn1.ocsp.Request toRequest()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.ocsp.OCSPReqGenerator:org.bouncycastle.ocsp.OCSPReq generateRequest(org.bouncycastle.asn1.DERObjectIdentifier,java.security.PrivateKey,java.security.cert.X509Certificate[],java.lang.String,java.security.SecureRandom)"
        ]
    },
    "org.bouncycastle.x509.X509V2CRLGenerator:void addCRLEntry(java.math.BigInteger,java.util.Date,org.bouncycastle.asn1.x509.X509Extensions)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.AuthorityKeyIdentifier:void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo,org.bouncycastle.asn1.x509.GeneralNames,java.math.BigInteger)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure:org.bouncycastle.asn1.ASN1Sequence fromCertificate(java.security.cert.X509Certificate)"
        ]
    },
    "org.bouncycastle.asn1.x509.AuthorityKeyIdentifier:void <init>(org.bouncycastle.asn1.x509.GeneralNames,java.math.BigInteger)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.AuthorityKeyIdentifier:void <init>(byte[],org.bouncycastle.asn1.x509.GeneralNames,java.math.BigInteger)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure:org.bouncycastle.asn1.ASN1Sequence fromCertificate(java.security.cert.X509Certificate)"
        ]
    },
    "org.bouncycastle.asn1.x509.GeneralNames:org.bouncycastle.asn1.x509.GeneralNames fromExtensions(org.bouncycastle.asn1.x509.Extensions,org.bouncycastle.asn1.ASN1ObjectIdentifier)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.AttributeCertificateHolder:void <init>(org.bouncycastle.jce.X509Principal,java.math.BigInteger)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.AttributeCertificateHolder:void <init>(javax.security.auth.x500.X500Principal,java.math.BigInteger)"
        ]
    },
    "org.bouncycastle.x509.AttributeCertificateHolder:org.bouncycastle.asn1.x509.GeneralNames generateGeneralNames(org.bouncycastle.jce.X509Principal)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.AttributeCertificateHolder:void <init>(java.security.cert.X509Certificate)",
            "org.bouncycastle.x509.AttributeCertificateHolder:void <init>(org.bouncycastle.jce.X509Principal)"
        ]
    },
    "org.bouncycastle.x509.AttributeCertificateIssuer:void <init>(org.bouncycastle.jce.X509Principal)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.AttributeCertificateIssuer:void <init>(javax.security.auth.x500.X500Principal)"
        ]
    },
    "org.bouncycastle.x509.PKIXCertPathReviewer:java.util.Vector getCRLDistUrls(org.bouncycastle.asn1.x509.CRLDistPoint)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkSignatures()"
        ]
    },
    "org.bouncycastle.asn1.x509.NameConstraints:org.bouncycastle.asn1.x509.GeneralSubtree[] createArray(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.NameConstraints:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.x509.AttributeCertificateHolder:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object clone()",
            "org.bouncycastle.x509.X509V2AttributeCertificate:org.bouncycastle.x509.AttributeCertificateHolder getHolder()"
        ]
    },
    "org.bouncycastle.asn1.x509.PolicyConstraints:org.bouncycastle.asn1.x509.PolicyConstraints fromExtensions(org.bouncycastle.asn1.x509.Extensions)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.dvcs.PathProcInput:org.bouncycastle.asn1.x509.PolicyInformation[] fromSequence(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.dvcs.PathProcInput:org.bouncycastle.asn1.dvcs.PathProcInput getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.ess.OtherSigningCertificate:org.bouncycastle.asn1.x509.PolicyInformation[] getPolicies()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.ess.SigningCertificate:org.bouncycastle.asn1.x509.PolicyInformation[] getPolicies()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.ess.SigningCertificateV2:org.bouncycastle.asn1.x509.PolicyInformation[] getPolicies()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.CertificatePolicies:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.CertificatePolicies:org.bouncycastle.asn1.x509.CertificatePolicies getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x509.TBSCertList:org.bouncycastle.asn1.x509.TBSCertList$CRLEntry[] getRevokedCertificates()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.CertificateList:org.bouncycastle.asn1.x509.TBSCertList$CRLEntry[] getRevokedCertificates()"
        ]
    },
    "org.bouncycastle.asn1.x509.V2TBSCertListGenerator:org.bouncycastle.asn1.x509.TBSCertList generateTBSCertList()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.X509V2CRLGenerator:org.bouncycastle.asn1.x509.TBSCertList generateCertList()"
        ]
    },
    "org.bouncycastle.asn1.x509.V1TBSCertificateGenerator:org.bouncycastle.asn1.x509.TBSCertificate generateTBSCertificate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.X509V1CertificateGenerator:java.security.cert.X509Certificate generate(java.security.PrivateKey,java.security.SecureRandom)",
            "org.bouncycastle.x509.X509V1CertificateGenerator:java.security.cert.X509Certificate generate(java.security.PrivateKey,java.lang.String,java.security.SecureRandom)"
        ]
    },
    "org.bouncycastle.asn1.x509.V3TBSCertificateGenerator:org.bouncycastle.asn1.x509.TBSCertificate generateTBSCertificate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.X509V3CertificateGenerator:org.bouncycastle.asn1.x509.TBSCertificate generateTbsCert()"
        ]
    },
    "org.bouncycastle.asn1.x509.sigi.NameOrPseudonym:org.bouncycastle.asn1.x509.sigi.NameOrPseudonym getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.sigi.PersonalData:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:void verify(java.security.PublicKey)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:java.security.cert.Certificate[] engineGetCertificateChain(java.lang.String)",
            "org.bouncycastle.jce.examples.PKCS12Example:java.security.cert.Certificate createMasterCert(java.security.PublicKey,java.security.PrivateKey)",
            "org.bouncycastle.jce.examples.PKCS12Example:java.security.cert.Certificate createIntermediateCert(java.security.PublicKey,java.security.PrivateKey,java.security.cert.X509Certificate)",
            "org.bouncycastle.jce.examples.PKCS12Example:java.security.cert.Certificate createCert(java.security.PublicKey,java.security.PrivateKey,java.security.PublicKey)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void verifyX509Certificate(java.security.cert.X509Certificate,java.security.PublicKey,java.lang.String)",
            "org.bouncycastle.x509.examples.AttrCertExample:java.security.cert.X509Certificate createAcIssuerCert(java.security.PublicKey,java.security.PrivateKey)",
            "org.bouncycastle.x509.examples.AttrCertExample:java.security.cert.X509Certificate createClientCert(java.security.PublicKey,java.security.PrivateKey,java.security.PublicKey)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:void verify(java.security.PublicKey,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void verifyX509Certificate(java.security.cert.X509Certificate,java.security.PublicKey,java.lang.String)"
        ]
    },
    "org.bouncycastle.jce.provider.X509CertificateObject:void verify(java.security.PublicKey)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:java.security.cert.Certificate[] engineGetCertificateChain(java.lang.String)",
            "org.bouncycastle.jce.examples.PKCS12Example:java.security.cert.Certificate createMasterCert(java.security.PublicKey,java.security.PrivateKey)",
            "org.bouncycastle.jce.examples.PKCS12Example:java.security.cert.Certificate createIntermediateCert(java.security.PublicKey,java.security.PrivateKey,java.security.cert.X509Certificate)",
            "org.bouncycastle.jce.examples.PKCS12Example:java.security.cert.Certificate createCert(java.security.PublicKey,java.security.PrivateKey,java.security.PublicKey)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void verifyX509Certificate(java.security.cert.X509Certificate,java.security.PublicKey,java.lang.String)",
            "org.bouncycastle.x509.examples.AttrCertExample:java.security.cert.X509Certificate createAcIssuerCert(java.security.PublicKey,java.security.PrivateKey)",
            "org.bouncycastle.x509.examples.AttrCertExample:java.security.cert.X509Certificate createClientCert(java.security.PublicKey,java.security.PrivateKey,java.security.PublicKey)"
        ]
    },
    "org.bouncycastle.jce.provider.X509CertificateObject:void verify(java.security.PublicKey,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void verifyX509Certificate(java.security.cert.X509Certificate,java.security.PublicKey,java.lang.String)"
        ]
    },
    "org.bouncycastle.asn1.cms.SignedData:void <init>(org.bouncycastle.asn1.ASN1Set,org.bouncycastle.asn1.cms.ContentInfo,org.bouncycastle.asn1.ASN1Set,org.bouncycastle.asn1.ASN1Set,org.bouncycastle.asn1.ASN1Set)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.crmf.POPOPrivKey:org.bouncycastle.asn1.crmf.POPOPrivKey getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.crmf.ProofOfPossession:void <init>(org.bouncycastle.asn1.ASN1TaggedObject)"
        ]
    },
    "org.bouncycastle.asn1.isismtt.x509.ProcurationSyntax:org.bouncycastle.asn1.isismtt.x509.ProcurationSyntax getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure:void <init>(org.bouncycastle.asn1.x509.X509Extension)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure:void <init>(org.bouncycastle.asn1.x509.Extension)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.CertificatePair:org.bouncycastle.asn1.x509.CertificatePair getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.X509CertPairParser:org.bouncycastle.x509.X509CertificatePair readDERCrossCertificatePair(java.io.InputStream)",
            "org.bouncycastle.jce.provider.X509LDAPCertStoreSpi:java.util.Collection engineGetCertificates(java.security.cert.CertSelector)"
        ]
    },
    "org.bouncycastle.asn1.x509.DistributionPoint:org.bouncycastle.asn1.x509.DistributionPoint getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.CRLDistPoint:org.bouncycastle.asn1.x509.DistributionPoint[] getDistributionPoints()",
            "org.bouncycastle.asn1.x509.DistributionPoint:org.bouncycastle.asn1.x509.DistributionPoint getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)"
        ]
    },
    "org.bouncycastle.asn1.x509.sigi.PersonalData:org.bouncycastle.asn1.x509.sigi.PersonalData getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.dvcs.ServiceType:org.bouncycastle.asn1.dvcs.ServiceType getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.ocsp.OCSPResponse:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ocsp.OCSPResponse:org.bouncycastle.asn1.ocsp.OCSPResponse getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLI(java.util.Date,java.security.cert.X509CRL,java.lang.Object,org.bouncycastle.jce.provider.CertStatus,org.bouncycastle.x509.ExtendedPKIXParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void checkCRL(org.bouncycastle.asn1.x509.DistributionPoint,org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,org.bouncycastle.jce.provider.CertStatus,org.bouncycastle.jce.provider.ReasonsMask,java.util.List)",
            "org.bouncycastle.jce.provider.RFC3281CertPathUtilities:void checkCRL(org.bouncycastle.asn1.x509.DistributionPoint,org.bouncycastle.x509.X509AttributeCertificate,org.bouncycastle.x509.ExtendedPKIXParameters,java.util.Date,java.security.cert.X509Certificate,org.bouncycastle.jce.provider.CertStatus,org.bouncycastle.jce.provider.ReasonsMask,java.util.List)"
        ]
    },
    "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLJ(java.util.Date,java.security.cert.X509CRL,java.lang.Object,org.bouncycastle.jce.provider.CertStatus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void checkCRL(org.bouncycastle.asn1.x509.DistributionPoint,org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,org.bouncycastle.jce.provider.CertStatus,org.bouncycastle.jce.provider.ReasonsMask,java.util.List)",
            "org.bouncycastle.jce.provider.RFC3281CertPathUtilities:void checkCRL(org.bouncycastle.asn1.x509.DistributionPoint,org.bouncycastle.x509.X509AttributeCertificate,org.bouncycastle.x509.ExtendedPKIXParameters,java.util.Date,java.security.cert.X509Certificate,org.bouncycastle.jce.provider.CertStatus,org.bouncycastle.jce.provider.ReasonsMask,java.util.List)"
        ]
    },
    "org.bouncycastle.asn1.isismtt.x509.DeclarationOfMajority:org.bouncycastle.asn1.ASN1GeneralizedTime getDateOfBirth()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.isismtt.x509.NamingAuthority:org.bouncycastle.asn1.isismtt.x509.NamingAuthority getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.isismtt.x509.NamingAuthority:org.bouncycastle.asn1.isismtt.x509.NamingAuthority getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)"
        ]
    },
    "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectEmail(java.util.Set,java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void intersectPermittedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree[])"
        ]
    },
    "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDNS(java.util.Set,java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void intersectPermittedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree[])"
        ]
    },
    "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectURI(java.util.Set,java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void intersectPermittedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree[])"
        ]
    },
    "org.bouncycastle.asn1.cmp.PollReqContent:org.bouncycastle.asn1.ASN1Integer[][] getCertReqIds()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.RSAPublicKeyStructure:org.bouncycastle.asn1.x509.RSAPublicKeyStructure getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.RSAPublicKeyStructure:org.bouncycastle.asn1.x509.RSAPublicKeyStructure getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLEntryObject:java.math.BigInteger getSerialNumber()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLEntryObject:java.lang.String toString()"
        ]
    },
    "org.bouncycastle.jce.provider.X509CRLEntryObject:java.math.BigInteger getSerialNumber()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.X509CRLEntryObject:java.lang.String toString()"
        ]
    },
    "org.bouncycastle.asn1.x9.DHValidationParms:org.bouncycastle.asn1.x9.DHValidationParms getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.DHValidationParms:org.bouncycastle.asn1.x9.DHValidationParms getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey:void <init>(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey:void <init>(java.lang.String,org.bouncycastle.asn1.pkcs.PrivateKeyInfo,org.bouncycastle.jcajce.provider.config.ProviderConfiguration)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)"
        ]
    },
    "org.bouncycastle.jce.provider.JCEECPrivateKey:void <init>(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.X509CRLStoreSelector:boolean match(java.security.cert.CRL)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.CertStoreCollectionSpi:java.util.Collection engineGetCRLs(java.security.cert.CRLSelector)",
            "org.bouncycastle.jce.provider.X509LDAPCertStoreSpi:java.util.Collection engineGetCRLs(java.security.cert.CRLSelector)"
        ]
    },
    "org.bouncycastle.asn1.x509.X509Extensions:void <init>(java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:org.bouncycastle.asn1.x509.X509Extensions generate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.X509V2AttributeCertificateGenerator:org.bouncycastle.x509.X509AttributeCertificate generate(java.security.PrivateKey,java.lang.String,java.security.SecureRandom)",
            "org.bouncycastle.x509.X509V2CRLGenerator:org.bouncycastle.asn1.x509.TBSCertList generateCertList()",
            "org.bouncycastle.x509.X509V3CertificateGenerator:org.bouncycastle.asn1.x509.TBSCertificate generateTbsCert()"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dsa.KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi:java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.jce.provider.BouncyCastleProvider:java.security.PrivateKey getPrivateKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.BouncyCastlePQCProvider:java.security.PrivateKey getPrivateKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.rsa.KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.KeyFactorySpi:java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi:java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.jce.provider.BouncyCastleProvider:java.security.PrivateKey getPrivateKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.BouncyCastlePQCProvider:java.security.PrivateKey getPrivateKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)"
        ]
    },
    "org.bouncycastle.jce.provider.BouncyCastleProvider:java.security.PrivateKey getPrivateKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:java.security.Key engineUnwrap(byte[],java.lang.String,int)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil:org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePrivateKeyParameter(java.security.PrivateKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.KeyFactory:java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:java.security.Key engineUnwrap(byte[],java.lang.String,int)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:java.security.Key engineUnwrap(byte[],java.lang.String,int)"
        ]
    },
    "org.bouncycastle.pqc.jcajce.provider.BouncyCastlePQCProvider:java.security.PrivateKey getPrivateKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.Extensions:org.bouncycastle.asn1.ASN1Encodable getExtensionParsedValue(org.bouncycastle.asn1.ASN1ObjectIdentifier)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.AuthorityKeyIdentifier:org.bouncycastle.asn1.x509.AuthorityKeyIdentifier fromExtensions(org.bouncycastle.asn1.x509.Extensions)",
            "org.bouncycastle.asn1.x509.BasicConstraints:org.bouncycastle.asn1.x509.BasicConstraints fromExtensions(org.bouncycastle.asn1.x509.Extensions)",
            "org.bouncycastle.asn1.x509.CertificatePolicies:org.bouncycastle.asn1.x509.CertificatePolicies fromExtensions(org.bouncycastle.asn1.x509.Extensions)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:org.bouncycastle.asn1.x509.ExtendedKeyUsage fromExtensions(org.bouncycastle.asn1.x509.Extensions)",
            "org.bouncycastle.asn1.x509.GeneralNames:org.bouncycastle.asn1.x509.GeneralNames fromExtensions(org.bouncycastle.asn1.x509.Extensions,org.bouncycastle.asn1.ASN1ObjectIdentifier)",
            "org.bouncycastle.asn1.x509.KeyUsage:org.bouncycastle.asn1.x509.KeyUsage fromExtensions(org.bouncycastle.asn1.x509.Extensions)",
            "org.bouncycastle.asn1.x509.PolicyConstraints:org.bouncycastle.asn1.x509.PolicyConstraints fromExtensions(org.bouncycastle.asn1.x509.Extensions)",
            "org.bouncycastle.asn1.x509.SubjectKeyIdentifier:org.bouncycastle.asn1.x509.SubjectKeyIdentifier fromExtensions(org.bouncycastle.asn1.x509.Extensions)"
        ]
    },
    "org.bouncycastle.asn1.x509.Target:void <init>(org.bouncycastle.asn1.ASN1TaggedObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.Target:org.bouncycastle.asn1.x509.Target getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.Target:void <init>(int,org.bouncycastle.asn1.x509.GeneralName)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dstu.KeyPairGeneratorSpi:java.security.KeyPair generateKeyPair()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC:java.security.KeyPair generateKeyPair()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ecgost.KeyPairGeneratorSpi:java.security.KeyPair generateKeyPair()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi$CertId:void <init>(org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi,java.security.PublicKey)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineDeleteEntry(java.lang.String)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineSetCertificateEntry(java.lang.String,java.security.cert.Certificate)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineSetKeyEntry(java.lang.String,java.security.Key,char[],java.security.cert.Certificate[])",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])"
        ]
    },
    "org.bouncycastle.ocsp.BasicOCSPRespGenerator:org.bouncycastle.ocsp.BasicOCSPResp generate(java.lang.String,java.security.PrivateKey,java.security.cert.X509Certificate[],java.util.Date,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.X509V3CertificateGenerator:void copyAndAddExtension(org.bouncycastle.asn1.DERObjectIdentifier,boolean,java.security.cert.X509Certificate)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.LazyEncodedSequence:org.bouncycastle.asn1.ASN1Encodable getObjectAt(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Sequence$1:org.bouncycastle.asn1.ASN1Encodable readObject()",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Encodable[] toArray()",
            "org.bouncycastle.asn1.cmp.CAKeyUpdAnnContent:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.CRLAnnContent:org.bouncycastle.asn1.x509.CertificateList[] getCertificateLists()",
            "org.bouncycastle.asn1.cmp.CertConfirmContent:org.bouncycastle.asn1.'cmp'.CertStatus[] toCertStatusArray()",
            "org.bouncycastle.asn1.cmp.CertRepMessage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.CertRepMessage:org.bouncycastle.asn1.'cmp'.CMPCertificate[] getCaPubs()",
            "org.bouncycastle.asn1.cmp.CertRepMessage:org.bouncycastle.asn1.'cmp'.CertResponse[] getResponse()",
            "org.bouncycastle.asn1.cmp.CertResponse:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.CertStatus:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.CertifiedKeyPair:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.Challenge:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.GenMsgContent:org.bouncycastle.asn1.'cmp'.InfoTypeAndValue[] toInfoTypeAndValueArray()",
            "org.bouncycastle.asn1.cmp.GenRepContent:org.bouncycastle.asn1.'cmp'.InfoTypeAndValue[] toInfoTypeAndValueArray()",
            "org.bouncycastle.asn1.cmp.InfoTypeAndValue:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.KeyRecRepContent:org.bouncycastle.asn1.'cmp'.CMPCertificate[] getCaCerts()",
            "org.bouncycastle.asn1.cmp.KeyRecRepContent:org.bouncycastle.asn1.'cmp'.CertifiedKeyPair[] getKeyPairHist()",
            "org.bouncycastle.asn1.cmp.OOBCertHash:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.PBMParameter:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.PKIFreeText:org.bouncycastle.asn1.DERUTF8String getStringAt(int)",
            "org.bouncycastle.asn1.cmp.PKIHeader:org.bouncycastle.asn1.'cmp'.InfoTypeAndValue[] getGeneralInfo()",
            "org.bouncycastle.asn1.cmp.PKIMessage:org.bouncycastle.asn1.'cmp'.CMPCertificate[] getExtraCerts()",
            "org.bouncycastle.asn1.cmp.PKIMessages:org.bouncycastle.asn1.'cmp'.PKIMessage[] toPKIMessageArray()",
            "org.bouncycastle.asn1.cmp.PKIStatusInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.POPODecKeyChallContent:org.bouncycastle.asn1.'cmp'.Challenge[] toChallengeArray()",
            "org.bouncycastle.asn1.cmp.POPODecKeyRespContent:org.bouncycastle.asn1.ASN1Integer[] toASN1IntegerArray()",
            "org.bouncycastle.asn1.cmp.PollRepContent:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.PollReqContent:org.bouncycastle.asn1.ASN1Integer[][] getCertReqIds()",
            "org.bouncycastle.asn1.cmp.PollReqContent:org.bouncycastle.asn1.ASN1Integer[] sequenceToASN1IntegerArray(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.ProtectedPart:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.RevAnnContent:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.RevDetails:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.RevRepContent:org.bouncycastle.asn1.'cmp'.PKIStatusInfo[] getStatus()",
            "org.bouncycastle.asn1.cmp.RevRepContent:org.bouncycastle.asn1.crmf.CertId[] getRevCerts()",
            "org.bouncycastle.asn1.cmp.RevRepContent:org.bouncycastle.asn1.x509.CertificateList[] getCrls()",
            "org.bouncycastle.asn1.cmp.RevReqContent:org.bouncycastle.asn1.'cmp'.RevDetails[] toRevDetailsArray()",
            "org.bouncycastle.asn1.cms.Attribute:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthenticatedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.CCMParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.CompressedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.ContentInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.DigestedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.EncryptedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.EnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.GCMParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.IssuerAndSerialNumber:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.KEKIdentifier:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.KEKRecipientInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.KeyAgreeRecipientInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.KeyTransRecipientInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.MetaData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.OriginatorInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.OriginatorPublicKey:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.OtherKeyAttribute:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.OtherRecipientInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.OtherRevocationInfoFormat:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.PasswordRecipientInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.RecipientEncryptedKey:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.RecipientKeyIdentifier:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.SCVPReqRes:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.TimeStampAndCRL:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.TimeStampedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.ecc.MQVuserKeyingMaterial:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.crmf.AttributeTypeAndValue:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.crmf.CertId:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.crmf.CertReqMessages:org.bouncycastle.asn1.crmf.CertReqMsg[] toCertReqMsgArray()",
            "org.bouncycastle.asn1.crmf.CertReqMsg:org.bouncycastle.asn1.crmf.AttributeTypeAndValue[] getRegInfo()",
            "org.bouncycastle.asn1.crmf.CertRequest:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.crmf.Controls:org.bouncycastle.asn1.crmf.AttributeTypeAndValue[] toAttributeTypeAndValueArray()",
            "org.bouncycastle.asn1.crmf.EncKeyWithID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.crmf.EncryptedValue:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.crmf.PKIPublicationInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.crmf.PKIPublicationInfo:org.bouncycastle.asn1.crmf.SinglePubInfo[] getPubInfos()",
            "org.bouncycastle.asn1.crmf.PKMACValue:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.crmf.POPOSigningKey:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.crmf.POPOSigningKeyInput:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.crmf.SinglePubInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cryptopro.GOST3410PublicKeyAlgParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.dvcs.CertEtcToken:org.bouncycastle.asn1.dvcs.CertEtcToken[] arrayFromSequence(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.dvcs.DVCSCertInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.dvcs.DVCSErrorNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.dvcs.DVCSRequest:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.dvcs.DVCSRequestInformation:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.dvcs.Data:org.bouncycastle.asn1.dvcs.TargetEtcChain[] getCerts()",
            "org.bouncycastle.asn1.dvcs.PathProcInput:org.bouncycastle.asn1.x509.PolicyInformation[] fromSequence(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.dvcs.PathProcInput:org.bouncycastle.asn1.dvcs.PathProcInput getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.dvcs.TargetEtcChain:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.dvcs.TargetEtcChain:org.bouncycastle.asn1.dvcs.TargetEtcChain[] arrayFromSequence(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.eac.CVCertificateRequest:void <init>(org.bouncycastle.asn1.DERApplicationSpecific)",
            "org.bouncycastle.asn1.eac.PublicKeyDataObject:org.bouncycastle.asn1.eac.PublicKeyDataObject getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.esf.CommitmentTypeIndication:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.CommitmentTypeQualifier:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.CompleteRevocationRefs:org.bouncycastle.asn1.esf.CrlOcspRef[] getCrlOcspRefs()",
            "org.bouncycastle.asn1.esf.CrlIdentifier:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.CrlListID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.CrlListID:org.bouncycastle.asn1.esf.CrlValidatedID[] getCrls()",
            "org.bouncycastle.asn1.esf.CrlValidatedID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OcspIdentifier:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OcspListID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OcspListID:org.bouncycastle.asn1.esf.OcspResponsesID[] getOcspResponses()",
            "org.bouncycastle.asn1.esf.OcspResponsesID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherHashAlgAndValue:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.RevocationValues:org.bouncycastle.asn1.x509.CertificateList[] getCrlVals()",
            "org.bouncycastle.asn1.esf.RevocationValues:org.bouncycastle.asn1.ocsp.BasicOCSPResponse[] getOcspVals()",
            "org.bouncycastle.asn1.esf.SigPolicyQualifierInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.SigPolicyQualifiers:org.bouncycastle.asn1.esf.SigPolicyQualifierInfo getInfoAt(int)",
            "org.bouncycastle.asn1.esf.SignaturePolicyId:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.SignerAttribute:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherSigningCertificate:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherSigningCertificate:org.bouncycastle.asn1.ess.OtherCertID[] getCerts()",
            "org.bouncycastle.asn1.ess.OtherSigningCertificate:org.bouncycastle.asn1.x509.PolicyInformation[] getPolicies()",
            "org.bouncycastle.asn1.ess.SigningCertificate:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.SigningCertificate:org.bouncycastle.asn1.ess.ESSCertID[] getCerts()",
            "org.bouncycastle.asn1.ess.SigningCertificate:org.bouncycastle.asn1.x509.PolicyInformation[] getPolicies()",
            "org.bouncycastle.asn1.ess.SigningCertificateV2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.SigningCertificateV2:org.bouncycastle.asn1.ess.ESSCertIDv2[] getCerts()",
            "org.bouncycastle.asn1.ess.SigningCertificateV2:org.bouncycastle.asn1.x509.PolicyInformation[] getPolicies()",
            "org.bouncycastle.asn1.icao.CscaMasterList:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.icao.LDSSecurityObject:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.icao.LDSVersionInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.isismtt.ocsp.CertHash:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.isismtt.x509.AdmissionSyntax:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.misc.CAST5CBCParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.misc.IDEACBCPar:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.mozilla.PublicKeyAndChallenge:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ocsp.BasicOCSPResponse:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ocsp.CertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ocsp.OCSPRequest:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ocsp.OCSPResponse:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ocsp.Request:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ocsp.ResponseBytes:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ocsp.ResponseData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ocsp.RevokedInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ocsp.Signature:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ocsp.SingleResponse:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ocsp.TBSRequest:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.Attribute:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.AuthenticatedSafe:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.CRLBag:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.CertBag:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.CertificationRequest:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.CertificationRequestInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.EncryptedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.EncryptedData:org.bouncycastle.asn1.ASN1ObjectIdentifier getContentType()",
            "org.bouncycastle.asn1.pkcs.EncryptedData:org.bouncycastle.asn1.x509.AlgorithmIdentifier getEncryptionAlgorithm()",
            "org.bouncycastle.asn1.pkcs.EncryptedData:org.bouncycastle.asn1.ASN1OctetString getContent()",
            "org.bouncycastle.asn1.pkcs.IssuerAndSerialNumber:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.MacData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PBEParameter:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PBES2Algorithms:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PKCS12PBEParams:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.Pfx:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.RC2CBCParameter:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.RSAESOAEPparams:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.RSASSAPSSparams:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.SafeBag:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.sec.ECPrivateKey:java.math.BigInteger getKey()",
            "org.bouncycastle.asn1.sec.ECPrivateKeyStructure:java.math.BigInteger getKey()",
            "org.bouncycastle.asn1.smime.SMIMECapability:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.tsp.Accuracy:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.tsp.MessageImprint:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.tsp.TimeStampReq:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ua.DSTU4145BinaryField:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ua.DSTU4145ECBinary:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ua.DSTU4145Params:org.bouncycastle.asn1.ua.DSTU4145Params getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x500.AttributeTypeAndValue:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.AccessDescription:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.AlgorithmIdentifier:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.AttCertValidityPeriod:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.Attribute:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.AttributeCertificate:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.AttributeCertificateInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.AuthorityInformationAccess:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.BasicConstraints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.CRLDistPoint:org.bouncycastle.asn1.x509.DistributionPoint[] getDistributionPoints()",
            "org.bouncycastle.asn1.x509.Certificate:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.CertificateList:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.CertificatePolicies:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.DistributionPoint:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.Extension:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.GeneralNames:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.GeneralSubtree:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.Holder:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.IetfAttrSyntax:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.IssuerSerial:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.IssuingDistributionPoint:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.NameConstraints:org.bouncycastle.asn1.x509.GeneralSubtree[] createArray(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.NoticeReference:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.NoticeReference:org.bouncycastle.asn1.ASN1Integer[] getNoticeNumbers()",
            "org.bouncycastle.asn1.x509.ObjectDigestInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.PolicyConstraints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.PolicyInformation:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.PolicyQualifierInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.RoleSyntax:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.TBSCertList$CRLEntry:org.bouncycastle.asn1.ASN1Integer getUserCertificate()",
            "org.bouncycastle.asn1.x509.TBSCertList$CRLEntry:org.bouncycastle.asn1.x509.Time getRevocationDate()",
            "org.bouncycastle.asn1.x509.TBSCertList$CRLEntry:org.bouncycastle.asn1.x509.Extensions getExtensions()",
            "org.bouncycastle.asn1.x509.TBSCertList:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.TBSCertList:org.bouncycastle.asn1.x509.TBSCertList$CRLEntry[] getRevokedCertificates()",
            "org.bouncycastle.asn1.x509.TBSCertificate:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.TBSCertificateStructure:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.V2Form:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509CertificateStructure:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Extensions:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.qualified.SemanticsInformation:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.sigi.NameOrPseudonym:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.DHValidationParms:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9Curve:void <init>(org.bouncycastle.asn1.x9.X9FieldID,org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9ECParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.signers.DSADigestSigner:java.math.BigInteger[] derDecode(byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey:boolean isPKCSParam(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner:java.math.BigInteger[] derDecode(byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi$StdDSAEncoder:java.math.BigInteger[] decode(byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.ies.AlgorithmParametersSpi:void engineInit(byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.Certificate readDERCertificate(org.bouncycastle.asn1.ASN1InputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.CRL readDERCRL(org.bouncycastle.asn1.ASN1InputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:java.util.List getExtendedKeyUsage()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:java.lang.String getSignatureName(org.bouncycastle.asn1.x509.AlgorithmIdentifier)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.netscape.NetscapeCertRequest:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.jce.provider.JCEDHPublicKey:boolean isPKCSParam(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:boolean withinDNSubtree(org.bouncycastle.asn1.ASN1Sequence,org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:org.bouncycastle.jce.provider.PKIXPolicyNode prepareCertB(java.security.cert.CertPath,int,java.util.List[],org.bouncycastle.jce.provider.PKIXPolicyNode,int)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void prepareNextCertA(java.security.cert.CertPath,int)",
            "org.bouncycastle.jce.provider.X509AttrCertParser:org.bouncycastle.x509.X509AttributeCertificate readDERCertificate(java.io.InputStream)",
            "org.bouncycastle.jce.provider.X509CRLParser:java.security.cert.CRL readDERCRL(java.io.InputStream)",
            "org.bouncycastle.jce.provider.X509CertParser:java.security.cert.Certificate readDERCertificate(java.io.InputStream)",
            "org.bouncycastle.jce.provider.X509CertificateObject:java.util.List getExtendedKeyUsage()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:java.lang.String getSignatureName(org.bouncycastle.asn1.x509.AlgorithmIdentifier)",
            "org.bouncycastle.ocsp.BasicOCSPResp:org.bouncycastle.ocsp.SingleResp[] getResponses()",
            "org.bouncycastle.ocsp.OCSPReq:org.bouncycastle.ocsp.Req[] getRequestList()",
            "org.bouncycastle.ocsp.RespData:org.bouncycastle.ocsp.SingleResp[] getResponses()",
            "org.bouncycastle.pqc.asn1.GMSSPrivateKey:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.pqc.asn1.GMSSPublicKey:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.pqc.asn1.McElieceCCA2PrivateKey:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.pqc.asn1.McElieceCCA2PublicKey:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.pqc.asn1.McEliecePrivateKey:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.pqc.asn1.McEliecePublicKey:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.pqc.asn1.ParSet:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.pqc.asn1.RainbowPrivateKey:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.pqc.asn1.RainbowPublicKey:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PublicKey generatePublic(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PublicKey generatePublic(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkNameConstraints()",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkPolicy()",
            "org.bouncycastle.x509.PKIXCertPathReviewer:boolean processQcStatements(java.security.cert.X509Certificate,int)",
            "org.bouncycastle.x509.X509V2AttributeCertificate:org.bouncycastle.x509.X509Attribute[] getAttributes()",
            "org.bouncycastle.x509.X509V2AttributeCertificate:org.bouncycastle.x509.X509Attribute[] getAttributes(java.lang.String)"
        ]
    },
    "org.bouncycastle.asn1.LazyEncodedSequence:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Sequence$1:void <init>(org.bouncycastle.asn1.ASN1Sequence,org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Encodable[] toArray()",
            "org.bouncycastle.asn1.ASN1Sequence:int hashCode()",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.BEROctetString:org.bouncycastle.asn1.BEROctetString fromSequence(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.CRLAnnContent:org.bouncycastle.asn1.x509.CertificateList[] getCertificateLists()",
            "org.bouncycastle.asn1.cmp.CertConfirmContent:org.bouncycastle.asn1.'cmp'.CertStatus[] toCertStatusArray()",
            "org.bouncycastle.asn1.cmp.CertRepMessage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.CertRepMessage:org.bouncycastle.asn1.'cmp'.CMPCertificate[] getCaPubs()",
            "org.bouncycastle.asn1.cmp.CertRepMessage:org.bouncycastle.asn1.'cmp'.CertResponse[] getResponse()",
            "org.bouncycastle.asn1.cmp.CertResponse:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.CertStatus:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.CertifiedKeyPair:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.Challenge:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.GenMsgContent:org.bouncycastle.asn1.'cmp'.InfoTypeAndValue[] toInfoTypeAndValueArray()",
            "org.bouncycastle.asn1.cmp.GenRepContent:org.bouncycastle.asn1.'cmp'.InfoTypeAndValue[] toInfoTypeAndValueArray()",
            "org.bouncycastle.asn1.cmp.InfoTypeAndValue:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.KeyRecRepContent:org.bouncycastle.asn1.'cmp'.CMPCertificate[] getCaCerts()",
            "org.bouncycastle.asn1.cmp.KeyRecRepContent:org.bouncycastle.asn1.'cmp'.CertifiedKeyPair[] getKeyPairHist()",
            "org.bouncycastle.asn1.cmp.OOBCertHash:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.PKIFreeText:int size()",
            "org.bouncycastle.asn1.cmp.PKIHeader:org.bouncycastle.asn1.'cmp'.InfoTypeAndValue[] getGeneralInfo()",
            "org.bouncycastle.asn1.cmp.PKIMessage:org.bouncycastle.asn1.'cmp'.CMPCertificate[] getExtraCerts()",
            "org.bouncycastle.asn1.cmp.PKIMessages:org.bouncycastle.asn1.'cmp'.PKIMessage[] toPKIMessageArray()",
            "org.bouncycastle.asn1.cmp.PKIStatusInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.POPODecKeyChallContent:org.bouncycastle.asn1.'cmp'.Challenge[] toChallengeArray()",
            "org.bouncycastle.asn1.cmp.POPODecKeyRespContent:org.bouncycastle.asn1.ASN1Integer[] toASN1IntegerArray()",
            "org.bouncycastle.asn1.cmp.PollRepContent:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.PollReqContent:org.bouncycastle.asn1.ASN1Integer[][] getCertReqIds()",
            "org.bouncycastle.asn1.cmp.PollReqContent:org.bouncycastle.asn1.ASN1Integer[] sequenceToASN1IntegerArray(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.RevAnnContent:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.RevDetails:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.RevRepContent:org.bouncycastle.asn1.'cmp'.PKIStatusInfo[] getStatus()",
            "org.bouncycastle.asn1.cmp.RevRepContent:org.bouncycastle.asn1.crmf.CertId[] getRevCerts()",
            "org.bouncycastle.asn1.cmp.RevRepContent:org.bouncycastle.asn1.x509.CertificateList[] getCrls()",
            "org.bouncycastle.asn1.cmp.RevReqContent:org.bouncycastle.asn1.'cmp'.RevDetails[] toRevDetailsArray()",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthenticatedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.CCMParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.ContentInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.EncryptedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.EnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.GCMParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.KEKIdentifier:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.MetaData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.OriginatorInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.RecipientKeyIdentifier:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.TimeStampAndCRL:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.TimeStampTokenEvidence:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.ecc.MQVuserKeyingMaterial:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.crmf.CertReqMessages:org.bouncycastle.asn1.crmf.CertReqMsg[] toCertReqMsgArray()",
            "org.bouncycastle.asn1.crmf.CertReqMsg:org.bouncycastle.asn1.crmf.AttributeTypeAndValue[] getRegInfo()",
            "org.bouncycastle.asn1.crmf.CertRequest:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.crmf.Controls:org.bouncycastle.asn1.crmf.AttributeTypeAndValue[] toAttributeTypeAndValueArray()",
            "org.bouncycastle.asn1.crmf.EncKeyWithID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.crmf.PKIPublicationInfo:org.bouncycastle.asn1.crmf.SinglePubInfo[] getPubInfos()",
            "org.bouncycastle.asn1.crmf.SinglePubInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cryptopro.GOST3410PublicKeyAlgParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.dvcs.CertEtcToken:org.bouncycastle.asn1.dvcs.CertEtcToken[] arrayFromSequence(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.dvcs.DVCSCertInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.dvcs.DVCSErrorNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.dvcs.DVCSRequest:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.dvcs.DVCSRequestInformation:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.dvcs.Data:org.bouncycastle.asn1.dvcs.TargetEtcChain[] getCerts()",
            "org.bouncycastle.asn1.dvcs.PathProcInput:org.bouncycastle.asn1.x509.PolicyInformation[] fromSequence(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.dvcs.PathProcInput:org.bouncycastle.asn1.dvcs.PathProcInput getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.dvcs.TargetEtcChain:org.bouncycastle.asn1.dvcs.TargetEtcChain[] arrayFromSequence(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.eac.CVCertificateRequest:void <init>(org.bouncycastle.asn1.DERApplicationSpecific)",
            "org.bouncycastle.asn1.esf.CommitmentTypeIndication:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.CommitmentTypeQualifier:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.CompleteRevocationRefs:org.bouncycastle.asn1.esf.CrlOcspRef[] getCrlOcspRefs()",
            "org.bouncycastle.asn1.esf.CrlIdentifier:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.CrlListID:org.bouncycastle.asn1.esf.CrlValidatedID[] getCrls()",
            "org.bouncycastle.asn1.esf.CrlValidatedID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OcspIdentifier:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OcspListID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OcspListID:org.bouncycastle.asn1.esf.OcspResponsesID[] getOcspResponses()",
            "org.bouncycastle.asn1.esf.OcspResponsesID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherHashAlgAndValue:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.RevocationValues:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.RevocationValues:org.bouncycastle.asn1.x509.CertificateList[] getCrlVals()",
            "org.bouncycastle.asn1.esf.RevocationValues:org.bouncycastle.asn1.ocsp.BasicOCSPResponse[] getOcspVals()",
            "org.bouncycastle.asn1.esf.SigPolicyQualifiers:int size()",
            "org.bouncycastle.asn1.esf.SignaturePolicyId:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.SignerAttribute:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.SignerLocation:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.SignerLocation:void <init>(org.bouncycastle.asn1.DERUTF8String,org.bouncycastle.asn1.DERUTF8String,org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherSigningCertificate:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherSigningCertificate:org.bouncycastle.asn1.ess.OtherCertID[] getCerts()",
            "org.bouncycastle.asn1.ess.OtherSigningCertificate:org.bouncycastle.asn1.x509.PolicyInformation[] getPolicies()",
            "org.bouncycastle.asn1.ess.SigningCertificate:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.SigningCertificate:org.bouncycastle.asn1.ess.ESSCertID[] getCerts()",
            "org.bouncycastle.asn1.ess.SigningCertificate:org.bouncycastle.asn1.x509.PolicyInformation[] getPolicies()",
            "org.bouncycastle.asn1.ess.SigningCertificateV2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.SigningCertificateV2:org.bouncycastle.asn1.ess.ESSCertIDv2[] getCerts()",
            "org.bouncycastle.asn1.ess.SigningCertificateV2:org.bouncycastle.asn1.x509.PolicyInformation[] getPolicies()",
            "org.bouncycastle.asn1.icao.CscaMasterList:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.icao.LDSSecurityObject:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.icao.LDSVersionInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.isismtt.ocsp.CertHash:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.isismtt.x509.AdmissionSyntax:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.isismtt.x509.AdmissionSyntax:org.bouncycastle.asn1.isismtt.x509.Admissions[] getContentsOfAdmissions()",
            "org.bouncycastle.asn1.isismtt.x509.Admissions:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.isismtt.x509.Admissions:org.bouncycastle.asn1.isismtt.x509.ProfessionInfo[] getProfessionInfos()",
            "org.bouncycastle.asn1.isismtt.x509.MonetaryLimit:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.isismtt.x509.NamingAuthority:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.isismtt.x509.ProcurationSyntax:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.isismtt.x509.ProfessionInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.isismtt.x509.ProfessionInfo:org.bouncycastle.asn1.x500.DirectoryString[] getProfessionItems()",
            "org.bouncycastle.asn1.isismtt.x509.ProfessionInfo:org.bouncycastle.asn1.ASN1ObjectIdentifier[] getProfessionOIDs()",
            "org.bouncycastle.asn1.misc.IDEACBCPar:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ocsp.BasicOCSPResponse:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ocsp.OCSPRequest:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ocsp.OCSPResponse:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ocsp.Request:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ocsp.ResponseData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ocsp.RevokedInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ocsp.Signature:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ocsp.SingleResponse:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ocsp.TBSRequest:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.AuthenticatedSafe:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.CertificationRequestInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.EncryptedData:org.bouncycastle.asn1.ASN1OctetString getContent()",
            "org.bouncycastle.asn1.pkcs.MacData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.Pfx:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.RC2CBCParameter:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.RSAESOAEPparams:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.RSAPublicKey:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.RSASSAPSSparams:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.SafeBag:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.smime.SMIMECapability:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.tsp.Accuracy:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.tsp.TimeStampReq:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ua.DSTU4145Params:org.bouncycastle.asn1.ua.DSTU4145Params getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x500.X500Name:void <init>(org.bouncycastle.asn1.x500.X500NameStyle,org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.AccessDescription:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.AlgorithmIdentifier:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.AttCertValidityPeriod:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.Attribute:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.AttributeCertificate:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.AttributeCertificateInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.AuthorityInformationAccess:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.BasicConstraints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.CRLDistPoint:org.bouncycastle.asn1.x509.DistributionPoint[] getDistributionPoints()",
            "org.bouncycastle.asn1.x509.Certificate:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.CertificateList:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.CertificatePair:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.CertificatePolicies:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.DSAParameter:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.DistributionPoint:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:org.bouncycastle.asn1.x509.KeyPurposeId[] getUsages()",
            "org.bouncycastle.asn1.x509.Extension:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.GeneralNames:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.GeneralSubtree:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.Holder:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.IetfAttrSyntax:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.IssuerSerial:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.IssuingDistributionPoint:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.NameConstraints:org.bouncycastle.asn1.x509.GeneralSubtree[] createArray(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.NoticeReference:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.NoticeReference:org.bouncycastle.asn1.ASN1Integer[] getNoticeNumbers()",
            "org.bouncycastle.asn1.x509.ObjectDigestInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.PolicyConstraints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.PolicyInformation:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.PolicyQualifierInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.RSAPublicKeyStructure:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.RoleSyntax:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.SubjectPublicKeyInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.TBSCertList$CRLEntry:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.TBSCertList$CRLEntry:org.bouncycastle.asn1.x509.Extensions getExtensions()",
            "org.bouncycastle.asn1.x509.TBSCertList$CRLEntry:boolean hasExtensions()",
            "org.bouncycastle.asn1.x509.TBSCertList:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.TBSCertList:org.bouncycastle.asn1.x509.TBSCertList$CRLEntry[] getRevokedCertificates()",
            "org.bouncycastle.asn1.x509.TBSCertificate:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.TBSCertificateStructure:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.TargetInformation:org.bouncycastle.asn1.x509.Targets[] getTargetsObjects()",
            "org.bouncycastle.asn1.x509.Targets:org.bouncycastle.asn1.x509.Target[] getTargets()",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.V2Form:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509CertificateStructure:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Extensions:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.qualified.SemanticsInformation:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.sigi.NameOrPseudonym:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.sigi.NameOrPseudonym:org.bouncycastle.asn1.x500.DirectoryString[] getGivenName()",
            "org.bouncycastle.asn1.x509.sigi.PersonalData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.DHValidationParms:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9Curve:void <init>(org.bouncycastle.asn1.x9.X9FieldID,org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9ECParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey:boolean isPKCSParam(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.Certificate readDERCertificate(org.bouncycastle.asn1.ASN1InputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.CRL readDERCRL(org.bouncycastle.asn1.ASN1InputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:java.util.List getExtendedKeyUsage()",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.netscape.NetscapeCertRequest:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.jce.provider.JCEDHPublicKey:boolean isPKCSParam(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:boolean withinDNSubtree(org.bouncycastle.asn1.ASN1Sequence,org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermittedDN(java.util.Set,org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:org.bouncycastle.jce.provider.PKIXPolicyNode prepareCertB(java.security.cert.CertPath,int,java.util.List[],org.bouncycastle.jce.provider.PKIXPolicyNode,int)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void prepareNextCertA(java.security.cert.CertPath,int)",
            "org.bouncycastle.jce.provider.X509AttrCertParser:org.bouncycastle.x509.X509AttributeCertificate readDERCertificate(java.io.InputStream)",
            "org.bouncycastle.jce.provider.X509CRLParser:java.security.cert.CRL readDERCRL(java.io.InputStream)",
            "org.bouncycastle.jce.provider.X509CertParser:java.security.cert.Certificate readDERCertificate(java.io.InputStream)",
            "org.bouncycastle.jce.provider.X509CertificateObject:java.util.List getExtendedKeyUsage()",
            "org.bouncycastle.ocsp.BasicOCSPResp:org.bouncycastle.ocsp.SingleResp[] getResponses()",
            "org.bouncycastle.ocsp.OCSPReq:org.bouncycastle.ocsp.Req[] getRequestList()",
            "org.bouncycastle.ocsp.RespData:org.bouncycastle.ocsp.SingleResp[] getResponses()",
            "org.bouncycastle.pqc.asn1.GMSSPrivateKey:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.pqc.asn1.GMSSPublicKey:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.pqc.asn1.McElieceCCA2PrivateKey:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.pqc.asn1.McEliecePrivateKey:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.pqc.asn1.ParSet:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.pqc.asn1.RainbowPrivateKey:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.pqc.asn1.RainbowPublicKey:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkNameConstraints()",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkPolicy()",
            "org.bouncycastle.x509.PKIXCertPathReviewer:boolean processQcStatements(java.security.cert.X509Certificate,int)",
            "org.bouncycastle.x509.X509V2AttributeCertificate:org.bouncycastle.x509.X509Attribute[] getAttributes()",
            "org.bouncycastle.x509.X509V2AttributeCertificate:org.bouncycastle.x509.X509Attribute[] getAttributes(java.lang.String)"
        ]
    },
    "org.bouncycastle.asn1.LazyEncodedSequence:org.bouncycastle.asn1.ASN1Primitive toDERObject()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)"
        ]
    },
    "org.bouncycastle.asn1.LazyEncodedSequence:org.bouncycastle.asn1.ASN1Primitive toDLObject()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)"
        ]
    },
    "org.bouncycastle.asn1.x509.TBSCertList:java.util.Enumeration getRevokedCertificateEnumeration()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.CertificateList:java.util.Enumeration getRevokedCertificateEnumeration()"
        ]
    },
    "org.bouncycastle.asn1.cms.AttributeTable:org.bouncycastle.asn1.ASN1EncodableVector getAll(org.bouncycastle.asn1.DERObjectIdentifier)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cms.AttributeTable:org.bouncycastle.asn1.cms.Attributes toASN1Structure()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cms.AttributeTable:void <init>(java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.AttributeTable:org.bouncycastle.asn1.cms.AttributeTable add(org.bouncycastle.asn1.ASN1ObjectIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.cms.AttributeTable:org.bouncycastle.asn1.cms.AttributeTable remove(org.bouncycastle.asn1.ASN1ObjectIdentifier)"
        ]
    },
    "org.bouncycastle.asn1.cms.AttributeTable:java.util.Hashtable toHashtable()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cms.AuthenticatedData:void <init>(org.bouncycastle.asn1.cms.OriginatorInfo,org.bouncycastle.asn1.ASN1Set,org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.cms.ContentInfo,org.bouncycastle.asn1.ASN1Set,org.bouncycastle.asn1.ASN1OctetString,org.bouncycastle.asn1.ASN1Set)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cms.EnvelopedData:void <init>(org.bouncycastle.asn1.cms.OriginatorInfo,org.bouncycastle.asn1.ASN1Set,org.bouncycastle.asn1.cms.EncryptedContentInfo,org.bouncycastle.asn1.ASN1Set)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cryptopro.ECGOST3410ParamSetParameters:org.bouncycastle.asn1.cryptopro.ECGOST3410ParamSetParameters getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cryptopro.ECGOST3410ParamSetParameters:org.bouncycastle.asn1.cryptopro.ECGOST3410ParamSetParameters getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)"
        ]
    },
    "org.bouncycastle.asn1.cryptopro.GOST3410ParamSetParameters:org.bouncycastle.asn1.cryptopro.GOST3410ParamSetParameters getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cryptopro.GOST3410ParamSetParameters:org.bouncycastle.asn1.cryptopro.GOST3410ParamSetParameters getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)"
        ]
    },
    "org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure:org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure:org.bouncycastle.asn1.pkcs.RSAPrivateKeyStructure getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)"
        ]
    },
    "org.bouncycastle.asn1.sec.ECPrivateKey:org.bouncycastle.asn1.DERBitString getPublicKey()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)"
        ]
    },
    "org.bouncycastle.asn1.sec.ECPrivateKey:org.bouncycastle.asn1.ASN1Primitive getParameters()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.sec.ECPrivateKeyStructure:org.bouncycastle.asn1.DERBitString getPublicKey()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.JCEECPrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)"
        ]
    },
    "org.bouncycastle.asn1.sec.ECPrivateKeyStructure:org.bouncycastle.asn1.ASN1Primitive getParameters()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x500.X500Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x500.X500Name:org.bouncycastle.asn1.x500.X500Name getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x500.style.BCStyle:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x500.style.BCStrictStyle:void <init>()",
            "org.bouncycastle.asn1.x500.style.BCStyle:void <clinit>()"
        ]
    },
    "org.bouncycastle.asn1.x500.style.BCStyle:java.lang.String[] oidToAttrNames(org.bouncycastle.asn1.ASN1ObjectIdentifier)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x500.style.RFC4519Style:java.lang.String[] oidToAttrNames(org.bouncycastle.asn1.ASN1ObjectIdentifier)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x500.style.RFC4519Style:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x500.style.RFC4519Style:void <clinit>()"
        ]
    },
    "org.bouncycastle.asn1.x509.NoticeReference:void <init>(java.lang.String,java.util.Vector)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.X509Name:void <init>(java.util.Vector,java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.X509Name:void <init>(java.util.Hashtable)",
            "org.bouncycastle.jce.X509Principal:void <init>(java.util.Vector,java.util.Hashtable)"
        ]
    },
    "org.bouncycastle.asn1.x9.ECNamedCurveTable:java.util.Enumeration getNames()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.ECNamedCurveTable:java.util.Enumeration getNames()"
        ]
    },
    "org.bouncycastle.crypto.digests.SkeinEngine:void init(org.bouncycastle.crypto.params.SkeinParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.digests.SkeinDigest:void init(org.bouncycastle.crypto.params.SkeinParameters)",
            "org.bouncycastle.crypto.macs.SkeinMac:void init(org.bouncycastle.crypto.CipherParameters)"
        ]
    },
    "org.bouncycastle.crypto.tls.DTLSReliableHandshake:void finish()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:org.bouncycastle.crypto.tls.DTLSTransport clientHandshake(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,org.bouncycastle.crypto.tls.DTLSRecordLayer)",
            "org.bouncycastle.crypto.tls.DTLSServerProtocol:org.bouncycastle.crypto.tls.DTLSTransport serverHandshake(org.bouncycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState,org.bouncycastle.crypto.tls.DTLSRecordLayer)"
        ]
    },
    "org.bouncycastle.crypto.tls.DTLSReliableHandshake:boolean access$300(java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSReliableHandshake$1:void receivedHandshakeRecord(int,byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.tls.DTLSReliableHandshake:void prepareInboundFlight()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSReliableHandshake:org.bouncycastle.crypto.tls.DTLSReliableHandshake$Message receiveMessage()"
        ]
    },
    "org.bouncycastle.crypto.tls.DTLSReliableHandshake:void access$500(java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSReliableHandshake$1:void receivedHandshakeRecord(int,byte[],int,int)"
        ]
    },
    "org.bouncycastle.crypto.signers.DSADigestSigner:void reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.signers.DSADigestSigner:void init(boolean,org.bouncycastle.crypto.CipherParameters)"
        ]
    },
    "org.bouncycastle.crypto.signers.GenericSigner:void reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.signers.GenericSigner:void init(boolean,org.bouncycastle.crypto.CipherParameters)"
        ]
    },
    "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:void reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:void init(boolean,org.bouncycastle.crypto.CipherParameters)"
        ]
    },
    "org.bouncycastle.crypto.signers.ISO9796d2Signer:void reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.signers.ISO9796d2Signer:void init(boolean,org.bouncycastle.crypto.CipherParameters)"
        ]
    },
    "org.bouncycastle.crypto.signers.PSSSigner:void reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.signers.PSSSigner:void init(boolean,org.bouncycastle.crypto.CipherParameters)"
        ]
    },
    "org.bouncycastle.crypto.signers.RSADigestSigner:void reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.signers.RSADigestSigner:void init(boolean,org.bouncycastle.crypto.CipherParameters)"
        ]
    },
    "org.bouncycastle.crypto.tls.CombinedHash:void reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:java.math.BigInteger calculateHashForZeroKnowledgeProof(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.lang.String,org.bouncycastle.crypto.Digest)",
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:byte[] calculateMacKey(java.math.BigInteger,org.bouncycastle.crypto.Digest)",
            "org.bouncycastle.crypto.agreement.kdf.DHKEKGenerator:int generateBytes(byte[],int,int)",
            "org.bouncycastle.crypto.encodings.OAEPEncoding:void <init>(org.bouncycastle.crypto.AsymmetricBlockCipher,org.bouncycastle.crypto.Digest,org.bouncycastle.crypto.Digest,byte[])",
            "org.bouncycastle.crypto.encodings.OAEPEncoding:byte[] maskGeneratorFunction1(byte[],int,int,int)",
            "org.bouncycastle.crypto.generators.BaseKDFBytesGenerator:int generateBytes(byte[],int,int)",
            "org.bouncycastle.crypto.generators.MGF1BytesGenerator:int generateBytes(byte[],int,int)",
            "org.bouncycastle.crypto.generators.OpenSSLPBEParametersGenerator:byte[] generateDerivedKey(int)",
            "org.bouncycastle.crypto.macs.HMac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.HMac:void reset()",
            "org.bouncycastle.crypto.macs.OldHMac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.OldHMac:void reset()",
            "org.bouncycastle.crypto.signers.DSADigestSigner:void reset()",
            "org.bouncycastle.crypto.signers.GenericSigner:void reset()",
            "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:void reset()",
            "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:byte[] maskGeneratorFunction1(byte[],int,int,int)",
            "org.bouncycastle.crypto.signers.ISO9796d2Signer:void reset()",
            "org.bouncycastle.crypto.signers.ISO9796d2Signer:boolean verifySignature(byte[])",
            "org.bouncycastle.crypto.signers.PSSSigner:void reset()",
            "org.bouncycastle.crypto.signers.PSSSigner:byte[] maskGeneratorFunction1(byte[],int,int,int)",
            "org.bouncycastle.crypto.signers.RSADigestSigner:void reset()",
            "org.bouncycastle.crypto.tls.CombinedHash:void reset()",
            "org.bouncycastle.crypto.tls.DTLSReliableHandshake:void resetHandshakeMessagesDigest()",
            "org.bouncycastle.crypto.tls.DeferredHash:void reset()",
            "org.bouncycastle.crypto.tls.SSL3Mac:void reset()",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner:void engineInitSign(java.security.PrivateKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi:void engineInitSign(java.security.PrivateKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.SignatureSpi:void engineInitSign(java.security.PrivateKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.SignatureSpi:void engineInitSign(java.security.PrivateKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi:void engineInitSign(java.security.PrivateKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.PSSSignatureSpi$NullPssDigest:void reset()",
            "org.bouncycastle.jcajce.provider.digest.BCMessageDigest:void engineReset()",
            "org.bouncycastle.jce.provider.BrokenKDF2BytesGenerator:int generateBytes(byte[],int,int)",
            "org.bouncycastle.pqc.crypto.DigestingMessageSigner:void reset()",
            "org.bouncycastle.pqc.crypto.gmss.GMSSSigner:void initSign()",
            "org.bouncycastle.pqc.crypto.gmss.GMSSSigner:void initVerify()",
            "org.bouncycastle.pqc.crypto.gmss.GMSSSigner:boolean verifySignature(byte[],byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher:void reset()",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiDigestCipher:void reset()",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePKCSDigestCipher:void reset()",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalDigestCipher:void reset()",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceFujisakiCipherSpi:void initCipherEncrypt(java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceFujisakiCipherSpi:void initCipherDecrypt(java.security.Key,java.security.spec.AlgorithmParameterSpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKobaraImaiCipherSpi:void initCipherEncrypt(java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKobaraImaiCipherSpi:void initCipherDecrypt(java.security.Key,java.security.spec.AlgorithmParameterSpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McEliecePKCSCipherSpi:void initCipherEncrypt(java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McEliecePKCSCipherSpi:void initCipherDecrypt(java.security.Key,java.security.spec.AlgorithmParameterSpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McEliecePointchevalCipherSpi:void initCipherEncrypt(java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McEliecePointchevalCipherSpi:void initCipherDecrypt(java.security.Key,java.security.spec.AlgorithmParameterSpec)",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.SignatureSpi:void engineInitSign(java.security.PrivateKey)"
        ]
    },
    "org.bouncycastle.crypto.tls.DTLSReliableHandshake:void resetHandshakeMessagesDigest()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.DTLSClientProtocol:org.bouncycastle.crypto.tls.DTLSTransport clientHandshake(org.bouncycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState,org.bouncycastle.crypto.tls.DTLSRecordLayer)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner:void engineInitSign(java.security.PrivateKey)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner:void engineInitSign(java.security.PrivateKey,java.security.SecureRandom)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi:void engineInitSign(java.security.PrivateKey)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ecgost.SignatureSpi:void engineInitSign(java.security.PrivateKey)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.gost.SignatureSpi:void engineInitSign(java.security.PrivateKey)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.gost.SignatureSpi:void engineInitSign(java.security.PrivateKey,java.security.SecureRandom)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi:void engineInitVerify(java.security.PublicKey)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi:void engineInitSign(java.security.PrivateKey)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.rsa.PSSSignatureSpi$NullPssDigest:void reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:java.math.BigInteger calculateHashForZeroKnowledgeProof(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.lang.String,org.bouncycastle.crypto.Digest)",
            "org.bouncycastle.crypto.agreement.jpake.JPAKEUtil:byte[] calculateMacKey(java.math.BigInteger,org.bouncycastle.crypto.Digest)",
            "org.bouncycastle.crypto.agreement.kdf.DHKEKGenerator:int generateBytes(byte[],int,int)",
            "org.bouncycastle.crypto.encodings.OAEPEncoding:void <init>(org.bouncycastle.crypto.AsymmetricBlockCipher,org.bouncycastle.crypto.Digest,org.bouncycastle.crypto.Digest,byte[])",
            "org.bouncycastle.crypto.encodings.OAEPEncoding:byte[] maskGeneratorFunction1(byte[],int,int,int)",
            "org.bouncycastle.crypto.generators.BaseKDFBytesGenerator:int generateBytes(byte[],int,int)",
            "org.bouncycastle.crypto.generators.MGF1BytesGenerator:int generateBytes(byte[],int,int)",
            "org.bouncycastle.crypto.generators.OpenSSLPBEParametersGenerator:byte[] generateDerivedKey(int)",
            "org.bouncycastle.crypto.macs.HMac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.HMac:void reset()",
            "org.bouncycastle.crypto.macs.OldHMac:void init(org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.macs.OldHMac:void reset()",
            "org.bouncycastle.crypto.signers.DSADigestSigner:void reset()",
            "org.bouncycastle.crypto.signers.GenericSigner:void reset()",
            "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:void reset()",
            "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:byte[] maskGeneratorFunction1(byte[],int,int,int)",
            "org.bouncycastle.crypto.signers.ISO9796d2Signer:void reset()",
            "org.bouncycastle.crypto.signers.ISO9796d2Signer:boolean verifySignature(byte[])",
            "org.bouncycastle.crypto.signers.PSSSigner:void reset()",
            "org.bouncycastle.crypto.signers.PSSSigner:byte[] maskGeneratorFunction1(byte[],int,int,int)",
            "org.bouncycastle.crypto.signers.RSADigestSigner:void reset()",
            "org.bouncycastle.crypto.tls.CombinedHash:void reset()",
            "org.bouncycastle.crypto.tls.DeferredHash:void reset()",
            "org.bouncycastle.crypto.tls.SSL3Mac:void reset()",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner:void engineInitSign(java.security.PrivateKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.SignatureSpi:void engineInitSign(java.security.PrivateKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.SignatureSpi:void engineInitSign(java.security.PrivateKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.SignatureSpi:void engineInitSign(java.security.PrivateKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.DigestSignatureSpi:void engineInitSign(java.security.PrivateKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.PSSSignatureSpi$NullPssDigest:int doFinal(byte[],int)",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.PSSSignatureSpi$NullPssDigest:void reset()",
            "org.bouncycastle.jcajce.provider.digest.BCMessageDigest:void engineReset()",
            "org.bouncycastle.jce.provider.BrokenKDF2BytesGenerator:int generateBytes(byte[],int,int)",
            "org.bouncycastle.pqc.crypto.DigestingMessageSigner:void reset()",
            "org.bouncycastle.pqc.crypto.gmss.GMSSSigner:void initSign()",
            "org.bouncycastle.pqc.crypto.gmss.GMSSSigner:void initVerify()",
            "org.bouncycastle.pqc.crypto.gmss.GMSSSigner:boolean verifySignature(byte[],byte[])",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher:void reset()",
            "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiDigestCipher:void reset()",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePKCSDigestCipher:void reset()",
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalDigestCipher:void reset()",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceFujisakiCipherSpi:void initCipherEncrypt(java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceFujisakiCipherSpi:void initCipherDecrypt(java.security.Key,java.security.spec.AlgorithmParameterSpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKobaraImaiCipherSpi:void initCipherEncrypt(java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKobaraImaiCipherSpi:void initCipherDecrypt(java.security.Key,java.security.spec.AlgorithmParameterSpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McEliecePKCSCipherSpi:void initCipherEncrypt(java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McEliecePKCSCipherSpi:void initCipherDecrypt(java.security.Key,java.security.spec.AlgorithmParameterSpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McEliecePointchevalCipherSpi:void initCipherEncrypt(java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McEliecePointchevalCipherSpi:void initCipherDecrypt(java.security.Key,java.security.spec.AlgorithmParameterSpec)",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.SignatureSpi:void engineInitSign(java.security.PrivateKey)"
        ]
    },
    "org.bouncycastle.jcajce.provider.digest.BCMessageDigest:void engineReset()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.crypto.DigestingMessageSigner:void reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.crypto.DigestingMessageSigner:void init(boolean,org.bouncycastle.crypto.CipherParameters)"
        ]
    },
    "org.bouncycastle.pqc.crypto.gmss.GMSSSigner:void initVerify()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.crypto.gmss.GMSSSigner:void init(boolean,org.bouncycastle.crypto.CipherParameters)"
        ]
    },
    "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher:void reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)"
        ]
    },
    "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiDigestCipher:void reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiDigestCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)"
        ]
    },
    "org.bouncycastle.pqc.crypto.mceliece.McEliecePKCSDigestCipher:void reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePKCSDigestCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)"
        ]
    },
    "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalDigestCipher:void reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalDigestCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)"
        ]
    },
    "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceFujisakiCipherSpi:void initCipherEncrypt(java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.jcajce.provider.util.AsymmetricHybridCipher:void initEncrypt(java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)"
        ]
    },
    "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceFujisakiCipherSpi:void initCipherDecrypt(java.security.Key,java.security.spec.AlgorithmParameterSpec)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.jcajce.provider.util.AsymmetricHybridCipher:void initDecrypt(java.security.Key,java.security.spec.AlgorithmParameterSpec)"
        ]
    },
    "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKobaraImaiCipherSpi:void initCipherEncrypt(java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.jcajce.provider.util.AsymmetricHybridCipher:void initEncrypt(java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)"
        ]
    },
    "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKobaraImaiCipherSpi:void initCipherDecrypt(java.security.Key,java.security.spec.AlgorithmParameterSpec)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.jcajce.provider.util.AsymmetricHybridCipher:void initDecrypt(java.security.Key,java.security.spec.AlgorithmParameterSpec)"
        ]
    },
    "org.bouncycastle.pqc.jcajce.provider.mceliece.McEliecePKCSCipherSpi:void initCipherEncrypt(java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.jcajce.provider.util.AsymmetricBlockCipher:void initEncrypt(java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)"
        ]
    },
    "org.bouncycastle.pqc.jcajce.provider.mceliece.McEliecePKCSCipherSpi:void initCipherDecrypt(java.security.Key,java.security.spec.AlgorithmParameterSpec)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.jcajce.provider.util.AsymmetricBlockCipher:void initDecrypt(java.security.Key,java.security.spec.AlgorithmParameterSpec)"
        ]
    },
    "org.bouncycastle.pqc.jcajce.provider.mceliece.McEliecePointchevalCipherSpi:void initCipherEncrypt(java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.jcajce.provider.util.AsymmetricHybridCipher:void initEncrypt(java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)"
        ]
    },
    "org.bouncycastle.pqc.jcajce.provider.mceliece.McEliecePointchevalCipherSpi:void initCipherDecrypt(java.security.Key,java.security.spec.AlgorithmParameterSpec)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.jcajce.provider.util.AsymmetricHybridCipher:void initDecrypt(java.security.Key,java.security.spec.AlgorithmParameterSpec)"
        ]
    },
    "org.bouncycastle.pqc.jcajce.provider.rainbow.SignatureSpi:void engineInitVerify(java.security.PublicKey)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.jcajce.provider.rainbow.SignatureSpi:void engineInitSign(java.security.PrivateKey)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.jcajce.provider.rainbow.SignatureSpi:void engineInitSign(java.security.PrivateKey,java.security.SecureRandom)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLEntryObject:java.util.Set getCriticalExtensionOIDs()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLEntryObject:boolean hasUnsupportedCriticalExtension()"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLEntryObject:java.util.Set getNonCriticalExtensionOIDs()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:java.util.Set getCriticalExtensionOIDs()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:boolean hasUnsupportedCriticalExtension()",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:boolean isDeltaCRL(java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void checkCRL(org.bouncycastle.asn1.x509.DistributionPoint,org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,org.bouncycastle.jce.provider.CertStatus,org.bouncycastle.jce.provider.ReasonsMask,java.util.List)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:java.util.Set getNonCriticalExtensionOIDs()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:java.util.Set getRevokedCertificates()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:java.lang.String toString()",
            "org.bouncycastle.x509.X509V2CRLGenerator:void addCRL(java.security.cert.X509CRL)"
        ]
    },
    "org.bouncycastle.x509.PKIXCertPathReviewer:void checkCriticalExtensions()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.PKIXCertPathReviewer:void doChecks()"
        ]
    },
    "org.bouncycastle.jce.provider.X509CRLEntryObject:java.util.Set getCriticalExtensionOIDs()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.X509CRLEntryObject:boolean hasUnsupportedCriticalExtension()"
        ]
    },
    "org.bouncycastle.jce.provider.X509CRLEntryObject:java.util.Set getNonCriticalExtensionOIDs()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.provider.X509CRLObject:java.util.Set getCriticalExtensionOIDs()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:boolean isDeltaCRL(java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void checkCRL(org.bouncycastle.asn1.x509.DistributionPoint,org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,org.bouncycastle.jce.provider.CertStatus,org.bouncycastle.jce.provider.ReasonsMask,java.util.List)",
            "org.bouncycastle.jce.provider.X509CRLObject:boolean hasUnsupportedCriticalExtension()"
        ]
    },
    "org.bouncycastle.jce.provider.X509CRLObject:java.util.Set getNonCriticalExtensionOIDs()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.provider.X509CRLObject:java.util.Set getRevokedCertificates()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.X509CRLObject:java.lang.String toString()",
            "org.bouncycastle.x509.X509V2CRLGenerator:void addCRL(java.security.cert.X509CRL)"
        ]
    },
    "org.bouncycastle.ocsp.BasicOCSPResp:java.util.Set getCriticalExtensionOIDs()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.ocsp.BasicOCSPResp:boolean hasUnsupportedCriticalExtension()"
        ]
    },
    "org.bouncycastle.ocsp.BasicOCSPResp:java.util.Set getNonCriticalExtensionOIDs()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.ocsp.OCSPReq:java.util.Set getCriticalExtensionOIDs()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.ocsp.OCSPReq:boolean hasUnsupportedCriticalExtension()"
        ]
    },
    "org.bouncycastle.ocsp.OCSPReq:java.util.Set getNonCriticalExtensionOIDs()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.ocsp.BasicOCSPRespGenerator:java.util.Iterator getSignatureAlgNames()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.ocsp.OCSPReqGenerator:java.util.Iterator getSignatureAlgNames()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.ocsp.Req:java.util.Set getCriticalExtensionOIDs()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.ocsp.Req:boolean hasUnsupportedCriticalExtension()"
        ]
    },
    "org.bouncycastle.ocsp.Req:java.util.Set getNonCriticalExtensionOIDs()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.ocsp.RespData:java.util.Set getCriticalExtensionOIDs()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.ocsp.RespData:boolean hasUnsupportedCriticalExtension()"
        ]
    },
    "org.bouncycastle.ocsp.RespData:java.util.Set getNonCriticalExtensionOIDs()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.ocsp.SingleResp:java.util.Set getCriticalExtensionOIDs()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.ocsp.SingleResp:boolean hasUnsupportedCriticalExtension()"
        ]
    },
    "org.bouncycastle.ocsp.SingleResp:java.util.Set getNonCriticalExtensionOIDs()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc:void <init>(org.bouncycastle.crypto.Digest,byte[][],int[],org.bouncycastle.pqc.crypto.gmss.Treehash[],java.util.Vector[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc:java.util.Vector[] getRetain()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.asn1.GMSSPrivateKey:org.bouncycastle.asn1.ASN1Primitive encode(int[],byte[][],byte[][],byte[][][],byte[][][],byte[][][],org.bouncycastle.pqc.crypto.gmss.Treehash[][],org.bouncycastle.pqc.crypto.gmss.Treehash[][],java.util.Vector[],java.util.Vector[],java.util.Vector[][],java.util.Vector[][],org.bouncycastle.pqc.crypto.gmss.GMSSLeaf[],org.bouncycastle.pqc.crypto.gmss.GMSSLeaf[],org.bouncycastle.pqc.crypto.gmss.GMSSLeaf[],int[],byte[][],org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc[],byte[][],org.bouncycastle.pqc.crypto.gmss.GMSSRootSig[],org.bouncycastle.pqc.crypto.gmss.GMSSParameters,org.bouncycastle.asn1.x509.AlgorithmIdentifier[])",
            "org.bouncycastle.pqc.crypto.gmss.GMSSKeyPairGenerator:org.bouncycastle.crypto.AsymmetricCipherKeyPair genKeyPair()",
            "org.bouncycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters:void nextTree(int)"
        ]
    },
    "org.bouncycastle.pqc.crypto.gmss.GMSSUtils:java.util.Vector[][] clone(java.util.Vector[][])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.X509V1CertificateGenerator:java.util.Iterator getSignatureAlgNames()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.X509V2AttributeCertificateGenerator:java.util.Iterator getSignatureAlgNames()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.X509V2CRLGenerator:java.util.Iterator getSignatureAlgNames()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.X509V3CertificateGenerator:java.util.Iterator getSignatureAlgNames()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.X509V2AttributeCertificate:java.util.Set getNonCriticalExtensionOIDs()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.X509V2AttributeCertificate:java.util.Set getCriticalExtensionOIDs()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.RFC3281CertPathUtilities:void processAttrCert7(org.bouncycastle.x509.X509AttributeCertificate,java.security.cert.CertPath,java.security.cert.CertPath,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.x509.X509V2AttributeCertificate:boolean hasUnsupportedCriticalExtension()"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.rsa.KeyFactorySpi:java.security.PublicKey generatePublic(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi:java.security.PublicKey engineGeneratePublic(java.security.spec.KeySpec)",
            "org.bouncycastle.jce.provider.BouncyCastleProvider:java.security.PublicKey getPublicKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.BouncyCastlePQCProvider:java.security.PublicKey getPublicKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)"
        ]
    },
    "org.bouncycastle.x509.AttributeCertificateHolder:void <init>(javax.security.auth.x500.X500Principal,java.math.BigInteger)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.AttributeCertificateHolder:void <init>(javax.security.auth.x500.X500Principal)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.CertificateList:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Sequence:int hashCode()",
            "org.bouncycastle.asn1.ASN1Set:int hashCode()",
            "org.bouncycastle.asn1.ASN1TaggedObject:int hashCode()",
            "org.bouncycastle.asn1.x509.X509Name:int hashCode()",
            "org.bouncycastle.jce.X509LDAPCertStoreParameters:int addHashCode(int,java.lang.Object)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:int hashCollection(java.util.Collection)",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Matrix:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Vector:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2mVector:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.Permutation:int hashCode()",
            "org.bouncycastle.util.Arrays:int hashCode(java.lang.Object[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:int hashCode()"
        ]
    },
    "org.bouncycastle.ocsp.BasicOCSPResp:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.X509Name:int hashCode()",
            "org.bouncycastle.jce.X509LDAPCertStoreParameters:int addHashCode(int,java.lang.Object)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:int hashCollection(java.util.Collection)",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Matrix:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Vector:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2mVector:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.Permutation:int hashCode()",
            "org.bouncycastle.util.Arrays:int hashCode(java.lang.Object[])"
        ]
    },
    "org.bouncycastle.ocsp.OCSPResp:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.X509Name:int hashCode()",
            "org.bouncycastle.jce.X509LDAPCertStoreParameters:int addHashCode(int,java.lang.Object)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:int hashCollection(java.util.Collection)",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Matrix:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Vector:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2mVector:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.Permutation:int hashCode()",
            "org.bouncycastle.util.Arrays:int hashCode(java.lang.Object[])"
        ]
    },
    "org.bouncycastle.ocsp.RespID:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.X509Name:int hashCode()",
            "org.bouncycastle.jce.X509LDAPCertStoreParameters:int addHashCode(int,java.lang.Object)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:int hashCollection(java.util.Collection)",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Matrix:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Vector:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2mVector:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.Permutation:int hashCode()",
            "org.bouncycastle.util.Arrays:int hashCode(java.lang.Object[])"
        ]
    },
    "org.bouncycastle.x509.AttributeCertificateHolder:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.X509Name:int hashCode()",
            "org.bouncycastle.jce.X509LDAPCertStoreParameters:int addHashCode(int,java.lang.Object)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:int hashCollection(java.util.Collection)",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Matrix:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Vector:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2mVector:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.Permutation:int hashCode()",
            "org.bouncycastle.util.Arrays:int hashCode(java.lang.Object[])"
        ]
    },
    "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object clone()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:byte[] engineGetIV()",
            "org.bouncycastle.x509.ExtendedPKIXParameters:void setParams(java.security.cert.PKIXParameters)",
            "org.bouncycastle.x509.ExtendedPKIXParameters:org.bouncycastle.util.Selector getTargetConstraints()",
            "org.bouncycastle.x509.ExtendedPKIXParameters:void setTargetConstraints(org.bouncycastle.util.Selector)"
        ]
    },
    "org.bouncycastle.x509.X509V2AttributeCertificate:org.bouncycastle.x509.AttributeCertificateHolder getHolder()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.RFC3281CertPathUtilities:java.security.cert.CertPath processAttrCert1(org.bouncycastle.x509.X509AttributeCertificate,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.x509.X509AttributeCertStoreSelector:boolean match(java.lang.Object)",
            "org.bouncycastle.x509.examples.AttrCertExample:void main(java.lang.String[])",
            "org.bouncycastle.x509.util.LDAPStoreHelper:java.util.List attrCertSubjectSerialSearch(org.bouncycastle.x509.X509AttributeCertStoreSelector,java.lang.String[],java.lang.String[],java.lang.String[])"
        ]
    },
    "org.bouncycastle.jce.provider.CertPathValidatorUtilities:java.util.Collection findCertificates(org.bouncycastle.x509.X509CertStoreSelector,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:java.util.Collection findIssuerCerts(java.security.cert.X509Certificate,org.bouncycastle.x509.ExtendedPKIXBuilderParameters)",
            "org.bouncycastle.jce.provider.PKIXAttrCertPathBuilderSpi:java.security.cert.CertPathBuilderResult engineBuild(java.security.cert.CertPathParameters)",
            "org.bouncycastle.jce.provider.PKIXCertPathBuilderSpi:java.security.cert.CertPathBuilderResult engineBuild(java.security.cert.CertPathParameters)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:java.util.Set processCRLF(java.security.cert.X509CRL,java.lang.Object,java.security.cert.X509Certificate,java.security.PublicKey,org.bouncycastle.x509.ExtendedPKIXParameters,java.util.List)",
            "org.bouncycastle.jce.provider.RFC3281CertPathUtilities:java.security.cert.CertPath processAttrCert1(org.bouncycastle.x509.X509AttributeCertificate,org.bouncycastle.x509.ExtendedPKIXParameters)"
        ]
    },
    "org.bouncycastle.jce.provider.CertPathValidatorUtilities:java.util.Collection findCertificates(org.bouncycastle.x509.X509AttributeCertStoreSelector,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.PKIXAttrCertPathBuilderSpi:java.security.cert.CertPathBuilderResult engineBuild(java.security.cert.CertPathParameters)"
        ]
    },
    "org.bouncycastle.jce.provider.PKIXCRLUtil:java.util.Collection findCRLs(org.bouncycastle.x509.X509CRLStoreSelector,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.PKIXCRLUtil:java.util.Set findCRLs(org.bouncycastle.x509.X509CRLStoreSelector,org.bouncycastle.x509.ExtendedPKIXParameters,java.util.Date)",
            "org.bouncycastle.jce.provider.PKIXCRLUtil:java.util.Set findCRLs(org.bouncycastle.x509.X509CRLStoreSelector,java.security.cert.PKIXParameters)"
        ]
    },
    "org.bouncycastle.i18n.LocalizedException:void <init>(org.bouncycastle.i18n.ErrorBundle)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.CertPathReviewerException:void <init>(org.bouncycastle.i18n.ErrorBundle)",
            "org.bouncycastle.x509.CertPathReviewerException:void <init>(org.bouncycastle.i18n.ErrorBundle,java.security.cert.CertPath,int)"
        ]
    },
    "org.bouncycastle.i18n.LocalizedException:void <init>(org.bouncycastle.i18n.ErrorBundle,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.CertPathReviewerException:void <init>(org.bouncycastle.i18n.ErrorBundle,java.lang.Throwable)",
            "org.bouncycastle.x509.CertPathReviewerException:void <init>(org.bouncycastle.i18n.ErrorBundle,java.lang.Throwable,java.security.cert.CertPath,int)"
        ]
    },
    "org.bouncycastle.crypto.tls.AbstractTlsSigner:org.bouncycastle.crypto.Signer createSigner(org.bouncycastle.crypto.params.AsymmetricKeyParameter)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.tls.AbstractTlsSigner:org.bouncycastle.crypto.Signer createVerifyer(org.bouncycastle.crypto.params.AsymmetricKeyParameter)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.gost.BCGOST3410PrivateKey:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.x509.Extensions:boolean equivalent(org.bouncycastle.asn1.x509.Extensions)",
            "org.bouncycastle.asn1.x509.X509Extensions:boolean equivalent(org.bouncycastle.asn1.x509.X509Extensions)",
            "org.bouncycastle.asn1.x509.X509Name:java.util.Vector getValues(org.bouncycastle.asn1.ASN1ObjectIdentifier)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.BCGOST3410PrivateKey:boolean compareObj(java.lang.Object,java.lang.Object)",
            "org.bouncycastle.jce.X509LDAPCertStoreParameters:boolean checkField(java.lang.Object,java.lang.Object)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void addAdditionalStoresFromAltNames(java.security.cert.X509Certificate,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:boolean equals(java.lang.Object,java.lang.Object)",
            "org.bouncycastle.util.Arrays:boolean areEqual(java.lang.Object[],java.lang.Object[])"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void verify(java.security.PublicKey)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:java.security.PublicKey processCRLG(java.security.cert.X509CRL,java.util.Set)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:java.security.cert.X509CRL processCRLH(java.util.Set,java.security.PublicKey)"
        ]
    },
    "org.bouncycastle.jce.X509LDAPCertStoreParameters:boolean equal(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermittedDN(java.util.Set,org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermittedDN(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcludedDN(java.util.Set,org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcludedDN(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set unionDN(java.util.Set,org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)"
        ]
    },
    "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:boolean collectionsAreEqual(java.util.Collection,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:boolean equals(java.lang.Object)"
        ]
    },
    "org.bouncycastle.jce.provider.X509CRLObject:void verify(java.security.PublicKey)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:java.security.PublicKey processCRLG(java.security.cert.X509CRL,java.util.Set)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:java.security.cert.X509CRL processCRLH(java.util.Set,java.security.PublicKey)"
        ]
    },
    "org.bouncycastle.asn1.cms.ContentInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.dvcs.DVCSTime:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.cms.EncryptedContentInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.cms.EncryptedData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.cms.SignedData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.pkcs.ContentInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.pkcs.EncryptedData:void <init>(org.bouncycastle.asn1.ASN1ObjectIdentifier,org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void doStore(java.io.OutputStream,char[],boolean)"
        ]
    },
    "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive toDERObject()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)"
        ]
    },
    "org.bouncycastle.asn1.cmp.CMPCertificate:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.cmp.CertOrEncCert:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.cmp.CertRepMessage:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.cmp.CertifiedKeyPair:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.cmp.KeyRecRepContent:void addOptional(org.bouncycastle.asn1.ASN1EncodableVector,int,org.bouncycastle.asn1.ASN1Encodable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.KeyRecRepContent:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"
        ]
    },
    "org.bouncycastle.asn1.cmp.OOBCertHash:void addOptional(org.bouncycastle.asn1.ASN1EncodableVector,int,org.bouncycastle.asn1.ASN1Encodable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.OOBCertHash:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"
        ]
    },
    "org.bouncycastle.asn1.cmp.PKIBody:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.cmp.PKIHeader:void addOptional(org.bouncycastle.asn1.ASN1EncodableVector,int,org.bouncycastle.asn1.ASN1Encodable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.PKIHeader:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"
        ]
    },
    "org.bouncycastle.asn1.cmp.PKIHeaderBuilder:void addOptional(org.bouncycastle.asn1.ASN1EncodableVector,int,org.bouncycastle.asn1.ASN1Encodable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.PKIHeaderBuilder:org.bouncycastle.asn1.'cmp'.PKIHeader build()"
        ]
    },
    "org.bouncycastle.asn1.cmp.PKIMessage:void addOptional(org.bouncycastle.asn1.ASN1EncodableVector,int,org.bouncycastle.asn1.ASN1Encodable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.PKIMessage:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"
        ]
    },
    "org.bouncycastle.asn1.cmp.RevRepContent:void addOptional(org.bouncycastle.asn1.ASN1EncodableVector,int,org.bouncycastle.asn1.ASN1Encodable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.RevRepContent:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"
        ]
    },
    "org.bouncycastle.asn1.cms.AuthEnvelopedData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.cms.AuthenticatedData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.cms.EnvelopedData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.cms.Evidence:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.cms.KeyAgreeRecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.cms.KeyAgreeRecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:void <init>(org.bouncycastle.asn1.x509.SubjectKeyIdentifier)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:void <init>(org.bouncycastle.asn1.ASN1OctetString)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:void <init>(org.bouncycastle.asn1.cms.OriginatorPublicKey)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.cms.OriginatorInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.cms.PasswordRecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.cms.RecipientIdentifier:void <init>(org.bouncycastle.asn1.ASN1OctetString)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.cms.RecipientIdentifier getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.cms.RecipientInfo:void <init>(org.bouncycastle.asn1.cms.KeyAgreeRecipientInfo)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cms.RecipientInfo:void <init>(org.bouncycastle.asn1.cms.KEKRecipientInfo)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cms.RecipientInfo:void <init>(org.bouncycastle.asn1.cms.PasswordRecipientInfo)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cms.RecipientInfo:void <init>(org.bouncycastle.asn1.cms.OtherRecipientInfo)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cms.SCVPReqRes:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.cms.SignerIdentifier:void <init>(org.bouncycastle.asn1.ASN1OctetString)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.cms.SignerIdentifier getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.cms.SignerInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.cms.ecc.MQVuserKeyingMaterial:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.crmf.CertTemplateBuilder:void addOptional(org.bouncycastle.asn1.ASN1EncodableVector,int,boolean,org.bouncycastle.asn1.ASN1Encodable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.crmf.CertTemplateBuilder:org.bouncycastle.asn1.crmf.CertTemplate build()"
        ]
    },
    "org.bouncycastle.asn1.crmf.EncryptedKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.crmf.EncryptedValue:void addOptional(org.bouncycastle.asn1.ASN1EncodableVector,int,org.bouncycastle.asn1.ASN1Encodable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.crmf.EncryptedValue:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"
        ]
    },
    "org.bouncycastle.asn1.crmf.OptionalValidity:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.crmf.PKIArchiveOptions:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.crmf.POPOPrivKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.crmf.POPOSigningKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.crmf.POPOSigningKeyInput:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.crmf.ProofOfPossession:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.dvcs.CertEtcToken:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.dvcs.DVCSCertInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.dvcs.DVCSResponse:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.dvcs.DVCSRequestInformation:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.dvcs.Data:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.dvcs.PathProcInput:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.dvcs.TargetEtcChain:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.eac.ECDSAPublicKey:org.bouncycastle.asn1.ASN1EncodableVector getASN1EncodableVector(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.eac.ECDSAPublicKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()"
        ]
    },
    "org.bouncycastle.asn1.eac.UnsignedInteger:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.esf.CrlOcspRef:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.esf.RevocationValues:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.esf.SignerLocation:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.isismtt.x509.Admissions:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.isismtt.x509.DeclarationOfMajority:void <init>(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.isismtt.x509.DeclarationOfMajority:void <init>(boolean,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.isismtt.x509.DeclarationOfMajority:void <init>(org.bouncycastle.asn1.ASN1GeneralizedTime)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.isismtt.x509.ProcurationSyntax:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.isismtt.x509.ProfessionInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.ocsp.BasicOCSPResponse:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.ocsp.CertStatus:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.ocsp.CrlID:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.ocsp.OCSPRequest:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.ocsp.OCSPResponse:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.ocsp.Request:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.ocsp.ResponderID:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.ocsp.RevokedInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.ocsp.Signature:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.ocsp.SingleResponse:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.pkcs.CertificationRequestInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.pkcs.SignedData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.pkcs.SignerInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.sec.ECPrivateKey:void <init>(java.math.BigInteger,org.bouncycastle.asn1.DERBitString,org.bouncycastle.asn1.ASN1Encodable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.sec.ECPrivateKey:void <init>(java.math.BigInteger,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey:byte[] getEncoded()",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey:byte[] getEncoded()",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:byte[] getEncoded()"
        ]
    },
    "org.bouncycastle.asn1.sec.ECPrivateKeyStructure:void <init>(java.math.BigInteger,org.bouncycastle.asn1.DERBitString,org.bouncycastle.asn1.ASN1Encodable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.sec.ECPrivateKeyStructure:void <init>(java.math.BigInteger,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.JCEECPrivateKey:byte[] getEncoded()"
        ]
    },
    "org.bouncycastle.asn1.smime.SMIMEEncryptionKeyPreferenceAttribute:void <init>(org.bouncycastle.asn1.cms.IssuerAndSerialNumber)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.smime.SMIMEEncryptionKeyPreferenceAttribute:void <init>(org.bouncycastle.asn1.cms.RecipientKeyIdentifier)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.smime.SMIMEEncryptionKeyPreferenceAttribute:void <init>(org.bouncycastle.asn1.ASN1OctetString)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.tsp.Accuracy:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.tsp.TSTInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.tsp.TimeStampReq:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.ua.DSTU4145ECBinary:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.V2Form)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.AttCertIssuer:org.bouncycastle.asn1.x509.AttCertIssuer getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x509.AuthorityKeyIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.x509.DistributionPoint:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.x509.DistributionPointName:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.x509.GeneralName:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.x509.GeneralSubtree:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.x509.Holder:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.x509.IssuingDistributionPoint:void <init>(org.bouncycastle.asn1.x509.DistributionPointName,boolean,boolean,org.bouncycastle.asn1.x509.ReasonFlags,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.IssuingDistributionPoint:void <init>(org.bouncycastle.asn1.x509.DistributionPointName,boolean,boolean)"
        ]
    },
    "org.bouncycastle.asn1.x509.NameConstraints:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.x509.PrivateKeyUsagePeriod:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.x509.RoleSyntax:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.x509.Target:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.x509.V1TBSCertificateGenerator:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.X509V1CertificateGenerator:void <init>()",
            "org.bouncycastle.x509.X509V1CertificateGenerator:void reset()"
        ]
    },
    "org.bouncycastle.asn1.x509.V2Form:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.x509.V3TBSCertificateGenerator:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.X509V3CertificateGenerator:void <init>()",
            "org.bouncycastle.x509.X509V3CertificateGenerator:void reset()"
        ]
    },
    "org.bouncycastle.asn1.x509.sigi.PersonalData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.dvcs.DVCSResponse:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.esf.SignerAttribute:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.isismtt.ocsp.RequestedCertificate:void <init>(int,byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.isismtt.ocsp.RequestedCertificate:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.pkcs.CRLBag:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.pkcs.CertBag:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void doStore(java.io.OutputStream,char[],boolean)",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.x509.CertificatePair:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.x509.PolicyConstraints:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.x509.TBSCertList:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.x509.Target:void <init>(int,org.bouncycastle.asn1.x509.GeneralName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x9.OtherInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive toDLObject()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)"
        ]
    },
    "org.bouncycastle.asn1.pkcs.SafeBag:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.cms.OriginatorInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.OriginatorInfo:org.bouncycastle.asn1.cms.OriginatorInfo getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x509.DistributionPointName:void <init>(org.bouncycastle.asn1.ASN1TaggedObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.DistributionPointName:org.bouncycastle.asn1.x509.DistributionPointName getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x509.DistributionPointName:org.bouncycastle.asn1.x509.DistributionPointName getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.DistributionPoint:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.IssuingDistributionPoint:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.cmp.CAKeyUpdAnnContent:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.CAKeyUpdAnnContent:org.bouncycastle.asn1.'cmp'.CAKeyUpdAnnContent getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.cmp.CertRepMessage:org.bouncycastle.asn1.'cmp'.CMPCertificate[] getCaPubs()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cmp.KeyRecRepContent:org.bouncycastle.asn1.'cmp'.CMPCertificate[] getCaCerts()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cmp.PKIMessage:org.bouncycastle.asn1.'cmp'.CMPCertificate[] getExtraCerts()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cmp.CertOrEncCert:org.bouncycastle.asn1.'cmp'.CertOrEncCert getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.CertifiedKeyPair:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.cmp.PKIBody:org.bouncycastle.asn1.'cmp'.PKIBody getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.PKIMessage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cmp.ProtectedPart:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.crmf.PKIArchiveOptions:org.bouncycastle.asn1.crmf.PKIArchiveOptions getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.ocsp.BasicOCSPResp:org.bouncycastle.asn1.x509.X509Extensions getResponseExtensions()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.ocsp.BasicOCSPResp:java.util.Set getExtensionOIDs(boolean)",
            "org.bouncycastle.ocsp.BasicOCSPResp:byte[] getExtensionValue(java.lang.String)"
        ]
    },
    "org.bouncycastle.ocsp.OCSPReq:org.bouncycastle.asn1.x509.X509Extensions getRequestExtensions()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.ocsp.OCSPReq:java.util.Set getExtensionOIDs(boolean)",
            "org.bouncycastle.ocsp.OCSPReq:byte[] getExtensionValue(java.lang.String)"
        ]
    },
    "org.bouncycastle.ocsp.Req:org.bouncycastle.asn1.x509.X509Extensions getSingleRequestExtensions()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.ocsp.Req:java.util.Set getExtensionOIDs(boolean)",
            "org.bouncycastle.ocsp.Req:byte[] getExtensionValue(java.lang.String)"
        ]
    },
    "org.bouncycastle.ocsp.RespData:org.bouncycastle.asn1.x509.X509Extensions getResponseExtensions()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.ocsp.RespData:java.util.Set getExtensionOIDs(boolean)",
            "org.bouncycastle.ocsp.RespData:byte[] getExtensionValue(java.lang.String)"
        ]
    },
    "org.bouncycastle.ocsp.SingleResp:org.bouncycastle.asn1.x509.X509Extensions getSingleExtensions()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.ocsp.SingleResp:java.util.Set getExtensionOIDs(boolean)",
            "org.bouncycastle.ocsp.SingleResp:byte[] getExtensionValue(java.lang.String)"
        ]
    },
    "org.bouncycastle.asn1.eac.CertificateBody:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.crypto.util.SubjectPublicKeyInfoFactory:org.bouncycastle.asn1.x509.SubjectPublicKeyInfo createSubjectPublicKeyInfo(org.bouncycastle.crypto.params.AsymmetricKeyParameter)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.PKCS10CertificationRequest:java.security.PublicKey getPublicKey()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.util.PrivateKeyInfoFactory:org.bouncycastle.asn1.pkcs.PrivateKeyInfo createPrivateKeyInfo(org.bouncycastle.crypto.params.AsymmetricKeyParameter)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object clone()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:byte[] engineGetIV()",
            "org.bouncycastle.x509.ExtendedPKIXParameters:void setParams(java.security.cert.PKIXParameters)",
            "org.bouncycastle.x509.ExtendedPKIXParameters:org.bouncycastle.util.Selector getTargetConstraints()",
            "org.bouncycastle.x509.ExtendedPKIXParameters:void setTargetConstraints(org.bouncycastle.util.Selector)"
        ]
    },
    "org.bouncycastle.x509.X509V2AttributeCertificateGenerator:void setIssuer(org.bouncycastle.x509.AttributeCertificateIssuer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.examples.AttrCertExample:void main(java.lang.String[])"
        ]
    },
    "org.bouncycastle.x509.X509V2CRLGenerator:void addExtension(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Encodable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.X509V3CertificateGenerator:void addExtension(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Encodable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.X509V3CertificateGenerator:void copyAndAddExtension(java.lang.String,boolean,java.security.cert.X509Certificate)"
        ]
    },
    "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:int prepareNextCertL(java.security.cert.CertPath,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi:java.security.cert.CertPathValidatorResult engineValidate(java.security.cert.CertPath,java.security.cert.CertPathParameters)"
        ]
    },
    "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:int prepareNextCertH1(java.security.cert.CertPath,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi:java.security.cert.CertPathValidatorResult engineValidate(java.security.cert.CertPath,java.security.cert.CertPathParameters)"
        ]
    },
    "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:int prepareNextCertH2(java.security.cert.CertPath,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi:java.security.cert.CertPathValidatorResult engineValidate(java.security.cert.CertPath,java.security.cert.CertPathParameters)"
        ]
    },
    "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:int prepareNextCertH3(java.security.cert.CertPath,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi:java.security.cert.CertPathValidatorResult engineValidate(java.security.cert.CertPath,java.security.cert.CertPathParameters)"
        ]
    },
    "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:int wrapupCertA(int,java.security.cert.X509Certificate)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi:java.security.cert.CertPathValidatorResult engineValidate(java.security.cert.CertPath,java.security.cert.CertPathParameters)"
        ]
    },
    "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void intersectPermittedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.AttributeCertificateHolder:java.security.Principal[] getEntityNames()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.RFC3281CertPathUtilities:java.security.cert.CertPath processAttrCert1(org.bouncycastle.x509.X509AttributeCertificate,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.x509.examples.AttrCertExample:void main(java.lang.String[])",
            "org.bouncycastle.x509.util.LDAPStoreHelper:java.util.List attrCertSubjectSerialSearch(org.bouncycastle.x509.X509AttributeCertStoreSelector,java.lang.String[],java.lang.String[],java.lang.String[])"
        ]
    },
    "org.bouncycastle.x509.AttributeCertificateHolder:java.security.Principal[] getIssuer()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.RFC3281CertPathUtilities:java.security.cert.CertPath processAttrCert1(org.bouncycastle.x509.X509AttributeCertificate,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.x509.examples.AttrCertExample:void main(java.lang.String[])"
        ]
    },
    "org.bouncycastle.x509.X509V1CertificateGenerator:java.security.cert.X509Certificate generate(java.security.PrivateKey)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.examples.PKCS12Example:java.security.cert.Certificate createMasterCert(java.security.PublicKey,java.security.PrivateKey)",
            "org.bouncycastle.x509.examples.AttrCertExample:java.security.cert.X509Certificate createAcIssuerCert(java.security.PublicKey,java.security.PrivateKey)"
        ]
    },
    "org.bouncycastle.x509.X509V2CRLGenerator:java.security.cert.X509CRL generate(java.security.PrivateKey)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.X509V3CertificateGenerator:java.security.cert.X509Certificate generate(java.security.PrivateKey)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.examples.PKCS12Example:java.security.cert.Certificate createIntermediateCert(java.security.PublicKey,java.security.PrivateKey,java.security.cert.X509Certificate)",
            "org.bouncycastle.jce.examples.PKCS12Example:java.security.cert.Certificate createCert(java.security.PublicKey,java.security.PrivateKey,java.security.PublicKey)",
            "org.bouncycastle.x509.examples.AttrCertExample:java.security.cert.X509Certificate createClientCert(java.security.PublicKey,java.security.PrivateKey,java.security.PublicKey)"
        ]
    },
    "org.bouncycastle.x509.X509V1CertificateGenerator:java.security.cert.X509Certificate generateX509Certificate(java.security.PrivateKey,java.lang.String,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.X509V1CertificateGenerator:java.security.cert.X509Certificate generateX509Certificate(java.security.PrivateKey)",
            "org.bouncycastle.x509.X509V1CertificateGenerator:java.security.cert.X509Certificate generateX509Certificate(java.security.PrivateKey,java.security.SecureRandom)",
            "org.bouncycastle.x509.X509V1CertificateGenerator:java.security.cert.X509Certificate generateX509Certificate(java.security.PrivateKey,java.lang.String)"
        ]
    },
    "org.bouncycastle.x509.X509V1CertificateGenerator:java.security.cert.X509Certificate generate(java.security.PrivateKey,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.X509V2AttributeCertificateGenerator:org.bouncycastle.x509.X509AttributeCertificate generateCertificate(java.security.PrivateKey,java.lang.String,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.X509V2AttributeCertificateGenerator:org.bouncycastle.x509.X509AttributeCertificate generateCertificate(java.security.PrivateKey,java.lang.String)"
        ]
    },
    "org.bouncycastle.x509.X509V2AttributeCertificateGenerator:org.bouncycastle.x509.X509AttributeCertificate generate(java.security.PrivateKey,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.examples.AttrCertExample:void main(java.lang.String[])"
        ]
    },
    "org.bouncycastle.x509.X509V2CRLGenerator:java.security.cert.X509CRL generateX509CRL(java.security.PrivateKey,java.lang.String,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.X509V2CRLGenerator:java.security.cert.X509CRL generateX509CRL(java.security.PrivateKey)",
            "org.bouncycastle.x509.X509V2CRLGenerator:java.security.cert.X509CRL generateX509CRL(java.security.PrivateKey,java.security.SecureRandom)",
            "org.bouncycastle.x509.X509V2CRLGenerator:java.security.cert.X509CRL generateX509CRL(java.security.PrivateKey,java.lang.String)"
        ]
    },
    "org.bouncycastle.x509.X509V2CRLGenerator:java.security.cert.X509CRL generate(java.security.PrivateKey,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.X509V3CertificateGenerator:java.security.cert.X509Certificate generateX509Certificate(java.security.PrivateKey,java.lang.String,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.X509V3CertificateGenerator:java.security.cert.X509Certificate generateX509Certificate(java.security.PrivateKey)",
            "org.bouncycastle.x509.X509V3CertificateGenerator:java.security.cert.X509Certificate generateX509Certificate(java.security.PrivateKey,java.security.SecureRandom)",
            "org.bouncycastle.x509.X509V3CertificateGenerator:java.security.cert.X509Certificate generateX509Certificate(java.security.PrivateKey,java.lang.String)"
        ]
    },
    "org.bouncycastle.x509.X509V3CertificateGenerator:java.security.cert.X509Certificate generate(java.security.PrivateKey,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.V2TBSCertListGenerator:void addCRLEntry(org.bouncycastle.asn1.ASN1Integer,org.bouncycastle.asn1.x509.Time,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.V2TBSCertListGenerator:void addCRLEntry(org.bouncycastle.asn1.ASN1Integer,org.bouncycastle.asn1.ASN1UTCTime,int)",
            "org.bouncycastle.x509.X509V2CRLGenerator:void addCRLEntry(java.math.BigInteger,java.util.Date,int)"
        ]
    },
    "org.bouncycastle.x509.X509V2CRLGenerator:void addCRLEntry(java.math.BigInteger,java.util.Date,int,java.util.Date)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.X509V2CRLGenerator:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.X509V2CRLGenerator:void reset()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.extension.SubjectKeyIdentifierStructure:void <init>(java.security.PublicKey)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.examples.PKCS12Example:java.security.cert.Certificate createIntermediateCert(java.security.PublicKey,java.security.PrivateKey,java.security.cert.X509Certificate)",
            "org.bouncycastle.jce.examples.PKCS12Example:java.security.cert.Certificate createCert(java.security.PublicKey,java.security.PrivateKey,java.security.PublicKey)",
            "org.bouncycastle.jce.examples.PKCS12Example:void main(java.lang.String[])"
        ]
    },
    "org.bouncycastle.asn1.BERSet:void <init>(org.bouncycastle.asn1.ASN1EncodableVector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.BERFactory:org.bouncycastle.asn1.BERSet createSet(org.bouncycastle.asn1.ASN1EncodableVector)",
            "org.bouncycastle.asn1.BERSetParser:org.bouncycastle.asn1.ASN1Primitive getLoadedObject()"
        ]
    },
    "org.bouncycastle.asn1.DERSet:void <init>(org.bouncycastle.asn1.ASN1EncodableVector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.icao.CscaMasterList:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.X509Name:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] getEncoded(java.lang.String)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void doStore(java.io.OutputStream,char[],boolean)",
            "org.bouncycastle.x509.X509Attribute:void <init>(java.lang.String,org.bouncycastle.asn1.ASN1EncodableVector)"
        ]
    },
    "org.bouncycastle.asn1.DERSet:void <init>(org.bouncycastle.asn1.ASN1EncodableVector,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.DERSetParser:org.bouncycastle.asn1.ASN1Primitive getLoadedObject()"
        ]
    },
    "org.bouncycastle.asn1.DLSet:void <init>(org.bouncycastle.asn1.ASN1EncodableVector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.DERFactory:org.bouncycastle.asn1.ASN1Set createSet(org.bouncycastle.asn1.ASN1EncodableVector)",
            "org.bouncycastle.asn1.cms.Attributes:void <init>(org.bouncycastle.asn1.ASN1EncodableVector)"
        ]
    },
    "org.bouncycastle.asn1.BERSet:void <init>(org.bouncycastle.asn1.ASN1Encodable[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)"
        ]
    },
    "org.bouncycastle.asn1.DERSet:void <init>(org.bouncycastle.asn1.ASN1Encodable[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x500.RDN:void <init>(org.bouncycastle.asn1.x500.AttributeTypeAndValue[])"
        ]
    },
    "org.bouncycastle.asn1.DLSet:void <init>(org.bouncycastle.asn1.ASN1Encodable[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)"
        ]
    },
    "org.bouncycastle.asn1.x509.RoleSyntax:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey:void writeObject(java.io.ObjectOutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey:void writeObject(java.io.ObjectOutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey:void writeObject(java.io.ObjectOutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:byte[] getEncoded()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil:org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePublicKeyParameter(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.KeyFactory:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi:void encodeKey(java.security.Key,java.io.DataOutputStream)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:org.bouncycastle.asn1.x509.SubjectKeyIdentifier createSubjectKeyId(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineInit(java.security.Key,java.security.spec.AlgorithmParameterSpec)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.ECKeyUtil:java.security.PublicKey publicToExplicitParameters(java.security.PublicKey,java.security.Provider)",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void <init>(java.lang.String,org.bouncycastle.asn1.x509.X509Name,java.security.PublicKey,org.bouncycastle.asn1.ASN1Set,java.security.PrivateKey,java.lang.String)",
            "org.bouncycastle.jce.netscape.NetscapeCertRequest:org.bouncycastle.asn1.ASN1Primitive getKeySpec()",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier(java.security.PublicKey)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.ocsp.CertificateID:org.bouncycastle.asn1.ocsp.CertID createCertID(org.bouncycastle.asn1.x509.AlgorithmIdentifier,java.security.cert.X509Certificate,org.bouncycastle.asn1.ASN1Integer,java.lang.String)",
            "org.bouncycastle.ocsp.RespID:void <init>(java.security.PublicKey)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean match(java.security.cert.Certificate)",
            "org.bouncycastle.x509.X509V1CertificateGenerator:void setPublicKey(java.security.PublicKey)",
            "org.bouncycastle.x509.X509V3CertificateGenerator:void setPublicKey(java.security.PublicKey)",
            "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure:org.bouncycastle.asn1.ASN1Sequence fromCertificate(java.security.cert.X509Certificate)",
            "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure:org.bouncycastle.asn1.ASN1Sequence fromKey(java.security.PublicKey)",
            "org.bouncycastle.x509.extension.SubjectKeyIdentifierStructure:org.bouncycastle.asn1.ASN1OctetString fromPublicKey(java.security.PublicKey)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.rsa.BCRSAPublicKey:byte[] getEncoded()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil:org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePublicKeyParameter(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.KeyFactory:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi:void encodeKey(java.security.Key,java.io.DataOutputStream)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:org.bouncycastle.asn1.x509.SubjectKeyIdentifier createSubjectKeyId(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineInit(java.security.Key,java.security.spec.AlgorithmParameterSpec)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.ECKeyUtil:java.security.PublicKey publicToExplicitParameters(java.security.PublicKey,java.security.Provider)",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void <init>(java.lang.String,org.bouncycastle.asn1.x509.X509Name,java.security.PublicKey,org.bouncycastle.asn1.ASN1Set,java.security.PrivateKey,java.lang.String)",
            "org.bouncycastle.jce.netscape.NetscapeCertRequest:org.bouncycastle.asn1.ASN1Primitive getKeySpec()",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier(java.security.PublicKey)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.ocsp.CertificateID:org.bouncycastle.asn1.ocsp.CertID createCertID(org.bouncycastle.asn1.x509.AlgorithmIdentifier,java.security.cert.X509Certificate,org.bouncycastle.asn1.ASN1Integer,java.lang.String)",
            "org.bouncycastle.ocsp.RespID:void <init>(java.security.PublicKey)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean match(java.security.cert.Certificate)",
            "org.bouncycastle.x509.X509V1CertificateGenerator:void setPublicKey(java.security.PublicKey)",
            "org.bouncycastle.x509.X509V3CertificateGenerator:void setPublicKey(java.security.PublicKey)",
            "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure:org.bouncycastle.asn1.ASN1Sequence fromCertificate(java.security.cert.X509Certificate)",
            "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure:org.bouncycastle.asn1.ASN1Sequence fromKey(java.security.PublicKey)",
            "org.bouncycastle.x509.extension.SubjectKeyIdentifierStructure:org.bouncycastle.asn1.ASN1OctetString fromPublicKey(java.security.PublicKey)"
        ]
    },
    "org.bouncycastle.jce.provider.JCEElGamalPublicKey:byte[] getEncoded()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil:org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePublicKeyParameter(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.KeyFactory:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi:void encodeKey(java.security.Key,java.io.DataOutputStream)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:org.bouncycastle.asn1.x509.SubjectKeyIdentifier createSubjectKeyId(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineInit(java.security.Key,java.security.spec.AlgorithmParameterSpec)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.ECKeyUtil:java.security.PublicKey publicToExplicitParameters(java.security.PublicKey,java.security.Provider)",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void <init>(java.lang.String,org.bouncycastle.asn1.x509.X509Name,java.security.PublicKey,org.bouncycastle.asn1.ASN1Set,java.security.PrivateKey,java.lang.String)",
            "org.bouncycastle.jce.netscape.NetscapeCertRequest:org.bouncycastle.asn1.ASN1Primitive getKeySpec()",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier(java.security.PublicKey)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.ocsp.CertificateID:org.bouncycastle.asn1.ocsp.CertID createCertID(org.bouncycastle.asn1.x509.AlgorithmIdentifier,java.security.cert.X509Certificate,org.bouncycastle.asn1.ASN1Integer,java.lang.String)",
            "org.bouncycastle.ocsp.RespID:void <init>(java.security.PublicKey)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean match(java.security.cert.Certificate)",
            "org.bouncycastle.x509.X509V1CertificateGenerator:void setPublicKey(java.security.PublicKey)",
            "org.bouncycastle.x509.X509V3CertificateGenerator:void setPublicKey(java.security.PublicKey)",
            "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure:org.bouncycastle.asn1.ASN1Sequence fromCertificate(java.security.cert.X509Certificate)",
            "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure:org.bouncycastle.asn1.ASN1Sequence fromKey(java.security.PublicKey)",
            "org.bouncycastle.x509.extension.SubjectKeyIdentifierStructure:org.bouncycastle.asn1.ASN1OctetString fromPublicKey(java.security.PublicKey)"
        ]
    },
    "org.bouncycastle.jce.provider.JCERSAPublicKey:byte[] getEncoded()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil:org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePublicKeyParameter(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.KeyFactory:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi:void encodeKey(java.security.Key,java.io.DataOutputStream)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:org.bouncycastle.asn1.x509.SubjectKeyIdentifier createSubjectKeyId(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineInit(java.security.Key,java.security.spec.AlgorithmParameterSpec)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.ECKeyUtil:java.security.PublicKey publicToExplicitParameters(java.security.PublicKey,java.security.Provider)",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void <init>(java.lang.String,org.bouncycastle.asn1.x509.X509Name,java.security.PublicKey,org.bouncycastle.asn1.ASN1Set,java.security.PrivateKey,java.lang.String)",
            "org.bouncycastle.jce.netscape.NetscapeCertRequest:org.bouncycastle.asn1.ASN1Primitive getKeySpec()",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier(java.security.PublicKey)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.ocsp.CertificateID:org.bouncycastle.asn1.ocsp.CertID createCertID(org.bouncycastle.asn1.x509.AlgorithmIdentifier,java.security.cert.X509Certificate,org.bouncycastle.asn1.ASN1Integer,java.lang.String)",
            "org.bouncycastle.ocsp.RespID:void <init>(java.security.PublicKey)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean match(java.security.cert.Certificate)",
            "org.bouncycastle.x509.X509V1CertificateGenerator:void setPublicKey(java.security.PublicKey)",
            "org.bouncycastle.x509.X509V3CertificateGenerator:void setPublicKey(java.security.PublicKey)",
            "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure:org.bouncycastle.asn1.ASN1Sequence fromCertificate(java.security.cert.X509Certificate)",
            "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure:org.bouncycastle.asn1.ASN1Sequence fromKey(java.security.PublicKey)",
            "org.bouncycastle.x509.extension.SubjectKeyIdentifierStructure:org.bouncycastle.asn1.ASN1OctetString fromPublicKey(java.security.PublicKey)"
        ]
    },
    "org.bouncycastle.jce.provider.JCEECPublicKey:void writeObject(java.io.ObjectOutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.X509CertificatePair:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.x509.Extensions:boolean equivalent(org.bouncycastle.asn1.x509.Extensions)",
            "org.bouncycastle.asn1.x509.X509Extensions:boolean equivalent(org.bouncycastle.asn1.x509.X509Extensions)",
            "org.bouncycastle.asn1.x509.X509Name:java.util.Vector getValues(org.bouncycastle.asn1.ASN1ObjectIdentifier)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.BCGOST3410PrivateKey:boolean compareObj(java.lang.Object,java.lang.Object)",
            "org.bouncycastle.jce.X509LDAPCertStoreParameters:boolean checkField(java.lang.Object,java.lang.Object)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void addAdditionalStoresFromAltNames(java.security.cert.X509Certificate,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:boolean equals(java.lang.Object,java.lang.Object)",
            "org.bouncycastle.util.Arrays:boolean areEqual(java.lang.Object[],java.lang.Object[])",
            "org.bouncycastle.x509.X509CertPairStoreSelector:boolean match(java.lang.Object)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.X509Name:int hashCode()",
            "org.bouncycastle.jce.X509LDAPCertStoreParameters:int addHashCode(int,java.lang.Object)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:int hashCollection(java.util.Collection)",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Matrix:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Vector:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2mVector:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.Permutation:int hashCode()",
            "org.bouncycastle.util.Arrays:int hashCode(java.lang.Object[])",
            "org.bouncycastle.x509.X509CertificatePair:int hashCode()"
        ]
    },
    "org.bouncycastle.jce.PKCS10CertificationRequest:boolean verify()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.provider.X509CertificateObject:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.X509Name:int hashCode()",
            "org.bouncycastle.jce.X509LDAPCertStoreParameters:int addHashCode(int,java.lang.Object)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:int hashCollection(java.util.Collection)",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Matrix:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Vector:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2mVector:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.Permutation:int hashCode()",
            "org.bouncycastle.util.Arrays:int hashCode(java.lang.Object[])",
            "org.bouncycastle.x509.X509CertificatePair:int hashCode()"
        ]
    },
    "org.bouncycastle.pqc.jcajce.provider.gmss.BCGMSSPublicKey:byte[] getEncoded()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil:org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePublicKeyParameter(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.KeyFactory:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi:void encodeKey(java.security.Key,java.io.DataOutputStream)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:org.bouncycastle.asn1.x509.SubjectKeyIdentifier createSubjectKeyId(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineInit(java.security.Key,java.security.spec.AlgorithmParameterSpec)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.ECKeyUtil:java.security.PublicKey publicToExplicitParameters(java.security.PublicKey,java.security.Provider)",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void <init>(java.lang.String,org.bouncycastle.asn1.x509.X509Name,java.security.PublicKey,org.bouncycastle.asn1.ASN1Set,java.security.PrivateKey,java.lang.String)",
            "org.bouncycastle.jce.netscape.NetscapeCertRequest:org.bouncycastle.asn1.ASN1Primitive getKeySpec()",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier(java.security.PublicKey)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.ocsp.CertificateID:org.bouncycastle.asn1.ocsp.CertID createCertID(org.bouncycastle.asn1.x509.AlgorithmIdentifier,java.security.cert.X509Certificate,org.bouncycastle.asn1.ASN1Integer,java.lang.String)",
            "org.bouncycastle.ocsp.RespID:void <init>(java.security.PublicKey)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean match(java.security.cert.Certificate)",
            "org.bouncycastle.x509.X509V1CertificateGenerator:void setPublicKey(java.security.PublicKey)",
            "org.bouncycastle.x509.X509V3CertificateGenerator:void setPublicKey(java.security.PublicKey)",
            "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure:org.bouncycastle.asn1.ASN1Sequence fromCertificate(java.security.cert.X509Certificate)",
            "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure:org.bouncycastle.asn1.ASN1Sequence fromKey(java.security.PublicKey)",
            "org.bouncycastle.x509.extension.SubjectKeyIdentifierStructure:org.bouncycastle.asn1.ASN1OctetString fromPublicKey(java.security.PublicKey)"
        ]
    },
    "org.bouncycastle.pqc.jcajce.provider.rainbow.BCRainbowPublicKey:byte[] getEncoded()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.SignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseCipherSpi:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.BaseKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil:org.bouncycastle.crypto.params.AsymmetricKeyParameter generatePublicKeyParameter(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.KeyFactory:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi:void encodeKey(java.security.Key,java.io.DataOutputStream)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:org.bouncycastle.asn1.x509.SubjectKeyIdentifier createSubjectKeyId(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineInit(java.security.Key,java.security.spec.AlgorithmParameterSpec)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.ECKeyUtil:java.security.PublicKey publicToExplicitParameters(java.security.PublicKey,java.security.Provider)",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void <init>(java.lang.String,org.bouncycastle.asn1.x509.X509Name,java.security.PublicKey,org.bouncycastle.asn1.ASN1Set,java.security.PrivateKey,java.lang.String)",
            "org.bouncycastle.jce.netscape.NetscapeCertRequest:org.bouncycastle.asn1.ASN1Primitive getKeySpec()",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.BrokenJCEBlockCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmIdentifier(java.security.PublicKey)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:int engineGetKeySize(java.security.Key)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.provider.JCEStreamCipher:byte[] engineWrap(java.security.Key)",
            "org.bouncycastle.ocsp.CertificateID:org.bouncycastle.asn1.ocsp.CertID createCertID(org.bouncycastle.asn1.x509.AlgorithmIdentifier,java.security.cert.X509Certificate,org.bouncycastle.asn1.ASN1Integer,java.lang.String)",
            "org.bouncycastle.ocsp.RespID:void <init>(java.security.PublicKey)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyFactorySpi:java.security.spec.KeySpec engineGetKeySpec(java.security.Key,java.lang.Class)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean match(java.security.cert.Certificate)",
            "org.bouncycastle.x509.X509V1CertificateGenerator:void setPublicKey(java.security.PublicKey)",
            "org.bouncycastle.x509.X509V3CertificateGenerator:void setPublicKey(java.security.PublicKey)",
            "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure:org.bouncycastle.asn1.ASN1Sequence fromCertificate(java.security.cert.X509Certificate)",
            "org.bouncycastle.x509.extension.AuthorityKeyIdentifierStructure:org.bouncycastle.asn1.ASN1Sequence fromKey(java.security.PublicKey)",
            "org.bouncycastle.x509.extension.SubjectKeyIdentifierStructure:org.bouncycastle.asn1.ASN1OctetString fromPublicKey(java.security.PublicKey)"
        ]
    },
    "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry:java.lang.Object getObject(char[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi:java.security.Key engineGetKey(java.lang.String,char[])"
        ]
    },
    "org.bouncycastle.asn1.x500.style.IETFUtils:org.bouncycastle.asn1.x500.RDN[] rDNsFromString(java.lang.String,org.bouncycastle.asn1.x500.X500NameStyle)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x500.style.BCStyle:org.bouncycastle.asn1.x500.RDN[] fromString(java.lang.String)",
            "org.bouncycastle.asn1.x500.style.RFC4519Style:org.bouncycastle.asn1.x500.RDN[] fromString(java.lang.String)"
        ]
    },
    "org.bouncycastle.asn1.x500.X500Name:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Sequence:int hashCode()",
            "org.bouncycastle.asn1.ASN1Set:int hashCode()",
            "org.bouncycastle.asn1.ASN1TaggedObject:int hashCode()",
            "org.bouncycastle.asn1.x509.X509Name:int hashCode()",
            "org.bouncycastle.jce.X509LDAPCertStoreParameters:int addHashCode(int,java.lang.Object)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:int hashCollection(java.util.Collection)",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Matrix:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Vector:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2mVector:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.Permutation:int hashCode()",
            "org.bouncycastle.util.Arrays:int hashCode(java.lang.Object[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:int hashCode()"
        ]
    },
    "org.bouncycastle.asn1.x500.style.BCStyle:java.lang.String toString(org.bouncycastle.asn1.x500.X500Name)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x500.X500Name:java.lang.String toString()"
        ]
    },
    "org.bouncycastle.asn1.x500.style.RFC4519Style:java.lang.String toString(org.bouncycastle.asn1.x500.X500Name)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x500.X500Name:java.lang.String toString()"
        ]
    },
    "org.bouncycastle.asn1.x500.style.BCStyle:boolean rdnAreEqual(org.bouncycastle.asn1.x500.RDN,org.bouncycastle.asn1.x500.RDN)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x500.style.BCStrictStyle:boolean areEqual(org.bouncycastle.asn1.x500.X500Name,org.bouncycastle.asn1.x500.X500Name)",
            "org.bouncycastle.asn1.x500.style.BCStyle:boolean foundMatch(boolean,org.bouncycastle.asn1.x500.RDN,org.bouncycastle.asn1.x500.RDN[])"
        ]
    },
    "org.bouncycastle.asn1.x500.style.RFC4519Style:boolean rdnAreEqual(org.bouncycastle.asn1.x500.RDN,org.bouncycastle.asn1.x500.RDN)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x500.style.RFC4519Style:boolean foundMatch(boolean,org.bouncycastle.asn1.x500.RDN,org.bouncycastle.asn1.x500.RDN[])"
        ]
    },
    "org.bouncycastle.asn1.nist.NISTNamedCurves:org.bouncycastle.asn1.x9.X9ECParameters getByName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x9.ECNamedCurveTable:org.bouncycastle.asn1.x9.X9ECParameters getByName(java.lang.String)",
            "org.bouncycastle.crypto.prng.drbg.DualECSP800DRBG:void <clinit>()"
        ]
    },
    "org.bouncycastle.asn1.x9.ECNamedCurveTable:org.bouncycastle.asn1.x9.X9ECParameters getByName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsECCUtils:org.bouncycastle.crypto.params.ECDomainParameters getParametersForNamedCurve(int)",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC:void initialize(java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)",
            "org.bouncycastle.jce.ECNamedCurveTable:org.bouncycastle.jce.spec.ECNamedCurveParameterSpec getParameterSpec(java.lang.String)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC:void initialize(java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC:void initialize(int,java.security.SecureRandom)"
        ]
    },
    "org.bouncycastle.jce.ECNamedCurveTable:org.bouncycastle.jce.spec.ECNamedCurveParameterSpec getParameterSpec(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.DERExternal:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Sequence:int hashCode()",
            "org.bouncycastle.asn1.ASN1Set:int hashCode()",
            "org.bouncycastle.asn1.ASN1TaggedObject:int hashCode()",
            "org.bouncycastle.asn1.DERExternal:int hashCode()",
            "org.bouncycastle.asn1.x509.X509Name:int hashCode()",
            "org.bouncycastle.jce.X509LDAPCertStoreParameters:int addHashCode(int,java.lang.Object)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:int hashCollection(java.util.Collection)",
            "org.bouncycastle.ocsp.CertificateID:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Matrix:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Vector:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2mVector:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.Permutation:int hashCode()",
            "org.bouncycastle.util.Arrays:int hashCode(java.lang.Object[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:int hashCode()"
        ]
    },
    "org.bouncycastle.ocsp.CertificateID:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.X509Name:int hashCode()",
            "org.bouncycastle.jce.X509LDAPCertStoreParameters:int addHashCode(int,java.lang.Object)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:int hashCollection(java.util.Collection)",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Matrix:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Vector:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2mVector:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.Permutation:int hashCode()",
            "org.bouncycastle.util.Arrays:int hashCode(java.lang.Object[])"
        ]
    },
    "org.bouncycastle.jce.X509LDAPCertStoreParameters:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.X509Name:int hashCode()",
            "org.bouncycastle.jce.X509LDAPCertStoreParameters:int addHashCode(int,java.lang.Object)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:int hashCollection(java.util.Collection)",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Matrix:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Vector:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2mVector:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.Permutation:int hashCode()",
            "org.bouncycastle.util.Arrays:int hashCode(java.lang.Object[])"
        ]
    },
    "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.X509Name:int hashCode()",
            "org.bouncycastle.jce.X509LDAPCertStoreParameters:int addHashCode(int,java.lang.Object)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:int hashCollection(java.util.Collection)",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Matrix:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Vector:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2mVector:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.Permutation:int hashCode()",
            "org.bouncycastle.util.Arrays:int hashCode(java.lang.Object[])"
        ]
    },
    "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PrivateKey:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.X509Name:int hashCode()",
            "org.bouncycastle.jce.X509LDAPCertStoreParameters:int addHashCode(int,java.lang.Object)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:int hashCollection(java.util.Collection)",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Matrix:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Vector:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2mVector:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.Permutation:int hashCode()",
            "org.bouncycastle.util.Arrays:int hashCode(java.lang.Object[])"
        ]
    },
    "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcElieceCCA2PublicKey:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.X509Name:int hashCode()",
            "org.bouncycastle.jce.X509LDAPCertStoreParameters:int addHashCode(int,java.lang.Object)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:int hashCollection(java.util.Collection)",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Matrix:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Vector:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2mVector:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.Permutation:int hashCode()",
            "org.bouncycastle.util.Arrays:int hashCode(java.lang.Object[])"
        ]
    },
    "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcEliecePrivateKey:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.X509Name:int hashCode()",
            "org.bouncycastle.jce.X509LDAPCertStoreParameters:int addHashCode(int,java.lang.Object)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:int hashCollection(java.util.Collection)",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Matrix:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Vector:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2mVector:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.Permutation:int hashCode()",
            "org.bouncycastle.util.Arrays:int hashCode(java.lang.Object[])"
        ]
    },
    "org.bouncycastle.pqc.jcajce.provider.mceliece.BCMcEliecePublicKey:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.X509Name:int hashCode()",
            "org.bouncycastle.jce.X509LDAPCertStoreParameters:int addHashCode(int,java.lang.Object)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:int hashCollection(java.util.Collection)",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Matrix:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Vector:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2mVector:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.Permutation:int hashCode()",
            "org.bouncycastle.util.Arrays:int hashCode(java.lang.Object[])"
        ]
    },
    "org.bouncycastle.pqc.math.linearalgebra.GF2nField:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.X509Name:int hashCode()",
            "org.bouncycastle.jce.X509LDAPCertStoreParameters:int addHashCode(int,java.lang.Object)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:int hashCollection(java.util.Collection)",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Matrix:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Vector:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2mVector:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.Permutation:int hashCode()",
            "org.bouncycastle.util.Arrays:int hashCode(java.lang.Object[])"
        ]
    },
    "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.X509Name:int hashCode()",
            "org.bouncycastle.jce.X509LDAPCertStoreParameters:int addHashCode(int,java.lang.Object)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:int hashCollection(java.util.Collection)",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Matrix:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Vector:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2mVector:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.Permutation:int hashCode()",
            "org.bouncycastle.util.Arrays:int hashCode(java.lang.Object[])"
        ]
    },
    "org.bouncycastle.asn1.cms.ecc.MQVuserKeyingMaterial:org.bouncycastle.asn1.cms.ecc.MQVuserKeyingMaterial getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.ecc.MQVuserKeyingMaterial:org.bouncycastle.asn1.cms.ecc.MQVuserKeyingMaterial getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)"
        ]
    },
    "org.bouncycastle.asn1.esf.OcspIdentifier:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.esf.OcspIdentifier:org.bouncycastle.asn1.esf.OcspIdentifier getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.x509.SubjectKeyIdentifier getSubjectKeyIdentifier()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.cms.KEKRecipientInfo getKEKInfo(org.bouncycastle.asn1.ASN1TaggedObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Integer getVersion()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Encodable getInfo()"
        ]
    },
    "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.cms.OriginatorPublicKey getOriginatorKey()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cms.Evidence:void <init>(org.bouncycastle.asn1.ASN1TaggedObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.Evidence:org.bouncycastle.asn1.cms.Evidence getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.cmp.OOBCertHash:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.OOBCertHash:org.bouncycastle.asn1.'cmp'.OOBCertHash getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.crmf.ProofOfPossession:void <init>(org.bouncycastle.asn1.ASN1TaggedObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.crmf.ProofOfPossession:org.bouncycastle.asn1.crmf.ProofOfPossession getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.ocsp.CertStatus:void <init>(org.bouncycastle.asn1.ASN1TaggedObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ocsp.CertStatus:org.bouncycastle.asn1.ocsp.CertStatus getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.pkcs.RSAESOAEPparams:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.pkcs.RSAESOAEPparams:org.bouncycastle.asn1.pkcs.RSAESOAEPparams getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x509.Holder:void <init>(org.bouncycastle.asn1.ASN1TaggedObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.Holder:org.bouncycastle.asn1.x509.Holder getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.cmp.PKIBody:void <init>(int,org.bouncycastle.asn1.ASN1Encodable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cms.RecipientEncryptedKey:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.RecipientEncryptedKey:org.bouncycastle.asn1.cms.RecipientEncryptedKey getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.cms.KEKIdentifier:org.bouncycastle.asn1.cms.KEKIdentifier getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.KEKIdentifier:org.bouncycastle.asn1.cms.KEKIdentifier getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.cms.KEKRecipientInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.dvcs.DVCSCertInfo:org.bouncycastle.asn1.dvcs.TargetEtcChain[] getCerts()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.PKCS10CertificationRequest:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dh.AlgorithmParametersSpi:void engineInit(byte[],java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dh.KeyFactorySpi:java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dsa.KeyFactorySpi:java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dstu.KeyFactorySpi:java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyFactorySpi:java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ecgost.KeyFactorySpi:java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.elgamal.KeyFactorySpi:java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.gost.KeyFactorySpi:java.security.PrivateKey engineGeneratePrivate(java.security.spec.KeySpec)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.rsa.AlgorithmParametersSpi$PSS:void engineInit(byte[],java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x500.X500Name:org.bouncycastle.asn1.ASN1ObjectIdentifier[] getAttributeTypes()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.X509V1CertificateGenerator:void setIssuerDN(org.bouncycastle.asn1.x509.X509Name)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.examples.PKCS12Example:java.security.cert.Certificate createMasterCert(java.security.PublicKey,java.security.PrivateKey)",
            "org.bouncycastle.x509.examples.AttrCertExample:java.security.cert.X509Certificate createAcIssuerCert(java.security.PublicKey,java.security.PrivateKey)"
        ]
    },
    "org.bouncycastle.x509.X509V1CertificateGenerator:void setSubjectDN(org.bouncycastle.asn1.x509.X509Name)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.examples.PKCS12Example:java.security.cert.Certificate createMasterCert(java.security.PublicKey,java.security.PrivateKey)",
            "org.bouncycastle.x509.examples.AttrCertExample:java.security.cert.X509Certificate createAcIssuerCert(java.security.PublicKey,java.security.PrivateKey)"
        ]
    },
    "org.bouncycastle.x509.X509V2CRLGenerator:void setIssuerDN(org.bouncycastle.asn1.x509.X509Name)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.X509V3CertificateGenerator:void setIssuerDN(org.bouncycastle.asn1.x509.X509Name)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.examples.PKCS12Example:java.security.cert.Certificate createIntermediateCert(java.security.PublicKey,java.security.PrivateKey,java.security.cert.X509Certificate)",
            "org.bouncycastle.jce.examples.PKCS12Example:java.security.cert.Certificate createCert(java.security.PublicKey,java.security.PrivateKey,java.security.PublicKey)",
            "org.bouncycastle.x509.examples.AttrCertExample:java.security.cert.X509Certificate createClientCert(java.security.PublicKey,java.security.PrivateKey,java.security.PublicKey)"
        ]
    },
    "org.bouncycastle.x509.X509V3CertificateGenerator:void setSubjectDN(org.bouncycastle.asn1.x509.X509Name)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.examples.PKCS12Example:java.security.cert.Certificate createIntermediateCert(java.security.PublicKey,java.security.PrivateKey,java.security.cert.X509Certificate)",
            "org.bouncycastle.jce.examples.PKCS12Example:java.security.cert.Certificate createCert(java.security.PublicKey,java.security.PrivateKey,java.security.PublicKey)",
            "org.bouncycastle.x509.examples.AttrCertExample:java.security.cert.X509Certificate createClientCert(java.security.PublicKey,java.security.PrivateKey,java.security.PublicKey)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLEntryObject:void <init>(org.bouncycastle.asn1.x509.TBSCertList$CRLEntry,boolean,org.bouncycastle.asn1.x500.X500Name)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:java.util.Set loadCRLEntries()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:java.security.cert.X509CRLEntry getRevokedCertificate(java.math.BigInteger)"
        ]
    },
    "org.bouncycastle.jce.provider.X509CRLEntryObject:void <init>(org.bouncycastle.asn1.x509.TBSCertList$CRLEntry,boolean,org.bouncycastle.asn1.x500.X500Name)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.X509CRLObject:java.util.Set loadCRLEntries()",
            "org.bouncycastle.jce.provider.X509CRLObject:java.security.cert.X509CRLEntry getRevokedCertificate(java.math.BigInteger)"
        ]
    },
    "org.bouncycastle.x509.X509V2AttributeCertificate:org.bouncycastle.x509.X509Attribute[] getAttributes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.examples.AttrCertExample:void main(java.lang.String[])"
        ]
    },
    "org.bouncycastle.x509.X509V2AttributeCertificate:org.bouncycastle.x509.X509Attribute[] getAttributes(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.RFC3281CertPathUtilities:void additionalChecks(org.bouncycastle.x509.X509AttributeCertificate,org.bouncycastle.x509.ExtendedPKIXParameters)"
        ]
    },
    "org.bouncycastle.asn1.dvcs.CertEtcToken:org.bouncycastle.asn1.dvcs.CertEtcToken[] arrayFromSequence(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.dvcs.TargetEtcChain:org.bouncycastle.asn1.dvcs.CertEtcToken[] getChain()"
        ]
    },
    "org.bouncycastle.ocsp.BasicOCSPRespGenerator$ResponseObject:org.bouncycastle.asn1.ocsp.SingleResponse toResponse()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.ocsp.BasicOCSPRespGenerator:org.bouncycastle.ocsp.BasicOCSPResp generateResponse(java.lang.String,java.security.PrivateKey,java.security.cert.X509Certificate[],java.util.Date,java.lang.String,java.security.SecureRandom)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLEntryObject:org.bouncycastle.asn1.x509.Extension getExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLEntryObject:org.bouncycastle.asn1.x500.X500Name loadCertificateIssuer(boolean,org.bouncycastle.asn1.x500.X500Name)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLEntryObject:byte[] getExtensionValue(java.lang.String)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLEntryObject:boolean hasExtensions()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCertStatus(java.util.Date,java.security.cert.X509CRL,java.lang.Object,org.bouncycastle.jce.provider.CertStatus)",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkCRLs(java.security.cert.PKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,java.util.Vector,int)"
        ]
    },
    "org.bouncycastle.jce.provider.X509CRLEntryObject:org.bouncycastle.asn1.x509.Extension getExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.X509CRLEntryObject:org.bouncycastle.asn1.x500.X500Name loadCertificateIssuer(boolean,org.bouncycastle.asn1.x500.X500Name)",
            "org.bouncycastle.jce.provider.X509CRLEntryObject:byte[] getExtensionValue(java.lang.String)"
        ]
    },
    "org.bouncycastle.jce.provider.X509CRLEntryObject:boolean hasExtensions()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCertStatus(java.util.Date,java.security.cert.X509CRL,java.lang.Object,org.bouncycastle.jce.provider.CertStatus)",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkCRLs(java.security.cert.PKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,java.util.Vector,int)"
        ]
    },
    "org.bouncycastle.x509.X509V2CRLGenerator:org.bouncycastle.asn1.x509.TBSCertList generateCertList()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.X509V2CRLGenerator:java.security.cert.X509CRL generate(java.security.PrivateKey,java.security.SecureRandom)",
            "org.bouncycastle.x509.X509V2CRLGenerator:java.security.cert.X509CRL generate(java.security.PrivateKey,java.lang.String,java.security.SecureRandom)"
        ]
    },
    "org.bouncycastle.x509.X509V3CertificateGenerator:org.bouncycastle.asn1.x509.TBSCertificate generateTbsCert()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.X509V3CertificateGenerator:java.security.cert.X509Certificate generate(java.security.PrivateKey,java.security.SecureRandom)",
            "org.bouncycastle.x509.X509V3CertificateGenerator:java.security.cert.X509Certificate generate(java.security.PrivateKey,java.lang.String,java.security.SecureRandom)"
        ]
    },
    "org.bouncycastle.x509.AttributeCertificateHolder:void <init>(org.bouncycastle.jce.X509Principal)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.AttributeCertificateHolder:void <init>(javax.security.auth.x500.X500Principal)"
        ]
    },
    "org.bouncycastle.asn1.x509.CertificateList:org.bouncycastle.asn1.x509.TBSCertList$CRLEntry[] getRevokedCertificates()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void verifyX509Certificate(java.security.cert.X509Certificate,java.security.PublicKey,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:java.security.cert.TrustAnchor findTrustAnchor(java.security.cert.X509Certificate,java.util.Set,java.lang.String)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCertA(java.security.cert.CertPath,org.bouncycastle.x509.ExtendedPKIXParameters,int,java.security.PublicKey,boolean,javax.security.auth.x500.X500Principal,java.security.cert.X509Certificate)",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkSignatures()"
        ]
    },
    "org.bouncycastle.asn1.x509.CRLDistPoint:org.bouncycastle.asn1.x509.DistributionPoint[] getDistributionPoints()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.CRLDistPoint:java.lang.String toString()",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void addAdditionalStoresFromCRLDistributionPoint(org.bouncycastle.asn1.x509.CRLDistPoint,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void checkCRLs(org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,java.util.List)",
            "org.bouncycastle.jce.provider.RFC3281CertPathUtilities:void checkCRLs(org.bouncycastle.x509.X509AttributeCertificate,org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.util.List)",
            "org.bouncycastle.x509.PKIXCertPathReviewer:java.util.Vector getCRLDistUrls(org.bouncycastle.asn1.x509.CRLDistPoint)"
        ]
    },
    "org.bouncycastle.jce.provider.CertStoreCollectionSpi:java.util.Collection engineGetCRLs(java.security.cert.CRLSelector)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.provider.X509LDAPCertStoreSpi:java.util.Collection engineGetCRLs(java.security.cert.CRLSelector)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.KeyUsage:org.bouncycastle.asn1.x509.KeyUsage fromExtensions(org.bouncycastle.asn1.x509.Extensions)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsUtils:void validateKeyUsage(org.bouncycastle.asn1.x509.Certificate,int)"
        ]
    },
    "org.bouncycastle.asn1.x509.Target:org.bouncycastle.asn1.x509.Target getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.Targets:org.bouncycastle.asn1.x509.Target[] getTargets()"
        ]
    },
    "org.bouncycastle.asn1.ASN1Sequence$1:org.bouncycastle.asn1.ASN1Encodable readObject()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.cms.OriginatorInfo getOriginatorInfo()",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1SetParser getRecipientInfos()",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.cms.EncryptedContentInfoParser getAuthEncryptedContentInfo()",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1SetParser getAuthAttrs()",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1SetParser getUnauthAttrs()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.cms.OriginatorInfo getOriginatorInfo()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1SetParser getRecipientInfos()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getMacAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.cms.ContentInfoParser getEncapsulatedContentInfo()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1SetParser getAuthAttrs()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1SetParser getUnauthAttrs()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.ContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EnvelopedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EnvelopedDataParser:org.bouncycastle.asn1.cms.OriginatorInfo getOriginatorInfo()",
            "org.bouncycastle.asn1.cms.EnvelopedDataParser:org.bouncycastle.asn1.ASN1SetParser getRecipientInfos()",
            "org.bouncycastle.asn1.cms.EnvelopedDataParser:org.bouncycastle.asn1.cms.EncryptedContentInfoParser getEncryptedContentInfo()",
            "org.bouncycastle.asn1.cms.EnvelopedDataParser:org.bouncycastle.asn1.ASN1SetParser getUnprotectedAttrs()",
            "org.bouncycastle.asn1.cms.SignedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.SignedDataParser:org.bouncycastle.asn1.ASN1SetParser getDigestAlgorithms()",
            "org.bouncycastle.asn1.cms.SignedDataParser:org.bouncycastle.asn1.cms.ContentInfoParser getEncapContentInfo()",
            "org.bouncycastle.asn1.cms.SignedDataParser:org.bouncycastle.asn1.ASN1SetParser getCertificates()",
            "org.bouncycastle.asn1.cms.SignedDataParser:org.bouncycastle.asn1.ASN1SetParser getCrls()",
            "org.bouncycastle.asn1.cms.SignedDataParser:org.bouncycastle.asn1.ASN1SetParser getSignerInfos()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()"
        ]
    },
    "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Encodable[] toArray()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)"
        ]
    },
    "org.bouncycastle.asn1.cmp.PKIFreeText:org.bouncycastle.asn1.DERUTF8String getStringAt(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cms.Attribute:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.Attribute:org.bouncycastle.asn1.cms.Attribute getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.cms.OtherKeyAttribute:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.OtherKeyAttribute:org.bouncycastle.asn1.cms.OtherKeyAttribute getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.crmf.AttributeTypeAndValue:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.crmf.AttributeTypeAndValue:org.bouncycastle.asn1.crmf.AttributeTypeAndValue getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.cryptopro.GOST3410PublicKeyAlgParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cryptopro.GOST3410PublicKeyAlgParameters:org.bouncycastle.asn1.cryptopro.GOST3410PublicKeyAlgParameters getInstance(java.lang.Object)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.AlgorithmParametersSpi:void engineInit(byte[])",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.BCGOST3410PrivateKey:void <init>(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.BCGOST3410PublicKey:void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jce.provider.JCEECPublicKey:void populateFromPubKeyInfo(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)"
        ]
    },
    "org.bouncycastle.asn1.esf.CommitmentTypeIndication:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.esf.CommitmentTypeIndication:org.bouncycastle.asn1.esf.CommitmentTypeIndication getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.esf.CommitmentTypeQualifier:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.esf.CommitmentTypeQualifier:org.bouncycastle.asn1.esf.CommitmentTypeQualifier getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.misc.CAST5CBCParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.misc.CAST5CBCParameters:org.bouncycastle.asn1.misc.CAST5CBCParameters getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.misc.IDEACBCPar:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.misc.IDEACBCPar:org.bouncycastle.asn1.misc.IDEACBCPar getInstance(java.lang.Object)",
            "org.bouncycastle.jcajce.provider.symmetric.IDEA$AlgParams:void engineInit(byte[],java.lang.String)"
        ]
    },
    "org.bouncycastle.asn1.ocsp.ResponseBytes:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ocsp.ResponseBytes:org.bouncycastle.asn1.ocsp.ResponseBytes getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.pkcs.Attribute:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.pkcs.Attribute:org.bouncycastle.asn1.pkcs.Attribute getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.pkcs.PBEParameter:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.pkcs.PBEParameter:org.bouncycastle.asn1.pkcs.PBEParameter getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.pkcs.RC2CBCParameter:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.pkcs.RC2CBCParameter:org.bouncycastle.asn1.pkcs.RC2CBCParameter getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.sec.ECPrivateKey:java.math.BigInteger getKey()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)"
        ]
    },
    "org.bouncycastle.asn1.sec.ECPrivateKeyStructure:java.math.BigInteger getKey()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.JCEECPrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)"
        ]
    },
    "org.bouncycastle.asn1.smime.SMIMECapability:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.smime.SMIMECapability:org.bouncycastle.asn1.smime.SMIMECapability getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x500.AttributeTypeAndValue:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x500.AttributeTypeAndValue:org.bouncycastle.asn1.x500.AttributeTypeAndValue getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x509.TBSCertList$CRLEntry:org.bouncycastle.asn1.x509.Time getRevocationDate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLEntryObject:java.util.Date getRevocationDate()",
            "org.bouncycastle.jce.provider.X509CRLEntryObject:java.util.Date getRevocationDate()"
        ]
    },
    "org.bouncycastle.pqc.asn1.GMSSPrivateKey:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.asn1.McElieceCCA2PrivateKey:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.asn1.McElieceCCA2PrivateKey:org.bouncycastle.pqc.asn1.McElieceCCA2PrivateKey getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.pqc.asn1.McElieceCCA2PublicKey:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.asn1.McElieceCCA2PublicKey:org.bouncycastle.pqc.asn1.McElieceCCA2PublicKey getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.pqc.asn1.McEliecePrivateKey:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.asn1.McEliecePrivateKey:org.bouncycastle.pqc.asn1.McEliecePrivateKey getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.pqc.asn1.McEliecePublicKey:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.asn1.McEliecePublicKey:org.bouncycastle.pqc.asn1.McEliecePublicKey getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.pqc.asn1.ParSet:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.asn1.ParSet:org.bouncycastle.pqc.asn1.ParSet getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.ASN1Sequence$1:void <init>(org.bouncycastle.asn1.ASN1Sequence,org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1SequenceParser parser()"
        ]
    },
    "org.bouncycastle.asn1.cmp.PKIFreeText:int size()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.esf.SigPolicyQualifiers:int size()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.TBSCertList$CRLEntry:void <init>(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.TBSCertList$CRLEntry:org.bouncycastle.asn1.x509.TBSCertList$CRLEntry getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x509.TBSCertList$CRLEntry:boolean hasExtensions()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:java.util.Set loadCRLEntries()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:java.security.cert.X509CRLEntry getRevokedCertificate(java.math.BigInteger)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:boolean isRevoked(java.security.cert.Certificate)",
            "org.bouncycastle.jce.provider.X509CRLObject:java.util.Set loadCRLEntries()",
            "org.bouncycastle.jce.provider.X509CRLObject:java.security.cert.X509CRLEntry getRevokedCertificate(java.math.BigInteger)",
            "org.bouncycastle.jce.provider.X509CRLObject:boolean isRevoked(java.security.cert.Certificate)"
        ]
    },
    "org.bouncycastle.asn1.x509.CertificateList:java.util.Enumeration getRevokedCertificateEnumeration()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:java.util.Set loadCRLEntries()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:java.security.cert.X509CRLEntry getRevokedCertificate(java.math.BigInteger)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:boolean isRevoked(java.security.cert.Certificate)",
            "org.bouncycastle.jce.provider.X509CRLObject:java.util.Set loadCRLEntries()",
            "org.bouncycastle.jce.provider.X509CRLObject:java.security.cert.X509CRLEntry getRevokedCertificate(java.math.BigInteger)",
            "org.bouncycastle.jce.provider.X509CRLObject:boolean isRevoked(java.security.cert.Certificate)"
        ]
    },
    "org.bouncycastle.asn1.cms.AttributeTable:org.bouncycastle.asn1.cms.AttributeTable add(org.bouncycastle.asn1.ASN1ObjectIdentifier,org.bouncycastle.asn1.ASN1Encodable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cms.AttributeTable:org.bouncycastle.asn1.cms.AttributeTable remove(org.bouncycastle.asn1.ASN1ObjectIdentifier)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x500.style.BCStrictStyle:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x500.style.BCStrictStyle:void <clinit>()"
        ]
    },
    "org.bouncycastle.asn1.x500.style.BCStyle:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x500.X500Name:void <clinit>()",
            "org.bouncycastle.asn1.x500.X500NameBuilder:void <init>()",
            "org.bouncycastle.asn1.x500.style.BCStrictStyle:void <clinit>()",
            "org.bouncycastle.asn1.x500.style.BCStyle:void <init>()",
            "org.bouncycastle.asn1.x500.style.BCStyle:org.bouncycastle.asn1.ASN1Encodable stringToValue(org.bouncycastle.asn1.ASN1ObjectIdentifier,java.lang.String)",
            "org.bouncycastle.asn1.x500.style.BCStyle:java.lang.String oidToDisplayName(org.bouncycastle.asn1.ASN1ObjectIdentifier)",
            "org.bouncycastle.asn1.x500.style.BCStyle:void <clinit>()"
        ]
    },
    "org.bouncycastle.asn1.x500.style.RFC4519Style:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x500.style.RFC4519Style:void <init>()",
            "org.bouncycastle.asn1.x500.style.RFC4519Style:org.bouncycastle.asn1.ASN1Encodable stringToValue(org.bouncycastle.asn1.ASN1ObjectIdentifier,java.lang.String)",
            "org.bouncycastle.asn1.x500.style.RFC4519Style:java.lang.String oidToDisplayName(org.bouncycastle.asn1.ASN1ObjectIdentifier)",
            "org.bouncycastle.asn1.x500.style.RFC4519Style:void <clinit>()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:java.util.Collection getAlternativeNames(byte[])",
            "org.bouncycastle.jce.provider.X509CertificateObject:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.x509.X509Name:void <init>(java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.X509Principal:void <init>(java.util.Hashtable)"
        ]
    },
    "org.bouncycastle.jce.X509Principal:void <init>(java.util.Vector,java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.examples.PKCS12Example:java.security.cert.Certificate createIntermediateCert(java.security.PublicKey,java.security.PrivateKey,java.security.cert.X509Certificate)",
            "org.bouncycastle.jce.examples.PKCS12Example:java.security.cert.Certificate createCert(java.security.PublicKey,java.security.PrivateKey,java.security.PublicKey)",
            "org.bouncycastle.x509.examples.AttrCertExample:java.security.cert.X509Certificate createClientCert(java.security.PublicKey,java.security.PrivateKey,java.security.PublicKey)"
        ]
    },
    "org.bouncycastle.jce.ECNamedCurveTable:java.util.Enumeration getNames()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.digests.SkeinDigest:void init(org.bouncycastle.crypto.params.SkeinParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.digests.SkeinDigest:void <init>(int,int)"
        ]
    },
    "org.bouncycastle.crypto.macs.SkeinMac:void init(org.bouncycastle.crypto.CipherParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.engines.IESEngine:byte[] encryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.engines.IESEngine:byte[] decryptBlock(byte[],int,int)",
            "org.bouncycastle.crypto.generators.KDFCounterBytesGenerator:void init(org.bouncycastle.crypto.DerivationParameters)",
            "org.bouncycastle.crypto.generators.KDFDoublePipelineIterationBytesGenerator:void init(org.bouncycastle.crypto.DerivationParameters)",
            "org.bouncycastle.crypto.generators.KDFFeedbackBytesGenerator:void init(org.bouncycastle.crypto.DerivationParameters)",
            "org.bouncycastle.crypto.generators.PKCS5S2ParametersGenerator:byte[] generateDerivedKey(int)",
            "org.bouncycastle.crypto.modes.EAXBlockCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:void hmac_DRBG_Update_Func(byte[],byte)",
            "org.bouncycastle.crypto.prng.drbg.HMacSP800DRBG:int generate(byte[],byte[],boolean)",
            "org.bouncycastle.crypto.tls.TlsMac:void <init>(org.bouncycastle.crypto.tls.TlsContext,org.bouncycastle.crypto.Digest,byte[],int,int)",
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseMac:void engineInit(java.security.Key,java.security.spec.AlgorithmParameterSpec)"
        ]
    },
    "org.bouncycastle.crypto.signers.DSADigestSigner:void init(boolean,org.bouncycastle.crypto.CipherParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsDSASigner:org.bouncycastle.crypto.Signer makeSigner(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,boolean,boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.crypto.tls.TlsRSASigner:org.bouncycastle.crypto.Signer makeSigner(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,boolean,boolean,org.bouncycastle.crypto.CipherParameters)"
        ]
    },
    "org.bouncycastle.crypto.signers.GenericSigner:void init(boolean,org.bouncycastle.crypto.CipherParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsRSASigner:org.bouncycastle.crypto.Signer makeSigner(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,boolean,boolean,org.bouncycastle.crypto.CipherParameters)"
        ]
    },
    "org.bouncycastle.crypto.signers.ISO9796d2PSSSigner:void init(boolean,org.bouncycastle.crypto.CipherParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsRSASigner:org.bouncycastle.crypto.Signer makeSigner(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,boolean,boolean,org.bouncycastle.crypto.CipherParameters)"
        ]
    },
    "org.bouncycastle.crypto.signers.ISO9796d2Signer:void init(boolean,org.bouncycastle.crypto.CipherParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsRSASigner:org.bouncycastle.crypto.Signer makeSigner(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,boolean,boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.ISOSignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.ISOSignatureSpi:void engineInitSign(java.security.PrivateKey)"
        ]
    },
    "org.bouncycastle.crypto.signers.PSSSigner:void init(boolean,org.bouncycastle.crypto.CipherParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsRSASigner:org.bouncycastle.crypto.Signer makeSigner(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,boolean,boolean,org.bouncycastle.crypto.CipherParameters)",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.PSSSignatureSpi:void engineInitVerify(java.security.PublicKey)",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.PSSSignatureSpi:void engineInitSign(java.security.PrivateKey,java.security.SecureRandom)",
            "org.bouncycastle.jcajce.provider.asymmetric.rsa.PSSSignatureSpi:void engineInitSign(java.security.PrivateKey)"
        ]
    },
    "org.bouncycastle.crypto.signers.RSADigestSigner:void init(boolean,org.bouncycastle.crypto.CipherParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsRSASigner:org.bouncycastle.crypto.Signer makeSigner(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,boolean,boolean,org.bouncycastle.crypto.CipherParameters)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.dsa.DSASigner:void engineInitSign(java.security.PrivateKey,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.gost.SignatureSpi:void engineInitSign(java.security.PrivateKey,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.crypto.mceliece.McElieceFujisakiDigestCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.crypto.mceliece.McElieceKobaraImaiDigestCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.crypto.mceliece.McEliecePKCSDigestCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.crypto.mceliece.McEliecePointchevalDigestCipher:void init(boolean,org.bouncycastle.crypto.CipherParameters)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.jcajce.provider.util.AsymmetricHybridCipher:void initEncrypt(java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.jcajce.provider.util.AsymmetricHybridCipher:void initEncrypt(java.security.Key)",
            "org.bouncycastle.pqc.jcajce.provider.util.AsymmetricHybridCipher:void initEncrypt(java.security.Key,java.security.SecureRandom)",
            "org.bouncycastle.pqc.jcajce.provider.util.AsymmetricHybridCipher:void initEncrypt(java.security.Key,java.security.spec.AlgorithmParameterSpec)",
            "org.bouncycastle.pqc.jcajce.provider.util.CipherSpiExt:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)"
        ]
    },
    "org.bouncycastle.pqc.jcajce.provider.util.AsymmetricHybridCipher:void initDecrypt(java.security.Key,java.security.spec.AlgorithmParameterSpec)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.jcajce.provider.util.AsymmetricHybridCipher:void initDecrypt(java.security.Key)",
            "org.bouncycastle.pqc.jcajce.provider.util.CipherSpiExt:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)"
        ]
    },
    "org.bouncycastle.pqc.jcajce.provider.util.AsymmetricBlockCipher:void initEncrypt(java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.jcajce.provider.util.AsymmetricBlockCipher:void initEncrypt(java.security.Key)",
            "org.bouncycastle.pqc.jcajce.provider.util.AsymmetricBlockCipher:void initEncrypt(java.security.Key,java.security.SecureRandom)",
            "org.bouncycastle.pqc.jcajce.provider.util.AsymmetricBlockCipher:void initEncrypt(java.security.Key,java.security.spec.AlgorithmParameterSpec)",
            "org.bouncycastle.pqc.jcajce.provider.util.CipherSpiExt:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)"
        ]
    },
    "org.bouncycastle.pqc.jcajce.provider.util.AsymmetricBlockCipher:void initDecrypt(java.security.Key,java.security.spec.AlgorithmParameterSpec)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.jcajce.provider.util.AsymmetricBlockCipher:void initDecrypt(java.security.Key)",
            "org.bouncycastle.pqc.jcajce.provider.util.CipherSpiExt:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)"
        ]
    },
    "org.bouncycastle.pqc.jcajce.provider.rainbow.SignatureSpi:void engineInitSign(java.security.PrivateKey,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLEntryObject:boolean hasUnsupportedCriticalExtension()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:boolean hasUnsupportedCriticalExtension()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.provider.CertPathValidatorUtilities:boolean isDeltaCRL(java.security.cert.X509CRL)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:java.util.Set getDeltaCRLs(java.util.Date,org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.X509CRL)"
        ]
    },
    "org.bouncycastle.jce.provider.X509CRLEntryObject:boolean hasUnsupportedCriticalExtension()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.provider.X509CRLObject:boolean hasUnsupportedCriticalExtension()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.ocsp.BasicOCSPResp:boolean hasUnsupportedCriticalExtension()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.ocsp.OCSPReq:boolean hasUnsupportedCriticalExtension()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.ocsp.Req:boolean hasUnsupportedCriticalExtension()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.ocsp.RespData:boolean hasUnsupportedCriticalExtension()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.ocsp.SingleResp:boolean hasUnsupportedCriticalExtension()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.asn1.GMSSPrivateKey:org.bouncycastle.asn1.ASN1Primitive encode(int[],byte[][],byte[][],byte[][][],byte[][][],byte[][][],org.bouncycastle.pqc.crypto.gmss.Treehash[][],org.bouncycastle.pqc.crypto.gmss.Treehash[][],java.util.Vector[],java.util.Vector[],java.util.Vector[][],java.util.Vector[][],org.bouncycastle.pqc.crypto.gmss.GMSSLeaf[],org.bouncycastle.pqc.crypto.gmss.GMSSLeaf[],org.bouncycastle.pqc.crypto.gmss.GMSSLeaf[],int[],byte[][],org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc[],byte[][],org.bouncycastle.pqc.crypto.gmss.GMSSRootSig[],org.bouncycastle.pqc.crypto.gmss.GMSSParameters,org.bouncycastle.asn1.x509.AlgorithmIdentifier[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.asn1.GMSSPrivateKey:void <init>(int[],byte[][],byte[][],byte[][][],byte[][][],org.bouncycastle.pqc.crypto.gmss.Treehash[][],org.bouncycastle.pqc.crypto.gmss.Treehash[][],java.util.Vector[],java.util.Vector[],java.util.Vector[][],java.util.Vector[][],byte[][][],org.bouncycastle.pqc.crypto.gmss.GMSSLeaf[],org.bouncycastle.pqc.crypto.gmss.GMSSLeaf[],org.bouncycastle.pqc.crypto.gmss.GMSSLeaf[],int[],byte[][],org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc[],byte[][],org.bouncycastle.pqc.crypto.gmss.GMSSRootSig[],org.bouncycastle.pqc.crypto.gmss.GMSSParameters,org.bouncycastle.asn1.x509.AlgorithmIdentifier)"
        ]
    },
    "org.bouncycastle.x509.X509V2AttributeCertificate:boolean hasUnsupportedCriticalExtension()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.ExtendedPKIXParameters:void setParams(java.security.cert.PKIXParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.ExtendedPKIXBuilderParameters:void setParams(java.security.cert.PKIXParameters)",
            "org.bouncycastle.x509.ExtendedPKIXParameters:org.bouncycastle.x509.ExtendedPKIXParameters getInstance(java.security.cert.PKIXParameters)",
            "org.bouncycastle.x509.ExtendedPKIXParameters:java.lang.Object clone()"
        ]
    },
    "org.bouncycastle.x509.ExtendedPKIXParameters:org.bouncycastle.util.Selector getTargetConstraints()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.PKIXAttrCertPathBuilderSpi:java.security.cert.CertPathBuilderResult engineBuild(java.security.cert.CertPathParameters)",
            "org.bouncycastle.jce.provider.PKIXAttrCertPathValidatorSpi:java.security.cert.CertPathValidatorResult engineValidate(java.security.cert.CertPath,java.security.cert.CertPathParameters)",
            "org.bouncycastle.jce.provider.PKIXCertPathBuilderSpi:java.security.cert.CertPathBuilderResult engineBuild(java.security.cert.CertPathParameters)",
            "org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi:java.security.cert.CertPathValidatorResult engineValidate(java.security.cert.CertPath,java.security.cert.CertPathParameters)",
            "org.bouncycastle.x509.ExtendedPKIXBuilderParameters:java.lang.Object clone()"
        ]
    },
    "org.bouncycastle.x509.ExtendedPKIXParameters:void setTargetConstraints(org.bouncycastle.util.Selector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.RFC3281CertPathUtilities:java.security.cert.CertPath processAttrCert1(org.bouncycastle.x509.X509AttributeCertificate,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.x509.ExtendedPKIXBuilderParameters:void <init>(java.util.Set,org.bouncycastle.util.Selector)"
        ]
    },
    "org.bouncycastle.jce.provider.RFC3281CertPathUtilities:java.security.cert.CertPath processAttrCert1(org.bouncycastle.x509.X509AttributeCertificate,org.bouncycastle.x509.ExtendedPKIXParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.PKIXAttrCertPathValidatorSpi:java.security.cert.CertPathValidatorResult engineValidate(java.security.cert.CertPath,java.security.cert.CertPathParameters)"
        ]
    },
    "org.bouncycastle.jce.provider.PKIXCRLUtil:java.util.Set findCRLs(org.bouncycastle.x509.X509CRLStoreSelector,org.bouncycastle.x509.ExtendedPKIXParameters,java.util.Date)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:java.util.Set getDeltaCRLs(java.util.Date,org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:java.util.Set getCompleteCRLs(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.util.Date,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:java.util.Set[] processCRLA1ii(java.util.Date,org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.X509Certificate,java.security.cert.X509CRL)"
        ]
    },
    "org.bouncycastle.jce.provider.PKIXCRLUtil:java.util.Set findCRLs(org.bouncycastle.x509.X509CRLStoreSelector,java.security.cert.PKIXParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkCRLs(java.security.cert.PKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,java.util.Vector,int)"
        ]
    },
    "org.bouncycastle.x509.CertPathReviewerException:void <init>(org.bouncycastle.i18n.ErrorBundle)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.PKIXCertPathReviewer:void init(java.security.cert.CertPath,java.security.cert.PKIXParameters)",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkPolicy()",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkCRLs(java.security.cert.PKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,java.util.Vector,int)",
            "org.bouncycastle.x509.PKIXCertPathReviewer:java.security.cert.X509CRL getCRL(java.lang.String)",
            "org.bouncycastle.x509.PKIXCertPathReviewer:java.util.Collection getTrustAnchors(java.security.cert.X509Certificate,java.util.Set)"
        ]
    },
    "org.bouncycastle.x509.CertPathReviewerException:void <init>(org.bouncycastle.i18n.ErrorBundle,java.security.cert.CertPath,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkPolicy()"
        ]
    },
    "org.bouncycastle.x509.CertPathReviewerException:void <init>(org.bouncycastle.i18n.ErrorBundle,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkCriticalExtensions()",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkCRLs(java.security.cert.PKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,java.util.Vector,int)"
        ]
    },
    "org.bouncycastle.x509.CertPathReviewerException:void <init>(org.bouncycastle.i18n.ErrorBundle,java.lang.Throwable,java.security.cert.CertPath,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkNameConstraints()",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkPolicy()",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkCriticalExtensions()"
        ]
    },
    "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:java.security.PublicKey processCRLG(java.security.cert.X509CRL,java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void checkCRL(org.bouncycastle.asn1.x509.DistributionPoint,org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,org.bouncycastle.jce.provider.CertStatus,org.bouncycastle.jce.provider.ReasonsMask,java.util.List)",
            "org.bouncycastle.jce.provider.RFC3281CertPathUtilities:void checkCRL(org.bouncycastle.asn1.x509.DistributionPoint,org.bouncycastle.x509.X509AttributeCertificate,org.bouncycastle.x509.ExtendedPKIXParameters,java.util.Date,java.security.cert.X509Certificate,org.bouncycastle.jce.provider.CertStatus,org.bouncycastle.jce.provider.ReasonsMask,java.util.List)"
        ]
    },
    "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:java.security.cert.X509CRL processCRLH(java.util.Set,java.security.PublicKey)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void checkCRL(org.bouncycastle.asn1.x509.DistributionPoint,org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,org.bouncycastle.jce.provider.CertStatus,org.bouncycastle.jce.provider.ReasonsMask,java.util.List)",
            "org.bouncycastle.jce.provider.RFC3281CertPathUtilities:void checkCRL(org.bouncycastle.asn1.x509.DistributionPoint,org.bouncycastle.x509.X509AttributeCertificate,org.bouncycastle.x509.ExtendedPKIXParameters,java.util.Date,java.security.cert.X509Certificate,org.bouncycastle.jce.provider.CertStatus,org.bouncycastle.jce.provider.ReasonsMask,java.util.List)"
        ]
    },
    "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermittedDN(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCertBC(java.security.cert.CertPath,int,org.bouncycastle.jce.provider.PKIXNameConstraintValidator)",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkNameConstraints()"
        ]
    },
    "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcludedDN(org.bouncycastle.asn1.ASN1Sequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCertBC(java.security.cert.CertPath,int,org.bouncycastle.jce.provider.PKIXNameConstraintValidator)",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkNameConstraints()"
        ]
    },
    "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.x509.Extensions:boolean equivalent(org.bouncycastle.asn1.x509.Extensions)",
            "org.bouncycastle.asn1.x509.X509Extensions:boolean equivalent(org.bouncycastle.asn1.x509.X509Extensions)",
            "org.bouncycastle.asn1.x509.X509Name:java.util.Vector getValues(org.bouncycastle.asn1.ASN1ObjectIdentifier)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.jcajce.provider.asymmetric.gost.BCGOST3410PrivateKey:boolean compareObj(java.lang.Object,java.lang.Object)",
            "org.bouncycastle.jce.X509LDAPCertStoreParameters:boolean checkField(java.lang.Object,java.lang.Object)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void addAdditionalStoresFromAltNames(java.security.cert.X509Certificate,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:boolean equals(java.lang.Object,java.lang.Object)",
            "org.bouncycastle.util.Arrays:boolean areEqual(java.lang.Object[],java.lang.Object[])"
        ]
    },
    "org.bouncycastle.asn1.dvcs.DVCSTime:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.cmp.KeyRecRepContent:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.cmp.OOBCertHash:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.cmp.PKIHeader:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.cmp.PKIMessage:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.cmp.RevRepContent:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:void <init>(org.bouncycastle.asn1.ASN1OctetString)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)"
        ]
    },
    "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.cms.RecipientIdentifier getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.KeyTransRecipientInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.cms.SignerIdentifier getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.SignerInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.crmf.EncryptedValue:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.crmf.EncryptedKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.eac.ECDSAPublicKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.sec.ECPrivateKey:void <init>(java.math.BigInteger,org.bouncycastle.asn1.ASN1Encodable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.util.PrivateKeyInfoFactory:org.bouncycastle.asn1.pkcs.PrivateKeyInfo createPrivateKeyInfo(org.bouncycastle.crypto.params.AsymmetricKeyParameter)",
            "org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey:byte[] getEncoded()",
            "org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey:byte[] getEncoded()",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:byte[] getEncoded()"
        ]
    },
    "org.bouncycastle.asn1.sec.ECPrivateKeyStructure:void <init>(java.math.BigInteger,org.bouncycastle.asn1.ASN1Encodable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.JCEECPrivateKey:byte[] getEncoded()"
        ]
    },
    "org.bouncycastle.asn1.x509.IssuingDistributionPoint:void <init>(org.bouncycastle.asn1.x509.DistributionPointName,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.X509V1CertificateGenerator:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.examples.PKCS12Example:void <clinit>()",
            "org.bouncycastle.x509.examples.AttrCertExample:void <clinit>()"
        ]
    },
    "org.bouncycastle.x509.X509V1CertificateGenerator:void reset()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.X509V3CertificateGenerator:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.examples.PKCS12Example:void <clinit>()",
            "org.bouncycastle.x509.examples.AttrCertExample:void <clinit>()"
        ]
    },
    "org.bouncycastle.x509.X509V3CertificateGenerator:void reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.examples.PKCS12Example:java.security.cert.Certificate createIntermediateCert(java.security.PublicKey,java.security.PrivateKey,java.security.cert.X509Certificate)",
            "org.bouncycastle.jce.examples.PKCS12Example:java.security.cert.Certificate createCert(java.security.PublicKey,java.security.PrivateKey,java.security.PublicKey)",
            "org.bouncycastle.x509.examples.AttrCertExample:java.security.cert.X509Certificate createClientCert(java.security.PublicKey,java.security.PrivateKey,java.security.PublicKey)"
        ]
    },
    "org.bouncycastle.asn1.x509.DistributionPointName:org.bouncycastle.asn1.x509.DistributionPointName getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.DistributionPointName:org.bouncycastle.asn1.x509.DistributionPointName getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)"
        ]
    },
    "org.bouncycastle.x509.X509V1CertificateGenerator:java.security.cert.X509Certificate generateX509Certificate(java.security.PrivateKey)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.X509V1CertificateGenerator:java.security.cert.X509Certificate generateX509Certificate(java.security.PrivateKey,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.X509V1CertificateGenerator:java.security.cert.X509Certificate generateX509Certificate(java.security.PrivateKey,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.X509V2AttributeCertificateGenerator:org.bouncycastle.x509.X509AttributeCertificate generateCertificate(java.security.PrivateKey,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.X509V2CRLGenerator:java.security.cert.X509CRL generateX509CRL(java.security.PrivateKey)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.X509V2CRLGenerator:java.security.cert.X509CRL generateX509CRL(java.security.PrivateKey,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.X509V2CRLGenerator:java.security.cert.X509CRL generateX509CRL(java.security.PrivateKey,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.X509V3CertificateGenerator:java.security.cert.X509Certificate generateX509Certificate(java.security.PrivateKey)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.X509V3CertificateGenerator:java.security.cert.X509Certificate generateX509Certificate(java.security.PrivateKey,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.X509V3CertificateGenerator:java.security.cert.X509Certificate generateX509Certificate(java.security.PrivateKey,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.V2TBSCertListGenerator:void addCRLEntry(org.bouncycastle.asn1.ASN1Integer,org.bouncycastle.asn1.ASN1UTCTime,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.X509V2CRLGenerator:void addCRLEntry(java.math.BigInteger,java.util.Date,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.BERFactory:org.bouncycastle.asn1.BERSet createSet(org.bouncycastle.asn1.ASN1EncodableVector)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.icao.CscaMasterList:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Object:int hashCode()",
            "org.bouncycastle.asn1.ASN1Object:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Object:org.bouncycastle.asn1.ASN1Primitive toASN1Object()",
            "org.bouncycastle.asn1.ASN1OctetString:org.bouncycastle.asn1.ASN1OctetString getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1OutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1Primitive:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1Sequence getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Sequence:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1Set:org.bouncycastle.asn1.ASN1Set getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ASN1Set:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1StreamParser:org.bouncycastle.asn1.ASN1EncodableVector readVector()",
            "org.bouncycastle.asn1.ASN1TaggedObject:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.ASN1TaggedObject:boolean asn1Equals(org.bouncycastle.asn1.ASN1Primitive)",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Primitive getObject()",
            "org.bouncycastle.asn1.BERConstructedOctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BEROctetString:int encodedLength()",
            "org.bouncycastle.asn1.BEROutputStream:void writeObject(java.lang.Object)",
            "org.bouncycastle.asn1.BERSequence:int encodedLength()",
            "org.bouncycastle.asn1.BERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.BERSet:int encodedLength()",
            "org.bouncycastle.asn1.BERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.BERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERApplicationSpecific:void <init>(boolean,int,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERApplicationSpecific:org.bouncycastle.asn1.DERApplicationSpecific getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DERBitString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERExternal:org.bouncycastle.asn1.ASN1Primitive getObjFromVector(org.bouncycastle.asn1.ASN1EncodableVector,int)",
            "org.bouncycastle.asn1.DERObjectIdentifier:org.bouncycastle.asn1.ASN1ObjectIdentifier getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.DEROctetString:void <init>(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DEROutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DERSequenceGenerator:void addObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DERSet:int getBodyLength()",
            "org.bouncycastle.asn1.DERTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DERTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DERTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.DLOutputStream:void writeObject(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.DLSequence:int getBodyLength()",
            "org.bouncycastle.asn1.DLSet:int getBodyLength()",
            "org.bouncycastle.asn1.DLTaggedObject:boolean isConstructed()",
            "org.bouncycastle.asn1.DLTaggedObject:int encodedLength()",
            "org.bouncycastle.asn1.DLTaggedObject:void encode(org.bouncycastle.asn1.ASN1OutputStream)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedData:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.AuthEnvelopedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.x509.AlgorithmIdentifier getDigestAlgorithm()",
            "org.bouncycastle.asn1.cms.AuthenticatedDataParser:org.bouncycastle.asn1.ASN1OctetString getMac()",
            "org.bouncycastle.asn1.cms.CompressedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.EncryptedContentInfoParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.OriginatorIdentifierOrKey:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.RecipientInfo:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.SignerIdentifier:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:void <init>(org.bouncycastle.asn1.ASN1SequenceParser)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.Evidence getTemporalEvidence()",
            "org.bouncycastle.asn1.esf.OtherRevRefs:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.OtherRevVals:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ContentHints:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.ESSCertIDv2:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ess.OtherCertID:org.bouncycastle.asn1.x509.AlgorithmIdentifier getAlgorithmHash()",
            "org.bouncycastle.asn1.ess.OtherCertID:byte[] getCertHash()",
            "org.bouncycastle.asn1.pkcs.PBES2Parameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.PrivateKeyInfo:org.bouncycastle.asn1.ASN1Primitive getPrivateKey()",
            "org.bouncycastle.asn1.util.ASN1Dump:void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)",
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.util.DERDump:java.lang.String dumpAsString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x500.DirectoryString:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.style.IETFUtils:java.lang.String valueToString(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.AttCertIssuer:void <init>(org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.asn1.x509.ExtendedKeyUsage:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.UserNotice:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509ExtensionsGenerator:void addExtension(org.bouncycastle.asn1.ASN1ObjectIdentifier,boolean,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.asn1.x509.X509Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.X509Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x509.qualified.Iso4217CurrencyCode:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x509.qualified.TypeOfBiometricData:org.bouncycastle.asn1.ASN1Primitive toASN1Primitive()",
            "org.bouncycastle.asn1.x9.DHDomainParameters:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x9.X9FieldID:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.crypto.util.PrivateKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.crypto.util.PublicKeyFactory:org.bouncycastle.crypto.params.AsymmetricKeyParameter createKey(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)",
            "org.bouncycastle.jcajce.JcaJceUtils:void loadParameters(java.security.AlgorithmParameters,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey:boolean isNotNull(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey:void populateFromPrivKeyInfo(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.jcajce.provider.asymmetric.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:void <init>(java.io.InputStream,java.lang.String)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.PKIXCertPath:byte[] toDEREncoded(org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi:void engineLoad(java.io.InputStream,char[])",
            "org.bouncycastle.jce.PKCS10CertificationRequest:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCRLIssuersFromDistributionPoint(org.bouncycastle.asn1.x509.DistributionPoint,java.util.Collection,java.security.cert.X509CRLSelector,org.bouncycastle.x509.ExtendedPKIXParameters)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:java.util.Set intersectDN(java.util.Set,java.util.Set)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkPermitted(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void checkExcluded(org.bouncycastle.asn1.x509.GeneralName)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:void addExcludedSubtree(org.bouncycastle.asn1.x509.GeneralSubtree)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB2(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCRLB1(org.bouncycastle.asn1.x509.DistributionPoint,java.lang.Object,java.security.cert.X509CRL)",
            "org.bouncycastle.jce.provider.X509CRLObject:void <init>(org.bouncycastle.asn1.x509.CertificateList)",
            "org.bouncycastle.jce.provider.X509CertificateObject:byte[] getSigAlgParams()",
            "org.bouncycastle.jce.provider.X509SignatureUtil:void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)",
            "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyFactorySpi:java.security.PrivateKey generatePrivate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)",
            "org.bouncycastle.pqc.jcajce.provider.util.KeyUtil:byte[] getEncodedPrivateKeyInfo(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.AttributeCertificateHolder:boolean matchesDN(org.bouncycastle.jce.X509Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.AttributeCertificateHolder:java.lang.Object[] getNames(org.bouncycastle.asn1.x509.GeneralName[])",
            "org.bouncycastle.x509.AttributeCertificateIssuer:java.lang.Object[] getNames()",
            "org.bouncycastle.x509.AttributeCertificateIssuer:boolean matchesDN(javax.security.auth.x500.X500Principal,org.bouncycastle.asn1.x509.GeneralNames)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.X509Util:byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.x509.X509Attribute:void <init>(java.lang.String,org.bouncycastle.asn1.ASN1EncodableVector)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.DERFactory:org.bouncycastle.asn1.ASN1Set createSet(org.bouncycastle.asn1.ASN1EncodableVector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1InputStream:org.bouncycastle.asn1.ASN1Primitive buildObject(int,int,int)"
        ]
    },
    "org.bouncycastle.asn1.cms.Attributes:void <init>(org.bouncycastle.asn1.ASN1EncodableVector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cms.AttributeTable:org.bouncycastle.asn1.cms.Attributes toASN1Structure()"
        ]
    },
    "org.bouncycastle.asn1.x500.RDN:void <init>(org.bouncycastle.asn1.x500.AttributeTypeAndValue[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x500.X500NameBuilder:org.bouncycastle.asn1.x500.X500NameBuilder addMultiValuedRDN(org.bouncycastle.asn1.x500.AttributeTypeAndValue[])"
        ]
    },
    "org.bouncycastle.x509.X509CertPairStoreSelector:boolean match(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi:java.security.cert.CertPathValidatorResult engineValidate(java.security.cert.CertPath,java.security.cert.CertPathParameters)",
            "org.bouncycastle.util.CollectionStore:java.util.Collection getMatches(org.bouncycastle.util.Selector)",
            "org.bouncycastle.x509.util.LDAPStoreHelper:java.util.Set createCrossCertificatePairs(java.util.List,org.bouncycastle.x509.X509CertPairStoreSelector)"
        ]
    },
    "org.bouncycastle.x509.X509CertificatePair:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.X509Name:int hashCode()",
            "org.bouncycastle.jce.X509LDAPCertStoreParameters:int addHashCode(int,java.lang.Object)",
            "org.bouncycastle.jce.provider.PKIXNameConstraintValidator:int hashCollection(java.util.Collection)",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Matrix:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2Vector:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2mVector:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nONBElement:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomial:int hashCode()",
            "org.bouncycastle.pqc.math.linearalgebra.Permutation:int hashCode()",
            "org.bouncycastle.util.Arrays:int hashCode(java.lang.Object[])"
        ]
    },
    "org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi:java.security.Key engineGetKey(java.lang.String,char[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x500.style.BCStyle:org.bouncycastle.asn1.x500.RDN[] fromString(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x500.X500Name:void <init>(org.bouncycastle.asn1.x500.X500NameStyle,java.lang.String)"
        ]
    },
    "org.bouncycastle.asn1.x500.style.RFC4519Style:org.bouncycastle.asn1.x500.RDN[] fromString(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x500.X500Name:void <init>(org.bouncycastle.asn1.x500.X500NameStyle,java.lang.String)"
        ]
    },
    "org.bouncycastle.asn1.x500.X500Name:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.DistributionPointName:java.lang.String toString()",
            "org.bouncycastle.asn1.x509.GeneralName:java.lang.String toString()",
            "org.bouncycastle.asn1.x509.RoleSyntax:java.lang.String[] getRoleAuthorityAsString()",
            "org.bouncycastle.asn1.x509.X509Name:java.lang.String toString(boolean,java.util.Hashtable)",
            "org.bouncycastle.i18n.LocalizedMessage$FilteredArguments:java.lang.Object filter(int,java.lang.Object)",
            "org.bouncycastle.i18n.filter.TrustedInput:java.lang.String toString()",
            "org.bouncycastle.i18n.filter.UntrustedInput:java.lang.String getString()",
            "org.bouncycastle.i18n.filter.UntrustedInput:java.lang.String toString()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.CertPath engineGenerateCertPath(java.util.List)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:java.util.Collection getAlternativeNames(byte[])",
            "org.bouncycastle.jce.provider.X509CertificateObject:java.util.Collection getAlternativeNames(byte[])",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.x500.style.BCStrictStyle:boolean areEqual(org.bouncycastle.asn1.x500.X500Name,org.bouncycastle.asn1.x500.X500Name)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x500.style.BCStyle:boolean foundMatch(boolean,org.bouncycastle.asn1.x500.RDN,org.bouncycastle.asn1.x500.RDN[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x500.style.BCStyle:boolean areEqual(org.bouncycastle.asn1.x500.X500Name,org.bouncycastle.asn1.x500.X500Name)"
        ]
    },
    "org.bouncycastle.asn1.x500.style.RFC4519Style:boolean foundMatch(boolean,org.bouncycastle.asn1.x500.RDN,org.bouncycastle.asn1.x500.RDN[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x500.style.RFC4519Style:boolean areEqual(org.bouncycastle.asn1.x500.X500Name,org.bouncycastle.asn1.x500.X500Name)"
        ]
    },
    "org.bouncycastle.crypto.prng.drbg.DualECSP800DRBG:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.prng.SP800SecureRandomBuilder$ConfigurableDualECDRBGProvider:org.bouncycastle.crypto.prng.drbg.SP80090DRBG get(org.bouncycastle.crypto.prng.EntropySource)",
            "org.bouncycastle.crypto.prng.SP800SecureRandomBuilder$DualECDRBGProvider:org.bouncycastle.crypto.prng.drbg.SP80090DRBG get(org.bouncycastle.crypto.prng.EntropySource)",
            "org.bouncycastle.crypto.prng.drbg.DualECSP800DRBG:void <init>(org.bouncycastle.crypto.Digest,int,org.bouncycastle.crypto.prng.EntropySource,byte[],byte[])",
            "org.bouncycastle.crypto.prng.drbg.DualECSP800DRBG:void <clinit>()"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsECCUtils:org.bouncycastle.crypto.params.ECDomainParameters getParametersForNamedCurve(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsECCUtils:org.bouncycastle.crypto.params.ECDomainParameters readECParameters(int[],short[],java.io.InputStream)",
            "org.bouncycastle.crypto.tls.TlsECDHEKeyExchange:byte[] generateServerKeyExchange()"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC:void initialize(int,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC:java.security.KeyPair generateKeyPair()"
        ]
    },
    "org.bouncycastle.asn1.crmf.ProofOfPossession:org.bouncycastle.asn1.crmf.ProofOfPossession getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.crmf.CertReqMsg:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.asn1.ocsp.CertStatus:org.bouncycastle.asn1.ocsp.CertStatus getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.dvcs.CertEtcToken:void <init>(org.bouncycastle.asn1.ASN1TaggedObject)",
            "org.bouncycastle.asn1.ocsp.CertStatus:org.bouncycastle.asn1.ocsp.CertStatus getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.ocsp.SingleResponse:void <init>(org.bouncycastle.asn1.ASN1Sequence)"
        ]
    },
    "org.bouncycastle.jce.provider.RFC3281CertPathUtilities:void additionalChecks(org.bouncycastle.x509.X509AttributeCertificate,org.bouncycastle.x509.ExtendedPKIXParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.PKIXAttrCertPathValidatorSpi:java.security.cert.CertPathValidatorResult engineValidate(java.security.cert.CertPath,java.security.cert.CertPathParameters)"
        ]
    },
    "org.bouncycastle.asn1.dvcs.TargetEtcChain:org.bouncycastle.asn1.dvcs.CertEtcToken[] getChain()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x509.CRLDistPoint:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.util.ASN1Dump:java.lang.String dumpAsString(java.lang.Object,boolean)",
            "org.bouncycastle.asn1.x509.DistributionPointName:java.lang.String toString()",
            "org.bouncycastle.asn1.x509.GeneralName:java.lang.String toString()",
            "org.bouncycastle.asn1.x509.RoleSyntax:java.lang.String[] getRoleAuthorityAsString()",
            "org.bouncycastle.asn1.x509.X509Name:java.lang.String toString(boolean,java.util.Hashtable)",
            "org.bouncycastle.i18n.LocalizedMessage$FilteredArguments:java.lang.Object filter(int,java.lang.Object)",
            "org.bouncycastle.i18n.filter.TrustedInput:java.lang.String toString()",
            "org.bouncycastle.i18n.filter.UntrustedInput:java.lang.String getString()",
            "org.bouncycastle.i18n.filter.UntrustedInput:java.lang.String toString()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.CertificateFactory:java.security.cert.CertPath engineGenerateCertPath(java.util.List)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsUtils:void validateKeyUsage(org.bouncycastle.asn1.x509.Certificate,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsDHKeyExchange:void processServerCertificate(org.bouncycastle.crypto.tls.Certificate)",
            "org.bouncycastle.crypto.tls.TlsECDHKeyExchange:void processServerCertificate(org.bouncycastle.crypto.tls.Certificate)",
            "org.bouncycastle.crypto.tls.TlsPSKKeyExchange:void processServerCertificate(org.bouncycastle.crypto.tls.Certificate)",
            "org.bouncycastle.crypto.tls.TlsRSAKeyExchange:void processServerCertificate(org.bouncycastle.crypto.tls.Certificate)",
            "org.bouncycastle.crypto.tls.TlsSRPKeyExchange:void processServerCertificate(org.bouncycastle.crypto.tls.Certificate)",
            "org.bouncycastle.crypto.tls.TlsUtils:short getClientCertificateType(org.bouncycastle.crypto.tls.Certificate,org.bouncycastle.crypto.tls.Certificate)"
        ]
    },
    "org.bouncycastle.asn1.ocsp.ResponseBytes:org.bouncycastle.asn1.ocsp.ResponseBytes getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ocsp.ResponseBytes:org.bouncycastle.asn1.ocsp.ResponseBytes getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)"
        ]
    },
    "org.bouncycastle.asn1.pkcs.Attribute:org.bouncycastle.asn1.pkcs.Attribute getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.smime.SMIMECapability:org.bouncycastle.asn1.smime.SMIMECapability getInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.smime.SMIMECapabilities:java.util.Vector getCapabilities(org.bouncycastle.asn1.ASN1ObjectIdentifier)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLEntryObject:java.util.Date getRevocationDate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLEntryObject:java.lang.String toString()",
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCertStatus(java.util.Date,java.security.cert.X509CRL,java.lang.Object,org.bouncycastle.jce.provider.CertStatus)",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkCRLs(java.security.cert.PKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,java.util.Vector,int)"
        ]
    },
    "org.bouncycastle.jce.provider.X509CRLEntryObject:java.util.Date getRevocationDate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.CertPathValidatorUtilities:void getCertStatus(java.util.Date,java.security.cert.X509CRL,java.lang.Object,org.bouncycastle.jce.provider.CertStatus)",
            "org.bouncycastle.jce.provider.X509CRLEntryObject:java.lang.String toString()",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkCRLs(java.security.cert.PKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,java.util.Vector,int)"
        ]
    },
    "org.bouncycastle.asn1.ASN1Sequence:org.bouncycastle.asn1.ASN1SequenceParser parser()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.ASN1Sequence$1:org.bouncycastle.asn1.ASN1Encodable readObject()",
            "org.bouncycastle.asn1.ASN1Set$1:org.bouncycastle.asn1.ASN1Encodable readObject()",
            "org.bouncycastle.asn1.ASN1TaggedObject:org.bouncycastle.asn1.ASN1Encodable getObjectParser(int,boolean)",
            "org.bouncycastle.asn1.cms.SignedDataParser:org.bouncycastle.asn1.cms.SignedDataParser getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.cms.TimeStampedDataParser:org.bouncycastle.asn1.cms.TimeStampedDataParser getInstance(java.lang.Object)"
        ]
    },
    "org.bouncycastle.asn1.x500.style.BCStrictStyle:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x500.style.BCStrictStyle:void <clinit>()"
        ]
    },
    "org.bouncycastle.asn1.x500.X500Name:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.cmp.PKIHeader:void <clinit>()",
            "org.bouncycastle.asn1.cms.IssuerAndSerialNumber:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.cms.IssuerAndSerialNumber:void <init>(org.bouncycastle.asn1.x509.X509Name,java.math.BigInteger)",
            "org.bouncycastle.asn1.cms.IssuerAndSerialNumber:void <init>(org.bouncycastle.asn1.x509.X509Name,org.bouncycastle.asn1.ASN1Integer)",
            "org.bouncycastle.asn1.crmf.CertTemplate:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.esf.CrlIdentifier:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.ocsp.ResponderID:org.bouncycastle.asn1.ocsp.ResponderID getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.ocsp.ResponderID:org.bouncycastle.asn1.x500.X500Name getName()",
            "org.bouncycastle.asn1.pkcs.CertificationRequestInfo:void <init>(org.bouncycastle.asn1.x509.X509Name,org.bouncycastle.asn1.x509.SubjectPublicKeyInfo,org.bouncycastle.asn1.ASN1Set)",
            "org.bouncycastle.asn1.pkcs.CertificationRequestInfo:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.IssuerAndSerialNumber:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.pkcs.IssuerAndSerialNumber:void <init>(org.bouncycastle.asn1.x509.X509Name,java.math.BigInteger)",
            "org.bouncycastle.asn1.pkcs.IssuerAndSerialNumber:void <init>(org.bouncycastle.asn1.x509.X509Name,org.bouncycastle.asn1.ASN1Integer)",
            "org.bouncycastle.asn1.x500.X500Name:org.bouncycastle.asn1.x500.X500Name getInstance(org.bouncycastle.asn1.ASN1TaggedObject,boolean)",
            "org.bouncycastle.asn1.x500.X500Name:org.bouncycastle.asn1.x500.X500Name getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x500.X500Name:org.bouncycastle.asn1.x500.X500Name getInstance(org.bouncycastle.asn1.x500.X500NameStyle,java.lang.Object)",
            "org.bouncycastle.asn1.x500.X500Name:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x500.X500Name:void <init>(org.bouncycastle.asn1.x500.RDN[])",
            "org.bouncycastle.asn1.x500.X500Name:void <init>(java.lang.String)",
            "org.bouncycastle.asn1.x500.X500Name:boolean equals(java.lang.Object)",
            "org.bouncycastle.asn1.x500.X500Name:void setDefaultStyle(org.bouncycastle.asn1.x500.X500NameStyle)",
            "org.bouncycastle.asn1.x500.X500Name:org.bouncycastle.asn1.x500.X500NameStyle getDefaultStyle()",
            "org.bouncycastle.asn1.x500.X500Name:void <clinit>()",
            "org.bouncycastle.asn1.x500.X500NameBuilder:org.bouncycastle.asn1.x500.X500Name build()",
            "org.bouncycastle.asn1.x509.GeneralName:void <init>(org.bouncycastle.asn1.x509.X509Name)",
            "org.bouncycastle.asn1.x509.GeneralName:void <init>(int,java.lang.String)",
            "org.bouncycastle.asn1.x509.GeneralName:org.bouncycastle.asn1.x509.GeneralName getInstance(java.lang.Object)",
            "org.bouncycastle.asn1.x509.GeneralName:java.lang.String toString()",
            "org.bouncycastle.asn1.x509.TBSCertList:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.TBSCertificate:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.TBSCertificateStructure:void <init>(org.bouncycastle.asn1.ASN1Sequence)",
            "org.bouncycastle.asn1.x509.V1TBSCertificateGenerator:void setIssuer(org.bouncycastle.asn1.x509.X509Name)",
            "org.bouncycastle.asn1.x509.V1TBSCertificateGenerator:void setSubject(org.bouncycastle.asn1.x509.X509Name)",
            "org.bouncycastle.asn1.x509.V2TBSCertListGenerator:void setIssuer(org.bouncycastle.asn1.x509.X509Name)",
            "org.bouncycastle.asn1.x509.V3TBSCertificateGenerator:void setIssuer(org.bouncycastle.asn1.x509.X509Name)",
            "org.bouncycastle.asn1.x509.V3TBSCertificateGenerator:void setSubject(org.bouncycastle.asn1.x509.X509Name)",
            "org.bouncycastle.crypto.tls.CertificateRequest:org.bouncycastle.crypto.tls.CertificateRequest parse(org.bouncycastle.crypto.tls.TlsContext,java.io.InputStream)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLEntryObject:org.bouncycastle.asn1.x500.X500Name loadCertificateIssuer(boolean,org.bouncycastle.asn1.x500.X500Name)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:java.security.Principal getIssuerDN()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:java.util.Set loadCRLEntries()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:java.security.cert.X509CRLEntry getRevokedCertificate(java.math.BigInteger)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLObject:boolean isRevoked(java.security.cert.Certificate)",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:java.security.Principal getIssuerDN()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:java.security.Principal getSubjectDN()",
            "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject:java.util.Collection getAlternativeNames(byte[])",
            "org.bouncycastle.jce.provider.X509CRLEntryObject:org.bouncycastle.asn1.x500.X500Name loadCertificateIssuer(boolean,org.bouncycastle.asn1.x500.X500Name)",
            "org.bouncycastle.jce.provider.X509CRLObject:java.security.Principal getIssuerDN()",
            "org.bouncycastle.jce.provider.X509CRLObject:java.util.Set loadCRLEntries()",
            "org.bouncycastle.jce.provider.X509CRLObject:java.security.cert.X509CRLEntry getRevokedCertificate(java.math.BigInteger)",
            "org.bouncycastle.jce.provider.X509CRLObject:boolean isRevoked(java.security.cert.Certificate)",
            "org.bouncycastle.jce.provider.X509CertificateObject:java.security.Principal getIssuerDN()",
            "org.bouncycastle.jce.provider.X509CertificateObject:java.security.Principal getSubjectDN()",
            "org.bouncycastle.jce.provider.X509CertificateObject:java.util.Collection getAlternativeNames(byte[])",
            "org.bouncycastle.ocsp.RespID:void <init>(javax.security.auth.x500.X500Principal)",
            "org.bouncycastle.x509.extension.X509ExtensionUtil:java.util.Collection getAlternativeNames(byte[])"
        ]
    },
    "org.bouncycastle.asn1.x500.X500NameBuilder:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x500.style.BCStyle:java.lang.String oidToDisplayName(org.bouncycastle.asn1.ASN1ObjectIdentifier)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x500.style.RFC4519Style:java.lang.String oidToDisplayName(org.bouncycastle.asn1.ASN1ObjectIdentifier)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jce.X509Principal:void <init>(java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.digests.SkeinDigest:void <init>(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.digest.Skein$DigestSkein1024:void <init>(int)",
            "org.bouncycastle.jcajce.provider.digest.Skein$DigestSkein256:void <init>(int)",
            "org.bouncycastle.jcajce.provider.digest.Skein$DigestSkein512:void <init>(int)",
            "org.bouncycastle.jcajce.provider.digest.Skein$HashMac_1024_1024:void <init>()",
            "org.bouncycastle.jcajce.provider.digest.Skein$HashMac_1024_384:void <init>()",
            "org.bouncycastle.jcajce.provider.digest.Skein$HashMac_1024_512:void <init>()",
            "org.bouncycastle.jcajce.provider.digest.Skein$HashMac_256_128:void <init>()",
            "org.bouncycastle.jcajce.provider.digest.Skein$HashMac_256_160:void <init>()",
            "org.bouncycastle.jcajce.provider.digest.Skein$HashMac_256_224:void <init>()",
            "org.bouncycastle.jcajce.provider.digest.Skein$HashMac_256_256:void <init>()",
            "org.bouncycastle.jcajce.provider.digest.Skein$HashMac_512_128:void <init>()",
            "org.bouncycastle.jcajce.provider.digest.Skein$HashMac_512_160:void <init>()",
            "org.bouncycastle.jcajce.provider.digest.Skein$HashMac_512_224:void <init>()",
            "org.bouncycastle.jcajce.provider.digest.Skein$HashMac_512_256:void <init>()",
            "org.bouncycastle.jcajce.provider.digest.Skein$HashMac_512_384:void <init>()",
            "org.bouncycastle.jcajce.provider.digest.Skein$HashMac_512_512:void <init>()"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsDSASigner:org.bouncycastle.crypto.Signer makeSigner(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,boolean,boolean,org.bouncycastle.crypto.CipherParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.TlsDSASigner:byte[] generateRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])",
            "org.bouncycastle.crypto.tls.TlsDSASigner:boolean verifyRawSignature(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,byte[],org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])",
            "org.bouncycastle.crypto.tls.TlsDSASigner:org.bouncycastle.crypto.Signer createSigner(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.params.AsymmetricKeyParameter)",
            "org.bouncycastle.crypto.tls.TlsDSASigner:org.bouncycastle.crypto.Signer createVerifyer(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.params.AsymmetricKeyParameter)"
        ]
    },
    "org.bouncycastle.jcajce.provider.asymmetric.rsa.ISOSignatureSpi:void engineInitVerify(java.security.PublicKey)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.rsa.ISOSignatureSpi:void engineInitSign(java.security.PrivateKey)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.rsa.PSSSignatureSpi:void engineInitVerify(java.security.PublicKey)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.rsa.PSSSignatureSpi:void engineInitSign(java.security.PrivateKey,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.asymmetric.rsa.PSSSignatureSpi:void engineInitSign(java.security.PrivateKey)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.jcajce.provider.util.AsymmetricHybridCipher:void initEncrypt(java.security.Key)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.jcajce.provider.util.AsymmetricHybridCipher:void initEncrypt(java.security.Key,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.jcajce.provider.util.AsymmetricHybridCipher:void initEncrypt(java.security.Key,java.security.spec.AlgorithmParameterSpec)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.jcajce.provider.util.CipherSpiExt:void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.jcajce.provider.util.CipherSpiExt:void engineInit(int,java.security.Key,java.security.SecureRandom)",
            "org.bouncycastle.pqc.jcajce.provider.util.CipherSpiExt:void engineInit(int,java.security.Key,java.security.AlgorithmParameters,java.security.SecureRandom)"
        ]
    },
    "org.bouncycastle.pqc.jcajce.provider.util.AsymmetricHybridCipher:void initDecrypt(java.security.Key)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.jcajce.provider.util.AsymmetricBlockCipher:void initEncrypt(java.security.Key)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.jcajce.provider.util.AsymmetricBlockCipher:void initEncrypt(java.security.Key,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.jcajce.provider.util.AsymmetricBlockCipher:void initEncrypt(java.security.Key,java.security.spec.AlgorithmParameterSpec)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.jcajce.provider.util.AsymmetricBlockCipher:void initDecrypt(java.security.Key)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.pqc.asn1.GMSSPrivateKey:void <init>(int[],byte[][],byte[][],byte[][][],byte[][][],org.bouncycastle.pqc.crypto.gmss.Treehash[][],org.bouncycastle.pqc.crypto.gmss.Treehash[][],java.util.Vector[],java.util.Vector[],java.util.Vector[][],java.util.Vector[][],byte[][][],org.bouncycastle.pqc.crypto.gmss.GMSSLeaf[],org.bouncycastle.pqc.crypto.gmss.GMSSLeaf[],org.bouncycastle.pqc.crypto.gmss.GMSSLeaf[],int[],byte[][],org.bouncycastle.pqc.crypto.gmss.GMSSRootCalc[],byte[][],org.bouncycastle.pqc.crypto.gmss.GMSSRootSig[],org.bouncycastle.pqc.crypto.gmss.GMSSParameters,org.bouncycastle.asn1.x509.AlgorithmIdentifier)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.ExtendedPKIXBuilderParameters:void setParams(java.security.cert.PKIXParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.ExtendedPKIXBuilderParameters:java.lang.Object clone()",
            "org.bouncycastle.x509.ExtendedPKIXBuilderParameters:org.bouncycastle.x509.ExtendedPKIXParameters getInstance(java.security.cert.PKIXParameters)",
            "org.bouncycastle.x509.ExtendedPKIXParameters:org.bouncycastle.x509.ExtendedPKIXParameters getInstance(java.security.cert.PKIXParameters)",
            "org.bouncycastle.x509.ExtendedPKIXParameters:java.lang.Object clone()"
        ]
    },
    "org.bouncycastle.x509.ExtendedPKIXParameters:org.bouncycastle.x509.ExtendedPKIXParameters getInstance(java.security.cert.PKIXParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi:java.security.cert.CertPathValidatorResult engineValidate(java.security.cert.CertPath,java.security.cert.CertPathParameters)"
        ]
    },
    "org.bouncycastle.x509.ExtendedPKIXParameters:java.lang.Object clone()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:byte[] engineGetIV()",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:java.util.Set processCRLF(java.security.cert.X509CRL,java.lang.Object,java.security.cert.X509Certificate,java.security.PublicKey,org.bouncycastle.x509.ExtendedPKIXParameters,java.util.List)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void checkCRLs(org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,java.util.List)",
            "org.bouncycastle.jce.provider.RFC3281CertPathUtilities:void checkCRLs(org.bouncycastle.x509.X509AttributeCertificate,org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.util.List)",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void init(java.security.cert.CertPath,java.security.cert.PKIXParameters)"
        ]
    },
    "org.bouncycastle.x509.ExtendedPKIXBuilderParameters:java.lang.Object clone()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.symmetric.util.BaseWrapCipher:byte[] engineGetIV()",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:java.util.Set processCRLF(java.security.cert.X509CRL,java.lang.Object,java.security.cert.X509Certificate,java.security.PublicKey,org.bouncycastle.x509.ExtendedPKIXParameters,java.util.List)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void checkCRLs(org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,java.util.List)",
            "org.bouncycastle.jce.provider.RFC3281CertPathUtilities:void checkCRLs(org.bouncycastle.x509.X509AttributeCertificate,org.bouncycastle.x509.ExtendedPKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.util.List)",
            "org.bouncycastle.x509.PKIXCertPathReviewer:void init(java.security.cert.CertPath,java.security.cert.PKIXParameters)"
        ]
    },
    "org.bouncycastle.x509.ExtendedPKIXBuilderParameters:void <init>(java.util.Set,org.bouncycastle.util.Selector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.ExtendedPKIXBuilderParameters:java.lang.Object clone()",
            "org.bouncycastle.x509.ExtendedPKIXBuilderParameters:org.bouncycastle.x509.ExtendedPKIXParameters getInstance(java.security.cert.PKIXParameters)"
        ]
    },
    "org.bouncycastle.x509.PKIXCertPathReviewer:void init(java.security.cert.CertPath,java.security.cert.PKIXParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.PKIXCertPathReviewer:void <init>(java.security.cert.CertPath,java.security.cert.PKIXParameters)"
        ]
    },
    "org.bouncycastle.x509.PKIXCertPathReviewer:java.security.cert.X509CRL getCRL(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.PKIXCertPathReviewer:void checkCRLs(java.security.cert.PKIXParameters,java.security.cert.X509Certificate,java.util.Date,java.security.cert.X509Certificate,java.security.PublicKey,java.util.Vector,int)"
        ]
    },
    "org.bouncycastle.jce.examples.PKCS12Example:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.examples.PKCS12Example:java.security.cert.Certificate createMasterCert(java.security.PublicKey,java.security.PrivateKey)",
            "org.bouncycastle.jce.examples.PKCS12Example:java.security.cert.Certificate createIntermediateCert(java.security.PublicKey,java.security.PrivateKey,java.security.cert.X509Certificate)",
            "org.bouncycastle.jce.examples.PKCS12Example:java.security.cert.Certificate createCert(java.security.PublicKey,java.security.PrivateKey,java.security.PublicKey)",
            "org.bouncycastle.jce.examples.PKCS12Example:void main(java.lang.String[])",
            "org.bouncycastle.jce.examples.PKCS12Example:void <clinit>()"
        ]
    },
    "org.bouncycastle.x509.examples.AttrCertExample:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.x509.examples.AttrCertExample:java.security.cert.X509Certificate createAcIssuerCert(java.security.PublicKey,java.security.PrivateKey)",
            "org.bouncycastle.x509.examples.AttrCertExample:java.security.cert.X509Certificate createClientCert(java.security.PublicKey,java.security.PrivateKey,java.security.PublicKey)",
            "org.bouncycastle.x509.examples.AttrCertExample:void main(java.lang.String[])",
            "org.bouncycastle.x509.examples.AttrCertExample:void <clinit>()"
        ]
    },
    "org.bouncycastle.asn1.x500.X500NameBuilder:org.bouncycastle.asn1.x500.X500NameBuilder addMultiValuedRDN(org.bouncycastle.asn1.x500.AttributeTypeAndValue[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x500.X500NameBuilder:org.bouncycastle.asn1.x500.X500NameBuilder addMultiValuedRDN(org.bouncycastle.asn1.ASN1ObjectIdentifier[],org.bouncycastle.asn1.ASN1Encodable[])"
        ]
    },
    "org.bouncycastle.asn1.x500.X500Name:void <init>(org.bouncycastle.asn1.x500.X500NameStyle,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x500.X500Name:void <init>(java.lang.String)"
        ]
    },
    "org.bouncycastle.asn1.ASN1Set$1:org.bouncycastle.asn1.ASN1Encodable readObject()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x500.X500Name:void <init>(org.bouncycastle.asn1.x500.RDN[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x500.X500Name:void <init>(org.bouncycastle.asn1.x500.X500NameStyle,java.lang.String)"
        ]
    },
    "org.bouncycastle.asn1.x500.X500Name:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.GeneralName:void <init>(int,java.lang.String)"
        ]
    },
    "org.bouncycastle.asn1.x500.X500Name:void setDefaultStyle(org.bouncycastle.asn1.x500.X500NameStyle)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x500.X500Name:org.bouncycastle.asn1.x500.X500NameStyle getDefaultStyle()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x500.X500NameBuilder:org.bouncycastle.asn1.x500.X500Name build()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x500.style.IETFUtils:org.bouncycastle.asn1.x500.RDN[] rDNsFromString(java.lang.String,org.bouncycastle.asn1.x500.X500NameStyle)"
        ]
    },
    "org.bouncycastle.asn1.x509.GeneralName:void <init>(int,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x509.RoleSyntax:void <init>(java.lang.String)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:void processCertBC(java.security.cert.CertPath,int,org.bouncycastle.jce.provider.PKIXNameConstraintValidator)",
            "org.bouncycastle.x509.examples.AttrCertExample:void main(java.lang.String[])"
        ]
    },
    "org.bouncycastle.jcajce.provider.digest.Skein$DigestSkein1024:void <init>(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.digest.Skein$Digest_1024_1024:void <init>()",
            "org.bouncycastle.jcajce.provider.digest.Skein$Digest_1024_384:void <init>()",
            "org.bouncycastle.jcajce.provider.digest.Skein$Digest_1024_512:void <init>()"
        ]
    },
    "org.bouncycastle.jcajce.provider.digest.Skein$DigestSkein256:void <init>(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.digest.Skein$Digest_256_128:void <init>()",
            "org.bouncycastle.jcajce.provider.digest.Skein$Digest_256_160:void <init>()",
            "org.bouncycastle.jcajce.provider.digest.Skein$Digest_256_224:void <init>()",
            "org.bouncycastle.jcajce.provider.digest.Skein$Digest_256_256:void <init>()"
        ]
    },
    "org.bouncycastle.jcajce.provider.digest.Skein$DigestSkein512:void <init>(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jcajce.provider.digest.Skein$Digest_512_128:void <init>()",
            "org.bouncycastle.jcajce.provider.digest.Skein$Digest_512_160:void <init>()",
            "org.bouncycastle.jcajce.provider.digest.Skein$Digest_512_224:void <init>()",
            "org.bouncycastle.jcajce.provider.digest.Skein$Digest_512_256:void <init>()",
            "org.bouncycastle.jcajce.provider.digest.Skein$Digest_512_384:void <init>()",
            "org.bouncycastle.jcajce.provider.digest.Skein$Digest_512_512:void <init>()"
        ]
    },
    "org.bouncycastle.jcajce.provider.digest.Skein$HashMac_1024_1024:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.digest.Skein$HashMac_1024_384:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.digest.Skein$HashMac_1024_512:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.digest.Skein$HashMac_256_128:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.digest.Skein$HashMac_256_160:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.digest.Skein$HashMac_256_224:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.digest.Skein$HashMac_256_256:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.digest.Skein$HashMac_512_128:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.digest.Skein$HashMac_512_160:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.digest.Skein$HashMac_512_224:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.digest.Skein$HashMac_512_256:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.digest.Skein$HashMac_512_384:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.digest.Skein$HashMac_512_512:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.crypto.tls.TlsDSASigner:org.bouncycastle.crypto.Signer createSigner(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.params.AsymmetricKeyParameter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.AbstractTlsSigner:org.bouncycastle.crypto.Signer createSigner(org.bouncycastle.crypto.params.AsymmetricKeyParameter)"
        ]
    },
    "org.bouncycastle.crypto.tls.TlsDSASigner:org.bouncycastle.crypto.Signer createVerifyer(org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.params.AsymmetricKeyParameter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.crypto.tls.AbstractTlsSigner:org.bouncycastle.crypto.Signer createVerifyer(org.bouncycastle.crypto.params.AsymmetricKeyParameter)",
            "org.bouncycastle.crypto.tls.TlsDHEKeyExchange:org.bouncycastle.crypto.Signer initVerifyer(org.bouncycastle.crypto.tls.TlsSigner,org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.tls.SecurityParameters)",
            "org.bouncycastle.crypto.tls.TlsECDHEKeyExchange:org.bouncycastle.crypto.Signer initVerifyer(org.bouncycastle.crypto.tls.TlsSigner,org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.tls.SecurityParameters)",
            "org.bouncycastle.crypto.tls.TlsSRPKeyExchange:org.bouncycastle.crypto.Signer initVerifyer(org.bouncycastle.crypto.tls.TlsSigner,org.bouncycastle.crypto.tls.SignatureAndHashAlgorithm,org.bouncycastle.crypto.tls.SecurityParameters)"
        ]
    },
    "org.bouncycastle.pqc.jcajce.provider.util.CipherSpiExt:void engineInit(int,java.security.Key,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.pqc.jcajce.provider.util.CipherSpiExt:void engineInit(int,java.security.Key,java.security.AlgorithmParameters,java.security.SecureRandom)"
        ]
    },
    "org.bouncycastle.pqc.jcajce.provider.util.CipherSpiExt:void engineInit(int,java.security.Key,java.security.AlgorithmParameters,java.security.SecureRandom)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.x509.ExtendedPKIXBuilderParameters:org.bouncycastle.x509.ExtendedPKIXParameters getInstance(java.security.cert.PKIXParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.jce.provider.PKIXAttrCertPathBuilderSpi:java.security.cert.CertPathBuilderResult engineBuild(java.security.cert.CertPathParameters)",
            "org.bouncycastle.jce.provider.PKIXCertPathBuilderSpi:java.security.cert.CertPathBuilderResult engineBuild(java.security.cert.CertPathParameters)",
            "org.bouncycastle.jce.provider.RFC3280CertPathUtilities:java.util.Set processCRLF(java.security.cert.X509CRL,java.lang.Object,java.security.cert.X509Certificate,java.security.PublicKey,org.bouncycastle.x509.ExtendedPKIXParameters,java.util.List)",
            "org.bouncycastle.jce.provider.RFC3281CertPathUtilities:java.security.cert.CertPath processAttrCert1(org.bouncycastle.x509.X509AttributeCertificate,org.bouncycastle.x509.ExtendedPKIXParameters)"
        ]
    },
    "org.bouncycastle.x509.PKIXCertPathReviewer:void <init>(java.security.cert.CertPath,java.security.cert.PKIXParameters)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.asn1.x500.X500NameBuilder:org.bouncycastle.asn1.x500.X500NameBuilder addMultiValuedRDN(org.bouncycastle.asn1.ASN1ObjectIdentifier[],org.bouncycastle.asn1.ASN1Encodable[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.bouncycastle.asn1.x500.X500NameBuilder:org.bouncycastle.asn1.x500.X500NameBuilder addMultiValuedRDN(org.bouncycastle.asn1.ASN1ObjectIdentifier[],java.lang.String[])"
        ]
    },
    "org.bouncycastle.jcajce.provider.digest.Skein$Digest_1024_1024:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.digest.Skein$Digest_1024_384:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.digest.Skein$Digest_1024_512:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.digest.Skein$Digest_256_128:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.digest.Skein$Digest_256_160:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.digest.Skein$Digest_256_224:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.digest.Skein$Digest_256_256:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.digest.Skein$Digest_512_128:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.digest.Skein$Digest_512_160:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.digest.Skein$Digest_512_224:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.digest.Skein$Digest_512_256:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.digest.Skein$Digest_512_384:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.bouncycastle.jcajce.provider.digest.Skein$Digest_512_512:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    }
}
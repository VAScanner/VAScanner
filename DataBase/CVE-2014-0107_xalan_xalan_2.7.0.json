{
    "org.apache.xalan.transformer.TransformerImpl:void setExtensionsTable(org.apache.xalan.templates.StylesheetRoot)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerImpl:void transformNode(int)"
        ]
    },
    "org.apache.xalan.processor.TransformerFactoryImpl:javax.xml.transform.Source getAssociatedStylesheet(javax.xml.transform.Source,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.xalan.xslt.Process:void main(java.lang.String[])",
            "org.apache.xalan.xsltc.trax.SmartTransformerFactoryImpl:javax.xml.transform.Source getAssociatedStylesheet(javax.xml.transform.Source,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xpath.functions.FuncSystemProperty:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemValueOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncFormatNumb:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.XUnresolvedVariableSimple:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:org.apache.xpath.objects.XNodeSet executeFilterExpr(int,org.apache.xpath.XPathContext,org.apache.xml.utils.PrefixResolver,boolean,int,org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean executePredicates(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncBoolean:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncCeiling:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncConcat:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncContains:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtElementAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunction:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunctionAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncFloor:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncNot:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncRound:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncStartsWith:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstring:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringAfter:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringBefore:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSystemProperty:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncTranslate:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncUnparsedEntityURI:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:org.apache.xml.utils.XMLString getArg0AsString(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:double getArg0AsNumber(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.And:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Or:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.UnaryOperation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:boolean executePredicates(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,boolean)",
            "org.apache.xpath.Expression:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.utils.XMLString xstr(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIterator(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIteratorRaw(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.XPath:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPath:double getMatchScore(org.apache.xpath.XPathContext,int)"
        ]
    },
    "org.apache.xalan.processor.XSLTElementProcessor:org.xml.sax.Attributes setPropertiesFromAttributes(org.apache.xalan.processor.StylesheetHandler,java.lang.String,org.xml.sax.Attributes,org.apache.xalan.templates.ElemTemplateElement,boolean)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.xalan.processor.XSLTElementProcessor:void setPropertiesFromAttributes(org.apache.xalan.processor.StylesheetHandler,java.lang.String,org.xml.sax.Attributes,org.apache.xalan.templates.ElemTemplateElement)"
        ]
    },
    "org.apache.xalan.transformer.TransformerImpl:void transformNode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerImpl:void transform(javax.xml.transform.Source,boolean)",
            "org.apache.xalan.transformer.TransformerImpl:void transformNode(int,javax.xml.transform.Result)",
            "org.apache.xalan.transformer.TransformerImpl:void run()"
        ]
    },
    "org.apache.xalan.xslt.Process:void main(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.trax.SmartTransformerFactoryImpl:javax.xml.transform.Source getAssociatedStylesheet(javax.xml.transform.Source,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xslt.Process:void main(java.lang.String[])",
            "org.apache.xalan.xsltc.trax.SmartTransformerFactoryImpl:javax.xml.transform.Source getAssociatedStylesheet(javax.xml.transform.Source,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void execute(org.apache.xalan.transformer.TransformerImpl)"
        ]
    },
    "org.apache.xalan.templates.ElemValueOf:void execute(org.apache.xalan.transformer.TransformerImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemApplyTemplates:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.TransformerImpl:void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement,boolean)"
        ]
    },
    "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemValueOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncFormatNumb:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.XUnresolvedVariableSimple:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:org.apache.xpath.objects.XNodeSet executeFilterExpr(int,org.apache.xpath.XPathContext,org.apache.xml.utils.PrefixResolver,boolean,int,org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean executePredicates(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncBoolean:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncCeiling:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncConcat:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncContains:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtElementAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunction:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunctionAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncFloor:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncNot:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncRound:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncStartsWith:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstring:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringAfter:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringBefore:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSystemProperty:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncTranslate:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncUnparsedEntityURI:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:org.apache.xml.utils.XMLString getArg0AsString(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:double getArg0AsNumber(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.And:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Or:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.UnaryOperation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:boolean executePredicates(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,boolean)",
            "org.apache.xpath.Expression:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.utils.XMLString xstr(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIterator(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIteratorRaw(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.XPath:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPath:double getMatchScore(org.apache.xpath.XPathContext,int)"
        ]
    },
    "org.apache.xalan.templates.FuncFormatNumb:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemValueOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncFormatNumb:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.XUnresolvedVariableSimple:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:org.apache.xpath.objects.XNodeSet executeFilterExpr(int,org.apache.xpath.XPathContext,org.apache.xml.utils.PrefixResolver,boolean,int,org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean executePredicates(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncBoolean:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncCeiling:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncConcat:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncContains:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtElementAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunction:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunctionAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncFloor:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncNot:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncRound:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncStartsWith:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstring:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringAfter:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringBefore:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSystemProperty:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncTranslate:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncUnparsedEntityURI:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:org.apache.xml.utils.XMLString getArg0AsString(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:double getArg0AsNumber(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.And:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Or:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.UnaryOperation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:boolean executePredicates(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,boolean)",
            "org.apache.xpath.Expression:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.utils.XMLString xstr(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIterator(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIteratorRaw(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.XPath:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPath:double getMatchScore(org.apache.xpath.XPathContext,int)"
        ]
    },
    "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemValueOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncFormatNumb:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.XUnresolvedVariableSimple:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:org.apache.xpath.objects.XNodeSet executeFilterExpr(int,org.apache.xpath.XPathContext,org.apache.xml.utils.PrefixResolver,boolean,int,org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean executePredicates(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncBoolean:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncCeiling:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncConcat:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncContains:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtElementAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunction:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunctionAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncFloor:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncNot:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncRound:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncStartsWith:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstring:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringAfter:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringBefore:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSystemProperty:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncTranslate:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncUnparsedEntityURI:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:org.apache.xml.utils.XMLString getArg0AsString(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:double getArg0AsNumber(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.And:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Or:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.UnaryOperation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:boolean executePredicates(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,boolean)",
            "org.apache.xpath.Expression:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.utils.XMLString xstr(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIterator(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIteratorRaw(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.XPath:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPath:double getMatchScore(org.apache.xpath.XPathContext,int)"
        ]
    },
    "org.apache.xalan.templates.XUnresolvedVariableSimple:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemValueOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncFormatNumb:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.XUnresolvedVariableSimple:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:org.apache.xpath.objects.XNodeSet executeFilterExpr(int,org.apache.xpath.XPathContext,org.apache.xml.utils.PrefixResolver,boolean,int,org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean executePredicates(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncBoolean:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncCeiling:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncConcat:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncContains:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtElementAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunction:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunctionAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncFloor:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncNot:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncRound:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncStartsWith:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstring:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringAfter:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringBefore:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSystemProperty:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncTranslate:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncUnparsedEntityURI:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:org.apache.xml.utils.XMLString getArg0AsString(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:double getArg0AsNumber(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.And:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Or:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.UnaryOperation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:boolean executePredicates(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,boolean)",
            "org.apache.xpath.Expression:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.utils.XMLString xstr(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIterator(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIteratorRaw(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.VariableStack:org.apache.xpath.objects.XObject getLocalVariable(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.VariableStack:org.apache.xpath.objects.XObject getLocalVariable(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.VariableStack:org.apache.xpath.objects.XObject getGlobalVariable(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.VariableStack:org.apache.xpath.objects.XObject getGlobalVariable(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.XPath:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPath:double getMatchScore(org.apache.xpath.XPathContext,int)"
        ]
    },
    "org.apache.xpath.axes.FilterExprIteratorSimple:org.apache.xpath.objects.XNodeSet executeFilterExpr(int,org.apache.xpath.XPathContext,org.apache.xml.utils.PrefixResolver,boolean,int,org.apache.xpath.Expression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.FilterExprIterator:void setRoot(int,java.lang.Object)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:void setRoot(int,java.lang.Object)",
            "org.apache.xpath.axes.FilterExprWalker:void setRoot(int)"
        ]
    },
    "org.apache.xpath.axes.PredicatedNodeTest:boolean executePredicates(int,org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.FilterExprWalker:short acceptNode(int)",
            "org.apache.xpath.axes.PredicatedNodeTest:short acceptNode(int)",
            "org.apache.xpath.axes.UnionChildIterator:short acceptNode(int)"
        ]
    },
    "org.apache.xpath.functions.FuncBoolean:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemValueOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncFormatNumb:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.XUnresolvedVariableSimple:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:org.apache.xpath.objects.XNodeSet executeFilterExpr(int,org.apache.xpath.XPathContext,org.apache.xml.utils.PrefixResolver,boolean,int,org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean executePredicates(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncBoolean:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncCeiling:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncConcat:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncContains:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtElementAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunction:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunctionAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncFloor:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncNot:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncRound:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncStartsWith:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstring:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringAfter:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringBefore:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSystemProperty:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncTranslate:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncUnparsedEntityURI:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:org.apache.xml.utils.XMLString getArg0AsString(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:double getArg0AsNumber(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.And:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Or:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.UnaryOperation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:boolean executePredicates(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,boolean)",
            "org.apache.xpath.Expression:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.utils.XMLString xstr(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIterator(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIteratorRaw(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.XPath:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPath:double getMatchScore(org.apache.xpath.XPathContext,int)"
        ]
    },
    "org.apache.xpath.functions.FuncCeiling:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemValueOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncFormatNumb:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.XUnresolvedVariableSimple:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:org.apache.xpath.objects.XNodeSet executeFilterExpr(int,org.apache.xpath.XPathContext,org.apache.xml.utils.PrefixResolver,boolean,int,org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean executePredicates(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncBoolean:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncCeiling:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncConcat:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncContains:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtElementAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunction:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunctionAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncFloor:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncNot:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncRound:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncStartsWith:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstring:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringAfter:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringBefore:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSystemProperty:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncTranslate:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncUnparsedEntityURI:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:org.apache.xml.utils.XMLString getArg0AsString(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:double getArg0AsNumber(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.And:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Or:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.UnaryOperation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:boolean executePredicates(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,boolean)",
            "org.apache.xpath.Expression:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.utils.XMLString xstr(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIterator(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIteratorRaw(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.XPath:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPath:double getMatchScore(org.apache.xpath.XPathContext,int)"
        ]
    },
    "org.apache.xpath.functions.FuncConcat:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemValueOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncFormatNumb:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.XUnresolvedVariableSimple:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:org.apache.xpath.objects.XNodeSet executeFilterExpr(int,org.apache.xpath.XPathContext,org.apache.xml.utils.PrefixResolver,boolean,int,org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean executePredicates(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncBoolean:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncCeiling:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncConcat:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncContains:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtElementAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunction:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunctionAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncFloor:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncNot:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncRound:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncStartsWith:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstring:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringAfter:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringBefore:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSystemProperty:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncTranslate:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncUnparsedEntityURI:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:org.apache.xml.utils.XMLString getArg0AsString(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:double getArg0AsNumber(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.And:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Or:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.UnaryOperation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:boolean executePredicates(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,boolean)",
            "org.apache.xpath.Expression:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.utils.XMLString xstr(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIterator(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIteratorRaw(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.XPath:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPath:double getMatchScore(org.apache.xpath.XPathContext,int)"
        ]
    },
    "org.apache.xpath.functions.FuncContains:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemValueOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncFormatNumb:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.XUnresolvedVariableSimple:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:org.apache.xpath.objects.XNodeSet executeFilterExpr(int,org.apache.xpath.XPathContext,org.apache.xml.utils.PrefixResolver,boolean,int,org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean executePredicates(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncBoolean:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncCeiling:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncConcat:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncContains:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtElementAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunction:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunctionAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncFloor:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncNot:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncRound:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncStartsWith:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstring:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringAfter:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringBefore:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSystemProperty:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncTranslate:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncUnparsedEntityURI:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:org.apache.xml.utils.XMLString getArg0AsString(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:double getArg0AsNumber(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.And:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Or:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.UnaryOperation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:boolean executePredicates(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,boolean)",
            "org.apache.xpath.Expression:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.utils.XMLString xstr(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIterator(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIteratorRaw(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.XPath:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPath:double getMatchScore(org.apache.xpath.XPathContext,int)"
        ]
    },
    "org.apache.xpath.functions.FuncExtElementAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemValueOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncFormatNumb:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.XUnresolvedVariableSimple:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:org.apache.xpath.objects.XNodeSet executeFilterExpr(int,org.apache.xpath.XPathContext,org.apache.xml.utils.PrefixResolver,boolean,int,org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean executePredicates(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncBoolean:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncCeiling:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncConcat:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncContains:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtElementAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunction:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunctionAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncFloor:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncNot:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncRound:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncStartsWith:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstring:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringAfter:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringBefore:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSystemProperty:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncTranslate:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncUnparsedEntityURI:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:org.apache.xml.utils.XMLString getArg0AsString(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:double getArg0AsNumber(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.And:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Or:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.UnaryOperation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:boolean executePredicates(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,boolean)",
            "org.apache.xpath.Expression:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.utils.XMLString xstr(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIterator(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIteratorRaw(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.XPath:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPath:double getMatchScore(org.apache.xpath.XPathContext,int)"
        ]
    },
    "org.apache.xpath.functions.FuncExtFunction:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemValueOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncFormatNumb:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.XUnresolvedVariableSimple:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:org.apache.xpath.objects.XNodeSet executeFilterExpr(int,org.apache.xpath.XPathContext,org.apache.xml.utils.PrefixResolver,boolean,int,org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean executePredicates(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncBoolean:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncCeiling:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncConcat:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncContains:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtElementAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunction:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunctionAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncFloor:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncNot:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncRound:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncStartsWith:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstring:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringAfter:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringBefore:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSystemProperty:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncTranslate:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncUnparsedEntityURI:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:org.apache.xml.utils.XMLString getArg0AsString(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:double getArg0AsNumber(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.And:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Or:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.UnaryOperation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:boolean executePredicates(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,boolean)",
            "org.apache.xpath.Expression:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.utils.XMLString xstr(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIterator(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIteratorRaw(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.XPath:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPath:double getMatchScore(org.apache.xpath.XPathContext,int)"
        ]
    },
    "org.apache.xpath.functions.FuncExtFunctionAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemValueOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncFormatNumb:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.XUnresolvedVariableSimple:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:org.apache.xpath.objects.XNodeSet executeFilterExpr(int,org.apache.xpath.XPathContext,org.apache.xml.utils.PrefixResolver,boolean,int,org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean executePredicates(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncBoolean:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncCeiling:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncConcat:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncContains:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtElementAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunction:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunctionAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncFloor:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncNot:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncRound:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncStartsWith:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstring:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringAfter:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringBefore:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSystemProperty:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncTranslate:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncUnparsedEntityURI:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:org.apache.xml.utils.XMLString getArg0AsString(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:double getArg0AsNumber(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.And:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Or:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.UnaryOperation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:boolean executePredicates(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,boolean)",
            "org.apache.xpath.Expression:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.utils.XMLString xstr(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIterator(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIteratorRaw(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.XPath:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPath:double getMatchScore(org.apache.xpath.XPathContext,int)"
        ]
    },
    "org.apache.xpath.functions.FuncFloor:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemValueOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncFormatNumb:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.XUnresolvedVariableSimple:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:org.apache.xpath.objects.XNodeSet executeFilterExpr(int,org.apache.xpath.XPathContext,org.apache.xml.utils.PrefixResolver,boolean,int,org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean executePredicates(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncBoolean:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncCeiling:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncConcat:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncContains:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtElementAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunction:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunctionAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncFloor:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncNot:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncRound:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncStartsWith:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstring:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringAfter:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringBefore:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSystemProperty:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncTranslate:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncUnparsedEntityURI:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:org.apache.xml.utils.XMLString getArg0AsString(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:double getArg0AsNumber(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.And:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Or:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.UnaryOperation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:boolean executePredicates(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,boolean)",
            "org.apache.xpath.Expression:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.utils.XMLString xstr(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIterator(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIteratorRaw(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.XPath:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPath:double getMatchScore(org.apache.xpath.XPathContext,int)"
        ]
    },
    "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemValueOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncFormatNumb:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.XUnresolvedVariableSimple:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:org.apache.xpath.objects.XNodeSet executeFilterExpr(int,org.apache.xpath.XPathContext,org.apache.xml.utils.PrefixResolver,boolean,int,org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean executePredicates(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncBoolean:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncCeiling:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncConcat:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncContains:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtElementAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunction:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunctionAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncFloor:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncNot:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncRound:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncStartsWith:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstring:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringAfter:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringBefore:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSystemProperty:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncTranslate:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncUnparsedEntityURI:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:org.apache.xml.utils.XMLString getArg0AsString(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:double getArg0AsNumber(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.And:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Or:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.UnaryOperation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:boolean executePredicates(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,boolean)",
            "org.apache.xpath.Expression:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.utils.XMLString xstr(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIterator(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIteratorRaw(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.XPath:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPath:double getMatchScore(org.apache.xpath.XPathContext,int)"
        ]
    },
    "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemValueOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncFormatNumb:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.XUnresolvedVariableSimple:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:org.apache.xpath.objects.XNodeSet executeFilterExpr(int,org.apache.xpath.XPathContext,org.apache.xml.utils.PrefixResolver,boolean,int,org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean executePredicates(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncBoolean:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncCeiling:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncConcat:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncContains:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtElementAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunction:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunctionAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncFloor:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncNot:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncRound:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncStartsWith:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstring:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringAfter:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringBefore:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSystemProperty:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncTranslate:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncUnparsedEntityURI:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:org.apache.xml.utils.XMLString getArg0AsString(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:double getArg0AsNumber(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.And:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Or:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.UnaryOperation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:boolean executePredicates(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,boolean)",
            "org.apache.xpath.Expression:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.utils.XMLString xstr(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIterator(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIteratorRaw(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.XPath:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPath:double getMatchScore(org.apache.xpath.XPathContext,int)"
        ]
    },
    "org.apache.xpath.functions.FuncNot:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemValueOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncFormatNumb:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.XUnresolvedVariableSimple:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:org.apache.xpath.objects.XNodeSet executeFilterExpr(int,org.apache.xpath.XPathContext,org.apache.xml.utils.PrefixResolver,boolean,int,org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean executePredicates(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncBoolean:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncCeiling:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncConcat:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncContains:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtElementAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunction:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunctionAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncFloor:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncNot:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncRound:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncStartsWith:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstring:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringAfter:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringBefore:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSystemProperty:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncTranslate:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncUnparsedEntityURI:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:org.apache.xml.utils.XMLString getArg0AsString(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:double getArg0AsNumber(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.And:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Or:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.UnaryOperation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:boolean executePredicates(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,boolean)",
            "org.apache.xpath.Expression:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.utils.XMLString xstr(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIterator(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIteratorRaw(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.XPath:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPath:double getMatchScore(org.apache.xpath.XPathContext,int)"
        ]
    },
    "org.apache.xpath.functions.FuncRound:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemValueOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncFormatNumb:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.XUnresolvedVariableSimple:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:org.apache.xpath.objects.XNodeSet executeFilterExpr(int,org.apache.xpath.XPathContext,org.apache.xml.utils.PrefixResolver,boolean,int,org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean executePredicates(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncBoolean:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncCeiling:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncConcat:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncContains:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtElementAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunction:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunctionAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncFloor:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncNot:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncRound:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncStartsWith:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstring:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringAfter:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringBefore:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSystemProperty:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncTranslate:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncUnparsedEntityURI:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:org.apache.xml.utils.XMLString getArg0AsString(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:double getArg0AsNumber(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.And:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Or:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.UnaryOperation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:boolean executePredicates(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,boolean)",
            "org.apache.xpath.Expression:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.utils.XMLString xstr(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIterator(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIteratorRaw(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.XPath:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPath:double getMatchScore(org.apache.xpath.XPathContext,int)"
        ]
    },
    "org.apache.xpath.functions.FuncStartsWith:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemValueOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncFormatNumb:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.XUnresolvedVariableSimple:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:org.apache.xpath.objects.XNodeSet executeFilterExpr(int,org.apache.xpath.XPathContext,org.apache.xml.utils.PrefixResolver,boolean,int,org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean executePredicates(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncBoolean:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncCeiling:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncConcat:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncContains:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtElementAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunction:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunctionAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncFloor:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncNot:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncRound:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncStartsWith:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstring:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringAfter:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringBefore:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSystemProperty:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncTranslate:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncUnparsedEntityURI:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:org.apache.xml.utils.XMLString getArg0AsString(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:double getArg0AsNumber(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.And:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Or:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.UnaryOperation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:boolean executePredicates(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,boolean)",
            "org.apache.xpath.Expression:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.utils.XMLString xstr(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIterator(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIteratorRaw(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.XPath:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPath:double getMatchScore(org.apache.xpath.XPathContext,int)"
        ]
    },
    "org.apache.xpath.functions.FuncSubstring:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemValueOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncFormatNumb:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.XUnresolvedVariableSimple:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:org.apache.xpath.objects.XNodeSet executeFilterExpr(int,org.apache.xpath.XPathContext,org.apache.xml.utils.PrefixResolver,boolean,int,org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean executePredicates(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncBoolean:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncCeiling:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncConcat:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncContains:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtElementAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunction:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunctionAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncFloor:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncNot:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncRound:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncStartsWith:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstring:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringAfter:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringBefore:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSystemProperty:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncTranslate:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncUnparsedEntityURI:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:org.apache.xml.utils.XMLString getArg0AsString(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:double getArg0AsNumber(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.And:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Or:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.UnaryOperation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:boolean executePredicates(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,boolean)",
            "org.apache.xpath.Expression:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.utils.XMLString xstr(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIterator(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIteratorRaw(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.XPath:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPath:double getMatchScore(org.apache.xpath.XPathContext,int)"
        ]
    },
    "org.apache.xpath.functions.FuncSubstringAfter:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemValueOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncFormatNumb:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.XUnresolvedVariableSimple:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:org.apache.xpath.objects.XNodeSet executeFilterExpr(int,org.apache.xpath.XPathContext,org.apache.xml.utils.PrefixResolver,boolean,int,org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean executePredicates(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncBoolean:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncCeiling:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncConcat:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncContains:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtElementAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunction:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunctionAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncFloor:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncNot:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncRound:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncStartsWith:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstring:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringAfter:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringBefore:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSystemProperty:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncTranslate:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncUnparsedEntityURI:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:org.apache.xml.utils.XMLString getArg0AsString(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:double getArg0AsNumber(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.And:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Or:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.UnaryOperation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:boolean executePredicates(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,boolean)",
            "org.apache.xpath.Expression:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.utils.XMLString xstr(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIterator(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIteratorRaw(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.XPath:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPath:double getMatchScore(org.apache.xpath.XPathContext,int)"
        ]
    },
    "org.apache.xpath.functions.FuncSubstringBefore:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemValueOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncFormatNumb:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.XUnresolvedVariableSimple:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:org.apache.xpath.objects.XNodeSet executeFilterExpr(int,org.apache.xpath.XPathContext,org.apache.xml.utils.PrefixResolver,boolean,int,org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean executePredicates(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncBoolean:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncCeiling:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncConcat:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncContains:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtElementAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunction:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunctionAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncFloor:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncNot:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncRound:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncStartsWith:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstring:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringAfter:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringBefore:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSystemProperty:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncTranslate:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncUnparsedEntityURI:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:org.apache.xml.utils.XMLString getArg0AsString(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:double getArg0AsNumber(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.And:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Or:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.UnaryOperation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:boolean executePredicates(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,boolean)",
            "org.apache.xpath.Expression:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.utils.XMLString xstr(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIterator(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIteratorRaw(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.XPath:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPath:double getMatchScore(org.apache.xpath.XPathContext,int)"
        ]
    },
    "org.apache.xpath.functions.FuncTranslate:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemValueOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncFormatNumb:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.XUnresolvedVariableSimple:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:org.apache.xpath.objects.XNodeSet executeFilterExpr(int,org.apache.xpath.XPathContext,org.apache.xml.utils.PrefixResolver,boolean,int,org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean executePredicates(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncBoolean:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncCeiling:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncConcat:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncContains:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtElementAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunction:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunctionAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncFloor:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncNot:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncRound:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncStartsWith:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstring:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringAfter:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringBefore:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSystemProperty:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncTranslate:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncUnparsedEntityURI:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:org.apache.xml.utils.XMLString getArg0AsString(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:double getArg0AsNumber(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.And:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Or:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.UnaryOperation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:boolean executePredicates(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,boolean)",
            "org.apache.xpath.Expression:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.utils.XMLString xstr(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIterator(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIteratorRaw(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.XPath:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPath:double getMatchScore(org.apache.xpath.XPathContext,int)"
        ]
    },
    "org.apache.xpath.functions.FuncUnparsedEntityURI:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemValueOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncFormatNumb:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.XUnresolvedVariableSimple:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:org.apache.xpath.objects.XNodeSet executeFilterExpr(int,org.apache.xpath.XPathContext,org.apache.xml.utils.PrefixResolver,boolean,int,org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean executePredicates(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncBoolean:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncCeiling:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncConcat:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncContains:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtElementAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunction:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunctionAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncFloor:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncNot:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncRound:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncStartsWith:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstring:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringAfter:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringBefore:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSystemProperty:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncTranslate:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncUnparsedEntityURI:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:org.apache.xml.utils.XMLString getArg0AsString(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:double getArg0AsNumber(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.And:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Or:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.UnaryOperation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:boolean executePredicates(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,boolean)",
            "org.apache.xpath.Expression:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.utils.XMLString xstr(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIterator(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIteratorRaw(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.XPath:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPath:double getMatchScore(org.apache.xpath.XPathContext,int)"
        ]
    },
    "org.apache.xpath.functions.FunctionDef1Arg:org.apache.xml.utils.XMLString getArg0AsString(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.functions.FuncNormalizeSpace:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncString:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncStringLength:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.functions.FunctionDef1Arg:double getArg0AsNumber(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.functions.FuncNumber:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.objects.XRTreeFragSelectWrapper:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemValueOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncFormatNumb:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.XUnresolvedVariableSimple:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:org.apache.xpath.objects.XNodeSet executeFilterExpr(int,org.apache.xpath.XPathContext,org.apache.xml.utils.PrefixResolver,boolean,int,org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean executePredicates(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncBoolean:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncCeiling:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncConcat:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncContains:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtElementAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunction:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunctionAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncFloor:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncNot:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncRound:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncStartsWith:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstring:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringAfter:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringBefore:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSystemProperty:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncTranslate:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncUnparsedEntityURI:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:org.apache.xml.utils.XMLString getArg0AsString(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:double getArg0AsNumber(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.And:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Or:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.UnaryOperation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:boolean executePredicates(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,boolean)",
            "org.apache.xpath.Expression:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.utils.XMLString xstr(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIterator(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIteratorRaw(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.VariableStack:org.apache.xpath.objects.XObject getLocalVariable(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.VariableStack:org.apache.xpath.objects.XObject getLocalVariable(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.VariableStack:org.apache.xpath.objects.XObject getGlobalVariable(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.VariableStack:org.apache.xpath.objects.XObject getGlobalVariable(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.XPath:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPath:double getMatchScore(org.apache.xpath.XPathContext,int)"
        ]
    },
    "org.apache.xpath.operations.And:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemValueOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncFormatNumb:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.XUnresolvedVariableSimple:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:org.apache.xpath.objects.XNodeSet executeFilterExpr(int,org.apache.xpath.XPathContext,org.apache.xml.utils.PrefixResolver,boolean,int,org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean executePredicates(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncBoolean:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncCeiling:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncConcat:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncContains:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtElementAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunction:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunctionAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncFloor:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncNot:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncRound:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncStartsWith:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstring:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringAfter:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringBefore:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSystemProperty:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncTranslate:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncUnparsedEntityURI:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:org.apache.xml.utils.XMLString getArg0AsString(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:double getArg0AsNumber(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.And:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Or:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.UnaryOperation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:boolean executePredicates(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,boolean)",
            "org.apache.xpath.Expression:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.utils.XMLString xstr(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIterator(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIteratorRaw(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.XPath:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPath:double getMatchScore(org.apache.xpath.XPathContext,int)"
        ]
    },
    "org.apache.xpath.operations.Or:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemValueOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncFormatNumb:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.XUnresolvedVariableSimple:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:org.apache.xpath.objects.XNodeSet executeFilterExpr(int,org.apache.xpath.XPathContext,org.apache.xml.utils.PrefixResolver,boolean,int,org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean executePredicates(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncBoolean:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncCeiling:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncConcat:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncContains:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtElementAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunction:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunctionAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncFloor:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncNot:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncRound:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncStartsWith:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstring:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringAfter:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringBefore:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSystemProperty:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncTranslate:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncUnparsedEntityURI:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:org.apache.xml.utils.XMLString getArg0AsString(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:double getArg0AsNumber(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.And:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Or:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.UnaryOperation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:boolean executePredicates(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,boolean)",
            "org.apache.xpath.Expression:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.utils.XMLString xstr(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIterator(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIteratorRaw(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.XPath:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPath:double getMatchScore(org.apache.xpath.XPathContext,int)"
        ]
    },
    "org.apache.xpath.operations.UnaryOperation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemValueOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncFormatNumb:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.XUnresolvedVariableSimple:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:org.apache.xpath.objects.XNodeSet executeFilterExpr(int,org.apache.xpath.XPathContext,org.apache.xml.utils.PrefixResolver,boolean,int,org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean executePredicates(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncBoolean:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncCeiling:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncConcat:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncContains:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtElementAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunction:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunctionAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncFloor:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncNot:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncRound:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncStartsWith:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstring:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringAfter:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringBefore:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSystemProperty:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncTranslate:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncUnparsedEntityURI:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:org.apache.xml.utils.XMLString getArg0AsString(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:double getArg0AsNumber(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.And:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Or:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.UnaryOperation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:boolean executePredicates(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,boolean)",
            "org.apache.xpath.Expression:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.utils.XMLString xstr(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIterator(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIteratorRaw(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.XPath:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPath:double getMatchScore(org.apache.xpath.XPathContext,int)"
        ]
    },
    "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.patterns.StepPattern:boolean executePredicates(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)"
        ]
    },
    "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.StepPattern:int getLastPos(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.patterns.StepPattern:boolean executePredicates(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.patterns.ContextMatchStepPattern:org.apache.xpath.objects.XObject executeRelativePathPattern(org.apache.xpath.XPathContext,org.apache.xpath.patterns.StepPattern)",
            "org.apache.xpath.patterns.StepPattern:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)"
        ]
    },
    "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.operations.Equals:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Operation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.Expression:double num(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.functions.FuncSubstring:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Div:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Minus:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Mod:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Mult:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Neg:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Number:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Plus:double num(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.Expression:boolean bool(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.operations.And:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Bool:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Or:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.XPath:boolean bool(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)"
        ]
    },
    "org.apache.xpath.Expression:org.apache.xml.utils.XMLString xstr(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xpath.Expression:int asNode(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.functions.FunctionDef1Arg:int getArg0AsNode(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIterator(org.apache.xpath.XPathContext,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemApplyTemplates:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xpath.functions.FuncCount:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSum:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.VariableSafeAbsRef:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,boolean)",
            "org.apache.xpath.patterns.FunctionPattern:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.patterns.FunctionPattern:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.patterns.FunctionPattern:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIteratorRaw(org.apache.xpath.XPathContext,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xpath.Expression:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemValueOf:void execute(org.apache.xalan.transformer.TransformerImpl)"
        ]
    },
    "org.apache.xpath.XPath:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.ExsltDynamic:double max(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList,java.lang.String)",
            "org.apache.xalan.lib.ExsltDynamic:double min(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList,java.lang.String)",
            "org.apache.xalan.lib.ExsltDynamic:double sum(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList,java.lang.String)",
            "org.apache.xalan.lib.ExsltDynamic:org.w3c.dom.NodeList map(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList,java.lang.String)",
            "org.apache.xalan.lib.ExsltDynamic:org.w3c.dom.NodeList closure(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList,java.lang.String)",
            "org.apache.xalan.templates.AVTPartXPath:void evaluate(org.apache.xpath.XPathContext,org.apache.xml.utils.FastStringBuffer,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xalan.templates.ElemChoose:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemCopyOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemIf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemNumber:java.lang.String getCountString(org.apache.xalan.transformer.TransformerImpl,int)",
            "org.apache.xalan.templates.ElemVariable:org.apache.xpath.objects.XObject getValue(org.apache.xalan.transformer.TransformerImpl,int)",
            "org.apache.xalan.templates.ElemWithParam:org.apache.xpath.objects.XObject getValue(org.apache.xalan.transformer.TransformerImpl,int)",
            "org.apache.xalan.transformer.KeyRefIterator:short filterNode(int)",
            "org.apache.xalan.transformer.KeyTable:java.util.Hashtable getRefsTable()",
            "org.apache.xalan.transformer.NodeSorter$NodeCompareElem:void <init>(org.apache.xalan.transformer.NodeSorter,int)",
            "org.apache.xalan.transformer.NodeSorter:int compare(org.apache.xalan.transformer.NodeSorter$NodeCompareElem,org.apache.xalan.transformer.NodeSorter$NodeCompareElem,int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.jaxp.XPathImpl:org.apache.xpath.objects.XObject eval(java.lang.String,java.lang.Object)",
            "org.apache.xpath.CachedXPathAPI:org.apache.xpath.objects.XObject eval(org.w3c.dom.Node,java.lang.String,org.w3c.dom.Node)",
            "org.apache.xpath.CachedXPathAPI:org.apache.xpath.objects.XObject eval(org.w3c.dom.Node,java.lang.String,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPath:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,org.w3c.dom.Node,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPathAPI:org.apache.xpath.objects.XObject eval(org.w3c.dom.Node,java.lang.String,org.w3c.dom.Node)",
            "org.apache.xpath.XPathAPI:org.apache.xpath.objects.XObject eval(org.w3c.dom.Node,java.lang.String,org.apache.xml.utils.PrefixResolver)"
        ]
    },
    "org.apache.xpath.XPath:double getMatchScore(org.apache.xpath.XPathContext,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemNumber:int findAncestor(org.apache.xpath.XPathContext,org.apache.xpath.XPath,org.apache.xpath.XPath,int,org.apache.xalan.templates.ElemNumber)",
            "org.apache.xalan.templates.ElemNumber:int findPrecedingOrAncestorOrSelf(org.apache.xpath.XPathContext,org.apache.xpath.XPath,org.apache.xpath.XPath,int,org.apache.xalan.templates.ElemNumber)",
            "org.apache.xalan.templates.ElemNumber:int getPreviousNode(org.apache.xpath.XPathContext,int)",
            "org.apache.xalan.templates.ElemNumber:org.apache.xml.utils.NodeVector getMatchingAncestors(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xalan.transformer.KeyIterator:short acceptNode(int)"
        ]
    },
    "org.apache.xalan.processor.XSLTElementProcessor:void setPropertiesFromAttributes(org.apache.xalan.processor.StylesheetHandler,java.lang.String,org.xml.sax.Attributes,org.apache.xalan.templates.ElemTemplateElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.ProcessorAttributeSet:void startElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.processor.ProcessorDecimalFormat:void startElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.processor.ProcessorInclude:void startElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.processor.ProcessorLRE:void startElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.processor.ProcessorNamespaceAlias:void startElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.processor.ProcessorOutputElem:void startElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.processor.ProcessorPreserveSpace:void startElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.processor.ProcessorStripSpace:void startElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.processor.ProcessorStylesheetElement:void startElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.processor.ProcessorTemplateElem:void startElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xalan.transformer.TransformerImpl:void transform(javax.xml.transform.Source,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerImpl:void transform(javax.xml.transform.Source)",
            "org.apache.xalan.transformer.TransformerImpl:void transform(javax.xml.transform.Source,javax.xml.transform.Result,boolean)"
        ]
    },
    "org.apache.xalan.transformer.TransformerImpl:void transformNode(int,javax.xml.transform.Result)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.transformer.TransformerImpl:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void endDocument()"
        ]
    },
    "org.apache.xalan.templates.ElemForEach:void execute(org.apache.xalan.transformer.TransformerImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemApplyTemplates:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.TransformerImpl:void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement,boolean)"
        ]
    },
    "org.apache.xalan.templates.ElemApplyTemplates:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemApplyTemplates:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemForEach:void execute(org.apache.xalan.transformer.TransformerImpl)"
        ]
    },
    "org.apache.xalan.transformer.TransformerImpl:void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemChoose:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemCopy:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemElement:void constructNode(java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemExsltFunction:void execute(org.apache.xalan.transformer.TransformerImpl,org.apache.xpath.objects.XObject[])",
            "org.apache.xalan.templates.ElemFallback:void executeFallback(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemIf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemLiteralResult:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemTemplate:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.TransformerImpl:int transformToRTF(org.apache.xalan.templates.ElemTemplateElement,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.transformer.TransformerImpl:java.lang.String transformToString(org.apache.xalan.templates.ElemTemplateElement)",
            "org.apache.xalan.transformer.TransformerImpl:boolean applyTemplateToNode(org.apache.xalan.templates.ElemTemplateElement,org.apache.xalan.templates.ElemTemplate,int)",
            "org.apache.xalan.transformer.TransformerImpl:void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement,org.xml.sax.ContentHandler)",
            "org.apache.xalan.transformer.TransformerImpl:void executeFromSnapshot(org.apache.xalan.transformer.TransformSnapshot)"
        ]
    },
    "org.apache.xpath.VariableStack:org.apache.xpath.objects.XObject getLocalVariable(org.apache.xpath.XPathContext,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.VariableStack:org.apache.xpath.objects.XObject getVariableOrParam(org.apache.xpath.XPathContext,org.apache.xml.utils.QName)"
        ]
    },
    "org.apache.xpath.VariableStack:org.apache.xpath.objects.XObject getLocalVariable(org.apache.xpath.XPathContext,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.operations.Variable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,boolean)"
        ]
    },
    "org.apache.xpath.VariableStack:org.apache.xpath.objects.XObject getGlobalVariable(org.apache.xpath.XPathContext,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.VariableStack:org.apache.xpath.objects.XObject getVariableOrParam(org.apache.xpath.XPathContext,org.apache.xml.utils.QName)"
        ]
    },
    "org.apache.xpath.VariableStack:org.apache.xpath.objects.XObject getGlobalVariable(org.apache.xpath.XPathContext,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.operations.Variable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,boolean)"
        ]
    },
    "org.apache.xpath.axes.FilterExprIterator:void setRoot(int,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.LocPathIterator:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.axes.LocPathIterator:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.NodeSequence:void setRoot(int,java.lang.Object)"
        ]
    },
    "org.apache.xpath.axes.FilterExprIteratorSimple:void setRoot(int,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.LocPathIterator:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.axes.LocPathIterator:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.NodeSequence:void setRoot(int,java.lang.Object)"
        ]
    },
    "org.apache.xpath.axes.FilterExprWalker:void setRoot(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.AxesWalker:int nextNode()",
            "org.apache.xpath.axes.WalkingIterator:void reset()",
            "org.apache.xpath.axes.WalkingIterator:void setRoot(int,java.lang.Object)"
        ]
    },
    "org.apache.xpath.axes.FilterExprWalker:short acceptNode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.AxesWalker:int nextNode()"
        ]
    },
    "org.apache.xpath.axes.PredicatedNodeTest:short acceptNode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.AxesWalker:int nextNode()",
            "org.apache.xpath.axes.BasicTestIterator:int nextNode()",
            "org.apache.xpath.axes.DescendantIterator:int nextNode()"
        ]
    },
    "org.apache.xpath.axes.UnionChildIterator:short acceptNode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.BasicTestIterator:int nextNode()"
        ]
    },
    "org.apache.xpath.functions.FuncNormalizeSpace:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemValueOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncFormatNumb:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.XUnresolvedVariableSimple:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:org.apache.xpath.objects.XNodeSet executeFilterExpr(int,org.apache.xpath.XPathContext,org.apache.xml.utils.PrefixResolver,boolean,int,org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean executePredicates(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncBoolean:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncCeiling:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncConcat:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncContains:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtElementAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunction:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunctionAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncFloor:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncNormalizeSpace:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.functions.FuncNot:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncRound:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncStartsWith:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstring:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringAfter:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringBefore:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSystemProperty:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncTranslate:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncUnparsedEntityURI:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:org.apache.xml.utils.XMLString getArg0AsString(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:double getArg0AsNumber(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.And:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Or:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.UnaryOperation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:boolean executePredicates(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,boolean)",
            "org.apache.xpath.Expression:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.utils.XMLString xstr(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIterator(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIteratorRaw(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.XPath:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPath:double getMatchScore(org.apache.xpath.XPathContext,int)"
        ]
    },
    "org.apache.xpath.functions.FuncString:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemValueOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncFormatNumb:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.XUnresolvedVariableSimple:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:org.apache.xpath.objects.XNodeSet executeFilterExpr(int,org.apache.xpath.XPathContext,org.apache.xml.utils.PrefixResolver,boolean,int,org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean executePredicates(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncBoolean:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncCeiling:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncConcat:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncContains:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtElementAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunction:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunctionAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncFloor:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncNot:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncRound:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncStartsWith:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstring:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringAfter:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringBefore:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSystemProperty:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncTranslate:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncUnparsedEntityURI:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:org.apache.xml.utils.XMLString getArg0AsString(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:double getArg0AsNumber(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.And:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Or:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.UnaryOperation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:boolean executePredicates(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,boolean)",
            "org.apache.xpath.Expression:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.utils.XMLString xstr(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIterator(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIteratorRaw(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.XPath:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPath:double getMatchScore(org.apache.xpath.XPathContext,int)"
        ]
    },
    "org.apache.xpath.functions.FuncStringLength:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemValueOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncFormatNumb:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.XUnresolvedVariableSimple:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:org.apache.xpath.objects.XNodeSet executeFilterExpr(int,org.apache.xpath.XPathContext,org.apache.xml.utils.PrefixResolver,boolean,int,org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean executePredicates(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncBoolean:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncCeiling:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncConcat:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncContains:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtElementAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunction:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunctionAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncFloor:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncNot:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncRound:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncStartsWith:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstring:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringAfter:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringBefore:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSystemProperty:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncTranslate:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncUnparsedEntityURI:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:org.apache.xml.utils.XMLString getArg0AsString(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:double getArg0AsNumber(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.And:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Or:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.UnaryOperation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:boolean executePredicates(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,boolean)",
            "org.apache.xpath.Expression:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.utils.XMLString xstr(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIterator(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIteratorRaw(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.XPath:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPath:double getMatchScore(org.apache.xpath.XPathContext,int)"
        ]
    },
    "org.apache.xpath.functions.FuncNumber:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemValueOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncFormatNumb:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.XUnresolvedVariableSimple:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:org.apache.xpath.objects.XNodeSet executeFilterExpr(int,org.apache.xpath.XPathContext,org.apache.xml.utils.PrefixResolver,boolean,int,org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean executePredicates(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncBoolean:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncCeiling:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncConcat:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncContains:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtElementAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunction:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunctionAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncFloor:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncNot:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncRound:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncStartsWith:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstring:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringAfter:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringBefore:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSystemProperty:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncTranslate:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncUnparsedEntityURI:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:org.apache.xml.utils.XMLString getArg0AsString(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:double getArg0AsNumber(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.And:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Or:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.UnaryOperation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:boolean executePredicates(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,boolean)",
            "org.apache.xpath.Expression:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.utils.XMLString xstr(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIterator(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIteratorRaw(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.XPath:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPath:double getMatchScore(org.apache.xpath.XPathContext,int)"
        ]
    },
    "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.functions.FuncPosition:int getPositionInContextNodeList(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.patterns.StepPattern:int getLastPos(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.functions.FuncLast:int getCountOfContextNodeList(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.patterns.ContextMatchStepPattern:org.apache.xpath.objects.XObject executeRelativePathPattern(org.apache.xpath.XPathContext,org.apache.xpath.patterns.StepPattern)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xpath.patterns.StepPattern:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.TemplateList:org.apache.xalan.templates.ElemTemplate getTemplateFast(org.apache.xpath.XPathContext,int,int,org.apache.xml.utils.QName,int,boolean,org.apache.xml.dtm.DTM)",
            "org.apache.xpath.patterns.StepPattern:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)"
        ]
    },
    "org.apache.xpath.operations.Equals:boolean bool(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.operations.And:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Bool:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Or:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.XPath:boolean bool(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)"
        ]
    },
    "org.apache.xpath.operations.Operation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemValueOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncFormatNumb:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.XUnresolvedVariableSimple:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:org.apache.xpath.objects.XNodeSet executeFilterExpr(int,org.apache.xpath.XPathContext,org.apache.xml.utils.PrefixResolver,boolean,int,org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean executePredicates(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncBoolean:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncCeiling:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncConcat:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncContains:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtElementAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunction:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunctionAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncFloor:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncNot:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncRound:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncStartsWith:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstring:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringAfter:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringBefore:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSystemProperty:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncTranslate:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncUnparsedEntityURI:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:org.apache.xml.utils.XMLString getArg0AsString(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:double getArg0AsNumber(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.And:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Or:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.UnaryOperation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:boolean executePredicates(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,boolean)",
            "org.apache.xpath.Expression:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.utils.XMLString xstr(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIterator(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIteratorRaw(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.XPath:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPath:double getMatchScore(org.apache.xpath.XPathContext,int)"
        ]
    },
    "org.apache.xpath.operations.Div:double num(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.functions.FuncSubstring:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Div:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Minus:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Mod:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Mult:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Neg:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Number:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Plus:double num(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.operations.Minus:double num(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.functions.FuncSubstring:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Div:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Minus:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Mod:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Mult:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Neg:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Number:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Plus:double num(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.operations.Mod:double num(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.functions.FuncSubstring:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Div:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Minus:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Mod:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Mult:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Neg:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Number:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Plus:double num(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.operations.Mult:double num(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.functions.FuncSubstring:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Div:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Minus:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Mod:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Mult:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Neg:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Number:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Plus:double num(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.operations.Neg:double num(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.functions.FuncSubstring:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Div:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Minus:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Mod:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Mult:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Neg:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Number:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Plus:double num(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.operations.Number:double num(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.functions.FuncSubstring:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Div:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Minus:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Mod:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Mult:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Neg:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Number:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Plus:double num(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.operations.Plus:double num(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.functions.FuncSubstring:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Div:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Minus:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Mod:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Mult:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Neg:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Number:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Plus:double num(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.operations.And:boolean bool(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.operations.And:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Bool:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Or:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.XPath:boolean bool(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)"
        ]
    },
    "org.apache.xpath.operations.Bool:boolean bool(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.operations.And:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Bool:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Or:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.XPath:boolean bool(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)"
        ]
    },
    "org.apache.xpath.operations.Or:boolean bool(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.operations.And:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Bool:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Or:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.XPath:boolean bool(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)"
        ]
    },
    "org.apache.xpath.XPath:boolean bool(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemChoose:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemIf:void execute(org.apache.xalan.transformer.TransformerImpl)"
        ]
    },
    "org.apache.xpath.functions.FunctionDef1Arg:int getArg0AsNode(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.functions.FuncDoclocation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncGenerateId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncLocalPart:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncNamespace:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncNormalizeSpace:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.functions.FuncQname:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.functions.FuncCount:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemValueOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncFormatNumb:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.XUnresolvedVariableSimple:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:org.apache.xpath.objects.XNodeSet executeFilterExpr(int,org.apache.xpath.XPathContext,org.apache.xml.utils.PrefixResolver,boolean,int,org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean executePredicates(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncBoolean:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncCeiling:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncConcat:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncContains:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtElementAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunction:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunctionAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncFloor:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncNot:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncRound:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncStartsWith:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstring:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringAfter:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringBefore:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSystemProperty:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncTranslate:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncUnparsedEntityURI:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:org.apache.xml.utils.XMLString getArg0AsString(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:double getArg0AsNumber(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.And:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Or:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.UnaryOperation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:boolean executePredicates(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,boolean)",
            "org.apache.xpath.Expression:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.utils.XMLString xstr(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIterator(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIteratorRaw(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.XPath:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPath:double getMatchScore(org.apache.xpath.XPathContext,int)"
        ]
    },
    "org.apache.xpath.functions.FuncSum:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemValueOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncFormatNumb:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.XUnresolvedVariableSimple:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:org.apache.xpath.objects.XNodeSet executeFilterExpr(int,org.apache.xpath.XPathContext,org.apache.xml.utils.PrefixResolver,boolean,int,org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean executePredicates(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncBoolean:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncCeiling:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncConcat:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncContains:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtElementAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunction:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunctionAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncFloor:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncNot:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncRound:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncStartsWith:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstring:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringAfter:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringBefore:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSystemProperty:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncTranslate:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncUnparsedEntityURI:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:org.apache.xml.utils.XMLString getArg0AsString(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:double getArg0AsNumber(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.And:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Or:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.UnaryOperation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:boolean executePredicates(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,boolean)",
            "org.apache.xpath.Expression:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.utils.XMLString xstr(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIterator(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIteratorRaw(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.XPath:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPath:double getMatchScore(org.apache.xpath.XPathContext,int)"
        ]
    },
    "org.apache.xpath.operations.VariableSafeAbsRef:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.operations.Equals:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Operation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Variable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.patterns.FunctionPattern:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.TemplateList:org.apache.xalan.templates.ElemTemplate getTemplate(org.apache.xpath.XPathContext,int,org.apache.xml.utils.QName,boolean,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.templates.TemplateList:org.apache.xalan.templates.ElemTemplate getTemplate(org.apache.xpath.XPathContext,int,org.apache.xml.utils.QName,int,int,boolean,org.apache.xml.dtm.DTM)",
            "org.apache.xpath.patterns.NodeTest:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.StepPattern:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.patterns.FunctionPattern:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.TemplateList:org.apache.xalan.templates.ElemTemplate getTemplateFast(org.apache.xpath.XPathContext,int,int,org.apache.xml.utils.QName,int,boolean,org.apache.xml.dtm.DTM)",
            "org.apache.xpath.patterns.StepPattern:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)"
        ]
    },
    "org.apache.xpath.patterns.FunctionPattern:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemValueOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncFormatNumb:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.XUnresolvedVariableSimple:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:org.apache.xpath.objects.XNodeSet executeFilterExpr(int,org.apache.xpath.XPathContext,org.apache.xml.utils.PrefixResolver,boolean,int,org.apache.xpath.Expression)",
            "org.apache.xpath.axes.MatchPatternIterator:short acceptNode(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean executePredicates(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncBoolean:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncCeiling:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncConcat:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncContains:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtElementAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunction:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunctionAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncFloor:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncNot:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncRound:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncStartsWith:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstring:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringAfter:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringBefore:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSystemProperty:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncTranslate:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncUnparsedEntityURI:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:org.apache.xml.utils.XMLString getArg0AsString(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:double getArg0AsNumber(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.And:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Or:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.UnaryOperation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.StepPattern:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:org.apache.xpath.objects.XObject executeRelativePathPattern(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.patterns.StepPattern:boolean executePredicates(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.patterns.StepPattern:double getMatchScore(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.patterns.UnionPattern:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,boolean)",
            "org.apache.xpath.Expression:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.utils.XMLString xstr(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIterator(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIteratorRaw(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.XPath:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPath:double getMatchScore(org.apache.xpath.XPathContext,int)"
        ]
    },
    "org.apache.xalan.lib.ExsltDynamic:double max(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.lib.ExsltDynamic:double min(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.lib.ExsltDynamic:double sum(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.lib.ExsltDynamic:org.w3c.dom.NodeList map(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.lib.ExsltDynamic:org.w3c.dom.NodeList closure(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.templates.AVTPartXPath:void evaluate(org.apache.xpath.XPathContext,org.apache.xml.utils.FastStringBuffer,int,org.apache.xml.utils.PrefixResolver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.AVT:java.lang.String evaluate(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)"
        ]
    },
    "org.apache.xalan.templates.ElemChoose:void execute(org.apache.xalan.transformer.TransformerImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemApplyTemplates:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.TransformerImpl:void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement,boolean)"
        ]
    },
    "org.apache.xalan.templates.ElemCopyOf:void execute(org.apache.xalan.transformer.TransformerImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemApplyTemplates:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.TransformerImpl:void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement,boolean)"
        ]
    },
    "org.apache.xalan.templates.ElemIf:void execute(org.apache.xalan.transformer.TransformerImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemApplyTemplates:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.TransformerImpl:void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement,boolean)"
        ]
    },
    "org.apache.xalan.templates.ElemNumber:java.lang.String getCountString(org.apache.xalan.transformer.TransformerImpl,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemNumber:void execute(org.apache.xalan.transformer.TransformerImpl)"
        ]
    },
    "org.apache.xalan.templates.ElemVariable:org.apache.xpath.objects.XObject getValue(org.apache.xalan.transformer.TransformerImpl,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemExsltFuncResult:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemParam:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemVariable:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.XUnresolvedVariable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xalan.templates.ElemWithParam:org.apache.xpath.objects.XObject getValue(org.apache.xalan.transformer.TransformerImpl,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemApplyTemplates:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemCallTemplate:void execute(org.apache.xalan.transformer.TransformerImpl)"
        ]
    },
    "org.apache.xalan.transformer.KeyRefIterator:short filterNode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.KeyRefIterator:int getNextNode()"
        ]
    },
    "org.apache.xalan.transformer.KeyTable:java.util.Hashtable getRefsTable()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.KeyTable:org.apache.xpath.objects.XNodeSet getNodeSetDTMByKey(org.apache.xml.utils.QName,org.apache.xml.utils.XMLString)"
        ]
    },
    "org.apache.xalan.transformer.NodeSorter$NodeCompareElem:void <init>(org.apache.xalan.transformer.NodeSorter,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.NodeSorter:void sort(org.apache.xml.dtm.DTMIterator,java.util.Vector,org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xalan.transformer.NodeSorter:int compare(org.apache.xalan.transformer.NodeSorter$NodeCompareElem,org.apache.xalan.transformer.NodeSorter$NodeCompareElem,int,org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.NodeSorter:int compare(org.apache.xalan.transformer.NodeSorter$NodeCompareElem,org.apache.xalan.transformer.NodeSorter$NodeCompareElem,int,org.apache.xpath.XPathContext)",
            "org.apache.xalan.transformer.NodeSorter:void mergesort(java.util.Vector,java.util.Vector,int,int,org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.jaxp.XPathImpl:org.apache.xpath.objects.XObject eval(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.jaxp.XPathImpl:java.lang.Object evaluate(java.lang.String,java.lang.Object,javax.xml.namespace.QName)",
            "org.apache.xpath.jaxp.XPathImpl:java.lang.Object evaluate(java.lang.String,org.xml.sax.InputSource,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.xpath.CachedXPathAPI:org.apache.xpath.objects.XObject eval(org.w3c.dom.Node,java.lang.String,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.CachedXPathAPI:org.w3c.dom.traversal.NodeIterator selectNodeIterator(org.w3c.dom.Node,java.lang.String,org.w3c.dom.Node)",
            "org.apache.xpath.CachedXPathAPI:org.w3c.dom.NodeList selectNodeList(org.w3c.dom.Node,java.lang.String,org.w3c.dom.Node)",
            "org.apache.xpath.CachedXPathAPI:org.apache.xpath.objects.XObject eval(org.w3c.dom.Node,java.lang.String)"
        ]
    },
    "org.apache.xpath.CachedXPathAPI:org.apache.xpath.objects.XObject eval(org.w3c.dom.Node,java.lang.String,org.apache.xml.utils.PrefixResolver)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xpath.XPath:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,org.w3c.dom.Node,org.apache.xml.utils.PrefixResolver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.ExsltDynamic:org.apache.xpath.objects.XObject evaluate(org.apache.xalan.extensions.ExpressionContext,java.lang.String)",
            "org.apache.xalan.lib.Redirect:java.lang.String getFilename(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)",
            "org.apache.xpath.domapi.XPathExpressionImpl:java.lang.Object evaluate(org.w3c.dom.Node,short,java.lang.Object)",
            "org.apache.xpath.jaxp.XPathExpressionImpl:org.apache.xpath.objects.XObject eval(java.lang.Object)",
            "org.apache.xpath.jaxp.XPathImpl:org.apache.xpath.objects.XObject eval(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.xpath.XPathAPI:org.apache.xpath.objects.XObject eval(org.w3c.dom.Node,java.lang.String,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.XPathAPI:org.w3c.dom.traversal.NodeIterator selectNodeIterator(org.w3c.dom.Node,java.lang.String,org.w3c.dom.Node)",
            "org.apache.xpath.XPathAPI:org.w3c.dom.NodeList selectNodeList(org.w3c.dom.Node,java.lang.String,org.w3c.dom.Node)",
            "org.apache.xpath.XPathAPI:org.apache.xpath.objects.XObject eval(org.w3c.dom.Node,java.lang.String)"
        ]
    },
    "org.apache.xpath.XPathAPI:org.apache.xpath.objects.XObject eval(org.w3c.dom.Node,java.lang.String,org.apache.xml.utils.PrefixResolver)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.templates.ElemNumber:int findAncestor(org.apache.xpath.XPathContext,org.apache.xpath.XPath,org.apache.xpath.XPath,int,org.apache.xalan.templates.ElemNumber)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemNumber:int getTargetNode(org.apache.xpath.XPathContext,int)"
        ]
    },
    "org.apache.xalan.templates.ElemNumber:int findPrecedingOrAncestorOrSelf(org.apache.xpath.XPathContext,org.apache.xpath.XPath,org.apache.xpath.XPath,int,org.apache.xalan.templates.ElemNumber)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemNumber:int getTargetNode(org.apache.xpath.XPathContext,int)"
        ]
    },
    "org.apache.xalan.templates.ElemNumber:int getPreviousNode(org.apache.xpath.XPathContext,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.CountersTable:int countNode(org.apache.xpath.XPathContext,org.apache.xalan.templates.ElemNumber,int)"
        ]
    },
    "org.apache.xalan.templates.ElemNumber:org.apache.xml.utils.NodeVector getMatchingAncestors(org.apache.xpath.XPathContext,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemNumber:java.lang.String getCountString(org.apache.xalan.transformer.TransformerImpl,int)"
        ]
    },
    "org.apache.xalan.transformer.KeyIterator:short acceptNode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.BasicTestIterator:int nextNode()"
        ]
    },
    "org.apache.xalan.processor.ProcessorAttributeSet:void startElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.StylesheetHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xalan.processor.ProcessorDecimalFormat:void startElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.StylesheetHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xalan.processor.ProcessorInclude:void startElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.StylesheetHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xalan.processor.ProcessorLRE:void startElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.StylesheetHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xalan.processor.ProcessorNamespaceAlias:void startElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.StylesheetHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xalan.processor.ProcessorOutputElem:void startElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.StylesheetHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xalan.processor.ProcessorPreserveSpace:void startElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.StylesheetHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xalan.processor.ProcessorStripSpace:void startElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.StylesheetHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xalan.processor.ProcessorStylesheetElement:void startElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.StylesheetHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xalan.processor.ProcessorTemplateElem:void startElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.ProcessorExsltFuncResult:void startElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.processor.ProcessorExsltFunction:void startElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.processor.StylesheetHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xalan.transformer.TransformerImpl:void transform(javax.xml.transform.Source)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.transformer.TransformerImpl:void transform(javax.xml.transform.Source,javax.xml.transform.Result,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerImpl:void transform(javax.xml.transform.Source,javax.xml.transform.Result)"
        ]
    },
    "org.apache.xalan.transformer.TransformerHandlerImpl:void endDocument()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.Redirect:void write(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)",
            "org.apache.xalan.lib.Redirect:void close(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)",
            "org.apache.xalan.transformer.TransformerHandlerImpl:void endDocument()",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void endDocument()",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse()",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void endDocument()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void endDocument()",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void endDocument()",
            "org.apache.xml.serializer.ToTextSAXHandler:void endDocument()",
            "org.apache.xml.serializer.ToXMLSAXHandler:void endDocument()",
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)"
        ]
    },
    "org.apache.xalan.templates.ElemApplyTemplates:void execute(org.apache.xalan.transformer.TransformerImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemApplyTemplates:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.TransformerImpl:void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement,boolean)"
        ]
    },
    "org.apache.xalan.templates.ElemCopy:void execute(org.apache.xalan.transformer.TransformerImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemApplyTemplates:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.TransformerImpl:void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement,boolean)"
        ]
    },
    "org.apache.xalan.templates.ElemElement:void constructNode(java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.transformer.TransformerImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemElement:void execute(org.apache.xalan.transformer.TransformerImpl)"
        ]
    },
    "org.apache.xalan.templates.ElemExsltFunction:void execute(org.apache.xalan.transformer.TransformerImpl,org.apache.xpath.objects.XObject[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.ExtensionHandlerExsltFunction:java.lang.Object callFunction(org.apache.xpath.functions.FuncExtFunction,java.util.Vector,org.apache.xalan.extensions.ExpressionContext)"
        ]
    },
    "org.apache.xalan.templates.ElemFallback:void executeFallback(org.apache.xalan.transformer.TransformerImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemExtensionCall:void executeFallbacks(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemUnknown:void executeFallbacks(org.apache.xalan.transformer.TransformerImpl)"
        ]
    },
    "org.apache.xalan.templates.ElemLiteralResult:void execute(org.apache.xalan.transformer.TransformerImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemApplyTemplates:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.TransformerImpl:void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement,boolean)"
        ]
    },
    "org.apache.xalan.templates.ElemTemplate:void execute(org.apache.xalan.transformer.TransformerImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemApplyTemplates:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemCallTemplate:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.TransformerImpl:void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement,boolean)"
        ]
    },
    "org.apache.xalan.transformer.TransformerImpl:int transformToRTF(org.apache.xalan.templates.ElemTemplateElement,org.apache.xml.dtm.DTM)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerImpl:int transformToRTF(org.apache.xalan.templates.ElemTemplateElement)",
            "org.apache.xalan.transformer.TransformerImpl:int transformToGlobalRTF(org.apache.xalan.templates.ElemTemplateElement)"
        ]
    },
    "org.apache.xalan.transformer.TransformerImpl:java.lang.String transformToString(org.apache.xalan.templates.ElemTemplateElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemAttribute:void constructNode(java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemComment:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemMessage:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemPI:void execute(org.apache.xalan.transformer.TransformerImpl)"
        ]
    },
    "org.apache.xalan.transformer.TransformerImpl:boolean applyTemplateToNode(org.apache.xalan.templates.ElemTemplateElement,org.apache.xalan.templates.ElemTemplate,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemApplyImport:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.TransformerImpl:void transformNode(int)"
        ]
    },
    "org.apache.xalan.transformer.TransformerImpl:void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement,org.xml.sax.ContentHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerImpl:void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement,org.w3c.dom.Node,org.apache.xml.utils.QName,org.xml.sax.ContentHandler)"
        ]
    },
    "org.apache.xalan.transformer.TransformerImpl:void executeFromSnapshot(org.apache.xalan.transformer.TransformSnapshot)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xpath.VariableStack:org.apache.xpath.objects.XObject getVariableOrParam(org.apache.xpath.XPathContext,org.apache.xml.utils.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.operations.Variable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,boolean)",
            "org.apache.xpath.XPathContext$XPathExpressionContext:org.apache.xpath.objects.XObject getVariableOrParam(org.apache.xml.utils.QName)"
        ]
    },
    "org.apache.xpath.operations.Variable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.operations.Equals:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Operation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Variable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.VariableSafeAbsRef:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,boolean)"
        ]
    },
    "org.apache.xpath.axes.LocPathIterator:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemValueOf:void execute(org.apache.xalan.transformer.TransformerImpl)"
        ]
    },
    "org.apache.xpath.axes.LocPathIterator:int asNode(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.DescendantIterator:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.LocPathIterator:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:int getArg0AsNode(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.axes.NodeSequence:void setRoot(int,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.transformer.KeyTable:void <init>(int,org.apache.xml.utils.PrefixResolver,org.apache.xml.utils.QName,java.util.Vector,org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.LocPathIterator:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.LocPathIterator:org.apache.xml.dtm.DTMIterator asIterator(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.axes.LocPathIterator:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.NodeSequence:void <init>(org.apache.xml.dtm.DTMIterator,int,org.apache.xpath.XPathContext,boolean)",
            "org.apache.xpath.axes.NodeSequence:void setRoot(int,java.lang.Object)"
        ]
    },
    "org.apache.xpath.axes.AxesWalker:int nextNode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.AxesWalker:int getLastPos(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.ReverseAxesWalker:int getProximityPosition(int)",
            "org.apache.xpath.axes.ReverseAxesWalker:int getLastPos(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.WalkingIterator:int nextNode()"
        ]
    },
    "org.apache.xpath.axes.WalkingIterator:void reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.objects.XNodeSet:boolean compare(org.apache.xpath.objects.XObject,org.apache.xpath.objects.Comparator)"
        ]
    },
    "org.apache.xpath.axes.WalkingIterator:void setRoot(int,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.LocPathIterator:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.axes.LocPathIterator:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.NodeSequence:void setRoot(int,java.lang.Object)"
        ]
    },
    "org.apache.xpath.axes.BasicTestIterator:int nextNode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.MethodResolver:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.xalan.extensions.XSLProcessorContext:void outputToResultTree(org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.templates.ElemApplyTemplates:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemCopyOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.trace.PrintTraceListener:void selected(org.apache.xalan.trace.SelectionEvent)",
            "org.apache.xalan.transformer.KeyRefIterator:int getNextNode()",
            "org.apache.xalan.transformer.KeyRefIterator:short filterNode(int)",
            "org.apache.xalan.transformer.KeyTable:java.util.Hashtable getRefsTable()",
            "org.apache.xalan.transformer.NodeSorter$NodeCompareElem:void <init>(org.apache.xalan.transformer.NodeSorter,int)",
            "org.apache.xml.dtm.ref.DTMNodeIterator:org.w3c.dom.Node nextNode()",
            "org.apache.xpath.axes.LocPathIterator:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.axes.LocPathIterator:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.LocPathIterator:int getLength()",
            "org.apache.xpath.axes.LocPathIterator:void runTo(int)",
            "org.apache.xpath.axes.NodeSequence:int nextNode()",
            "org.apache.xpath.axes.OneStepIterator:int getProximityPosition(int)",
            "org.apache.xpath.axes.OneStepIterator:int getLength()",
            "org.apache.xpath.axes.UnionPathIterator:void setRoot(int,java.lang.Object)",
            "org.apache.xpath.axes.UnionPathIterator:void addIterator(org.apache.xml.dtm.DTMIterator)",
            "org.apache.xpath.axes.UnionPathIterator:int nextNode()",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncPosition:int getPositionInContextNodeList(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSum:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XNodeSet:boolean compare(org.apache.xpath.objects.XObject,org.apache.xpath.objects.Comparator)",
            "org.apache.xpath.patterns.FunctionPattern:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.patterns.FunctionPattern:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.patterns.FunctionPattern:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.NodeSetDTM:void addNodes(org.apache.xml.dtm.DTMIterator)",
            "org.apache.xpath.NodeSetDTM:void addNodesInDocOrder(org.apache.xml.dtm.DTMIterator,org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.axes.DescendantIterator:int nextNode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.MethodResolver:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.xalan.extensions.XSLProcessorContext:void outputToResultTree(org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.templates.ElemApplyTemplates:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemCopyOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.trace.PrintTraceListener:void selected(org.apache.xalan.trace.SelectionEvent)",
            "org.apache.xalan.transformer.KeyRefIterator:int getNextNode()",
            "org.apache.xalan.transformer.KeyRefIterator:short filterNode(int)",
            "org.apache.xalan.transformer.KeyTable:java.util.Hashtable getRefsTable()",
            "org.apache.xalan.transformer.NodeSorter$NodeCompareElem:void <init>(org.apache.xalan.transformer.NodeSorter,int)",
            "org.apache.xml.dtm.ref.DTMNodeIterator:org.w3c.dom.Node nextNode()",
            "org.apache.xpath.axes.LocPathIterator:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.axes.LocPathIterator:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.LocPathIterator:int getLength()",
            "org.apache.xpath.axes.LocPathIterator:void runTo(int)",
            "org.apache.xpath.axes.NodeSequence:int nextNode()",
            "org.apache.xpath.axes.UnionPathIterator:void setRoot(int,java.lang.Object)",
            "org.apache.xpath.axes.UnionPathIterator:void addIterator(org.apache.xml.dtm.DTMIterator)",
            "org.apache.xpath.axes.UnionPathIterator:int nextNode()",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncPosition:int getPositionInContextNodeList(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSum:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XNodeSet:boolean compare(org.apache.xpath.objects.XObject,org.apache.xpath.objects.Comparator)",
            "org.apache.xpath.patterns.FunctionPattern:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.patterns.FunctionPattern:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.patterns.FunctionPattern:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.NodeSetDTM:void addNodes(org.apache.xml.dtm.DTMIterator)",
            "org.apache.xpath.NodeSetDTM:void addNodesInDocOrder(org.apache.xml.dtm.DTMIterator,org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.functions.FuncNormalizeSpace:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemValueOf:void execute(org.apache.xalan.transformer.TransformerImpl)"
        ]
    },
    "org.apache.xpath.functions.FuncPosition:int getPositionInContextNodeList(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.functions.FuncPosition:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.functions.FuncLast:int getCountOfContextNodeList(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.functions.FuncLast:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xalan.templates.TemplateList:org.apache.xalan.templates.ElemTemplate getTemplateFast(org.apache.xpath.XPathContext,int,int,org.apache.xml.utils.QName,int,boolean,org.apache.xml.dtm.DTM)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemApplyTemplates:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)"
        ]
    },
    "org.apache.xpath.patterns.StepPattern:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.TemplateList:org.apache.xalan.templates.ElemTemplate getTemplate(org.apache.xpath.XPathContext,int,org.apache.xml.utils.QName,boolean,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.templates.TemplateList:org.apache.xalan.templates.ElemTemplate getTemplate(org.apache.xpath.XPathContext,int,org.apache.xml.utils.QName,int,int,boolean,org.apache.xml.dtm.DTM)",
            "org.apache.xpath.patterns.NodeTest:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.StepPattern:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.functions.FuncDoclocation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemValueOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncFormatNumb:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.XUnresolvedVariableSimple:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:org.apache.xpath.objects.XNodeSet executeFilterExpr(int,org.apache.xpath.XPathContext,org.apache.xml.utils.PrefixResolver,boolean,int,org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean executePredicates(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncBoolean:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncCeiling:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncConcat:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncContains:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtElementAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunction:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunctionAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncFloor:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncNot:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncRound:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncStartsWith:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstring:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringAfter:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringBefore:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSystemProperty:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncTranslate:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncUnparsedEntityURI:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:org.apache.xml.utils.XMLString getArg0AsString(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:double getArg0AsNumber(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.And:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Or:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.UnaryOperation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:boolean executePredicates(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,boolean)",
            "org.apache.xpath.Expression:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.utils.XMLString xstr(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIterator(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIteratorRaw(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.XPath:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPath:double getMatchScore(org.apache.xpath.XPathContext,int)"
        ]
    },
    "org.apache.xpath.functions.FuncGenerateId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemValueOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncFormatNumb:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.XUnresolvedVariableSimple:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:org.apache.xpath.objects.XNodeSet executeFilterExpr(int,org.apache.xpath.XPathContext,org.apache.xml.utils.PrefixResolver,boolean,int,org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean executePredicates(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncBoolean:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncCeiling:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncConcat:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncContains:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtElementAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunction:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunctionAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncFloor:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncNot:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncRound:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncStartsWith:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstring:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringAfter:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringBefore:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSystemProperty:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncTranslate:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncUnparsedEntityURI:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:org.apache.xml.utils.XMLString getArg0AsString(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:double getArg0AsNumber(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.And:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Or:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.UnaryOperation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:boolean executePredicates(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,boolean)",
            "org.apache.xpath.Expression:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.utils.XMLString xstr(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIterator(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIteratorRaw(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.XPath:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPath:double getMatchScore(org.apache.xpath.XPathContext,int)"
        ]
    },
    "org.apache.xpath.functions.FuncLocalPart:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemValueOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncFormatNumb:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.XUnresolvedVariableSimple:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:org.apache.xpath.objects.XNodeSet executeFilterExpr(int,org.apache.xpath.XPathContext,org.apache.xml.utils.PrefixResolver,boolean,int,org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean executePredicates(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncBoolean:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncCeiling:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncConcat:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncContains:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtElementAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunction:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunctionAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncFloor:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncNot:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncRound:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncStartsWith:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstring:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringAfter:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringBefore:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSystemProperty:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncTranslate:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncUnparsedEntityURI:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:org.apache.xml.utils.XMLString getArg0AsString(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:double getArg0AsNumber(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.And:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Or:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.UnaryOperation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:boolean executePredicates(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,boolean)",
            "org.apache.xpath.Expression:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.utils.XMLString xstr(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIterator(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIteratorRaw(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.XPath:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPath:double getMatchScore(org.apache.xpath.XPathContext,int)"
        ]
    },
    "org.apache.xpath.functions.FuncNamespace:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemValueOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncFormatNumb:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.XUnresolvedVariableSimple:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:org.apache.xpath.objects.XNodeSet executeFilterExpr(int,org.apache.xpath.XPathContext,org.apache.xml.utils.PrefixResolver,boolean,int,org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean executePredicates(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncBoolean:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncCeiling:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncConcat:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncContains:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtElementAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunction:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunctionAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncFloor:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncNot:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncRound:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncStartsWith:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstring:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringAfter:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringBefore:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSystemProperty:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncTranslate:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncUnparsedEntityURI:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:org.apache.xml.utils.XMLString getArg0AsString(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:double getArg0AsNumber(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.And:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Or:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.UnaryOperation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:boolean executePredicates(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,boolean)",
            "org.apache.xpath.Expression:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.utils.XMLString xstr(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIterator(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIteratorRaw(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.XPath:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPath:double getMatchScore(org.apache.xpath.XPathContext,int)"
        ]
    },
    "org.apache.xpath.functions.FuncQname:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemValueOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncFormatNumb:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.XUnresolvedVariableSimple:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:org.apache.xpath.objects.XNodeSet executeFilterExpr(int,org.apache.xpath.XPathContext,org.apache.xml.utils.PrefixResolver,boolean,int,org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean executePredicates(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncBoolean:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncCeiling:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncConcat:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncContains:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtElementAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunction:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunctionAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncFloor:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncNot:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncRound:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncStartsWith:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstring:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringAfter:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringBefore:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSystemProperty:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncTranslate:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncUnparsedEntityURI:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:org.apache.xml.utils.XMLString getArg0AsString(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:double getArg0AsNumber(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.And:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Or:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.UnaryOperation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:boolean executePredicates(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,boolean)",
            "org.apache.xpath.Expression:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.utils.XMLString xstr(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIterator(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIteratorRaw(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.XPath:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPath:double getMatchScore(org.apache.xpath.XPathContext,int)"
        ]
    },
    "org.apache.xpath.operations.Variable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemValueOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncFormatNumb:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.XUnresolvedVariableSimple:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:org.apache.xpath.objects.XNodeSet executeFilterExpr(int,org.apache.xpath.XPathContext,org.apache.xml.utils.PrefixResolver,boolean,int,org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean executePredicates(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncBoolean:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncCeiling:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncConcat:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncContains:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtElementAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunction:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunctionAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncFloor:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncNot:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncRound:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncStartsWith:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstring:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringAfter:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringBefore:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSystemProperty:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncTranslate:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncUnparsedEntityURI:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:org.apache.xml.utils.XMLString getArg0AsString(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:double getArg0AsNumber(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.And:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Or:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.UnaryOperation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:boolean executePredicates(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,boolean)",
            "org.apache.xpath.Expression:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.utils.XMLString xstr(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIterator(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIteratorRaw(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.XPath:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPath:double getMatchScore(org.apache.xpath.XPathContext,int)"
        ]
    },
    "org.apache.xalan.templates.TemplateList:org.apache.xalan.templates.ElemTemplate getTemplate(org.apache.xpath.XPathContext,int,org.apache.xml.utils.QName,boolean,org.apache.xml.dtm.DTM)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.StylesheetRoot:org.apache.xalan.templates.ElemTemplate getTemplateComposed(org.apache.xpath.XPathContext,int,org.apache.xml.utils.QName,boolean,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.templates.StylesheetRoot:org.apache.xalan.templates.WhiteSpaceInfo getWhiteSpaceInfo(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.templates.StylesheetRoot:boolean shouldStripWhiteSpace(org.apache.xpath.XPathContext,int)"
        ]
    },
    "org.apache.xalan.templates.TemplateList:org.apache.xalan.templates.ElemTemplate getTemplate(org.apache.xpath.XPathContext,int,org.apache.xml.utils.QName,int,int,boolean,org.apache.xml.dtm.DTM)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.StylesheetRoot:org.apache.xalan.templates.ElemTemplate getTemplateComposed(org.apache.xpath.XPathContext,int,org.apache.xml.utils.QName,int,int,boolean,org.apache.xml.dtm.DTM)"
        ]
    },
    "org.apache.xpath.patterns.NodeTest:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemValueOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncFormatNumb:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.XUnresolvedVariableSimple:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:org.apache.xpath.objects.XNodeSet executeFilterExpr(int,org.apache.xpath.XPathContext,org.apache.xml.utils.PrefixResolver,boolean,int,org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean executePredicates(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncBoolean:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncCeiling:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncConcat:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncContains:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtElementAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunction:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunctionAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncFloor:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncNot:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncRound:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncStartsWith:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstring:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringAfter:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringBefore:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSystemProperty:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncTranslate:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncUnparsedEntityURI:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:org.apache.xml.utils.XMLString getArg0AsString(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:double getArg0AsNumber(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.And:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Or:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.UnaryOperation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:boolean executePredicates(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,boolean)",
            "org.apache.xpath.Expression:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.utils.XMLString xstr(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIterator(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIteratorRaw(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.XPath:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPath:double getMatchScore(org.apache.xpath.XPathContext,int)"
        ]
    },
    "org.apache.xpath.patterns.StepPattern:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemValueOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncFormatNumb:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.XUnresolvedVariableSimple:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:org.apache.xpath.objects.XNodeSet executeFilterExpr(int,org.apache.xpath.XPathContext,org.apache.xml.utils.PrefixResolver,boolean,int,org.apache.xpath.Expression)",
            "org.apache.xpath.axes.MatchPatternIterator:short acceptNode(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean executePredicates(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncBoolean:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncCeiling:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncConcat:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncContains:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtElementAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunction:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunctionAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncFloor:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncNot:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncRound:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncStartsWith:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstring:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringAfter:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringBefore:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSystemProperty:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncTranslate:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncUnparsedEntityURI:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:org.apache.xml.utils.XMLString getArg0AsString(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:double getArg0AsNumber(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.And:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Or:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.UnaryOperation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.StepPattern:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:org.apache.xpath.objects.XObject executeRelativePathPattern(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.patterns.StepPattern:boolean executePredicates(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.patterns.StepPattern:double getMatchScore(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.patterns.UnionPattern:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,boolean)",
            "org.apache.xpath.Expression:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.utils.XMLString xstr(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIterator(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIteratorRaw(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.XPath:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPath:double getMatchScore(org.apache.xpath.XPathContext,int)"
        ]
    },
    "org.apache.xpath.axes.MatchPatternIterator:short acceptNode(int,org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.MatchPatternIterator:int nextNode()"
        ]
    },
    "org.apache.xpath.patterns.StepPattern:org.apache.xpath.objects.XObject executeRelativePathPattern(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.patterns.StepPattern:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)"
        ]
    },
    "org.apache.xpath.patterns.StepPattern:double getMatchScore(org.apache.xpath.XPathContext,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.TemplateSubPatternAssociation:boolean matches(org.apache.xpath.XPathContext,int,org.apache.xml.utils.QName)"
        ]
    },
    "org.apache.xpath.patterns.UnionPattern:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemValueOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncFormatNumb:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.XUnresolvedVariableSimple:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:org.apache.xpath.objects.XNodeSet executeFilterExpr(int,org.apache.xpath.XPathContext,org.apache.xml.utils.PrefixResolver,boolean,int,org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean executePredicates(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncBoolean:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncCeiling:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncConcat:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncContains:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtElementAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunction:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunctionAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncFloor:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncNot:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncRound:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncStartsWith:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstring:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringAfter:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringBefore:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSystemProperty:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncTranslate:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncUnparsedEntityURI:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:org.apache.xml.utils.XMLString getArg0AsString(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:double getArg0AsNumber(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.And:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Or:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.UnaryOperation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:boolean executePredicates(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,boolean)",
            "org.apache.xpath.Expression:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.utils.XMLString xstr(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIterator(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIteratorRaw(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.XPath:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPath:double getMatchScore(org.apache.xpath.XPathContext,int)"
        ]
    },
    "org.apache.xalan.templates.AVT:java.lang.String evaluate(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.PipeDocument:void pipeDocument(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)",
            "org.apache.xalan.templates.ElemElement:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemExtensionCall:java.lang.String getAttribute(java.lang.String,org.w3c.dom.Node,org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemLiteralResult:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemNumber:java.util.Locale getLocale(org.apache.xalan.transformer.TransformerImpl,int)",
            "org.apache.xalan.templates.ElemNumber:java.text.DecimalFormat getNumberFormatter(org.apache.xalan.transformer.TransformerImpl,int)",
            "org.apache.xalan.templates.ElemNumber:java.lang.String formatNumberList(org.apache.xalan.transformer.TransformerImpl,long[],int)",
            "org.apache.xalan.templates.ElemNumber:void getFormattedNumber(org.apache.xalan.transformer.TransformerImpl,int,char,int,long,org.apache.xml.utils.FastStringBuffer)",
            "org.apache.xalan.templates.ElemPI:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.TransformerImpl:java.util.Vector processSortKeys(org.apache.xalan.templates.ElemForEach,int)"
        ]
    },
    "org.apache.xalan.templates.ElemNumber:void execute(org.apache.xalan.transformer.TransformerImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemApplyTemplates:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.TransformerImpl:void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement,boolean)"
        ]
    },
    "org.apache.xalan.templates.ElemExsltFuncResult:void execute(org.apache.xalan.transformer.TransformerImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemApplyTemplates:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.TransformerImpl:void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement,boolean)"
        ]
    },
    "org.apache.xalan.templates.ElemParam:void execute(org.apache.xalan.transformer.TransformerImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemApplyTemplates:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.TransformerImpl:void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement,boolean)"
        ]
    },
    "org.apache.xalan.templates.ElemVariable:void execute(org.apache.xalan.transformer.TransformerImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemApplyTemplates:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.TransformerImpl:void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement,boolean)"
        ]
    },
    "org.apache.xalan.templates.XUnresolvedVariable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemValueOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncFormatNumb:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.XUnresolvedVariableSimple:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:org.apache.xpath.objects.XNodeSet executeFilterExpr(int,org.apache.xpath.XPathContext,org.apache.xml.utils.PrefixResolver,boolean,int,org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean executePredicates(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncBoolean:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncCeiling:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncConcat:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncContains:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtElementAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunction:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunctionAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncFloor:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncNot:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncRound:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncStartsWith:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstring:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringAfter:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringBefore:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSystemProperty:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncTranslate:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncUnparsedEntityURI:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:org.apache.xml.utils.XMLString getArg0AsString(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:double getArg0AsNumber(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.And:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Or:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.UnaryOperation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:boolean executePredicates(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,boolean)",
            "org.apache.xpath.Expression:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.utils.XMLString xstr(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIterator(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIteratorRaw(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.VariableStack:org.apache.xpath.objects.XObject getLocalVariable(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.VariableStack:org.apache.xpath.objects.XObject getLocalVariable(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.VariableStack:org.apache.xpath.objects.XObject getGlobalVariable(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.VariableStack:org.apache.xpath.objects.XObject getGlobalVariable(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.XPath:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPath:double getMatchScore(org.apache.xpath.XPathContext,int)"
        ]
    },
    "org.apache.xalan.templates.ElemCallTemplate:void execute(org.apache.xalan.transformer.TransformerImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemApplyTemplates:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.TransformerImpl:void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement,boolean)"
        ]
    },
    "org.apache.xalan.transformer.KeyRefIterator:int getNextNode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.BasicTestIterator:int nextNode()"
        ]
    },
    "org.apache.xalan.transformer.KeyTable:org.apache.xpath.objects.XNodeSet getNodeSetDTMByKey(org.apache.xml.utils.QName,org.apache.xml.utils.XMLString)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.KeyManager:org.apache.xpath.objects.XNodeSet getNodeSetDTMByKey(org.apache.xpath.XPathContext,int,org.apache.xml.utils.QName,org.apache.xml.utils.XMLString,org.apache.xml.utils.PrefixResolver)"
        ]
    },
    "org.apache.xalan.transformer.NodeSorter:void sort(org.apache.xml.dtm.DTMIterator,java.util.Vector,org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:org.apache.xml.dtm.DTMIterator sortNodes(org.apache.xpath.XPathContext,java.util.Vector,org.apache.xml.dtm.DTMIterator)"
        ]
    },
    "org.apache.xalan.transformer.NodeSorter:void mergesort(java.util.Vector,java.util.Vector,int,int,org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.NodeSorter:void sort(org.apache.xml.dtm.DTMIterator,java.util.Vector,org.apache.xpath.XPathContext)",
            "org.apache.xalan.transformer.NodeSorter:void mergesort(java.util.Vector,java.util.Vector,int,int,org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.jaxp.XPathImpl:java.lang.Object evaluate(java.lang.String,java.lang.Object,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.jaxp.XPathImpl:java.lang.String evaluate(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.xpath.jaxp.XPathImpl:java.lang.Object evaluate(java.lang.String,org.xml.sax.InputSource,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.jaxp.XPathImpl:java.lang.String evaluate(java.lang.String,org.xml.sax.InputSource)"
        ]
    },
    "org.apache.xpath.CachedXPathAPI:org.w3c.dom.traversal.NodeIterator selectNodeIterator(org.w3c.dom.Node,java.lang.String,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.CachedXPathAPI:org.w3c.dom.Node selectSingleNode(org.w3c.dom.Node,java.lang.String,org.w3c.dom.Node)",
            "org.apache.xpath.CachedXPathAPI:org.w3c.dom.traversal.NodeIterator selectNodeIterator(org.w3c.dom.Node,java.lang.String)"
        ]
    },
    "org.apache.xpath.CachedXPathAPI:org.w3c.dom.NodeList selectNodeList(org.w3c.dom.Node,java.lang.String,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.CachedXPathAPI:org.w3c.dom.NodeList selectNodeList(org.w3c.dom.Node,java.lang.String)"
        ]
    },
    "org.apache.xpath.CachedXPathAPI:org.apache.xpath.objects.XObject eval(org.w3c.dom.Node,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.lib.ExsltDynamic:org.apache.xpath.objects.XObject evaluate(org.apache.xalan.extensions.ExpressionContext,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.Extensions:org.apache.xpath.objects.XObject evaluate(org.apache.xalan.extensions.ExpressionContext,java.lang.String)"
        ]
    },
    "org.apache.xalan.lib.Redirect:java.lang.String getFilename(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.Redirect:void open(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)",
            "org.apache.xalan.lib.Redirect:void write(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)",
            "org.apache.xalan.lib.Redirect:void close(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)"
        ]
    },
    "org.apache.xpath.domapi.XPathExpressionImpl:java.lang.Object evaluate(org.w3c.dom.Node,short,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.domapi.XPathEvaluatorImpl:java.lang.Object evaluate(java.lang.String,org.w3c.dom.Node,org.w3c.dom.xpath.XPathNSResolver,short,java.lang.Object)"
        ]
    },
    "org.apache.xpath.jaxp.XPathExpressionImpl:org.apache.xpath.objects.XObject eval(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.jaxp.XPathExpressionImpl:java.lang.Object eval(java.lang.Object,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.xpath.XPathAPI:org.w3c.dom.traversal.NodeIterator selectNodeIterator(org.w3c.dom.Node,java.lang.String,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.XPathAPI:org.w3c.dom.Node selectSingleNode(org.w3c.dom.Node,java.lang.String,org.w3c.dom.Node)",
            "org.apache.xpath.XPathAPI:org.w3c.dom.traversal.NodeIterator selectNodeIterator(org.w3c.dom.Node,java.lang.String)"
        ]
    },
    "org.apache.xpath.XPathAPI:org.w3c.dom.NodeList selectNodeList(org.w3c.dom.Node,java.lang.String,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.XPathAPI:org.w3c.dom.NodeList selectNodeList(org.w3c.dom.Node,java.lang.String)"
        ]
    },
    "org.apache.xpath.XPathAPI:org.apache.xpath.objects.XObject eval(org.w3c.dom.Node,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.templates.ElemNumber:int getTargetNode(org.apache.xpath.XPathContext,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.CountersTable:int countNode(org.apache.xpath.XPathContext,org.apache.xalan.templates.ElemNumber,int)"
        ]
    },
    "org.apache.xalan.transformer.CountersTable:int countNode(org.apache.xpath.XPathContext,org.apache.xalan.templates.ElemNumber,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemNumber:java.lang.String getCountString(org.apache.xalan.transformer.TransformerImpl,int)"
        ]
    },
    "org.apache.xalan.processor.StylesheetHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void closeStartTag()",
            "org.apache.xml.serializer.ToXMLSAXHandler:void closeStartTag()",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xalan.processor.ProcessorExsltFuncResult:void startElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.StylesheetHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xalan.processor.ProcessorExsltFunction:void startElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.StylesheetHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xalan.transformer.TransformerImpl:void transform(javax.xml.transform.Source,javax.xml.transform.Result)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.client.XSLTProcessorApplet:void start()",
            "org.apache.xalan.client.XSLTProcessorApplet:java.lang.String getSource()",
            "org.apache.xalan.client.XSLTProcessorApplet:java.lang.String processTransformation()",
            "org.apache.xalan.xslt.Process:void main(java.lang.String[])"
        ]
    },
    "org.apache.xalan.lib.Redirect:void write(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.lib.Redirect:void close(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.transformer.TransformerIdentityImpl:void endDocument()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.Redirect:void write(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)",
            "org.apache.xalan.lib.Redirect:void close(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)",
            "org.apache.xalan.transformer.TransformerHandlerImpl:void endDocument()",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void transform(javax.xml.transform.Source,javax.xml.transform.Result)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void endDocument()",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse()",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void endDocument()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void endDocument()",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void endDocument()",
            "org.apache.xml.serializer.ToTextSAXHandler:void endDocument()",
            "org.apache.xml.serializer.ToXMLSAXHandler:void endDocument()",
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)"
        ]
    },
    "org.apache.xalan.xsltc.trax.DOM2SAX:void parse()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.XSLTCDTMManager:org.apache.xml.dtm.DTM getDTM(javax.xml.transform.Source,boolean,org.apache.xml.dtm.DTMWSFilter,boolean,boolean,boolean,int,boolean,boolean)",
            "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:javax.xml.transform.Source getAssociatedStylesheet(javax.xml.transform.Source,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.xml.sax.InputSource)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse()",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void endDocument()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.Redirect:void write(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)",
            "org.apache.xalan.lib.Redirect:void close(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)",
            "org.apache.xalan.transformer.TransformerHandlerImpl:void endDocument()",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void endDocument()",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse()",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void endDocument()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void endDocument()",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void endDocument()",
            "org.apache.xml.serializer.ToTextSAXHandler:void endDocument()",
            "org.apache.xml.serializer.ToXMLSAXHandler:void endDocument()",
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TreeWalker2Result:void endNode(int)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void traverse(int)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void traverse(int,int)"
        ]
    },
    "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void endDocument()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.Redirect:void write(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)",
            "org.apache.xalan.lib.Redirect:void close(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)",
            "org.apache.xalan.transformer.TransformerHandlerImpl:void endDocument()",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void endDocument()",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse()",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void endDocument()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void endDocument()",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void endDocument()",
            "org.apache.xml.serializer.ToTextSAXHandler:void endDocument()",
            "org.apache.xml.serializer.ToXMLSAXHandler:void endDocument()",
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serializer.ToHTMLSAXHandler:void endDocument()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.Redirect:void write(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)",
            "org.apache.xalan.lib.Redirect:void close(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)",
            "org.apache.xalan.transformer.TransformerHandlerImpl:void endDocument()",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void endDocument()",
            "org.apache.xalan.transformer.TransformerImpl:void transform(javax.xml.transform.Source,boolean)",
            "org.apache.xalan.transformer.TransformerImpl:void transformNode(int)",
            "org.apache.xalan.transformer.TransformerImpl:int transformToRTF(org.apache.xalan.templates.ElemTemplateElement,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.transformer.TransformerImpl:java.lang.String transformToString(org.apache.xalan.templates.ElemTemplateElement)",
            "org.apache.xalan.xsltc.runtime.AbstractTranslet:void closeOutputHandler(org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse()",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse()",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void endDocument()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void endDocument()",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void endDocument()",
            "org.apache.xml.serializer.ToTextSAXHandler:void endDocument()",
            "org.apache.xml.serializer.ToUnknownStream:void endDocument()",
            "org.apache.xml.serializer.ToXMLSAXHandler:void endDocument()",
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serializer.ToTextSAXHandler:void endDocument()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.Redirect:void write(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)",
            "org.apache.xalan.lib.Redirect:void close(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)",
            "org.apache.xalan.transformer.TransformerHandlerImpl:void endDocument()",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void endDocument()",
            "org.apache.xalan.transformer.TransformerImpl:void transform(javax.xml.transform.Source,boolean)",
            "org.apache.xalan.transformer.TransformerImpl:void transformNode(int)",
            "org.apache.xalan.transformer.TransformerImpl:int transformToRTF(org.apache.xalan.templates.ElemTemplateElement,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.transformer.TransformerImpl:java.lang.String transformToString(org.apache.xalan.templates.ElemTemplateElement)",
            "org.apache.xalan.xsltc.runtime.AbstractTranslet:void closeOutputHandler(org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse()",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse()",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void endDocument()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void endDocument()",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void endDocument()",
            "org.apache.xml.serializer.ToTextSAXHandler:void endDocument()",
            "org.apache.xml.serializer.ToUnknownStream:void endDocument()",
            "org.apache.xml.serializer.ToXMLSAXHandler:void endDocument()",
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serializer.ToXMLSAXHandler:void endDocument()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.Redirect:void write(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)",
            "org.apache.xalan.lib.Redirect:void close(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)",
            "org.apache.xalan.transformer.TransformerHandlerImpl:void endDocument()",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void endDocument()",
            "org.apache.xalan.transformer.TransformerImpl:void transform(javax.xml.transform.Source,boolean)",
            "org.apache.xalan.transformer.TransformerImpl:void transformNode(int)",
            "org.apache.xalan.transformer.TransformerImpl:int transformToRTF(org.apache.xalan.templates.ElemTemplateElement,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.transformer.TransformerImpl:java.lang.String transformToString(org.apache.xalan.templates.ElemTemplateElement)",
            "org.apache.xalan.xsltc.runtime.AbstractTranslet:void closeOutputHandler(org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse()",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse()",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void endDocument()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void endDocument()",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void endDocument()",
            "org.apache.xml.serializer.ToTextSAXHandler:void endDocument()",
            "org.apache.xml.serializer.ToUnknownStream:void endDocument()",
            "org.apache.xml.serializer.ToXMLSAXHandler:void endDocument()",
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerIdentityImpl:void transform(javax.xml.transform.Source,javax.xml.transform.Result)",
            "org.apache.xml.serializer.ToStream:void serialize(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.ProcessorInclude:void parse(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.processor.TransformerFactoryImpl:javax.xml.transform.Templates processFromNode(org.w3c.dom.Node)",
            "org.apache.xalan.processor.TransformerFactoryImpl:javax.xml.transform.Source getAssociatedStylesheet(javax.xml.transform.Source,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:void dispatchToEvents(int,org.xml.sax.ContentHandler)"
        ]
    },
    "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.templates.ElemElement:void execute(org.apache.xalan.transformer.TransformerImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemApplyTemplates:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemAttribute:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.TransformerImpl:void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement,boolean)"
        ]
    },
    "org.apache.xalan.extensions.ExtensionHandlerExsltFunction:java.lang.Object callFunction(org.apache.xpath.functions.FuncExtFunction,java.util.Vector,org.apache.xalan.extensions.ExpressionContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.ExtensionsTable:java.lang.Object extFunction(org.apache.xpath.functions.FuncExtFunction,java.util.Vector,org.apache.xalan.extensions.ExpressionContext)"
        ]
    },
    "org.apache.xalan.templates.ElemExtensionCall:void executeFallbacks(org.apache.xalan.transformer.TransformerImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemExtensionCall:void execute(org.apache.xalan.transformer.TransformerImpl)"
        ]
    },
    "org.apache.xalan.templates.ElemUnknown:void executeFallbacks(org.apache.xalan.transformer.TransformerImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemUnknown:void execute(org.apache.xalan.transformer.TransformerImpl)"
        ]
    },
    "org.apache.xalan.transformer.TransformerImpl:int transformToRTF(org.apache.xalan.templates.ElemTemplateElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemVariable:org.apache.xpath.objects.XObject getValue(org.apache.xalan.transformer.TransformerImpl,int)",
            "org.apache.xalan.templates.ElemWithParam:org.apache.xpath.objects.XObject getValue(org.apache.xalan.transformer.TransformerImpl,int)"
        ]
    },
    "org.apache.xalan.transformer.TransformerImpl:int transformToGlobalRTF(org.apache.xalan.templates.ElemTemplateElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemVariable:org.apache.xpath.objects.XObject getValue(org.apache.xalan.transformer.TransformerImpl,int)"
        ]
    },
    "org.apache.xalan.templates.ElemAttribute:void constructNode(java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.transformer.TransformerImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemElement:void execute(org.apache.xalan.transformer.TransformerImpl)"
        ]
    },
    "org.apache.xalan.templates.ElemComment:void execute(org.apache.xalan.transformer.TransformerImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemApplyTemplates:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.TransformerImpl:void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement,boolean)"
        ]
    },
    "org.apache.xalan.templates.ElemMessage:void execute(org.apache.xalan.transformer.TransformerImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemApplyTemplates:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.TransformerImpl:void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement,boolean)"
        ]
    },
    "org.apache.xalan.templates.ElemPI:void execute(org.apache.xalan.transformer.TransformerImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemApplyTemplates:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.TransformerImpl:void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement,boolean)"
        ]
    },
    "org.apache.xalan.templates.ElemApplyImport:void execute(org.apache.xalan.transformer.TransformerImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemApplyTemplates:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.TransformerImpl:void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement,boolean)"
        ]
    },
    "org.apache.xalan.transformer.TransformerImpl:void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement,org.w3c.dom.Node,org.apache.xml.utils.QName,org.xml.sax.ContentHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.Redirect:void write(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)"
        ]
    },
    "org.apache.xpath.XPathContext$XPathExpressionContext:org.apache.xpath.objects.XObject getVariableOrParam(org.apache.xml.utils.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.SQLQueryParser:void populateStatement(java.sql.PreparedStatement,org.apache.xalan.extensions.ExpressionContext)"
        ]
    },
    "org.apache.xpath.axes.DescendantIterator:int asNode(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.LocPathIterator:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:int getArg0AsNode(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.axes.LocPathIterator:boolean bool(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.operations.And:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Bool:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Or:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.XPath:boolean bool(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)"
        ]
    },
    "org.apache.xalan.transformer.KeyTable:void <init>(int,org.apache.xml.utils.PrefixResolver,org.apache.xml.utils.QName,java.util.Vector,org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.KeyManager:org.apache.xpath.objects.XNodeSet getNodeSetDTMByKey(org.apache.xpath.XPathContext,int,org.apache.xml.utils.QName,org.apache.xml.utils.XMLString,org.apache.xml.utils.PrefixResolver)"
        ]
    },
    "org.apache.xpath.axes.LocPathIterator:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemValueOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncFormatNumb:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.XUnresolvedVariableSimple:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:org.apache.xpath.objects.XNodeSet executeFilterExpr(int,org.apache.xpath.XPathContext,org.apache.xml.utils.PrefixResolver,boolean,int,org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean executePredicates(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncBoolean:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncCeiling:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncConcat:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncContains:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtElementAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunction:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunctionAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncFloor:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncNot:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncRound:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncStartsWith:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstring:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringAfter:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringBefore:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSystemProperty:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncTranslate:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncUnparsedEntityURI:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:org.apache.xml.utils.XMLString getArg0AsString(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:double getArg0AsNumber(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.And:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Or:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.UnaryOperation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:boolean executePredicates(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,boolean)",
            "org.apache.xpath.Expression:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.utils.XMLString xstr(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIterator(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIteratorRaw(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.XPath:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPath:double getMatchScore(org.apache.xpath.XPathContext,int)"
        ]
    },
    "org.apache.xpath.axes.LocPathIterator:org.apache.xml.dtm.DTMIterator asIterator(org.apache.xpath.XPathContext,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemApplyTemplates:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xpath.axes.UnionPathIterator:void setRoot(int,java.lang.Object)",
            "org.apache.xpath.functions.FuncCount:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSum:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.VariableSafeAbsRef:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,boolean)",
            "org.apache.xpath.patterns.FunctionPattern:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.patterns.FunctionPattern:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.patterns.FunctionPattern:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.axes.NodeSequence:void <init>(org.apache.xml.dtm.DTMIterator,int,org.apache.xpath.XPathContext,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xpath.axes.AxesWalker:int getLastPos(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.functions.FuncLast:int getCountOfContextNodeList(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.axes.ReverseAxesWalker:int getProximityPosition(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.PredicatedNodeTest:int getProximityPosition()",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean executePredicates(int,org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.axes.ReverseAxesWalker:int getLastPos(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.functions.FuncLast:int getCountOfContextNodeList(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.axes.WalkingIterator:int nextNode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.MethodResolver:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.xalan.extensions.XSLProcessorContext:void outputToResultTree(org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.templates.ElemApplyTemplates:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemCopyOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.trace.PrintTraceListener:void selected(org.apache.xalan.trace.SelectionEvent)",
            "org.apache.xalan.transformer.KeyRefIterator:int getNextNode()",
            "org.apache.xalan.transformer.KeyRefIterator:short filterNode(int)",
            "org.apache.xalan.transformer.KeyTable:java.util.Hashtable getRefsTable()",
            "org.apache.xalan.transformer.NodeSorter$NodeCompareElem:void <init>(org.apache.xalan.transformer.NodeSorter,int)",
            "org.apache.xml.dtm.ref.DTMNodeIterator:org.w3c.dom.Node nextNode()",
            "org.apache.xpath.axes.LocPathIterator:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.axes.LocPathIterator:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.LocPathIterator:int getLength()",
            "org.apache.xpath.axes.LocPathIterator:void runTo(int)",
            "org.apache.xpath.axes.NodeSequence:int nextNode()",
            "org.apache.xpath.axes.UnionPathIterator:void setRoot(int,java.lang.Object)",
            "org.apache.xpath.axes.UnionPathIterator:void addIterator(org.apache.xml.dtm.DTMIterator)",
            "org.apache.xpath.axes.UnionPathIterator:int nextNode()",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncPosition:int getPositionInContextNodeList(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSum:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XNodeSet:boolean compare(org.apache.xpath.objects.XObject,org.apache.xpath.objects.Comparator)",
            "org.apache.xpath.patterns.FunctionPattern:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.patterns.FunctionPattern:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.patterns.FunctionPattern:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.NodeSetDTM:void addNodes(org.apache.xml.dtm.DTMIterator)",
            "org.apache.xpath.NodeSetDTM:void addNodesInDocOrder(org.apache.xml.dtm.DTMIterator,org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.objects.XNodeSet:boolean compare(org.apache.xpath.objects.XObject,org.apache.xpath.objects.Comparator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.objects.XNodeSet:boolean lessThan(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XNodeSet:boolean lessThanOrEqual(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XNodeSet:boolean greaterThan(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XNodeSet:boolean greaterThanOrEqual(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XNodeSet:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XNodeSet:boolean notEquals(org.apache.xpath.objects.XObject)"
        ]
    },
    "org.apache.xalan.extensions.MethodResolver:java.lang.Object convert(java.lang.Object,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.MethodResolver:void convertParams(java.lang.Object[],java.lang.Object[][],java.lang.Class[],org.apache.xalan.extensions.ExpressionContext)"
        ]
    },
    "org.apache.xalan.extensions.XSLProcessorContext:void outputToResultTree(org.apache.xalan.templates.Stylesheet,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.ExtensionHandlerGeneral:void processElement(java.lang.String,org.apache.xalan.templates.ElemTemplateElement,org.apache.xalan.transformer.TransformerImpl,org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.extensions.ExtensionHandlerJavaClass:void processElement(java.lang.String,org.apache.xalan.templates.ElemTemplateElement,org.apache.xalan.transformer.TransformerImpl,org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.extensions.ExtensionHandlerJavaPackage:void processElement(java.lang.String,org.apache.xalan.templates.ElemTemplateElement,org.apache.xalan.transformer.TransformerImpl,org.apache.xalan.templates.Stylesheet,java.lang.Object)"
        ]
    },
    "org.apache.xalan.trace.PrintTraceListener:void selected(org.apache.xalan.trace.SelectionEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.trace.TraceManager:void fireSelectedEvent(org.apache.xalan.trace.SelectionEvent)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMNodeIterator:org.w3c.dom.Node nextNode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.domapi.XPathResultImpl:org.w3c.dom.Node getSingleNodeValue()",
            "org.apache.xpath.domapi.XPathResultImpl:org.w3c.dom.Node iterateNext()",
            "org.apache.xpath.jaxp.XPathExpressionImpl:java.lang.Object getResultAsType(org.apache.xpath.objects.XObject,javax.xml.namespace.QName)",
            "org.apache.xpath.jaxp.XPathImpl:java.lang.Object getResultAsType(org.apache.xpath.objects.XObject,javax.xml.namespace.QName)",
            "org.apache.xpath.CachedXPathAPI:org.w3c.dom.Node selectSingleNode(org.w3c.dom.Node,java.lang.String,org.w3c.dom.Node)",
            "org.apache.xpath.NodeSet:void addNodes(org.w3c.dom.traversal.NodeIterator)",
            "org.apache.xpath.NodeSet:void addNodesInDocOrder(org.w3c.dom.traversal.NodeIterator,org.apache.xpath.XPathContext)",
            "org.apache.xpath.NodeSetDTM:void <init>(org.w3c.dom.traversal.NodeIterator,org.apache.xpath.XPathContext)",
            "org.apache.xpath.XPathAPI:org.w3c.dom.Node selectSingleNode(org.w3c.dom.Node,java.lang.String,org.w3c.dom.Node)"
        ]
    },
    "org.apache.xpath.axes.LocPathIterator:int getLength()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.NodeSorter:void sort(org.apache.xml.dtm.DTMIterator,java.util.Vector,org.apache.xpath.XPathContext)",
            "org.apache.xml.dtm.ref.DTMNodeList:int getLength()",
            "org.apache.xpath.axes.LocPathIterator:int getLastPos(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.NodeSequence:void <init>(java.lang.Object)",
            "org.apache.xpath.axes.NodeSequence:int getLength()",
            "org.apache.xpath.axes.OneStepIterator:int getLength()",
            "org.apache.xpath.functions.FuncCount:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncLast:int getCountOfContextNodeList(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.axes.LocPathIterator:void runTo(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:org.apache.xml.dtm.DTMIterator sortNodes(org.apache.xpath.XPathContext,java.util.Vector,org.apache.xml.dtm.DTMIterator)",
            "org.apache.xalan.trace.PrintTraceListener:void selected(org.apache.xalan.trace.SelectionEvent)",
            "org.apache.xml.dtm.ref.DTMNodeList:void <init>(org.apache.xml.dtm.DTMIterator)"
        ]
    },
    "org.apache.xpath.axes.NodeSequence:int nextNode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.MethodResolver:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.xalan.extensions.XSLProcessorContext:void outputToResultTree(org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.lib.sql.XConnection:org.apache.xalan.lib.sql.SQLDocument locateSQLDocument(org.apache.xalan.extensions.ExpressionContext,java.lang.Object)",
            "org.apache.xalan.templates.ElemApplyTemplates:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemCopyOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.trace.PrintTraceListener:void selected(org.apache.xalan.trace.SelectionEvent)",
            "org.apache.xalan.transformer.KeyRefIterator:int getNextNode()",
            "org.apache.xalan.transformer.KeyRefIterator:short filterNode(int)",
            "org.apache.xalan.transformer.KeyTable:java.util.Hashtable getRefsTable()",
            "org.apache.xalan.transformer.KeyTable:void addValueInRefsTable(org.apache.xpath.XPathContext,org.apache.xml.utils.XMLString,int)",
            "org.apache.xalan.transformer.NodeSorter$NodeCompareElem:void <init>(org.apache.xalan.transformer.NodeSorter,int)",
            "org.apache.xml.dtm.ref.DTMNodeIterator:org.w3c.dom.Node nextNode()",
            "org.apache.xpath.axes.FilterExprIterator:int getNextNode()",
            "org.apache.xpath.axes.FilterExprIteratorSimple:int nextNode()",
            "org.apache.xpath.axes.FilterExprWalker:int getNextNode()",
            "org.apache.xpath.axes.LocPathIterator:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.NodeSequence:int nextNode()",
            "org.apache.xpath.axes.NodeSequence:void runTo(int)",
            "org.apache.xpath.axes.NodeSequence:int item(int)",
            "org.apache.xpath.axes.UnionPathIterator:void setRoot(int,java.lang.Object)",
            "org.apache.xpath.axes.UnionPathIterator:void addIterator(org.apache.xml.dtm.DTMIterator)",
            "org.apache.xpath.axes.UnionPathIterator:int nextNode()",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncPosition:int getPositionInContextNodeList(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSum:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XNodeSet:double numWithSideEffects()",
            "org.apache.xpath.objects.XNodeSet:boolean boolWithSideEffects()",
            "org.apache.xpath.objects.XNodeSet:boolean compare(org.apache.xpath.objects.XObject,org.apache.xpath.objects.Comparator)",
            "org.apache.xpath.patterns.FunctionPattern:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.patterns.FunctionPattern:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.patterns.FunctionPattern:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.NodeSetDTM:void addNodes(org.apache.xml.dtm.DTMIterator)",
            "org.apache.xpath.NodeSetDTM:void addNodesInDocOrder(org.apache.xml.dtm.DTMIterator,org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.axes.OneStepIterator:int getProximityPosition(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.PredicatedNodeTest:int getProximityPosition()",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean executePredicates(int,org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.axes.OneStepIterator:int getLength()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.NodeSorter:void sort(org.apache.xml.dtm.DTMIterator,java.util.Vector,org.apache.xpath.XPathContext)",
            "org.apache.xml.dtm.ref.DTMNodeList:int getLength()",
            "org.apache.xpath.axes.LocPathIterator:int getLastPos(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.NodeSequence:void <init>(java.lang.Object)",
            "org.apache.xpath.axes.NodeSequence:int getLength()",
            "org.apache.xpath.functions.FuncCount:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncLast:int getCountOfContextNodeList(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.axes.UnionPathIterator:void setRoot(int,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.LocPathIterator:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.axes.LocPathIterator:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.NodeSequence:void setRoot(int,java.lang.Object)"
        ]
    },
    "org.apache.xpath.axes.UnionPathIterator:void addIterator(org.apache.xml.dtm.DTMIterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.axes.UnionPathIterator:int nextNode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.MethodResolver:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.xalan.extensions.XSLProcessorContext:void outputToResultTree(org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.templates.ElemApplyTemplates:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemCopyOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.trace.PrintTraceListener:void selected(org.apache.xalan.trace.SelectionEvent)",
            "org.apache.xalan.transformer.KeyRefIterator:int getNextNode()",
            "org.apache.xalan.transformer.KeyRefIterator:short filterNode(int)",
            "org.apache.xalan.transformer.KeyTable:java.util.Hashtable getRefsTable()",
            "org.apache.xalan.transformer.NodeSorter$NodeCompareElem:void <init>(org.apache.xalan.transformer.NodeSorter,int)",
            "org.apache.xml.dtm.ref.DTMNodeIterator:org.w3c.dom.Node nextNode()",
            "org.apache.xpath.axes.LocPathIterator:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.axes.LocPathIterator:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.LocPathIterator:int getLength()",
            "org.apache.xpath.axes.LocPathIterator:void runTo(int)",
            "org.apache.xpath.axes.NodeSequence:int nextNode()",
            "org.apache.xpath.axes.UnionPathIterator:void setRoot(int,java.lang.Object)",
            "org.apache.xpath.axes.UnionPathIterator:void addIterator(org.apache.xml.dtm.DTMIterator)",
            "org.apache.xpath.axes.UnionPathIterator:int nextNode()",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncPosition:int getPositionInContextNodeList(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSum:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XNodeSet:boolean compare(org.apache.xpath.objects.XObject,org.apache.xpath.objects.Comparator)",
            "org.apache.xpath.patterns.FunctionPattern:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.patterns.FunctionPattern:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.patterns.FunctionPattern:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.NodeSetDTM:void addNodes(org.apache.xml.dtm.DTMIterator)",
            "org.apache.xpath.NodeSetDTM:void addNodesInDocOrder(org.apache.xml.dtm.DTMIterator,org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.NodeSetDTM:void addNodes(org.apache.xml.dtm.DTMIterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.NodeSetDTM:void <init>(org.apache.xpath.NodeSetDTM)",
            "org.apache.xpath.NodeSetDTM:void <init>(org.apache.xml.dtm.DTMIterator)"
        ]
    },
    "org.apache.xpath.NodeSetDTM:void addNodesInDocOrder(org.apache.xml.dtm.DTMIterator,org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xpath.functions.FuncPosition:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemValueOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncFormatNumb:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.XUnresolvedVariableSimple:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:org.apache.xpath.objects.XNodeSet executeFilterExpr(int,org.apache.xpath.XPathContext,org.apache.xml.utils.PrefixResolver,boolean,int,org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean executePredicates(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncBoolean:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncCeiling:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncConcat:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncContains:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtElementAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunction:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunctionAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncFloor:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncNot:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncRound:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncStartsWith:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstring:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringAfter:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringBefore:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSystemProperty:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncTranslate:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncUnparsedEntityURI:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:org.apache.xml.utils.XMLString getArg0AsString(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:double getArg0AsNumber(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.And:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Or:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.UnaryOperation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:boolean executePredicates(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,boolean)",
            "org.apache.xpath.Expression:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.utils.XMLString xstr(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIterator(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIteratorRaw(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.XPath:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPath:double getMatchScore(org.apache.xpath.XPathContext,int)"
        ]
    },
    "org.apache.xpath.functions.FuncLast:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemValueOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncFormatNumb:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.XUnresolvedVariableSimple:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:org.apache.xpath.objects.XNodeSet executeFilterExpr(int,org.apache.xpath.XPathContext,org.apache.xml.utils.PrefixResolver,boolean,int,org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean executePredicates(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncBoolean:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncCeiling:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncConcat:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncContains:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtElementAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunction:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunctionAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncFloor:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncNot:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncRound:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncStartsWith:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstring:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringAfter:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringBefore:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSystemProperty:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncTranslate:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncUnparsedEntityURI:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:org.apache.xml.utils.XMLString getArg0AsString(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:double getArg0AsNumber(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.And:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Or:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.UnaryOperation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:boolean executePredicates(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,boolean)",
            "org.apache.xpath.Expression:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.utils.XMLString xstr(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIterator(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIteratorRaw(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.XPath:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPath:double getMatchScore(org.apache.xpath.XPathContext,int)"
        ]
    },
    "org.apache.xalan.templates.StylesheetRoot:org.apache.xalan.templates.ElemTemplate getTemplateComposed(org.apache.xpath.XPathContext,int,org.apache.xml.utils.QName,boolean,org.apache.xml.dtm.DTM)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerImpl:boolean applyTemplateToNode(org.apache.xalan.templates.ElemTemplateElement,org.apache.xalan.templates.ElemTemplate,int)"
        ]
    },
    "org.apache.xalan.templates.StylesheetRoot:org.apache.xalan.templates.WhiteSpaceInfo getWhiteSpaceInfo(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerImpl:short getShouldStripSpace(int,org.apache.xml.dtm.DTM)"
        ]
    },
    "org.apache.xalan.templates.StylesheetRoot:boolean shouldStripWhiteSpace(org.apache.xpath.XPathContext,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.templates.StylesheetRoot:org.apache.xalan.templates.ElemTemplate getTemplateComposed(org.apache.xpath.XPathContext,int,org.apache.xml.utils.QName,int,int,boolean,org.apache.xml.dtm.DTM)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerImpl:boolean applyTemplateToNode(org.apache.xalan.templates.ElemTemplateElement,org.apache.xalan.templates.ElemTemplate,int)"
        ]
    },
    "org.apache.xpath.axes.MatchPatternIterator:int nextNode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.MethodResolver:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.xalan.extensions.XSLProcessorContext:void outputToResultTree(org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.templates.ElemApplyTemplates:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemCopyOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.trace.PrintTraceListener:void selected(org.apache.xalan.trace.SelectionEvent)",
            "org.apache.xalan.transformer.KeyRefIterator:int getNextNode()",
            "org.apache.xalan.transformer.KeyRefIterator:short filterNode(int)",
            "org.apache.xalan.transformer.KeyTable:java.util.Hashtable getRefsTable()",
            "org.apache.xalan.transformer.NodeSorter$NodeCompareElem:void <init>(org.apache.xalan.transformer.NodeSorter,int)",
            "org.apache.xml.dtm.ref.DTMNodeIterator:org.w3c.dom.Node nextNode()",
            "org.apache.xpath.axes.LocPathIterator:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.axes.LocPathIterator:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.LocPathIterator:int getLength()",
            "org.apache.xpath.axes.LocPathIterator:void runTo(int)",
            "org.apache.xpath.axes.NodeSequence:int nextNode()",
            "org.apache.xpath.axes.UnionPathIterator:void setRoot(int,java.lang.Object)",
            "org.apache.xpath.axes.UnionPathIterator:void addIterator(org.apache.xml.dtm.DTMIterator)",
            "org.apache.xpath.axes.UnionPathIterator:int nextNode()",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncPosition:int getPositionInContextNodeList(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSum:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XNodeSet:boolean compare(org.apache.xpath.objects.XObject,org.apache.xpath.objects.Comparator)",
            "org.apache.xpath.patterns.FunctionPattern:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.patterns.FunctionPattern:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.patterns.FunctionPattern:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.NodeSetDTM:void addNodes(org.apache.xml.dtm.DTMIterator)",
            "org.apache.xpath.NodeSetDTM:void addNodesInDocOrder(org.apache.xml.dtm.DTMIterator,org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xalan.templates.TemplateSubPatternAssociation:boolean matches(org.apache.xpath.XPathContext,int,org.apache.xml.utils.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.lib.PipeDocument:void pipeDocument(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.templates.ElemExtensionCall:java.lang.String getAttribute(java.lang.String,org.w3c.dom.Node,org.apache.xalan.transformer.TransformerImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.PipeDocument:void pipeDocument(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)",
            "org.apache.xalan.lib.Redirect:void open(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)",
            "org.apache.xalan.lib.Redirect:void write(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)",
            "org.apache.xalan.lib.Redirect:java.lang.String getFilename(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)"
        ]
    },
    "org.apache.xalan.templates.ElemNumber:java.util.Locale getLocale(org.apache.xalan.transformer.TransformerImpl,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemNumber:java.text.DecimalFormat getNumberFormatter(org.apache.xalan.transformer.TransformerImpl,int)",
            "org.apache.xalan.templates.ElemNumber:void getFormattedNumber(org.apache.xalan.transformer.TransformerImpl,int,char,int,long,org.apache.xml.utils.FastStringBuffer)"
        ]
    },
    "org.apache.xalan.templates.ElemNumber:java.text.DecimalFormat getNumberFormatter(org.apache.xalan.transformer.TransformerImpl,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemNumber:void getFormattedNumber(org.apache.xalan.transformer.TransformerImpl,int,char,int,long,org.apache.xml.utils.FastStringBuffer)"
        ]
    },
    "org.apache.xalan.templates.ElemNumber:java.lang.String formatNumberList(org.apache.xalan.transformer.TransformerImpl,long[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemNumber:java.lang.String getCountString(org.apache.xalan.transformer.TransformerImpl,int)"
        ]
    },
    "org.apache.xalan.templates.ElemNumber:void getFormattedNumber(org.apache.xalan.transformer.TransformerImpl,int,char,int,long,org.apache.xml.utils.FastStringBuffer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemNumber:java.lang.String formatNumberList(org.apache.xalan.transformer.TransformerImpl,long[],int)"
        ]
    },
    "org.apache.xalan.transformer.TransformerImpl:java.util.Vector processSortKeys(org.apache.xalan.templates.ElemForEach,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemApplyTemplates:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)"
        ]
    },
    "org.apache.xalan.transformer.KeyManager:org.apache.xpath.objects.XNodeSet getNodeSetDTMByKey(org.apache.xpath.XPathContext,int,org.apache.xml.utils.QName,org.apache.xml.utils.XMLString,org.apache.xml.utils.PrefixResolver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xalan.templates.ElemForEach:org.apache.xml.dtm.DTMIterator sortNodes(org.apache.xpath.XPathContext,java.util.Vector,org.apache.xml.dtm.DTMIterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemApplyTemplates:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)"
        ]
    },
    "org.apache.xpath.jaxp.XPathImpl:java.lang.String evaluate(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xpath.jaxp.XPathImpl:java.lang.String evaluate(java.lang.String,org.xml.sax.InputSource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xpath.CachedXPathAPI:org.w3c.dom.Node selectSingleNode(org.w3c.dom.Node,java.lang.String,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.CachedXPathAPI:org.w3c.dom.Node selectSingleNode(org.w3c.dom.Node,java.lang.String)"
        ]
    },
    "org.apache.xpath.CachedXPathAPI:org.w3c.dom.traversal.NodeIterator selectNodeIterator(org.w3c.dom.Node,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xpath.CachedXPathAPI:org.w3c.dom.NodeList selectNodeList(org.w3c.dom.Node,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.lib.Extensions:org.apache.xpath.objects.XObject evaluate(org.apache.xalan.extensions.ExpressionContext,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.lib.Redirect:void open(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xpath.domapi.XPathEvaluatorImpl:java.lang.Object evaluate(java.lang.String,org.w3c.dom.Node,org.w3c.dom.xpath.XPathNSResolver,short,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xpath.jaxp.XPathExpressionImpl:java.lang.Object eval(java.lang.Object,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.jaxp.XPathExpressionImpl:java.lang.Object evaluate(java.lang.Object,javax.xml.namespace.QName)",
            "org.apache.xpath.jaxp.XPathExpressionImpl:java.lang.Object evaluate(org.xml.sax.InputSource,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.xpath.XPathAPI:org.w3c.dom.Node selectSingleNode(org.w3c.dom.Node,java.lang.String,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.XPathAPI:org.w3c.dom.Node selectSingleNode(org.w3c.dom.Node,java.lang.String)"
        ]
    },
    "org.apache.xpath.XPathAPI:org.w3c.dom.traversal.NodeIterator selectNodeIterator(org.w3c.dom.Node,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xpath.XPathAPI:org.w3c.dom.NodeList selectNodeList(org.w3c.dom.Node,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.transformer.TransformerHandlerImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void closeStartTag()",
            "org.apache.xml.serializer.ToXMLSAXHandler:void closeStartTag()",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xalan.transformer.TransformerIdentityImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void closeStartTag()",
            "org.apache.xml.serializer.ToXMLSAXHandler:void closeStartTag()",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void closeStartTag()",
            "org.apache.xml.serializer.ToXMLSAXHandler:void closeStartTag()",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TreeWalker2Result:void startNode(int)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void traverse(int)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void traverse(int,int)"
        ]
    },
    "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void closeStartTag()",
            "org.apache.xml.serializer.ToXMLSAXHandler:void closeStartTag()",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serializer.ToHTMLSAXHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void closeStartTag()",
            "org.apache.xml.serializer.ToUnknownStream:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToUnknownStream:void emitFirstTag()",
            "org.apache.xml.serializer.ToXMLSAXHandler:void closeStartTag()",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serializer.ToHTMLSAXHandler:void closeStartTag()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.ToHTMLSAXHandler:void flushPending()",
            "org.apache.xml.serializer.ToSAXHandler:void flushPending()"
        ]
    },
    "org.apache.xml.serializer.ToXMLSAXHandler:void closeStartTag()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.ToSAXHandler:void flushPending()",
            "org.apache.xml.serializer.ToXMLSAXHandler:void characters(char[],int,int)"
        ]
    },
    "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)"
        ]
    },
    "org.apache.xalan.client.XSLTProcessorApplet:void start()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.client.XSLTProcessorApplet:java.lang.String getSource()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.client.XSLTProcessorApplet:java.lang.String access$300(org.apache.xalan.client.XSLTProcessorApplet)"
        ]
    },
    "org.apache.xalan.client.XSLTProcessorApplet:java.lang.String processTransformation()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.client.XSLTProcessorApplet:java.lang.String access$400(org.apache.xalan.client.XSLTProcessorApplet)"
        ]
    },
    "org.apache.xalan.transformer.TransformerIdentityImpl:void transform(javax.xml.transform.Source,javax.xml.transform.Result)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.client.XSLTProcessorApplet:void start()",
            "org.apache.xalan.client.XSLTProcessorApplet:java.lang.String getSource()",
            "org.apache.xalan.client.XSLTProcessorApplet:java.lang.String processTransformation()",
            "org.apache.xalan.xslt.Process:void main(java.lang.String[])"
        ]
    },
    "org.apache.xalan.xsltc.dom.XSLTCDTMManager:org.apache.xml.dtm.DTM getDTM(javax.xml.transform.Source,boolean,org.apache.xml.dtm.DTMWSFilter,boolean,boolean,boolean,int,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.XSLTCDTMManager:org.apache.xml.dtm.DTM getDTM(javax.xml.transform.Source,boolean,org.apache.xml.dtm.DTMWSFilter,boolean,boolean)",
            "org.apache.xalan.xsltc.dom.XSLTCDTMManager:org.apache.xml.dtm.DTM getDTM(javax.xml.transform.Source,boolean,org.apache.xml.dtm.DTMWSFilter,boolean,boolean,boolean)",
            "org.apache.xalan.xsltc.dom.XSLTCDTMManager:org.apache.xml.dtm.DTM getDTM(javax.xml.transform.Source,boolean,org.apache.xml.dtm.DTMWSFilter,boolean,boolean,boolean,boolean)",
            "org.apache.xalan.xsltc.dom.XSLTCDTMManager:org.apache.xml.dtm.DTM getDTM(javax.xml.transform.Source,boolean,org.apache.xml.dtm.DTMWSFilter,boolean,boolean,boolean,int,boolean)"
        ]
    },
    "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:javax.xml.transform.Source getAssociatedStylesheet(javax.xml.transform.Source,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xslt.Process:void main(java.lang.String[])",
            "org.apache.xalan.xsltc.trax.SmartTransformerFactoryImpl:javax.xml.transform.Source getAssociatedStylesheet(javax.xml.transform.Source,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.xml.sax.InputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.ProcessorInclude:void parse(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.processor.TransformerFactoryImpl:javax.xml.transform.Source getAssociatedStylesheet(javax.xml.transform.Source,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.processor.TransformerFactoryImpl:javax.xml.transform.Templates newTemplates(javax.xml.transform.Source)",
            "org.apache.xalan.transformer.TrAXFilter:void parse(org.xml.sax.InputSource)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void transform(javax.xml.transform.Source,javax.xml.transform.Result)",
            "org.apache.xalan.xslt.Process:void main(java.lang.String[])",
            "org.apache.xalan.xsltc.compiler.Parser:org.apache.xalan.xsltc.compiler.SyntaxTreeNode parse(org.xml.sax.XMLReader,org.xml.sax.InputSource)",
            "org.apache.xalan.xsltc.dom.XSLTCDTMManager:org.apache.xml.dtm.DTM getDTM(javax.xml.transform.Source,boolean,org.apache.xml.dtm.DTMWSFilter,boolean,boolean,boolean,int,boolean,boolean)",
            "org.apache.xalan.xsltc.trax.TrAXFilter:void parse(org.xml.sax.InputSource)",
            "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:javax.xml.transform.Source getAssociatedStylesheet(javax.xml.transform.Source,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.trax.TransformerImpl:void transformIdentity(javax.xml.transform.Source,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xml.dtm.ref.DTMManagerDefault:org.apache.xml.dtm.DTM getDTM(javax.xml.transform.Source,boolean,org.apache.xml.dtm.DTMWSFilter,boolean,boolean)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void run()"
        ]
    },
    "org.apache.xalan.transformer.TreeWalker2Result:void endNode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.DTMTreeWalker:void traverse(int)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void traverse(int,int)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMTreeWalker:void traverse(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TreeWalker2Result:void traverse(int)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void dispatchToEvents(int,org.xml.sax.ContentHandler)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMTreeWalker:void traverse(int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.runtime.AbstractTranslet:void closeOutputHandler(org.apache.xml.serializer.SerializationHandler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.trax.DOM2TO:void parse()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.trax.TransformerImpl:void transformIdentity(javax.xml.transform.Source,org.apache.xml.serializer.SerializationHandler)"
        ]
    },
    "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.xml.sax.InputSource)",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse()",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serializer.ToUnknownStream:void endDocument()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.Redirect:void write(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)",
            "org.apache.xalan.lib.Redirect:void close(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)",
            "org.apache.xalan.transformer.TransformerHandlerImpl:void endDocument()",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void endDocument()",
            "org.apache.xalan.transformer.TransformerImpl:void transform(javax.xml.transform.Source,boolean)",
            "org.apache.xalan.transformer.TransformerImpl:void transformNode(int)",
            "org.apache.xalan.transformer.TransformerImpl:int transformToRTF(org.apache.xalan.templates.ElemTemplateElement,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.transformer.TransformerImpl:java.lang.String transformToString(org.apache.xalan.templates.ElemTemplateElement)",
            "org.apache.xalan.xsltc.runtime.AbstractTranslet:void closeOutputHandler(org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse()",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse()",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void endDocument()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void endDocument()",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void endDocument()",
            "org.apache.xml.serializer.ToTextSAXHandler:void endDocument()",
            "org.apache.xml.serializer.ToUnknownStream:void endDocument()",
            "org.apache.xml.serializer.ToXMLSAXHandler:void endDocument()",
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serializer.ToStream:void serialize(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.serialize.SerializerFactory$DOMSerializerWrapper:void serialize(org.w3c.dom.Node)",
            "org.apache.xml.serializer.ToUnknownStream:void serialize(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xalan.processor.ProcessorInclude:void parse(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.ProcessorInclude:void startElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xalan.processor.TransformerFactoryImpl:javax.xml.transform.Templates processFromNode(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.TransformerFactoryImpl:javax.xml.transform.Templates processFromNode(org.w3c.dom.Node,java.lang.String)"
        ]
    },
    "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:void dispatchToEvents(int,org.xml.sax.ContentHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.serialize.SerializerUtils:void outputResultTreeFragment(org.apache.xml.serializer.SerializationHandler,org.apache.xpath.objects.XObject,org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xalan.templates.ElemAttribute:void execute(org.apache.xalan.transformer.TransformerImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemApplyTemplates:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemAttributeSet:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.TransformerImpl:void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement,boolean)"
        ]
    },
    "org.apache.xalan.extensions.ExtensionsTable:java.lang.Object extFunction(org.apache.xpath.functions.FuncExtFunction,java.util.Vector,org.apache.xalan.extensions.ExpressionContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerImpl:java.lang.Object extFunction(org.apache.xpath.functions.FuncExtFunction,java.util.Vector)"
        ]
    },
    "org.apache.xalan.templates.ElemExtensionCall:void execute(org.apache.xalan.transformer.TransformerImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemApplyTemplates:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.TransformerImpl:void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement,boolean)"
        ]
    },
    "org.apache.xalan.templates.ElemUnknown:void execute(org.apache.xalan.transformer.TransformerImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemApplyTemplates:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.TransformerImpl:void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement,boolean)"
        ]
    },
    "org.apache.xalan.lib.sql.SQLQueryParser:void populateStatement(java.sql.PreparedStatement,org.apache.xalan.extensions.ExpressionContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.SQLDocument:void executeSQLStatement()"
        ]
    },
    "org.apache.xpath.axes.PredicatedNodeTest:int getProximityPosition()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.AxesWalker:int getLastPos(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.LocPathIterator:int getLength()",
            "org.apache.xpath.axes.PredicatedNodeTest:int getProximityPosition(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.objects.XNodeSet:boolean lessThan(org.apache.xpath.objects.XObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.objects.XObject:boolean greaterThan(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.operations.Lt:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject,org.apache.xpath.objects.XObject)"
        ]
    },
    "org.apache.xpath.objects.XNodeSet:boolean lessThanOrEqual(org.apache.xpath.objects.XObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.objects.XObject:boolean greaterThanOrEqual(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.operations.Lte:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject,org.apache.xpath.objects.XObject)"
        ]
    },
    "org.apache.xpath.objects.XNodeSet:boolean greaterThan(org.apache.xpath.objects.XObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.objects.XObject:boolean lessThan(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.operations.Gt:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject,org.apache.xpath.objects.XObject)"
        ]
    },
    "org.apache.xpath.objects.XNodeSet:boolean greaterThanOrEqual(org.apache.xpath.objects.XObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.objects.XObject:boolean lessThanOrEqual(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.operations.Gte:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject,org.apache.xpath.objects.XObject)"
        ]
    },
    "org.apache.xpath.objects.XNodeSet:boolean equals(org.apache.xpath.objects.XObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.objects.XBoolean:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XNumber:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XObject:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XObject:boolean notEquals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XObject:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.objects.XRTreeFrag:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XString:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XStringForFSB:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.operations.Equals:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject,org.apache.xpath.objects.XObject)",
            "org.apache.xpath.operations.Equals:boolean bool(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.objects.XNodeSet:boolean notEquals(org.apache.xpath.objects.XObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.objects.XObject:boolean notEquals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.operations.NotEquals:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject,org.apache.xpath.objects.XObject)"
        ]
    },
    "org.apache.xalan.extensions.MethodResolver:void convertParams(java.lang.Object[],java.lang.Object[][],java.lang.Class[],org.apache.xalan.extensions.ExpressionContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.ExtensionHandlerJavaClass:java.lang.Object callFunction(java.lang.String,java.util.Vector,java.lang.Object,org.apache.xalan.extensions.ExpressionContext)",
            "org.apache.xalan.extensions.ExtensionHandlerJavaPackage:java.lang.Object callFunction(java.lang.String,java.util.Vector,java.lang.Object,org.apache.xalan.extensions.ExpressionContext)",
            "org.apache.xalan.extensions.MethodResolver:java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Object[],java.lang.Object[][],org.apache.xalan.extensions.ExpressionContext)",
            "org.apache.xalan.extensions.MethodResolver:java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Object[],java.lang.Object[][],org.apache.xalan.extensions.ExpressionContext,int)"
        ]
    },
    "org.apache.xalan.extensions.ExtensionHandlerGeneral:void processElement(java.lang.String,org.apache.xalan.templates.ElemTemplateElement,org.apache.xalan.transformer.TransformerImpl,org.apache.xalan.templates.Stylesheet,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemExtensionCall:void execute(org.apache.xalan.transformer.TransformerImpl)"
        ]
    },
    "org.apache.xalan.extensions.ExtensionHandlerJavaClass:void processElement(java.lang.String,org.apache.xalan.templates.ElemTemplateElement,org.apache.xalan.transformer.TransformerImpl,org.apache.xalan.templates.Stylesheet,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemExtensionCall:void execute(org.apache.xalan.transformer.TransformerImpl)"
        ]
    },
    "org.apache.xalan.extensions.ExtensionHandlerJavaPackage:void processElement(java.lang.String,org.apache.xalan.templates.ElemTemplateElement,org.apache.xalan.transformer.TransformerImpl,org.apache.xalan.templates.Stylesheet,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemExtensionCall:void execute(org.apache.xalan.transformer.TransformerImpl)"
        ]
    },
    "org.apache.xalan.trace.TraceManager:void fireSelectedEvent(org.apache.xalan.trace.SelectionEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.trace.TraceManager:void fireSelectedEvent(int,org.apache.xalan.templates.ElemTemplateElement,java.lang.String,org.apache.xpath.XPath,org.apache.xpath.objects.XObject)"
        ]
    },
    "org.apache.xpath.domapi.XPathResultImpl:org.w3c.dom.Node getSingleNodeValue()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xpath.domapi.XPathResultImpl:org.w3c.dom.Node iterateNext()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xpath.jaxp.XPathExpressionImpl:java.lang.Object getResultAsType(org.apache.xpath.objects.XObject,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.jaxp.XPathExpressionImpl:java.lang.Object eval(java.lang.Object,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.xpath.jaxp.XPathImpl:java.lang.Object getResultAsType(org.apache.xpath.objects.XObject,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.jaxp.XPathImpl:java.lang.Object evaluate(java.lang.String,java.lang.Object,javax.xml.namespace.QName)",
            "org.apache.xpath.jaxp.XPathImpl:java.lang.Object evaluate(java.lang.String,org.xml.sax.InputSource,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.xpath.NodeSet:void addNodes(org.w3c.dom.traversal.NodeIterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.NodeSet:void <init>(org.apache.xpath.NodeSet)",
            "org.apache.xpath.NodeSet:void <init>(org.w3c.dom.traversal.NodeIterator)",
            "org.apache.xpath.NodeSet:void addNodes(org.apache.xpath.NodeSet)"
        ]
    },
    "org.apache.xpath.NodeSet:void addNodesInDocOrder(org.w3c.dom.traversal.NodeIterator,org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xpath.NodeSetDTM:void <init>(org.w3c.dom.traversal.NodeIterator,org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.XSLProcessorContext:void outputToResultTree(org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xpath.objects.XNodeSetForDOM:void <init>(org.w3c.dom.traversal.NodeIterator,org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMNodeList:int getLength()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.XConnection:void addParameterFromElement(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.ExsltBase:java.lang.String toString(org.w3c.dom.Node)",
            "org.apache.xalan.lib.ExsltDynamic:double min(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList,java.lang.String)",
            "org.apache.xalan.lib.ExsltDynamic:double sum(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList,java.lang.String)",
            "org.apache.xalan.lib.ExsltDynamic:org.w3c.dom.NodeList map(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList,java.lang.String)",
            "org.apache.xalan.lib.ExsltDynamic:org.w3c.dom.NodeList closure(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList,java.lang.String)",
            "org.apache.xalan.lib.ExsltMath:double max(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.ExsltMath:double min(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.ExsltMath:org.w3c.dom.NodeList highest(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.ExsltMath:org.w3c.dom.NodeList lowest(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.ExsltSets:org.w3c.dom.NodeList leading(org.w3c.dom.NodeList,org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.ExsltSets:org.w3c.dom.NodeList trailing(org.w3c.dom.NodeList,org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.ExsltSets:org.w3c.dom.NodeList distinct(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.ExsltStrings:java.lang.String concat(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.NodeInfo:java.lang.String systemId(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.NodeInfo:java.lang.String publicId(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.NodeInfo:int lineNumber(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.NodeInfo:int columnNumber(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.PipeDocument:void pipeDocument(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)",
            "org.apache.xalan.trace.TracerEvent:java.lang.String printNodeList(org.w3c.dom.NodeList)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:void copyNodes(org.w3c.dom.NodeList,org.w3c.dom.Document,org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.NodeList getElementsByTagName(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:void traverseChildren(java.util.Vector,org.w3c.dom.Node,java.lang.String,boolean)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.NodeList getElementsByTagNameNS(java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:void traverseChildren(java.util.Vector,org.w3c.dom.Node,java.lang.String,java.lang.String,boolean,boolean)",
            "org.apache.xpath.domapi.XPathResultImpl:int getSnapshotLength()",
            "org.apache.xpath.NodeSet:void addNodes(org.w3c.dom.NodeList)",
            "org.apache.xpath.NodeSet:void addNodesInDocOrder(org.w3c.dom.NodeList,org.apache.xpath.XPathContext)",
            "org.apache.xpath.NodeSetDTM:void <init>(org.w3c.dom.NodeList,org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.axes.LocPathIterator:int getLastPos(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.functions.FuncLast:int getCountOfContextNodeList(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.axes.NodeSequence:void <init>(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.objects.XNodeSet:void <init>(int,org.apache.xml.dtm.DTMManager)"
        ]
    },
    "org.apache.xpath.axes.NodeSequence:int getLength()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.transformer.NodeSorter:void sort(org.apache.xml.dtm.DTMIterator,java.util.Vector,org.apache.xpath.XPathContext)",
            "org.apache.xml.dtm.ref.DTMNodeList:int getLength()",
            "org.apache.xpath.axes.FilterExprWalker:int getLastPos(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.NodeSequence:void <init>(java.lang.Object)",
            "org.apache.xpath.axes.NodeSequence:int getLength()",
            "org.apache.xpath.functions.FuncCount:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncLast:int getCountOfContextNodeList(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMNodeList:void <init>(org.apache.xml.dtm.DTMIterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.ExtensionHandlerGeneral:java.lang.Object callFunction(java.lang.String,java.util.Vector,java.lang.Object,org.apache.xalan.extensions.ExpressionContext)",
            "org.apache.xpath.objects.XNodeSet:org.w3c.dom.NodeList nodelist()",
            "org.apache.xpath.objects.XRTreeFrag:org.w3c.dom.NodeList convertToNodeset()"
        ]
    },
    "org.apache.xalan.lib.sql.XConnection:org.apache.xalan.lib.sql.SQLDocument locateSQLDocument(org.apache.xalan.extensions.ExpressionContext,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.XConnection:void skipRec(org.apache.xalan.extensions.ExpressionContext,java.lang.Object,int)",
            "org.apache.xalan.lib.sql.XConnection:void close(org.apache.xalan.extensions.ExpressionContext,java.lang.Object)"
        ]
    },
    "org.apache.xalan.transformer.KeyTable:void addValueInRefsTable(org.apache.xpath.XPathContext,org.apache.xml.utils.XMLString,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.KeyTable:java.util.Hashtable getRefsTable()"
        ]
    },
    "org.apache.xpath.axes.FilterExprIterator:int getNextNode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.BasicTestIterator:int nextNode()"
        ]
    },
    "org.apache.xpath.axes.FilterExprIteratorSimple:int nextNode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.MethodResolver:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.xalan.extensions.XSLProcessorContext:void outputToResultTree(org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.templates.ElemApplyTemplates:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemCopyOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.trace.PrintTraceListener:void selected(org.apache.xalan.trace.SelectionEvent)",
            "org.apache.xalan.transformer.KeyRefIterator:int getNextNode()",
            "org.apache.xalan.transformer.KeyRefIterator:short filterNode(int)",
            "org.apache.xalan.transformer.KeyTable:java.util.Hashtable getRefsTable()",
            "org.apache.xalan.transformer.NodeSorter$NodeCompareElem:void <init>(org.apache.xalan.transformer.NodeSorter,int)",
            "org.apache.xml.dtm.ref.DTMNodeIterator:org.w3c.dom.Node nextNode()",
            "org.apache.xpath.axes.LocPathIterator:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.axes.LocPathIterator:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.LocPathIterator:int getLength()",
            "org.apache.xpath.axes.LocPathIterator:void runTo(int)",
            "org.apache.xpath.axes.NodeSequence:int nextNode()",
            "org.apache.xpath.axes.UnionPathIterator:void setRoot(int,java.lang.Object)",
            "org.apache.xpath.axes.UnionPathIterator:void addIterator(org.apache.xml.dtm.DTMIterator)",
            "org.apache.xpath.axes.UnionPathIterator:int nextNode()",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncPosition:int getPositionInContextNodeList(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSum:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XNodeSet:boolean compare(org.apache.xpath.objects.XObject,org.apache.xpath.objects.Comparator)",
            "org.apache.xpath.patterns.FunctionPattern:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.patterns.FunctionPattern:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.patterns.FunctionPattern:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.NodeSetDTM:void addNodes(org.apache.xml.dtm.DTMIterator)",
            "org.apache.xpath.NodeSetDTM:void addNodesInDocOrder(org.apache.xml.dtm.DTMIterator,org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.axes.FilterExprWalker:int getNextNode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.AxesWalker:int nextNode()"
        ]
    },
    "org.apache.xpath.axes.NodeSequence:void runTo(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:org.apache.xml.dtm.DTMIterator sortNodes(org.apache.xpath.XPathContext,java.util.Vector,org.apache.xml.dtm.DTMIterator)",
            "org.apache.xalan.trace.PrintTraceListener:void selected(org.apache.xalan.trace.SelectionEvent)",
            "org.apache.xml.dtm.ref.DTMNodeList:void <init>(org.apache.xml.dtm.DTMIterator)",
            "org.apache.xpath.axes.NodeSequence:void setRoot(int,java.lang.Object)",
            "org.apache.xpath.axes.NodeSequence:void setCurrentPos(int)",
            "org.apache.xpath.axes.NodeSequence:int getLength()"
        ]
    },
    "org.apache.xpath.axes.NodeSequence:int item(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.NodeSorter:void sort(org.apache.xml.dtm.DTMIterator,java.util.Vector,org.apache.xpath.XPathContext)",
            "org.apache.xml.dtm.ref.DTMNodeList:org.w3c.dom.Node item(int)",
            "org.apache.xpath.axes.NodeSequence:int previousNode()",
            "org.apache.xpath.objects.XNodeSet:double num()",
            "org.apache.xpath.objects.XNodeSet:boolean bool()",
            "org.apache.xpath.objects.XNodeSet:void dispatchCharactersEvents(org.xml.sax.ContentHandler)",
            "org.apache.xpath.objects.XNodeSet:org.apache.xml.utils.XMLString xstr()",
            "org.apache.xpath.objects.XNodeSet:java.lang.String str()"
        ]
    },
    "org.apache.xpath.objects.XNodeSet:double numWithSideEffects()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)"
        ]
    },
    "org.apache.xpath.objects.XNodeSet:boolean boolWithSideEffects()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:boolean executePredicates(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)"
        ]
    },
    "org.apache.xpath.NodeSetDTM:void <init>(org.apache.xpath.NodeSetDTM)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xpath.NodeSetDTM:void <init>(org.apache.xml.dtm.DTMIterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.objects.XNodeSet:org.apache.xpath.NodeSetDTM mutableNodeset()"
        ]
    },
    "org.apache.xalan.transformer.TransformerImpl:short getShouldStripSpace(int,org.apache.xml.dtm.DTM)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:boolean nextNode()",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xpath.CachedXPathAPI:org.w3c.dom.Node selectSingleNode(org.w3c.dom.Node,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xpath.jaxp.XPathExpressionImpl:java.lang.Object evaluate(java.lang.Object,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.jaxp.XPathExpressionImpl:java.lang.String evaluate(java.lang.Object)"
        ]
    },
    "org.apache.xpath.jaxp.XPathExpressionImpl:java.lang.Object evaluate(org.xml.sax.InputSource,javax.xml.namespace.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.jaxp.XPathExpressionImpl:java.lang.String evaluate(org.xml.sax.InputSource)"
        ]
    },
    "org.apache.xpath.XPathAPI:org.w3c.dom.Node selectSingleNode(org.w3c.dom.Node,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.transformer.TreeWalker2Result:void startNode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.DTMTreeWalker:void traverse(int)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void traverse(int,int)"
        ]
    },
    "org.apache.xml.serializer.ToUnknownStream:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void closeStartTag()",
            "org.apache.xml.serializer.ToUnknownStream:void startElement(java.lang.String)",
            "org.apache.xml.serializer.ToUnknownStream:void startElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToUnknownStream:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToUnknownStream:void emitFirstTag()",
            "org.apache.xml.serializer.ToXMLSAXHandler:void closeStartTag()",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serializer.ToUnknownStream:void emitFirstTag()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.ToUnknownStream:void comment(java.lang.String)",
            "org.apache.xml.serializer.ToUnknownStream:void elementDecl(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToUnknownStream:void endEntity(java.lang.String)",
            "org.apache.xml.serializer.ToUnknownStream:void flush()"
        ]
    },
    "org.apache.xml.serializer.ToHTMLSAXHandler:void flushPending()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.XSLProcessorContext:void outputToResultTree(org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.serialize.SerializerUtils:void outputResultTreeFragment(org.apache.xml.serializer.SerializationHandler,org.apache.xpath.objects.XObject,org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.ElemExtensionCall:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemLiteralResult:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemTextLiteral:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.TransformerImpl:int transformToRTF(org.apache.xalan.templates.ElemTemplateElement,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.transformer.TransformerImpl:void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement,org.xml.sax.ContentHandler)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String startXslElement(java.lang.String,java.lang.String,org.apache.xml.serializer.SerializationHandler,org.apache.xalan.xsltc.DOM,int)",
            "org.apache.xml.serializer.SerializerBase:void entityReference(java.lang.String)",
            "org.apache.xml.serializer.SerializerBase:void characters(org.w3c.dom.Node)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void comment(char[],int,int)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void endDocument()",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void startElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void endElement(java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void characters(char[],int,int)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:boolean startPrefixMapping(java.lang.String,java.lang.String,boolean)",
            "org.apache.xml.serializer.ToSAXHandler:void comment(java.lang.String)",
            "org.apache.xml.serializer.ToUnknownStream:void flushPending()"
        ]
    },
    "org.apache.xml.serializer.ToSAXHandler:void flushPending()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.XSLProcessorContext:void outputToResultTree(org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.serialize.SerializerUtils:void outputResultTreeFragment(org.apache.xml.serializer.SerializationHandler,org.apache.xpath.objects.XObject,org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.ElemExtensionCall:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemLiteralResult:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemTextLiteral:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.TransformerImpl:int transformToRTF(org.apache.xalan.templates.ElemTemplateElement,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.transformer.TransformerImpl:void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement,org.xml.sax.ContentHandler)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String startXslElement(java.lang.String,java.lang.String,org.apache.xml.serializer.SerializationHandler,org.apache.xalan.xsltc.DOM,int)",
            "org.apache.xml.serializer.SerializerBase:void entityReference(java.lang.String)",
            "org.apache.xml.serializer.SerializerBase:void characters(org.w3c.dom.Node)",
            "org.apache.xml.serializer.ToSAXHandler:void comment(java.lang.String)",
            "org.apache.xml.serializer.ToTextSAXHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToTextSAXHandler:void endDocument()",
            "org.apache.xml.serializer.ToUnknownStream:void flushPending()",
            "org.apache.xml.serializer.ToXMLSAXHandler:void endDocument()",
            "org.apache.xml.serializer.ToXMLSAXHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToXMLSAXHandler:boolean startPrefixMapping(java.lang.String,java.lang.String,boolean)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void comment(char[],int,int)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void startCDATA()",
            "org.apache.xml.serializer.ToXMLSAXHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xml.serializer.ToXMLSAXHandler:void characters(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.XSLProcessorContext:void outputToResultTree(org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.lib.sql.DTMDocument:void dispatchNodeData(org.w3c.dom.Node,org.xml.sax.ContentHandler,int)",
            "org.apache.xalan.templates.ElemCopyOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemNumber:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemTextLiteral:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.TransformerHandlerImpl:void characters(char[],int,int)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void characters(char[],int,int)",
            "org.apache.xalan.transformer.TransformerImpl:void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement,boolean)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:void copy(java.lang.Object,org.apache.xml.serializer.SerializationHandler,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void characters(char[],int,int)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:void dispatchNodeData(org.w3c.dom.Node,org.xml.sax.ContentHandler,int)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void characters(char[],int,int)",
            "org.apache.xml.serializer.SerializerBase:void characters(org.w3c.dom.Node)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void characters(char[],int,int)",
            "org.apache.xml.serializer.ToSAXHandler:void characters(java.lang.String)",
            "org.apache.xml.serializer.ToTextSAXHandler:void characters(java.lang.String)",
            "org.apache.xml.serializer.ToTextSAXHandler:void characters(char[],int,int)",
            "org.apache.xml.serializer.ToUnknownStream:void characters(char[],int,int)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void characters(java.lang.String)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void characters(char[],int,int)",
            "org.apache.xml.serializer.TreeWalker:void dispatachChars(org.w3c.dom.Node)",
            "org.apache.xml.utils.FastStringBuffer:void sendSAXcharacters(org.xml.sax.ContentHandler,int,int)",
            "org.apache.xml.utils.FastStringBuffer:int sendNormalizedSAXcharacters(char[],int,int,org.xml.sax.ContentHandler,int)",
            "org.apache.xml.utils.TreeWalker:void dispatachChars(org.w3c.dom.Node)",
            "org.apache.xpath.objects.XString:void dispatchCharactersEvents(org.xml.sax.ContentHandler)",
            "org.apache.xpath.objects.XStringForChars:void dispatchCharactersEvents(org.xml.sax.ContentHandler)"
        ]
    },
    "org.apache.xalan.client.XSLTProcessorApplet:java.lang.String access$300(org.apache.xalan.client.XSLTProcessorApplet)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.client.XSLTProcessorApplet$TrustedAgent:void run()"
        ]
    },
    "org.apache.xalan.client.XSLTProcessorApplet:java.lang.String access$400(org.apache.xalan.client.XSLTProcessorApplet)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.client.XSLTProcessorApplet$TrustedAgent:void run()"
        ]
    },
    "org.apache.xalan.xsltc.dom.XSLTCDTMManager:org.apache.xml.dtm.DTM getDTM(javax.xml.transform.Source,boolean,org.apache.xml.dtm.DTMWSFilter,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerImpl:void transform(javax.xml.transform.Source,boolean)",
            "org.apache.xalan.xsltc.dom.DocumentCache$CachedDocument:void loadDocument(java.lang.String)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator nodeList2Iterator(org.w3c.dom.NodeList,org.apache.xalan.xsltc.Translet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xml.dtm.ref.DTMManagerDefault:int getDTMHandleFromNode(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.DTMManagerDefault:org.apache.xml.dtm.DTM createDocumentFragment()",
            "org.apache.xpath.XPathContext:org.apache.xml.dtm.DTM getDTM(javax.xml.transform.Source,boolean,org.apache.xml.dtm.DTMWSFilter,boolean,boolean)",
            "org.apache.xpath.XPathContext:org.apache.xml.dtm.DTM getGlobalRTFDTM()",
            "org.apache.xpath.XPathContext:org.apache.xml.dtm.DTM getRTFDTM()"
        ]
    },
    "org.apache.xalan.xsltc.dom.XSLTCDTMManager:org.apache.xml.dtm.DTM getDTM(javax.xml.transform.Source,boolean,org.apache.xml.dtm.DTMWSFilter,boolean,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.cmdline.Transform:void doTransform()",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startDocument()",
            "org.apache.xalan.xsltc.trax.XSLTCSource:org.apache.xalan.xsltc.DOM getDOM(org.apache.xalan.xsltc.dom.XSLTCDTMManager,org.apache.xalan.xsltc.runtime.AbstractTranslet)"
        ]
    },
    "org.apache.xalan.xsltc.dom.XSLTCDTMManager:org.apache.xml.dtm.DTM getDTM(javax.xml.transform.Source,boolean,org.apache.xml.dtm.DTMWSFilter,boolean,boolean,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator document(java.lang.String,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM,boolean)"
        ]
    },
    "org.apache.xalan.xsltc.dom.XSLTCDTMManager:org.apache.xml.dtm.DTM getDTM(javax.xml.transform.Source,boolean,org.apache.xml.dtm.DTMWSFilter,boolean,boolean,boolean,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:void prepareNewDOM()",
            "org.apache.xalan.xsltc.dom.SAXImpl:org.apache.xalan.xsltc.DOM getResultTreeFrag(int,int,boolean)",
            "org.apache.xalan.xsltc.trax.TransformerImpl:org.apache.xalan.xsltc.DOM getDOM(javax.xml.transform.Source)"
        ]
    },
    "org.apache.xalan.processor.TransformerFactoryImpl:javax.xml.transform.Templates newTemplates(javax.xml.transform.Source)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.client.XSLTProcessorApplet:void start()",
            "org.apache.xalan.lib.PipeDocument:void pipeDocument(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)",
            "org.apache.xalan.processor.TransformerFactoryImpl:org.xml.sax.XMLFilter newXMLFilter(javax.xml.transform.Source)",
            "org.apache.xalan.processor.TransformerFactoryImpl:javax.xml.transform.sax.TransformerHandler newTransformerHandler(javax.xml.transform.Source)",
            "org.apache.xalan.processor.TransformerFactoryImpl:javax.xml.transform.Transformer newTransformer(javax.xml.transform.Source)",
            "org.apache.xalan.xslt.Process:void main(java.lang.String[])",
            "org.apache.xalan.xsltc.trax.SmartTransformerFactoryImpl:javax.xml.transform.Templates newTemplates(javax.xml.transform.Source)",
            "org.apache.xalan.xsltc.trax.SmartTransformerFactoryImpl:org.xml.sax.XMLFilter newXMLFilter(javax.xml.transform.Source)"
        ]
    },
    "org.apache.xalan.transformer.TrAXFilter:void parse(org.xml.sax.InputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.ProcessorInclude:void parse(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.processor.TransformerFactoryImpl:javax.xml.transform.Source getAssociatedStylesheet(javax.xml.transform.Source,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.processor.TransformerFactoryImpl:javax.xml.transform.Templates newTemplates(javax.xml.transform.Source)",
            "org.apache.xalan.transformer.TrAXFilter:void parse(org.xml.sax.InputSource)",
            "org.apache.xalan.transformer.TrAXFilter:void parse(java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void transform(javax.xml.transform.Source,javax.xml.transform.Result)",
            "org.apache.xalan.xslt.Process:void main(java.lang.String[])",
            "org.apache.xalan.xsltc.compiler.Parser:org.apache.xalan.xsltc.compiler.SyntaxTreeNode parse(org.xml.sax.XMLReader,org.xml.sax.InputSource)",
            "org.apache.xalan.xsltc.dom.XSLTCDTMManager:org.apache.xml.dtm.DTM getDTM(javax.xml.transform.Source,boolean,org.apache.xml.dtm.DTMWSFilter,boolean,boolean,boolean,int,boolean,boolean)",
            "org.apache.xalan.xsltc.trax.TrAXFilter:void parse(org.xml.sax.InputSource)",
            "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:javax.xml.transform.Source getAssociatedStylesheet(javax.xml.transform.Source,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.trax.TransformerImpl:void transformIdentity(javax.xml.transform.Source,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xml.dtm.ref.DTMManagerDefault:org.apache.xml.dtm.DTM getDTM(javax.xml.transform.Source,boolean,org.apache.xml.dtm.DTMWSFilter,boolean,boolean)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void run()"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Parser:org.apache.xalan.xsltc.compiler.SyntaxTreeNode parse(org.xml.sax.XMLReader,org.xml.sax.InputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.Import:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Include:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Parser:org.apache.xalan.xsltc.compiler.SyntaxTreeNode parse(org.xml.sax.InputSource)",
            "org.apache.xalan.xsltc.compiler.XSLTC:boolean compile(org.xml.sax.InputSource,java.lang.String)"
        ]
    },
    "org.apache.xalan.xsltc.trax.TrAXFilter:void parse(org.xml.sax.InputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.ProcessorInclude:void parse(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.processor.TransformerFactoryImpl:javax.xml.transform.Source getAssociatedStylesheet(javax.xml.transform.Source,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.processor.TransformerFactoryImpl:javax.xml.transform.Templates newTemplates(javax.xml.transform.Source)",
            "org.apache.xalan.transformer.TrAXFilter:void parse(org.xml.sax.InputSource)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void transform(javax.xml.transform.Source,javax.xml.transform.Result)",
            "org.apache.xalan.xslt.Process:void main(java.lang.String[])",
            "org.apache.xalan.xsltc.compiler.Parser:org.apache.xalan.xsltc.compiler.SyntaxTreeNode parse(org.xml.sax.XMLReader,org.xml.sax.InputSource)",
            "org.apache.xalan.xsltc.dom.XSLTCDTMManager:org.apache.xml.dtm.DTM getDTM(javax.xml.transform.Source,boolean,org.apache.xml.dtm.DTMWSFilter,boolean,boolean,boolean,int,boolean,boolean)",
            "org.apache.xalan.xsltc.trax.TrAXFilter:void parse(org.xml.sax.InputSource)",
            "org.apache.xalan.xsltc.trax.TrAXFilter:void parse(java.lang.String)",
            "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:javax.xml.transform.Source getAssociatedStylesheet(javax.xml.transform.Source,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.trax.TransformerImpl:void transformIdentity(javax.xml.transform.Source,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xml.dtm.ref.DTMManagerDefault:org.apache.xml.dtm.DTM getDTM(javax.xml.transform.Source,boolean,org.apache.xml.dtm.DTMWSFilter,boolean,boolean)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void run()"
        ]
    },
    "org.apache.xalan.xsltc.trax.TransformerImpl:void transformIdentity(javax.xml.transform.Source,org.apache.xml.serializer.SerializationHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.trax.TransformerImpl:void transform(javax.xml.transform.Source,org.apache.xml.serializer.SerializationHandler,java.lang.String)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMManagerDefault:org.apache.xml.dtm.DTM getDTM(javax.xml.transform.Source,boolean,org.apache.xml.dtm.DTMWSFilter,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerImpl:void transform(javax.xml.transform.Source,boolean)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator nodeList2Iterator(org.w3c.dom.NodeList,org.apache.xalan.xsltc.Translet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xml.dtm.ref.DTMManagerDefault:int getDTMHandleFromNode(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.DTMManagerDefault:org.apache.xml.dtm.DTM createDocumentFragment()",
            "org.apache.xpath.XPathContext:org.apache.xml.dtm.DTM getDTM(javax.xml.transform.Source,boolean,org.apache.xml.dtm.DTMWSFilter,boolean,boolean)",
            "org.apache.xpath.XPathContext:org.apache.xml.dtm.DTM getGlobalRTFDTM()",
            "org.apache.xpath.XPathContext:org.apache.xml.dtm.DTM getRTFDTM()"
        ]
    },
    "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void run()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.transformer.TreeWalker2Result:void traverse(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemCopyOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void dispatchToEvents(int,org.xml.sax.ContentHandler)"
        ]
    },
    "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void dispatchToEvents(int,org.xml.sax.ContentHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.serialize.SerializerUtils:void outputResultTreeFragment(org.apache.xml.serializer.SerializationHandler,org.apache.xpath.objects.XObject,org.apache.xpath.XPathContext)",
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:void dispatchToEvents(int,org.xml.sax.ContentHandler)"
        ]
    },
    "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.xml.sax.InputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.ProcessorInclude:void parse(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.processor.TransformerFactoryImpl:javax.xml.transform.Source getAssociatedStylesheet(javax.xml.transform.Source,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.processor.TransformerFactoryImpl:javax.xml.transform.Templates newTemplates(javax.xml.transform.Source)",
            "org.apache.xalan.transformer.TrAXFilter:void parse(org.xml.sax.InputSource)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void transform(javax.xml.transform.Source,javax.xml.transform.Result)",
            "org.apache.xalan.xslt.Process:void main(java.lang.String[])",
            "org.apache.xalan.xsltc.compiler.Parser:org.apache.xalan.xsltc.compiler.SyntaxTreeNode parse(org.xml.sax.XMLReader,org.xml.sax.InputSource)",
            "org.apache.xalan.xsltc.dom.XSLTCDTMManager:org.apache.xml.dtm.DTM getDTM(javax.xml.transform.Source,boolean,org.apache.xml.dtm.DTMWSFilter,boolean,boolean,boolean,int,boolean,boolean)",
            "org.apache.xalan.xsltc.trax.TrAXFilter:void parse(org.xml.sax.InputSource)",
            "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:javax.xml.transform.Source getAssociatedStylesheet(javax.xml.transform.Source,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.trax.TransformerImpl:void transformIdentity(javax.xml.transform.Source,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xml.dtm.ref.DTMManagerDefault:org.apache.xml.dtm.DTM getDTM(javax.xml.transform.Source,boolean,org.apache.xml.dtm.DTMWSFilter,boolean,boolean)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void run()"
        ]
    },
    "org.apache.xalan.serialize.SerializerFactory$DOMSerializerWrapper:void serialize(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.serialize.SerializerFactory$DOMSerializerWrapper:void serialize(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serializer.ToUnknownStream:void serialize(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.serialize.SerializerFactory$DOMSerializerWrapper:void serialize(org.w3c.dom.Node)",
            "org.apache.xml.serializer.ToUnknownStream:void serialize(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xalan.processor.TransformerFactoryImpl:javax.xml.transform.Templates processFromNode(org.w3c.dom.Node,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.TransformerFactoryImpl:javax.xml.transform.Templates newTemplates(javax.xml.transform.Source)"
        ]
    },
    "org.apache.xalan.serialize.SerializerUtils:void outputResultTreeFragment(org.apache.xml.serializer.SerializationHandler,org.apache.xpath.objects.XObject,org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.XSLProcessorContext:void outputToResultTree(org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.templates.ElemCopyOf:void execute(org.apache.xalan.transformer.TransformerImpl)"
        ]
    },
    "org.apache.xalan.templates.ElemAttributeSet:void execute(org.apache.xalan.transformer.TransformerImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemApplyTemplates:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemUse:void applyAttrSets(org.apache.xalan.transformer.TransformerImpl,org.apache.xalan.templates.StylesheetRoot,org.apache.xml.utils.QName[])",
            "org.apache.xalan.transformer.TransformerImpl:void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement,boolean)"
        ]
    },
    "org.apache.xalan.transformer.TransformerImpl:java.lang.Object extFunction(org.apache.xpath.functions.FuncExtFunction,java.util.Vector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.functions.FuncExtFunction:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xalan.lib.sql.SQLDocument:void executeSQLStatement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.SQLDocument:void execute(org.apache.xalan.lib.sql.XConnection,org.apache.xalan.lib.sql.SQLQueryParser)"
        ]
    },
    "org.apache.xpath.axes.PredicatedNodeTest:int getProximityPosition(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.functions.FuncPosition:int getPositionInContextNodeList(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.objects.XObject:boolean greaterThan(org.apache.xpath.objects.XObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.objects.XObject:boolean lessThan(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.operations.Gt:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject,org.apache.xpath.objects.XObject)"
        ]
    },
    "org.apache.xpath.operations.Lt:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject,org.apache.xpath.objects.XObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.operations.Operation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.objects.XObject:boolean greaterThanOrEqual(org.apache.xpath.objects.XObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.objects.XObject:boolean lessThanOrEqual(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.operations.Gte:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject,org.apache.xpath.objects.XObject)"
        ]
    },
    "org.apache.xpath.operations.Lte:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject,org.apache.xpath.objects.XObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.operations.Operation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.objects.XObject:boolean lessThan(org.apache.xpath.objects.XObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.objects.XObject:boolean greaterThan(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.operations.Lt:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject,org.apache.xpath.objects.XObject)"
        ]
    },
    "org.apache.xpath.operations.Gt:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject,org.apache.xpath.objects.XObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.operations.Operation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.objects.XObject:boolean lessThanOrEqual(org.apache.xpath.objects.XObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.objects.XObject:boolean greaterThanOrEqual(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.operations.Lte:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject,org.apache.xpath.objects.XObject)"
        ]
    },
    "org.apache.xpath.operations.Gte:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject,org.apache.xpath.objects.XObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.operations.Operation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.objects.XBoolean:boolean equals(org.apache.xpath.objects.XObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.objects.XBoolean:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XNumber:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XObject:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XObject:boolean notEquals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XObject:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.objects.XRTreeFrag:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XString:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XStringForFSB:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.operations.Equals:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject,org.apache.xpath.objects.XObject)",
            "org.apache.xpath.operations.Equals:boolean bool(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.objects.XNumber:boolean equals(org.apache.xpath.objects.XObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.objects.XBoolean:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XNumber:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XObject:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XObject:boolean notEquals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XObject:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.objects.XRTreeFrag:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XString:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XStringForFSB:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.operations.Equals:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject,org.apache.xpath.objects.XObject)",
            "org.apache.xpath.operations.Equals:boolean bool(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.objects.XObject:boolean equals(org.apache.xpath.objects.XObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.objects.XBoolean:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XNumber:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XObject:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XObject:boolean notEquals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XObject:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.objects.XRTreeFrag:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XString:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XStringForFSB:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.operations.Equals:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject,org.apache.xpath.objects.XObject)",
            "org.apache.xpath.operations.Equals:boolean bool(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.objects.XObject:boolean notEquals(org.apache.xpath.objects.XObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.objects.XObject:boolean notEquals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.operations.NotEquals:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject,org.apache.xpath.objects.XObject)"
        ]
    },
    "org.apache.xpath.objects.XObject:boolean deepEquals(org.apache.xpath.Expression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.RedundentExprEliminator:int findAndEliminateRedundant(int,int,org.apache.xpath.ExpressionOwner,org.apache.xalan.templates.ElemTemplateElement,java.util.Vector)",
            "org.apache.xalan.templates.RedundentExprEliminator:int oldFindAndEliminateRedundant(int,int,org.apache.xpath.ExpressionOwner,org.apache.xalan.templates.ElemTemplateElement,java.util.Vector)",
            "org.apache.xpath.axes.FilterExprIterator:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.FilterExprWalker:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.Function2Args:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.Function3Args:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.FunctionMultiArgs:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.FunctionOneArg:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.operations.Operation:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.operations.UnaryOperation:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.patterns.StepPattern:boolean deepEquals(org.apache.xpath.Expression)"
        ]
    },
    "org.apache.xpath.objects.XRTreeFrag:boolean equals(org.apache.xpath.objects.XObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.objects.XBoolean:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XNumber:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XObject:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XObject:boolean notEquals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XObject:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.objects.XRTreeFrag:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XString:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XStringForFSB:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.operations.Equals:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject,org.apache.xpath.objects.XObject)",
            "org.apache.xpath.operations.Equals:boolean bool(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.objects.XString:boolean equals(org.apache.xpath.objects.XObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.objects.XBoolean:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XNumber:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XObject:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XObject:boolean notEquals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XObject:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.objects.XRTreeFrag:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XString:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XStringForFSB:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.operations.Equals:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject,org.apache.xpath.objects.XObject)",
            "org.apache.xpath.operations.Equals:boolean bool(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.objects.XStringForFSB:boolean equals(org.apache.xpath.objects.XObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.objects.XBoolean:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XNumber:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XObject:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XObject:boolean notEquals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XObject:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.objects.XRTreeFrag:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XString:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XStringForFSB:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.operations.Equals:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject,org.apache.xpath.objects.XObject)",
            "org.apache.xpath.operations.Equals:boolean bool(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.operations.Equals:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject,org.apache.xpath.objects.XObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.operations.Operation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.operations.NotEquals:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject,org.apache.xpath.objects.XObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.operations.Operation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xalan.extensions.ExtensionHandlerJavaClass:java.lang.Object callFunction(java.lang.String,java.util.Vector,java.lang.Object,org.apache.xalan.extensions.ExpressionContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.ExtensionHandlerJavaClass:java.lang.Object callFunction(org.apache.xpath.functions.FuncExtFunction,java.util.Vector,org.apache.xalan.extensions.ExpressionContext)",
            "org.apache.xalan.extensions.ExtensionsTable:java.lang.Object extFunction(java.lang.String,java.lang.String,java.util.Vector,java.lang.Object,org.apache.xalan.extensions.ExpressionContext)",
            "org.apache.xalan.extensions.XPathFunctionImpl:java.lang.Object evaluate(java.util.List)"
        ]
    },
    "org.apache.xalan.extensions.ExtensionHandlerJavaPackage:java.lang.Object callFunction(java.lang.String,java.util.Vector,java.lang.Object,org.apache.xalan.extensions.ExpressionContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.ExtensionHandlerJavaPackage:java.lang.Object callFunction(org.apache.xpath.functions.FuncExtFunction,java.util.Vector,org.apache.xalan.extensions.ExpressionContext)",
            "org.apache.xalan.extensions.ExtensionsTable:java.lang.Object extFunction(java.lang.String,java.lang.String,java.util.Vector,java.lang.Object,org.apache.xalan.extensions.ExpressionContext)",
            "org.apache.xalan.extensions.XPathFunctionImpl:java.lang.Object evaluate(java.util.List)"
        ]
    },
    "org.apache.xalan.extensions.MethodResolver:java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Object[],java.lang.Object[][],org.apache.xalan.extensions.ExpressionContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.ExtensionHandlerJavaClass:java.lang.Object callFunction(java.lang.String,java.util.Vector,java.lang.Object,org.apache.xalan.extensions.ExpressionContext)",
            "org.apache.xalan.extensions.ExtensionHandlerJavaPackage:java.lang.Object callFunction(java.lang.String,java.util.Vector,java.lang.Object,org.apache.xalan.extensions.ExpressionContext)"
        ]
    },
    "org.apache.xalan.extensions.MethodResolver:java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Object[],java.lang.Object[][],org.apache.xalan.extensions.ExpressionContext,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.ExtensionHandlerJavaClass:java.lang.Object callFunction(java.lang.String,java.util.Vector,java.lang.Object,org.apache.xalan.extensions.ExpressionContext)",
            "org.apache.xalan.extensions.ExtensionHandlerJavaPackage:java.lang.Object callFunction(java.lang.String,java.util.Vector,java.lang.Object,org.apache.xalan.extensions.ExpressionContext)"
        ]
    },
    "org.apache.xalan.trace.TraceManager:void fireSelectedEvent(int,org.apache.xalan.templates.ElemTemplateElement,java.lang.String,org.apache.xpath.XPath,org.apache.xpath.objects.XObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemApplyTemplates:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemChoose:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemCopyOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemIf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemValueOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemVariable:org.apache.xpath.objects.XObject getValue(org.apache.xalan.transformer.TransformerImpl,int)",
            "org.apache.xalan.templates.ElemWithParam:org.apache.xpath.objects.XObject getValue(org.apache.xalan.transformer.TransformerImpl,int)"
        ]
    },
    "org.apache.xpath.NodeSet:void <init>(org.apache.xpath.NodeSet)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xpath.NodeSet:void <init>(org.w3c.dom.traversal.NodeIterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.Extensions:org.apache.xpath.NodeSet nodeset(org.apache.xalan.extensions.ExpressionContext,java.lang.Object)"
        ]
    },
    "org.apache.xpath.NodeSet:void addNodes(org.apache.xpath.NodeSet)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xpath.objects.XNodeSetForDOM:void <init>(org.w3c.dom.traversal.NodeIterator,org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.objects.XObjectFactory:org.apache.xpath.objects.XObject create(java.lang.Object,org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xalan.lib.sql.XConnection:void addParameterFromElement(org.w3c.dom.NodeList)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.lib.ExsltBase:java.lang.String toString(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.ExsltBase:java.lang.String toString(org.w3c.dom.Node)",
            "org.apache.xalan.lib.ExsltBase:double toNumber(org.w3c.dom.Node)",
            "org.apache.xalan.lib.ExsltSets:org.w3c.dom.NodeList distinct(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.ExsltStrings:java.lang.String concat(org.w3c.dom.NodeList)"
        ]
    },
    "org.apache.xalan.lib.ExsltMath:double max(org.w3c.dom.NodeList)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.ExsltMath:org.w3c.dom.NodeList highest(org.w3c.dom.NodeList)"
        ]
    },
    "org.apache.xalan.lib.ExsltMath:double min(org.w3c.dom.NodeList)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.ExsltMath:org.w3c.dom.NodeList lowest(org.w3c.dom.NodeList)"
        ]
    },
    "org.apache.xalan.lib.ExsltMath:org.w3c.dom.NodeList highest(org.w3c.dom.NodeList)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.lib.ExsltMath:org.w3c.dom.NodeList lowest(org.w3c.dom.NodeList)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.lib.ExsltSets:org.w3c.dom.NodeList leading(org.w3c.dom.NodeList,org.w3c.dom.NodeList)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.lib.ExsltSets:org.w3c.dom.NodeList trailing(org.w3c.dom.NodeList,org.w3c.dom.NodeList)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.lib.ExsltSets:org.w3c.dom.NodeList distinct(org.w3c.dom.NodeList)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.Extensions:org.w3c.dom.NodeList distinct(org.w3c.dom.NodeList)"
        ]
    },
    "org.apache.xalan.lib.ExsltStrings:java.lang.String concat(org.w3c.dom.NodeList)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.lib.NodeInfo:java.lang.String systemId(org.w3c.dom.NodeList)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.lib.NodeInfo:java.lang.String publicId(org.w3c.dom.NodeList)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.lib.NodeInfo:int lineNumber(org.w3c.dom.NodeList)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.lib.NodeInfo:int columnNumber(org.w3c.dom.NodeList)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.trace.TracerEvent:java.lang.String printNodeList(org.w3c.dom.NodeList)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.runtime.BasisLibrary:void copyNodes(org.w3c.dom.NodeList,org.w3c.dom.Document,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.runtime.BasisLibrary:void copyNodes(org.w3c.dom.NodeList,org.w3c.dom.Document,org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator nodeList2Iterator(org.w3c.dom.NodeList,org.apache.xalan.xsltc.Translet,org.apache.xalan.xsltc.DOM)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.NodeList getElementsByTagName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.dtm.ref.DTMNodeProxy:void traverseChildren(java.util.Vector,org.w3c.dom.Node,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.NodeList getElementsByTagName(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:void traverseChildren(java.util.Vector,org.w3c.dom.Node,java.lang.String,boolean)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.NodeList getElementsByTagNameNS(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.dtm.ref.DTMNodeProxy:void traverseChildren(java.util.Vector,org.w3c.dom.Node,java.lang.String,java.lang.String,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.NodeList getElementsByTagNameNS(java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:void traverseChildren(java.util.Vector,org.w3c.dom.Node,java.lang.String,java.lang.String,boolean,boolean)"
        ]
    },
    "org.apache.xpath.domapi.XPathResultImpl:int getSnapshotLength()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xpath.NodeSet:void addNodes(org.w3c.dom.NodeList)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.NodeSet:void <init>(org.w3c.dom.NodeList)"
        ]
    },
    "org.apache.xpath.NodeSet:void addNodesInDocOrder(org.w3c.dom.NodeList,org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xpath.NodeSetDTM:void <init>(org.w3c.dom.NodeList,org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.ExsltDynamic:double max(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList,java.lang.String)",
            "org.apache.xalan.lib.ExsltDynamic:double min(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList,java.lang.String)",
            "org.apache.xalan.lib.ExsltDynamic:double sum(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList,java.lang.String)",
            "org.apache.xalan.lib.ExsltDynamic:org.w3c.dom.NodeList map(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList,java.lang.String)",
            "org.apache.xalan.lib.ExsltDynamic:org.w3c.dom.NodeList closure(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList,java.lang.String)",
            "org.apache.xpath.objects.XNodeSetForDOM:void <init>(org.w3c.dom.NodeList,org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.objects.XNodeSet:void <init>(int,org.apache.xml.dtm.DTMManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.XSLProcessorContext:void outputToResultTree(org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.transformer.KeyTable:void addValueInRefsTable(org.apache.xpath.XPathContext,org.apache.xml.utils.XMLString,int)",
            "org.apache.xpath.functions.FuncCurrent:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XNodeSet:void <init>(org.apache.xml.dtm.DTMManager)"
        ]
    },
    "org.apache.xpath.axes.FilterExprWalker:int getLastPos(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.functions.FuncLast:int getCountOfContextNodeList(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xalan.extensions.ExtensionHandlerGeneral:java.lang.Object callFunction(java.lang.String,java.util.Vector,java.lang.Object,org.apache.xalan.extensions.ExpressionContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.ExtensionHandlerGeneral:java.lang.Object callFunction(org.apache.xpath.functions.FuncExtFunction,java.util.Vector,org.apache.xalan.extensions.ExpressionContext)",
            "org.apache.xalan.extensions.ExtensionHandlerGeneral:void processElement(java.lang.String,org.apache.xalan.templates.ElemTemplateElement,org.apache.xalan.transformer.TransformerImpl,org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.extensions.ExtensionsTable:java.lang.Object extFunction(java.lang.String,java.lang.String,java.util.Vector,java.lang.Object,org.apache.xalan.extensions.ExpressionContext)",
            "org.apache.xalan.extensions.XPathFunctionImpl:java.lang.Object evaluate(java.util.List)"
        ]
    },
    "org.apache.xpath.objects.XNodeSet:org.w3c.dom.NodeList nodelist()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.MethodResolver:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.xalan.lib.ExsltDynamic:org.w3c.dom.NodeList map(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList,java.lang.String)",
            "org.apache.xalan.lib.ExsltDynamic:org.w3c.dom.NodeList closure(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList,java.lang.String)",
            "org.apache.xpath.domapi.XPathResultImpl:void <init>(short,org.apache.xpath.objects.XObject,org.w3c.dom.Node,org.apache.xpath.XPath)",
            "org.apache.xpath.jaxp.JAXPExtensionsProvider:java.lang.Object extFunction(java.lang.String,java.lang.String,java.util.Vector,java.lang.Object)",
            "org.apache.xpath.jaxp.JAXPExtensionsProvider:java.lang.Object extFunction(org.apache.xpath.functions.FuncExtFunction,java.util.Vector)",
            "org.apache.xpath.jaxp.XPathExpressionImpl:java.lang.Object getResultAsType(org.apache.xpath.objects.XObject,javax.xml.namespace.QName)",
            "org.apache.xpath.jaxp.XPathImpl:java.lang.Object getResultAsType(org.apache.xpath.objects.XObject,javax.xml.namespace.QName)",
            "org.apache.xpath.objects.XNodeSetForDOM:org.w3c.dom.NodeList nodelist()",
            "org.apache.xpath.CachedXPathAPI:org.w3c.dom.NodeList selectNodeList(org.w3c.dom.Node,java.lang.String,org.w3c.dom.Node)",
            "org.apache.xpath.XPathAPI:org.w3c.dom.NodeList selectNodeList(org.w3c.dom.Node,java.lang.String,org.w3c.dom.Node)"
        ]
    },
    "org.apache.xpath.objects.XRTreeFrag:org.w3c.dom.NodeList convertToNodeset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.MethodResolver:java.lang.Object convert(java.lang.Object,java.lang.Class)"
        ]
    },
    "org.apache.xalan.lib.sql.XConnection:void skipRec(org.apache.xalan.extensions.ExpressionContext,java.lang.Object,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.lib.sql.XConnection:void close(org.apache.xalan.extensions.ExpressionContext,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xpath.axes.NodeSequence:void setCurrentPos(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:org.apache.xml.dtm.DTMIterator sortNodes(org.apache.xpath.XPathContext,java.util.Vector,org.apache.xml.dtm.DTMIterator)",
            "org.apache.xalan.trace.PrintTraceListener:void selected(org.apache.xalan.trace.SelectionEvent)",
            "org.apache.xalan.transformer.NodeSorter:void sort(org.apache.xml.dtm.DTMIterator,java.util.Vector,org.apache.xpath.XPathContext)",
            "org.apache.xml.dtm.ref.DTMNodeList:void <init>(org.apache.xml.dtm.DTMIterator)",
            "org.apache.xpath.axes.NodeSequence:int item(int)",
            "org.apache.xpath.objects.XNodeSet:org.apache.xpath.NodeSetDTM mutableNodeset()"
        ]
    },
    "org.apache.xml.dtm.ref.DTMNodeList:org.w3c.dom.Node item(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.XConnection:org.apache.xpath.objects.XBooleanStatic connect(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.sql.XConnection:void addParameterFromElement(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.ExsltBase:java.lang.String toString(org.w3c.dom.Node)",
            "org.apache.xalan.lib.ExsltDynamic:org.w3c.dom.NodeList map(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList,java.lang.String)",
            "org.apache.xalan.lib.ExsltDynamic:org.w3c.dom.NodeList closure(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList,java.lang.String)",
            "org.apache.xalan.lib.ExsltMath:double max(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.ExsltMath:double min(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.ExsltMath:org.w3c.dom.NodeList highest(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.ExsltMath:org.w3c.dom.NodeList lowest(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.ExsltSets:org.w3c.dom.NodeList leading(org.w3c.dom.NodeList,org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.ExsltSets:org.w3c.dom.NodeList trailing(org.w3c.dom.NodeList,org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.ExsltSets:org.w3c.dom.NodeList distinct(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.ExsltStrings:java.lang.String concat(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.NodeInfo:java.lang.String systemId(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.NodeInfo:java.lang.String publicId(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.NodeInfo:int lineNumber(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.NodeInfo:int columnNumber(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.PipeDocument:void pipeDocument(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)",
            "org.apache.xalan.templates.ElemExsltFunction:void execute(org.apache.xalan.transformer.TransformerImpl,org.apache.xpath.objects.XObject[])",
            "org.apache.xalan.trace.TracerEvent:java.lang.String printNodeList(org.w3c.dom.NodeList)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:void copyNodes(org.w3c.dom.NodeList,org.w3c.dom.Document,org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.NodeList getElementsByTagName(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:void traverseChildren(java.util.Vector,org.w3c.dom.Node,java.lang.String,boolean)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.NodeList getElementsByTagNameNS(java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:void traverseChildren(java.util.Vector,org.w3c.dom.Node,java.lang.String,java.lang.String,boolean,boolean)",
            "org.apache.xpath.domapi.XPathResultImpl:org.w3c.dom.Node snapshotItem(int)",
            "org.apache.xpath.NodeSet:void addNodes(org.w3c.dom.NodeList)",
            "org.apache.xpath.NodeSet:void addNodesInDocOrder(org.w3c.dom.NodeList,org.apache.xpath.XPathContext)",
            "org.apache.xpath.NodeSet:boolean addNodesInDocOrder(int,int,int,org.w3c.dom.NodeList,org.apache.xpath.XPathContext)",
            "org.apache.xpath.NodeSetDTM:void <init>(org.w3c.dom.NodeList,org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.axes.NodeSequence:int previousNode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.DTMNodeIterator:org.w3c.dom.Node previousNode()",
            "org.apache.xpath.axes.NodeSequence:int previousNode()",
            "org.apache.xpath.axes.NodeSequence:void runTo(int)"
        ]
    },
    "org.apache.xpath.objects.XNodeSet:double num()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.MethodResolver:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.xalan.lib.ExsltDynamic:double max(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList,java.lang.String)",
            "org.apache.xalan.lib.ExsltDynamic:double min(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList,java.lang.String)",
            "org.apache.xalan.lib.ExsltDynamic:double sum(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList,java.lang.String)",
            "org.apache.xalan.templates.ElemNumber:java.lang.String getCountString(org.apache.xalan.transformer.TransformerImpl,int)",
            "org.apache.xalan.templates.FuncFormatNumb:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.transformer.NodeSorter$NodeCompareElem:void <init>(org.apache.xalan.transformer.NodeSorter,int)",
            "org.apache.xalan.transformer.NodeSorter:int compare(org.apache.xalan.transformer.NodeSorter$NodeCompareElem,org.apache.xalan.transformer.NodeSorter$NodeCompareElem,int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean executePredicates(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.domapi.XPathResultImpl:double getNumberValue()",
            "org.apache.xpath.functions.FuncCeiling:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncFloor:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncRound:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstring:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:double getArg0AsNumber(org.apache.xpath.XPathContext)",
            "org.apache.xpath.jaxp.XPathExpressionImpl:java.lang.Object getResultAsType(org.apache.xpath.objects.XObject,javax.xml.namespace.QName)",
            "org.apache.xpath.jaxp.XPathImpl:java.lang.Object getResultAsType(org.apache.xpath.objects.XObject,javax.xml.namespace.QName)",
            "org.apache.xpath.objects.XNodeSet:boolean compare(org.apache.xpath.objects.XObject,org.apache.xpath.objects.Comparator)",
            "org.apache.xpath.objects.XNumber:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XObject:double numWithSideEffects()",
            "org.apache.xpath.objects.XObject:java.lang.Object castToType(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XObject:boolean lessThan(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XObject:boolean lessThanOrEqual(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XObject:boolean greaterThan(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XObject:boolean greaterThanOrEqual(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XRTreeFrag:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XString:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.operations.Div:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject,org.apache.xpath.objects.XObject)",
            "org.apache.xpath.operations.Minus:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject,org.apache.xpath.objects.XObject)",
            "org.apache.xpath.operations.Mod:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject,org.apache.xpath.objects.XObject)",
            "org.apache.xpath.operations.Mult:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject,org.apache.xpath.objects.XObject)",
            "org.apache.xpath.operations.Neg:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.operations.Number:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.operations.Plus:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject,org.apache.xpath.objects.XObject)",
            "org.apache.xpath.operations.Quo:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject,org.apache.xpath.objects.XObject)",
            "org.apache.xpath.patterns.StepPattern:boolean executePredicates(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.patterns.StepPattern:double getMatchScore(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.patterns.UnionPattern:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.XPath:double getMatchScore(org.apache.xpath.XPathContext,int)"
        ]
    },
    "org.apache.xpath.objects.XNodeSet:boolean bool()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.MethodResolver:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.xalan.templates.ElemChoose:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemIf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean executePredicates(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.domapi.XPathResultImpl:boolean getBooleanValue()",
            "org.apache.xpath.functions.FuncBoolean:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncNot:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.jaxp.XPathExpressionImpl:java.lang.Object getResultAsType(org.apache.xpath.objects.XObject,javax.xml.namespace.QName)",
            "org.apache.xpath.jaxp.XPathImpl:java.lang.Object getResultAsType(org.apache.xpath.objects.XObject,javax.xml.namespace.QName)",
            "org.apache.xpath.objects.XBoolean:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XBooleanStatic:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XNodeSet:boolean compare(org.apache.xpath.objects.XObject,org.apache.xpath.objects.Comparator)",
            "org.apache.xpath.objects.XNumber:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XObject:boolean boolWithSideEffects()",
            "org.apache.xpath.objects.XObject:java.lang.Object castToType(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XRTreeFrag:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XString:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.operations.And:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Bool:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.operations.Or:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:boolean bool(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.objects.XNodeSet:void dispatchCharactersEvents(org.xml.sax.ContentHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemValueOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xpath.functions.FuncNormalizeSpace:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.Expression:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)"
        ]
    },
    "org.apache.xpath.objects.XNodeSet:org.apache.xml.utils.XMLString xstr()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.transformer.KeyRefIterator:short filterNode(int)",
            "org.apache.xalan.transformer.KeyTable:java.util.Hashtable getRefsTable()",
            "org.apache.xpath.functions.FuncStartsWith:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstring:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringAfter:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:org.apache.xml.utils.XMLString getArg0AsString(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XNodeSet:void appendToFsb(org.apache.xml.utils.FastStringBuffer)",
            "org.apache.xpath.objects.XNodeSet:boolean compare(org.apache.xpath.objects.XObject,org.apache.xpath.objects.Comparator)",
            "org.apache.xpath.objects.XObject:void dispatchCharactersEvents(org.xml.sax.ContentHandler)",
            "org.apache.xpath.objects.XRTreeFrag:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XString:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.operations.String:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.Expression:org.apache.xml.utils.XMLString xstr(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.objects.XNodeSet:java.lang.String str()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.MethodResolver:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.xalan.extensions.XSLProcessorContext:void outputToResultTree(org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.lib.ExsltDynamic:org.w3c.dom.NodeList map(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList,java.lang.String)",
            "org.apache.xalan.lib.Redirect:java.lang.String getFilename(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)",
            "org.apache.xalan.templates.ElemCopyOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.FuncFormatNumb:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.trace.PrintTraceListener:void selected(org.apache.xalan.trace.SelectionEvent)",
            "org.apache.xalan.transformer.NodeSorter$NodeCompareElem:void <init>(org.apache.xalan.transformer.NodeSorter,int)",
            "org.apache.xalan.transformer.NodeSorter:int compare(org.apache.xalan.transformer.NodeSorter$NodeCompareElem,org.apache.xalan.transformer.NodeSorter$NodeCompareElem,int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.domapi.XPathResultImpl:java.lang.String getStringValue()",
            "org.apache.xpath.functions.FuncConcat:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncContains:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtElementAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunctionAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringBefore:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSystemProperty:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncTranslate:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncUnparsedEntityURI:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.jaxp.XPathExpressionImpl:java.lang.Object getResultAsType(org.apache.xpath.objects.XObject,javax.xml.namespace.QName)",
            "org.apache.xpath.jaxp.XPathImpl:java.lang.Object getResultAsType(org.apache.xpath.objects.XObject,javax.xml.namespace.QName)",
            "org.apache.xpath.objects.XObject:org.apache.xml.utils.XMLString xstr()",
            "org.apache.xpath.objects.XObject:java.lang.String toString()",
            "org.apache.xpath.objects.XObject:int rtf(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XObject:org.w3c.dom.DocumentFragment rtree(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XObject:java.lang.Object castToType(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XObject:void appendToFsb(org.apache.xml.utils.FastStringBuffer)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XStringForFSB:boolean equals(org.apache.xpath.objects.XObject)"
        ]
    },
    "org.apache.xpath.objects.XNodeSet:org.apache.xpath.NodeSetDTM mutableNodeset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.transformer.KeyTable:void addValueInRefsTable(org.apache.xpath.XPathContext,org.apache.xml.utils.XMLString,int)",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:boolean nextNode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:int getNextNodeIdentity(int)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:int getHandleFromNode(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int _exptype(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int _level(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int _firstch(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int _nextsib(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int _prevsib(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int _parent(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:void dumpDTM(java.io.OutputStream)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$ChildTraverser:int getNextIndexed(int,int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$IndexedDTMAxisTraverser:int getNextIndexed(int,int,int)"
        ]
    },
    "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void closeStartTag()",
            "org.apache.xml.serializer.ToXMLSAXHandler:void closeStartTag()",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void closeStartTag()",
            "org.apache.xml.serializer.ToXMLSAXHandler:void closeStartTag()",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xpath.jaxp.XPathExpressionImpl:java.lang.String evaluate(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xpath.jaxp.XPathExpressionImpl:java.lang.String evaluate(org.xml.sax.InputSource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.serializer.ToUnknownStream:void startElement(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:java.lang.String copyElement(int,int,org.apache.xml.serializer.SerializationHandler)"
        ]
    },
    "org.apache.xml.serializer.ToUnknownStream:void startElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemElement:void constructNode(java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemLiteralResult:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.ClonerToResultTree:void cloneToResultTree(int,int,org.apache.xml.dtm.DTM,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.transformer.TreeWalker2Result:void startNode(int)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String startXslElement(java.lang.String,java.lang.String,org.apache.xml.serializer.SerializationHandler,org.apache.xalan.xsltc.DOM,int)",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serializer.ToUnknownStream:void comment(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemComment:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(int,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.xsltc.dom.SAXImpl:java.lang.String shallowCopy(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.w3c.dom.Node)",
            "org.apache.xml.serializer.ToUnknownStream:void comment(java.lang.String)"
        ]
    },
    "org.apache.xml.serializer.ToUnknownStream:void elementDecl(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void elementDecl(java.lang.String,java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void elementDecl(java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void elementDecl(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToUnknownStream:void elementDecl(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xml.serializer.ToUnknownStream:void endEntity(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void endEntity(java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void endEntity(java.lang.String)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void endEntity(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void endEntity(java.lang.String)",
            "org.apache.xml.serializer.SerializerBase:void entityReference(java.lang.String)",
            "org.apache.xml.serializer.ToUnknownStream:void endEntity(java.lang.String)",
            "org.apache.xml.serializer.TreeWalker:void endNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void endNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serializer.ToUnknownStream:void flush()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.ToUnknownStream:void serialize(org.w3c.dom.Node)",
            "org.apache.xml.serializer.ToUnknownStream:void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)",
            "org.apache.xml.serializer.ToUnknownStream:void addAttribute(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToUnknownStream:void addUniqueAttribute(java.lang.String,java.lang.String,int)",
            "org.apache.xml.serializer.ToUnknownStream:void endElement(java.lang.String)",
            "org.apache.xml.serializer.ToUnknownStream:boolean startPrefixMapping(java.lang.String,java.lang.String,boolean)",
            "org.apache.xml.serializer.ToUnknownStream:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToUnknownStream:void externalEntityDecl(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToUnknownStream:void internalEntityDecl(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToUnknownStream:void characters(char[],int,int)",
            "org.apache.xml.serializer.ToUnknownStream:void endDocument()",
            "org.apache.xml.serializer.ToUnknownStream:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToUnknownStream:void ignorableWhitespace(char[],int,int)",
            "org.apache.xml.serializer.ToUnknownStream:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToUnknownStream:void comment(char[],int,int)",
            "org.apache.xml.serializer.ToUnknownStream:void flushPending()"
        ]
    },
    "org.apache.xalan.templates.ElemTextLiteral:void execute(org.apache.xalan.transformer.TransformerImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemApplyTemplates:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.TransformerImpl:void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement,boolean)"
        ]
    },
    "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String startXslElement(java.lang.String,java.lang.String,org.apache.xml.serializer.SerializationHandler,org.apache.xalan.xsltc.DOM,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.serializer.SerializerBase:void entityReference(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.ClonerToResultTree:void cloneToResultTree(int,int,org.apache.xml.dtm.DTM,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xml.serializer.ToUnknownStream:void entityReference(java.lang.String)"
        ]
    },
    "org.apache.xml.serializer.SerializerBase:void characters(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.TreeWalker:void dispatachChars(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serializer.ToHTMLSAXHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.XSLProcessorContext:void outputToResultTree(org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.templates.ElemCopy:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemElement:void constructNode(java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemLiteralResult:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.TransformerHandlerImpl:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void endElement(java.lang.String)",
            "org.apache.xml.serializer.ToUnknownStream:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.TreeWalker:void endNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void endNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serializer.ToHTMLSAXHandler:void processingInstruction(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemPI:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemTextLiteral:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemValueOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.ClonerToResultTree:void cloneToResultTree(int,int,org.apache.xml.dtm.DTM,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.transformer.TransformerHandlerImpl:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void copyPI(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:boolean setEscaping(boolean)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToUnknownStream:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serializer.ToHTMLSAXHandler:void comment(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void comment(char[],int,int)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void comment(char[],int,int)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void comment(char[],int,int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void comment(char[],int,int)",
            "org.apache.xml.serializer.SerializerBase:void comment(java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void comment(char[],int,int)",
            "org.apache.xml.serializer.ToSAXHandler:void comment(java.lang.String)",
            "org.apache.xml.serializer.ToUnknownStream:void comment(char[],int,int)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void comment(char[],int,int)",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.FastStringBuffer:void sendSAXComment(org.xml.sax.ext.LexicalHandler,int,int)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xpath.objects.XString:void dispatchAsComment(org.xml.sax.ext.LexicalHandler)",
            "org.apache.xpath.objects.XStringForChars:void dispatchAsComment(org.xml.sax.ext.LexicalHandler)"
        ]
    },
    "org.apache.xml.serializer.ToHTMLSAXHandler:void startElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemElement:void constructNode(java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemLiteralResult:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.ClonerToResultTree:void cloneToResultTree(int,int,org.apache.xml.dtm.DTM,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.transformer.TreeWalker2Result:void startNode(int)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String startXslElement(java.lang.String,java.lang.String,org.apache.xml.serializer.SerializationHandler,org.apache.xalan.xsltc.DOM,int)",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.w3c.dom.Node)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void startElement(java.lang.String)"
        ]
    },
    "org.apache.xml.serializer.ToHTMLSAXHandler:void endElement(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(int,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.w3c.dom.Node)",
            "org.apache.xml.serializer.ToUnknownStream:void endElement(java.lang.String)"
        ]
    },
    "org.apache.xml.serializer.ToHTMLSAXHandler:void characters(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.XSLProcessorContext:void outputToResultTree(org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.lib.sql.DTMDocument:void dispatchNodeData(org.w3c.dom.Node,org.xml.sax.ContentHandler,int)",
            "org.apache.xalan.templates.ElemCopyOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemNumber:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemTextLiteral:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.TransformerHandlerImpl:void characters(char[],int,int)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void characters(char[],int,int)",
            "org.apache.xalan.transformer.TransformerImpl:void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement,boolean)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:void copy(java.lang.Object,org.apache.xml.serializer.SerializationHandler,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void characters(char[],int,int)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:void dispatchNodeData(org.w3c.dom.Node,org.xml.sax.ContentHandler,int)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void characters(char[],int,int)",
            "org.apache.xml.serializer.SerializerBase:void characters(org.w3c.dom.Node)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void characters(java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void characters(char[],int,int)",
            "org.apache.xml.serializer.ToSAXHandler:void characters(java.lang.String)",
            "org.apache.xml.serializer.ToTextSAXHandler:void characters(java.lang.String)",
            "org.apache.xml.serializer.ToTextSAXHandler:void characters(char[],int,int)",
            "org.apache.xml.serializer.ToUnknownStream:void characters(char[],int,int)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void characters(char[],int,int)",
            "org.apache.xml.serializer.TreeWalker:void dispatachChars(org.w3c.dom.Node)",
            "org.apache.xml.utils.FastStringBuffer:void sendSAXcharacters(org.xml.sax.ContentHandler,int,int)",
            "org.apache.xml.utils.FastStringBuffer:int sendNormalizedSAXcharacters(char[],int,int,org.xml.sax.ContentHandler,int)",
            "org.apache.xml.utils.TreeWalker:void dispatachChars(org.w3c.dom.Node)",
            "org.apache.xpath.objects.XString:void dispatchCharactersEvents(org.xml.sax.ContentHandler)",
            "org.apache.xpath.objects.XStringForChars:void dispatchCharactersEvents(org.xml.sax.ContentHandler)"
        ]
    },
    "org.apache.xml.serializer.ToHTMLSAXHandler:boolean startPrefixMapping(java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.serialize.SerializerUtils:void processNSDecls(org.apache.xml.serializer.SerializationHandler,int,int,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.serialize.SerializerUtils:void ensureNamespaceDeclDeclared(org.apache.xml.serializer.SerializationHandler,org.apache.xml.dtm.DTM,int)",
            "org.apache.xalan.templates.ElemElement:void constructNode(java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemTemplateElement:void executeNSDecls(org.apache.xalan.transformer.TransformerImpl,java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void namespaceAfterStartElement(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToUnknownStream:boolean startPrefixMapping(java.lang.String,java.lang.String,boolean)",
            "org.apache.xml.serializer.ToUnknownStream:void emitFirstTag()"
        ]
    },
    "org.apache.xml.serializer.ToSAXHandler:void comment(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemComment:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(int,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.xsltc.dom.SAXImpl:java.lang.String shallowCopy(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.w3c.dom.Node)",
            "org.apache.xml.serializer.ToUnknownStream:void comment(java.lang.String)"
        ]
    },
    "org.apache.xml.serializer.ToUnknownStream:void flushPending()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.XSLProcessorContext:void outputToResultTree(org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.serialize.SerializerUtils:void outputResultTreeFragment(org.apache.xml.serializer.SerializationHandler,org.apache.xpath.objects.XObject,org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.ElemExtensionCall:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemLiteralResult:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemTextLiteral:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.TransformerImpl:int transformToRTF(org.apache.xalan.templates.ElemTemplateElement,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.transformer.TransformerImpl:void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement,org.xml.sax.ContentHandler)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String startXslElement(java.lang.String,java.lang.String,org.apache.xml.serializer.SerializationHandler,org.apache.xalan.xsltc.DOM,int)",
            "org.apache.xml.serializer.SerializerBase:void entityReference(java.lang.String)",
            "org.apache.xml.serializer.SerializerBase:void characters(org.w3c.dom.Node)",
            "org.apache.xml.serializer.ToUnknownStream:void flushPending()"
        ]
    },
    "org.apache.xml.serializer.ToTextSAXHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void closeStartTag()",
            "org.apache.xml.serializer.ToUnknownStream:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToUnknownStream:void emitFirstTag()",
            "org.apache.xml.serializer.ToXMLSAXHandler:void closeStartTag()",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serializer.ToXMLSAXHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.XSLProcessorContext:void outputToResultTree(org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.templates.ElemCopy:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemElement:void constructNode(java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemLiteralResult:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.TransformerHandlerImpl:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void endElement(java.lang.String)",
            "org.apache.xml.serializer.ToUnknownStream:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void endElement(java.lang.String)",
            "org.apache.xml.serializer.TreeWalker:void endNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void endNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serializer.ToXMLSAXHandler:boolean startPrefixMapping(java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.serialize.SerializerUtils:void processNSDecls(org.apache.xml.serializer.SerializationHandler,int,int,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.serialize.SerializerUtils:void ensureNamespaceDeclDeclared(org.apache.xml.serializer.SerializationHandler,org.apache.xml.dtm.DTM,int)",
            "org.apache.xalan.templates.ElemElement:void constructNode(java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemTemplateElement:void executeNSDecls(org.apache.xalan.transformer.TransformerImpl,java.lang.String)",
            "org.apache.xml.serializer.ToUnknownStream:boolean startPrefixMapping(java.lang.String,java.lang.String,boolean)",
            "org.apache.xml.serializer.ToUnknownStream:void emitFirstTag()",
            "org.apache.xml.serializer.ToXMLSAXHandler:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void namespaceAfterStartElement(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void ensurePrefixIsDeclared(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xml.serializer.ToXMLSAXHandler:void comment(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void comment(char[],int,int)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void comment(char[],int,int)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void comment(char[],int,int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void comment(char[],int,int)",
            "org.apache.xml.serializer.SerializerBase:void comment(java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void comment(char[],int,int)",
            "org.apache.xml.serializer.ToSAXHandler:void comment(java.lang.String)",
            "org.apache.xml.serializer.ToUnknownStream:void comment(char[],int,int)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void comment(char[],int,int)",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.FastStringBuffer:void sendSAXComment(org.xml.sax.ext.LexicalHandler,int,int)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xpath.objects.XString:void dispatchAsComment(org.xml.sax.ext.LexicalHandler)",
            "org.apache.xpath.objects.XStringForChars:void dispatchAsComment(org.xml.sax.ext.LexicalHandler)"
        ]
    },
    "org.apache.xml.serializer.ToXMLSAXHandler:void processingInstruction(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemPI:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemTextLiteral:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemValueOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.ClonerToResultTree:void cloneToResultTree(int,int,org.apache.xml.dtm.DTM,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.transformer.TransformerHandlerImpl:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void copyPI(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToUnknownStream:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToXMLSAXHandler:boolean setEscaping(boolean)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serializer.ToXMLSAXHandler:void startCDATA()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.ClonerToResultTree:void cloneToResultTree(int,int,org.apache.xml.dtm.DTM,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.transformer.TransformerHandlerImpl:void startCDATA()",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void startCDATA()",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startCDATA()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void startCDATA()",
            "org.apache.xml.serializer.ToUnknownStream:void startCDATA()",
            "org.apache.xml.serializer.ToXMLSAXHandler:void characters(char[],int,int)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void startCDATA()",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serializer.ToXMLSAXHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void closeStartTag()",
            "org.apache.xml.serializer.ToUnknownStream:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToUnknownStream:void emitFirstTag()",
            "org.apache.xml.serializer.ToXMLSAXHandler:void closeStartTag()",
            "org.apache.xml.serializer.ToXMLSAXHandler:void startElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void startElement(java.lang.String)",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xalan.lib.sql.DTMDocument:void dispatchNodeData(org.w3c.dom.Node,org.xml.sax.ContentHandler,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.DTMDocument:void dispatchNodeData(org.w3c.dom.Node,org.xml.sax.ContentHandler,int)",
            "org.apache.xalan.lib.sql.DTMDocument:void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)"
        ]
    },
    "org.apache.xalan.transformer.TransformerHandlerImpl:void characters(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.DTMDocument:void dispatchNodeData(org.w3c.dom.Node,org.xml.sax.ContentHandler,int)",
            "org.apache.xalan.transformer.TransformerHandlerImpl:void characters(char[],int,int)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void characters(char[],int,int)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void characters(char[],int,int)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:void dispatchNodeData(org.w3c.dom.Node,org.xml.sax.ContentHandler,int)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void characters(char[],int,int)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void characters(char[],int,int)",
            "org.apache.xml.serializer.ToTextSAXHandler:void characters(java.lang.String)",
            "org.apache.xml.serializer.ToTextSAXHandler:void characters(char[],int,int)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void characters(char[],int,int)",
            "org.apache.xml.serializer.TreeWalker:void dispatachChars(org.w3c.dom.Node)",
            "org.apache.xml.utils.FastStringBuffer:void sendSAXcharacters(org.xml.sax.ContentHandler,int,int)",
            "org.apache.xml.utils.FastStringBuffer:int sendNormalizedSAXcharacters(char[],int,int,org.xml.sax.ContentHandler,int)",
            "org.apache.xml.utils.TreeWalker:void dispatachChars(org.w3c.dom.Node)",
            "org.apache.xpath.objects.XString:void dispatchCharactersEvents(org.xml.sax.ContentHandler)",
            "org.apache.xpath.objects.XStringForChars:void dispatchCharactersEvents(org.xml.sax.ContentHandler)"
        ]
    },
    "org.apache.xalan.transformer.TransformerIdentityImpl:void characters(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.DTMDocument:void dispatchNodeData(org.w3c.dom.Node,org.xml.sax.ContentHandler,int)",
            "org.apache.xalan.transformer.TransformerHandlerImpl:void characters(char[],int,int)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void transform(javax.xml.transform.Source,javax.xml.transform.Result)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void characters(char[],int,int)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void characters(char[],int,int)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:void dispatchNodeData(org.w3c.dom.Node,org.xml.sax.ContentHandler,int)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void characters(char[],int,int)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void characters(char[],int,int)",
            "org.apache.xml.serializer.ToTextSAXHandler:void characters(java.lang.String)",
            "org.apache.xml.serializer.ToTextSAXHandler:void characters(char[],int,int)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void characters(char[],int,int)",
            "org.apache.xml.serializer.TreeWalker:void dispatachChars(org.w3c.dom.Node)",
            "org.apache.xml.utils.FastStringBuffer:void sendSAXcharacters(org.xml.sax.ContentHandler,int,int)",
            "org.apache.xml.utils.FastStringBuffer:int sendNormalizedSAXcharacters(char[],int,int,org.xml.sax.ContentHandler,int)",
            "org.apache.xml.utils.TreeWalker:void dispatachChars(org.w3c.dom.Node)",
            "org.apache.xpath.objects.XString:void dispatchCharactersEvents(org.xml.sax.ContentHandler)",
            "org.apache.xpath.objects.XStringForChars:void dispatchCharactersEvents(org.xml.sax.ContentHandler)"
        ]
    },
    "org.apache.xalan.xsltc.runtime.BasisLibrary:void copy(java.lang.Object,org.apache.xml.serializer.SerializationHandler,int,org.apache.xalan.xsltc.DOM)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void characters(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.DTMDocument:void dispatchNodeData(org.w3c.dom.Node,org.xml.sax.ContentHandler,int)",
            "org.apache.xalan.transformer.TransformerHandlerImpl:void characters(char[],int,int)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void characters(char[],int,int)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void characters(char[],int,int)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:void dispatchNodeData(org.w3c.dom.Node,org.xml.sax.ContentHandler,int)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void characters(char[],int,int)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void characters(char[],int,int)",
            "org.apache.xml.serializer.ToTextSAXHandler:void characters(java.lang.String)",
            "org.apache.xml.serializer.ToTextSAXHandler:void characters(char[],int,int)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void characters(char[],int,int)",
            "org.apache.xml.serializer.TreeWalker:void dispatachChars(org.w3c.dom.Node)",
            "org.apache.xml.utils.FastStringBuffer:void sendSAXcharacters(org.xml.sax.ContentHandler,int,int)",
            "org.apache.xml.utils.FastStringBuffer:int sendNormalizedSAXcharacters(char[],int,int,org.xml.sax.ContentHandler,int)",
            "org.apache.xml.utils.TreeWalker:void dispatachChars(org.w3c.dom.Node)",
            "org.apache.xpath.objects.XString:void dispatchCharactersEvents(org.xml.sax.ContentHandler)",
            "org.apache.xpath.objects.XStringForChars:void dispatchCharactersEvents(org.xml.sax.ContentHandler)"
        ]
    },
    "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:void dispatchNodeData(org.w3c.dom.Node,org.xml.sax.ContentHandler,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:void dispatchNodeData(org.w3c.dom.Node,org.xml.sax.ContentHandler,int)"
        ]
    },
    "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemApplyTemplates:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.ClonerToResultTree:void cloneToResultTree(int,int,org.apache.xml.dtm.DTM,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.transformer.TransformerImpl:boolean applyTemplateToNode(org.apache.xalan.templates.ElemTemplateElement,org.apache.xalan.templates.ElemTemplate,int)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void dispatachChars(int)",
            "org.apache.xpath.axes.LocPathIterator:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.functions.FuncNormalizeSpace:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.objects.XNodeSet:void dispatchCharactersEvents(org.xml.sax.ContentHandler)"
        ]
    },
    "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemApplyTemplates:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.ClonerToResultTree:void cloneToResultTree(int,int,org.apache.xml.dtm.DTM,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.transformer.TransformerImpl:boolean applyTemplateToNode(org.apache.xalan.templates.ElemTemplateElement,org.apache.xalan.templates.ElemTemplate,int)",
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void characters(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void dispatachChars(int)",
            "org.apache.xpath.axes.LocPathIterator:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.functions.FuncNormalizeSpace:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.objects.XNodeSet:void dispatchCharactersEvents(org.xml.sax.ContentHandler)"
        ]
    },
    "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void characters(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.DTMDocument:void dispatchNodeData(org.w3c.dom.Node,org.xml.sax.ContentHandler,int)",
            "org.apache.xalan.transformer.TransformerHandlerImpl:void characters(char[],int,int)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void characters(char[],int,int)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void characters(char[],int,int)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:void dispatchNodeData(org.w3c.dom.Node,org.xml.sax.ContentHandler,int)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void characters(char[],int,int)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void characters(char[],int,int)",
            "org.apache.xml.serializer.ToTextSAXHandler:void characters(java.lang.String)",
            "org.apache.xml.serializer.ToTextSAXHandler:void characters(char[],int,int)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void characters(char[],int,int)",
            "org.apache.xml.serializer.TreeWalker:void dispatachChars(org.w3c.dom.Node)",
            "org.apache.xml.utils.FastStringBuffer:void sendSAXcharacters(org.xml.sax.ContentHandler,int,int)",
            "org.apache.xml.utils.FastStringBuffer:int sendNormalizedSAXcharacters(char[],int,int,org.xml.sax.ContentHandler,int)",
            "org.apache.xml.utils.TreeWalker:void dispatachChars(org.w3c.dom.Node)",
            "org.apache.xpath.objects.XString:void dispatchCharactersEvents(org.xml.sax.ContentHandler)",
            "org.apache.xpath.objects.XStringForChars:void dispatchCharactersEvents(org.xml.sax.ContentHandler)"
        ]
    },
    "org.apache.xml.serializer.ToSAXHandler:void characters(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.serializer.ToTextSAXHandler:void characters(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.SimpleResultTreeImpl:void characters(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.runtime.AbstractTranslet:void characters(java.lang.String,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.w3c.dom.Node)",
            "org.apache.xml.serializer.ToSAXHandler:void characters(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serializer.ToTextSAXHandler:void characters(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.XSLProcessorContext:void outputToResultTree(org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.lib.sql.DTMDocument:void dispatchNodeData(org.w3c.dom.Node,org.xml.sax.ContentHandler,int)",
            "org.apache.xalan.templates.ElemCopyOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemNumber:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemTextLiteral:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.TransformerHandlerImpl:void characters(char[],int,int)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void characters(char[],int,int)",
            "org.apache.xalan.transformer.TransformerImpl:void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement,boolean)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:void copy(java.lang.Object,org.apache.xml.serializer.SerializationHandler,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void characters(char[],int,int)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:void dispatchNodeData(org.w3c.dom.Node,org.xml.sax.ContentHandler,int)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void characters(char[],int,int)",
            "org.apache.xml.serializer.SerializerBase:void characters(org.w3c.dom.Node)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void characters(char[],int,int)",
            "org.apache.xml.serializer.ToSAXHandler:void characters(java.lang.String)",
            "org.apache.xml.serializer.ToTextSAXHandler:void characters(java.lang.String)",
            "org.apache.xml.serializer.ToTextSAXHandler:void characters(char[],int,int)",
            "org.apache.xml.serializer.ToUnknownStream:void characters(char[],int,int)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void characters(char[],int,int)",
            "org.apache.xml.serializer.TreeWalker:void dispatachChars(org.w3c.dom.Node)",
            "org.apache.xml.utils.FastStringBuffer:void sendSAXcharacters(org.xml.sax.ContentHandler,int,int)",
            "org.apache.xml.utils.FastStringBuffer:int sendNormalizedSAXcharacters(char[],int,int,org.xml.sax.ContentHandler,int)",
            "org.apache.xml.utils.TreeWalker:void dispatachChars(org.w3c.dom.Node)",
            "org.apache.xpath.objects.XString:void dispatchCharactersEvents(org.xml.sax.ContentHandler)",
            "org.apache.xpath.objects.XStringForChars:void dispatchCharactersEvents(org.xml.sax.ContentHandler)"
        ]
    },
    "org.apache.xml.serializer.ToUnknownStream:void characters(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.XSLProcessorContext:void outputToResultTree(org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.lib.sql.DTMDocument:void dispatchNodeData(org.w3c.dom.Node,org.xml.sax.ContentHandler,int)",
            "org.apache.xalan.templates.ElemCopyOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemNumber:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemTextLiteral:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.TransformerHandlerImpl:void characters(char[],int,int)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void characters(char[],int,int)",
            "org.apache.xalan.transformer.TransformerImpl:void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement,boolean)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:void copy(java.lang.Object,org.apache.xml.serializer.SerializationHandler,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void characters(char[],int,int)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:void dispatchNodeData(org.w3c.dom.Node,org.xml.sax.ContentHandler,int)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void characters(char[],int,int)",
            "org.apache.xml.serializer.SerializerBase:void characters(org.w3c.dom.Node)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void characters(char[],int,int)",
            "org.apache.xml.serializer.ToTextSAXHandler:void characters(java.lang.String)",
            "org.apache.xml.serializer.ToTextSAXHandler:void characters(char[],int,int)",
            "org.apache.xml.serializer.ToUnknownStream:void characters(java.lang.String)",
            "org.apache.xml.serializer.ToUnknownStream:void characters(char[],int,int)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void characters(char[],int,int)",
            "org.apache.xml.serializer.TreeWalker:void dispatachChars(org.w3c.dom.Node)",
            "org.apache.xml.utils.FastStringBuffer:void sendSAXcharacters(org.xml.sax.ContentHandler,int,int)",
            "org.apache.xml.utils.FastStringBuffer:int sendNormalizedSAXcharacters(char[],int,int,org.xml.sax.ContentHandler,int)",
            "org.apache.xml.utils.TreeWalker:void dispatachChars(org.w3c.dom.Node)",
            "org.apache.xpath.objects.XString:void dispatchCharactersEvents(org.xml.sax.ContentHandler)",
            "org.apache.xpath.objects.XStringForChars:void dispatchCharactersEvents(org.xml.sax.ContentHandler)"
        ]
    },
    "org.apache.xml.serializer.ToXMLSAXHandler:void characters(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.SimpleResultTreeImpl:void characters(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.runtime.AbstractTranslet:void characters(java.lang.String,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.w3c.dom.Node)",
            "org.apache.xml.serializer.ToSAXHandler:void characters(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serializer.TreeWalker:void dispatachChars(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.utils.FastStringBuffer:void sendSAXcharacters(org.xml.sax.ContentHandler,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void copyTextNode(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xml.utils.FastStringBuffer:void sendSAXcharacters(org.xml.sax.ContentHandler,int,int)",
            "org.apache.xpath.objects.XStringForFSB:void dispatchCharactersEvents(org.xml.sax.ContentHandler)"
        ]
    },
    "org.apache.xml.utils.FastStringBuffer:int sendNormalizedSAXcharacters(char[],int,int,org.xml.sax.ContentHandler,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.utils.FastStringBuffer:int sendNormalizedSAXcharacters(org.xml.sax.ContentHandler,int,int)",
            "org.apache.xml.utils.FastStringBuffer:void sendNormalizedSAXcharacters(char[],int,int,org.xml.sax.ContentHandler)"
        ]
    },
    "org.apache.xml.utils.TreeWalker:void dispatachChars(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xpath.objects.XString:void dispatchCharactersEvents(org.xml.sax.ContentHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.DTMDocument:void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)",
            "org.apache.xalan.templates.ElemValueOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)",
            "org.apache.xpath.functions.FuncNormalizeSpace:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.objects.XObject:void dispatchCharactersEvents(org.xml.sax.ContentHandler)",
            "org.apache.xpath.Expression:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)"
        ]
    },
    "org.apache.xpath.objects.XStringForChars:void dispatchCharactersEvents(org.xml.sax.ContentHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.DTMDocument:void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)",
            "org.apache.xalan.templates.ElemValueOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)",
            "org.apache.xpath.functions.FuncNormalizeSpace:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.objects.XObject:void dispatchCharactersEvents(org.xml.sax.ContentHandler)",
            "org.apache.xpath.Expression:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)"
        ]
    },
    "org.apache.xalan.client.XSLTProcessorApplet$TrustedAgent:void run()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.dom.DocumentCache$CachedDocument:void loadDocument(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DocumentCache$CachedDocument:void <init>(org.apache.xalan.xsltc.dom.DocumentCache,java.lang.String)"
        ]
    },
    "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator nodeList2Iterator(org.w3c.dom.NodeList,org.apache.xalan.xsltc.Translet,org.apache.xalan.xsltc.DOM)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator node2Iterator(org.w3c.dom.Node,org.apache.xalan.xsltc.Translet,org.apache.xalan.xsltc.DOM)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMManagerDefault:int getDTMHandleFromNode(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.objects.XNodeSetForDOM:void <init>(org.w3c.dom.Node,org.apache.xml.dtm.DTMManager)",
            "org.apache.xpath.XPathContext:int getDTMHandleFromNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMManagerDefault:org.apache.xml.dtm.DTM createDocumentFragment()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.XPathContext:org.apache.xml.dtm.DTM createDocumentFragment()"
        ]
    },
    "org.apache.xpath.XPathContext:org.apache.xml.dtm.DTM getDTM(javax.xml.transform.Source,boolean,org.apache.xml.dtm.DTMWSFilter,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void <init>(org.apache.xalan.transformer.TransformerImpl,boolean,java.lang.String)",
            "org.apache.xalan.transformer.TransformerImpl:void transform(javax.xml.transform.Source,boolean)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator nodeList2Iterator(org.w3c.dom.NodeList,org.apache.xalan.xsltc.Translet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xpath.SourceTreeManager:int parseToNode(javax.xml.transform.Source,javax.xml.transform.SourceLocator,org.apache.xpath.XPathContext)",
            "org.apache.xpath.XPathContext:org.apache.xml.dtm.DTM getDTM(javax.xml.transform.Source,boolean,org.apache.xml.dtm.DTMWSFilter,boolean,boolean)",
            "org.apache.xpath.XPathContext:org.apache.xml.dtm.DTM getGlobalRTFDTM()",
            "org.apache.xpath.XPathContext:org.apache.xml.dtm.DTM getRTFDTM()"
        ]
    },
    "org.apache.xpath.XPathContext:org.apache.xml.dtm.DTM getGlobalRTFDTM()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerImpl:int transformToGlobalRTF(org.apache.xalan.templates.ElemTemplateElement)"
        ]
    },
    "org.apache.xpath.XPathContext:org.apache.xml.dtm.DTM getRTFDTM()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerImpl:int transformToRTF(org.apache.xalan.templates.ElemTemplateElement)",
            "org.apache.xpath.XPathContext:void pushRTFContext()"
        ]
    },
    "org.apache.xalan.xsltc.cmdline.Transform:void doTransform()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.cmdline.Transform:void main(java.lang.String[])"
        ]
    },
    "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startDocument()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void startDocument()",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void flushStartDoc()",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse()",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startDocument()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void startDocument()",
            "org.apache.xml.serializer.ToSAXHandler:void startDocumentInternal()",
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)"
        ]
    },
    "org.apache.xalan.xsltc.trax.XSLTCSource:org.apache.xalan.xsltc.DOM getDOM(org.apache.xalan.xsltc.dom.XSLTCDTMManager,org.apache.xalan.xsltc.runtime.AbstractTranslet)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.trax.TransformerImpl:void transformIdentity(javax.xml.transform.Source,org.apache.xml.serializer.SerializationHandler)"
        ]
    },
    "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator document(java.lang.String,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator documentF(java.lang.Object,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator document(java.lang.String,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)"
        ]
    },
    "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:void prepareNewDOM()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:void startElement(java.lang.String)",
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:void namespaceAfterStartElement(java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:void comment(java.lang.String)",
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:void comment(char[],int,int)",
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:void processingInstruction(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xalan.xsltc.dom.SAXImpl:org.apache.xalan.xsltc.DOM getResultTreeFrag(int,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMAdapter:org.apache.xalan.xsltc.DOM getResultTreeFrag(int,int,boolean)",
            "org.apache.xalan.xsltc.dom.SAXImpl:org.apache.xalan.xsltc.DOM getResultTreeFrag(int,int)"
        ]
    },
    "org.apache.xalan.xsltc.trax.TransformerImpl:org.apache.xalan.xsltc.DOM getDOM(javax.xml.transform.Source)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.trax.TransformerImpl:void transform(javax.xml.transform.Source,org.apache.xml.serializer.SerializationHandler,java.lang.String)",
            "org.apache.xalan.xsltc.trax.TransformerImpl:org.apache.xalan.xsltc.DOM retrieveDocument(java.lang.String,java.lang.String,org.apache.xalan.xsltc.Translet)"
        ]
    },
    "org.apache.xalan.processor.TransformerFactoryImpl:org.xml.sax.XMLFilter newXMLFilter(javax.xml.transform.Source)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.processor.TransformerFactoryImpl:javax.xml.transform.sax.TransformerHandler newTransformerHandler(javax.xml.transform.Source)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.trax.SmartTransformerFactoryImpl:javax.xml.transform.sax.TransformerHandler newTransformerHandler(javax.xml.transform.Source)"
        ]
    },
    "org.apache.xalan.processor.TransformerFactoryImpl:javax.xml.transform.Transformer newTransformer(javax.xml.transform.Source)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.client.XSLTProcessorApplet:java.lang.String processTransformation()",
            "org.apache.xalan.xsltc.trax.SmartTransformerFactoryImpl:javax.xml.transform.Transformer newTransformer(javax.xml.transform.Source)"
        ]
    },
    "org.apache.xalan.xsltc.trax.SmartTransformerFactoryImpl:javax.xml.transform.Templates newTemplates(javax.xml.transform.Source)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.client.XSLTProcessorApplet:void start()",
            "org.apache.xalan.lib.PipeDocument:void pipeDocument(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)",
            "org.apache.xalan.xslt.Process:void main(java.lang.String[])",
            "org.apache.xalan.xsltc.trax.SmartTransformerFactoryImpl:javax.xml.transform.Templates newTemplates(javax.xml.transform.Source)",
            "org.apache.xalan.xsltc.trax.SmartTransformerFactoryImpl:org.xml.sax.XMLFilter newXMLFilter(javax.xml.transform.Source)"
        ]
    },
    "org.apache.xalan.xsltc.trax.SmartTransformerFactoryImpl:org.xml.sax.XMLFilter newXMLFilter(javax.xml.transform.Source)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.transformer.TrAXFilter:void parse(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.PipeDocument:void usePipe(java.util.Vector,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Import:void parseContents(org.apache.xalan.xsltc.compiler.Parser)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AttributeSet:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Stylesheet:void parseOwnChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void parseChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Template:void parseSimplified(org.apache.xalan.xsltc.compiler.Stylesheet,org.apache.xalan.xsltc.compiler.Parser)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Include:void parseContents(org.apache.xalan.xsltc.compiler.Parser)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AttributeSet:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Stylesheet:void parseOwnChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void parseChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Template:void parseSimplified(org.apache.xalan.xsltc.compiler.Stylesheet,org.apache.xalan.xsltc.compiler.Parser)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Parser:org.apache.xalan.xsltc.compiler.SyntaxTreeNode parse(org.xml.sax.InputSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.Import:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Include:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Parser:org.apache.xalan.xsltc.compiler.SyntaxTreeNode loadExternalStylesheet(java.lang.String)",
            "org.apache.xalan.xsltc.compiler.XSLTC:boolean compile(org.xml.sax.InputSource,java.lang.String)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.XSLTC:boolean compile(org.xml.sax.InputSource,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.XSLTC:boolean compile(java.net.URL)",
            "org.apache.xalan.xsltc.compiler.XSLTC:boolean compile(java.net.URL,java.lang.String)",
            "org.apache.xalan.xsltc.compiler.XSLTC:boolean compile(java.io.InputStream,java.lang.String)",
            "org.apache.xalan.xsltc.compiler.XSLTC:byte[][] compile(java.lang.String,org.xml.sax.InputSource,int)"
        ]
    },
    "org.apache.xalan.xsltc.trax.TrAXFilter:void parse(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.PipeDocument:void usePipe(java.util.Vector,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xalan.xsltc.trax.TransformerImpl:void transform(javax.xml.transform.Source,org.apache.xml.serializer.SerializationHandler,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.trax.TransformerImpl:void transform(javax.xml.transform.Source,javax.xml.transform.Result)"
        ]
    },
    "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:void dispatchToEvents(int,org.xml.sax.ContentHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.serialize.SerializerUtils:void outputResultTreeFragment(org.apache.xml.serializer.SerializationHandler,org.apache.xpath.objects.XObject,org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xalan.templates.ElemUse:void applyAttrSets(org.apache.xalan.transformer.TransformerImpl,org.apache.xalan.templates.StylesheetRoot,org.apache.xml.utils.QName[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemUse:void applyAttrSets(org.apache.xalan.transformer.TransformerImpl,org.apache.xalan.templates.StylesheetRoot)",
            "org.apache.xalan.templates.ElemUse:void execute(org.apache.xalan.transformer.TransformerImpl)"
        ]
    },
    "org.apache.xalan.lib.sql.SQLDocument:void execute(org.apache.xalan.lib.sql.XConnection,org.apache.xalan.lib.sql.SQLQueryParser)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.XConnection:org.apache.xml.dtm.DTM query(org.apache.xalan.extensions.ExpressionContext,java.lang.String)",
            "org.apache.xalan.lib.sql.XConnection:org.apache.xml.dtm.DTM pquery(org.apache.xalan.extensions.ExpressionContext,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xalan.templates.RedundentExprEliminator:int findAndEliminateRedundant(int,int,org.apache.xpath.ExpressionOwner,org.apache.xalan.templates.ElemTemplateElement,java.util.Vector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.RedundentExprEliminator:void eleminateRedundent(org.apache.xalan.templates.ElemTemplateElement,java.util.Vector)"
        ]
    },
    "org.apache.xalan.templates.RedundentExprEliminator:int oldFindAndEliminateRedundant(int,int,org.apache.xpath.ExpressionOwner,org.apache.xalan.templates.ElemTemplateElement,java.util.Vector)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xpath.axes.FilterExprIterator:boolean deepEquals(org.apache.xpath.Expression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.RedundentExprEliminator:int findAndEliminateRedundant(int,int,org.apache.xpath.ExpressionOwner,org.apache.xalan.templates.ElemTemplateElement,java.util.Vector)",
            "org.apache.xalan.templates.RedundentExprEliminator:int oldFindAndEliminateRedundant(int,int,org.apache.xpath.ExpressionOwner,org.apache.xalan.templates.ElemTemplateElement,java.util.Vector)",
            "org.apache.xpath.axes.FilterExprIterator:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.FilterExprWalker:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.UnionPathIterator:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.Function2Args:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.Function3Args:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.FunctionMultiArgs:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.FunctionOneArg:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.operations.Operation:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.operations.UnaryOperation:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.patterns.StepPattern:boolean deepEquals(org.apache.xpath.Expression)"
        ]
    },
    "org.apache.xpath.axes.FilterExprIteratorSimple:boolean deepEquals(org.apache.xpath.Expression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.RedundentExprEliminator:int findAndEliminateRedundant(int,int,org.apache.xpath.ExpressionOwner,org.apache.xalan.templates.ElemTemplateElement,java.util.Vector)",
            "org.apache.xalan.templates.RedundentExprEliminator:int oldFindAndEliminateRedundant(int,int,org.apache.xpath.ExpressionOwner,org.apache.xalan.templates.ElemTemplateElement,java.util.Vector)",
            "org.apache.xpath.axes.FilterExprIterator:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.FilterExprWalker:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.UnionPathIterator:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.Function2Args:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.Function3Args:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.FunctionMultiArgs:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.FunctionOneArg:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.operations.Operation:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.operations.UnaryOperation:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.patterns.StepPattern:boolean deepEquals(org.apache.xpath.Expression)"
        ]
    },
    "org.apache.xpath.axes.FilterExprWalker:boolean deepEquals(org.apache.xpath.Expression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.RedundentExprEliminator:boolean stepsEqual(org.apache.xpath.axes.WalkingIterator,org.apache.xpath.axes.WalkingIterator,int)",
            "org.apache.xalan.templates.RedundentExprEliminator:int findAndEliminateRedundant(int,int,org.apache.xpath.ExpressionOwner,org.apache.xalan.templates.ElemTemplateElement,java.util.Vector)",
            "org.apache.xalan.templates.RedundentExprEliminator:int oldFindAndEliminateRedundant(int,int,org.apache.xpath.ExpressionOwner,org.apache.xalan.templates.ElemTemplateElement,java.util.Vector)",
            "org.apache.xpath.axes.FilterExprIterator:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.FilterExprWalker:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.WalkingIterator:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.Function2Args:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.Function3Args:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.FunctionMultiArgs:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.FunctionOneArg:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.operations.Operation:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.operations.UnaryOperation:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.patterns.StepPattern:boolean deepEquals(org.apache.xpath.Expression)"
        ]
    },
    "org.apache.xpath.axes.PredicatedNodeTest:boolean deepEquals(org.apache.xpath.Expression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.RedundentExprEliminator:int findAndEliminateRedundant(int,int,org.apache.xpath.ExpressionOwner,org.apache.xalan.templates.ElemTemplateElement,java.util.Vector)",
            "org.apache.xalan.templates.RedundentExprEliminator:int oldFindAndEliminateRedundant(int,int,org.apache.xpath.ExpressionOwner,org.apache.xalan.templates.ElemTemplateElement,java.util.Vector)",
            "org.apache.xpath.axes.AxesWalker:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.DescendantIterator:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.FilterExprIterator:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.FilterExprWalker:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.OneStepIterator:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.OneStepIteratorForward:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.UnionPathIterator:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.WalkingIterator:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.Function2Args:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.Function3Args:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.FunctionMultiArgs:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.FunctionOneArg:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.operations.Operation:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.operations.UnaryOperation:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.patterns.StepPattern:boolean deepEquals(org.apache.xpath.Expression)"
        ]
    },
    "org.apache.xpath.functions.Function2Args:boolean deepEquals(org.apache.xpath.Expression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.RedundentExprEliminator:int findAndEliminateRedundant(int,int,org.apache.xpath.ExpressionOwner,org.apache.xalan.templates.ElemTemplateElement,java.util.Vector)",
            "org.apache.xalan.templates.RedundentExprEliminator:int oldFindAndEliminateRedundant(int,int,org.apache.xpath.ExpressionOwner,org.apache.xalan.templates.ElemTemplateElement,java.util.Vector)",
            "org.apache.xpath.axes.FilterExprIterator:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.FilterExprWalker:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.Function2Args:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.Function3Args:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.FunctionMultiArgs:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.FunctionOneArg:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.operations.Operation:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.operations.UnaryOperation:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.patterns.StepPattern:boolean deepEquals(org.apache.xpath.Expression)"
        ]
    },
    "org.apache.xpath.functions.Function3Args:boolean deepEquals(org.apache.xpath.Expression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.RedundentExprEliminator:int findAndEliminateRedundant(int,int,org.apache.xpath.ExpressionOwner,org.apache.xalan.templates.ElemTemplateElement,java.util.Vector)",
            "org.apache.xalan.templates.RedundentExprEliminator:int oldFindAndEliminateRedundant(int,int,org.apache.xpath.ExpressionOwner,org.apache.xalan.templates.ElemTemplateElement,java.util.Vector)",
            "org.apache.xpath.axes.FilterExprIterator:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.FilterExprWalker:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.Function2Args:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.Function3Args:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.FunctionMultiArgs:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.FunctionOneArg:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.operations.Operation:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.operations.UnaryOperation:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.patterns.StepPattern:boolean deepEquals(org.apache.xpath.Expression)"
        ]
    },
    "org.apache.xpath.functions.FunctionMultiArgs:boolean deepEquals(org.apache.xpath.Expression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.RedundentExprEliminator:int findAndEliminateRedundant(int,int,org.apache.xpath.ExpressionOwner,org.apache.xalan.templates.ElemTemplateElement,java.util.Vector)",
            "org.apache.xalan.templates.RedundentExprEliminator:int oldFindAndEliminateRedundant(int,int,org.apache.xpath.ExpressionOwner,org.apache.xalan.templates.ElemTemplateElement,java.util.Vector)",
            "org.apache.xpath.axes.FilterExprIterator:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.FilterExprWalker:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.Function2Args:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.Function3Args:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.FunctionMultiArgs:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.FunctionOneArg:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.operations.Operation:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.operations.UnaryOperation:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.patterns.StepPattern:boolean deepEquals(org.apache.xpath.Expression)"
        ]
    },
    "org.apache.xpath.functions.FunctionOneArg:boolean deepEquals(org.apache.xpath.Expression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.RedundentExprEliminator:int findAndEliminateRedundant(int,int,org.apache.xpath.ExpressionOwner,org.apache.xalan.templates.ElemTemplateElement,java.util.Vector)",
            "org.apache.xalan.templates.RedundentExprEliminator:int oldFindAndEliminateRedundant(int,int,org.apache.xpath.ExpressionOwner,org.apache.xalan.templates.ElemTemplateElement,java.util.Vector)",
            "org.apache.xpath.axes.FilterExprIterator:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.FilterExprWalker:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.Function2Args:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.Function3Args:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.FunctionMultiArgs:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.FunctionOneArg:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.operations.Operation:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.operations.UnaryOperation:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.patterns.StepPattern:boolean deepEquals(org.apache.xpath.Expression)"
        ]
    },
    "org.apache.xpath.operations.Operation:boolean deepEquals(org.apache.xpath.Expression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.RedundentExprEliminator:int findAndEliminateRedundant(int,int,org.apache.xpath.ExpressionOwner,org.apache.xalan.templates.ElemTemplateElement,java.util.Vector)",
            "org.apache.xalan.templates.RedundentExprEliminator:int oldFindAndEliminateRedundant(int,int,org.apache.xpath.ExpressionOwner,org.apache.xalan.templates.ElemTemplateElement,java.util.Vector)",
            "org.apache.xpath.axes.FilterExprIterator:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.FilterExprWalker:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.Function2Args:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.Function3Args:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.FunctionMultiArgs:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.FunctionOneArg:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.operations.Operation:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.operations.UnaryOperation:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.patterns.StepPattern:boolean deepEquals(org.apache.xpath.Expression)"
        ]
    },
    "org.apache.xpath.operations.UnaryOperation:boolean deepEquals(org.apache.xpath.Expression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.RedundentExprEliminator:int findAndEliminateRedundant(int,int,org.apache.xpath.ExpressionOwner,org.apache.xalan.templates.ElemTemplateElement,java.util.Vector)",
            "org.apache.xalan.templates.RedundentExprEliminator:int oldFindAndEliminateRedundant(int,int,org.apache.xpath.ExpressionOwner,org.apache.xalan.templates.ElemTemplateElement,java.util.Vector)",
            "org.apache.xpath.axes.FilterExprIterator:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.FilterExprWalker:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.Function2Args:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.Function3Args:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.FunctionMultiArgs:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.FunctionOneArg:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.operations.Operation:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.operations.UnaryOperation:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.patterns.StepPattern:boolean deepEquals(org.apache.xpath.Expression)"
        ]
    },
    "org.apache.xpath.patterns.StepPattern:boolean deepEquals(org.apache.xpath.Expression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.RedundentExprEliminator:int findAndEliminateRedundant(int,int,org.apache.xpath.ExpressionOwner,org.apache.xalan.templates.ElemTemplateElement,java.util.Vector)",
            "org.apache.xalan.templates.RedundentExprEliminator:int oldFindAndEliminateRedundant(int,int,org.apache.xpath.ExpressionOwner,org.apache.xalan.templates.ElemTemplateElement,java.util.Vector)",
            "org.apache.xpath.axes.FilterExprIterator:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.FilterExprWalker:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.Function2Args:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.Function3Args:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.FunctionMultiArgs:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.FunctionOneArg:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.operations.Operation:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.operations.UnaryOperation:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.patterns.StepPattern:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.patterns.UnionPattern:boolean deepEquals(org.apache.xpath.Expression)"
        ]
    },
    "org.apache.xalan.extensions.ExtensionHandlerJavaClass:java.lang.Object callFunction(org.apache.xpath.functions.FuncExtFunction,java.util.Vector,org.apache.xalan.extensions.ExpressionContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.ExtensionsTable:java.lang.Object extFunction(org.apache.xpath.functions.FuncExtFunction,java.util.Vector,org.apache.xalan.extensions.ExpressionContext)"
        ]
    },
    "org.apache.xalan.extensions.ExtensionsTable:java.lang.Object extFunction(java.lang.String,java.lang.String,java.util.Vector,java.lang.Object,org.apache.xalan.extensions.ExpressionContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerImpl:java.lang.Object extFunction(java.lang.String,java.lang.String,java.util.Vector,java.lang.Object)"
        ]
    },
    "org.apache.xalan.extensions.XPathFunctionImpl:java.lang.Object evaluate(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.jaxp.JAXPExtensionsProvider:java.lang.Object extFunction(java.lang.String,java.lang.String,java.util.Vector,java.lang.Object)",
            "org.apache.xpath.jaxp.JAXPExtensionsProvider:java.lang.Object extFunction(org.apache.xpath.functions.FuncExtFunction,java.util.Vector)"
        ]
    },
    "org.apache.xalan.extensions.ExtensionHandlerJavaPackage:java.lang.Object callFunction(org.apache.xpath.functions.FuncExtFunction,java.util.Vector,org.apache.xalan.extensions.ExpressionContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.ExtensionsTable:java.lang.Object extFunction(org.apache.xpath.functions.FuncExtFunction,java.util.Vector,org.apache.xalan.extensions.ExpressionContext)"
        ]
    },
    "org.apache.xalan.lib.Extensions:org.apache.xpath.NodeSet nodeset(org.apache.xalan.extensions.ExpressionContext,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.ExsltCommon:org.apache.xpath.NodeSet nodeSet(org.apache.xalan.extensions.ExpressionContext,java.lang.Object)"
        ]
    },
    "org.apache.xpath.objects.XObjectFactory:org.apache.xpath.objects.XObject create(java.lang.Object,org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.objects.XObject:org.apache.xpath.objects.XObject create(java.lang.Object,org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xalan.lib.ExsltBase:double toNumber(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.ExsltMath:double max(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.ExsltMath:double min(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.ExsltMath:org.w3c.dom.NodeList highest(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.ExsltMath:org.w3c.dom.NodeList lowest(org.w3c.dom.NodeList)"
        ]
    },
    "org.apache.xalan.lib.Extensions:org.w3c.dom.NodeList distinct(org.w3c.dom.NodeList)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xpath.NodeSet:void <init>(org.w3c.dom.NodeList)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.ExsltSets:org.w3c.dom.NodeList leading(org.w3c.dom.NodeList,org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.ExsltSets:org.w3c.dom.NodeList trailing(org.w3c.dom.NodeList,org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.ExsltSets:org.w3c.dom.NodeList intersection(org.w3c.dom.NodeList,org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.ExsltSets:org.w3c.dom.NodeList difference(org.w3c.dom.NodeList,org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.ExsltSets:boolean hasSameNode(org.w3c.dom.NodeList,org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.Extensions:boolean hasSameNodes(org.w3c.dom.NodeList,org.w3c.dom.NodeList)"
        ]
    },
    "org.apache.xpath.objects.XNodeSetForDOM:void <init>(org.w3c.dom.NodeList,org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.objects.XObjectFactory:org.apache.xpath.objects.XObject create(java.lang.Object,org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.functions.FuncCurrent:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemValueOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncFormatNumb:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.XUnresolvedVariableSimple:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:org.apache.xpath.objects.XNodeSet executeFilterExpr(int,org.apache.xpath.XPathContext,org.apache.xml.utils.PrefixResolver,boolean,int,org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean executePredicates(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncBoolean:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncCeiling:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncConcat:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncContains:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtElementAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunction:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunctionAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncFloor:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncNot:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncRound:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncStartsWith:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstring:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringAfter:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringBefore:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSystemProperty:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncTranslate:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncUnparsedEntityURI:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:org.apache.xml.utils.XMLString getArg0AsString(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:double getArg0AsNumber(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.And:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Or:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.UnaryOperation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:boolean executePredicates(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.Expression:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,boolean)",
            "org.apache.xpath.Expression:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.utils.XMLString xstr(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIterator(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIteratorRaw(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.Expression:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.XPath:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPath:double getMatchScore(org.apache.xpath.XPathContext,int)"
        ]
    },
    "org.apache.xpath.objects.XNodeSet:void <init>(org.apache.xml.dtm.DTMManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.ExsltDynamic:org.apache.xpath.objects.XObject evaluate(org.apache.xalan.extensions.ExpressionContext,java.lang.String)",
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.transformer.KeyTable$1:void <init>(org.apache.xalan.transformer.KeyTable,org.apache.xml.dtm.DTMManager)",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Variable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,boolean)"
        ]
    },
    "org.apache.xalan.extensions.ExtensionHandlerGeneral:java.lang.Object callFunction(org.apache.xpath.functions.FuncExtFunction,java.util.Vector,org.apache.xalan.extensions.ExpressionContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.ExtensionsTable:java.lang.Object extFunction(org.apache.xpath.functions.FuncExtFunction,java.util.Vector,org.apache.xalan.extensions.ExpressionContext)"
        ]
    },
    "org.apache.xpath.domapi.XPathResultImpl:void <init>(short,org.apache.xpath.objects.XObject,org.w3c.dom.Node,org.apache.xpath.XPath)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.domapi.XPathExpressionImpl:java.lang.Object evaluate(org.w3c.dom.Node,short,java.lang.Object)"
        ]
    },
    "org.apache.xpath.jaxp.JAXPExtensionsProvider:java.lang.Object extFunction(java.lang.String,java.lang.String,java.util.Vector,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xpath.jaxp.JAXPExtensionsProvider:java.lang.Object extFunction(org.apache.xpath.functions.FuncExtFunction,java.util.Vector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.functions.FuncExtFunction:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.objects.XNodeSetForDOM:org.w3c.dom.NodeList nodelist()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.MethodResolver:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.xalan.lib.ExsltDynamic:org.w3c.dom.NodeList map(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList,java.lang.String)",
            "org.apache.xalan.lib.ExsltDynamic:org.w3c.dom.NodeList closure(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList,java.lang.String)",
            "org.apache.xpath.domapi.XPathResultImpl:void <init>(short,org.apache.xpath.objects.XObject,org.w3c.dom.Node,org.apache.xpath.XPath)",
            "org.apache.xpath.jaxp.JAXPExtensionsProvider:java.lang.Object extFunction(java.lang.String,java.lang.String,java.util.Vector,java.lang.Object)",
            "org.apache.xpath.jaxp.JAXPExtensionsProvider:java.lang.Object extFunction(org.apache.xpath.functions.FuncExtFunction,java.util.Vector)",
            "org.apache.xpath.jaxp.XPathExpressionImpl:java.lang.Object getResultAsType(org.apache.xpath.objects.XObject,javax.xml.namespace.QName)",
            "org.apache.xpath.jaxp.XPathImpl:java.lang.Object getResultAsType(org.apache.xpath.objects.XObject,javax.xml.namespace.QName)",
            "org.apache.xpath.CachedXPathAPI:org.w3c.dom.NodeList selectNodeList(org.w3c.dom.Node,java.lang.String,org.w3c.dom.Node)",
            "org.apache.xpath.XPathAPI:org.w3c.dom.NodeList selectNodeList(org.w3c.dom.Node,java.lang.String,org.w3c.dom.Node)"
        ]
    },
    "org.apache.xalan.lib.sql.XConnection:org.apache.xpath.objects.XBooleanStatic connect(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.XConnection:void <init>(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList)"
        ]
    },
    "org.apache.xpath.domapi.XPathResultImpl:org.w3c.dom.Node snapshotItem(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xpath.NodeSet:boolean addNodesInDocOrder(int,int,int,org.w3c.dom.NodeList,org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.NodeSet:boolean addNodesInDocOrder(int,int,int,org.w3c.dom.NodeList,org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMNodeIterator:org.w3c.dom.Node previousNode()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xpath.domapi.XPathResultImpl:double getNumberValue()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xpath.objects.XObject:double numWithSideEffects()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)"
        ]
    },
    "org.apache.xpath.objects.XObject:java.lang.Object castToType(int,org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xpath.operations.Div:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject,org.apache.xpath.objects.XObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.operations.Operation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.operations.Minus:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject,org.apache.xpath.objects.XObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.operations.Operation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.operations.Mod:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject,org.apache.xpath.objects.XObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.operations.Operation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.operations.Mult:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject,org.apache.xpath.objects.XObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.operations.Operation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.operations.Neg:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.operations.UnaryOperation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.operations.Number:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.operations.UnaryOperation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.operations.Plus:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject,org.apache.xpath.objects.XObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.operations.Operation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.operations.Quo:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject,org.apache.xpath.objects.XObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.operations.Operation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.domapi.XPathResultImpl:boolean getBooleanValue()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xpath.objects.XBooleanStatic:boolean equals(org.apache.xpath.objects.XObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.objects.XBoolean:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XNumber:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XObject:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XObject:boolean notEquals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XObject:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.objects.XRTreeFrag:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XString:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XStringForFSB:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.operations.Equals:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject,org.apache.xpath.objects.XObject)",
            "org.apache.xpath.operations.Equals:boolean bool(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.objects.XObject:boolean boolWithSideEffects()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:boolean executePredicates(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)"
        ]
    },
    "org.apache.xpath.operations.Bool:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.operations.UnaryOperation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.objects.XNodeSet:void appendToFsb(org.apache.xml.utils.FastStringBuffer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.AVTPartXPath:void evaluate(org.apache.xpath.XPathContext,org.apache.xml.utils.FastStringBuffer,int,org.apache.xml.utils.PrefixResolver)"
        ]
    },
    "org.apache.xpath.objects.XObject:void dispatchCharactersEvents(org.xml.sax.ContentHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemValueOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xpath.functions.FuncNormalizeSpace:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.Expression:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)"
        ]
    },
    "org.apache.xpath.operations.String:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.operations.UnaryOperation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.domapi.XPathResultImpl:java.lang.String getStringValue()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xpath.objects.XObject:org.apache.xml.utils.XMLString xstr()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.transformer.KeyRefIterator:short filterNode(int)",
            "org.apache.xalan.transformer.KeyTable:java.util.Hashtable getRefsTable()",
            "org.apache.xpath.functions.FuncStartsWith:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstring:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringAfter:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:org.apache.xml.utils.XMLString getArg0AsString(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XNodeSet:boolean compare(org.apache.xpath.objects.XObject,org.apache.xpath.objects.Comparator)",
            "org.apache.xpath.objects.XObject:void dispatchCharactersEvents(org.xml.sax.ContentHandler)",
            "org.apache.xpath.objects.XRTreeFrag:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XString:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.operations.String:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.Expression:org.apache.xml.utils.XMLString xstr(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.objects.XObject:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.ExpressionVisitor:boolean visitFunction(org.apache.xpath.ExpressionOwner,org.apache.xpath.functions.Function)",
            "org.apache.xalan.extensions.MethodResolver:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.xalan.extensions.XSLProcessorContext:void outputToResultTree(org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.lib.sql.DTMDocument:java.lang.String getNodeValue(int)",
            "org.apache.xalan.lib.sql.DTMDocument:org.apache.xml.utils.XMLString getStringValue(int)",
            "org.apache.xalan.lib.sql.DTMDocument:void getNodeData(int,org.apache.xml.utils.FastStringBuffer)",
            "org.apache.xalan.lib.Extensions:org.apache.xpath.NodeSet nodeset(org.apache.xalan.extensions.ExpressionContext,java.lang.Object)",
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.xsltc.compiler.util.ErrorMsg:java.lang.String toString(java.lang.Object)",
            "org.apache.xalan.xsltc.compiler.util.ErrorMsg:java.lang.String toString(java.lang.Object,java.lang.Object)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:java.lang.String toString()",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator documentF(java.lang.Object,org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator documentF(java.lang.Object,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:void copy(java.lang.Object,org.apache.xml.serializer.SerializationHandler,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.CallFunction:java.lang.String invokeMethod(java.lang.String,java.lang.String,java.lang.Object[])",
            "org.apache.xalan.xsltc.runtime.Hashtable:java.lang.String toString()",
            "org.apache.xalan.xsltc.trax.TemplatesHandlerImpl:void endDocument()",
            "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:void passErrorsToListener(java.util.Vector)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getStringValue()",
            "org.apache.xml.utils.Hashtree2Node:void appendHashToNode(java.util.Hashtable,java.lang.String,org.w3c.dom.Node,org.w3c.dom.Document)",
            "org.apache.xml.utils.XMLStringDefault:boolean equals(org.apache.xml.utils.XMLString)",
            "org.apache.xml.utils.XMLStringDefault:int compareTo(org.apache.xml.utils.XMLString)",
            "org.apache.xml.utils.XMLStringDefault:int compareToIgnoreCase(org.apache.xml.utils.XMLString)",
            "org.apache.xml.utils.XMLStringDefault:boolean startsWith(org.apache.xml.utils.XMLString,int)",
            "org.apache.xml.utils.XMLStringDefault:boolean startsWith(org.apache.xml.utils.XMLString)",
            "org.apache.xml.utils.XMLStringDefault:int indexOf(org.apache.xml.utils.XMLString)",
            "org.apache.xpath.compiler.OpMap:java.lang.String getStepLocalName(int)",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XNodeSet:java.lang.String str()",
            "org.apache.xpath.objects.XObject:java.lang.String str()",
            "org.apache.xpath.objects.XRTreeFrag:java.lang.String str()",
            "org.apache.xpath.objects.XString:double toDouble()",
            "org.apache.xpath.objects.XString:boolean equals(org.apache.xml.utils.XMLString)",
            "org.apache.xpath.objects.XString:boolean equals(java.lang.Object)",
            "org.apache.xpath.objects.XString:int indexOf(org.apache.xml.utils.XMLString)",
            "org.apache.xpath.objects.XStringForFSB:boolean equals(java.lang.Object)",
            "org.apache.xpath.XPathContext$XPathExpressionContext:java.lang.String toString(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xpath.objects.XObject:int rtf(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xpath.objects.XObject:org.w3c.dom.DocumentFragment rtree(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xpath.objects.XObject:void appendToFsb(org.apache.xml.utils.FastStringBuffer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.AVTPartXPath:void evaluate(org.apache.xpath.XPathContext,org.apache.xml.utils.FastStringBuffer,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.objects.XNodeSet:void appendToFsb(org.apache.xml.utils.FastStringBuffer)",
            "org.apache.xpath.objects.XRTreeFrag:void appendToFsb(org.apache.xml.utils.FastStringBuffer)"
        ]
    },
    "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:int getNextNodeIdentity(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:int getAttributeNode(int,java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:int getElementById(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getFirstAttributeIdentity(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getTypedAttribute(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getNextAttributeIdentity(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getFirstNamespaceNode(int,boolean)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getNextNamespaceNode(int,int,boolean)"
        ]
    },
    "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:int getHandleFromNode(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:int getHandleOfNode(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:int getElementById(java.lang.String)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBase:int _exptype(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.DTMDocument:int _exptype(int)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:java.lang.String getNodeValue(int)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:java.lang.String getLocalName(int)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:java.lang.String getNamespaceURI(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:short _type(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:void dumpDTM(java.io.OutputStream)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getTypedFirstChild(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getTypedAttribute(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getTypedNextSibling(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:void declareNamespaceInContext(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getExpandedTypeID(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getNamespaceType(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:short getNodeType(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$NamespaceChildrenIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingSiblingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedAncestorIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedChildrenIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedDescendantIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedFollowingSiblingIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedPrecedingIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedPrecedingSiblingIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AllFromNodeTraverser:int next(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AllFromRootTraverser:int next(int,int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser:int next(int,int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser:int next(int,int,int)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBase:int _level(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.DTMDocument:int _level(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:void dumpDTM(java.io.OutputStream)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:short getLevel(int)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBase:int _firstch(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.DTMDocument:int _firstch(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl:int access$201(org.apache.xalan.xsltc.dom.SAXImpl,int)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:org.apache.xml.utils.XMLString getStringValue(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:void dumpDTM(java.io.OutputStream)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:boolean hasChildNodes(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getFirstChild(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getTypedFirstChild(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getLastChild(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getPreviousSibling(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:org.apache.xml.utils.SuballocatedIntVector findNamespaceContext(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$ChildrenIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$NamespaceChildrenIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$NthDescendantIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingSiblingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedChildrenIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$ChildTraverser:int first(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantFromRootTraverser:int getFirstPotential(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantFromRootTraverser:int first(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser:int first(int)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBase:int _nextsib(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.DTMDocument:int _nextsib(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl:int access$301(org.apache.xalan.xsltc.dom.SAXImpl,int)",
            "org.apache.xalan.xsltc.dom.SAXImpl:int access$401(org.apache.xalan.xsltc.dom.SAXImpl,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:void dumpDTM(java.io.OutputStream)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getTypedFirstChild(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getLastChild(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getNextSibling(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getTypedNextSibling(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getPreviousSibling(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$ChildrenIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$FollowingSiblingIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$NamespaceChildrenIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$NthDescendantIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingSiblingIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedChildrenIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedFollowingSiblingIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedPrecedingSiblingIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$ChildTraverser:int next(int,int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser:int first(int)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBase:int _prevsib(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.DTMDocument:int _prevsib(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:void dumpDTM(java.io.OutputStream)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getPreviousSibling(int)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBase:int _parent(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.DTMDocument:int _parent(int)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:org.apache.xml.utils.XMLString getStringValue(int)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2RTFDTM:int getDocumentRoot(int)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2RTFDTM:int _documentRoot(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int _level(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:void dumpDTM(java.io.OutputStream)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getPreviousSibling(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:void declareNamespaceInContext(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:org.apache.xml.utils.SuballocatedIntVector findNamespaceContext(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getParent(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$AncestorIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$DescendantIterator:boolean isDescendant(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$NthDescendantIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingSiblingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedAncestorIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser:boolean isDescendant(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser:int first(int)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBase:void dumpDTM(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$ChildTraverser:int getNextIndexed(int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$ChildTraverser:int first(int,int)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$IndexedDTMAxisTraverser:int getNextIndexed(int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantFromRootTraverser:int first(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantOrSelfFromRootTraverser:int first(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser:int first(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser:int next(int,int,int)"
        ]
    },
    "org.apache.xalan.xsltc.dom.SAXImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:void maybeEmitStartElement()",
            "org.apache.xalan.xsltc.dom.SAXImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes,org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void closeStartTag()",
            "org.apache.xml.serializer.ToXMLSAXHandler:void closeStartTag()",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:java.lang.String copyElement(int,int,org.apache.xml.serializer.SerializationHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(int,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.xsltc.dom.SAXImpl:java.lang.String shallowCopy(int,org.apache.xml.serializer.SerializationHandler)"
        ]
    },
    "org.apache.xalan.transformer.ClonerToResultTree:void cloneToResultTree(int,int,org.apache.xml.dtm.DTM,org.apache.xml.serializer.SerializationHandler,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.XSLProcessorContext:void outputToResultTree(org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.templates.ElemCopy:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.TransformerImpl:boolean applyTemplateToNode(org.apache.xalan.templates.ElemTemplateElement,org.apache.xalan.templates.ElemTemplate,int)"
        ]
    },
    "org.apache.xalan.xsltc.dom.SAXImpl:void copy(int,org.apache.xml.serializer.SerializationHandler,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(int,org.apache.xml.serializer.SerializationHandler,boolean)"
        ]
    },
    "org.apache.xalan.xsltc.dom.SAXImpl:java.lang.String shallowCopy(int,org.apache.xml.serializer.SerializationHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:java.lang.String shallowCopy(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.DOMAdapter:java.lang.String shallowCopy(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.MultiDOM:java.lang.String shallowCopy(int,org.apache.xml.serializer.SerializationHandler)"
        ]
    },
    "org.apache.xalan.transformer.TransformerHandlerImpl:void elementDecl(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void elementDecl(java.lang.String,java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void elementDecl(java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void elementDecl(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xalan.transformer.TransformerIdentityImpl:void elementDecl(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void elementDecl(java.lang.String,java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void elementDecl(java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void elementDecl(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void elementDecl(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void elementDecl(java.lang.String,java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void elementDecl(java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void elementDecl(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xalan.transformer.TransformerHandlerImpl:void endEntity(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void endEntity(java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void endEntity(java.lang.String)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void endEntity(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void endEntity(java.lang.String)",
            "org.apache.xml.serializer.TreeWalker:void endNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void endNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xalan.transformer.TransformerIdentityImpl:void endEntity(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void endEntity(java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void endEntity(java.lang.String)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void endEntity(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void endEntity(java.lang.String)",
            "org.apache.xml.serializer.TreeWalker:void endNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void endNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void endEntity(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void endEntity(java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void endEntity(java.lang.String)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void endEntity(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void endEntity(java.lang.String)",
            "org.apache.xml.serializer.TreeWalker:void endNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void endNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void endEntity(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void endEntity(java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void endEntity(java.lang.String)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void endEntity(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void endEntity(java.lang.String)",
            "org.apache.xml.serializer.TreeWalker:void endNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void endNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serializer.TreeWalker:void endNode(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.utils.TreeWalker:void endNode(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serializer.ToUnknownStream:void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.serialize.SerializerUtils:void addAttribute(org.apache.xml.serializer.SerializationHandler,int)",
            "org.apache.xalan.templates.ElemAttribute:void constructNode(java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemLiteralResult:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xml.serializer.ToUnknownStream:void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)"
        ]
    },
    "org.apache.xml.serializer.ToUnknownStream:void addAttribute(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(int,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.xsltc.dom.SAXImpl:java.lang.String shallowCopy(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void copyAttribute(int,int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xml.serializer.ToUnknownStream:void addAttribute(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xml.serializer.ToUnknownStream:void addUniqueAttribute(java.lang.String,java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.ToUnknownStream:void addUniqueAttribute(java.lang.String,java.lang.String,int)"
        ]
    },
    "org.apache.xml.serializer.ToUnknownStream:void endElement(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(int,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.w3c.dom.Node)",
            "org.apache.xml.serializer.ToUnknownStream:void endElement(java.lang.String)"
        ]
    },
    "org.apache.xml.serializer.ToUnknownStream:boolean startPrefixMapping(java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.serialize.SerializerUtils:void processNSDecls(org.apache.xml.serializer.SerializationHandler,int,int,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.serialize.SerializerUtils:void ensureNamespaceDeclDeclared(org.apache.xml.serializer.SerializationHandler,org.apache.xml.dtm.DTM,int)",
            "org.apache.xalan.templates.ElemElement:void constructNode(java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemTemplateElement:void executeNSDecls(org.apache.xalan.transformer.TransformerImpl,java.lang.String)",
            "org.apache.xml.serializer.ToUnknownStream:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToUnknownStream:void namespaceAfterStartElement(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToUnknownStream:boolean startPrefixMapping(java.lang.String,java.lang.String,boolean)",
            "org.apache.xml.serializer.ToUnknownStream:void emitFirstTag()"
        ]
    },
    "org.apache.xml.serializer.ToUnknownStream:void externalEntityDecl(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void externalEntityDecl(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void externalEntityDecl(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void externalEntityDecl(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToUnknownStream:void externalEntityDecl(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xml.serializer.ToUnknownStream:void internalEntityDecl(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void internalEntityDecl(java.lang.String,java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void internalEntityDecl(java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void internalEntityDecl(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToUnknownStream:void internalEntityDecl(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xml.serializer.ToUnknownStream:void endElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.XSLProcessorContext:void outputToResultTree(org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.templates.ElemCopy:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemElement:void constructNode(java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemLiteralResult:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.TransformerHandlerImpl:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void endElement(java.lang.String)",
            "org.apache.xml.serializer.ToUnknownStream:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.TreeWalker:void endNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void endNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serializer.ToUnknownStream:void ignorableWhitespace(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void ignorableWhitespace(char[],int,int)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void ignorableWhitespace(char[],int,int)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void ignorableWhitespace(char[],int,int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void ignorableWhitespace(char[],int,int)",
            "org.apache.xml.serializer.ToUnknownStream:void ignorableWhitespace(char[],int,int)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void ignorableWhitespace(char[],int,int)"
        ]
    },
    "org.apache.xml.serializer.ToUnknownStream:void processingInstruction(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemPI:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemTextLiteral:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemValueOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.ClonerToResultTree:void cloneToResultTree(int,int,org.apache.xml.dtm.DTM,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.transformer.TransformerHandlerImpl:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void copyPI(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToUnknownStream:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serializer.ToUnknownStream:void comment(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void comment(char[],int,int)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void comment(char[],int,int)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void comment(char[],int,int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void comment(char[],int,int)",
            "org.apache.xml.serializer.SerializerBase:void comment(java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void comment(char[],int,int)",
            "org.apache.xml.serializer.ToSAXHandler:void comment(java.lang.String)",
            "org.apache.xml.serializer.ToUnknownStream:void comment(char[],int,int)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void comment(char[],int,int)",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.FastStringBuffer:void sendSAXComment(org.xml.sax.ext.LexicalHandler,int,int)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xpath.objects.XString:void dispatchAsComment(org.xml.sax.ext.LexicalHandler)",
            "org.apache.xpath.objects.XStringForChars:void dispatchAsComment(org.xml.sax.ext.LexicalHandler)"
        ]
    },
    "org.apache.xml.serializer.ToUnknownStream:void entityReference(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.ClonerToResultTree:void cloneToResultTree(int,int,org.apache.xml.dtm.DTM,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xml.serializer.ToUnknownStream:void entityReference(java.lang.String)"
        ]
    },
    "org.apache.xalan.transformer.TransformerHandlerImpl:void endElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void endElement(java.lang.String)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.TreeWalker:void endNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void endNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xalan.transformer.TransformerIdentityImpl:void endElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void endElement(java.lang.String)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.TreeWalker:void endNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void endNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void endElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void endElement(java.lang.String)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.TreeWalker:void endNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void endNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void endElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void endElement(java.lang.String)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.TreeWalker:void endNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void endNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xalan.transformer.TransformerHandlerImpl:void processingInstruction(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xalan.transformer.TransformerIdentityImpl:void processingInstruction(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xalan.xsltc.dom.SAXImpl:void copyPI(int,org.apache.xml.serializer.SerializationHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(int,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.xsltc.dom.SAXImpl:java.lang.String shallowCopy(int,org.apache.xml.serializer.SerializationHandler)"
        ]
    },
    "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void processingInstruction(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void processingInstruction(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serializer.ToHTMLSAXHandler:boolean setEscaping(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(int,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.xsltc.dom.SimpleResultTreeImpl:void characters(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xml.serializer.ToUnknownStream:boolean setEscaping(boolean)"
        ]
    },
    "org.apache.xalan.transformer.TransformerHandlerImpl:void comment(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void comment(char[],int,int)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void comment(char[],int,int)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void comment(char[],int,int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void comment(char[],int,int)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void comment(char[],int,int)",
            "org.apache.xml.serializer.ToSAXHandler:void comment(java.lang.String)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void comment(char[],int,int)",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.FastStringBuffer:void sendSAXComment(org.xml.sax.ext.LexicalHandler,int,int)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xpath.objects.XString:void dispatchAsComment(org.xml.sax.ext.LexicalHandler)",
            "org.apache.xpath.objects.XStringForChars:void dispatchAsComment(org.xml.sax.ext.LexicalHandler)"
        ]
    },
    "org.apache.xalan.transformer.TransformerIdentityImpl:void comment(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void comment(char[],int,int)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void comment(char[],int,int)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void comment(char[],int,int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void comment(char[],int,int)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void comment(char[],int,int)",
            "org.apache.xml.serializer.ToSAXHandler:void comment(java.lang.String)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void comment(char[],int,int)",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.FastStringBuffer:void sendSAXComment(org.xml.sax.ext.LexicalHandler,int,int)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xpath.objects.XString:void dispatchAsComment(org.xml.sax.ext.LexicalHandler)",
            "org.apache.xpath.objects.XStringForChars:void dispatchAsComment(org.xml.sax.ext.LexicalHandler)"
        ]
    },
    "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void comment(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void comment(char[],int,int)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void comment(char[],int,int)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void comment(char[],int,int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void comment(char[],int,int)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void comment(char[],int,int)",
            "org.apache.xml.serializer.ToSAXHandler:void comment(java.lang.String)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void comment(char[],int,int)",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.FastStringBuffer:void sendSAXComment(org.xml.sax.ext.LexicalHandler,int,int)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xpath.objects.XString:void dispatchAsComment(org.xml.sax.ext.LexicalHandler)",
            "org.apache.xpath.objects.XStringForChars:void dispatchAsComment(org.xml.sax.ext.LexicalHandler)"
        ]
    },
    "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void comment(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void comment(char[],int,int)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void comment(char[],int,int)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void comment(char[],int,int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void comment(char[],int,int)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void comment(char[],int,int)",
            "org.apache.xml.serializer.ToSAXHandler:void comment(java.lang.String)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void comment(char[],int,int)",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.FastStringBuffer:void sendSAXComment(org.xml.sax.ext.LexicalHandler,int,int)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xpath.objects.XString:void dispatchAsComment(org.xml.sax.ext.LexicalHandler)",
            "org.apache.xpath.objects.XStringForChars:void dispatchAsComment(org.xml.sax.ext.LexicalHandler)"
        ]
    },
    "org.apache.xml.serializer.SerializerBase:void comment(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemComment:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(int,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.xsltc.dom.SAXImpl:java.lang.String shallowCopy(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.w3c.dom.Node)",
            "org.apache.xml.serializer.ToUnknownStream:void comment(java.lang.String)"
        ]
    },
    "org.apache.xml.utils.FastStringBuffer:void sendSAXComment(org.xml.sax.ext.LexicalHandler,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.objects.XStringForFSB:void dispatchAsComment(org.xml.sax.ext.LexicalHandler)"
        ]
    },
    "org.apache.xpath.objects.XString:void dispatchAsComment(org.xml.sax.ext.LexicalHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.ClonerToResultTree:void cloneToResultTree(int,int,org.apache.xml.dtm.DTM,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)"
        ]
    },
    "org.apache.xpath.objects.XStringForChars:void dispatchAsComment(org.xml.sax.ext.LexicalHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.ClonerToResultTree:void cloneToResultTree(int,int,org.apache.xml.dtm.DTM,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)"
        ]
    },
    "org.apache.xml.serializer.ToHTMLSAXHandler:void startElement(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:java.lang.String copyElement(int,int,org.apache.xml.serializer.SerializationHandler)"
        ]
    },
    "org.apache.xml.serializer.ToHTMLSAXHandler:void characters(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.SimpleResultTreeImpl:void characters(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.runtime.AbstractTranslet:void characters(java.lang.String,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.w3c.dom.Node)",
            "org.apache.xml.serializer.ToSAXHandler:void characters(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xalan.serialize.SerializerUtils:void processNSDecls(org.apache.xml.serializer.SerializationHandler,int,int,org.apache.xml.dtm.DTM)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemCopy:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.ClonerToResultTree:void cloneToResultTree(int,int,org.apache.xml.dtm.DTM,org.apache.xml.serializer.SerializationHandler,boolean)"
        ]
    },
    "org.apache.xalan.serialize.SerializerUtils:void ensureNamespaceDeclDeclared(org.apache.xml.serializer.SerializationHandler,org.apache.xml.dtm.DTM,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TreeWalker2Result:void startNode(int)"
        ]
    },
    "org.apache.xalan.templates.ElemTemplateElement:void executeNSDecls(org.apache.xalan.transformer.TransformerImpl,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemTemplateElement:void executeNSDecls(org.apache.xalan.transformer.TransformerImpl)"
        ]
    },
    "org.apache.xml.serializer.ToHTMLSAXHandler:void startPrefixMapping(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.serialize.SerializerUtils:void outputResultTreeFragment(org.apache.xml.serializer.SerializationHandler,org.apache.xpath.objects.XObject,org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.ElemLiteralResult:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.TransformerHandlerImpl:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:boolean startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:boolean startPrefixMapping(java.lang.String,java.lang.String,boolean)",
            "org.apache.xml.serializer.ToXMLSAXHandler:boolean startPrefixMapping(java.lang.String,java.lang.String,boolean)",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serializer.ToHTMLSAXHandler:void namespaceAfterStartElement(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(int,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.xsltc.dom.SAXImpl:java.lang.String shallowCopy(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String startXslElement(java.lang.String,java.lang.String,org.apache.xml.serializer.SerializationHandler,org.apache.xalan.xsltc.DOM,int)",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:java.lang.String copyElement(int,int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void copyNS(int,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void copyAttribute(int,int,org.apache.xml.serializer.SerializationHandler)"
        ]
    },
    "org.apache.xml.serializer.ToXMLSAXHandler:void endElement(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(int,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.w3c.dom.Node)",
            "org.apache.xml.serializer.ToUnknownStream:void endElement(java.lang.String)"
        ]
    },
    "org.apache.xml.serializer.ToXMLSAXHandler:void startPrefixMapping(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.serialize.SerializerUtils:void outputResultTreeFragment(org.apache.xml.serializer.SerializationHandler,org.apache.xpath.objects.XObject,org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.ElemLiteralResult:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.TransformerHandlerImpl:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:boolean startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:boolean startPrefixMapping(java.lang.String,java.lang.String,boolean)",
            "org.apache.xml.serializer.ToXMLSAXHandler:boolean startPrefixMapping(java.lang.String,java.lang.String,boolean)",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serializer.ToXMLSAXHandler:void namespaceAfterStartElement(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(int,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.xsltc.dom.SAXImpl:java.lang.String shallowCopy(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String startXslElement(java.lang.String,java.lang.String,org.apache.xml.serializer.SerializationHandler,org.apache.xalan.xsltc.DOM,int)",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:java.lang.String copyElement(int,int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void copyNS(int,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void copyAttribute(int,int,org.apache.xml.serializer.SerializationHandler)"
        ]
    },
    "org.apache.xml.serializer.ToXMLSAXHandler:void ensurePrefixIsDeclared(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.ToXMLSAXHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)"
        ]
    },
    "org.apache.xml.serializer.ToXMLSAXHandler:boolean setEscaping(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(int,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.xsltc.dom.SimpleResultTreeImpl:void characters(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xml.serializer.ToUnknownStream:boolean setEscaping(boolean)"
        ]
    },
    "org.apache.xalan.transformer.TransformerHandlerImpl:void startCDATA()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void startCDATA()",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void startCDATA()",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startCDATA()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void startCDATA()",
            "org.apache.xml.serializer.ToXMLSAXHandler:void characters(char[],int,int)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void startCDATA()",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xalan.transformer.TransformerIdentityImpl:void startCDATA()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void startCDATA()",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void startCDATA()",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startCDATA()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void startCDATA()",
            "org.apache.xml.serializer.ToXMLSAXHandler:void characters(char[],int,int)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void startCDATA()",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startCDATA()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void startCDATA()",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void startCDATA()",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startCDATA()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void startCDATA()",
            "org.apache.xml.serializer.ToXMLSAXHandler:void characters(char[],int,int)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void startCDATA()",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void startCDATA()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void startCDATA()",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void startCDATA()",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startCDATA()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void startCDATA()",
            "org.apache.xml.serializer.ToXMLSAXHandler:void characters(char[],int,int)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void startCDATA()",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serializer.ToUnknownStream:void startCDATA()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.ClonerToResultTree:void cloneToResultTree(int,int,org.apache.xml.dtm.DTM,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.transformer.TransformerHandlerImpl:void startCDATA()",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void startCDATA()",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startCDATA()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void startCDATA()",
            "org.apache.xml.serializer.ToUnknownStream:void startCDATA()",
            "org.apache.xml.serializer.ToXMLSAXHandler:void characters(char[],int,int)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void startCDATA()",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serializer.ToXMLSAXHandler:void startElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemElement:void constructNode(java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemLiteralResult:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.ClonerToResultTree:void cloneToResultTree(int,int,org.apache.xml.dtm.DTM,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.transformer.TreeWalker2Result:void startNode(int)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String startXslElement(java.lang.String,java.lang.String,org.apache.xml.serializer.SerializationHandler,org.apache.xalan.xsltc.DOM,int)",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serializer.ToXMLSAXHandler:void startElement(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:java.lang.String copyElement(int,int,org.apache.xml.serializer.SerializationHandler)"
        ]
    },
    "org.apache.xalan.lib.sql.DTMDocument:void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemApplyTemplates:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.ClonerToResultTree:void cloneToResultTree(int,int,org.apache.xml.dtm.DTM,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.transformer.TransformerImpl:boolean applyTemplateToNode(org.apache.xalan.templates.ElemTemplateElement,org.apache.xalan.templates.ElemTemplate,int)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void dispatachChars(int)",
            "org.apache.xpath.axes.LocPathIterator:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.functions.FuncNormalizeSpace:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.objects.XNodeSet:void dispatchCharactersEvents(org.xml.sax.ContentHandler)"
        ]
    },
    "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemApplyTemplates:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.ClonerToResultTree:void cloneToResultTree(int,int,org.apache.xml.dtm.DTM,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.transformer.TransformerImpl:boolean applyTemplateToNode(org.apache.xalan.templates.ElemTemplateElement,org.apache.xalan.templates.ElemTemplate,int)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void dispatachChars(int)",
            "org.apache.xpath.axes.LocPathIterator:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.functions.FuncNormalizeSpace:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.objects.XNodeSet:void dispatchCharactersEvents(org.xml.sax.ContentHandler)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMTreeWalker:void dispatachChars(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)"
        ]
    },
    "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemApplyTemplates:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.ClonerToResultTree:void cloneToResultTree(int,int,org.apache.xml.dtm.DTM,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.transformer.TransformerImpl:boolean applyTemplateToNode(org.apache.xalan.templates.ElemTemplateElement,org.apache.xalan.templates.ElemTemplate,int)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void dispatachChars(int)",
            "org.apache.xpath.axes.LocPathIterator:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.functions.FuncNormalizeSpace:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.objects.XNodeSet:void dispatchCharactersEvents(org.xml.sax.ContentHandler)"
        ]
    },
    "org.apache.xalan.xsltc.dom.SAXImpl:void characters(int,org.apache.xml.serializer.SerializationHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:void characters(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.DOMAdapter:void characters(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.MultiDOM:void characters(int,org.apache.xml.serializer.SerializationHandler)"
        ]
    },
    "org.apache.xalan.xsltc.dom.SimpleResultTreeImpl:void characters(int,org.apache.xml.serializer.SerializationHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:void characters(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.DOMAdapter:void characters(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.MultiDOM:void characters(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SimpleResultTreeImpl:void copy(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SimpleResultTreeImpl:java.lang.String shallowCopy(int,org.apache.xml.serializer.SerializationHandler)"
        ]
    },
    "org.apache.xalan.xsltc.runtime.AbstractTranslet:void characters(java.lang.String,org.apache.xml.serializer.SerializationHandler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.serializer.ToSAXHandler:void characters(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.TreeWalker:void dispatachChars(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serializer.ToUnknownStream:void characters(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.SimpleResultTreeImpl:void characters(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.runtime.AbstractTranslet:void characters(java.lang.String,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void copyTextNode(int,org.apache.xml.serializer.SerializationHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(int,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.xsltc.dom.SAXImpl:java.lang.String shallowCopy(int,org.apache.xml.serializer.SerializationHandler)"
        ]
    },
    "org.apache.xpath.objects.XStringForFSB:void dispatchCharactersEvents(org.xml.sax.ContentHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.DTMDocument:void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)",
            "org.apache.xalan.templates.ElemValueOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)",
            "org.apache.xpath.functions.FuncNormalizeSpace:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.objects.XObject:void dispatchCharactersEvents(org.xml.sax.ContentHandler)",
            "org.apache.xpath.Expression:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)"
        ]
    },
    "org.apache.xml.utils.FastStringBuffer:int sendNormalizedSAXcharacters(org.xml.sax.ContentHandler,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)",
            "org.apache.xml.utils.FastStringBuffer:int sendNormalizedSAXcharacters(org.xml.sax.ContentHandler,int,int)"
        ]
    },
    "org.apache.xml.utils.FastStringBuffer:void sendNormalizedSAXcharacters(char[],int,int,org.xml.sax.ContentHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)"
        ]
    },
    "org.apache.xalan.xsltc.dom.DocumentCache$CachedDocument:void <init>(org.apache.xalan.xsltc.dom.DocumentCache,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DocumentCache:org.apache.xalan.xsltc.DOM retrieveDocument(java.lang.String,java.lang.String,org.apache.xalan.xsltc.Translet)"
        ]
    },
    "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator node2Iterator(org.w3c.dom.Node,org.apache.xalan.xsltc.Translet,org.apache.xalan.xsltc.DOM)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xpath.objects.XNodeSetForDOM:void <init>(org.w3c.dom.Node,org.apache.xml.dtm.DTMManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.objects.XObjectFactory:org.apache.xpath.objects.XObject create(java.lang.Object,org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.XPathContext:int getDTMHandleFromNode(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.XSLProcessorContext:void outputToResultTree(org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.lib.PipeDocument:void pipeDocument(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)",
            "org.apache.xalan.templates.ElemExtensionCall:java.lang.String getAttribute(java.lang.String,org.w3c.dom.Node,org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.TransformerImpl:void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement,org.w3c.dom.Node,org.apache.xml.utils.QName,org.xml.sax.ContentHandler)",
            "org.apache.xpath.domapi.XPathExpressionImpl:java.lang.Object evaluate(org.w3c.dom.Node,short,java.lang.Object)",
            "org.apache.xpath.objects.XNodeSetForDOM:void <init>(org.w3c.dom.Node,org.apache.xml.dtm.DTMManager)",
            "org.apache.xpath.CachedXPathAPI:org.apache.xpath.objects.XObject eval(org.w3c.dom.Node,java.lang.String,org.w3c.dom.Node)",
            "org.apache.xpath.CachedXPathAPI:org.apache.xpath.objects.XObject eval(org.w3c.dom.Node,java.lang.String,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.NodeSetDTM:void <init>(org.w3c.dom.traversal.NodeIterator,org.apache.xpath.XPathContext)",
            "org.apache.xpath.NodeSetDTM:void <init>(org.w3c.dom.NodeList,org.apache.xpath.XPathContext)",
            "org.apache.xpath.XPath:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,org.w3c.dom.Node,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPathAPI:org.apache.xpath.objects.XObject eval(org.w3c.dom.Node,java.lang.String,org.w3c.dom.Node)",
            "org.apache.xpath.XPathAPI:org.apache.xpath.objects.XObject eval(org.w3c.dom.Node,java.lang.String,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPathContext$XPathExpressionContext:double toNumber(org.w3c.dom.Node)",
            "org.apache.xpath.XPathContext$XPathExpressionContext:java.lang.String toString(org.w3c.dom.Node)",
            "org.apache.xpath.XPathContext:int getDTMHandleFromNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xpath.XPathContext:org.apache.xml.dtm.DTM createDocumentFragment()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.objects.XObject:int rtf(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XObject:org.w3c.dom.DocumentFragment rtree(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XString:int rtf(org.apache.xpath.XPathContext)",
            "org.apache.xpath.XPathContext:org.apache.xml.dtm.DTM createDocumentFragment()"
        ]
    },
    "org.apache.xalan.transformer.TransformerHandlerImpl:void <init>(org.apache.xalan.transformer.TransformerImpl,boolean,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerImpl:org.xml.sax.ContentHandler getInputContentHandler(boolean)"
        ]
    },
    "org.apache.xpath.SourceTreeManager:int parseToNode(javax.xml.transform.Source,javax.xml.transform.SourceLocator,org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.SourceTreeManager:int getSourceTree(javax.xml.transform.Source,javax.xml.transform.SourceLocator,org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.XPathContext:void pushRTFContext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemApplyTemplates:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemTemplate:void execute(org.apache.xalan.transformer.TransformerImpl)"
        ]
    },
    "org.apache.xalan.xsltc.cmdline.Transform:void main(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.transformer.TransformerHandlerImpl:void startDocument()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void startDocument()",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void flushStartDoc()",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse()",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startDocument()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void startDocument()",
            "org.apache.xml.serializer.ToSAXHandler:void startDocumentInternal()",
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)"
        ]
    },
    "org.apache.xalan.transformer.TransformerIdentityImpl:void flushStartDoc()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerIdentityImpl:void endDocument()",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void endPrefixMapping(java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void characters(char[],int,int)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void skippedEntity(java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void startDTD(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void comment(char[],int,int)"
        ]
    },
    "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void startDocument()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void startDocument()",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void flushStartDoc()",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse()",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startDocument()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void startDocument()",
            "org.apache.xml.serializer.ToSAXHandler:void startDocumentInternal()",
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serializer.ToSAXHandler:void startDocumentInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.SerializerBase:void startDocument()",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void flushPending()",
            "org.apache.xml.serializer.ToSAXHandler:void flushPending()",
            "org.apache.xml.serializer.ToXMLSAXHandler:void closeStartTag()",
            "org.apache.xml.serializer.ToXMLSAXHandler:void characters(char[],int,int)"
        ]
    },
    "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator documentF(java.lang.Object,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator document(java.lang.String,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator documentF(java.lang.Object,org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator documentF(java.lang.Object,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator document(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)"
        ]
    },
    "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:void startElement(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:void startElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:java.lang.String copyElement(int,int,org.apache.xml.serializer.SerializationHandler)"
        ]
    },
    "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:void namespaceAfterStartElement(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(int,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.xsltc.dom.SAXImpl:java.lang.String shallowCopy(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String startXslElement(java.lang.String,java.lang.String,org.apache.xml.serializer.SerializationHandler,org.apache.xalan.xsltc.DOM,int)",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:java.lang.String copyElement(int,int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void copyNS(int,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void copyAttribute(int,int,org.apache.xml.serializer.SerializationHandler)"
        ]
    },
    "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:void comment(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemComment:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(int,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.xsltc.dom.SAXImpl:java.lang.String shallowCopy(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.w3c.dom.Node)",
            "org.apache.xml.serializer.ToUnknownStream:void comment(java.lang.String)"
        ]
    },
    "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:void comment(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void comment(char[],int,int)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void comment(char[],int,int)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void comment(char[],int,int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void comment(char[],int,int)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void comment(char[],int,int)",
            "org.apache.xml.serializer.ToSAXHandler:void comment(java.lang.String)",
            "org.apache.xml.serializer.ToUnknownStream:void comment(char[],int,int)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void comment(char[],int,int)",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.FastStringBuffer:void sendSAXComment(org.xml.sax.ext.LexicalHandler,int,int)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xpath.objects.XString:void dispatchAsComment(org.xml.sax.ext.LexicalHandler)",
            "org.apache.xpath.objects.XStringForChars:void dispatchAsComment(org.xml.sax.ext.LexicalHandler)"
        ]
    },
    "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:void processingInstruction(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemPI:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemTextLiteral:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemValueOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.ClonerToResultTree:void cloneToResultTree(int,int,org.apache.xml.dtm.DTM,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.transformer.TransformerHandlerImpl:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void copyPI(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToUnknownStream:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xalan.xsltc.dom.DOMAdapter:org.apache.xalan.xsltc.DOM getResultTreeFrag(int,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMAdapter:org.apache.xalan.xsltc.DOM getResultTreeFrag(int,int,boolean)",
            "org.apache.xalan.xsltc.dom.MultiDOM:org.apache.xalan.xsltc.DOM getResultTreeFrag(int,int,boolean)"
        ]
    },
    "org.apache.xalan.xsltc.dom.SAXImpl:org.apache.xalan.xsltc.DOM getResultTreeFrag(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:org.apache.xalan.xsltc.DOM getResultTreeFrag(int,int)",
            "org.apache.xalan.xsltc.dom.DOMAdapter:org.apache.xalan.xsltc.DOM getResultTreeFrag(int,int)"
        ]
    },
    "org.apache.xalan.xsltc.trax.TransformerImpl:org.apache.xalan.xsltc.DOM retrieveDocument(java.lang.String,java.lang.String,org.apache.xalan.xsltc.Translet)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator document(java.lang.String,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM,boolean)"
        ]
    },
    "org.apache.xalan.xsltc.trax.SmartTransformerFactoryImpl:javax.xml.transform.sax.TransformerHandler newTransformerHandler(javax.xml.transform.Source)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.trax.SmartTransformerFactoryImpl:javax.xml.transform.sax.TransformerHandler newTransformerHandler(javax.xml.transform.Source)"
        ]
    },
    "org.apache.xalan.xsltc.trax.SmartTransformerFactoryImpl:javax.xml.transform.Transformer newTransformer(javax.xml.transform.Source)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.client.XSLTProcessorApplet:java.lang.String processTransformation()",
            "org.apache.xalan.xsltc.trax.SmartTransformerFactoryImpl:javax.xml.transform.Transformer newTransformer(javax.xml.transform.Source)"
        ]
    },
    "org.apache.xalan.lib.PipeDocument:void usePipe(java.util.Vector,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.PipeDocument:void pipeDocument(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.AttributeSet:void parseContents(org.apache.xalan.xsltc.compiler.Parser)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AttributeSet:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Stylesheet:void parseOwnChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void parseChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Template:void parseSimplified(org.apache.xalan.xsltc.compiler.Stylesheet,org.apache.xalan.xsltc.compiler.Parser)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Stylesheet:void parseOwnChildren(org.apache.xalan.xsltc.compiler.Parser)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.Stylesheet:void parseContents(org.apache.xalan.xsltc.compiler.Parser)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void parseChildren(org.apache.xalan.xsltc.compiler.Parser)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.ApplyImports:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Attribute:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.CallTemplate:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Comment:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Copy:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Fallback:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.ForEach:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.If:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Message:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.ProcessingInstruction:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Template:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Text:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.VariableBase:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.When:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.WithParam:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.XslAttribute:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.XslElement:void parseContents(org.apache.xalan.xsltc.compiler.Parser)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Template:void parseSimplified(org.apache.xalan.xsltc.compiler.Stylesheet,org.apache.xalan.xsltc.compiler.Parser)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.Stylesheet:void parseContents(org.apache.xalan.xsltc.compiler.Parser)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Parser:org.apache.xalan.xsltc.compiler.SyntaxTreeNode loadExternalStylesheet(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.Parser:org.apache.xalan.xsltc.compiler.SyntaxTreeNode getStylesheet(org.apache.xalan.xsltc.compiler.SyntaxTreeNode)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.XSLTC:boolean compile(java.net.URL)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.XSLTC:boolean compile(java.util.Vector)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.XSLTC:boolean compile(java.net.URL,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.compiler.XSLTC:boolean compile(java.io.InputStream,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.cmdline.Compile:void main(java.lang.String[])"
        ]
    },
    "org.apache.xalan.xsltc.compiler.XSLTC:byte[][] compile(java.lang.String,org.xml.sax.InputSource,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.XSLTC:byte[][] compile(java.lang.String,org.xml.sax.InputSource)",
            "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:javax.xml.transform.Templates newTemplates(javax.xml.transform.Source)"
        ]
    },
    "org.apache.xalan.xsltc.trax.TransformerImpl:void transform(javax.xml.transform.Source,javax.xml.transform.Result)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.client.XSLTProcessorApplet:void start()",
            "org.apache.xalan.client.XSLTProcessorApplet:java.lang.String getSource()",
            "org.apache.xalan.client.XSLTProcessorApplet:java.lang.String processTransformation()",
            "org.apache.xalan.xslt.Process:void main(java.lang.String[])",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void setResult(javax.xml.transform.Result)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void endDocument()"
        ]
    },
    "org.apache.xalan.templates.ElemUse:void applyAttrSets(org.apache.xalan.transformer.TransformerImpl,org.apache.xalan.templates.StylesheetRoot)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.templates.ElemUse:void execute(org.apache.xalan.transformer.TransformerImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemApplyTemplates:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemAttributeSet:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemCopy:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemElement:void constructNode(java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemLiteralResult:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.TransformerImpl:void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement,boolean)"
        ]
    },
    "org.apache.xalan.lib.sql.XConnection:org.apache.xml.dtm.DTM query(org.apache.xalan.extensions.ExpressionContext,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.lib.sql.XConnection:org.apache.xml.dtm.DTM pquery(org.apache.xalan.extensions.ExpressionContext,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.XConnection:org.apache.xml.dtm.DTM pquery(org.apache.xalan.extensions.ExpressionContext,java.lang.String)"
        ]
    },
    "org.apache.xalan.templates.RedundentExprEliminator:void eleminateRedundent(org.apache.xalan.templates.ElemTemplateElement,java.util.Vector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.RedundentExprEliminator:void eleminateRedundentLocals(org.apache.xalan.templates.ElemTemplateElement)",
            "org.apache.xalan.templates.RedundentExprEliminator:void eleminateRedundentGlobals(org.apache.xalan.templates.StylesheetRoot)"
        ]
    },
    "org.apache.xpath.axes.UnionPathIterator:boolean deepEquals(org.apache.xpath.Expression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.RedundentExprEliminator:int findAndEliminateRedundant(int,int,org.apache.xpath.ExpressionOwner,org.apache.xalan.templates.ElemTemplateElement,java.util.Vector)",
            "org.apache.xalan.templates.RedundentExprEliminator:int oldFindAndEliminateRedundant(int,int,org.apache.xpath.ExpressionOwner,org.apache.xalan.templates.ElemTemplateElement,java.util.Vector)",
            "org.apache.xpath.axes.FilterExprIterator:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.FilterExprWalker:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.UnionPathIterator:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.Function2Args:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.Function3Args:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.FunctionMultiArgs:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.FunctionOneArg:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.operations.Operation:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.operations.UnaryOperation:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.patterns.StepPattern:boolean deepEquals(org.apache.xpath.Expression)"
        ]
    },
    "org.apache.xalan.templates.RedundentExprEliminator:boolean stepsEqual(org.apache.xpath.axes.WalkingIterator,org.apache.xpath.axes.WalkingIterator,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.RedundentExprEliminator:org.apache.xalan.templates.RedundentExprEliminator$MultistepExprHolder matchAndEliminatePartialPaths(org.apache.xalan.templates.RedundentExprEliminator$MultistepExprHolder,org.apache.xalan.templates.RedundentExprEliminator$MultistepExprHolder,boolean,int,org.apache.xalan.templates.ElemTemplateElement)"
        ]
    },
    "org.apache.xpath.axes.WalkingIterator:boolean deepEquals(org.apache.xpath.Expression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.RedundentExprEliminator:int findAndEliminateRedundant(int,int,org.apache.xpath.ExpressionOwner,org.apache.xalan.templates.ElemTemplateElement,java.util.Vector)",
            "org.apache.xalan.templates.RedundentExprEliminator:int oldFindAndEliminateRedundant(int,int,org.apache.xpath.ExpressionOwner,org.apache.xalan.templates.ElemTemplateElement,java.util.Vector)",
            "org.apache.xpath.axes.FilterExprIterator:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.FilterExprWalker:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.UnionPathIterator:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.Function2Args:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.Function3Args:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.FunctionMultiArgs:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.FunctionOneArg:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.operations.Operation:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.operations.UnaryOperation:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.patterns.StepPattern:boolean deepEquals(org.apache.xpath.Expression)"
        ]
    },
    "org.apache.xpath.axes.AxesWalker:boolean deepEquals(org.apache.xpath.Expression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.RedundentExprEliminator:boolean stepsEqual(org.apache.xpath.axes.WalkingIterator,org.apache.xpath.axes.WalkingIterator,int)",
            "org.apache.xalan.templates.RedundentExprEliminator:int findAndEliminateRedundant(int,int,org.apache.xpath.ExpressionOwner,org.apache.xalan.templates.ElemTemplateElement,java.util.Vector)",
            "org.apache.xalan.templates.RedundentExprEliminator:int oldFindAndEliminateRedundant(int,int,org.apache.xpath.ExpressionOwner,org.apache.xalan.templates.ElemTemplateElement,java.util.Vector)",
            "org.apache.xpath.axes.FilterExprIterator:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.FilterExprWalker:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.WalkingIterator:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.Function2Args:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.Function3Args:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.FunctionMultiArgs:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.FunctionOneArg:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.operations.Operation:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.operations.UnaryOperation:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.patterns.StepPattern:boolean deepEquals(org.apache.xpath.Expression)"
        ]
    },
    "org.apache.xpath.axes.DescendantIterator:boolean deepEquals(org.apache.xpath.Expression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.RedundentExprEliminator:int findAndEliminateRedundant(int,int,org.apache.xpath.ExpressionOwner,org.apache.xalan.templates.ElemTemplateElement,java.util.Vector)",
            "org.apache.xalan.templates.RedundentExprEliminator:int oldFindAndEliminateRedundant(int,int,org.apache.xpath.ExpressionOwner,org.apache.xalan.templates.ElemTemplateElement,java.util.Vector)",
            "org.apache.xpath.axes.FilterExprIterator:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.FilterExprWalker:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.UnionPathIterator:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.Function2Args:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.Function3Args:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.FunctionMultiArgs:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.FunctionOneArg:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.operations.Operation:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.operations.UnaryOperation:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.patterns.StepPattern:boolean deepEquals(org.apache.xpath.Expression)"
        ]
    },
    "org.apache.xpath.axes.OneStepIterator:boolean deepEquals(org.apache.xpath.Expression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.RedundentExprEliminator:int findAndEliminateRedundant(int,int,org.apache.xpath.ExpressionOwner,org.apache.xalan.templates.ElemTemplateElement,java.util.Vector)",
            "org.apache.xalan.templates.RedundentExprEliminator:int oldFindAndEliminateRedundant(int,int,org.apache.xpath.ExpressionOwner,org.apache.xalan.templates.ElemTemplateElement,java.util.Vector)",
            "org.apache.xpath.axes.FilterExprIterator:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.FilterExprWalker:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.UnionPathIterator:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.Function2Args:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.Function3Args:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.FunctionMultiArgs:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.FunctionOneArg:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.operations.Operation:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.operations.UnaryOperation:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.patterns.StepPattern:boolean deepEquals(org.apache.xpath.Expression)"
        ]
    },
    "org.apache.xpath.axes.OneStepIteratorForward:boolean deepEquals(org.apache.xpath.Expression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.RedundentExprEliminator:int findAndEliminateRedundant(int,int,org.apache.xpath.ExpressionOwner,org.apache.xalan.templates.ElemTemplateElement,java.util.Vector)",
            "org.apache.xalan.templates.RedundentExprEliminator:int oldFindAndEliminateRedundant(int,int,org.apache.xpath.ExpressionOwner,org.apache.xalan.templates.ElemTemplateElement,java.util.Vector)",
            "org.apache.xpath.axes.FilterExprIterator:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.FilterExprWalker:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.UnionPathIterator:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.Function2Args:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.Function3Args:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.FunctionMultiArgs:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.FunctionOneArg:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.operations.Operation:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.operations.UnaryOperation:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.patterns.StepPattern:boolean deepEquals(org.apache.xpath.Expression)"
        ]
    },
    "org.apache.xpath.patterns.UnionPattern:boolean deepEquals(org.apache.xpath.Expression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.RedundentExprEliminator:int findAndEliminateRedundant(int,int,org.apache.xpath.ExpressionOwner,org.apache.xalan.templates.ElemTemplateElement,java.util.Vector)",
            "org.apache.xalan.templates.RedundentExprEliminator:int oldFindAndEliminateRedundant(int,int,org.apache.xpath.ExpressionOwner,org.apache.xalan.templates.ElemTemplateElement,java.util.Vector)",
            "org.apache.xpath.axes.FilterExprIterator:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.FilterExprWalker:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.Function2Args:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.Function3Args:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.FunctionMultiArgs:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.functions.FunctionOneArg:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.operations.Operation:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.operations.UnaryOperation:boolean deepEquals(org.apache.xpath.Expression)",
            "org.apache.xpath.patterns.StepPattern:boolean deepEquals(org.apache.xpath.Expression)"
        ]
    },
    "org.apache.xalan.transformer.TransformerImpl:java.lang.Object extFunction(java.lang.String,java.lang.String,java.util.Vector,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.lib.ExsltCommon:org.apache.xpath.NodeSet nodeSet(org.apache.xalan.extensions.ExpressionContext,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xpath.objects.XObject:org.apache.xpath.objects.XObject create(java.lang.Object,org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerImpl:void setParameter(java.lang.String,java.lang.String,java.lang.Object)",
            "org.apache.xalan.transformer.TransformerImpl:void setParameter(java.lang.String,java.lang.Object)",
            "org.apache.xpath.functions.FuncExtFunction:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.jaxp.JAXPVariableStack:org.apache.xpath.objects.XObject getVariableOrParam(org.apache.xpath.XPathContext,org.apache.xml.utils.QName)"
        ]
    },
    "org.apache.xalan.lib.ExsltSets:org.w3c.dom.NodeList intersection(org.w3c.dom.NodeList,org.w3c.dom.NodeList)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.Extensions:org.w3c.dom.NodeList intersection(org.w3c.dom.NodeList,org.w3c.dom.NodeList)"
        ]
    },
    "org.apache.xalan.lib.ExsltSets:org.w3c.dom.NodeList difference(org.w3c.dom.NodeList,org.w3c.dom.NodeList)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.Extensions:org.w3c.dom.NodeList difference(org.w3c.dom.NodeList,org.w3c.dom.NodeList)"
        ]
    },
    "org.apache.xalan.lib.ExsltSets:boolean hasSameNode(org.w3c.dom.NodeList,org.w3c.dom.NodeList)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.lib.Extensions:boolean hasSameNodes(org.w3c.dom.NodeList,org.w3c.dom.NodeList)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.transformer.KeyTable$1:void <init>(org.apache.xalan.transformer.KeyTable,org.apache.xml.dtm.DTMManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.KeyTable:org.apache.xpath.objects.XNodeSet getNodeSetDTMByKey(org.apache.xml.utils.QName,org.apache.xml.utils.XMLString)"
        ]
    },
    "org.apache.xalan.lib.sql.XConnection:void <init>(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.extensions.ExpressionVisitor:boolean visitFunction(org.apache.xpath.ExpressionOwner,org.apache.xpath.functions.Function)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.functions.Function:void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)"
        ]
    },
    "org.apache.xalan.lib.sql.DTMDocument:java.lang.String getNodeValue(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.DTMDocument:void dumpDTM()",
            "org.apache.xalan.serialize.SerializerUtils:void addAttribute(org.apache.xml.serializer.SerializationHandler,int)",
            "org.apache.xalan.serialize.SerializerUtils:void processNSDecls(org.apache.xml.serializer.SerializationHandler,int,int,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.serialize.SerializerUtils:void ensureNamespaceDeclDeclared(org.apache.xml.serializer.SerializationHandler,org.apache.xml.dtm.DTM,int)",
            "org.apache.xalan.transformer.ClonerToResultTree:void cloneToResultTree(int,int,org.apache.xml.dtm.DTM,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:void dumpDTM(java.io.OutputStream)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:java.lang.String dumpNode(int)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getNodeValue()",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getData()",
            "org.apache.xml.dtm.ref.DTMNodeProxy:int getLength()",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getValue()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xalan.lib.sql.DTMDocument:org.apache.xml.utils.XMLString getStringValue(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.DTMDocument:void dumpDTM()",
            "org.apache.xalan.lib.sql.DTMDocument:void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)",
            "org.apache.xalan.serialize.SerializerUtils:boolean isDefinedNSDecl(org.apache.xml.serializer.SerializationHandler,int,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.transformer.ClonerToResultTree:void cloneToResultTree(int,int,org.apache.xml.dtm.DTM,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.transformer.KeyRefIterator:short filterNode(int)",
            "org.apache.xalan.transformer.KeyTable:java.util.Hashtable getRefsTable()",
            "org.apache.xml.dtm.ref.DTMDefaultBase:void dumpDTM(java.io.OutputStream)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getStringValue()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSum:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:org.apache.xml.utils.XMLString getArg0AsString(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:double getArg0AsNumber(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XNodeSet:double getNumberFromNode(int)",
            "org.apache.xpath.objects.XNodeSet:org.apache.xml.utils.XMLString getStringFromNode(int)",
            "org.apache.xpath.objects.XRTreeFrag:org.apache.xml.utils.XMLString xstr()",
            "org.apache.xpath.objects.XRTreeFrag:java.lang.String str()",
            "org.apache.xpath.XPathContext$XPathExpressionContext:double toNumber(org.w3c.dom.Node)",
            "org.apache.xpath.XPathContext$XPathExpressionContext:java.lang.String toString(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xalan.lib.sql.DTMDocument:void getNodeData(int,org.apache.xml.utils.FastStringBuffer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.DTMDocument:org.apache.xml.utils.XMLString getStringValue(int)",
            "org.apache.xalan.lib.sql.DTMDocument:void getNodeData(int,org.apache.xml.utils.FastStringBuffer)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.util.ErrorMsg:java.lang.String toString(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.compiler.util.ErrorMsg:java.lang.String toString(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.MethodResolver:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.xalan.extensions.XSLProcessorContext:void outputToResultTree(org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.lib.sql.DTMDocument:java.lang.String getNodeValue(int)",
            "org.apache.xalan.lib.sql.DTMDocument:org.apache.xml.utils.XMLString getStringValue(int)",
            "org.apache.xalan.lib.sql.DTMDocument:void getNodeData(int,org.apache.xml.utils.FastStringBuffer)",
            "org.apache.xalan.lib.Extensions:org.apache.xpath.NodeSet nodeset(org.apache.xalan.extensions.ExpressionContext,java.lang.Object)",
            "org.apache.xalan.xsltc.compiler.util.ErrorMsg:java.lang.String toString(java.lang.Object)",
            "org.apache.xalan.xsltc.compiler.util.ErrorMsg:java.lang.String toString(java.lang.Object,java.lang.Object)",
            "org.apache.xalan.xsltc.compiler.util.TypeCheckError:java.lang.String toString()",
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:java.lang.String toString()",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:void display(int)",
            "org.apache.xalan.xsltc.compiler.ArgumentList:java.lang.String toString()",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:java.lang.String toString()",
            "org.apache.xalan.xsltc.compiler.CopyOf:void display(int)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:java.lang.String toString()",
            "org.apache.xalan.xsltc.compiler.ForEach:void display(int)",
            "org.apache.xalan.xsltc.compiler.If:void display(int)",
            "org.apache.xalan.xsltc.compiler.Param:void display(int)",
            "org.apache.xalan.xsltc.compiler.ValueOf:void display(int)",
            "org.apache.xalan.xsltc.compiler.VariableBase:void display(int)",
            "org.apache.xalan.xsltc.compiler.When:void display(int)",
            "org.apache.xalan.xsltc.compiler.WithParam:void display(int)",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator documentF(java.lang.Object,org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator documentF(java.lang.Object,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:void copy(java.lang.Object,org.apache.xml.serializer.SerializationHandler,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.CallFunction:java.lang.String invokeMethod(java.lang.String,java.lang.String,java.lang.Object[])",
            "org.apache.xalan.xsltc.runtime.Hashtable:java.lang.String toString()",
            "org.apache.xalan.xsltc.trax.TemplatesHandlerImpl:void endDocument()",
            "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:void passErrorsToListener(java.util.Vector)",
            "org.apache.xml.utils.Hashtree2Node:void appendHashToNode(java.util.Hashtable,java.lang.String,org.w3c.dom.Node,org.w3c.dom.Document)",
            "org.apache.xpath.compiler.OpMap:java.lang.String getStepLocalName(int)",
            "org.apache.xpath.objects.XObject:java.lang.String str()",
            "org.apache.xpath.objects.XString:boolean equals(java.lang.Object)",
            "org.apache.xpath.objects.XStringForFSB:boolean equals(java.lang.Object)"
        ]
    },
    "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator documentF(java.lang.Object,org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,org.apache.xalan.xsltc.DOM)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(java.lang.Object,java.lang.Object,int,org.apache.xalan.xsltc.DOM)"
        ]
    },
    "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,int,org.apache.xalan.xsltc.DOM)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.runtime.CallFunction:java.lang.String invokeMethod(java.lang.String,java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.runtime.Hashtable:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.MethodResolver:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.xalan.extensions.XSLProcessorContext:void outputToResultTree(org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.lib.sql.DTMDocument:java.lang.String getNodeValue(int)",
            "org.apache.xalan.lib.sql.DTMDocument:org.apache.xml.utils.XMLString getStringValue(int)",
            "org.apache.xalan.lib.sql.DTMDocument:void getNodeData(int,org.apache.xml.utils.FastStringBuffer)",
            "org.apache.xalan.lib.Extensions:org.apache.xpath.NodeSet nodeset(org.apache.xalan.extensions.ExpressionContext,java.lang.Object)",
            "org.apache.xalan.xsltc.compiler.util.ErrorMsg:java.lang.String toString(java.lang.Object)",
            "org.apache.xalan.xsltc.compiler.util.ErrorMsg:java.lang.String toString(java.lang.Object,java.lang.Object)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:java.lang.String toString()",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator documentF(java.lang.Object,org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator documentF(java.lang.Object,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:void copy(java.lang.Object,org.apache.xml.serializer.SerializationHandler,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.CallFunction:java.lang.String invokeMethod(java.lang.String,java.lang.String,java.lang.Object[])",
            "org.apache.xalan.xsltc.runtime.Hashtable:java.lang.String toString()",
            "org.apache.xalan.xsltc.trax.TemplatesHandlerImpl:void endDocument()",
            "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:void passErrorsToListener(java.util.Vector)",
            "org.apache.xml.utils.Hashtree2Node:void appendHashToNode(java.util.Hashtable,java.lang.String,org.w3c.dom.Node,org.w3c.dom.Document)",
            "org.apache.xpath.compiler.OpMap:java.lang.String getStepLocalName(int)",
            "org.apache.xpath.objects.XObject:java.lang.String str()",
            "org.apache.xpath.objects.XString:boolean equals(java.lang.Object)",
            "org.apache.xpath.objects.XStringForFSB:boolean equals(java.lang.Object)"
        ]
    },
    "org.apache.xalan.xsltc.trax.TemplatesHandlerImpl:void endDocument()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.Redirect:void write(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)",
            "org.apache.xalan.lib.Redirect:void close(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)",
            "org.apache.xalan.transformer.TransformerHandlerImpl:void endDocument()",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void endDocument()",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse()",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void endDocument()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void endDocument()",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void endDocument()",
            "org.apache.xml.serializer.ToTextSAXHandler:void endDocument()",
            "org.apache.xml.serializer.ToXMLSAXHandler:void endDocument()",
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)"
        ]
    },
    "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:void passErrorsToListener(java.util.Vector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:javax.xml.transform.Templates newTemplates(javax.xml.transform.Source)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getStringValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.ExsltBase:java.lang.String toString(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.utils.Hashtree2Node:void appendHashToNode(java.util.Hashtable,java.lang.String,org.w3c.dom.Node,org.w3c.dom.Document)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.Extensions:org.w3c.dom.Node checkEnvironmentUsingWhich(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.Document)",
            "org.apache.xml.utils.Hashtree2Node:void appendHashToNode(java.util.Hashtable,java.lang.String,org.w3c.dom.Node,org.w3c.dom.Document)"
        ]
    },
    "org.apache.xml.utils.XMLStringDefault:boolean equals(org.apache.xml.utils.XMLString)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.KeyRefIterator:short filterNode(int)",
            "org.apache.xpath.objects.EqualComparator:boolean compareStrings(org.apache.xml.utils.XMLString,org.apache.xml.utils.XMLString)",
            "org.apache.xpath.objects.NotEqualComparator:boolean compareStrings(org.apache.xml.utils.XMLString,org.apache.xml.utils.XMLString)",
            "org.apache.xpath.objects.XRTreeFrag:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XString:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XString:boolean equals(org.apache.xml.utils.XMLString)"
        ]
    },
    "org.apache.xml.utils.XMLStringDefault:int compareTo(org.apache.xml.utils.XMLString)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.utils.XMLStringDefault:int compareToIgnoreCase(org.apache.xml.utils.XMLString)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.utils.XMLStringDefault:boolean startsWith(org.apache.xml.utils.XMLString,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.utils.XMLStringDefault:boolean startsWith(org.apache.xml.utils.XMLString)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.functions.FuncStartsWith:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xml.utils.XMLStringDefault:int indexOf(org.apache.xml.utils.XMLString)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.functions.FuncSubstringAfter:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.compiler.OpMap:java.lang.String getStepLocalName(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.BasicTestIterator:void <init>(org.apache.xpath.compiler.Compiler,int,int)",
            "org.apache.xpath.axes.DescendantIterator:void <init>(org.apache.xpath.compiler.Compiler,int,int)",
            "org.apache.xpath.axes.WalkerFactory:org.apache.xpath.patterns.StepPattern createDefaultStepPattern(org.apache.xpath.compiler.Compiler,int,org.apache.xpath.axes.MatchPatternIterator,int,org.apache.xpath.patterns.StepPattern,org.apache.xpath.patterns.StepPattern)",
            "org.apache.xpath.axes.WalkerFactory:org.apache.xpath.axes.AxesWalker createDefaultWalker(org.apache.xpath.compiler.Compiler,int,org.apache.xpath.axes.WalkingIterator,int)",
            "org.apache.xpath.axes.WalkerFactory:boolean isNaturalDocOrder(org.apache.xpath.compiler.Compiler,int,int,int)",
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.patterns.StepPattern stepPattern(int,int,org.apache.xpath.patterns.StepPattern)"
        ]
    },
    "org.apache.xpath.objects.XObject:java.lang.String str()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.MethodResolver:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.xalan.extensions.XSLProcessorContext:void outputToResultTree(org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.lib.ExsltDynamic:org.w3c.dom.NodeList map(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList,java.lang.String)",
            "org.apache.xalan.lib.Redirect:java.lang.String getFilename(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)",
            "org.apache.xalan.templates.ElemCopyOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.FuncFormatNumb:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.trace.PrintTraceListener:void selected(org.apache.xalan.trace.SelectionEvent)",
            "org.apache.xalan.transformer.NodeSorter$NodeCompareElem:void <init>(org.apache.xalan.transformer.NodeSorter,int)",
            "org.apache.xalan.transformer.NodeSorter:int compare(org.apache.xalan.transformer.NodeSorter$NodeCompareElem,org.apache.xalan.transformer.NodeSorter$NodeCompareElem,int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.domapi.XPathResultImpl:java.lang.String getStringValue()",
            "org.apache.xpath.functions.FuncConcat:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncContains:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtElementAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunctionAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringBefore:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSystemProperty:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncTranslate:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncUnparsedEntityURI:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.jaxp.XPathExpressionImpl:java.lang.Object getResultAsType(org.apache.xpath.objects.XObject,javax.xml.namespace.QName)",
            "org.apache.xpath.jaxp.XPathImpl:java.lang.Object getResultAsType(org.apache.xpath.objects.XObject,javax.xml.namespace.QName)",
            "org.apache.xpath.objects.XObject:org.apache.xml.utils.XMLString xstr()",
            "org.apache.xpath.objects.XObject:java.lang.String toString()",
            "org.apache.xpath.objects.XObject:int rtf(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XObject:org.w3c.dom.DocumentFragment rtree(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XObject:java.lang.Object castToType(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XObject:void appendToFsb(org.apache.xml.utils.FastStringBuffer)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XStringForFSB:boolean equals(org.apache.xpath.objects.XObject)"
        ]
    },
    "org.apache.xpath.objects.XRTreeFrag:java.lang.String str()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.MethodResolver:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.xalan.extensions.XSLProcessorContext:void outputToResultTree(org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.lib.ExsltDynamic:org.w3c.dom.NodeList map(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList,java.lang.String)",
            "org.apache.xalan.lib.Redirect:java.lang.String getFilename(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)",
            "org.apache.xalan.templates.ElemCopyOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.FuncFormatNumb:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.trace.PrintTraceListener:void selected(org.apache.xalan.trace.SelectionEvent)",
            "org.apache.xalan.transformer.NodeSorter$NodeCompareElem:void <init>(org.apache.xalan.transformer.NodeSorter,int)",
            "org.apache.xalan.transformer.NodeSorter:int compare(org.apache.xalan.transformer.NodeSorter$NodeCompareElem,org.apache.xalan.transformer.NodeSorter$NodeCompareElem,int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.domapi.XPathResultImpl:java.lang.String getStringValue()",
            "org.apache.xpath.functions.FuncConcat:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncContains:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtElementAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunctionAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringBefore:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSystemProperty:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncTranslate:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncUnparsedEntityURI:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.jaxp.XPathExpressionImpl:java.lang.Object getResultAsType(org.apache.xpath.objects.XObject,javax.xml.namespace.QName)",
            "org.apache.xpath.jaxp.XPathImpl:java.lang.Object getResultAsType(org.apache.xpath.objects.XObject,javax.xml.namespace.QName)",
            "org.apache.xpath.objects.XObject:org.apache.xml.utils.XMLString xstr()",
            "org.apache.xpath.objects.XObject:java.lang.String toString()",
            "org.apache.xpath.objects.XObject:int rtf(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XObject:org.w3c.dom.DocumentFragment rtree(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XObject:java.lang.Object castToType(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XObject:void appendToFsb(org.apache.xml.utils.FastStringBuffer)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XStringForFSB:boolean equals(org.apache.xpath.objects.XObject)"
        ]
    },
    "org.apache.xpath.objects.XString:double toDouble()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.functions.FuncSum:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:double getArg0AsNumber(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.GreaterThanComparator:boolean compareStrings(org.apache.xml.utils.XMLString,org.apache.xml.utils.XMLString)",
            "org.apache.xpath.objects.GreaterThanOrEqualComparator:boolean compareStrings(org.apache.xml.utils.XMLString,org.apache.xml.utils.XMLString)",
            "org.apache.xpath.objects.LessThanComparator:boolean compareStrings(org.apache.xml.utils.XMLString,org.apache.xml.utils.XMLString)",
            "org.apache.xpath.objects.LessThanOrEqualComparator:boolean compareStrings(org.apache.xml.utils.XMLString,org.apache.xml.utils.XMLString)",
            "org.apache.xpath.objects.XNodeSet:double getNumberFromNode(int)",
            "org.apache.xpath.objects.XRTreeFrag:double num()",
            "org.apache.xpath.objects.XString:double num()"
        ]
    },
    "org.apache.xpath.objects.XString:boolean equals(org.apache.xml.utils.XMLString)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.KeyRefIterator:short filterNode(int)",
            "org.apache.xpath.objects.EqualComparator:boolean compareStrings(org.apache.xml.utils.XMLString,org.apache.xml.utils.XMLString)",
            "org.apache.xpath.objects.NotEqualComparator:boolean compareStrings(org.apache.xml.utils.XMLString,org.apache.xml.utils.XMLString)",
            "org.apache.xpath.objects.XRTreeFrag:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XString:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XString:boolean equals(org.apache.xml.utils.XMLString)"
        ]
    },
    "org.apache.xpath.objects.XString:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.XSLTElementDef:boolean equalsMayBeNull(java.lang.Object,java.lang.Object)",
            "org.apache.xalan.xsltc.compiler.util.MultiHashtable:java.lang.Object maps(java.lang.Object,java.lang.Object)",
            "org.apache.xalan.xsltc.compiler.FunctionCall$JavaType:boolean equals(java.lang.Object)",
            "org.apache.xalan.xsltc.runtime.Hashtable:boolean contains(java.lang.Object)",
            "org.apache.xalan.xsltc.runtime.Hashtable:boolean containsKey(java.lang.Object)",
            "org.apache.xalan.xsltc.runtime.Hashtable:java.lang.Object get(java.lang.Object)",
            "org.apache.xalan.xsltc.runtime.Hashtable:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.xalan.xsltc.runtime.Hashtable:java.lang.Object remove(java.lang.Object)",
            "org.apache.xml.dtm.ref.DTMStringPool:int stringToIndex(java.lang.String)",
            "org.apache.xpath.objects.XObject:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XString:boolean equals(java.lang.Object)",
            "org.apache.xpath.objects.XStringForFSB:boolean equals(java.lang.Object)"
        ]
    },
    "org.apache.xpath.objects.XString:int indexOf(org.apache.xml.utils.XMLString)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.functions.FuncSubstringAfter:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.objects.XStringForFSB:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.XSLTElementDef:boolean equalsMayBeNull(java.lang.Object,java.lang.Object)",
            "org.apache.xalan.xsltc.compiler.util.MultiHashtable:java.lang.Object maps(java.lang.Object,java.lang.Object)",
            "org.apache.xalan.xsltc.compiler.FunctionCall$JavaType:boolean equals(java.lang.Object)",
            "org.apache.xalan.xsltc.runtime.Hashtable:boolean contains(java.lang.Object)",
            "org.apache.xalan.xsltc.runtime.Hashtable:boolean containsKey(java.lang.Object)",
            "org.apache.xalan.xsltc.runtime.Hashtable:java.lang.Object get(java.lang.Object)",
            "org.apache.xalan.xsltc.runtime.Hashtable:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.xalan.xsltc.runtime.Hashtable:java.lang.Object remove(java.lang.Object)",
            "org.apache.xml.dtm.ref.DTMStringPool:int stringToIndex(java.lang.String)",
            "org.apache.xpath.objects.XObject:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XString:boolean equals(java.lang.Object)",
            "org.apache.xpath.objects.XStringForFSB:boolean equals(java.lang.Object)"
        ]
    },
    "org.apache.xpath.XPathContext$XPathExpressionContext:java.lang.String toString(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xpath.objects.XRTreeFrag:void appendToFsb(org.apache.xml.utils.FastStringBuffer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.AVTPartXPath:void evaluate(org.apache.xpath.XPathContext,org.apache.xml.utils.FastStringBuffer,int,org.apache.xml.utils.PrefixResolver)"
        ]
    },
    "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:int getAttributeNode(int,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.DTMManagerDefault:int getDTMHandleFromNode(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:boolean hasAttribute(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:boolean hasAttributeNS(java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getAttributeNS(java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.Attr getAttributeNodeNS(java.lang.String,java.lang.String)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:int getElementById(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.Element getElementById(java.lang.String)",
            "org.apache.xpath.functions.FuncId:org.apache.xml.utils.StringVector getNodesByID(org.apache.xpath.XPathContext,int,java.lang.String,org.apache.xml.utils.StringVector,org.apache.xpath.NodeSetDTM,boolean)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBase:int getFirstAttributeIdentity(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getFirstAttribute(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$AttributeIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBase:int getTypedAttribute(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedAttributeIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBase:int getNextAttributeIdentity(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getNextAttribute(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$AttributeIterator:int next()"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBase:int getFirstNamespaceNode(int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.DTMDocument:int getFirstNamespaceNode(int,boolean)",
            "org.apache.xalan.serialize.SerializerUtils:void processNSDecls(org.apache.xml.serializer.SerializationHandler,int,int,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.transformer.TreeWalker2Result:void startNode(int)",
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:int getFirstNamespaceNode(int,boolean)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$NamespaceAttributeIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$NamespaceIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$NamespaceDeclsTraverser:int next(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$NamespaceDeclsTraverser:int next(int,int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$NamespaceTraverser:int next(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$NamespaceTraverser:int next(int,int,int)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBase:int getNextNamespaceNode(int,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.DTMDocument:int getNextNamespaceNode(int,int,boolean)",
            "org.apache.xalan.serialize.SerializerUtils:void processNSDecls(org.apache.xml.serializer.SerializationHandler,int,int,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.transformer.TreeWalker2Result:void startNode(int)",
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:int getNextNamespaceNode(int,int,boolean)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$NamespaceAttributeIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$NamespaceIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedNamespaceIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$NamespaceDeclsTraverser:int next(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$NamespaceDeclsTraverser:int next(int,int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$NamespaceTraverser:int next(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$NamespaceTraverser:int next(int,int,int)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)"
        ]
    },
    "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:int getHandleOfNode(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.DTMManagerDefault:int getDTMHandleFromNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xalan.lib.sql.DTMDocument:int _exptype(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.SQLDocument:int _nextsib(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:short _type(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:void dumpDTM(java.io.OutputStream)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getTypedFirstChild(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getTypedAttribute(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getTypedNextSibling(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:void declareNamespaceInContext(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getExpandedTypeID(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getNamespaceType(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:short getNodeType(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$NamespaceChildrenIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingSiblingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedAncestorIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedChildrenIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedDescendantIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedFollowingSiblingIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedPrecedingIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedPrecedingSiblingIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AllFromNodeTraverser:int next(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AllFromRootTraverser:int next(int,int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser:int next(int,int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser:int next(int,int,int)"
        ]
    },
    "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:java.lang.String getNodeValue(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.serialize.SerializerUtils:void addAttribute(org.apache.xml.serializer.SerializationHandler,int)",
            "org.apache.xalan.serialize.SerializerUtils:void processNSDecls(org.apache.xml.serializer.SerializationHandler,int,int,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.serialize.SerializerUtils:void ensureNamespaceDeclDeclared(org.apache.xml.serializer.SerializationHandler,org.apache.xml.dtm.DTM,int)",
            "org.apache.xalan.transformer.ClonerToResultTree:void cloneToResultTree(int,int,org.apache.xml.dtm.DTM,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:void dumpDTM(java.io.OutputStream)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:java.lang.String dumpNode(int)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getNodeValue()",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getData()",
            "org.apache.xml.dtm.ref.DTMNodeProxy:int getLength()",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getValue()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:java.lang.String getLocalName(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.serialize.SerializerUtils:void addAttribute(org.apache.xml.serializer.SerializationHandler,int)",
            "org.apache.xalan.templates.ElemCopy:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.TemplateList:org.apache.xalan.templates.TemplateSubPatternAssociation getHead(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.templates.TemplateList:org.apache.xalan.templates.ElemTemplate getTemplateFast(org.apache.xpath.XPathContext,int,int,org.apache.xml.utils.QName,int,boolean,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.transformer.ClonerToResultTree:void cloneToResultTree(int,int,org.apache.xml.dtm.DTM,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.transformer.TreeWalker2Result:void startNode(int)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:int getAttributeNode(int,java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:void dumpDTM(java.io.OutputStream)",
            "org.apache.xml.dtm.ref.DTMNamedNodeMap:org.w3c.dom.Node getNamedItemNS(java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getLocalName()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)",
            "org.apache.xpath.functions.FuncLocalPart:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.NodeTest:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.patterns.NodeTest:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)"
        ]
    },
    "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:java.lang.String getNamespaceURI(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.serialize.SerializerUtils:void addAttribute(org.apache.xml.serializer.SerializationHandler,int)",
            "org.apache.xalan.serialize.SerializerUtils:void outputResultTreeFragment(org.apache.xml.serializer.SerializationHandler,org.apache.xpath.objects.XObject,org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.ElemCopy:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemNumber$MyPrefixResolver:java.lang.String getNamespaceForPrefix(java.lang.String)",
            "org.apache.xalan.templates.ElemNumber:org.apache.xpath.XPath getCountMatchPattern(org.apache.xpath.XPathContext,int)",
            "org.apache.xalan.transformer.ClonerToResultTree:void cloneToResultTree(int,int,org.apache.xml.dtm.DTM,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.transformer.TreeWalker2Result:void startNode(int)",
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:java.lang.String getNamespaceURI(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl:int getNSType(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl:java.lang.String getNamespaceName(int)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:int getAttributeNode(int,java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:void dumpDTM(java.io.OutputStream)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:java.lang.String dumpNode(int)",
            "org.apache.xml.dtm.ref.DTMNamedNodeMap:org.w3c.dom.Node getNamedItemNS(java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getNamespaceURI()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)",
            "org.apache.xpath.functions.FuncNamespace:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.NodeTest:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.patterns.NodeTest:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBase:short _type(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.DTMDocument:short _type(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void handleTextEscaping()",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:int getAttributeNode(int,java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:java.lang.String getNodeValue(int)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:java.lang.String getPrefix(int)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:org.apache.xml.utils.XMLString getStringValue(int)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:boolean isWhitespace(int)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2RTFDTM:int getDocumentRoot(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:void dumpDTM(java.io.OutputStream)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getFirstAttributeIdentity(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getTypedAttribute(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getNextAttribute(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getNextAttributeIdentity(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getFirstNamespaceNode(int,boolean)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getNextNamespaceNode(int,int,boolean)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$DescendantIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$NthDescendantIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedDescendantIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AllFromRootTraverser:int next(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser:int next(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser:int first(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser:int next(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingAndAncestorTraverser:int next(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingTraverser:int next(int,int)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBase:int getTypedFirstChild(int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.dtm.ref.DTMDefaultBase:int getTypedNextSibling(int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.dtm.ref.DTMDefaultBase:void declareNamespaceInContext(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.DTMDocument:void declareNamespaceInContext(int,int)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:int addNode(org.w3c.dom.Node,int,int,int)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:int addNode(int,int,int,int,int,boolean)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:int addNode(int,int,int,int,int,boolean)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBase:int getExpandedTypeID(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.DTMDocument:int getExpandedTypeID(int)",
            "org.apache.xalan.templates.ElemApplyTemplates:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:int getExpandedTypeID(int)",
            "org.apache.xalan.xsltc.dom.AnyNodeCounter$DefaultAnyNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.AnyNodeCounter:org.apache.xalan.xsltc.dom.NodeCounter setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DOMAdapter:int getExpandedTypeID(int)",
            "org.apache.xalan.xsltc.dom.DOMWSFilter:short getShouldStripSpace(int,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.xsltc.dom.MultiDOM:int getExpandedTypeID(int)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:org.apache.xalan.xsltc.dom.NodeCounter setStartNode(int)",
            "org.apache.xalan.xsltc.dom.NodeCounter:boolean matchesCount(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl:int getAttributeNode(int,int)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:org.apache.xalan.xsltc.dom.NodeCounter setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:org.apache.xalan.xsltc.dom.NodeCounter setStartNode(int)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:java.lang.String getNodeName(int)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:java.lang.String getNodeNameX(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:java.lang.String dumpNode(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:void declareNamespaceInContext(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$ParentIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedFollowingIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedNamespaceIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedRootIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedSingletonIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AllFromRootTraverser:int first(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AncestorOrSelfTraverser:int first(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AttributeTraverser:int next(int,int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingSiblingTraverser:int next(int,int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser:int first(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$NamespaceDeclsTraverser:int next(int,int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$NamespaceTraverser:int next(int,int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingSiblingTraverser:int next(int,int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$RootTraverser:int first(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$SelfTraverser:int first(int,int)",
            "org.apache.xpath.patterns.StepPattern:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBase:int getNamespaceType(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.DTMDocument:int getNamespaceType(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl:int getNamespaceType(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedNamespaceIterator:int next()"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBase:short getNodeType(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.XSLProcessorContext:void outputToResultTree(org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.lib.sql.DTMDocument:short getNodeType(int)",
            "org.apache.xalan.serialize.SerializerUtils:void outputResultTreeFragment(org.apache.xml.serializer.SerializationHandler,org.apache.xpath.objects.XObject,org.apache.xpath.XPathContext)",
            "org.apache.xalan.serialize.SerializerUtils:boolean isDefinedNSDecl(org.apache.xml.serializer.SerializationHandler,int,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.templates.ElemApplyTemplates:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemCopy:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemCopyOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemNumber:org.apache.xpath.XPath getCountMatchPattern(org.apache.xpath.XPathContext,int)",
            "org.apache.xalan.templates.ElemNumber:int getPreviousNode(org.apache.xpath.XPathContext,int)",
            "org.apache.xalan.templates.StylesheetRoot:boolean shouldStripWhiteSpace(org.apache.xpath.XPathContext,int)",
            "org.apache.xalan.templates.TemplateList:org.apache.xalan.templates.TemplateSubPatternAssociation getHead(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.templates.TemplateList:org.apache.xalan.templates.ElemTemplate getTemplateFast(org.apache.xpath.XPathContext,int,int,org.apache.xml.utils.QName,int,boolean,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.transformer.TransformerImpl:boolean applyTemplateToNode(org.apache.xalan.templates.ElemTemplateElement,org.apache.xalan.templates.ElemTemplate,int)",
            "org.apache.xalan.transformer.TreeWalker2Result:void endNode(int)",
            "org.apache.xalan.transformer.TreeWalker2Result:void startNode(int)",
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:short getNodeType(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl:boolean isElement(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl:boolean isAttribute(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void print(int,int)",
            "org.apache.xalan.xsltc.dom.SAXImpl:java.lang.String getNodeName(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl:java.lang.String getLanguage(int)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:int getAttributeNode(int,java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:org.apache.xml.utils.XMLString getStringValue(int)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:boolean isWhitespace(int)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:java.lang.String getNodeNameX(int)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:java.lang.String getPrefix(int)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:java.lang.String getNodeValue(int)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:boolean isAttributeSpecified(int)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:java.lang.String getNodeName(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:java.lang.String dumpNode(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getTypedAttribute(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:org.apache.xml.utils.SuballocatedIntVector findNamespaceContext(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getOwnerDocument(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$ParentIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedFollowingIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedNamespaceIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedSingletonIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser:int first(int,int)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:short getNodeType()",
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.Node getNextSibling()",
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.Element getDocumentElement()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)",
            "org.apache.xpath.functions.FuncDoclocation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncNamespace:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.ContextMatchStepPattern:org.apache.xpath.objects.XObject executeRelativePathPattern(org.apache.xpath.XPathContext,org.apache.xpath.patterns.StepPattern)",
            "org.apache.xpath.patterns.NodeTest:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.patterns.NodeTest:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$NamespaceChildrenIterator:int next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:int next()",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:int getNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:int next()",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:int next()",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator documentF(java.lang.Object,org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator document(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl:org.w3c.dom.Node makeNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SimpleResultTreeImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator:int step()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double sumF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double numberF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean booleanF(java.lang.Object)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String namespace_uriF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(int,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,double,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(java.lang.Object,java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String referenceToString(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator getSingleNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:org.w3c.dom.Node item(int)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:int getLength()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getLast()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getNodeByPosition(int)",
            "org.apache.xpath.axes.OneStepIterator:int getNextNode()",
            "org.apache.xpath.axes.ReverseAxesWalker:int getNextNode()"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingSiblingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DOMAdapter:org.apache.xml.dtm.DTMAxisIterator getChildren(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.NthIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xpath.axes.OneStepIterator:void setRoot(int,java.lang.Object)",
            "org.apache.xpath.axes.ReverseAxesWalker:void setRoot(int)",
            "org.apache.xpath.objects.XObjectFactory:org.apache.xpath.objects.XObject create(java.lang.Object,org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedAncestorIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DOMAdapter:org.apache.xml.dtm.DTMAxisIterator getChildren(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.NthIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xpath.axes.OneStepIterator:void setRoot(int,java.lang.Object)",
            "org.apache.xpath.axes.ReverseAxesWalker:void setRoot(int)",
            "org.apache.xpath.objects.XObjectFactory:org.apache.xpath.objects.XObject create(java.lang.Object,org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedChildrenIterator:int next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:int next()",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:int getNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:int next()",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:int next()",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator documentF(java.lang.Object,org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator document(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl:org.w3c.dom.Node makeNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SimpleResultTreeImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator:int step()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double sumF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double numberF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean booleanF(java.lang.Object)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String namespace_uriF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(int,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,double,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(java.lang.Object,java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String referenceToString(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator getSingleNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:org.w3c.dom.Node item(int)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:int getLength()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getLast()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getNodeByPosition(int)",
            "org.apache.xpath.axes.OneStepIterator:int getNextNode()",
            "org.apache.xpath.axes.ReverseAxesWalker:int getNextNode()"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedDescendantIterator:int next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:int next()",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:int getNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:int next()",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:int next()",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator documentF(java.lang.Object,org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator document(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl:org.w3c.dom.Node makeNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SimpleResultTreeImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator:int step()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double sumF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double numberF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean booleanF(java.lang.Object)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String namespace_uriF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(int,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,double,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(java.lang.Object,java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String referenceToString(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator getSingleNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:org.w3c.dom.Node item(int)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:int getLength()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getLast()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getNodeByPosition(int)",
            "org.apache.xpath.axes.OneStepIterator:int getNextNode()",
            "org.apache.xpath.axes.ReverseAxesWalker:int getNextNode()"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedFollowingSiblingIterator:int next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:int next()",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:int getNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:int next()",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:int next()",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator documentF(java.lang.Object,org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator document(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl:org.w3c.dom.Node makeNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SimpleResultTreeImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator:int step()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double sumF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double numberF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean booleanF(java.lang.Object)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String namespace_uriF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(int,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,double,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(java.lang.Object,java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String referenceToString(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator getSingleNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:org.w3c.dom.Node item(int)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:int getLength()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getLast()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getNodeByPosition(int)",
            "org.apache.xpath.axes.OneStepIterator:int getNextNode()",
            "org.apache.xpath.axes.ReverseAxesWalker:int getNextNode()"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedPrecedingIterator:int next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:int next()",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:int getNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:int next()",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:int next()",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator documentF(java.lang.Object,org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator document(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl:org.w3c.dom.Node makeNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SimpleResultTreeImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator:int step()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double sumF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double numberF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean booleanF(java.lang.Object)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String namespace_uriF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(int,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,double,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(java.lang.Object,java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String referenceToString(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator getSingleNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:org.w3c.dom.Node item(int)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:int getLength()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getLast()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getNodeByPosition(int)",
            "org.apache.xpath.axes.OneStepIterator:int getNextNode()",
            "org.apache.xpath.axes.ReverseAxesWalker:int getNextNode()"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedPrecedingSiblingIterator:int next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:int next()",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:int getNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:int next()",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:int next()",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator documentF(java.lang.Object,org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator document(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl:org.w3c.dom.Node makeNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SimpleResultTreeImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator:int step()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double sumF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double numberF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean booleanF(java.lang.Object)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String namespace_uriF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(int,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,double,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(java.lang.Object,java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String referenceToString(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator getSingleNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:org.w3c.dom.Node item(int)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:int getLength()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getLast()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getNodeByPosition(int)",
            "org.apache.xpath.axes.OneStepIterator:int getNextNode()",
            "org.apache.xpath.axes.ReverseAxesWalker:int getNextNode()"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AllFromNodeTraverser:int next(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$FollowingIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedFollowingIterator:int next()",
            "org.apache.xml.dtm.DTMAxisTraverser:int first(int)",
            "org.apache.xpath.axes.AxesWalker:int getNextNode()",
            "org.apache.xpath.axes.ChildTestIterator:int getNextNode()",
            "org.apache.xpath.axes.DescendantIterator:int nextNode()",
            "org.apache.xpath.axes.MatchPatternIterator:int getNextNode()",
            "org.apache.xpath.axes.OneStepIteratorForward:int getNextNode()",
            "org.apache.xpath.patterns.ContextMatchStepPattern:org.apache.xpath.objects.XObject executeRelativePathPattern(org.apache.xpath.XPathContext,org.apache.xpath.patterns.StepPattern)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:org.apache.xpath.objects.XObject executeRelativePathPattern(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AllFromRootTraverser:int next(int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AllFromRootTraverser:int first(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser:int first(int,int)",
            "org.apache.xml.dtm.DTMAxisTraverser:int first(int,int)",
            "org.apache.xpath.axes.DescendantIterator:int nextNode()"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser:int next(int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantFromRootTraverser:int first(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantOrSelfFromRootTraverser:int first(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser:int first(int,int)",
            "org.apache.xml.dtm.DTMAxisTraverser:int first(int,int)",
            "org.apache.xpath.axes.DescendantIterator:int nextNode()"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser:int next(int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser:int first(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser:int first(int,int)",
            "org.apache.xml.dtm.DTMAxisTraverser:int first(int,int)",
            "org.apache.xpath.axes.DescendantIterator:int nextNode()"
        ]
    },
    "org.apache.xalan.lib.sql.DTMDocument:int _level(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.DTMDocument:void dumpDTM()",
            "org.apache.xml.dtm.ref.DTMDefaultBase:void dumpDTM(java.io.OutputStream)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:short getLevel(int)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBase:short getLevel(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.DTMDocument:short getLevel(int)",
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:short getLevel(int)"
        ]
    },
    "org.apache.xalan.lib.sql.DTMDocument:int _firstch(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.DTMDocument:void getNodeData(int,org.apache.xml.utils.FastStringBuffer)",
            "org.apache.xalan.lib.sql.DTMDocument:void dumpDTM()",
            "org.apache.xalan.lib.sql.SQLDocument:boolean addRowToDTMFromResultSet()",
            "org.apache.xml.dtm.ref.DTMDefaultBase:void dumpDTM(java.io.OutputStream)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:boolean hasChildNodes(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getFirstChild(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getTypedFirstChild(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getLastChild(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getPreviousSibling(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:org.apache.xml.utils.SuballocatedIntVector findNamespaceContext(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$ChildrenIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$NamespaceChildrenIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$NthDescendantIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingSiblingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedChildrenIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$ChildTraverser:int first(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantFromRootTraverser:int getFirstPotential(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantFromRootTraverser:int first(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser:int first(int)"
        ]
    },
    "org.apache.xalan.xsltc.dom.SAXImpl:int access$201(org.apache.xalan.xsltc.dom.SAXImpl,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceChildrenIterator:int next()"
        ]
    },
    "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:org.apache.xml.utils.XMLString getStringValue(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.serialize.SerializerUtils:boolean isDefinedNSDecl(org.apache.xml.serializer.SerializationHandler,int,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.transformer.ClonerToResultTree:void cloneToResultTree(int,int,org.apache.xml.dtm.DTM,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.transformer.KeyRefIterator:short filterNode(int)",
            "org.apache.xalan.transformer.KeyTable:java.util.Hashtable getRefsTable()",
            "org.apache.xml.dtm.ref.DTMDefaultBase:void dumpDTM(java.io.OutputStream)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getStringValue()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSum:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:org.apache.xml.utils.XMLString getArg0AsString(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:double getArg0AsNumber(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XNodeSet:double getNumberFromNode(int)",
            "org.apache.xpath.objects.XNodeSet:org.apache.xml.utils.XMLString getStringFromNode(int)",
            "org.apache.xpath.objects.XRTreeFrag:org.apache.xml.utils.XMLString xstr()",
            "org.apache.xpath.objects.XRTreeFrag:java.lang.String str()",
            "org.apache.xpath.XPathContext$XPathExpressionContext:double toNumber(org.w3c.dom.Node)",
            "org.apache.xpath.XPathContext$XPathExpressionContext:java.lang.String toString(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBase:boolean hasChildNodes(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.DTMDocument:boolean hasChildNodes(int)",
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:boolean hasChildNodes(int)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBase:int getFirstChild(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.MethodResolver:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.xalan.extensions.XSLProcessorContext:void outputToResultTree(org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.lib.sql.DTMDocument:int getFirstChild(int)",
            "org.apache.xalan.serialize.SerializerUtils:void outputResultTreeFragment(org.apache.xml.serializer.SerializationHandler,org.apache.xpath.objects.XObject,org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.ElemCopyOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:int getFirstChild(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void print(int,int)",
            "org.apache.xml.dtm.ref.DTMChildIterNodeList:void <init>(org.apache.xml.dtm.DTM,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$ChildTraverser:int first(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser:int first(int,int)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.Node getFirstChild()",
            "org.apache.xml.dtm.ref.DTMNodeProxy:boolean hasChildNodes()",
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.Element getDocumentElement()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void traverse(int)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void traverse(int,int)",
            "org.apache.xpath.axes.ChildIterator:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.ChildIterator:int nextNode()",
            "org.apache.xpath.functions.FuncDoclocation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBase:int getLastChild(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.DTMDocument:int getLastChild(int)",
            "org.apache.xalan.templates.ElemNumber:int findPrecedingOrAncestorOrSelf(org.apache.xpath.XPathContext,org.apache.xpath.XPath,org.apache.xpath.XPath,int,org.apache.xalan.templates.ElemNumber)",
            "org.apache.xalan.templates.ElemNumber:int getPreviousNode(org.apache.xpath.XPathContext,int)",
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:int getLastChild(int)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.Node getLastChild()",
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.Element getDocumentElement()"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBase:int getPreviousSibling(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.DTMDocument:int getPreviousSibling(int)",
            "org.apache.xalan.templates.ElemNumber:int findPrecedingOrAncestorOrSelf(org.apache.xpath.XPathContext,org.apache.xpath.XPath,org.apache.xpath.XPath,int,org.apache.xalan.templates.ElemNumber)",
            "org.apache.xalan.templates.ElemNumber:int getPreviousNode(org.apache.xpath.XPathContext,int)",
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:int getPreviousSibling(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingSiblingTraverser:int next(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingSiblingTraverser:int next(int,int,int)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.Node getPreviousSibling()"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBase:org.apache.xml.utils.SuballocatedIntVector findNamespaceContext(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.DTMDocument:org.apache.xml.utils.SuballocatedIntVector findNamespaceContext(int)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void copyNS(int,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:void declareNamespaceInContext(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getFirstNamespaceNode(int,boolean)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getNextNamespaceNode(int,int,boolean)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$ChildrenIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DOMAdapter:org.apache.xml.dtm.DTMAxisIterator getChildren(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.NthIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xpath.axes.OneStepIterator:void setRoot(int,java.lang.Object)",
            "org.apache.xpath.axes.ReverseAxesWalker:void setRoot(int)",
            "org.apache.xpath.objects.XObjectFactory:org.apache.xpath.objects.XObject create(java.lang.Object,org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$NthDescendantIterator:int next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:int next()",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:int getNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:int next()",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:int next()",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator documentF(java.lang.Object,org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator document(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl:org.w3c.dom.Node makeNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SimpleResultTreeImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator:int step()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double sumF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double numberF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean booleanF(java.lang.Object)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String namespace_uriF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(int,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,double,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(java.lang.Object,java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String referenceToString(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator getSingleNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:org.w3c.dom.Node item(int)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:int getLength()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getLast()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getNodeByPosition(int)",
            "org.apache.xpath.axes.OneStepIterator:int getNextNode()",
            "org.apache.xpath.axes.ReverseAxesWalker:int getNextNode()"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedChildrenIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DOMAdapter:org.apache.xml.dtm.DTMAxisIterator getChildren(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.NthIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xpath.axes.OneStepIterator:void setRoot(int,java.lang.Object)",
            "org.apache.xpath.axes.ReverseAxesWalker:void setRoot(int)",
            "org.apache.xpath.objects.XObjectFactory:org.apache.xpath.objects.XObject create(java.lang.Object,org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$ChildTraverser:int first(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.DescendantIterator:int nextNode()",
            "org.apache.xpath.axes.DescendantIterator:int asNode(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantFromRootTraverser:int getFirstPotential(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantFromRootTraverser:int first(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser:int first(int,int)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantFromRootTraverser:int first(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$FollowingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xpath.axes.AxesWalker:int getNextNode()",
            "org.apache.xpath.axes.ChildTestIterator:int getNextNode()",
            "org.apache.xpath.axes.DescendantIterator:int nextNode()",
            "org.apache.xpath.axes.DescendantIterator:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.MatchPatternIterator:int getNextNode()",
            "org.apache.xpath.axes.OneStepIteratorForward:int getNextNode()",
            "org.apache.xpath.patterns.ContextMatchStepPattern:org.apache.xpath.objects.XObject executeRelativePathPattern(org.apache.xpath.XPathContext,org.apache.xpath.patterns.StepPattern)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:org.apache.xpath.objects.XObject executeRelativePathPattern(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser:int first(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$FollowingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xpath.axes.AxesWalker:int getNextNode()",
            "org.apache.xpath.axes.ChildTestIterator:int getNextNode()",
            "org.apache.xpath.axes.DescendantIterator:int nextNode()",
            "org.apache.xpath.axes.DescendantIterator:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.MatchPatternIterator:int getNextNode()",
            "org.apache.xpath.axes.OneStepIteratorForward:int getNextNode()",
            "org.apache.xpath.patterns.ContextMatchStepPattern:org.apache.xpath.objects.XObject executeRelativePathPattern(org.apache.xpath.XPathContext,org.apache.xpath.patterns.StepPattern)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:org.apache.xpath.objects.XObject executeRelativePathPattern(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)"
        ]
    },
    "org.apache.xalan.lib.sql.DTMDocument:int _nextsib(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.DTMDocument:void getNodeData(int,org.apache.xml.utils.FastStringBuffer)",
            "org.apache.xalan.lib.sql.DTMDocument:void dumpDTM()",
            "org.apache.xalan.lib.sql.SQLDocument:int _nextsib(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:void dumpDTM(java.io.OutputStream)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getTypedFirstChild(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getLastChild(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getNextSibling(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getTypedNextSibling(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getPreviousSibling(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$ChildrenIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$FollowingSiblingIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$NamespaceChildrenIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$NthDescendantIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingSiblingIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedChildrenIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedFollowingSiblingIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedPrecedingSiblingIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$ChildTraverser:int next(int,int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser:int first(int)"
        ]
    },
    "org.apache.xalan.xsltc.dom.SAXImpl:int access$301(org.apache.xalan.xsltc.dom.SAXImpl,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceChildrenIterator:int next()"
        ]
    },
    "org.apache.xalan.xsltc.dom.SAXImpl:int access$401(org.apache.xalan.xsltc.dom.SAXImpl,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceChildrenIterator:int next()"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBase:int getNextSibling(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.XSLProcessorContext:void outputToResultTree(org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.lib.sql.DTMDocument:int getNextSibling(int)",
            "org.apache.xalan.serialize.SerializerUtils:void outputResultTreeFragment(org.apache.xml.serializer.SerializationHandler,org.apache.xpath.objects.XObject,org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.ElemCopyOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:int getNextSibling(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void print(int,int)",
            "org.apache.xml.dtm.ref.DTMChildIterNodeList:org.w3c.dom.Node item(int)",
            "org.apache.xml.dtm.ref.DTMChildIterNodeList:int getLength()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$ChildTraverser:int next(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingSiblingTraverser:int next(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingSiblingTraverser:int next(int,int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser:int first(int,int)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.Node getNextSibling()",
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.Element getDocumentElement()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void traverse(int)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void traverse(int,int)",
            "org.apache.xpath.axes.ChildIterator:int nextNode()"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$ChildrenIterator:int next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:int next()",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:int getNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:int next()",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:int next()",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator documentF(java.lang.Object,org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator document(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl:org.w3c.dom.Node makeNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SimpleResultTreeImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator:int step()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double sumF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double numberF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean booleanF(java.lang.Object)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String namespace_uriF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(int,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,double,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(java.lang.Object,java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String referenceToString(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator getSingleNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:org.w3c.dom.Node item(int)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:int getLength()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getLast()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getNodeByPosition(int)",
            "org.apache.xpath.axes.OneStepIterator:int getNextNode()",
            "org.apache.xpath.axes.ReverseAxesWalker:int getNextNode()"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$FollowingSiblingIterator:int next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:int next()",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:int getNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:int next()",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:int next()",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator documentF(java.lang.Object,org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator document(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl:org.w3c.dom.Node makeNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SimpleResultTreeImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator:int step()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double sumF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double numberF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean booleanF(java.lang.Object)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String namespace_uriF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(int,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,double,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(java.lang.Object,java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String referenceToString(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator getSingleNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:org.w3c.dom.Node item(int)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:int getLength()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getLast()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getNodeByPosition(int)",
            "org.apache.xpath.axes.OneStepIterator:int getNextNode()",
            "org.apache.xpath.axes.ReverseAxesWalker:int getNextNode()"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingSiblingIterator:int next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:int next()",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:int getNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:int next()",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:int next()",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator documentF(java.lang.Object,org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator document(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl:org.w3c.dom.Node makeNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SimpleResultTreeImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator:int step()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double sumF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double numberF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean booleanF(java.lang.Object)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String namespace_uriF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(int,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,double,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(java.lang.Object,java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String referenceToString(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator getSingleNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:org.w3c.dom.Node item(int)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:int getLength()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getLast()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getNodeByPosition(int)",
            "org.apache.xpath.axes.OneStepIterator:int getNextNode()",
            "org.apache.xpath.axes.ReverseAxesWalker:int getNextNode()"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$ChildTraverser:int next(int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.DTMAxisTraverser:int first(int,int)",
            "org.apache.xpath.axes.DescendantIterator:int nextNode()"
        ]
    },
    "org.apache.xalan.lib.sql.DTMDocument:int _prevsib(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.DTMDocument:void dumpDTM()",
            "org.apache.xml.dtm.ref.DTMDefaultBase:void dumpDTM(java.io.OutputStream)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getPreviousSibling(int)"
        ]
    },
    "org.apache.xalan.lib.sql.DTMDocument:int _parent(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.DTMDocument:void dumpDTM()",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int _level(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:void dumpDTM(java.io.OutputStream)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getPreviousSibling(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:void declareNamespaceInContext(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:org.apache.xml.utils.SuballocatedIntVector findNamespaceContext(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getParent(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$AncestorIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$DescendantIterator:boolean isDescendant(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$NthDescendantIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingSiblingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedAncestorIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser:boolean isDescendant(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser:int first(int)"
        ]
    },
    "org.apache.xml.dtm.ref.sax2dtm.SAX2RTFDTM:int getDocumentRoot(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.XSLProcessorContext:org.w3c.dom.Node getSourceTree()",
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:org.apache.xml.utils.SuballocatedIntVector findNamespaceContext(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getOwnerDocument(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$RootIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AllFromRootTraverser:int first(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AllFromRootTraverser:int first(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantFromRootTraverser:int first(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantOrSelfFromRootTraverser:int first(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$RootTraverser:int first(int,int)"
        ]
    },
    "org.apache.xml.dtm.ref.sax2dtm.SAX2RTFDTM:int _documentRoot(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.dtm.ref.DTMDefaultBase:int getParent(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.XSLProcessorContext:void outputToResultTree(org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.lib.sql.DTMDocument:int getParent(int)",
            "org.apache.xalan.templates.ElemNumber:int findAncestor(org.apache.xpath.XPathContext,org.apache.xpath.XPath,org.apache.xpath.XPath,int,org.apache.xalan.templates.ElemNumber)",
            "org.apache.xalan.templates.ElemNumber:int findPrecedingOrAncestorOrSelf(org.apache.xpath.XPathContext,org.apache.xpath.XPath,org.apache.xpath.XPath,int,org.apache.xalan.templates.ElemNumber)",
            "org.apache.xalan.templates.ElemNumber:int getPreviousNode(org.apache.xpath.XPathContext,int)",
            "org.apache.xalan.templates.ElemNumber:org.apache.xml.utils.NodeVector getMatchingAncestors(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xalan.templates.StylesheetRoot:boolean shouldStripWhiteSpace(org.apache.xpath.XPathContext,int)",
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:int getParent(int)",
            "org.apache.xalan.xsltc.dom.DOMAdapter:int getParent(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM:int getParent(int)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl:java.lang.String getLanguage(int)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$ParentIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AncestorTraverser:int next(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser:int first(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$ParentTraverser:int first(int)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.Node getParentNode()",
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.Node getOwnerNode()",
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.Element getOwnerElement()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void traverse(int)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void traverse(int,int)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$AncestorIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DOMAdapter:org.apache.xml.dtm.DTMAxisIterator getChildren(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.NthIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xpath.axes.OneStepIterator:void setRoot(int,java.lang.Object)",
            "org.apache.xpath.axes.ReverseAxesWalker:void setRoot(int)",
            "org.apache.xpath.objects.XObjectFactory:org.apache.xpath.objects.XObject create(java.lang.Object,org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$DescendantIterator:boolean isDescendant(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$DescendantIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedDescendantIterator:int next()"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DOMAdapter:org.apache.xml.dtm.DTMAxisIterator getChildren(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.NthIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xpath.axes.OneStepIterator:void setRoot(int,java.lang.Object)",
            "org.apache.xpath.axes.ReverseAxesWalker:void setRoot(int)",
            "org.apache.xpath.objects.XObjectFactory:org.apache.xpath.objects.XObject create(java.lang.Object,org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser:boolean isDescendant(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AllFromNodeTraverser:int next(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser:int next(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser:int next(int,int,int)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantFromRootTraverser:int first(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.DescendantIterator:int nextNode()",
            "org.apache.xpath.axes.DescendantIterator:int asNode(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantOrSelfFromRootTraverser:int first(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.DescendantIterator:int nextNode()",
            "org.apache.xpath.axes.DescendantIterator:int asNode(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser:int first(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.DescendantIterator:int nextNode()",
            "org.apache.xpath.axes.DescendantIterator:int asNode(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:void maybeEmitStartElement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:void characters(char[],int,int)",
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:void startElement(java.lang.String)",
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:void endElement(java.lang.String)",
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:void comment(java.lang.String)",
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:void comment(char[],int,int)",
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:void processingInstruction(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xalan.xsltc.dom.SAXImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xalan.xsltc.dom.SAXImpl:void copy(int,org.apache.xml.serializer.SerializationHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:void copy(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.DOMAdapter:void copy(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.MultiDOM:void copy(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.MultiDOM:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:void copy(java.lang.Object,org.apache.xml.serializer.SerializationHandler,int,org.apache.xalan.xsltc.DOM)"
        ]
    },
    "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:java.lang.String shallowCopy(int,org.apache.xml.serializer.SerializationHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMAdapter:java.lang.String shallowCopy(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.MultiDOM:java.lang.String shallowCopy(int,org.apache.xml.serializer.SerializationHandler)"
        ]
    },
    "org.apache.xalan.xsltc.dom.DOMAdapter:java.lang.String shallowCopy(int,org.apache.xml.serializer.SerializationHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMAdapter:java.lang.String shallowCopy(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.MultiDOM:java.lang.String shallowCopy(int,org.apache.xml.serializer.SerializationHandler)"
        ]
    },
    "org.apache.xalan.xsltc.dom.MultiDOM:java.lang.String shallowCopy(int,org.apache.xml.serializer.SerializationHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMAdapter:java.lang.String shallowCopy(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.MultiDOM:java.lang.String shallowCopy(int,org.apache.xml.serializer.SerializationHandler)"
        ]
    },
    "org.apache.xalan.serialize.SerializerUtils:void addAttribute(org.apache.xml.serializer.SerializationHandler,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.serialize.SerializerUtils:void addAttributes(org.apache.xml.serializer.SerializationHandler,int)",
            "org.apache.xalan.templates.ElemCopyOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.ClonerToResultTree:void cloneToResultTree(int,int,org.apache.xml.dtm.DTM,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.transformer.TreeWalker2Result:void startNode(int)"
        ]
    },
    "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void copyAttribute(int,int,org.apache.xml.serializer.SerializationHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(int,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.xsltc.dom.SAXImpl:java.lang.String shallowCopy(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void copyAttributes(int,org.apache.xml.serializer.SerializationHandler)"
        ]
    },
    "org.apache.xml.serializer.ToUnknownStream:void startPrefixMapping(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.serialize.SerializerUtils:void outputResultTreeFragment(org.apache.xml.serializer.SerializationHandler,org.apache.xpath.objects.XObject,org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.ElemLiteralResult:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.TransformerHandlerImpl:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:boolean startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:boolean startPrefixMapping(java.lang.String,java.lang.String,boolean)",
            "org.apache.xml.serializer.ToXMLSAXHandler:boolean startPrefixMapping(java.lang.String,java.lang.String,boolean)",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serializer.ToUnknownStream:void namespaceAfterStartElement(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(int,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.xsltc.dom.SAXImpl:java.lang.String shallowCopy(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String startXslElement(java.lang.String,java.lang.String,org.apache.xml.serializer.SerializationHandler,org.apache.xalan.xsltc.DOM,int)",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:java.lang.String copyElement(int,int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void copyNS(int,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void copyAttribute(int,int,org.apache.xml.serializer.SerializationHandler)"
        ]
    },
    "org.apache.xalan.transformer.TransformerHandlerImpl:void externalEntityDecl(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void externalEntityDecl(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void externalEntityDecl(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void externalEntityDecl(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xalan.transformer.TransformerIdentityImpl:void externalEntityDecl(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void externalEntityDecl(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void externalEntityDecl(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void externalEntityDecl(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void externalEntityDecl(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void externalEntityDecl(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void externalEntityDecl(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void externalEntityDecl(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xalan.transformer.TransformerHandlerImpl:void internalEntityDecl(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void internalEntityDecl(java.lang.String,java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void internalEntityDecl(java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void internalEntityDecl(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xalan.transformer.TransformerIdentityImpl:void internalEntityDecl(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void internalEntityDecl(java.lang.String,java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void internalEntityDecl(java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void internalEntityDecl(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void internalEntityDecl(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void internalEntityDecl(java.lang.String,java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void internalEntityDecl(java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void internalEntityDecl(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xalan.transformer.TransformerHandlerImpl:void ignorableWhitespace(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void ignorableWhitespace(char[],int,int)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void ignorableWhitespace(char[],int,int)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void ignorableWhitespace(char[],int,int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void ignorableWhitespace(char[],int,int)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void ignorableWhitespace(char[],int,int)"
        ]
    },
    "org.apache.xalan.transformer.TransformerIdentityImpl:void ignorableWhitespace(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void ignorableWhitespace(char[],int,int)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void ignorableWhitespace(char[],int,int)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void ignorableWhitespace(char[],int,int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void ignorableWhitespace(char[],int,int)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void ignorableWhitespace(char[],int,int)"
        ]
    },
    "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void ignorableWhitespace(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void ignorableWhitespace(char[],int,int)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void ignorableWhitespace(char[],int,int)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void ignorableWhitespace(char[],int,int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void ignorableWhitespace(char[],int,int)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void ignorableWhitespace(char[],int,int)"
        ]
    },
    "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void ignorableWhitespace(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void ignorableWhitespace(char[],int,int)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void ignorableWhitespace(char[],int,int)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void ignorableWhitespace(char[],int,int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void ignorableWhitespace(char[],int,int)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void ignorableWhitespace(char[],int,int)"
        ]
    },
    "org.apache.xml.serializer.ToXMLSAXHandler:void ignorableWhitespace(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void ignorableWhitespace(char[],int,int)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void ignorableWhitespace(char[],int,int)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void ignorableWhitespace(char[],int,int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void ignorableWhitespace(char[],int,int)",
            "org.apache.xml.serializer.ToUnknownStream:void ignorableWhitespace(char[],int,int)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void ignorableWhitespace(char[],int,int)"
        ]
    },
    "org.apache.xml.serializer.ToUnknownStream:boolean setEscaping(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(int,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.xsltc.dom.SimpleResultTreeImpl:void characters(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xml.serializer.ToUnknownStream:boolean setEscaping(boolean)"
        ]
    },
    "org.apache.xpath.objects.XStringForFSB:void dispatchAsComment(org.xml.sax.ext.LexicalHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.ClonerToResultTree:void cloneToResultTree(int,int,org.apache.xml.dtm.DTM,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)"
        ]
    },
    "org.apache.xalan.templates.ElemTemplateElement:void executeNSDecls(org.apache.xalan.transformer.TransformerImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemLiteralResult:void execute(org.apache.xalan.transformer.TransformerImpl)"
        ]
    },
    "org.apache.xalan.transformer.TransformerHandlerImpl:void startPrefixMapping(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:boolean startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:boolean startPrefixMapping(java.lang.String,java.lang.String,boolean)",
            "org.apache.xml.serializer.ToXMLSAXHandler:boolean startPrefixMapping(java.lang.String,java.lang.String,boolean)",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xalan.transformer.TransformerIdentityImpl:void startPrefixMapping(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:boolean startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:boolean startPrefixMapping(java.lang.String,java.lang.String,boolean)",
            "org.apache.xml.serializer.ToXMLSAXHandler:boolean startPrefixMapping(java.lang.String,java.lang.String,boolean)",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xalan.xsltc.trax.DOM2SAX:boolean startPrefixMapping(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startPrefixMapping(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:boolean startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:boolean startPrefixMapping(java.lang.String,java.lang.String,boolean)",
            "org.apache.xml.serializer.ToXMLSAXHandler:boolean startPrefixMapping(java.lang.String,java.lang.String,boolean)",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void startPrefixMapping(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:boolean startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:boolean startPrefixMapping(java.lang.String,java.lang.String,boolean)",
            "org.apache.xml.serializer.ToXMLSAXHandler:boolean startPrefixMapping(java.lang.String,java.lang.String,boolean)",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void copyNS(int,org.apache.xml.serializer.SerializationHandler,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(int,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.xsltc.dom.SAXImpl:java.lang.String shallowCopy(int,org.apache.xml.serializer.SerializationHandler)"
        ]
    },
    "org.apache.xml.serializer.ToXMLSAXHandler:void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.serialize.SerializerUtils:void addAttribute(org.apache.xml.serializer.SerializationHandler,int)",
            "org.apache.xalan.templates.ElemAttribute:void constructNode(java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemLiteralResult:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xml.serializer.ToUnknownStream:void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)"
        ]
    },
    "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:void characters(int,org.apache.xml.serializer.SerializationHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMAdapter:void characters(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.MultiDOM:void characters(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SimpleResultTreeImpl:void copy(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SimpleResultTreeImpl:java.lang.String shallowCopy(int,org.apache.xml.serializer.SerializationHandler)"
        ]
    },
    "org.apache.xalan.xsltc.dom.DOMAdapter:void characters(int,org.apache.xml.serializer.SerializationHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMAdapter:void characters(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.MultiDOM:void characters(int,org.apache.xml.serializer.SerializationHandler)"
        ]
    },
    "org.apache.xalan.xsltc.dom.MultiDOM:void characters(int,org.apache.xml.serializer.SerializationHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMAdapter:void characters(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.MultiDOM:void characters(int,org.apache.xml.serializer.SerializationHandler)"
        ]
    },
    "org.apache.xalan.xsltc.dom.SimpleResultTreeImpl:void copy(int,org.apache.xml.serializer.SerializationHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:void copy(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.DOMAdapter:void copy(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.MultiDOM:void copy(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.MultiDOM:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SimpleResultTreeImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:void copy(java.lang.Object,org.apache.xml.serializer.SerializationHandler,int,org.apache.xalan.xsltc.DOM)"
        ]
    },
    "org.apache.xalan.xsltc.dom.SimpleResultTreeImpl:java.lang.String shallowCopy(int,org.apache.xml.serializer.SerializationHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:java.lang.String shallowCopy(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.DOMAdapter:java.lang.String shallowCopy(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.MultiDOM:java.lang.String shallowCopy(int,org.apache.xml.serializer.SerializationHandler)"
        ]
    },
    "org.apache.xalan.xsltc.dom.DocumentCache:org.apache.xalan.xsltc.DOM retrieveDocument(java.lang.String,java.lang.String,org.apache.xalan.xsltc.Translet)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator document(java.lang.String,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM,boolean)"
        ]
    },
    "org.apache.xpath.XPathContext$XPathExpressionContext:double toNumber(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xpath.objects.XString:int rtf(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.transformer.TransformerImpl:org.xml.sax.ContentHandler getInputContentHandler(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.TransformerFactoryImpl:javax.xml.transform.sax.TransformerHandler newTransformerHandler(javax.xml.transform.Templates)",
            "org.apache.xalan.transformer.TransformerImpl:org.xml.sax.ContentHandler getInputContentHandler()"
        ]
    },
    "org.apache.xpath.SourceTreeManager:int getSourceTree(javax.xml.transform.Source,javax.xml.transform.SourceLocator,org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.FuncDocument:int getDoc(org.apache.xpath.XPathContext,int,java.lang.String,java.lang.String)",
            "org.apache.xpath.SourceTreeManager:int getSourceTree(java.lang.String,java.lang.String,javax.xml.transform.SourceLocator,org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xalan.transformer.TransformerIdentityImpl:void endPrefixMapping(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void endPrefixMapping(java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void endPrefixMapping(java.lang.String)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void endPrefixMapping(java.lang.String)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void endPrefixMapping(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void endPrefixMapping(java.lang.String)",
            "org.apache.xml.serializer.NamespaceMappings:void popNamespaces(int,org.xml.sax.ContentHandler)",
            "org.apache.xml.serializer.ToXMLSAXHandler:boolean popNamespace(java.lang.String)",
            "org.apache.xml.serializer.TreeWalker:void endNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void endNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xalan.transformer.TransformerIdentityImpl:void skippedEntity(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void skippedEntity(java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void skippedEntity(java.lang.String)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void skippedEntity(java.lang.String)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void skippedEntity(java.lang.String)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void skippedEntity(java.lang.String)"
        ]
    },
    "org.apache.xalan.transformer.TransformerIdentityImpl:void startDTD(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void startDTD(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void startDTD(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startDTD(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void startDTD(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void startElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xml.serializer.SerializerBase:void startDocument()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.Redirect:org.xml.sax.ContentHandler makeFormatterListener(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall,java.lang.String,boolean,boolean,boolean)",
            "org.apache.xalan.transformer.TransformerHandlerImpl:void startDocument()",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void flushStartDoc()",
            "org.apache.xalan.transformer.TransformerImpl:int transformToRTF(org.apache.xalan.templates.ElemTemplateElement,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.xsltc.runtime.AbstractTranslet:org.apache.xml.serializer.SerializationHandler openOutputHandler(java.lang.String,boolean)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse()",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse()",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startDocument()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void startDocument()",
            "org.apache.xml.serializer.ToSAXHandler:void startDocumentInternal()",
            "org.apache.xml.serializer.ToUnknownStream:void comment(java.lang.String)",
            "org.apache.xml.serializer.ToUnknownStream:void initStreamOutput()",
            "org.apache.xml.serializer.ToUnknownStream:void flush()",
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)"
        ]
    },
    "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator document(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator documentF(java.lang.Object,org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator documentF(java.lang.Object,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)"
        ]
    },
    "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:void startElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemElement:void constructNode(java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemLiteralResult:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.ClonerToResultTree:void cloneToResultTree(int,int,org.apache.xml.dtm.DTM,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.transformer.TreeWalker2Result:void startNode(int)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String startXslElement(java.lang.String,java.lang.String,org.apache.xml.serializer.SerializationHandler,org.apache.xalan.xsltc.DOM,int)",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void closeStartTag()",
            "org.apache.xml.serializer.ToUnknownStream:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToUnknownStream:void emitFirstTag()",
            "org.apache.xml.serializer.ToXMLSAXHandler:void closeStartTag()",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xalan.xsltc.dom.MultiDOM:org.apache.xalan.xsltc.DOM getResultTreeFrag(int,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMAdapter:org.apache.xalan.xsltc.DOM getResultTreeFrag(int,int,boolean)"
        ]
    },
    "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:org.apache.xalan.xsltc.DOM getResultTreeFrag(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMAdapter:org.apache.xalan.xsltc.DOM getResultTreeFrag(int,int)"
        ]
    },
    "org.apache.xalan.xsltc.dom.DOMAdapter:org.apache.xalan.xsltc.DOM getResultTreeFrag(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMAdapter:org.apache.xalan.xsltc.DOM getResultTreeFrag(int,int)",
            "org.apache.xalan.xsltc.dom.MultiDOM:org.apache.xalan.xsltc.DOM getResultTreeFrag(int,int)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Stylesheet:void parseContents(org.apache.xalan.xsltc.compiler.Parser)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AttributeSet:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Import:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Include:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Parser:void createAST(org.apache.xalan.xsltc.compiler.Stylesheet)",
            "org.apache.xalan.xsltc.compiler.Stylesheet:void parseOwnChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void parseChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Template:void parseSimplified(org.apache.xalan.xsltc.compiler.Stylesheet,org.apache.xalan.xsltc.compiler.Parser)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.ApplyImports:void parseContents(org.apache.xalan.xsltc.compiler.Parser)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AttributeSet:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Stylesheet:void parseOwnChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void parseChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Template:void parseSimplified(org.apache.xalan.xsltc.compiler.Stylesheet,org.apache.xalan.xsltc.compiler.Parser)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.ApplyTemplates:void parseContents(org.apache.xalan.xsltc.compiler.Parser)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AttributeSet:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Stylesheet:void parseOwnChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void parseChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Template:void parseSimplified(org.apache.xalan.xsltc.compiler.Stylesheet,org.apache.xalan.xsltc.compiler.Parser)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Attribute:void parseContents(org.apache.xalan.xsltc.compiler.Parser)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AttributeSet:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Stylesheet:void parseOwnChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void parseChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Template:void parseSimplified(org.apache.xalan.xsltc.compiler.Stylesheet,org.apache.xalan.xsltc.compiler.Parser)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.CallTemplate:void parseContents(org.apache.xalan.xsltc.compiler.Parser)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AttributeSet:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Stylesheet:void parseOwnChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void parseChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Template:void parseSimplified(org.apache.xalan.xsltc.compiler.Stylesheet,org.apache.xalan.xsltc.compiler.Parser)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Comment:void parseContents(org.apache.xalan.xsltc.compiler.Parser)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AttributeSet:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Stylesheet:void parseOwnChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void parseChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Template:void parseSimplified(org.apache.xalan.xsltc.compiler.Stylesheet,org.apache.xalan.xsltc.compiler.Parser)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Copy:void parseContents(org.apache.xalan.xsltc.compiler.Parser)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AttributeSet:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Stylesheet:void parseOwnChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void parseChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Template:void parseSimplified(org.apache.xalan.xsltc.compiler.Stylesheet,org.apache.xalan.xsltc.compiler.Parser)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Fallback:void parseContents(org.apache.xalan.xsltc.compiler.Parser)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AttributeSet:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Stylesheet:void parseOwnChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void parseChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Template:void parseSimplified(org.apache.xalan.xsltc.compiler.Stylesheet,org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.UnsupportedElement:void processFallbacks(org.apache.xalan.xsltc.compiler.Parser)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.ForEach:void parseContents(org.apache.xalan.xsltc.compiler.Parser)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AttributeSet:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Stylesheet:void parseOwnChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void parseChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Template:void parseSimplified(org.apache.xalan.xsltc.compiler.Stylesheet,org.apache.xalan.xsltc.compiler.Parser)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.If:void parseContents(org.apache.xalan.xsltc.compiler.Parser)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AttributeSet:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Stylesheet:void parseOwnChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void parseChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Template:void parseSimplified(org.apache.xalan.xsltc.compiler.Stylesheet,org.apache.xalan.xsltc.compiler.Parser)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.LiteralElement:void parseContents(org.apache.xalan.xsltc.compiler.Parser)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AttributeSet:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Stylesheet:void parseOwnChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void parseChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Template:void parseSimplified(org.apache.xalan.xsltc.compiler.Stylesheet,org.apache.xalan.xsltc.compiler.Parser)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Message:void parseContents(org.apache.xalan.xsltc.compiler.Parser)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AttributeSet:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Stylesheet:void parseOwnChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void parseChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Template:void parseSimplified(org.apache.xalan.xsltc.compiler.Stylesheet,org.apache.xalan.xsltc.compiler.Parser)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.ProcessingInstruction:void parseContents(org.apache.xalan.xsltc.compiler.Parser)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AttributeSet:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Stylesheet:void parseOwnChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void parseChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Template:void parseSimplified(org.apache.xalan.xsltc.compiler.Stylesheet,org.apache.xalan.xsltc.compiler.Parser)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void parseContents(org.apache.xalan.xsltc.compiler.Parser)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AttributeSet:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Stylesheet:void parseOwnChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void parseChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Template:void parseSimplified(org.apache.xalan.xsltc.compiler.Stylesheet,org.apache.xalan.xsltc.compiler.Parser)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Template:void parseContents(org.apache.xalan.xsltc.compiler.Parser)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AttributeSet:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Stylesheet:void parseOwnChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void parseChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Template:void parseSimplified(org.apache.xalan.xsltc.compiler.Stylesheet,org.apache.xalan.xsltc.compiler.Parser)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Text:void parseContents(org.apache.xalan.xsltc.compiler.Parser)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AttributeSet:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Stylesheet:void parseOwnChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void parseChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Template:void parseSimplified(org.apache.xalan.xsltc.compiler.Stylesheet,org.apache.xalan.xsltc.compiler.Parser)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.TransletOutput:void parseContents(org.apache.xalan.xsltc.compiler.Parser)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AttributeSet:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Stylesheet:void parseOwnChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void parseChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Template:void parseSimplified(org.apache.xalan.xsltc.compiler.Stylesheet,org.apache.xalan.xsltc.compiler.Parser)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.VariableBase:void parseContents(org.apache.xalan.xsltc.compiler.Parser)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AttributeSet:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Param:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Stylesheet:void parseOwnChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void parseChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Template:void parseSimplified(org.apache.xalan.xsltc.compiler.Stylesheet,org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Variable:void parseContents(org.apache.xalan.xsltc.compiler.Parser)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.When:void parseContents(org.apache.xalan.xsltc.compiler.Parser)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AttributeSet:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Stylesheet:void parseOwnChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void parseChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Template:void parseSimplified(org.apache.xalan.xsltc.compiler.Stylesheet,org.apache.xalan.xsltc.compiler.Parser)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.WithParam:void parseContents(org.apache.xalan.xsltc.compiler.Parser)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AttributeSet:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Stylesheet:void parseOwnChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void parseChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Template:void parseSimplified(org.apache.xalan.xsltc.compiler.Stylesheet,org.apache.xalan.xsltc.compiler.Parser)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.XslAttribute:void parseContents(org.apache.xalan.xsltc.compiler.Parser)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AttributeSet:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Stylesheet:void parseOwnChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void parseChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Template:void parseSimplified(org.apache.xalan.xsltc.compiler.Stylesheet,org.apache.xalan.xsltc.compiler.Parser)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.XslElement:void parseContents(org.apache.xalan.xsltc.compiler.Parser)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AttributeSet:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Stylesheet:void parseOwnChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void parseChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Template:void parseSimplified(org.apache.xalan.xsltc.compiler.Stylesheet,org.apache.xalan.xsltc.compiler.Parser)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Parser:org.apache.xalan.xsltc.compiler.SyntaxTreeNode getStylesheet(org.apache.xalan.xsltc.compiler.SyntaxTreeNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.Parser:org.apache.xalan.xsltc.compiler.SyntaxTreeNode parse(org.xml.sax.XMLReader,org.xml.sax.InputSource)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.XSLTC:boolean compile(java.util.Vector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.cmdline.Compile:void main(java.lang.String[])"
        ]
    },
    "org.apache.xalan.xsltc.cmdline.Compile:void main(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.compiler.XSLTC:byte[][] compile(java.lang.String,org.xml.sax.InputSource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:javax.xml.transform.Templates newTemplates(javax.xml.transform.Source)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.client.XSLTProcessorApplet:void start()",
            "org.apache.xalan.lib.PipeDocument:void pipeDocument(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)",
            "org.apache.xalan.xslt.Process:void main(java.lang.String[])",
            "org.apache.xalan.xsltc.trax.SmartTransformerFactoryImpl:javax.xml.transform.Templates newTemplates(javax.xml.transform.Source)",
            "org.apache.xalan.xsltc.trax.SmartTransformerFactoryImpl:org.xml.sax.XMLFilter newXMLFilter(javax.xml.transform.Source)",
            "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:javax.xml.transform.Transformer newTransformer(javax.xml.transform.Source)",
            "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:org.xml.sax.XMLFilter newXMLFilter(javax.xml.transform.Source)"
        ]
    },
    "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void setResult(javax.xml.transform.Result)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.PipeDocument:void usePipe(java.util.Vector,java.lang.String,java.lang.String)",
            "org.apache.xalan.xslt.Process:void main(java.lang.String[])",
            "org.apache.xalan.xsltc.trax.TrAXFilter:void setContentHandler(org.xml.sax.ContentHandler)"
        ]
    },
    "org.apache.xalan.lib.sql.XConnection:org.apache.xml.dtm.DTM pquery(org.apache.xalan.extensions.ExpressionContext,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.templates.RedundentExprEliminator:void eleminateRedundentLocals(org.apache.xalan.templates.ElemTemplateElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.RedundentExprEliminator:boolean visitInstruction(org.apache.xalan.templates.ElemTemplateElement)"
        ]
    },
    "org.apache.xalan.templates.RedundentExprEliminator:void eleminateRedundentGlobals(org.apache.xalan.templates.StylesheetRoot)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.templates.RedundentExprEliminator:org.apache.xalan.templates.RedundentExprEliminator$MultistepExprHolder matchAndEliminatePartialPaths(org.apache.xalan.templates.RedundentExprEliminator$MultistepExprHolder,org.apache.xalan.templates.RedundentExprEliminator$MultistepExprHolder,boolean,int,org.apache.xalan.templates.ElemTemplateElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.RedundentExprEliminator:void eleminateSharedPartialPaths(org.apache.xalan.templates.ElemTemplateElement,java.util.Vector)"
        ]
    },
    "org.apache.xalan.transformer.TransformerImpl:void setParameter(java.lang.String,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerImpl:void setParameter(java.lang.String,java.lang.Object)",
            "org.apache.xalan.transformer.TransformerImpl:void resetUserParameters()",
            "org.apache.xalan.transformer.TransformerImpl:void setParameters(java.util.Properties)"
        ]
    },
    "org.apache.xalan.transformer.TransformerImpl:void setParameter(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.client.XSLTProcessorApplet:java.lang.String processTransformation()",
            "org.apache.xalan.lib.PipeDocument:void pipeDocument(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)",
            "org.apache.xalan.xslt.Process:void main(java.lang.String[])"
        ]
    },
    "org.apache.xpath.jaxp.JAXPVariableStack:org.apache.xpath.objects.XObject getVariableOrParam(org.apache.xpath.XPathContext,org.apache.xml.utils.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.operations.Variable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,boolean)",
            "org.apache.xpath.XPathContext$XPathExpressionContext:org.apache.xpath.objects.XObject getVariableOrParam(org.apache.xml.utils.QName)"
        ]
    },
    "org.apache.xalan.lib.Extensions:org.w3c.dom.NodeList intersection(org.w3c.dom.NodeList,org.w3c.dom.NodeList)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.lib.Extensions:org.w3c.dom.NodeList difference(org.w3c.dom.NodeList,org.w3c.dom.NodeList)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xpath.functions.Function:void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.AVTPartXPath:void callVisitors(org.apache.xalan.templates.XSLTVisitor)",
            "org.apache.xalan.templates.ElemCopyOf:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemForEach:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemIf:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemNumber:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemValueOf:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemVariable:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemWhen:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemWithParam:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.RedundentExprEliminator:boolean visitPredicate(org.apache.xpath.ExpressionOwner,org.apache.xpath.Expression)",
            "org.apache.xalan.templates.RedundentExprEliminator:boolean visitInstruction(org.apache.xalan.templates.ElemTemplateElement)",
            "org.apache.xpath.axes.FilterExprIterator:void callPredicateVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:void callPredicateVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.axes.FilterExprWalker:void callPredicateVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.axes.HasPositionalPredChecker:boolean visitPredicate(org.apache.xpath.ExpressionOwner,org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:void callPredicateVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.functions.FuncExtFunction:void callArgVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.functions.Function2Args:void callArgVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.functions.Function3Args:void callArgVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.functions.FunctionMultiArgs:void callArgVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.functions.FunctionOneArg:void callArgVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.operations.Operation:void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.operations.UnaryOperation:void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.patterns.FunctionPattern:void callSubtreeVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.patterns.StepPattern:void callSubtreeVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.XPath:void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)"
        ]
    },
    "org.apache.xalan.lib.sql.DTMDocument:void dumpDTM()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.dtm.ref.DTMDefaultBase:java.lang.String dumpNode(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getNodeValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.DTMDocument:void dispatchNodeData(org.w3c.dom.Node,org.xml.sax.ContentHandler,int)",
            "org.apache.xalan.lib.sql.XConnection:org.apache.xpath.objects.XBooleanStatic connect(org.apache.xalan.extensions.ExpressionContext,java.lang.String,java.lang.String,org.w3c.dom.Element)",
            "org.apache.xalan.lib.sql.XConnection:void initFromElement(org.w3c.dom.Element)",
            "org.apache.xalan.lib.sql.XConnection:void addParameterFromElement(org.w3c.dom.Element)",
            "org.apache.xalan.lib.sql.XConnection:void addParameters(org.w3c.dom.Element)",
            "org.apache.xalan.lib.ExsltBase:java.lang.String toString(org.w3c.dom.Node)",
            "org.apache.xalan.trace.TracerEvent:java.lang.String printNode(org.w3c.dom.Node)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void transform(javax.xml.transform.Source,javax.xml.transform.Result)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:void copyNodes(org.w3c.dom.NodeList,org.w3c.dom.Document,org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:boolean nextNode()",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:org.apache.xml.utils.XMLString getStringValue(int)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:boolean isWhitespace(int)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:void getNodeData(org.w3c.dom.Node,org.apache.xml.utils.FastStringBuffer)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:java.lang.String getNodeValue(int)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:void dispatchNodeData(org.w3c.dom.Node,org.xml.sax.ContentHandler,int)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode:boolean isEqualNode(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode:java.lang.String lookupNamespaceURI(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getAttribute(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getAttributeNS(java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:boolean isEqualNode(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String lookupNamespaceURI(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getTextContent()",
            "org.apache.xml.serializer.utils.AttList:java.lang.String getValue(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.SerializerBase:void characters(org.w3c.dom.Node)",
            "org.apache.xml.serializer.ToSAXHandler:void characters(org.w3c.dom.Node)",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.AttList:java.lang.String getValue(java.lang.String,java.lang.String)",
            "org.apache.xml.utils.DOMBuilder:void append(org.w3c.dom.Node)",
            "org.apache.xml.utils.DOMHelper:java.lang.String getNamespaceForPrefix(java.lang.String,org.w3c.dom.Element)",
            "org.apache.xml.utils.DOMHelper:java.lang.String getNamespaceOfNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.DOMHelper:void getNodeData(org.w3c.dom.Node,org.apache.xml.utils.FastStringBuffer)",
            "org.apache.xml.utils.PrefixResolverDefault:java.lang.String getNamespaceForPrefix(java.lang.String,org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.UnImplNode:boolean isEqualNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.UnImplNode:java.lang.String lookupNamespaceURI(java.lang.String)",
            "org.apache.xpath.domapi.XPathNamespaceImpl:java.lang.String getNodeValue()",
            "org.apache.xpath.domapi.XPathNamespaceImpl:java.lang.String getNamespaceURI()",
            "org.apache.xpath.jaxp.JAXPPrefixResolver:java.lang.String getNamespaceForPrefix(java.lang.String,org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getData()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String substringData(int,int)",
            "org.apache.xml.serializer.TreeWalker:void dispatachChars(org.w3c.dom.Node)",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void dispatachChars(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMNodeProxy:int getLength()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.utils.AttList:java.lang.String getValue(int)",
            "org.apache.xml.serializer.utils.AttList:java.lang.String getValue(java.lang.String)",
            "org.apache.xml.utils.AttList:java.lang.String getValue(int)",
            "org.apache.xml.utils.AttList:java.lang.String getValue(java.lang.String)"
        ]
    },
    "org.apache.xalan.serialize.SerializerUtils:boolean isDefinedNSDecl(org.apache.xml.serializer.SerializationHandler,int,org.apache.xml.dtm.DTM)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.serialize.SerializerUtils:void addAttribute(org.apache.xml.serializer.SerializationHandler,int)"
        ]
    },
    "org.apache.xpath.objects.XNodeSet:double getNumberFromNode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.objects.XNodeSet:double num()",
            "org.apache.xpath.objects.XNodeSet:double numWithSideEffects()",
            "org.apache.xpath.objects.XNodeSet:boolean compare(org.apache.xpath.objects.XObject,org.apache.xpath.objects.Comparator)"
        ]
    },
    "org.apache.xpath.objects.XNodeSet:org.apache.xml.utils.XMLString getStringFromNode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.objects.XNodeSet:org.apache.xml.utils.XMLString xstr()",
            "org.apache.xpath.objects.XNodeSet:java.lang.String str()",
            "org.apache.xpath.objects.XNodeSet:boolean compare(org.apache.xpath.objects.XObject,org.apache.xpath.objects.Comparator)"
        ]
    },
    "org.apache.xpath.objects.XRTreeFrag:org.apache.xml.utils.XMLString xstr()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.transformer.KeyRefIterator:short filterNode(int)",
            "org.apache.xalan.transformer.KeyTable:java.util.Hashtable getRefsTable()",
            "org.apache.xpath.functions.FuncStartsWith:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstring:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstringAfter:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:org.apache.xml.utils.XMLString getArg0AsString(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XNodeSet:boolean compare(org.apache.xpath.objects.XObject,org.apache.xpath.objects.Comparator)",
            "org.apache.xpath.objects.XObject:void dispatchCharactersEvents(org.xml.sax.ContentHandler)",
            "org.apache.xpath.objects.XRTreeFrag:double num()",
            "org.apache.xpath.objects.XRTreeFrag:void appendToFsb(org.apache.xml.utils.FastStringBuffer)",
            "org.apache.xpath.objects.XRTreeFrag:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XString:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.operations.String:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.Expression:org.apache.xml.utils.XMLString xstr(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.util.TypeCheckError:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.MethodResolver:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.xalan.extensions.XSLProcessorContext:void outputToResultTree(org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.lib.sql.DTMDocument:java.lang.String getNodeValue(int)",
            "org.apache.xalan.lib.sql.DTMDocument:org.apache.xml.utils.XMLString getStringValue(int)",
            "org.apache.xalan.lib.sql.DTMDocument:void getNodeData(int,org.apache.xml.utils.FastStringBuffer)",
            "org.apache.xalan.lib.sql.XConnection:void setError(java.lang.Exception,org.apache.xalan.extensions.ExpressionContext)",
            "org.apache.xalan.lib.sql.XConnection:void setError(java.lang.Exception,org.apache.xalan.lib.sql.SQLDocument,java.sql.SQLWarning)",
            "org.apache.xalan.lib.Extensions:org.apache.xpath.NodeSet nodeset(org.apache.xalan.extensions.ExpressionContext,java.lang.Object)",
            "org.apache.xalan.processor.ProcessorInclude:void parse(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.processor.TransformerFactoryImpl:javax.xml.transform.Source getAssociatedStylesheet(javax.xml.transform.Source,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.processor.TransformerFactoryImpl:javax.xml.transform.Templates newTemplates(javax.xml.transform.Source)",
            "org.apache.xalan.transformer.TrAXFilter:void parse(org.xml.sax.InputSource)",
            "org.apache.xalan.xslt.EnvironmentCheck:void main(java.lang.String[])",
            "org.apache.xalan.xslt.EnvironmentCheck:boolean writeEnvironmentReport(java.util.Hashtable)",
            "org.apache.xalan.xslt.EnvironmentCheck:boolean logFoundJars(java.util.Vector,java.lang.String)",
            "org.apache.xalan.xslt.EnvironmentCheck:void appendEnvironmentReport(org.w3c.dom.Node,org.w3c.dom.Document,java.util.Hashtable)",
            "org.apache.xalan.xslt.EnvironmentCheck:boolean appendFoundJars(org.w3c.dom.Node,org.w3c.dom.Document,java.util.Vector,java.lang.String)",
            "org.apache.xalan.xslt.EnvironmentCheck:void checkDOMVersion(java.util.Hashtable)",
            "org.apache.xalan.xslt.EnvironmentCheck:void checkSAXVersion(java.util.Hashtable)",
            "org.apache.xalan.xslt.Process:void main(java.lang.String[])",
            "org.apache.xalan.xsltc.compiler.util.ErrorMsg:java.lang.String toString(java.lang.Object)",
            "org.apache.xalan.xsltc.compiler.util.ErrorMsg:java.lang.String toString(java.lang.Object,java.lang.Object)",
            "org.apache.xalan.xsltc.compiler.util.TypeCheckError:java.lang.String getMessage()",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:java.lang.String toString()",
            "org.apache.xalan.xsltc.compiler.CompilerException:void <init>(java.lang.Exception)",
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.FilterIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator documentF(java.lang.Object,org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator documentF(java.lang.Object,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.NodeIteratorBase:org.apache.xalan.xsltc.NodeIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.NthIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.UnionIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.runtime.output.WriterOutputBuffer:java.lang.String close()",
            "org.apache.xalan.xsltc.runtime.output.WriterOutputBuffer:org.apache.xalan.xsltc.runtime.output.OutputBuffer append(java.lang.String)",
            "org.apache.xalan.xsltc.runtime.output.WriterOutputBuffer:org.apache.xalan.xsltc.runtime.output.OutputBuffer append(char[],int,int)",
            "org.apache.xalan.xsltc.runtime.output.WriterOutputBuffer:org.apache.xalan.xsltc.runtime.output.OutputBuffer append(char)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:void copy(java.lang.Object,org.apache.xml.serializer.SerializationHandler,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.CallFunction:java.lang.String invokeMethod(java.lang.String,java.lang.String,java.lang.Object[])",
            "org.apache.xalan.xsltc.runtime.Hashtable:java.lang.String toString()",
            "org.apache.xalan.xsltc.trax.TemplatesHandlerImpl:void endDocument()",
            "org.apache.xalan.xsltc.trax.TrAXFilter:void createParent()",
            "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:void passErrorsToListener(java.util.Vector)",
            "org.apache.xalan.xsltc.TransletException:void <init>(java.lang.Exception)",
            "org.apache.xml.serializer.CharInfo:void <init>(java.lang.String,java.lang.String,boolean)",
            "org.apache.xml.utils.Hashtree2Node:void appendHashToNode(java.util.Hashtable,java.lang.String,org.w3c.dom.Node,org.w3c.dom.Document)",
            "org.apache.xml.utils.XMLReaderManager:org.xml.sax.XMLReader getXMLReader()",
            "org.apache.xpath.compiler.OpMap:java.lang.String getStepLocalName(int)",
            "org.apache.xpath.jaxp.XPathImpl:javax.xml.parsers.DocumentBuilder getParser()",
            "org.apache.xpath.objects.XObject:java.lang.String str()",
            "org.apache.xpath.objects.XString:boolean equals(java.lang.Object)",
            "org.apache.xpath.objects.XStringForFSB:boolean equals(java.lang.Object)",
            "org.apache.xpath.SourceTreeManager:org.xml.sax.XMLReader getXMLReader(javax.xml.transform.Source,javax.xml.transform.SourceLocator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.MethodResolver:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.xalan.extensions.XSLProcessorContext:void outputToResultTree(org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.lib.sql.DTMDocument:java.lang.String getNodeValue(int)",
            "org.apache.xalan.lib.sql.DTMDocument:org.apache.xml.utils.XMLString getStringValue(int)",
            "org.apache.xalan.lib.sql.DTMDocument:void getNodeData(int,org.apache.xml.utils.FastStringBuffer)",
            "org.apache.xalan.lib.Extensions:org.apache.xpath.NodeSet nodeset(org.apache.xalan.extensions.ExpressionContext,java.lang.Object)",
            "org.apache.xalan.xsltc.compiler.util.ErrorMsg:java.lang.String toString(java.lang.Object)",
            "org.apache.xalan.xsltc.compiler.util.ErrorMsg:java.lang.String toString(java.lang.Object,java.lang.Object)",
            "org.apache.xalan.xsltc.compiler.util.TypeCheckError:java.lang.String toString()",
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:java.lang.String toString()",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:void display(int)",
            "org.apache.xalan.xsltc.compiler.ArgumentList:java.lang.String toString()",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:java.lang.String toString()",
            "org.apache.xalan.xsltc.compiler.CopyOf:void display(int)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:java.lang.String toString()",
            "org.apache.xalan.xsltc.compiler.ForEach:void display(int)",
            "org.apache.xalan.xsltc.compiler.If:void display(int)",
            "org.apache.xalan.xsltc.compiler.Param:void display(int)",
            "org.apache.xalan.xsltc.compiler.ValueOf:void display(int)",
            "org.apache.xalan.xsltc.compiler.VariableBase:void display(int)",
            "org.apache.xalan.xsltc.compiler.When:void display(int)",
            "org.apache.xalan.xsltc.compiler.WithParam:void display(int)",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator documentF(java.lang.Object,org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator documentF(java.lang.Object,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:void copy(java.lang.Object,org.apache.xml.serializer.SerializationHandler,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.CallFunction:java.lang.String invokeMethod(java.lang.String,java.lang.String,java.lang.Object[])",
            "org.apache.xalan.xsltc.runtime.Hashtable:java.lang.String toString()",
            "org.apache.xalan.xsltc.trax.TemplatesHandlerImpl:void endDocument()",
            "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:void passErrorsToListener(java.util.Vector)",
            "org.apache.xml.utils.Hashtree2Node:void appendHashToNode(java.util.Hashtable,java.lang.String,org.w3c.dom.Node,org.w3c.dom.Document)",
            "org.apache.xpath.compiler.OpMap:java.lang.String getStepLocalName(int)",
            "org.apache.xpath.objects.XObject:java.lang.String str()",
            "org.apache.xpath.objects.XString:boolean equals(java.lang.Object)",
            "org.apache.xpath.objects.XStringForFSB:boolean equals(java.lang.Object)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.ApplyTemplates:void display(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void displayContents(int)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.ArgumentList:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.MethodResolver:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.xalan.extensions.XSLProcessorContext:void outputToResultTree(org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.lib.sql.DTMDocument:java.lang.String getNodeValue(int)",
            "org.apache.xalan.lib.sql.DTMDocument:org.apache.xml.utils.XMLString getStringValue(int)",
            "org.apache.xalan.lib.sql.DTMDocument:void getNodeData(int,org.apache.xml.utils.FastStringBuffer)",
            "org.apache.xalan.lib.Extensions:org.apache.xpath.NodeSet nodeset(org.apache.xalan.extensions.ExpressionContext,java.lang.Object)",
            "org.apache.xalan.xsltc.compiler.util.ErrorMsg:java.lang.String toString(java.lang.Object)",
            "org.apache.xalan.xsltc.compiler.util.ErrorMsg:java.lang.String toString(java.lang.Object,java.lang.Object)",
            "org.apache.xalan.xsltc.compiler.ArgumentList:java.lang.String toString()",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:java.lang.String toString()",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator documentF(java.lang.Object,org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator documentF(java.lang.Object,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:void copy(java.lang.Object,org.apache.xml.serializer.SerializationHandler,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.CallFunction:java.lang.String invokeMethod(java.lang.String,java.lang.String,java.lang.Object[])",
            "org.apache.xalan.xsltc.runtime.Hashtable:java.lang.String toString()",
            "org.apache.xalan.xsltc.trax.TemplatesHandlerImpl:void endDocument()",
            "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:void passErrorsToListener(java.util.Vector)",
            "org.apache.xml.utils.Hashtree2Node:void appendHashToNode(java.util.Hashtable,java.lang.String,org.w3c.dom.Node,org.w3c.dom.Document)",
            "org.apache.xpath.compiler.OpMap:java.lang.String getStepLocalName(int)",
            "org.apache.xpath.objects.XObject:java.lang.String str()",
            "org.apache.xpath.objects.XString:boolean equals(java.lang.Object)",
            "org.apache.xpath.objects.XStringForFSB:boolean equals(java.lang.Object)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.CopyOf:void display(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void displayContents(int)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.MethodResolver:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.xalan.extensions.XSLProcessorContext:void outputToResultTree(org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.lib.sql.DTMDocument:java.lang.String getNodeValue(int)",
            "org.apache.xalan.lib.sql.DTMDocument:org.apache.xml.utils.XMLString getStringValue(int)",
            "org.apache.xalan.lib.sql.DTMDocument:void getNodeData(int,org.apache.xml.utils.FastStringBuffer)",
            "org.apache.xalan.lib.Extensions:org.apache.xpath.NodeSet nodeset(org.apache.xalan.extensions.ExpressionContext,java.lang.Object)",
            "org.apache.xalan.xsltc.compiler.util.ErrorMsg:java.lang.String toString(java.lang.Object)",
            "org.apache.xalan.xsltc.compiler.util.ErrorMsg:java.lang.String toString(java.lang.Object,java.lang.Object)",
            "org.apache.xalan.xsltc.compiler.util.TypeCheckError:java.lang.String toString()",
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:java.lang.String toString()",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:void display(int)",
            "org.apache.xalan.xsltc.compiler.ArgumentList:java.lang.String toString()",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:java.lang.String toString()",
            "org.apache.xalan.xsltc.compiler.CopyOf:void display(int)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:java.lang.String toString()",
            "org.apache.xalan.xsltc.compiler.ForEach:void display(int)",
            "org.apache.xalan.xsltc.compiler.If:void display(int)",
            "org.apache.xalan.xsltc.compiler.Param:void display(int)",
            "org.apache.xalan.xsltc.compiler.ValueOf:void display(int)",
            "org.apache.xalan.xsltc.compiler.VariableBase:void display(int)",
            "org.apache.xalan.xsltc.compiler.When:void display(int)",
            "org.apache.xalan.xsltc.compiler.WithParam:void display(int)",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator documentF(java.lang.Object,org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator documentF(java.lang.Object,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:void copy(java.lang.Object,org.apache.xml.serializer.SerializationHandler,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.CallFunction:java.lang.String invokeMethod(java.lang.String,java.lang.String,java.lang.Object[])",
            "org.apache.xalan.xsltc.runtime.Hashtable:java.lang.String toString()",
            "org.apache.xalan.xsltc.trax.TemplatesHandlerImpl:void endDocument()",
            "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:void passErrorsToListener(java.util.Vector)",
            "org.apache.xml.utils.Hashtree2Node:void appendHashToNode(java.util.Hashtable,java.lang.String,org.w3c.dom.Node,org.w3c.dom.Document)",
            "org.apache.xpath.compiler.OpMap:java.lang.String getStepLocalName(int)",
            "org.apache.xpath.objects.XObject:java.lang.String str()",
            "org.apache.xpath.objects.XString:boolean equals(java.lang.Object)",
            "org.apache.xpath.objects.XStringForFSB:boolean equals(java.lang.Object)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.ForEach:void display(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void displayContents(int)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.If:void display(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void displayContents(int)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Param:void display(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void displayContents(int)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.ValueOf:void display(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void displayContents(int)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.VariableBase:void display(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void displayContents(int)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.When:void display(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void displayContents(int)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.WithParam:void display(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void displayContents(int)"
        ]
    },
    "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(java.lang.Object,java.lang.Object,int,org.apache.xalan.xsltc.DOM)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.lib.Extensions:org.w3c.dom.Node checkEnvironmentUsingWhich(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.Document)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.Extensions:org.w3c.dom.Node checkEnvironment(org.apache.xalan.extensions.ExpressionContext)"
        ]
    },
    "org.apache.xpath.objects.EqualComparator:boolean compareStrings(org.apache.xml.utils.XMLString,org.apache.xml.utils.XMLString)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.objects.XNodeSet:boolean compare(org.apache.xpath.objects.XObject,org.apache.xpath.objects.Comparator)"
        ]
    },
    "org.apache.xpath.objects.NotEqualComparator:boolean compareStrings(org.apache.xml.utils.XMLString,org.apache.xml.utils.XMLString)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.objects.XNodeSet:boolean compare(org.apache.xpath.objects.XObject,org.apache.xpath.objects.Comparator)"
        ]
    },
    "org.apache.xpath.axes.BasicTestIterator:void <init>(org.apache.xpath.compiler.Compiler,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.ChildTestIterator:void <init>(org.apache.xpath.compiler.Compiler,int,int)"
        ]
    },
    "org.apache.xpath.axes.DescendantIterator:void <init>(org.apache.xpath.compiler.Compiler,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.WalkerFactory:org.apache.xml.dtm.DTMIterator newDTMIterator(org.apache.xpath.compiler.Compiler,int,boolean)"
        ]
    },
    "org.apache.xpath.axes.WalkerFactory:org.apache.xpath.patterns.StepPattern createDefaultStepPattern(org.apache.xpath.compiler.Compiler,int,org.apache.xpath.axes.MatchPatternIterator,int,org.apache.xpath.patterns.StepPattern,org.apache.xpath.patterns.StepPattern)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.WalkerFactory:org.apache.xpath.patterns.StepPattern loadSteps(org.apache.xpath.axes.MatchPatternIterator,org.apache.xpath.compiler.Compiler,int,int)"
        ]
    },
    "org.apache.xpath.axes.WalkerFactory:org.apache.xpath.axes.AxesWalker createDefaultWalker(org.apache.xpath.compiler.Compiler,int,org.apache.xpath.axes.WalkingIterator,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.WalkerFactory:org.apache.xpath.axes.AxesWalker loadOneWalker(org.apache.xpath.axes.WalkingIterator,org.apache.xpath.compiler.Compiler,int)",
            "org.apache.xpath.axes.WalkerFactory:org.apache.xpath.axes.AxesWalker loadWalkers(org.apache.xpath.axes.WalkingIterator,org.apache.xpath.compiler.Compiler,int,int)"
        ]
    },
    "org.apache.xpath.axes.WalkerFactory:boolean isNaturalDocOrder(org.apache.xpath.compiler.Compiler,int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.WalkerFactory:org.apache.xml.dtm.DTMIterator newDTMIterator(org.apache.xpath.compiler.Compiler,int,boolean)"
        ]
    },
    "org.apache.xpath.compiler.Compiler:org.apache.xpath.patterns.StepPattern stepPattern(int,int,org.apache.xpath.patterns.StepPattern)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression locationPathPattern(int)",
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.patterns.StepPattern stepPattern(int,int,org.apache.xpath.patterns.StepPattern)"
        ]
    },
    "org.apache.xpath.objects.GreaterThanComparator:boolean compareStrings(org.apache.xml.utils.XMLString,org.apache.xml.utils.XMLString)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.objects.XNodeSet:boolean compare(org.apache.xpath.objects.XObject,org.apache.xpath.objects.Comparator)"
        ]
    },
    "org.apache.xpath.objects.GreaterThanOrEqualComparator:boolean compareStrings(org.apache.xml.utils.XMLString,org.apache.xml.utils.XMLString)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.objects.XNodeSet:boolean compare(org.apache.xpath.objects.XObject,org.apache.xpath.objects.Comparator)"
        ]
    },
    "org.apache.xpath.objects.LessThanComparator:boolean compareStrings(org.apache.xml.utils.XMLString,org.apache.xml.utils.XMLString)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.objects.XNodeSet:boolean compare(org.apache.xpath.objects.XObject,org.apache.xpath.objects.Comparator)"
        ]
    },
    "org.apache.xpath.objects.LessThanOrEqualComparator:boolean compareStrings(org.apache.xml.utils.XMLString,org.apache.xml.utils.XMLString)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.objects.XNodeSet:boolean compare(org.apache.xpath.objects.XObject,org.apache.xpath.objects.Comparator)"
        ]
    },
    "org.apache.xpath.objects.XRTreeFrag:double num()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.MethodResolver:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.xalan.lib.ExsltDynamic:double max(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList,java.lang.String)",
            "org.apache.xalan.lib.ExsltDynamic:double min(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList,java.lang.String)",
            "org.apache.xalan.lib.ExsltDynamic:double sum(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList,java.lang.String)",
            "org.apache.xalan.templates.ElemNumber:java.lang.String getCountString(org.apache.xalan.transformer.TransformerImpl,int)",
            "org.apache.xalan.templates.FuncFormatNumb:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.transformer.NodeSorter$NodeCompareElem:void <init>(org.apache.xalan.transformer.NodeSorter,int)",
            "org.apache.xalan.transformer.NodeSorter:int compare(org.apache.xalan.transformer.NodeSorter$NodeCompareElem,org.apache.xalan.transformer.NodeSorter$NodeCompareElem,int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean executePredicates(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.domapi.XPathResultImpl:double getNumberValue()",
            "org.apache.xpath.functions.FuncCeiling:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncFloor:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncRound:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstring:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:double getArg0AsNumber(org.apache.xpath.XPathContext)",
            "org.apache.xpath.jaxp.XPathExpressionImpl:java.lang.Object getResultAsType(org.apache.xpath.objects.XObject,javax.xml.namespace.QName)",
            "org.apache.xpath.jaxp.XPathImpl:java.lang.Object getResultAsType(org.apache.xpath.objects.XObject,javax.xml.namespace.QName)",
            "org.apache.xpath.objects.XNodeSet:boolean compare(org.apache.xpath.objects.XObject,org.apache.xpath.objects.Comparator)",
            "org.apache.xpath.objects.XNumber:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XObject:double numWithSideEffects()",
            "org.apache.xpath.objects.XObject:java.lang.Object castToType(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XObject:boolean lessThan(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XObject:boolean lessThanOrEqual(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XObject:boolean greaterThan(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XObject:boolean greaterThanOrEqual(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XRTreeFrag:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XString:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.operations.Div:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject,org.apache.xpath.objects.XObject)",
            "org.apache.xpath.operations.Minus:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject,org.apache.xpath.objects.XObject)",
            "org.apache.xpath.operations.Mod:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject,org.apache.xpath.objects.XObject)",
            "org.apache.xpath.operations.Mult:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject,org.apache.xpath.objects.XObject)",
            "org.apache.xpath.operations.Neg:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.operations.Number:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.operations.Plus:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject,org.apache.xpath.objects.XObject)",
            "org.apache.xpath.operations.Quo:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject,org.apache.xpath.objects.XObject)",
            "org.apache.xpath.patterns.StepPattern:boolean executePredicates(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.patterns.StepPattern:double getMatchScore(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.patterns.UnionPattern:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.XPath:double getMatchScore(org.apache.xpath.XPathContext,int)"
        ]
    },
    "org.apache.xpath.objects.XString:double num()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.MethodResolver:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.xalan.lib.ExsltDynamic:double max(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList,java.lang.String)",
            "org.apache.xalan.lib.ExsltDynamic:double min(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList,java.lang.String)",
            "org.apache.xalan.lib.ExsltDynamic:double sum(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList,java.lang.String)",
            "org.apache.xalan.templates.ElemNumber:java.lang.String getCountString(org.apache.xalan.transformer.TransformerImpl,int)",
            "org.apache.xalan.templates.FuncFormatNumb:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.transformer.NodeSorter$NodeCompareElem:void <init>(org.apache.xalan.transformer.NodeSorter,int)",
            "org.apache.xalan.transformer.NodeSorter:int compare(org.apache.xalan.transformer.NodeSorter$NodeCompareElem,org.apache.xalan.transformer.NodeSorter$NodeCompareElem,int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean executePredicates(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.domapi.XPathResultImpl:double getNumberValue()",
            "org.apache.xpath.functions.FuncCeiling:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncFloor:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncRound:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstring:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:double getArg0AsNumber(org.apache.xpath.XPathContext)",
            "org.apache.xpath.jaxp.XPathExpressionImpl:java.lang.Object getResultAsType(org.apache.xpath.objects.XObject,javax.xml.namespace.QName)",
            "org.apache.xpath.jaxp.XPathImpl:java.lang.Object getResultAsType(org.apache.xpath.objects.XObject,javax.xml.namespace.QName)",
            "org.apache.xpath.objects.XNodeSet:boolean compare(org.apache.xpath.objects.XObject,org.apache.xpath.objects.Comparator)",
            "org.apache.xpath.objects.XNumber:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XObject:double numWithSideEffects()",
            "org.apache.xpath.objects.XObject:java.lang.Object castToType(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XObject:boolean lessThan(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XObject:boolean lessThanOrEqual(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XObject:boolean greaterThan(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XObject:boolean greaterThanOrEqual(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XRTreeFrag:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XString:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.operations.Div:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject,org.apache.xpath.objects.XObject)",
            "org.apache.xpath.operations.Minus:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject,org.apache.xpath.objects.XObject)",
            "org.apache.xpath.operations.Mod:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject,org.apache.xpath.objects.XObject)",
            "org.apache.xpath.operations.Mult:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject,org.apache.xpath.objects.XObject)",
            "org.apache.xpath.operations.Neg:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.operations.Number:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.operations.Plus:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject,org.apache.xpath.objects.XObject)",
            "org.apache.xpath.operations.Quo:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject,org.apache.xpath.objects.XObject)",
            "org.apache.xpath.patterns.StepPattern:boolean executePredicates(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.patterns.StepPattern:double getMatchScore(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.patterns.UnionPattern:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.XPath:double getMatchScore(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.XPathContext$XPathExpressionContext:double toNumber(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xalan.processor.XSLTElementDef:boolean equalsMayBeNull(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.compiler.util.MultiHashtable:java.lang.Object maps(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.CastExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:org.apache.xalan.xsltc.compiler.util.Type typeCheckConstructor(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:org.apache.xalan.xsltc.compiler.util.Type typeCheckExternal(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.FunctionCall$JavaType:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.XSLTElementDef:boolean equalsMayBeNull(java.lang.Object,java.lang.Object)",
            "org.apache.xalan.xsltc.compiler.util.MultiHashtable:java.lang.Object maps(java.lang.Object,java.lang.Object)",
            "org.apache.xalan.xsltc.compiler.FunctionCall$JavaType:boolean equals(java.lang.Object)",
            "org.apache.xalan.xsltc.runtime.Hashtable:boolean contains(java.lang.Object)",
            "org.apache.xalan.xsltc.runtime.Hashtable:boolean containsKey(java.lang.Object)",
            "org.apache.xalan.xsltc.runtime.Hashtable:java.lang.Object get(java.lang.Object)",
            "org.apache.xalan.xsltc.runtime.Hashtable:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.xalan.xsltc.runtime.Hashtable:java.lang.Object remove(java.lang.Object)",
            "org.apache.xml.dtm.ref.DTMStringPool:int stringToIndex(java.lang.String)",
            "org.apache.xpath.objects.XObject:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XString:boolean equals(java.lang.Object)",
            "org.apache.xpath.objects.XStringForFSB:boolean equals(java.lang.Object)"
        ]
    },
    "org.apache.xalan.xsltc.runtime.Hashtable:boolean contains(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.runtime.Hashtable:boolean containsKey(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.runtime.Hashtable:java.lang.Object get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMWSFilter:short getShouldStripSpace(int,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.xsltc.dom.KeyIndex:void add(java.lang.Object,int)",
            "org.apache.xalan.xsltc.dom.KeyIndex:void lookupId(java.lang.Object)",
            "org.apache.xalan.xsltc.dom.KeyIndex:void lookupKey(java.lang.Object)",
            "org.apache.xalan.xsltc.dom.KeyIndex:int containsID(int,java.lang.Object)",
            "org.apache.xalan.xsltc.dom.KeyIndex:int containsKey(int,java.lang.Object)",
            "org.apache.xalan.xsltc.dom.MultiDOM:int getDocumentMask(java.lang.String)",
            "org.apache.xalan.xsltc.dom.MultiDOM:org.apache.xalan.xsltc.DOM getDOMAdapter(java.lang.String)",
            "org.apache.xalan.xsltc.dom.SAXImpl:int getNSType(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl:short[] getNamespaceMapping(java.lang.String[])",
            "org.apache.xalan.xsltc.dom.SAXImpl:short[] getReverseNamespaceMapping(java.lang.String[])",
            "org.apache.xalan.xsltc.dom.SAXImpl:int getElementById(java.lang.String)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void definePrefixAndUri(java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.runtime.AbstractTranslet:java.text.DecimalFormat getDecimalFormat(java.lang.String)",
            "org.apache.xalan.xsltc.runtime.AbstractTranslet:void buildIDIndex(org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.AbstractTranslet:void buildKeyIndex(java.lang.String,int,java.lang.Object)",
            "org.apache.xalan.xsltc.runtime.AbstractTranslet:void buildKeyIndex(java.lang.String,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.AbstractTranslet:org.apache.xalan.xsltc.dom.KeyIndex getKeyIndex(java.lang.String)",
            "org.apache.xalan.xsltc.runtime.AbstractTranslet:java.lang.Class getAuxiliaryClass(java.lang.String)",
            "org.apache.xalan.xsltc.runtime.AttributeList:java.lang.String getValue(java.lang.String)",
            "org.apache.xalan.xsltc.runtime.AttributeList:void add(java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.trax.TransformerImpl:java.lang.Object getParameter(java.lang.String)"
        ]
    },
    "org.apache.xalan.xsltc.runtime.Hashtable:java.lang.Object put(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMWSFilter:short getShouldStripSpace(int,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.xsltc.dom.KeyIndex:void add(java.lang.Object,int)",
            "org.apache.xalan.xsltc.dom.KeyIndex:org.apache.xalan.xsltc.util.IntegerArray getDOMNodeById(java.lang.String)",
            "org.apache.xalan.xsltc.dom.MultiDOM:int addDOMAdapter(org.apache.xalan.xsltc.dom.DOMAdapter,boolean)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void startDocument()",
            "org.apache.xalan.xsltc.dom.SAXImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes,org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void definePrefixAndUri(java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.dom.SAXImpl:org.apache.xalan.xsltc.runtime.Hashtable getElementsWithIDs()",
            "org.apache.xalan.xsltc.runtime.AbstractTranslet:void addDecimalFormat(java.lang.String,java.text.DecimalFormatSymbols)",
            "org.apache.xalan.xsltc.runtime.AbstractTranslet:void buildKeyIndex(java.lang.String,int,java.lang.Object)",
            "org.apache.xalan.xsltc.runtime.AbstractTranslet:void buildKeyIndex(java.lang.String,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.AbstractTranslet:void addAuxiliaryClass(java.lang.Class)",
            "org.apache.xalan.xsltc.runtime.AttributeList:void add(java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.runtime.Hashtable:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.apache.xalan.xsltc.trax.TemplatesImpl:void defineTransletClasses()",
            "org.apache.xalan.xsltc.trax.TransformerImpl:void setParameter(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.xalan.xsltc.runtime.Hashtable:java.lang.Object remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.dtm.ref.DTMStringPool:int stringToIndex(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:int getIdForNamespace(java.lang.String)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void comment(char[],int,int)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMDocumentImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.dtm.ref.DTMDocumentImpl:int getAttributeNode(int,java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMDocumentImpl:int getExpandedTypeID(int)",
            "org.apache.xml.dtm.ref.DTMDocumentImpl:int getExpandedTypeID(java.lang.String,java.lang.String,int)",
            "org.apache.xml.dtm.ref.DTMDocumentImpl:void appendNSDeclaration(int,int,boolean)",
            "org.apache.xml.dtm.ref.DTMSafeStringPool:int stringToIndex(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMStringPool:void <init>(int)",
            "org.apache.xml.dtm.ref.DTMStringPool:void main(java.lang.String[])"
        ]
    },
    "org.apache.xml.dtm.ref.DTMNodeProxy:boolean hasAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.dtm.ref.DTMNodeProxy:boolean hasAttributeNS(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getAttributeNS(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.Attr getAttributeNodeNS(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.Element getElementById(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.SAXImpl:int getElementById(java.lang.String)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:int getElementById(java.lang.String)",
            "org.apache.xml.utils.DOM2Helper:org.w3c.dom.Element getElementByID(java.lang.String,org.w3c.dom.Document)"
        ]
    },
    "org.apache.xpath.functions.FuncId:org.apache.xml.utils.StringVector getNodesByID(org.apache.xpath.XPathContext,int,java.lang.String,org.apache.xml.utils.StringVector,org.apache.xpath.NodeSetDTM,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBase:int getFirstAttribute(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.serialize.SerializerUtils:void addAttributes(org.apache.xml.serializer.SerializationHandler,int)",
            "org.apache.xalan.transformer.TreeWalker2Result:void startNode(int)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:int getAttributeNode(int,java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AttributeTraverser:int next(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AttributeTraverser:int next(int,int,int)",
            "org.apache.xml.dtm.ref.DTMNamedNodeMap:int getLength()",
            "org.apache.xml.dtm.ref.DTMNamedNodeMap:org.w3c.dom.Node getNamedItem(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNamedNodeMap:org.w3c.dom.Node item(int)",
            "org.apache.xml.dtm.ref.DTMNamedNodeMap:org.w3c.dom.Node getNamedItemNS(java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:boolean hasAttributes()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xpath.axes.AttributeIterator:int getNextNode()"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$AttributeIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DOMAdapter:org.apache.xml.dtm.DTMAxisIterator getChildren(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.NthIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xpath.axes.OneStepIterator:void setRoot(int,java.lang.Object)",
            "org.apache.xpath.axes.ReverseAxesWalker:void setRoot(int)",
            "org.apache.xpath.objects.XObjectFactory:org.apache.xpath.objects.XObject create(java.lang.Object,org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedAttributeIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DOMAdapter:org.apache.xml.dtm.DTMAxisIterator getChildren(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.NthIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xpath.axes.OneStepIterator:void setRoot(int,java.lang.Object)",
            "org.apache.xpath.axes.ReverseAxesWalker:void setRoot(int)",
            "org.apache.xpath.objects.XObjectFactory:org.apache.xpath.objects.XObject create(java.lang.Object,org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBase:int getNextAttribute(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.serialize.SerializerUtils:void addAttributes(org.apache.xml.serializer.SerializationHandler,int)",
            "org.apache.xalan.transformer.TreeWalker2Result:void startNode(int)",
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:int getNextAttribute(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceAttributeIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceAttributeIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl:void print(int,int)",
            "org.apache.xalan.xsltc.dom.SAXImpl:int getAttributeNode(int,int)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:int getAttributeNode(int,java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AttributeTraverser:int next(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AttributeTraverser:int next(int,int,int)",
            "org.apache.xml.dtm.ref.DTMNamedNodeMap:int getLength()",
            "org.apache.xml.dtm.ref.DTMNamedNodeMap:org.w3c.dom.Node getNamedItem(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNamedNodeMap:org.w3c.dom.Node item(int)",
            "org.apache.xml.dtm.ref.DTMNamedNodeMap:org.w3c.dom.Node getNamedItemNS(java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xpath.axes.AttributeIterator:int getNextNode()"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$AttributeIterator:int next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:int next()",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:int getNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:int next()",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:int next()",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator documentF(java.lang.Object,org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator document(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl:org.w3c.dom.Node makeNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SimpleResultTreeImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator:int step()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double sumF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double numberF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean booleanF(java.lang.Object)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String namespace_uriF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(int,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,double,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(java.lang.Object,java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String referenceToString(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator getSingleNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:org.w3c.dom.Node item(int)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:int getLength()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getLast()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getNodeByPosition(int)",
            "org.apache.xpath.axes.OneStepIterator:int getNextNode()",
            "org.apache.xpath.axes.ReverseAxesWalker:int getNextNode()"
        ]
    },
    "org.apache.xalan.lib.sql.DTMDocument:int getFirstNamespaceNode(int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.serialize.SerializerUtils:void processNSDecls(org.apache.xml.serializer.SerializationHandler,int,int,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.transformer.TreeWalker2Result:void startNode(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$NamespaceAttributeIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$NamespaceIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$NamespaceDeclsTraverser:int next(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$NamespaceDeclsTraverser:int next(int,int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$NamespaceTraverser:int next(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$NamespaceTraverser:int next(int,int,int)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)"
        ]
    },
    "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:int getFirstNamespaceNode(int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.serialize.SerializerUtils:void processNSDecls(org.apache.xml.serializer.SerializationHandler,int,int,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.transformer.TreeWalker2Result:void startNode(int)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$NamespaceAttributeIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DOMAdapter:org.apache.xml.dtm.DTMAxisIterator getChildren(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.NthIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xpath.axes.OneStepIterator:void setRoot(int,java.lang.Object)",
            "org.apache.xpath.axes.ReverseAxesWalker:void setRoot(int)",
            "org.apache.xpath.objects.XObjectFactory:org.apache.xpath.objects.XObject create(java.lang.Object,org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$NamespaceIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DOMAdapter:org.apache.xml.dtm.DTMAxisIterator getChildren(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.NthIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl:java.lang.String lookupNamespace(int,java.lang.String)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xpath.axes.OneStepIterator:void setRoot(int,java.lang.Object)",
            "org.apache.xpath.axes.ReverseAxesWalker:void setRoot(int)",
            "org.apache.xpath.objects.XObjectFactory:org.apache.xpath.objects.XObject create(java.lang.Object,org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$NamespaceDeclsTraverser:int next(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$FollowingIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedFollowingIterator:int next()",
            "org.apache.xml.dtm.DTMAxisTraverser:int first(int)",
            "org.apache.xpath.axes.AxesWalker:int getNextNode()",
            "org.apache.xpath.axes.ChildTestIterator:int getNextNode()",
            "org.apache.xpath.axes.DescendantIterator:int nextNode()",
            "org.apache.xpath.axes.MatchPatternIterator:int getNextNode()",
            "org.apache.xpath.axes.OneStepIteratorForward:int getNextNode()",
            "org.apache.xpath.patterns.ContextMatchStepPattern:org.apache.xpath.objects.XObject executeRelativePathPattern(org.apache.xpath.XPathContext,org.apache.xpath.patterns.StepPattern)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:org.apache.xpath.objects.XObject executeRelativePathPattern(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$NamespaceDeclsTraverser:int next(int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.DTMAxisTraverser:int first(int,int)",
            "org.apache.xpath.axes.DescendantIterator:int nextNode()"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$NamespaceTraverser:int next(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$FollowingIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedFollowingIterator:int next()",
            "org.apache.xml.dtm.DTMAxisTraverser:int first(int)",
            "org.apache.xpath.axes.AxesWalker:int getNextNode()",
            "org.apache.xpath.axes.ChildTestIterator:int getNextNode()",
            "org.apache.xpath.axes.DescendantIterator:int nextNode()",
            "org.apache.xpath.axes.MatchPatternIterator:int getNextNode()",
            "org.apache.xpath.axes.OneStepIteratorForward:int getNextNode()",
            "org.apache.xpath.patterns.ContextMatchStepPattern:org.apache.xpath.objects.XObject executeRelativePathPattern(org.apache.xpath.XPathContext,org.apache.xpath.patterns.StepPattern)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:org.apache.xpath.objects.XObject executeRelativePathPattern(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$NamespaceTraverser:int next(int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.DTMAxisTraverser:int first(int,int)",
            "org.apache.xpath.axes.DescendantIterator:int nextNode()"
        ]
    },
    "org.apache.xalan.lib.sql.DTMDocument:int getNextNamespaceNode(int,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.serialize.SerializerUtils:void processNSDecls(org.apache.xml.serializer.SerializationHandler,int,int,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.transformer.TreeWalker2Result:void startNode(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$NamespaceAttributeIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$NamespaceIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedNamespaceIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$NamespaceDeclsTraverser:int next(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$NamespaceDeclsTraverser:int next(int,int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$NamespaceTraverser:int next(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$NamespaceTraverser:int next(int,int,int)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)"
        ]
    },
    "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:int getNextNamespaceNode(int,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.serialize.SerializerUtils:void processNSDecls(org.apache.xml.serializer.SerializationHandler,int,int,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.transformer.TreeWalker2Result:void startNode(int)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$NamespaceAttributeIterator:int next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:int next()",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:int getNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:int next()",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:int next()",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator documentF(java.lang.Object,org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator document(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl:org.w3c.dom.Node makeNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SimpleResultTreeImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator:int step()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double sumF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double numberF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean booleanF(java.lang.Object)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String namespace_uriF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(int,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,double,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(java.lang.Object,java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String referenceToString(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator getSingleNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:org.w3c.dom.Node item(int)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:int getLength()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getLast()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getNodeByPosition(int)",
            "org.apache.xpath.axes.OneStepIterator:int getNextNode()",
            "org.apache.xpath.axes.ReverseAxesWalker:int getNextNode()"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$NamespaceIterator:int next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:int next()",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:int getNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:int next()",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:int next()",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator documentF(java.lang.Object,org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator document(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl$TypedNamespaceIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl:java.lang.String lookupNamespace(int,java.lang.String)",
            "org.apache.xalan.xsltc.dom.SAXImpl:org.w3c.dom.Node makeNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SimpleResultTreeImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator:int step()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double sumF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double numberF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean booleanF(java.lang.Object)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String namespace_uriF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(int,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,double,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(java.lang.Object,java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String referenceToString(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator getSingleNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:org.w3c.dom.Node item(int)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:int getLength()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getLast()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getNodeByPosition(int)",
            "org.apache.xpath.axes.OneStepIterator:int getNextNode()",
            "org.apache.xpath.axes.ReverseAxesWalker:int getNextNode()"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedNamespaceIterator:int next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:int next()",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:int getNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:int next()",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:int next()",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator documentF(java.lang.Object,org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator document(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl:java.lang.String lookupNamespace(int,java.lang.String)",
            "org.apache.xalan.xsltc.dom.SAXImpl:org.w3c.dom.Node makeNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SimpleResultTreeImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator:int step()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double sumF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double numberF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean booleanF(java.lang.Object)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String namespace_uriF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(int,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,double,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(java.lang.Object,java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String referenceToString(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator getSingleNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:org.w3c.dom.Node item(int)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:int getLength()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getLast()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getNodeByPosition(int)",
            "org.apache.xpath.axes.OneStepIterator:int getNextNode()",
            "org.apache.xpath.axes.ReverseAxesWalker:int getNextNode()"
        ]
    },
    "org.apache.xalan.lib.sql.SQLDocument:int _nextsib(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.DTMDocument:void getNodeData(int,org.apache.xml.utils.FastStringBuffer)",
            "org.apache.xalan.lib.sql.DTMDocument:void dumpDTM()",
            "org.apache.xalan.lib.sql.SQLDocument:boolean addRowToDTMFromResultSet()",
            "org.apache.xml.dtm.ref.DTMDefaultBase:void dumpDTM(java.io.OutputStream)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getTypedFirstChild(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getLastChild(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getNextSibling(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getTypedNextSibling(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getPreviousSibling(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$ChildrenIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$FollowingSiblingIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$NamespaceChildrenIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$NthDescendantIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingSiblingIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedChildrenIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedFollowingSiblingIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedPrecedingSiblingIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$ChildTraverser:int next(int,int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser:int first(int)"
        ]
    },
    "org.apache.xalan.templates.TemplateList:org.apache.xalan.templates.TemplateSubPatternAssociation getHead(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.TemplateList:org.apache.xalan.templates.ElemTemplate getTemplate(org.apache.xpath.XPathContext,int,org.apache.xml.utils.QName,boolean,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.templates.TemplateList:org.apache.xalan.templates.ElemTemplate getTemplate(org.apache.xpath.XPathContext,int,org.apache.xml.utils.QName,int,int,boolean,org.apache.xml.dtm.DTM)"
        ]
    },
    "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:int getAttributeNode(int,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:int getAttributeNode(int,java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.dom.SAXImpl:java.lang.String getLanguage(int)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:boolean hasAttribute(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:boolean hasAttributeNS(java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getAttributeNS(java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.Attr getAttributeNodeNS(java.lang.String,java.lang.String)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMNamedNodeMap:org.w3c.dom.Node getNamedItemNS(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.utils.AttList:java.lang.String getValue(java.lang.String,java.lang.String)",
            "org.apache.xml.utils.AttList:java.lang.String getValue(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getLocalName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.trax.DOM2SAX:java.lang.String getLocalName(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:int addNode(org.w3c.dom.Node,int,int,int)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:int getAttributeNode(int,java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:java.lang.String getLocalName(int)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode:boolean isEqualNode(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode:java.lang.String lookupNamespaceURI(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMManagerDefault:int getDTMHandleFromNode(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:void traverseChildren(java.util.Vector,org.w3c.dom.Node,java.lang.String,java.lang.String,boolean,boolean)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:boolean isEqualNode(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String lookupNamespaceURI(java.lang.String)",
            "org.apache.xml.serializer.utils.AttList:int getIndex(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.utils.DOM2Helper:java.lang.String getLocalNameOfNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.AttList:int getIndex(java.lang.String,java.lang.String)",
            "org.apache.xml.utils.DOM2Helper:java.lang.String getLocalNameOfNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.UnImplNode:boolean isEqualNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.UnImplNode:java.lang.String lookupNamespaceURI(java.lang.String)"
        ]
    },
    "org.apache.xpath.patterns.NodeTest:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.PredicatedNodeTest:short acceptNode(int)",
            "org.apache.xpath.axes.UnionChildIterator:short acceptNode(int)",
            "org.apache.xpath.patterns.NodeTest:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)"
        ]
    },
    "org.apache.xpath.patterns.NodeTest:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.patterns.StepPattern:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)"
        ]
    },
    "org.apache.xalan.templates.ElemNumber$MyPrefixResolver:java.lang.String getNamespaceForPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemNumber$MyPrefixResolver:java.lang.String getNamespaceForPrefix(java.lang.String,org.w3c.dom.Node)",
            "org.apache.xml.utils.QName:void <init>(java.lang.String,org.apache.xml.utils.PrefixResolver,boolean)",
            "org.apache.xpath.compiler.Lexer:int mapNSTokens(java.lang.String,int,int,int)",
            "org.apache.xpath.functions.FuncExtElementAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunctionAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSystemProperty:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xalan.templates.ElemNumber:org.apache.xpath.XPath getCountMatchPattern(org.apache.xpath.XPathContext,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemNumber:int getPreviousNode(org.apache.xpath.XPathContext,int)",
            "org.apache.xalan.templates.ElemNumber:int getTargetNode(org.apache.xpath.XPathContext,int)",
            "org.apache.xalan.templates.ElemNumber:org.apache.xml.utils.NodeVector getMatchingAncestors(org.apache.xpath.XPathContext,int,boolean)"
        ]
    },
    "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:java.lang.String getNamespaceURI(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.serialize.SerializerUtils:void addAttribute(org.apache.xml.serializer.SerializationHandler,int)",
            "org.apache.xalan.serialize.SerializerUtils:void outputResultTreeFragment(org.apache.xml.serializer.SerializationHandler,org.apache.xpath.objects.XObject,org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.ElemCopy:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemNumber$MyPrefixResolver:java.lang.String getNamespaceForPrefix(java.lang.String)",
            "org.apache.xalan.templates.ElemNumber:org.apache.xpath.XPath getCountMatchPattern(org.apache.xpath.XPathContext,int)",
            "org.apache.xalan.transformer.ClonerToResultTree:void cloneToResultTree(int,int,org.apache.xml.dtm.DTM,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.transformer.TreeWalker2Result:void startNode(int)",
            "org.apache.xml.dtm.ref.DTMNamedNodeMap:org.w3c.dom.Node getNamedItemNS(java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getNamespaceURI()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)",
            "org.apache.xpath.functions.FuncNamespace:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.NodeTest:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.patterns.NodeTest:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)"
        ]
    },
    "org.apache.xalan.xsltc.dom.SAXImpl:int getNSType(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:int getNSType(int)",
            "org.apache.xalan.xsltc.dom.DOMAdapter:int getNamespaceType(int)",
            "org.apache.xalan.xsltc.dom.DOMAdapter:int getNSType(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM:int getNSType(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceAttributeIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceAttributeIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceChildrenIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:int next()"
        ]
    },
    "org.apache.xalan.xsltc.dom.SAXImpl:java.lang.String getNamespaceName(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:java.lang.String getNamespaceName(int)",
            "org.apache.xalan.xsltc.dom.DOMAdapter:java.lang.String getNamespaceName(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM:java.lang.String getNamespaceName(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(int,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.xsltc.dom.SAXImpl:java.lang.String shallowCopy(int,org.apache.xml.serializer.SerializationHandler)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getNamespaceURI()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.runtime.BasisLibrary:void copyNodes(org.w3c.dom.NodeList,org.w3c.dom.Document,org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:int addNode(org.w3c.dom.Node,int,int,int)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:int getAttributeNode(int,java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:java.lang.String getNamespaceURI(int)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode:boolean isEqualNode(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode:java.lang.String lookupNamespaceURI(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMManagerDefault:int getDTMHandleFromNode(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:void traverseChildren(java.util.Vector,org.w3c.dom.Node,java.lang.String,java.lang.String,boolean,boolean)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:boolean isEqualNode(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String lookupNamespaceURI(java.lang.String)",
            "org.apache.xml.serializer.utils.AttList:int getIndex(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.utils.DOM2Helper:java.lang.String getNamespaceOfNode(org.w3c.dom.Node)",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.serializer.TreeWalker:void endNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.AttList:int getIndex(java.lang.String,java.lang.String)",
            "org.apache.xml.utils.DOM2Helper:java.lang.String getNamespaceOfNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.PrefixResolverDefault:java.lang.String getNamespaceForPrefix(java.lang.String,org.w3c.dom.Node)",
            "org.apache.xml.utils.UnImplNode:boolean isEqualNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.UnImplNode:java.lang.String lookupNamespaceURI(java.lang.String)"
        ]
    },
    "org.apache.xalan.lib.sql.DTMDocument:short _type(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.DTMDefaultBase:void dumpDTM(java.io.OutputStream)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getFirstAttributeIdentity(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getTypedAttribute(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getNextAttribute(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getNextAttributeIdentity(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getFirstNamespaceNode(int,boolean)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getNextNamespaceNode(int,int,boolean)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$DescendantIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$NthDescendantIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedDescendantIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AllFromRootTraverser:int next(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser:int next(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser:int first(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser:int next(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingAndAncestorTraverser:int next(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingTraverser:int next(int,int)"
        ]
    },
    "org.apache.xalan.xsltc.dom.SAXImpl:void handleTextEscaping()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.SAXImpl:void endDocument()",
            "org.apache.xalan.xsltc.dom.SAXImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void comment(char[],int,int)"
        ]
    },
    "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:java.lang.String getNodeValue(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.serialize.SerializerUtils:void addAttribute(org.apache.xml.serializer.SerializationHandler,int)",
            "org.apache.xalan.serialize.SerializerUtils:void processNSDecls(org.apache.xml.serializer.SerializationHandler,int,int,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.serialize.SerializerUtils:void ensureNamespaceDeclDeclared(org.apache.xml.serializer.SerializationHandler,org.apache.xml.dtm.DTM,int)",
            "org.apache.xalan.transformer.ClonerToResultTree:void cloneToResultTree(int,int,org.apache.xml.dtm.DTM,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:void dumpDTM(java.io.OutputStream)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:java.lang.String dumpNode(int)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getNodeValue()",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getData()",
            "org.apache.xml.dtm.ref.DTMNodeProxy:int getLength()",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getValue()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:java.lang.String getPrefix(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:java.lang.String getPrefix(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(int,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.xsltc.dom.SAXImpl:java.lang.String shallowCopy(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:void dumpDTM(java.io.OutputStream)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getPrefix()"
        ]
    },
    "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:boolean isWhitespace(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$DescendantIterator:int next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:int next()",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:int getNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:int next()",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:int next()",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator documentF(java.lang.Object,org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator document(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl:org.w3c.dom.Node makeNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SimpleResultTreeImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator:int step()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double sumF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double numberF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean booleanF(java.lang.Object)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String namespace_uriF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(int,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,double,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(java.lang.Object,java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String referenceToString(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator getSingleNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:org.w3c.dom.Node item(int)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:int getLength()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getLast()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getNodeByPosition(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$NthDescendantIterator:int next()",
            "org.apache.xpath.axes.OneStepIterator:int getNextNode()",
            "org.apache.xpath.axes.ReverseAxesWalker:int getNextNode()"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$PrecedingIterator:int next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:int next()",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:int getNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:int next()",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:int next()",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator documentF(java.lang.Object,org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator document(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl:org.w3c.dom.Node makeNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SimpleResultTreeImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator:int step()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double sumF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double numberF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean booleanF(java.lang.Object)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String namespace_uriF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(int,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,double,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(java.lang.Object,java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String referenceToString(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator getSingleNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:org.w3c.dom.Node item(int)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:int getLength()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getLast()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getNodeByPosition(int)",
            "org.apache.xpath.axes.OneStepIterator:int getNextNode()",
            "org.apache.xpath.axes.ReverseAxesWalker:int getNextNode()"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AllFromRootTraverser:int next(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$FollowingIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedFollowingIterator:int next()",
            "org.apache.xml.dtm.DTMAxisTraverser:int first(int)",
            "org.apache.xpath.axes.AxesWalker:int getNextNode()",
            "org.apache.xpath.axes.ChildTestIterator:int getNextNode()",
            "org.apache.xpath.axes.DescendantIterator:int nextNode()",
            "org.apache.xpath.axes.MatchPatternIterator:int getNextNode()",
            "org.apache.xpath.axes.OneStepIteratorForward:int getNextNode()",
            "org.apache.xpath.patterns.ContextMatchStepPattern:org.apache.xpath.objects.XObject executeRelativePathPattern(org.apache.xpath.XPathContext,org.apache.xpath.patterns.StepPattern)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:org.apache.xpath.objects.XObject executeRelativePathPattern(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantTraverser:int next(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$FollowingIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedFollowingIterator:int next()",
            "org.apache.xml.dtm.DTMAxisTraverser:int first(int)",
            "org.apache.xpath.axes.AxesWalker:int getNextNode()",
            "org.apache.xpath.axes.ChildTestIterator:int getNextNode()",
            "org.apache.xpath.axes.DescendantIterator:int nextNode()",
            "org.apache.xpath.axes.MatchPatternIterator:int getNextNode()",
            "org.apache.xpath.axes.OneStepIteratorForward:int getNextNode()",
            "org.apache.xpath.patterns.ContextMatchStepPattern:org.apache.xpath.objects.XObject executeRelativePathPattern(org.apache.xpath.XPathContext,org.apache.xpath.patterns.StepPattern)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:org.apache.xpath.objects.XObject executeRelativePathPattern(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser:int next(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$FollowingIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedFollowingIterator:int next()",
            "org.apache.xml.dtm.DTMAxisTraverser:int first(int)",
            "org.apache.xpath.axes.AxesWalker:int getNextNode()",
            "org.apache.xpath.axes.ChildTestIterator:int getNextNode()",
            "org.apache.xpath.axes.DescendantIterator:int nextNode()",
            "org.apache.xpath.axes.MatchPatternIterator:int getNextNode()",
            "org.apache.xpath.axes.OneStepIteratorForward:int getNextNode()",
            "org.apache.xpath.patterns.ContextMatchStepPattern:org.apache.xpath.objects.XObject executeRelativePathPattern(org.apache.xpath.XPathContext,org.apache.xpath.patterns.StepPattern)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:org.apache.xpath.objects.XObject executeRelativePathPattern(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingAndAncestorTraverser:int next(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$FollowingIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedFollowingIterator:int next()",
            "org.apache.xml.dtm.DTMAxisTraverser:int first(int)",
            "org.apache.xpath.axes.AxesWalker:int getNextNode()",
            "org.apache.xpath.axes.ChildTestIterator:int getNextNode()",
            "org.apache.xpath.axes.DescendantIterator:int nextNode()",
            "org.apache.xpath.axes.MatchPatternIterator:int getNextNode()",
            "org.apache.xpath.axes.OneStepIteratorForward:int getNextNode()",
            "org.apache.xpath.patterns.ContextMatchStepPattern:org.apache.xpath.objects.XObject executeRelativePathPattern(org.apache.xpath.XPathContext,org.apache.xpath.patterns.StepPattern)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:org.apache.xpath.objects.XObject executeRelativePathPattern(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingTraverser:int next(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$FollowingIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedFollowingIterator:int next()",
            "org.apache.xml.dtm.DTMAxisTraverser:int first(int)",
            "org.apache.xpath.axes.AxesWalker:int getNextNode()",
            "org.apache.xpath.axes.ChildTestIterator:int getNextNode()",
            "org.apache.xpath.axes.DescendantIterator:int nextNode()",
            "org.apache.xpath.axes.MatchPatternIterator:int getNextNode()",
            "org.apache.xpath.axes.OneStepIteratorForward:int getNextNode()",
            "org.apache.xpath.patterns.ContextMatchStepPattern:org.apache.xpath.objects.XObject executeRelativePathPattern(org.apache.xpath.XPathContext,org.apache.xpath.patterns.StepPattern)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:org.apache.xpath.objects.XObject executeRelativePathPattern(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)"
        ]
    },
    "org.apache.xalan.lib.sql.DTMDocument:void declareNamespaceInContext(int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:int addNode(org.w3c.dom.Node,int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:void <init>(org.apache.xml.dtm.DTMManager,javax.xml.transform.dom.DOMSource,int,org.apache.xml.dtm.DTMWSFilter,org.apache.xml.utils.XMLStringFactory,boolean)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:boolean nextNode()"
        ]
    },
    "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:int addNode(int,int,int,int,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void charactersFlush()",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void startDocument()",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void comment(char[],int,int)"
        ]
    },
    "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:int addNode(int,int,int,int,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void charactersFlush()",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void startDocument()",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void comment(char[],int,int)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void comment(char[],int,int)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void startDocument()",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void charactersFlush()",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void processingInstruction(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xalan.lib.sql.DTMDocument:int getExpandedTypeID(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.DTMDocument:void dumpDTM()",
            "org.apache.xalan.lib.sql.DTMDocument:java.lang.String getLocalName(int)",
            "org.apache.xalan.lib.sql.DTMDocument:java.lang.String getNodeName(int)",
            "org.apache.xalan.lib.sql.DTMDocument:short getNodeType(int)",
            "org.apache.xalan.templates.ElemApplyTemplates:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:java.lang.String dumpNode(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:void declareNamespaceInContext(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$ParentIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedFollowingIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedNamespaceIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedRootIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedSingletonIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AllFromRootTraverser:int first(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AncestorOrSelfTraverser:int first(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AttributeTraverser:int next(int,int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingSiblingTraverser:int next(int,int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser:int first(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$NamespaceDeclsTraverser:int next(int,int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$NamespaceTraverser:int next(int,int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingSiblingTraverser:int next(int,int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$RootTraverser:int first(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$SelfTraverser:int first(int,int)",
            "org.apache.xpath.patterns.StepPattern:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)"
        ]
    },
    "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:int getExpandedTypeID(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemApplyTemplates:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.xsltc.dom.AnyNodeCounter$DefaultAnyNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.AnyNodeCounter:org.apache.xalan.xsltc.dom.NodeCounter setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DOMAdapter:int getExpandedTypeID(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM:int getExpandedTypeID(int)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:org.apache.xalan.xsltc.dom.NodeCounter setStartNode(int)",
            "org.apache.xalan.xsltc.dom.NodeCounter:boolean matchesCount(int)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:org.apache.xalan.xsltc.dom.NodeCounter setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:org.apache.xalan.xsltc.dom.NodeCounter setStartNode(int)",
            "org.apache.xpath.patterns.StepPattern:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)"
        ]
    },
    "org.apache.xalan.xsltc.dom.AnyNodeCounter$DefaultAnyNodeCounter:java.lang.String getCounter()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.NodeCounter:java.lang.String getCounter(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xalan.xsltc.dom.AnyNodeCounter:org.apache.xalan.xsltc.dom.NodeCounter setStartNode(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.dom.DOMAdapter:int getExpandedTypeID(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AnyNodeCounter$DefaultAnyNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.AnyNodeCounter:org.apache.xalan.xsltc.dom.NodeCounter setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DOMAdapter:int getExpandedTypeID(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM:int getExpandedTypeID(int)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:org.apache.xalan.xsltc.dom.NodeCounter setStartNode(int)",
            "org.apache.xalan.xsltc.dom.NodeCounter:boolean matchesCount(int)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:org.apache.xalan.xsltc.dom.NodeCounter setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:org.apache.xalan.xsltc.dom.NodeCounter setStartNode(int)"
        ]
    },
    "org.apache.xalan.xsltc.dom.DOMWSFilter:short getShouldStripSpace(int,org.apache.xml.dtm.DTM)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:boolean nextNode()",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xalan.xsltc.dom.MultiDOM:int getExpandedTypeID(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AnyNodeCounter$DefaultAnyNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.AnyNodeCounter:org.apache.xalan.xsltc.dom.NodeCounter setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DOMAdapter:int getExpandedTypeID(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM:int getExpandedTypeID(int)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:org.apache.xalan.xsltc.dom.NodeCounter setStartNode(int)",
            "org.apache.xalan.xsltc.dom.NodeCounter:boolean matchesCount(int)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:org.apache.xalan.xsltc.dom.NodeCounter setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:org.apache.xalan.xsltc.dom.NodeCounter setStartNode(int)"
        ]
    },
    "org.apache.xalan.xsltc.dom.MultipleNodeCounter:org.apache.xalan.xsltc.dom.NodeCounter setStartNode(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.dom.NodeCounter:boolean matchesCount(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AnyNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()"
        ]
    },
    "org.apache.xalan.xsltc.dom.SAXImpl:int getAttributeNode(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:int getAttributeNode(int,int)",
            "org.apache.xalan.xsltc.dom.DOMAdapter:int getAttributeNode(int,int)",
            "org.apache.xalan.xsltc.dom.MultiDOM:int getAttributeNode(int,int)",
            "org.apache.xalan.xsltc.dom.SAXImpl:java.lang.String getAttributeValue(int,int)"
        ]
    },
    "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:org.apache.xalan.xsltc.dom.NodeCounter setStartNode(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.dom.SingleNodeCounter:org.apache.xalan.xsltc.dom.NodeCounter setStartNode(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:java.lang.String getNodeName(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.XSLProcessorContext:void outputToResultTree(org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.serialize.SerializerUtils:void addAttribute(org.apache.xml.serializer.SerializationHandler,int)",
            "org.apache.xalan.templates.ElemCopy:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemNumber:org.apache.xpath.XPath getCountMatchPattern(org.apache.xpath.XPathContext,int)",
            "org.apache.xalan.templates.TemplateList:org.apache.xalan.templates.TemplateSubPatternAssociation getHead(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.templates.TemplateList:org.apache.xalan.templates.ElemTemplate getTemplateFast(org.apache.xpath.XPathContext,int,int,org.apache.xml.utils.QName,int,boolean,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.trace.PrintTraceListener:void selected(org.apache.xalan.trace.SelectionEvent)",
            "org.apache.xalan.transformer.ClonerToResultTree:void cloneToResultTree(int,int,org.apache.xml.dtm.DTM,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.transformer.TreeWalker2Result:void startNode(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:void dumpDTM(java.io.OutputStream)",
            "org.apache.xml.dtm.ref.DTMNamedNodeMap:org.w3c.dom.Node getNamedItem(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getNodeName()",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getTarget()",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getTagName()",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getName()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)",
            "org.apache.xpath.axes.PredicatedNodeTest:java.lang.String nodeToString(int)",
            "org.apache.xpath.functions.FuncNamespace:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.NodeTest:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.patterns.NodeTest:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)"
        ]
    },
    "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:java.lang.String getNodeNameX(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.serialize.SerializerUtils:void processNSDecls(org.apache.xml.serializer.SerializationHandler,int,int,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.serialize.SerializerUtils:boolean isDefinedNSDecl(org.apache.xml.serializer.SerializationHandler,int,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.serialize.SerializerUtils:void ensureNamespaceDeclDeclared(org.apache.xml.serializer.SerializationHandler,org.apache.xml.dtm.DTM,int)",
            "org.apache.xalan.transformer.ClonerToResultTree:void cloneToResultTree(int,int,org.apache.xml.dtm.DTM,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:void dumpDTM(java.io.OutputStream)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:java.lang.String dumpNode(int)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)",
            "org.apache.xpath.functions.FuncQname:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$ParentIterator:int next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:int next()",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:int getNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:int next()",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:int next()",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator documentF(java.lang.Object,org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator document(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl:org.w3c.dom.Node makeNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SimpleResultTreeImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator:int step()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double sumF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double numberF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean booleanF(java.lang.Object)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String namespace_uriF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(int,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,double,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(java.lang.Object,java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String referenceToString(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator getSingleNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:org.w3c.dom.Node item(int)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:int getLength()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getLast()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getNodeByPosition(int)",
            "org.apache.xpath.axes.OneStepIterator:int getNextNode()",
            "org.apache.xpath.axes.ReverseAxesWalker:int getNextNode()"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedFollowingIterator:int next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:int next()",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:int getNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:int next()",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:int next()",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator documentF(java.lang.Object,org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator document(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl:org.w3c.dom.Node makeNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SimpleResultTreeImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator:int step()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double sumF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double numberF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean booleanF(java.lang.Object)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String namespace_uriF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(int,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,double,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(java.lang.Object,java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String referenceToString(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator getSingleNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:org.w3c.dom.Node item(int)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:int getLength()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getLast()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getNodeByPosition(int)",
            "org.apache.xpath.axes.OneStepIterator:int getNextNode()",
            "org.apache.xpath.axes.ReverseAxesWalker:int getNextNode()"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedRootIterator:int next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:int next()",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:int getNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:int next()",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:int next()",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator documentF(java.lang.Object,org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator document(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl:org.w3c.dom.Node makeNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SimpleResultTreeImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator:int step()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double sumF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double numberF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean booleanF(java.lang.Object)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String namespace_uriF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(int,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,double,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(java.lang.Object,java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String referenceToString(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator getSingleNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:org.w3c.dom.Node item(int)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:int getLength()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getLast()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getNodeByPosition(int)",
            "org.apache.xpath.axes.OneStepIterator:int getNextNode()",
            "org.apache.xpath.axes.ReverseAxesWalker:int getNextNode()"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedSingletonIterator:int next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:int next()",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:int getNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:int next()",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:int next()",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator documentF(java.lang.Object,org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator document(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl:org.w3c.dom.Node makeNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SimpleResultTreeImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator:int step()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double sumF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double numberF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean booleanF(java.lang.Object)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String namespace_uriF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(int,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,double,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(java.lang.Object,java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String referenceToString(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator getSingleNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:org.w3c.dom.Node item(int)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:int getLength()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getLast()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getNodeByPosition(int)",
            "org.apache.xpath.axes.OneStepIterator:int getNextNode()",
            "org.apache.xpath.axes.ReverseAxesWalker:int getNextNode()"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AllFromRootTraverser:int first(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.DescendantIterator:int nextNode()",
            "org.apache.xpath.axes.DescendantIterator:int asNode(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AncestorOrSelfTraverser:int first(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.DescendantIterator:int nextNode()",
            "org.apache.xpath.axes.DescendantIterator:int asNode(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AttributeTraverser:int next(int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.DTMAxisTraverser:int first(int,int)",
            "org.apache.xpath.axes.DescendantIterator:int nextNode()"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingSiblingTraverser:int next(int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.DTMAxisTraverser:int first(int,int)",
            "org.apache.xpath.axes.DescendantIterator:int nextNode()"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser:int first(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.DescendantIterator:int nextNode()",
            "org.apache.xpath.axes.DescendantIterator:int asNode(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingSiblingTraverser:int next(int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.DTMAxisTraverser:int first(int,int)",
            "org.apache.xpath.axes.DescendantIterator:int nextNode()"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$RootTraverser:int first(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.DescendantIterator:int nextNode()",
            "org.apache.xpath.axes.DescendantIterator:int asNode(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$SelfTraverser:int first(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.DescendantIterator:int nextNode()",
            "org.apache.xpath.axes.DescendantIterator:int asNode(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xalan.lib.sql.DTMDocument:int getNamespaceType(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedNamespaceIterator:int next()"
        ]
    },
    "org.apache.xalan.xsltc.dom.SAXImpl:int getNamespaceType(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:int getNamespaceType(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM:int getNamespaceType(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedNamespaceIterator:int next()"
        ]
    },
    "org.apache.xalan.lib.sql.DTMDocument:short getNodeType(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.XSLProcessorContext:void outputToResultTree(org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.lib.sql.DTMDocument:void dumpDTM()",
            "org.apache.xalan.lib.sql.DTMDocument:void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)",
            "org.apache.xalan.lib.sql.DTMDocument:short getNodeType(int)",
            "org.apache.xalan.serialize.SerializerUtils:void outputResultTreeFragment(org.apache.xml.serializer.SerializationHandler,org.apache.xpath.objects.XObject,org.apache.xpath.XPathContext)",
            "org.apache.xalan.serialize.SerializerUtils:boolean isDefinedNSDecl(org.apache.xml.serializer.SerializationHandler,int,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.templates.ElemApplyTemplates:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemCopy:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemCopyOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemNumber:org.apache.xpath.XPath getCountMatchPattern(org.apache.xpath.XPathContext,int)",
            "org.apache.xalan.templates.ElemNumber:int getPreviousNode(org.apache.xpath.XPathContext,int)",
            "org.apache.xalan.templates.StylesheetRoot:boolean shouldStripWhiteSpace(org.apache.xpath.XPathContext,int)",
            "org.apache.xalan.templates.TemplateList:org.apache.xalan.templates.TemplateSubPatternAssociation getHead(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.templates.TemplateList:org.apache.xalan.templates.ElemTemplate getTemplateFast(org.apache.xpath.XPathContext,int,int,org.apache.xml.utils.QName,int,boolean,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.transformer.TransformerImpl:boolean applyTemplateToNode(org.apache.xalan.templates.ElemTemplateElement,org.apache.xalan.templates.ElemTemplate,int)",
            "org.apache.xalan.transformer.TreeWalker2Result:void endNode(int)",
            "org.apache.xalan.transformer.TreeWalker2Result:void startNode(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:java.lang.String dumpNode(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getTypedAttribute(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:org.apache.xml.utils.SuballocatedIntVector findNamespaceContext(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getOwnerDocument(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$ParentIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedFollowingIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedNamespaceIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedSingletonIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser:int first(int,int)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:short getNodeType()",
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.Node getNextSibling()",
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.Element getDocumentElement()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)",
            "org.apache.xpath.functions.FuncDoclocation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncNamespace:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.ContextMatchStepPattern:org.apache.xpath.objects.XObject executeRelativePathPattern(org.apache.xpath.XPathContext,org.apache.xpath.patterns.StepPattern)",
            "org.apache.xpath.patterns.NodeTest:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.patterns.NodeTest:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)"
        ]
    },
    "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:short getNodeType(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.XSLProcessorContext:void outputToResultTree(org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.serialize.SerializerUtils:void outputResultTreeFragment(org.apache.xml.serializer.SerializationHandler,org.apache.xpath.objects.XObject,org.apache.xpath.XPathContext)",
            "org.apache.xalan.serialize.SerializerUtils:boolean isDefinedNSDecl(org.apache.xml.serializer.SerializationHandler,int,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.templates.ElemApplyTemplates:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemCopy:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemCopyOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemNumber:org.apache.xpath.XPath getCountMatchPattern(org.apache.xpath.XPathContext,int)",
            "org.apache.xalan.templates.ElemNumber:int getPreviousNode(org.apache.xpath.XPathContext,int)",
            "org.apache.xalan.templates.StylesheetRoot:boolean shouldStripWhiteSpace(org.apache.xpath.XPathContext,int)",
            "org.apache.xalan.templates.TemplateList:org.apache.xalan.templates.TemplateSubPatternAssociation getHead(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.templates.TemplateList:org.apache.xalan.templates.ElemTemplate getTemplateFast(org.apache.xpath.XPathContext,int,int,org.apache.xml.utils.QName,int,boolean,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.transformer.TransformerImpl:boolean applyTemplateToNode(org.apache.xalan.templates.ElemTemplateElement,org.apache.xalan.templates.ElemTemplate,int)",
            "org.apache.xalan.transformer.TreeWalker2Result:void endNode(int)",
            "org.apache.xalan.transformer.TreeWalker2Result:void startNode(int)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:short getNodeType()",
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.Node getNextSibling()",
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.Element getDocumentElement()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)",
            "org.apache.xpath.functions.FuncDoclocation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncNamespace:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.ContextMatchStepPattern:org.apache.xpath.objects.XObject executeRelativePathPattern(org.apache.xpath.XPathContext,org.apache.xpath.patterns.StepPattern)",
            "org.apache.xpath.patterns.NodeTest:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.patterns.NodeTest:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)"
        ]
    },
    "org.apache.xalan.xsltc.dom.SAXImpl:boolean isElement(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:boolean isElement(int)",
            "org.apache.xalan.xsltc.dom.DOMAdapter:boolean isElement(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM:boolean isElement(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl:java.lang.String lookupNamespace(int,java.lang.String)"
        ]
    },
    "org.apache.xalan.xsltc.dom.SAXImpl:boolean isAttribute(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:boolean isAttribute(int)",
            "org.apache.xalan.xsltc.dom.DOMAdapter:boolean isAttribute(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM:boolean isAttribute(int)"
        ]
    },
    "org.apache.xalan.xsltc.dom.SAXImpl:void print(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.SAXImpl:void print(int,int)"
        ]
    },
    "org.apache.xalan.xsltc.dom.SAXImpl:java.lang.String getNodeName(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.XSLProcessorContext:void outputToResultTree(org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.serialize.SerializerUtils:void addAttribute(org.apache.xml.serializer.SerializationHandler,int)",
            "org.apache.xalan.templates.ElemCopy:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemNumber:org.apache.xpath.XPath getCountMatchPattern(org.apache.xpath.XPathContext,int)",
            "org.apache.xalan.templates.TemplateList:org.apache.xalan.templates.TemplateSubPatternAssociation getHead(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.templates.TemplateList:org.apache.xalan.templates.ElemTemplate getTemplateFast(org.apache.xpath.XPathContext,int,int,org.apache.xml.utils.QName,int,boolean,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.trace.PrintTraceListener:void selected(org.apache.xalan.trace.SelectionEvent)",
            "org.apache.xalan.transformer.ClonerToResultTree:void cloneToResultTree(int,int,org.apache.xml.dtm.DTM,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.transformer.TreeWalker2Result:void startNode(int)",
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:java.lang.String getNodeName(int)",
            "org.apache.xalan.xsltc.dom.DOMAdapter:java.lang.String getNodeName(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM:java.lang.String getNodeName(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void print(int,int)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(int,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void copyPI(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SAXImpl:java.lang.String shallowCopy(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String namespace_uriF(int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:void dumpDTM(java.io.OutputStream)",
            "org.apache.xml.dtm.ref.DTMNamedNodeMap:org.w3c.dom.Node getNamedItem(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getNodeName()",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getTarget()",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getTagName()",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getName()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)",
            "org.apache.xpath.axes.PredicatedNodeTest:java.lang.String nodeToString(int)",
            "org.apache.xpath.functions.FuncNamespace:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.NodeTest:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.patterns.NodeTest:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)"
        ]
    },
    "org.apache.xalan.xsltc.dom.SAXImpl:java.lang.String getLanguage(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:java.lang.String getLanguage(int)",
            "org.apache.xalan.xsltc.dom.DOMAdapter:java.lang.String getLanguage(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM:java.lang.String getLanguage(int)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean testLanguage(java.lang.String,org.apache.xalan.xsltc.DOM,int)"
        ]
    },
    "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:org.apache.xml.utils.XMLString getStringValue(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.serialize.SerializerUtils:boolean isDefinedNSDecl(org.apache.xml.serializer.SerializationHandler,int,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.transformer.ClonerToResultTree:void cloneToResultTree(int,int,org.apache.xml.dtm.DTM,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.transformer.KeyRefIterator:short filterNode(int)",
            "org.apache.xalan.transformer.KeyTable:java.util.Hashtable getRefsTable()",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:void dumpDTM(java.io.OutputStream)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getStringValue()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSum:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:org.apache.xml.utils.XMLString getArg0AsString(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:double getArg0AsNumber(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XNodeSet:double getNumberFromNode(int)",
            "org.apache.xpath.objects.XNodeSet:org.apache.xml.utils.XMLString getStringFromNode(int)",
            "org.apache.xpath.objects.XRTreeFrag:org.apache.xml.utils.XMLString xstr()",
            "org.apache.xpath.objects.XRTreeFrag:java.lang.String str()",
            "org.apache.xpath.XPathContext$XPathExpressionContext:double toNumber(org.w3c.dom.Node)",
            "org.apache.xpath.XPathContext$XPathExpressionContext:java.lang.String toString(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:boolean isWhitespace(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:java.lang.String getNodeNameX(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.serialize.SerializerUtils:void processNSDecls(org.apache.xml.serializer.SerializationHandler,int,int,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.serialize.SerializerUtils:boolean isDefinedNSDecl(org.apache.xml.serializer.SerializationHandler,int,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.serialize.SerializerUtils:void ensureNamespaceDeclDeclared(org.apache.xml.serializer.SerializationHandler,org.apache.xml.dtm.DTM,int)",
            "org.apache.xalan.transformer.ClonerToResultTree:void cloneToResultTree(int,int,org.apache.xml.dtm.DTM,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:void dumpDTM(java.io.OutputStream)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:java.lang.String dumpNode(int)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)",
            "org.apache.xpath.functions.FuncQname:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:java.lang.String getPrefix(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.DTMDefaultBase:void dumpDTM(java.io.OutputStream)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getPrefix()"
        ]
    },
    "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:boolean isAttributeSpecified(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.dtm.ref.DTMDefaultBase:int getOwnerDocument(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.DTMDocument:int getOwnerDocument(int)",
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:int getOwnerDocument(int)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.Document getOwnerDocument()"
        ]
    },
    "org.apache.xml.dtm.ref.DTMNodeProxy:short getNodeType()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.DTMDocument:void dispatchNodeData(org.w3c.dom.Node,org.xml.sax.ContentHandler,int)",
            "org.apache.xalan.lib.sql.XConnection:void addParameters(org.w3c.dom.Element)",
            "org.apache.xalan.lib.PipeDocument:void pipeDocument(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void createResultContentHandler(javax.xml.transform.Result)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void transform(javax.xml.transform.Source,javax.xml.transform.Result)",
            "org.apache.xalan.transformer.TransformerImpl:org.apache.xml.serializer.SerializationHandler createSerializationHandler(javax.xml.transform.Result,org.apache.xalan.templates.OutputProperties)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:void copyNodes(org.w3c.dom.NodeList,org.w3c.dom.Document,org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse()",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse()",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.SAX2DOM:void characters(char[],int,int)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:void <init>(org.apache.xml.dtm.DTMManager,javax.xml.transform.dom.DOMSource,int,org.apache.xml.dtm.DTMWSFilter,org.apache.xml.utils.XMLStringFactory,boolean)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:int addNode(org.w3c.dom.Node,int,int,int)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:boolean nextNode()",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:int getHandleOfNode(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:void getNodeData(org.w3c.dom.Node,org.apache.xml.utils.FastStringBuffer)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:org.w3c.dom.Node logicalNextDOMTextNode(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:java.lang.String getDocumentTypeDeclarationSystemIdentifier()",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:java.lang.String getDocumentTypeDeclarationPublicIdentifier()",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:int getElementById(java.lang.String)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:java.lang.String getUnparsedEntityURI(java.lang.String)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:void dispatchNodeData(org.w3c.dom.Node,org.xml.sax.ContentHandler,int)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode:boolean isEqualNode(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode:java.lang.String lookupNamespaceURI(java.lang.String)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode:java.lang.String lookupPrefix(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMManagerDefault:int getDTMHandleFromNode(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.Node getParentNode()",
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.NodeList getElementsByTagName(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:void traverseChildren(java.util.Vector,org.w3c.dom.Node,java.lang.String,boolean)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.NodeList getElementsByTagNameNS(java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:void traverseChildren(java.util.Vector,org.w3c.dom.Node,java.lang.String,java.lang.String,boolean,boolean)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.Element getOwnerElement()",
            "org.apache.xml.dtm.ref.DTMNodeProxy:boolean isEqualNode(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String lookupNamespaceURI(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String lookupPrefix(java.lang.String)",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.serializer.TreeWalker:void endNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.DOM2Helper:org.w3c.dom.Node getParentOfNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.DOMBuilder:void append(org.w3c.dom.Node)",
            "org.apache.xml.utils.DOMBuilder:void characters(char[],int,int)",
            "org.apache.xml.utils.DOMBuilder:boolean isOutsideDocElem()",
            "org.apache.xml.utils.DOMHelper:boolean isNodeAfterSibling(org.w3c.dom.Node,org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xml.utils.DOMHelper:java.lang.String getNamespaceForPrefix(java.lang.String,org.w3c.dom.Element)",
            "org.apache.xml.utils.DOMHelper:java.lang.String getNamespaceOfNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.DOMHelper:org.w3c.dom.Node getRootNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.DOMHelper:boolean isNamespaceNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.DOMHelper:org.w3c.dom.Node getParentOfNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.DOMHelper:org.w3c.dom.Node locateAttrParent(org.w3c.dom.Element,org.w3c.dom.Node)",
            "org.apache.xml.utils.DOMHelper:void getNodeData(org.w3c.dom.Node,org.apache.xml.utils.FastStringBuffer)",
            "org.apache.xml.utils.PrefixResolverDefault:java.lang.String getNamespaceForPrefix(java.lang.String,org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void endNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.UnImplNode:boolean isEqualNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.UnImplNode:java.lang.String lookupNamespaceURI(java.lang.String)",
            "org.apache.xml.utils.UnImplNode:java.lang.String lookupPrefix(java.lang.String)",
            "org.apache.xpath.domapi.XPathEvaluatorImpl:org.w3c.dom.xpath.XPathNSResolver createNSResolver(org.w3c.dom.Node)",
            "org.apache.xpath.domapi.XPathExpressionImpl:java.lang.Object evaluate(org.w3c.dom.Node,short,java.lang.Object)",
            "org.apache.xpath.domapi.XPathResultImpl:boolean isNamespaceNode(org.w3c.dom.Node)",
            "org.apache.xpath.jaxp.JAXPPrefixResolver:java.lang.String getNamespaceForPrefix(java.lang.String,org.w3c.dom.Node)",
            "org.apache.xpath.CachedXPathAPI:org.apache.xpath.objects.XObject eval(org.w3c.dom.Node,java.lang.String,org.w3c.dom.Node)",
            "org.apache.xpath.XPathAPI:org.apache.xpath.objects.XObject eval(org.w3c.dom.Node,java.lang.String,org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.Node getNextSibling()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.DTMDocument:void dispatchNodeData(org.w3c.dom.Node,org.xml.sax.ContentHandler,int)",
            "org.apache.xalan.lib.sql.XConnection:void initFromElement(org.w3c.dom.Element)",
            "org.apache.xalan.lib.sql.XConnection:void addParameters(org.w3c.dom.Element)",
            "org.apache.xalan.templates.ElemTemplateElement:org.w3c.dom.Node insertBefore(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xalan.templates.ElemTemplateElement:org.w3c.dom.Node getPreviousSibling()",
            "org.apache.xalan.trace.TracerEvent:java.lang.String printNode(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:boolean nextNode()",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:void getNodeData(org.w3c.dom.Node,org.apache.xml.utils.FastStringBuffer)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:org.w3c.dom.Node logicalNextDOMTextNode(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:void dispatchNodeData(org.w3c.dom.Node,org.xml.sax.ContentHandler,int)",
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xml.utils.DOMHelper:boolean isNodeAfterSibling(org.w3c.dom.Node,org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xml.utils.DOMHelper:org.w3c.dom.Node locateAttrParent(org.w3c.dom.Element,org.w3c.dom.Node)",
            "org.apache.xml.utils.DOMHelper:void getNodeData(org.w3c.dom.Node,org.apache.xml.utils.FastStringBuffer)",
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xpath.domapi.XPathNamespaceImpl:org.w3c.dom.Node getNextSibling()"
        ]
    },
    "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.Element getDocumentElement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator nodeList2Iterator(org.w3c.dom.NodeList,org.apache.xalan.xsltc.Translet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xml.utils.DOMBuilder:void append(org.w3c.dom.Node)",
            "org.apache.xml.utils.DOMHelper:org.w3c.dom.Node getParentOfNode(org.w3c.dom.Node)",
            "org.apache.xpath.domapi.XPathEvaluatorImpl:org.w3c.dom.xpath.XPathNSResolver createNSResolver(org.w3c.dom.Node)",
            "org.apache.xpath.CachedXPathAPI:org.apache.xpath.objects.XObject eval(org.w3c.dom.Node,java.lang.String,org.w3c.dom.Node)",
            "org.apache.xpath.XPathAPI:org.apache.xpath.objects.XObject eval(org.w3c.dom.Node,java.lang.String,org.w3c.dom.Node)"
        ]
    },
    "org.apache.xalan.xsltc.dom.AbsoluteIterator:int next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:int next()",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:int getNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:int next()",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:int next()",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator documentF(java.lang.Object,org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator document(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl:org.w3c.dom.Node makeNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SimpleResultTreeImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator:int step()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double sumF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double numberF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean booleanF(java.lang.Object)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String namespace_uriF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(int,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,double,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(java.lang.Object,java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String referenceToString(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator getSingleNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:org.w3c.dom.Node item(int)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:int getLength()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getLast()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getNodeByPosition(int)",
            "org.apache.xpath.axes.OneStepIterator:int getNextNode()",
            "org.apache.xpath.axes.ReverseAxesWalker:int getNextNode()"
        ]
    },
    "org.apache.xalan.xsltc.dom.CachedNodeListIterator:int getNode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:int next()",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:int getNodeByPosition(int)",
            "org.apache.xalan.xsltc.dom.ClonedNodeListIterator:int next()",
            "org.apache.xalan.xsltc.dom.ClonedNodeListIterator:int getNodeByPosition(int)"
        ]
    },
    "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DOMAdapter:org.apache.xml.dtm.DTMAxisIterator getChildren(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.NthIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xpath.axes.OneStepIterator:void setRoot(int,java.lang.Object)",
            "org.apache.xpath.axes.ReverseAxesWalker:void setRoot(int)",
            "org.apache.xpath.objects.XObjectFactory:org.apache.xpath.objects.XObject create(java.lang.Object,org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DOMAdapter:org.apache.xml.dtm.DTMAxisIterator getChildren(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:void <init>(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.NthIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xpath.axes.OneStepIterator:void setRoot(int,java.lang.Object)",
            "org.apache.xpath.axes.ReverseAxesWalker:void setRoot(int)",
            "org.apache.xpath.objects.XObjectFactory:org.apache.xpath.objects.XObject create(java.lang.Object,org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xalan.xsltc.dom.FilterIterator:int next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:int next()",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:int getNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:int next()",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:int next()",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator documentF(java.lang.Object,org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator document(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl:org.w3c.dom.Node makeNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SimpleResultTreeImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator:int step()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double sumF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double numberF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean booleanF(java.lang.Object)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String namespace_uriF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(int,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,double,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(java.lang.Object,java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String referenceToString(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator getSingleNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:org.w3c.dom.Node item(int)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:int getLength()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getLast()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getNodeByPosition(int)",
            "org.apache.xpath.axes.OneStepIterator:int getNextNode()",
            "org.apache.xpath.axes.ReverseAxesWalker:int getNextNode()"
        ]
    },
    "org.apache.xalan.xsltc.dom.ForwardPositionIterator:int next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:int next()",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:int getNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:int next()",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:int next()",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator documentF(java.lang.Object,org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator document(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl:org.w3c.dom.Node makeNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SimpleResultTreeImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator:int step()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double sumF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double numberF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean booleanF(java.lang.Object)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String namespace_uriF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(int,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,double,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(java.lang.Object,java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String referenceToString(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator getSingleNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:org.w3c.dom.Node item(int)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:int getLength()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getLast()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getNodeByPosition(int)",
            "org.apache.xpath.axes.OneStepIterator:int getNextNode()",
            "org.apache.xpath.axes.ReverseAxesWalker:int getNextNode()"
        ]
    },
    "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DOMAdapter:org.apache.xml.dtm.DTMAxisIterator getChildren(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.NthIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xpath.axes.OneStepIterator:void setRoot(int,java.lang.Object)",
            "org.apache.xpath.axes.ReverseAxesWalker:void setRoot(int)",
            "org.apache.xpath.objects.XObjectFactory:org.apache.xpath.objects.XObject create(java.lang.Object,org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xalan.xsltc.dom.MatchingIterator:int next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:int next()",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:int getNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:int next()",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:int next()",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator documentF(java.lang.Object,org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator document(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl:org.w3c.dom.Node makeNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SimpleResultTreeImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator:int step()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double sumF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double numberF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean booleanF(java.lang.Object)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String namespace_uriF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(int,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,double,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(java.lang.Object,java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String referenceToString(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator getSingleNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:org.w3c.dom.Node item(int)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:int getLength()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getLast()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getNodeByPosition(int)",
            "org.apache.xpath.axes.OneStepIterator:int getNextNode()",
            "org.apache.xpath.axes.ReverseAxesWalker:int getNextNode()"
        ]
    },
    "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:int next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:int next()",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:int getNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:int next()",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:int next()",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator documentF(java.lang.Object,org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator document(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl:org.w3c.dom.Node makeNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SimpleResultTreeImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator:int step()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double sumF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double numberF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean booleanF(java.lang.Object)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String namespace_uriF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(int,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,double,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(java.lang.Object,java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String referenceToString(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator getSingleNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:org.w3c.dom.Node item(int)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:int getLength()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getLast()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getNodeByPosition(int)",
            "org.apache.xpath.axes.OneStepIterator:int getNextNode()",
            "org.apache.xpath.axes.ReverseAxesWalker:int getNextNode()"
        ]
    },
    "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:int next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:int next()",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:int getNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:int next()",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:int next()",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator documentF(java.lang.Object,org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator document(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl:org.w3c.dom.Node makeNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SimpleResultTreeImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator:int step()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double sumF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double numberF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean booleanF(java.lang.Object)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String namespace_uriF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(int,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,double,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(java.lang.Object,java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String referenceToString(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator getSingleNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:org.w3c.dom.Node item(int)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:int getLength()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getLast()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getNodeByPosition(int)",
            "org.apache.xpath.axes.OneStepIterator:int getNextNode()",
            "org.apache.xpath.axes.ReverseAxesWalker:int getNextNode()"
        ]
    },
    "org.apache.xalan.xsltc.dom.MultiDOM:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMAdapter:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:void copy(java.lang.Object,org.apache.xml.serializer.SerializationHandler,int,org.apache.xalan.xsltc.DOM)"
        ]
    },
    "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.NodeCounter:java.lang.String getCounter(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:int next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:int next()",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:int getNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:int next()",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:int next()",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator documentF(java.lang.Object,org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator document(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl:org.w3c.dom.Node makeNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SimpleResultTreeImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator:int step()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double sumF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double numberF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean booleanF(java.lang.Object)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String namespace_uriF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(int,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,double,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(java.lang.Object,java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String referenceToString(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator getSingleNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:org.w3c.dom.Node item(int)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:int getLength()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getLast()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getNodeByPosition(int)",
            "org.apache.xpath.axes.OneStepIterator:int getNextNode()",
            "org.apache.xpath.axes.ReverseAxesWalker:int getNextNode()"
        ]
    },
    "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:int next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:int next()",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:int getNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:int next()",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:int next()",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator documentF(java.lang.Object,org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator document(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl:org.w3c.dom.Node makeNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SimpleResultTreeImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator:int step()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double sumF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double numberF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean booleanF(java.lang.Object)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String namespace_uriF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(int,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,double,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(java.lang.Object,java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String referenceToString(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator getSingleNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:org.w3c.dom.Node item(int)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:int getLength()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getLast()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getNodeByPosition(int)",
            "org.apache.xpath.axes.OneStepIterator:int getNextNode()",
            "org.apache.xpath.axes.ReverseAxesWalker:int getNextNode()"
        ]
    },
    "org.apache.xalan.xsltc.dom.SAXImpl:org.w3c.dom.Node makeNode(org.apache.xml.dtm.DTMAxisIterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:org.w3c.dom.Node makeNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xalan.xsltc.dom.DOMAdapter:org.w3c.dom.Node makeNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.w3c.dom.Node referenceToNode(java.lang.Object,org.apache.xalan.xsltc.DOM)"
        ]
    },
    "org.apache.xalan.xsltc.dom.SAXImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.DOMAdapter:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:void copy(java.lang.Object,org.apache.xml.serializer.SerializationHandler,int,org.apache.xalan.xsltc.DOM)"
        ]
    },
    "org.apache.xalan.xsltc.dom.SimpleResultTreeImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.DOMAdapter:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:void copy(java.lang.Object,org.apache.xml.serializer.SerializationHandler,int,org.apache.xalan.xsltc.DOM)"
        ]
    },
    "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.NodeCounter:java.lang.String getCounter(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DOMAdapter:org.apache.xml.dtm.DTMAxisIterator getChildren(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.NthIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xpath.axes.OneStepIterator:void setRoot(int,java.lang.Object)",
            "org.apache.xpath.axes.ReverseAxesWalker:void setRoot(int)",
            "org.apache.xpath.objects.XObjectFactory:org.apache.xpath.objects.XObject create(java.lang.Object,org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DOMAdapter:org.apache.xml.dtm.DTMAxisIterator getChildren(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.NthIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xpath.axes.OneStepIterator:void setRoot(int,java.lang.Object)",
            "org.apache.xpath.axes.ReverseAxesWalker:void setRoot(int)",
            "org.apache.xpath.objects.XObjectFactory:org.apache.xpath.objects.XObject create(java.lang.Object,org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.FilterIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.NthIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.UnionIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double numberF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean booleanF(java.lang.Object)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(java.lang.Object,java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String referenceToString(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:void copy(java.lang.Object,org.apache.xml.serializer.SerializationHandler,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getLast()",
            "org.apache.xpath.axes.OneStepIterator:void reset()"
        ]
    },
    "org.apache.xalan.xsltc.dom.StepIterator:int next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:int next()",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:int getNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:int next()",
            "org.apache.xalan.xsltc.dom.FilteredStepIterator:int next()",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:int next()",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator documentF(java.lang.Object,org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator document(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl:org.w3c.dom.Node makeNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SimpleResultTreeImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator:int step()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double sumF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double numberF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean booleanF(java.lang.Object)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String namespace_uriF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(int,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,double,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(java.lang.Object,java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String referenceToString(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator getSingleNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:org.w3c.dom.Node item(int)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:int getLength()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getLast()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getNodeByPosition(int)",
            "org.apache.xpath.axes.OneStepIterator:int getNextNode()",
            "org.apache.xpath.axes.ReverseAxesWalker:int getNextNode()"
        ]
    },
    "org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator:int step()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.UnionIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.UnionIterator:org.apache.xml.dtm.DTMAxisIterator reset()"
        ]
    },
    "org.apache.xalan.xsltc.runtime.BasisLibrary:double sumF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.runtime.BasisLibrary:double numberF(java.lang.Object,org.apache.xalan.xsltc.DOM)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compareStrings(java.lang.String,java.lang.String,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,double,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(java.lang.Object,java.lang.Object,int,org.apache.xalan.xsltc.DOM)"
        ]
    },
    "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean booleanF(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(java.lang.Object,java.lang.Object,int,org.apache.xalan.xsltc.DOM)"
        ]
    },
    "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String namespace_uriF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(java.lang.Object,java.lang.Object,int,org.apache.xalan.xsltc.DOM)"
        ]
    },
    "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(int,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,double,int,org.apache.xalan.xsltc.DOM)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(java.lang.Object,java.lang.Object,int,org.apache.xalan.xsltc.DOM)"
        ]
    },
    "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,int,org.apache.xalan.xsltc.DOM)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(java.lang.Object,java.lang.Object,int,org.apache.xalan.xsltc.DOM)"
        ]
    },
    "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String referenceToString(java.lang.Object,org.apache.xalan.xsltc.DOM)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator getSingleNode(org.apache.xml.dtm.DTMAxisIterator)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.dtm.ref.DTMAxisIterNodeList:org.w3c.dom.Node item(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.XConnection:org.apache.xpath.objects.XBooleanStatic connect(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.sql.XConnection:void addParameterFromElement(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.ExsltBase:java.lang.String toString(org.w3c.dom.Node)",
            "org.apache.xalan.lib.ExsltDynamic:org.w3c.dom.NodeList map(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList,java.lang.String)",
            "org.apache.xalan.lib.ExsltDynamic:org.w3c.dom.NodeList closure(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList,java.lang.String)",
            "org.apache.xalan.lib.ExsltMath:double max(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.ExsltMath:double min(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.ExsltMath:org.w3c.dom.NodeList highest(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.ExsltMath:org.w3c.dom.NodeList lowest(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.ExsltSets:org.w3c.dom.NodeList leading(org.w3c.dom.NodeList,org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.ExsltSets:org.w3c.dom.NodeList trailing(org.w3c.dom.NodeList,org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.ExsltSets:org.w3c.dom.NodeList distinct(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.ExsltStrings:java.lang.String concat(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.NodeInfo:java.lang.String systemId(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.NodeInfo:java.lang.String publicId(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.NodeInfo:int lineNumber(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.NodeInfo:int columnNumber(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.PipeDocument:void pipeDocument(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)",
            "org.apache.xalan.templates.ElemExsltFunction:void execute(org.apache.xalan.transformer.TransformerImpl,org.apache.xpath.objects.XObject[])",
            "org.apache.xalan.trace.TracerEvent:java.lang.String printNodeList(org.w3c.dom.NodeList)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:void copyNodes(org.w3c.dom.NodeList,org.w3c.dom.Document,org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.NodeList getElementsByTagName(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:void traverseChildren(java.util.Vector,org.w3c.dom.Node,java.lang.String,boolean)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.NodeList getElementsByTagNameNS(java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:void traverseChildren(java.util.Vector,org.w3c.dom.Node,java.lang.String,java.lang.String,boolean,boolean)",
            "org.apache.xpath.domapi.XPathResultImpl:org.w3c.dom.Node snapshotItem(int)",
            "org.apache.xpath.NodeSet:void addNodes(org.w3c.dom.NodeList)",
            "org.apache.xpath.NodeSet:void addNodesInDocOrder(org.w3c.dom.NodeList,org.apache.xpath.XPathContext)",
            "org.apache.xpath.NodeSet:boolean addNodesInDocOrder(int,int,int,org.w3c.dom.NodeList,org.apache.xpath.XPathContext)",
            "org.apache.xpath.NodeSetDTM:void <init>(org.w3c.dom.NodeList,org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMAxisIterNodeList:int getLength()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.XConnection:void addParameterFromElement(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.ExsltBase:java.lang.String toString(org.w3c.dom.Node)",
            "org.apache.xalan.lib.ExsltDynamic:double min(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList,java.lang.String)",
            "org.apache.xalan.lib.ExsltDynamic:double sum(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList,java.lang.String)",
            "org.apache.xalan.lib.ExsltDynamic:org.w3c.dom.NodeList map(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList,java.lang.String)",
            "org.apache.xalan.lib.ExsltDynamic:org.w3c.dom.NodeList closure(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList,java.lang.String)",
            "org.apache.xalan.lib.ExsltMath:double max(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.ExsltMath:double min(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.ExsltMath:org.w3c.dom.NodeList highest(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.ExsltMath:org.w3c.dom.NodeList lowest(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.ExsltSets:org.w3c.dom.NodeList leading(org.w3c.dom.NodeList,org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.ExsltSets:org.w3c.dom.NodeList trailing(org.w3c.dom.NodeList,org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.ExsltSets:org.w3c.dom.NodeList distinct(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.ExsltStrings:java.lang.String concat(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.NodeInfo:java.lang.String systemId(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.NodeInfo:java.lang.String publicId(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.NodeInfo:int lineNumber(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.NodeInfo:int columnNumber(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.PipeDocument:void pipeDocument(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)",
            "org.apache.xalan.trace.TracerEvent:java.lang.String printNodeList(org.w3c.dom.NodeList)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:void copyNodes(org.w3c.dom.NodeList,org.w3c.dom.Document,org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.NodeList getElementsByTagName(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:void traverseChildren(java.util.Vector,org.w3c.dom.Node,java.lang.String,boolean)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.NodeList getElementsByTagNameNS(java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:void traverseChildren(java.util.Vector,org.w3c.dom.Node,java.lang.String,java.lang.String,boolean,boolean)",
            "org.apache.xpath.domapi.XPathResultImpl:int getSnapshotLength()",
            "org.apache.xpath.NodeSet:void addNodes(org.w3c.dom.NodeList)",
            "org.apache.xpath.NodeSet:void addNodesInDocOrder(org.w3c.dom.NodeList,org.apache.xpath.XPathContext)",
            "org.apache.xpath.NodeSetDTM:void <init>(org.w3c.dom.NodeList,org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getLast()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.MatchingIterator:int getLast()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:int getLast()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:int countF(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:int positionF(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getNodeByPosition(int)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getNodeByPosition(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.NthIterator:int next()"
        ]
    },
    "org.apache.xpath.axes.OneStepIterator:int getNextNode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.BasicTestIterator:int nextNode()"
        ]
    },
    "org.apache.xpath.axes.ReverseAxesWalker:int getNextNode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.AxesWalker:int nextNode()"
        ]
    },
    "org.apache.xalan.xsltc.dom.AbsoluteIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DOMAdapter:org.apache.xml.dtm.DTMAxisIterator getChildren(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.NthIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator nodeList2Iterator(org.w3c.dom.NodeList,org.apache.xalan.xsltc.Translet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xpath.axes.OneStepIterator:void setRoot(int,java.lang.Object)",
            "org.apache.xpath.axes.ReverseAxesWalker:void setRoot(int)",
            "org.apache.xpath.objects.XObjectFactory:org.apache.xpath.objects.XObject create(java.lang.Object,org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xalan.xsltc.dom.CachedNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DOMAdapter:org.apache.xml.dtm.DTMAxisIterator getChildren(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.NthIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xpath.axes.OneStepIterator:void setRoot(int,java.lang.Object)",
            "org.apache.xpath.axes.ReverseAxesWalker:void setRoot(int)",
            "org.apache.xpath.objects.XObjectFactory:org.apache.xpath.objects.XObject create(java.lang.Object,org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xalan.xsltc.dom.DOMAdapter:org.apache.xml.dtm.DTMAxisIterator getChildren(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMAdapter:org.apache.xml.dtm.DTMAxisIterator getChildren(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM:org.apache.xml.dtm.DTMAxisIterator getChildren(int)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.w3c.dom.Node referenceToNode(java.lang.Object,org.apache.xalan.xsltc.DOM)"
        ]
    },
    "org.apache.xalan.xsltc.dom.FilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DOMAdapter:org.apache.xml.dtm.DTMAxisIterator getChildren(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.NthIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xpath.axes.OneStepIterator:void setRoot(int,java.lang.Object)",
            "org.apache.xpath.axes.ReverseAxesWalker:void setRoot(int)",
            "org.apache.xpath.objects.XObjectFactory:org.apache.xpath.objects.XObject create(java.lang.Object,org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xalan.xsltc.dom.ForwardPositionIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DOMAdapter:org.apache.xml.dtm.DTMAxisIterator getChildren(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.NthIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xpath.axes.OneStepIterator:void setRoot(int,java.lang.Object)",
            "org.apache.xpath.axes.ReverseAxesWalker:void setRoot(int)",
            "org.apache.xpath.objects.XObjectFactory:org.apache.xpath.objects.XObject create(java.lang.Object,org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DOMAdapter:org.apache.xml.dtm.DTMAxisIterator getChildren(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.NthIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xpath.axes.OneStepIterator:void setRoot(int,java.lang.Object)",
            "org.apache.xpath.axes.ReverseAxesWalker:void setRoot(int)",
            "org.apache.xpath.objects.XObjectFactory:org.apache.xpath.objects.XObject create(java.lang.Object,org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DOMAdapter:org.apache.xml.dtm.DTMAxisIterator getChildren(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.NthIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xpath.axes.OneStepIterator:void setRoot(int,java.lang.Object)",
            "org.apache.xpath.axes.ReverseAxesWalker:void setRoot(int)",
            "org.apache.xpath.objects.XObjectFactory:org.apache.xpath.objects.XObject create(java.lang.Object,org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xalan.xsltc.dom.NthIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DOMAdapter:org.apache.xml.dtm.DTMAxisIterator getChildren(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.NthIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xpath.axes.OneStepIterator:void setRoot(int,java.lang.Object)",
            "org.apache.xpath.axes.ReverseAxesWalker:void setRoot(int)",
            "org.apache.xpath.objects.XObjectFactory:org.apache.xpath.objects.XObject create(java.lang.Object,org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DOMAdapter:org.apache.xml.dtm.DTMAxisIterator getChildren(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.NthIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xpath.axes.OneStepIterator:void setRoot(int,java.lang.Object)",
            "org.apache.xpath.axes.ReverseAxesWalker:void setRoot(int)",
            "org.apache.xpath.objects.XObjectFactory:org.apache.xpath.objects.XObject create(java.lang.Object,org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DOMAdapter:org.apache.xml.dtm.DTMAxisIterator getChildren(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.NthIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xpath.axes.OneStepIterator:void setRoot(int,java.lang.Object)",
            "org.apache.xpath.axes.ReverseAxesWalker:void setRoot(int)",
            "org.apache.xpath.objects.XObjectFactory:org.apache.xpath.objects.XObject create(java.lang.Object,org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xalan.xsltc.dom.UnionIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DOMAdapter:org.apache.xml.dtm.DTMAxisIterator getChildren(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.NthIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xpath.axes.OneStepIterator:void setRoot(int,java.lang.Object)",
            "org.apache.xpath.axes.ReverseAxesWalker:void setRoot(int)",
            "org.apache.xpath.objects.XObjectFactory:org.apache.xpath.objects.XObject create(java.lang.Object,org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMAxisIteratorBase:org.apache.xml.dtm.DTMAxisIterator reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.FilterIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.NthIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.UnionIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double numberF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean booleanF(java.lang.Object)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(java.lang.Object,java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String referenceToString(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:void copy(java.lang.Object,org.apache.xml.serializer.SerializationHandler,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getLast()",
            "org.apache.xpath.axes.OneStepIterator:void reset()"
        ]
    },
    "org.apache.xpath.axes.OneStepIterator:void setRoot(int,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.LocPathIterator:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.axes.LocPathIterator:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.NodeSequence:void setRoot(int,java.lang.Object)",
            "org.apache.xpath.axes.OneStepIterator:int getProximityPosition(int)",
            "org.apache.xpath.axes.OneStepIterator:int getLength()",
            "org.apache.xpath.objects.XObjectFactory:org.apache.xpath.objects.XObject create(java.lang.Object,org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.axes.ReverseAxesWalker:void setRoot(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.AxesWalker:int nextNode()",
            "org.apache.xpath.axes.ReverseAxesWalker:int getProximityPosition(int)",
            "org.apache.xpath.axes.ReverseAxesWalker:int getLastPos(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.WalkingIterator:void reset()",
            "org.apache.xpath.axes.WalkingIterator:void setRoot(int,java.lang.Object)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$FollowingIterator:int next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:int next()",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:int getNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:int next()",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:int next()",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator documentF(java.lang.Object,org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator document(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl:org.w3c.dom.Node makeNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SimpleResultTreeImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator:int step()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double sumF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double numberF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean booleanF(java.lang.Object)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String namespace_uriF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(int,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,double,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(java.lang.Object,java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String referenceToString(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator getSingleNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:org.w3c.dom.Node item(int)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:int getLength()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getLast()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getNodeByPosition(int)",
            "org.apache.xpath.axes.OneStepIterator:int getNextNode()",
            "org.apache.xpath.axes.ReverseAxesWalker:int getNextNode()"
        ]
    },
    "org.apache.xml.dtm.DTMAxisTraverser:int first(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$FollowingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xpath.axes.AxesWalker:int getNextNode()",
            "org.apache.xpath.axes.ChildTestIterator:int getNextNode()",
            "org.apache.xpath.axes.DescendantIterator:int nextNode()",
            "org.apache.xpath.axes.DescendantIterator:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.MatchPatternIterator:int getNextNode()",
            "org.apache.xpath.axes.OneStepIteratorForward:int getNextNode()",
            "org.apache.xpath.patterns.ContextMatchStepPattern:org.apache.xpath.objects.XObject executeRelativePathPattern(org.apache.xpath.XPathContext,org.apache.xpath.patterns.StepPattern)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:org.apache.xpath.objects.XObject executeRelativePathPattern(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)"
        ]
    },
    "org.apache.xpath.axes.AxesWalker:int getNextNode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.AxesWalker:int nextNode()"
        ]
    },
    "org.apache.xpath.axes.ChildTestIterator:int getNextNode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.BasicTestIterator:int nextNode()"
        ]
    },
    "org.apache.xpath.axes.MatchPatternIterator:int getNextNode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.MatchPatternIterator:int nextNode()"
        ]
    },
    "org.apache.xpath.axes.OneStepIteratorForward:int getNextNode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.BasicTestIterator:int nextNode()"
        ]
    },
    "org.apache.xml.dtm.DTMAxisTraverser:int first(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.DescendantIterator:int nextNode()",
            "org.apache.xpath.axes.DescendantIterator:int asNode(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xalan.lib.sql.DTMDocument:short getLevel(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:short getLevel(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.lib.sql.SQLDocument:boolean addRowToDTMFromResultSet()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.SQLDocument:boolean addRowToDTMFromResultSet()",
            "org.apache.xalan.lib.sql.SQLDocument:int _nextsib(int)"
        ]
    },
    "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceChildrenIterator:int next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:int next()",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:int getNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:int next()",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:int next()",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator documentF(java.lang.Object,org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator document(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl:org.w3c.dom.Node makeNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SimpleResultTreeImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator:int step()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double sumF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double numberF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean booleanF(java.lang.Object)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String namespace_uriF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(int,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,double,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(java.lang.Object,java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String referenceToString(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator getSingleNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:org.w3c.dom.Node item(int)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:int getLength()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getLast()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getNodeByPosition(int)",
            "org.apache.xpath.axes.OneStepIterator:int getNextNode()",
            "org.apache.xpath.axes.ReverseAxesWalker:int getNextNode()"
        ]
    },
    "org.apache.xalan.lib.sql.DTMDocument:boolean hasChildNodes(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:boolean hasChildNodes(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.lib.sql.DTMDocument:int getFirstChild(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.MethodResolver:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.xalan.extensions.XSLProcessorContext:void outputToResultTree(org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.serialize.SerializerUtils:void outputResultTreeFragment(org.apache.xml.serializer.SerializationHandler,org.apache.xpath.objects.XObject,org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.ElemCopyOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xml.dtm.ref.DTMChildIterNodeList:void <init>(org.apache.xml.dtm.DTM,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$ChildTraverser:int first(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser:int first(int,int)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.Node getFirstChild()",
            "org.apache.xml.dtm.ref.DTMNodeProxy:boolean hasChildNodes()",
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.Element getDocumentElement()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void traverse(int)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void traverse(int,int)",
            "org.apache.xpath.axes.ChildIterator:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.ChildIterator:int nextNode()",
            "org.apache.xpath.functions.FuncDoclocation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:int getFirstChild(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.MethodResolver:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.xalan.extensions.XSLProcessorContext:void outputToResultTree(org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.serialize.SerializerUtils:void outputResultTreeFragment(org.apache.xml.serializer.SerializationHandler,org.apache.xpath.objects.XObject,org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.ElemCopyOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.xsltc.dom.SimpleResultTreeImpl:int getLastChild(int)",
            "org.apache.xml.dtm.ref.DTMChildIterNodeList:void <init>(org.apache.xml.dtm.DTM,int)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.Node getFirstChild()",
            "org.apache.xml.dtm.ref.DTMNodeProxy:boolean hasChildNodes()",
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.Element getDocumentElement()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void traverse(int)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void traverse(int,int)",
            "org.apache.xpath.axes.ChildIterator:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.ChildIterator:int nextNode()",
            "org.apache.xpath.functions.FuncDoclocation:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMChildIterNodeList:void <init>(org.apache.xml.dtm.DTM,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.NodeList getChildNodes()"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$ChildTraverser:int first(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$FollowingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xpath.axes.AxesWalker:int getNextNode()",
            "org.apache.xpath.axes.ChildTestIterator:int getNextNode()",
            "org.apache.xpath.axes.DescendantIterator:int nextNode()",
            "org.apache.xpath.axes.DescendantIterator:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.MatchPatternIterator:int getNextNode()",
            "org.apache.xpath.axes.OneStepIteratorForward:int getNextNode()",
            "org.apache.xpath.patterns.ContextMatchStepPattern:org.apache.xpath.objects.XObject executeRelativePathPattern(org.apache.xpath.XPathContext,org.apache.xpath.patterns.StepPattern)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:org.apache.xpath.objects.XObject executeRelativePathPattern(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.Node getFirstChild()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.DTMDocument:void dispatchNodeData(org.w3c.dom.Node,org.xml.sax.ContentHandler,int)",
            "org.apache.xalan.lib.sql.XConnection:void initFromElement(org.w3c.dom.Element)",
            "org.apache.xalan.lib.sql.XConnection:void addParameterFromElement(org.w3c.dom.Element)",
            "org.apache.xalan.lib.sql.XConnection:void addParameters(org.w3c.dom.Element)",
            "org.apache.xalan.templates.ElemTemplateElement:org.w3c.dom.Node getPreviousSibling()",
            "org.apache.xalan.trace.TracerEvent:java.lang.String printNode(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:boolean nextNode()",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:void getNodeData(org.w3c.dom.Node,org.apache.xml.utils.FastStringBuffer)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:org.w3c.dom.Node logicalNextDOMTextNode(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:void dispatchNodeData(org.w3c.dom.Node,org.xml.sax.ContentHandler,int)",
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xml.utils.DOMHelper:boolean isNodeAfterSibling(org.w3c.dom.Node,org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xml.utils.DOMHelper:org.w3c.dom.Node locateAttrParent(org.w3c.dom.Element,org.w3c.dom.Node)",
            "org.apache.xml.utils.DOMHelper:void getNodeData(org.w3c.dom.Node,org.apache.xml.utils.FastStringBuffer)",
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xpath.domapi.XPathNamespaceImpl:org.w3c.dom.Node getFirstChild()"
        ]
    },
    "org.apache.xml.dtm.ref.DTMNodeProxy:boolean hasChildNodes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:boolean nextNode()",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:org.w3c.dom.Node logicalNextDOMTextNode(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:void traverseChildren(java.util.Vector,org.w3c.dom.Node,java.lang.String,boolean)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:void traverseChildren(java.util.Vector,org.w3c.dom.Node,java.lang.String,java.lang.String,boolean,boolean)"
        ]
    },
    "org.apache.xpath.axes.ChildIterator:int asNode(org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.LocPathIterator:boolean bool(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:int getArg0AsNode(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.axes.ChildIterator:int nextNode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.MethodResolver:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.xalan.extensions.XSLProcessorContext:void outputToResultTree(org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.templates.ElemApplyTemplates:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemCopyOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemForEach:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.trace.PrintTraceListener:void selected(org.apache.xalan.trace.SelectionEvent)",
            "org.apache.xalan.transformer.KeyRefIterator:int getNextNode()",
            "org.apache.xalan.transformer.KeyRefIterator:short filterNode(int)",
            "org.apache.xalan.transformer.KeyTable:java.util.Hashtable getRefsTable()",
            "org.apache.xalan.transformer.NodeSorter$NodeCompareElem:void <init>(org.apache.xalan.transformer.NodeSorter,int)",
            "org.apache.xml.dtm.ref.DTMNodeIterator:org.w3c.dom.Node nextNode()",
            "org.apache.xpath.axes.LocPathIterator:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.axes.LocPathIterator:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.LocPathIterator:int getLength()",
            "org.apache.xpath.axes.LocPathIterator:void runTo(int)",
            "org.apache.xpath.axes.NodeSequence:int nextNode()",
            "org.apache.xpath.axes.UnionPathIterator:void setRoot(int,java.lang.Object)",
            "org.apache.xpath.axes.UnionPathIterator:void addIterator(org.apache.xml.dtm.DTMIterator)",
            "org.apache.xpath.axes.UnionPathIterator:int nextNode()",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncPosition:int getPositionInContextNodeList(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSum:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XNodeSet:boolean compare(org.apache.xpath.objects.XObject,org.apache.xpath.objects.Comparator)",
            "org.apache.xpath.patterns.FunctionPattern:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.patterns.FunctionPattern:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.patterns.FunctionPattern:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.NodeSetDTM:void addNodes(org.apache.xml.dtm.DTMIterator)",
            "org.apache.xpath.NodeSetDTM:void addNodesInDocOrder(org.apache.xml.dtm.DTMIterator,org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xalan.lib.sql.DTMDocument:int getLastChild(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemNumber:int findPrecedingOrAncestorOrSelf(org.apache.xpath.XPathContext,org.apache.xpath.XPath,org.apache.xpath.XPath,int,org.apache.xalan.templates.ElemNumber)",
            "org.apache.xalan.templates.ElemNumber:int getPreviousNode(org.apache.xpath.XPathContext,int)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.Node getLastChild()",
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.Element getDocumentElement()"
        ]
    },
    "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:int getLastChild(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemNumber:int findPrecedingOrAncestorOrSelf(org.apache.xpath.XPathContext,org.apache.xpath.XPath,org.apache.xpath.XPath,int,org.apache.xalan.templates.ElemNumber)",
            "org.apache.xalan.templates.ElemNumber:int getPreviousNode(org.apache.xpath.XPathContext,int)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.Node getLastChild()",
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.Element getDocumentElement()"
        ]
    },
    "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.Node getLastChild()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.utils.DOMBuilder:void characters(char[],int,int)",
            "org.apache.xml.utils.DOMBuilder:void cdata(char[],int,int)",
            "org.apache.xpath.domapi.XPathNamespaceImpl:org.w3c.dom.Node getLastChild()"
        ]
    },
    "org.apache.xalan.lib.sql.DTMDocument:int getPreviousSibling(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemNumber:int findPrecedingOrAncestorOrSelf(org.apache.xpath.XPathContext,org.apache.xpath.XPath,org.apache.xpath.XPath,int,org.apache.xalan.templates.ElemNumber)",
            "org.apache.xalan.templates.ElemNumber:int getPreviousNode(org.apache.xpath.XPathContext,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingSiblingTraverser:int next(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingSiblingTraverser:int next(int,int,int)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.Node getPreviousSibling()"
        ]
    },
    "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:int getPreviousSibling(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemNumber:int findPrecedingOrAncestorOrSelf(org.apache.xpath.XPathContext,org.apache.xpath.XPath,org.apache.xpath.XPath,int,org.apache.xalan.templates.ElemNumber)",
            "org.apache.xalan.templates.ElemNumber:int getPreviousNode(org.apache.xpath.XPathContext,int)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.Node getPreviousSibling()"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$PrecedingSiblingTraverser:int next(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$FollowingIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedFollowingIterator:int next()",
            "org.apache.xml.dtm.DTMAxisTraverser:int first(int)",
            "org.apache.xpath.axes.AxesWalker:int getNextNode()",
            "org.apache.xpath.axes.ChildTestIterator:int getNextNode()",
            "org.apache.xpath.axes.DescendantIterator:int nextNode()",
            "org.apache.xpath.axes.MatchPatternIterator:int getNextNode()",
            "org.apache.xpath.axes.OneStepIteratorForward:int getNextNode()",
            "org.apache.xpath.patterns.ContextMatchStepPattern:org.apache.xpath.objects.XObject executeRelativePathPattern(org.apache.xpath.XPathContext,org.apache.xpath.patterns.StepPattern)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:org.apache.xpath.objects.XObject executeRelativePathPattern(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.Node getPreviousSibling()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.domapi.XPathNamespaceImpl:org.w3c.dom.Node getPreviousSibling()"
        ]
    },
    "org.apache.xalan.lib.sql.DTMDocument:org.apache.xml.utils.SuballocatedIntVector findNamespaceContext(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.DTMDefaultBase:void declareNamespaceInContext(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getFirstNamespaceNode(int,boolean)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getNextNamespaceNode(int,int,boolean)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$FollowingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DOMAdapter:org.apache.xml.dtm.DTMAxisIterator getChildren(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.NthIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xpath.axes.OneStepIterator:void setRoot(int,java.lang.Object)",
            "org.apache.xpath.axes.ReverseAxesWalker:void setRoot(int)",
            "org.apache.xpath.objects.XObjectFactory:org.apache.xpath.objects.XObject create(java.lang.Object,org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xalan.lib.sql.DTMDocument:int getNextSibling(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.XSLProcessorContext:void outputToResultTree(org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.serialize.SerializerUtils:void outputResultTreeFragment(org.apache.xml.serializer.SerializationHandler,org.apache.xpath.objects.XObject,org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.ElemCopyOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xml.dtm.ref.DTMChildIterNodeList:org.w3c.dom.Node item(int)",
            "org.apache.xml.dtm.ref.DTMChildIterNodeList:int getLength()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$ChildTraverser:int next(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingSiblingTraverser:int next(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingSiblingTraverser:int next(int,int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser:int first(int,int)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.Node getNextSibling()",
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.Element getDocumentElement()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void traverse(int)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void traverse(int,int)",
            "org.apache.xpath.axes.ChildIterator:int nextNode()"
        ]
    },
    "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:int getNextSibling(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.XSLProcessorContext:void outputToResultTree(org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.serialize.SerializerUtils:void outputResultTreeFragment(org.apache.xml.serializer.SerializationHandler,org.apache.xpath.objects.XObject,org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.ElemCopyOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xml.dtm.ref.DTMChildIterNodeList:org.w3c.dom.Node item(int)",
            "org.apache.xml.dtm.ref.DTMChildIterNodeList:int getLength()",
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.Node getNextSibling()",
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.Element getDocumentElement()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void traverse(int)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void traverse(int,int)",
            "org.apache.xpath.axes.ChildIterator:int nextNode()"
        ]
    },
    "org.apache.xml.dtm.ref.DTMChildIterNodeList:org.w3c.dom.Node item(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.XConnection:org.apache.xpath.objects.XBooleanStatic connect(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.sql.XConnection:void addParameterFromElement(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.ExsltBase:java.lang.String toString(org.w3c.dom.Node)",
            "org.apache.xalan.lib.ExsltDynamic:org.w3c.dom.NodeList map(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList,java.lang.String)",
            "org.apache.xalan.lib.ExsltDynamic:org.w3c.dom.NodeList closure(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList,java.lang.String)",
            "org.apache.xalan.lib.ExsltMath:double max(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.ExsltMath:double min(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.ExsltMath:org.w3c.dom.NodeList highest(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.ExsltMath:org.w3c.dom.NodeList lowest(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.ExsltSets:org.w3c.dom.NodeList leading(org.w3c.dom.NodeList,org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.ExsltSets:org.w3c.dom.NodeList trailing(org.w3c.dom.NodeList,org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.ExsltSets:org.w3c.dom.NodeList distinct(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.ExsltStrings:java.lang.String concat(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.NodeInfo:java.lang.String systemId(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.NodeInfo:java.lang.String publicId(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.NodeInfo:int lineNumber(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.NodeInfo:int columnNumber(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.PipeDocument:void pipeDocument(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)",
            "org.apache.xalan.templates.ElemExsltFunction:void execute(org.apache.xalan.transformer.TransformerImpl,org.apache.xpath.objects.XObject[])",
            "org.apache.xalan.trace.TracerEvent:java.lang.String printNodeList(org.w3c.dom.NodeList)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:void copyNodes(org.w3c.dom.NodeList,org.w3c.dom.Document,org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.NodeList getElementsByTagName(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:void traverseChildren(java.util.Vector,org.w3c.dom.Node,java.lang.String,boolean)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.NodeList getElementsByTagNameNS(java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:void traverseChildren(java.util.Vector,org.w3c.dom.Node,java.lang.String,java.lang.String,boolean,boolean)",
            "org.apache.xpath.domapi.XPathResultImpl:org.w3c.dom.Node snapshotItem(int)",
            "org.apache.xpath.NodeSet:void addNodes(org.w3c.dom.NodeList)",
            "org.apache.xpath.NodeSet:void addNodesInDocOrder(org.w3c.dom.NodeList,org.apache.xpath.XPathContext)",
            "org.apache.xpath.NodeSet:boolean addNodesInDocOrder(int,int,int,org.w3c.dom.NodeList,org.apache.xpath.XPathContext)",
            "org.apache.xpath.NodeSetDTM:void <init>(org.w3c.dom.NodeList,org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMChildIterNodeList:int getLength()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.XConnection:void addParameterFromElement(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.ExsltBase:java.lang.String toString(org.w3c.dom.Node)",
            "org.apache.xalan.lib.ExsltDynamic:double min(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList,java.lang.String)",
            "org.apache.xalan.lib.ExsltDynamic:double sum(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList,java.lang.String)",
            "org.apache.xalan.lib.ExsltDynamic:org.w3c.dom.NodeList map(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList,java.lang.String)",
            "org.apache.xalan.lib.ExsltDynamic:org.w3c.dom.NodeList closure(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList,java.lang.String)",
            "org.apache.xalan.lib.ExsltMath:double max(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.ExsltMath:double min(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.ExsltMath:org.w3c.dom.NodeList highest(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.ExsltMath:org.w3c.dom.NodeList lowest(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.ExsltSets:org.w3c.dom.NodeList leading(org.w3c.dom.NodeList,org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.ExsltSets:org.w3c.dom.NodeList trailing(org.w3c.dom.NodeList,org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.ExsltSets:org.w3c.dom.NodeList distinct(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.ExsltStrings:java.lang.String concat(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.NodeInfo:java.lang.String systemId(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.NodeInfo:java.lang.String publicId(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.NodeInfo:int lineNumber(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.NodeInfo:int columnNumber(org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.PipeDocument:void pipeDocument(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)",
            "org.apache.xalan.trace.TracerEvent:java.lang.String printNodeList(org.w3c.dom.NodeList)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:void copyNodes(org.w3c.dom.NodeList,org.w3c.dom.Document,org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.NodeList getElementsByTagName(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:void traverseChildren(java.util.Vector,org.w3c.dom.Node,java.lang.String,boolean)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.NodeList getElementsByTagNameNS(java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:void traverseChildren(java.util.Vector,org.w3c.dom.Node,java.lang.String,java.lang.String,boolean,boolean)",
            "org.apache.xpath.domapi.XPathResultImpl:int getSnapshotLength()",
            "org.apache.xpath.NodeSet:void addNodes(org.w3c.dom.NodeList)",
            "org.apache.xpath.NodeSet:void addNodesInDocOrder(org.w3c.dom.NodeList,org.apache.xpath.XPathContext)",
            "org.apache.xpath.NodeSetDTM:void <init>(org.w3c.dom.NodeList,org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$ChildTraverser:int next(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$FollowingIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedFollowingIterator:int next()",
            "org.apache.xml.dtm.DTMAxisTraverser:int first(int)",
            "org.apache.xpath.axes.AxesWalker:int getNextNode()",
            "org.apache.xpath.axes.ChildTestIterator:int getNextNode()",
            "org.apache.xpath.axes.DescendantIterator:int nextNode()",
            "org.apache.xpath.axes.MatchPatternIterator:int getNextNode()",
            "org.apache.xpath.axes.OneStepIteratorForward:int getNextNode()",
            "org.apache.xpath.patterns.ContextMatchStepPattern:org.apache.xpath.objects.XObject executeRelativePathPattern(org.apache.xpath.XPathContext,org.apache.xpath.patterns.StepPattern)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:org.apache.xpath.objects.XObject executeRelativePathPattern(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingSiblingTraverser:int next(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$FollowingIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedFollowingIterator:int next()",
            "org.apache.xml.dtm.DTMAxisTraverser:int first(int)",
            "org.apache.xpath.axes.AxesWalker:int getNextNode()",
            "org.apache.xpath.axes.ChildTestIterator:int getNextNode()",
            "org.apache.xpath.axes.DescendantIterator:int nextNode()",
            "org.apache.xpath.axes.MatchPatternIterator:int getNextNode()",
            "org.apache.xpath.axes.OneStepIteratorForward:int getNextNode()",
            "org.apache.xpath.patterns.ContextMatchStepPattern:org.apache.xpath.objects.XObject executeRelativePathPattern(org.apache.xpath.XPathContext,org.apache.xpath.patterns.StepPattern)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:org.apache.xpath.objects.XObject executeRelativePathPattern(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)"
        ]
    },
    "org.apache.xalan.extensions.XSLProcessorContext:org.w3c.dom.Node getSourceTree()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$RootIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DOMAdapter:org.apache.xml.dtm.DTMAxisIterator getChildren(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.NthIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xpath.axes.OneStepIterator:void setRoot(int,java.lang.Object)",
            "org.apache.xpath.axes.ReverseAxesWalker:void setRoot(int)",
            "org.apache.xpath.objects.XObjectFactory:org.apache.xpath.objects.XObject create(java.lang.Object,org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AllFromRootTraverser:int first(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$FollowingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xpath.axes.AxesWalker:int getNextNode()",
            "org.apache.xpath.axes.ChildTestIterator:int getNextNode()",
            "org.apache.xpath.axes.DescendantIterator:int nextNode()",
            "org.apache.xpath.axes.DescendantIterator:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.MatchPatternIterator:int getNextNode()",
            "org.apache.xpath.axes.OneStepIteratorForward:int getNextNode()",
            "org.apache.xpath.patterns.ContextMatchStepPattern:org.apache.xpath.objects.XObject executeRelativePathPattern(org.apache.xpath.XPathContext,org.apache.xpath.patterns.StepPattern)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:org.apache.xpath.objects.XObject executeRelativePathPattern(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantOrSelfFromRootTraverser:int first(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$FollowingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$DescendantOrSelfFromRootTraverser:int first(int,int)",
            "org.apache.xpath.axes.AxesWalker:int getNextNode()",
            "org.apache.xpath.axes.ChildTestIterator:int getNextNode()",
            "org.apache.xpath.axes.DescendantIterator:int nextNode()",
            "org.apache.xpath.axes.DescendantIterator:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.MatchPatternIterator:int getNextNode()",
            "org.apache.xpath.axes.OneStepIteratorForward:int getNextNode()",
            "org.apache.xpath.patterns.ContextMatchStepPattern:org.apache.xpath.objects.XObject executeRelativePathPattern(org.apache.xpath.XPathContext,org.apache.xpath.patterns.StepPattern)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:org.apache.xpath.objects.XObject executeRelativePathPattern(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)"
        ]
    },
    "org.apache.xalan.lib.sql.DTMDocument:int getParent(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.XSLProcessorContext:void outputToResultTree(org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.templates.ElemNumber:int findAncestor(org.apache.xpath.XPathContext,org.apache.xpath.XPath,org.apache.xpath.XPath,int,org.apache.xalan.templates.ElemNumber)",
            "org.apache.xalan.templates.ElemNumber:int findPrecedingOrAncestorOrSelf(org.apache.xpath.XPathContext,org.apache.xpath.XPath,org.apache.xpath.XPath,int,org.apache.xalan.templates.ElemNumber)",
            "org.apache.xalan.templates.ElemNumber:int getPreviousNode(org.apache.xpath.XPathContext,int)",
            "org.apache.xalan.templates.ElemNumber:org.apache.xml.utils.NodeVector getMatchingAncestors(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xalan.templates.StylesheetRoot:boolean shouldStripWhiteSpace(org.apache.xpath.XPathContext,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$ParentIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AncestorTraverser:int next(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$FollowingTraverser:int first(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$ParentTraverser:int first(int)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.Node getParentNode()",
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.Node getOwnerNode()",
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.Element getOwnerElement()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void traverse(int)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void traverse(int,int)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)"
        ]
    },
    "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:int getParent(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.XSLProcessorContext:void outputToResultTree(org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.templates.ElemNumber:int findAncestor(org.apache.xpath.XPathContext,org.apache.xpath.XPath,org.apache.xpath.XPath,int,org.apache.xalan.templates.ElemNumber)",
            "org.apache.xalan.templates.ElemNumber:int findPrecedingOrAncestorOrSelf(org.apache.xpath.XPathContext,org.apache.xpath.XPath,org.apache.xpath.XPath,int,org.apache.xalan.templates.ElemNumber)",
            "org.apache.xalan.templates.ElemNumber:int getPreviousNode(org.apache.xpath.XPathContext,int)",
            "org.apache.xalan.templates.ElemNumber:org.apache.xml.utils.NodeVector getMatchingAncestors(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xalan.templates.StylesheetRoot:boolean shouldStripWhiteSpace(org.apache.xpath.XPathContext,int)",
            "org.apache.xalan.xsltc.dom.DOMAdapter:int getParent(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM:int getParent(int)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.Node getParentNode()",
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.Node getOwnerNode()",
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.Element getOwnerElement()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void traverse(int)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void traverse(int,int)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)"
        ]
    },
    "org.apache.xalan.xsltc.dom.DOMAdapter:int getParent(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMAdapter:int getParent(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM:int getParent(int)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()"
        ]
    },
    "org.apache.xalan.xsltc.dom.MultiDOM:int getParent(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMAdapter:int getParent(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM:int getParent(int)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$ParentIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DOMAdapter:org.apache.xml.dtm.DTMAxisIterator getChildren(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.NthIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xpath.axes.OneStepIterator:void setRoot(int,java.lang.Object)",
            "org.apache.xpath.axes.ReverseAxesWalker:void setRoot(int)",
            "org.apache.xpath.objects.XObjectFactory:org.apache.xpath.objects.XObject create(java.lang.Object,org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AncestorTraverser:int next(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$FollowingIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedFollowingIterator:int next()",
            "org.apache.xml.dtm.DTMAxisTraverser:int first(int)",
            "org.apache.xpath.axes.AxesWalker:int getNextNode()",
            "org.apache.xpath.axes.ChildTestIterator:int getNextNode()",
            "org.apache.xpath.axes.DescendantIterator:int nextNode()",
            "org.apache.xpath.axes.MatchPatternIterator:int getNextNode()",
            "org.apache.xpath.axes.OneStepIteratorForward:int getNextNode()",
            "org.apache.xpath.patterns.ContextMatchStepPattern:org.apache.xpath.objects.XObject executeRelativePathPattern(org.apache.xpath.XPathContext,org.apache.xpath.patterns.StepPattern)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:org.apache.xpath.objects.XObject executeRelativePathPattern(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$ParentTraverser:int first(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$FollowingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xpath.axes.AxesWalker:int getNextNode()",
            "org.apache.xpath.axes.ChildTestIterator:int getNextNode()",
            "org.apache.xpath.axes.DescendantIterator:int nextNode()",
            "org.apache.xpath.axes.DescendantIterator:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.MatchPatternIterator:int getNextNode()",
            "org.apache.xpath.axes.OneStepIteratorForward:int getNextNode()",
            "org.apache.xpath.patterns.ContextMatchStepPattern:org.apache.xpath.objects.XObject executeRelativePathPattern(org.apache.xpath.XPathContext,org.apache.xpath.patterns.StepPattern)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:org.apache.xpath.objects.XObject executeRelativePathPattern(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.Node getParentNode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemTemplateElement:org.w3c.dom.Node replaceChild(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:boolean nextNode()",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:int getHandleOfNode(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:org.w3c.dom.Node logicalNextDOMTextNode(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.DTMManagerDefault:int getDTMHandleFromNode(org.w3c.dom.Node)",
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xml.utils.DOM2Helper:org.w3c.dom.Node getParentOfNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.DOMHelper:java.lang.String getNamespaceOfNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.DOMHelper:org.w3c.dom.Node getParentOfNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.PrefixResolverDefault:java.lang.String getNamespaceForPrefix(java.lang.String,org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xpath.domapi.XPathNamespaceImpl:org.w3c.dom.Node getParentNode()",
            "org.apache.xpath.jaxp.JAXPPrefixResolver:java.lang.String getNamespaceForPrefix(java.lang.String,org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.Node getOwnerNode()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.Element getOwnerElement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:int getHandleOfNode(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.DTMManagerDefault:int getDTMHandleFromNode(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String lookupNamespaceURI(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String lookupPrefix(java.lang.String)",
            "org.apache.xml.utils.DOM2Helper:org.w3c.dom.Node getParentOfNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.DOMHelper:org.w3c.dom.Node getParentOfNode(org.w3c.dom.Node)",
            "org.apache.xpath.domapi.XPathNamespaceImpl:org.w3c.dom.Element getOwnerElement()"
        ]
    },
    "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:void characters(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.XSLProcessorContext:void outputToResultTree(org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.lib.sql.DTMDocument:void dispatchNodeData(org.w3c.dom.Node,org.xml.sax.ContentHandler,int)",
            "org.apache.xalan.templates.ElemCopyOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemNumber:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemTextLiteral:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.TransformerHandlerImpl:void characters(char[],int,int)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void characters(char[],int,int)",
            "org.apache.xalan.transformer.TransformerImpl:void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement,boolean)",
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:void characters(java.lang.String)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:void copy(java.lang.Object,org.apache.xml.serializer.SerializationHandler,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void characters(char[],int,int)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:void dispatchNodeData(org.w3c.dom.Node,org.xml.sax.ContentHandler,int)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void characters(char[],int,int)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void characters(char[],int,int)",
            "org.apache.xml.serializer.ToTextSAXHandler:void characters(java.lang.String)",
            "org.apache.xml.serializer.ToTextSAXHandler:void characters(char[],int,int)",
            "org.apache.xml.serializer.ToUnknownStream:void characters(char[],int,int)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void characters(char[],int,int)",
            "org.apache.xml.serializer.TreeWalker:void dispatachChars(org.w3c.dom.Node)",
            "org.apache.xml.utils.FastStringBuffer:void sendSAXcharacters(org.xml.sax.ContentHandler,int,int)",
            "org.apache.xml.utils.FastStringBuffer:int sendNormalizedSAXcharacters(char[],int,int,org.xml.sax.ContentHandler,int)",
            "org.apache.xml.utils.TreeWalker:void dispatachChars(org.w3c.dom.Node)",
            "org.apache.xpath.objects.XString:void dispatchCharactersEvents(org.xml.sax.ContentHandler)",
            "org.apache.xpath.objects.XStringForChars:void dispatchCharactersEvents(org.xml.sax.ContentHandler)"
        ]
    },
    "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:void endElement(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(int,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.w3c.dom.Node)",
            "org.apache.xml.serializer.ToUnknownStream:void endElement(java.lang.String)"
        ]
    },
    "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:void copy(int,org.apache.xml.serializer.SerializationHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMAdapter:void copy(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.MultiDOM:void copy(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.MultiDOM:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SimpleResultTreeImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:void copy(java.lang.Object,org.apache.xml.serializer.SerializationHandler,int,org.apache.xalan.xsltc.DOM)"
        ]
    },
    "org.apache.xalan.xsltc.dom.DOMAdapter:void copy(int,org.apache.xml.serializer.SerializationHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMAdapter:void copy(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.MultiDOM:void copy(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.MultiDOM:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:void copy(java.lang.Object,org.apache.xml.serializer.SerializationHandler,int,org.apache.xalan.xsltc.DOM)"
        ]
    },
    "org.apache.xalan.xsltc.dom.MultiDOM:void copy(int,org.apache.xml.serializer.SerializationHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMAdapter:void copy(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.MultiDOM:void copy(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.MultiDOM:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:void copy(java.lang.Object,org.apache.xml.serializer.SerializationHandler,int,org.apache.xalan.xsltc.DOM)"
        ]
    },
    "org.apache.xalan.xsltc.dom.SAXImpl:void copy(org.apache.xml.serializer.SerializationHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.trax.TransformerImpl:void transformIdentity(javax.xml.transform.Source,org.apache.xml.serializer.SerializationHandler)"
        ]
    },
    "org.apache.xalan.serialize.SerializerUtils:void addAttributes(org.apache.xml.serializer.SerializationHandler,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.ClonerToResultTree:void cloneToResultTree(int,int,org.apache.xml.dtm.DTM,org.apache.xml.serializer.SerializationHandler,boolean)"
        ]
    },
    "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void copyAttributes(int,org.apache.xml.serializer.SerializationHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(int,org.apache.xml.serializer.SerializationHandler,boolean)"
        ]
    },
    "org.apache.xalan.processor.TransformerFactoryImpl:javax.xml.transform.sax.TransformerHandler newTransformerHandler(javax.xml.transform.Templates)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.PipeDocument:void pipeDocument(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)",
            "org.apache.xalan.processor.TransformerFactoryImpl:javax.xml.transform.sax.TransformerHandler newTransformerHandler(javax.xml.transform.Source)",
            "org.apache.xalan.xslt.Process:void main(java.lang.String[])",
            "org.apache.xalan.xsltc.trax.SmartTransformerFactoryImpl:javax.xml.transform.sax.TransformerHandler newTransformerHandler(javax.xml.transform.Templates)"
        ]
    },
    "org.apache.xalan.transformer.TransformerImpl:org.xml.sax.ContentHandler getInputContentHandler()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TrAXFilter:void setupParse()"
        ]
    },
    "org.apache.xalan.templates.FuncDocument:int getDoc(org.apache.xpath.XPathContext,int,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.SourceTreeManager:int getSourceTree(java.lang.String,java.lang.String,javax.xml.transform.SourceLocator,org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.transformer.TransformerHandlerImpl:void endPrefixMapping(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void endPrefixMapping(java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void endPrefixMapping(java.lang.String)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void endPrefixMapping(java.lang.String)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void endPrefixMapping(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void endPrefixMapping(java.lang.String)",
            "org.apache.xml.serializer.NamespaceMappings:void popNamespaces(int,org.xml.sax.ContentHandler)",
            "org.apache.xml.serializer.ToXMLSAXHandler:boolean popNamespace(java.lang.String)",
            "org.apache.xml.serializer.TreeWalker:void endNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void endNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xalan.xsltc.trax.DOM2SAX:void endPrefixMapping(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void endPrefixMapping(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void endPrefixMapping(java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void endPrefixMapping(java.lang.String)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void endPrefixMapping(java.lang.String)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void endPrefixMapping(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void endPrefixMapping(java.lang.String)",
            "org.apache.xml.serializer.NamespaceMappings:void popNamespaces(int,org.xml.sax.ContentHandler)",
            "org.apache.xml.serializer.ToXMLSAXHandler:boolean popNamespace(java.lang.String)",
            "org.apache.xml.serializer.TreeWalker:void endNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void endNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void endPrefixMapping(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void endPrefixMapping(java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void endPrefixMapping(java.lang.String)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void endPrefixMapping(java.lang.String)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void endPrefixMapping(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void endPrefixMapping(java.lang.String)",
            "org.apache.xml.serializer.NamespaceMappings:void popNamespaces(int,org.xml.sax.ContentHandler)",
            "org.apache.xml.serializer.ToXMLSAXHandler:boolean popNamespace(java.lang.String)",
            "org.apache.xml.serializer.TreeWalker:void endNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void endNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serializer.NamespaceMappings:void popNamespaces(int,org.xml.sax.ContentHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.ToStream:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xml.serializer.ToXMLSAXHandler:boolean popNamespace(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.transformer.TransformerHandlerImpl:void skippedEntity(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void skippedEntity(java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void skippedEntity(java.lang.String)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void skippedEntity(java.lang.String)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void skippedEntity(java.lang.String)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void skippedEntity(java.lang.String)"
        ]
    },
    "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void skippedEntity(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void skippedEntity(java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void skippedEntity(java.lang.String)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void skippedEntity(java.lang.String)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void skippedEntity(java.lang.String)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void skippedEntity(java.lang.String)"
        ]
    },
    "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void skippedEntity(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void skippedEntity(java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void skippedEntity(java.lang.String)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void skippedEntity(java.lang.String)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void skippedEntity(java.lang.String)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void skippedEntity(java.lang.String)"
        ]
    },
    "org.apache.xml.serializer.ToXMLSAXHandler:void skippedEntity(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void skippedEntity(java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void skippedEntity(java.lang.String)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void skippedEntity(java.lang.String)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void skippedEntity(java.lang.String)",
            "org.apache.xml.serializer.ToUnknownStream:void skippedEntity(java.lang.String)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void skippedEntity(java.lang.String)"
        ]
    },
    "org.apache.xalan.transformer.TransformerHandlerImpl:void startDTD(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void startDTD(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void startDTD(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startDTD(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void startDTD(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void startElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startDTD(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void startDTD(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void startDTD(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startDTD(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void startDTD(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void startElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void startDTD(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void startDTD(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void startDTD(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startDTD(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void startDTD(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void startElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xalan.lib.Redirect:org.xml.sax.ContentHandler makeFormatterListener(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall,java.lang.String,boolean,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.Redirect:void open(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)",
            "org.apache.xalan.lib.Redirect:void write(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)"
        ]
    },
    "org.apache.xalan.xsltc.runtime.AbstractTranslet:org.apache.xml.serializer.SerializationHandler openOutputHandler(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.serializer.ToUnknownStream:void initStreamOutput()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.ToUnknownStream:void emitFirstTag()"
        ]
    },
    "org.apache.xalan.xsltc.dom.MultiDOM:org.apache.xalan.xsltc.DOM getResultTreeFrag(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMAdapter:org.apache.xalan.xsltc.DOM getResultTreeFrag(int,int)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Parser:void createAST(org.apache.xalan.xsltc.compiler.Stylesheet)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.XSLTC:boolean compile(org.xml.sax.InputSource,java.lang.String)",
            "org.apache.xalan.xsltc.trax.TemplatesHandlerImpl:void endDocument()"
        ]
    },
    "org.apache.xalan.xsltc.compiler.UnsupportedElement:void processFallbacks(org.apache.xalan.xsltc.compiler.Parser)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.UnsupportedElement:void parseContents(org.apache.xalan.xsltc.compiler.Parser)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Param:void parseContents(org.apache.xalan.xsltc.compiler.Parser)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AttributeSet:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Stylesheet:void parseOwnChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void parseChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Template:void parseSimplified(org.apache.xalan.xsltc.compiler.Stylesheet,org.apache.xalan.xsltc.compiler.Parser)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Variable:void parseContents(org.apache.xalan.xsltc.compiler.Parser)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AttributeSet:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Stylesheet:void parseOwnChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void parseChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Template:void parseSimplified(org.apache.xalan.xsltc.compiler.Stylesheet,org.apache.xalan.xsltc.compiler.Parser)"
        ]
    },
    "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:javax.xml.transform.Transformer newTransformer(javax.xml.transform.Source)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.client.XSLTProcessorApplet:java.lang.String processTransformation()",
            "org.apache.xalan.xsltc.trax.SmartTransformerFactoryImpl:javax.xml.transform.Transformer newTransformer(javax.xml.transform.Source)",
            "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:javax.xml.transform.sax.TransformerHandler newTransformerHandler(javax.xml.transform.Source)"
        ]
    },
    "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:org.xml.sax.XMLFilter newXMLFilter(javax.xml.transform.Source)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.trax.TrAXFilter:void setContentHandler(org.xml.sax.ContentHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.PipeDocument:void usePipe(java.util.Vector,java.lang.String,java.lang.String)",
            "org.apache.xalan.processor.ProcessorInclude:void parse(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.processor.TransformerFactoryImpl:javax.xml.transform.Source getAssociatedStylesheet(javax.xml.transform.Source,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.processor.TransformerFactoryImpl:javax.xml.transform.Templates newTemplates(javax.xml.transform.Source)",
            "org.apache.xalan.transformer.TrAXFilter:void setupParse()",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void transform(javax.xml.transform.Source,javax.xml.transform.Result)",
            "org.apache.xalan.xslt.Process:void main(java.lang.String[])",
            "org.apache.xalan.xsltc.compiler.Parser:org.apache.xalan.xsltc.compiler.SyntaxTreeNode parse(org.xml.sax.XMLReader,org.xml.sax.InputSource)",
            "org.apache.xalan.xsltc.dom.XSLTCDTMManager:org.apache.xml.dtm.DTM getDTM(javax.xml.transform.Source,boolean,org.apache.xml.dtm.DTMWSFilter,boolean,boolean,boolean,int,boolean,boolean)",
            "org.apache.xalan.xsltc.trax.TrAXFilter:void setContentHandler(org.xml.sax.ContentHandler)",
            "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:javax.xml.transform.Source getAssociatedStylesheet(javax.xml.transform.Source,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.trax.TransformerImpl:void transformIdentity(javax.xml.transform.Source,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xml.dtm.ref.DTMManagerDefault:org.apache.xml.dtm.DTM getDTM(javax.xml.transform.Source,boolean,org.apache.xml.dtm.DTMWSFilter,boolean,boolean)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void setXMLReader(org.xml.sax.XMLReader)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces:void setContentHandler(org.xml.sax.ContentHandler)"
        ]
    },
    "org.apache.xalan.templates.RedundentExprEliminator:boolean visitInstruction(org.apache.xalan.templates.ElemTemplateElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemTemplateElement:boolean accept(org.apache.xalan.templates.XSLTVisitor)",
            "org.apache.xalan.templates.RedundentExprEliminator:boolean visitTopLevelInstruction(org.apache.xalan.templates.ElemTemplateElement)"
        ]
    },
    "org.apache.xalan.templates.RedundentExprEliminator:void eleminateSharedPartialPaths(org.apache.xalan.templates.ElemTemplateElement,java.util.Vector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.RedundentExprEliminator:void eleminateRedundent(org.apache.xalan.templates.ElemTemplateElement,java.util.Vector)"
        ]
    },
    "org.apache.xalan.transformer.TransformerImpl:void resetUserParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerImpl:void reset()"
        ]
    },
    "org.apache.xalan.transformer.TransformerImpl:void setParameters(java.util.Properties)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.templates.AVTPartXPath:void callVisitors(org.apache.xalan.templates.XSLTVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.AVT:void callVisitors(org.apache.xalan.templates.XSLTVisitor)"
        ]
    },
    "org.apache.xalan.templates.ElemCopyOf:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemTemplateElement:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor)",
            "org.apache.xalan.templates.RedundentExprEliminator:boolean visitInstruction(org.apache.xalan.templates.ElemTemplateElement)"
        ]
    },
    "org.apache.xalan.templates.ElemForEach:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemCallTemplate:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemTemplateElement:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor)",
            "org.apache.xalan.templates.RedundentExprEliminator:boolean visitInstruction(org.apache.xalan.templates.ElemTemplateElement)"
        ]
    },
    "org.apache.xalan.templates.ElemIf:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemTemplateElement:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor)",
            "org.apache.xalan.templates.RedundentExprEliminator:boolean visitInstruction(org.apache.xalan.templates.ElemTemplateElement)"
        ]
    },
    "org.apache.xalan.templates.ElemNumber:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemTemplateElement:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor)",
            "org.apache.xalan.templates.RedundentExprEliminator:boolean visitInstruction(org.apache.xalan.templates.ElemTemplateElement)"
        ]
    },
    "org.apache.xalan.templates.ElemValueOf:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemTemplateElement:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor)",
            "org.apache.xalan.templates.RedundentExprEliminator:boolean visitInstruction(org.apache.xalan.templates.ElemTemplateElement)"
        ]
    },
    "org.apache.xalan.templates.ElemVariable:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemTemplateElement:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor)",
            "org.apache.xalan.templates.RedundentExprEliminator:boolean visitInstruction(org.apache.xalan.templates.ElemTemplateElement)"
        ]
    },
    "org.apache.xalan.templates.ElemWhen:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemTemplateElement:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor)",
            "org.apache.xalan.templates.RedundentExprEliminator:boolean visitInstruction(org.apache.xalan.templates.ElemTemplateElement)"
        ]
    },
    "org.apache.xalan.templates.ElemWithParam:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemTemplateElement:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor)",
            "org.apache.xalan.templates.RedundentExprEliminator:boolean visitInstruction(org.apache.xalan.templates.ElemTemplateElement)"
        ]
    },
    "org.apache.xalan.templates.RedundentExprEliminator:boolean visitPredicate(org.apache.xpath.ExpressionOwner,org.apache.xpath.Expression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.PredicatedNodeTest:void callPredicateVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.patterns.StepPattern:void callSubtreeVisitors(org.apache.xpath.XPathVisitor)"
        ]
    },
    "org.apache.xpath.axes.FilterExprIterator:void callPredicateVisitors(org.apache.xpath.XPathVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.LocPathIterator:void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)"
        ]
    },
    "org.apache.xpath.axes.FilterExprIteratorSimple:void callPredicateVisitors(org.apache.xpath.XPathVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.LocPathIterator:void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)"
        ]
    },
    "org.apache.xpath.axes.FilterExprWalker:void callPredicateVisitors(org.apache.xpath.XPathVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.AxesWalker:void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)"
        ]
    },
    "org.apache.xpath.axes.HasPositionalPredChecker:boolean visitPredicate(org.apache.xpath.ExpressionOwner,org.apache.xpath.Expression)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.PredicatedNodeTest:void callPredicateVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.patterns.StepPattern:void callSubtreeVisitors(org.apache.xpath.XPathVisitor)"
        ]
    },
    "org.apache.xpath.axes.PredicatedNodeTest:void callPredicateVisitors(org.apache.xpath.XPathVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.AxesWalker:void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.axes.FilterExprIterator:void callPredicateVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:void callPredicateVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.axes.FilterExprWalker:void callPredicateVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.axes.LocPathIterator:void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)"
        ]
    },
    "org.apache.xpath.functions.FuncExtFunction:void callArgVisitors(org.apache.xpath.XPathVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.functions.Function:void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)"
        ]
    },
    "org.apache.xpath.functions.Function2Args:void callArgVisitors(org.apache.xpath.XPathVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.functions.Function:void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.functions.Function3Args:void callArgVisitors(org.apache.xpath.XPathVisitor)"
        ]
    },
    "org.apache.xpath.functions.Function3Args:void callArgVisitors(org.apache.xpath.XPathVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.functions.Function:void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.functions.FunctionMultiArgs:void callArgVisitors(org.apache.xpath.XPathVisitor)"
        ]
    },
    "org.apache.xpath.functions.FunctionMultiArgs:void callArgVisitors(org.apache.xpath.XPathVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.functions.Function:void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)"
        ]
    },
    "org.apache.xpath.functions.FunctionOneArg:void callArgVisitors(org.apache.xpath.XPathVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.functions.Function:void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.functions.Function2Args:void callArgVisitors(org.apache.xpath.XPathVisitor)"
        ]
    },
    "org.apache.xpath.operations.Operation:void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.AVTPartXPath:void callVisitors(org.apache.xalan.templates.XSLTVisitor)",
            "org.apache.xalan.templates.ElemCopyOf:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemForEach:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemIf:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemNumber:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemValueOf:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemVariable:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemWhen:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemWithParam:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.RedundentExprEliminator:boolean visitPredicate(org.apache.xpath.ExpressionOwner,org.apache.xpath.Expression)",
            "org.apache.xalan.templates.RedundentExprEliminator:boolean visitInstruction(org.apache.xalan.templates.ElemTemplateElement)",
            "org.apache.xpath.axes.FilterExprIterator:void callPredicateVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:void callPredicateVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.axes.FilterExprWalker:void callPredicateVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.axes.HasPositionalPredChecker:boolean visitPredicate(org.apache.xpath.ExpressionOwner,org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:void callPredicateVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.functions.FuncExtFunction:void callArgVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.functions.Function2Args:void callArgVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.functions.Function3Args:void callArgVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.functions.FunctionMultiArgs:void callArgVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.functions.FunctionOneArg:void callArgVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.operations.Operation:void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.operations.UnaryOperation:void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.patterns.FunctionPattern:void callSubtreeVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.patterns.StepPattern:void callSubtreeVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.XPath:void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)"
        ]
    },
    "org.apache.xpath.operations.UnaryOperation:void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.AVTPartXPath:void callVisitors(org.apache.xalan.templates.XSLTVisitor)",
            "org.apache.xalan.templates.ElemCopyOf:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemForEach:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemIf:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemNumber:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemValueOf:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemVariable:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemWhen:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemWithParam:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.RedundentExprEliminator:boolean visitPredicate(org.apache.xpath.ExpressionOwner,org.apache.xpath.Expression)",
            "org.apache.xalan.templates.RedundentExprEliminator:boolean visitInstruction(org.apache.xalan.templates.ElemTemplateElement)",
            "org.apache.xpath.axes.FilterExprIterator:void callPredicateVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:void callPredicateVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.axes.FilterExprWalker:void callPredicateVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.axes.HasPositionalPredChecker:boolean visitPredicate(org.apache.xpath.ExpressionOwner,org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:void callPredicateVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.functions.FuncExtFunction:void callArgVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.functions.Function2Args:void callArgVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.functions.Function3Args:void callArgVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.functions.FunctionMultiArgs:void callArgVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.functions.FunctionOneArg:void callArgVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.operations.Operation:void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.operations.UnaryOperation:void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.patterns.FunctionPattern:void callSubtreeVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.patterns.StepPattern:void callSubtreeVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.XPath:void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)"
        ]
    },
    "org.apache.xpath.patterns.FunctionPattern:void callSubtreeVisitors(org.apache.xpath.XPathVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.patterns.StepPattern:void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)"
        ]
    },
    "org.apache.xpath.patterns.StepPattern:void callSubtreeVisitors(org.apache.xpath.XPathVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.patterns.FunctionPattern:void callSubtreeVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.patterns.StepPattern:void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)"
        ]
    },
    "org.apache.xpath.XPath:void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.StylesheetHandler:org.apache.xpath.XPath createXPath(java.lang.String,org.apache.xalan.templates.ElemTemplateElement)",
            "org.apache.xalan.processor.StylesheetHandler:org.apache.xpath.XPath createMatchPatternXPath(java.lang.String,org.apache.xalan.templates.ElemTemplateElement)"
        ]
    },
    "org.apache.xalan.lib.sql.XConnection:org.apache.xpath.objects.XBooleanStatic connect(org.apache.xalan.extensions.ExpressionContext,java.lang.String,java.lang.String,org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.XConnection:void <init>(org.apache.xalan.extensions.ExpressionContext,java.lang.String,java.lang.String,org.w3c.dom.Element)"
        ]
    },
    "org.apache.xalan.lib.sql.XConnection:void initFromElement(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.XConnection:org.apache.xpath.objects.XBooleanStatic connect(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.Element)",
            "org.apache.xalan.lib.sql.XConnection:org.apache.xpath.objects.XBooleanStatic connect(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList)"
        ]
    },
    "org.apache.xalan.lib.sql.XConnection:void addParameterFromElement(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.lib.sql.XConnection:void addParameters(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.XConnection:void addParameterFromElement(org.w3c.dom.NodeList)"
        ]
    },
    "org.apache.xalan.trace.TracerEvent:java.lang.String printNode(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.trace.TracerEvent:java.lang.String printNode(org.w3c.dom.Node)",
            "org.apache.xalan.trace.TracerEvent:java.lang.String printNodeList(org.w3c.dom.NodeList)"
        ]
    },
    "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:void getNodeData(org.w3c.dom.Node,org.apache.xml.utils.FastStringBuffer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:org.apache.xml.utils.XMLString getStringValue(int)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:void getNodeData(org.w3c.dom.Node,org.apache.xml.utils.FastStringBuffer)"
        ]
    },
    "org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode:boolean isEqualNode(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode:java.lang.String lookupNamespaceURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.dtm.ref.DTMNodeProxy:boolean isEqualNode(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String lookupNamespaceURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode:java.lang.String lookupNamespaceURI(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String lookupNamespaceURI(java.lang.String)",
            "org.apache.xml.utils.UnImplNode:java.lang.String lookupNamespaceURI(java.lang.String)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getTextContent()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.serializer.utils.AttList:java.lang.String getValue(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.utils.AttList:java.lang.String getValue(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.utils.DOMBuilder:void append(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.utils.DOMBuilder:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.utils.DOMBuilder:void characters(char[],int,int)",
            "org.apache.xml.utils.DOMBuilder:void charactersRaw(char[],int,int)",
            "org.apache.xml.utils.DOMBuilder:void entityReference(java.lang.String)",
            "org.apache.xml.utils.DOMBuilder:void ignorableWhitespace(char[],int,int)",
            "org.apache.xml.utils.DOMBuilder:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.utils.DOMBuilder:void comment(char[],int,int)",
            "org.apache.xml.utils.DOMBuilder:void startCDATA()"
        ]
    },
    "org.apache.xml.utils.DOMHelper:java.lang.String getNamespaceForPrefix(java.lang.String,org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.utils.DOMHelper:java.lang.String getNamespaceOfNode(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.utils.AttList:java.lang.String getURI(int)",
            "org.apache.xml.utils.DOMHelper:java.lang.String getExpandedElementName(org.w3c.dom.Element)",
            "org.apache.xml.utils.DOMHelper:java.lang.String getExpandedAttributeName(org.w3c.dom.Attr)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void endNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.utils.DOMHelper:void getNodeData(org.w3c.dom.Node,org.apache.xml.utils.FastStringBuffer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.utils.DOMHelper:java.lang.String getNodeData(org.w3c.dom.Node)",
            "org.apache.xml.utils.DOMHelper:void getNodeData(org.w3c.dom.Node,org.apache.xml.utils.FastStringBuffer)"
        ]
    },
    "org.apache.xml.utils.PrefixResolverDefault:java.lang.String getNamespaceForPrefix(java.lang.String,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.utils.PrefixResolverDefault:java.lang.String getNamespaceForPrefix(java.lang.String)",
            "org.apache.xml.utils.QName:void <init>(java.lang.String,org.w3c.dom.Element,org.apache.xml.utils.PrefixResolver,boolean)"
        ]
    },
    "org.apache.xml.utils.UnImplNode:boolean isEqualNode(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.utils.UnImplNode:java.lang.String lookupNamespaceURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode:java.lang.String lookupNamespaceURI(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String lookupNamespaceURI(java.lang.String)",
            "org.apache.xml.utils.UnImplNode:java.lang.String lookupNamespaceURI(java.lang.String)"
        ]
    },
    "org.apache.xpath.domapi.XPathNamespaceImpl:java.lang.String getNodeValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.DTMDocument:void dispatchNodeData(org.w3c.dom.Node,org.xml.sax.ContentHandler,int)",
            "org.apache.xalan.lib.sql.XConnection:org.apache.xpath.objects.XBooleanStatic connect(org.apache.xalan.extensions.ExpressionContext,java.lang.String,java.lang.String,org.w3c.dom.Element)",
            "org.apache.xalan.lib.sql.XConnection:void initFromElement(org.w3c.dom.Element)",
            "org.apache.xalan.lib.sql.XConnection:void addParameterFromElement(org.w3c.dom.Element)",
            "org.apache.xalan.lib.sql.XConnection:void addParameters(org.w3c.dom.Element)",
            "org.apache.xalan.lib.ExsltBase:java.lang.String toString(org.w3c.dom.Node)",
            "org.apache.xalan.trace.TracerEvent:java.lang.String printNode(org.w3c.dom.Node)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void transform(javax.xml.transform.Source,javax.xml.transform.Result)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:void copyNodes(org.w3c.dom.NodeList,org.w3c.dom.Document,org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:boolean nextNode()",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:org.apache.xml.utils.XMLString getStringValue(int)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:boolean isWhitespace(int)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:void getNodeData(org.w3c.dom.Node,org.apache.xml.utils.FastStringBuffer)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:java.lang.String getNodeValue(int)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:void dispatchNodeData(org.w3c.dom.Node,org.xml.sax.ContentHandler,int)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode:boolean isEqualNode(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode:java.lang.String lookupNamespaceURI(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getAttribute(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getAttributeNS(java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:boolean isEqualNode(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String lookupNamespaceURI(java.lang.String)",
            "org.apache.xml.serializer.utils.AttList:java.lang.String getValue(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.SerializerBase:void characters(org.w3c.dom.Node)",
            "org.apache.xml.serializer.ToSAXHandler:void characters(org.w3c.dom.Node)",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.AttList:java.lang.String getValue(java.lang.String,java.lang.String)",
            "org.apache.xml.utils.DOMBuilder:void append(org.w3c.dom.Node)",
            "org.apache.xml.utils.DOMHelper:java.lang.String getNamespaceOfNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.DOMHelper:void getNodeData(org.w3c.dom.Node,org.apache.xml.utils.FastStringBuffer)",
            "org.apache.xml.utils.PrefixResolverDefault:java.lang.String getNamespaceForPrefix(java.lang.String,org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.UnImplNode:boolean isEqualNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.UnImplNode:java.lang.String lookupNamespaceURI(java.lang.String)",
            "org.apache.xpath.domapi.XPathNamespaceImpl:java.lang.String getNodeValue()",
            "org.apache.xpath.domapi.XPathNamespaceImpl:java.lang.String getNamespaceURI()",
            "org.apache.xpath.jaxp.JAXPPrefixResolver:java.lang.String getNamespaceForPrefix(java.lang.String,org.w3c.dom.Node)"
        ]
    },
    "org.apache.xpath.domapi.XPathNamespaceImpl:java.lang.String getNamespaceURI()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.runtime.BasisLibrary:void copyNodes(org.w3c.dom.NodeList,org.w3c.dom.Document,org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:int addNode(org.w3c.dom.Node,int,int,int)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:int getAttributeNode(int,java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:java.lang.String getNamespaceURI(int)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode:boolean isEqualNode(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode:java.lang.String lookupNamespaceURI(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMManagerDefault:int getDTMHandleFromNode(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:void traverseChildren(java.util.Vector,org.w3c.dom.Node,java.lang.String,java.lang.String,boolean,boolean)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:boolean isEqualNode(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String lookupNamespaceURI(java.lang.String)",
            "org.apache.xml.serializer.utils.AttList:int getIndex(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.utils.DOM2Helper:java.lang.String getNamespaceOfNode(org.w3c.dom.Node)",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.AttList:int getIndex(java.lang.String,java.lang.String)",
            "org.apache.xml.utils.DOM2Helper:java.lang.String getNamespaceOfNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.PrefixResolverDefault:java.lang.String getNamespaceForPrefix(java.lang.String,org.w3c.dom.Node)",
            "org.apache.xml.utils.UnImplNode:boolean isEqualNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.UnImplNode:java.lang.String lookupNamespaceURI(java.lang.String)"
        ]
    },
    "org.apache.xpath.jaxp.JAXPPrefixResolver:java.lang.String getNamespaceForPrefix(java.lang.String,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.utils.QName:void <init>(java.lang.String,org.w3c.dom.Element,org.apache.xml.utils.PrefixResolver,boolean)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String substringData(int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.serializer.utils.AttList:java.lang.String getValue(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.ProcessorKey:void setPropertiesFromAttributes(org.apache.xalan.processor.StylesheetHandler,java.lang.String,org.xml.sax.Attributes,org.apache.xalan.templates.ElemTemplateElement)",
            "org.apache.xalan.processor.ProcessorLRE:void startElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.processor.StylesheetHandler:void checkForFragmentID(org.xml.sax.Attributes)",
            "org.apache.xalan.processor.XSLTElementProcessor:org.xml.sax.Attributes setPropertiesFromAttributes(org.apache.xalan.processor.StylesheetHandler,java.lang.String,org.xml.sax.Attributes,org.apache.xalan.templates.ElemTemplateElement,boolean)",
            "org.apache.xalan.xsltc.compiler.Parser:void checkForSuperfluousAttributes(org.apache.xalan.xsltc.compiler.SyntaxTreeNode,org.xml.sax.Attributes)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.xsltc.runtime.AttributeList:void <init>(org.xml.sax.Attributes)",
            "org.apache.xalan.xsltc.trax.SAX2DOM:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.dtm.ref.DTMDocumentImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.SerializerBase:void addAttributes(org.xml.sax.Attributes)",
            "org.apache.xml.utils.DOMBuilder:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.utils.MutableAttrListImpl:void addAttributes(org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xml.serializer.utils.AttList:java.lang.String getValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.ProcessorExsltFunction:void startElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.processor.StylesheetHandler:void pushSpaceHandling(org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xml.utils.AttList:java.lang.String getValue(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.ProcessorKey:void setPropertiesFromAttributes(org.apache.xalan.processor.StylesheetHandler,java.lang.String,org.xml.sax.Attributes,org.apache.xalan.templates.ElemTemplateElement)",
            "org.apache.xalan.processor.ProcessorLRE:void startElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.processor.StylesheetHandler:void checkForFragmentID(org.xml.sax.Attributes)",
            "org.apache.xalan.processor.XSLTElementProcessor:org.xml.sax.Attributes setPropertiesFromAttributes(org.apache.xalan.processor.StylesheetHandler,java.lang.String,org.xml.sax.Attributes,org.apache.xalan.templates.ElemTemplateElement,boolean)",
            "org.apache.xalan.xsltc.compiler.Parser:void checkForSuperfluousAttributes(org.apache.xalan.xsltc.compiler.SyntaxTreeNode,org.xml.sax.Attributes)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.xsltc.runtime.AttributeList:void <init>(org.xml.sax.Attributes)",
            "org.apache.xalan.xsltc.trax.SAX2DOM:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.dtm.ref.DTMDocumentImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.SerializerBase:void addAttributes(org.xml.sax.Attributes)",
            "org.apache.xml.utils.DOMBuilder:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.utils.MutableAttrListImpl:void addAttributes(org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xml.utils.AttList:java.lang.String getValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.ProcessorExsltFunction:void startElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.processor.StylesheetHandler:void pushSpaceHandling(org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xalan.lib.sql.XConnection:void setError(java.lang.Exception,org.apache.xalan.extensions.ExpressionContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.XConnection:org.apache.xpath.objects.XBooleanStatic connect(org.apache.xalan.extensions.ExpressionContext,java.lang.String)",
            "org.apache.xalan.lib.sql.XConnection:org.apache.xpath.objects.XBooleanStatic connect(org.apache.xalan.extensions.ExpressionContext,java.lang.String,java.lang.String)",
            "org.apache.xalan.lib.sql.XConnection:org.apache.xpath.objects.XBooleanStatic connect(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.Element)",
            "org.apache.xalan.lib.sql.XConnection:org.apache.xpath.objects.XBooleanStatic connect(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.sql.XConnection:org.apache.xpath.objects.XBooleanStatic connect(org.apache.xalan.extensions.ExpressionContext,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.lib.sql.XConnection:org.apache.xpath.objects.XBooleanStatic connect(org.apache.xalan.extensions.ExpressionContext,java.lang.String,java.lang.String,org.w3c.dom.Element)",
            "org.apache.xalan.lib.sql.XConnection:org.apache.xalan.lib.sql.SQLDocument locateSQLDocument(org.apache.xalan.extensions.ExpressionContext,java.lang.Object)"
        ]
    },
    "org.apache.xalan.lib.sql.XConnection:void setError(java.lang.Exception,org.apache.xalan.lib.sql.SQLDocument,java.sql.SQLWarning)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.SQLDocument:void skip(int)",
            "org.apache.xalan.lib.sql.SQLDocument:void extractSQLMetaData(java.sql.ResultSetMetaData)",
            "org.apache.xalan.lib.sql.SQLDocument:boolean addRowToDTMFromResultSet()",
            "org.apache.xalan.lib.sql.SQLDocument:void close(boolean)",
            "org.apache.xalan.lib.sql.XConnection:org.apache.xml.dtm.DTM query(org.apache.xalan.extensions.ExpressionContext,java.lang.String)",
            "org.apache.xalan.lib.sql.XConnection:org.apache.xml.dtm.DTM pquery(org.apache.xalan.extensions.ExpressionContext,java.lang.String,java.lang.String)",
            "org.apache.xalan.lib.sql.XConnection:org.apache.xml.dtm.DTM getError()"
        ]
    },
    "org.apache.xalan.xslt.EnvironmentCheck:void main(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xslt.EnvironmentCheck:boolean writeEnvironmentReport(java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xslt.EnvironmentCheck:boolean checkEnvironment(java.io.PrintWriter)"
        ]
    },
    "org.apache.xalan.xslt.EnvironmentCheck:boolean logFoundJars(java.util.Vector,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xslt.EnvironmentCheck:boolean writeEnvironmentReport(java.util.Hashtable)"
        ]
    },
    "org.apache.xalan.xslt.EnvironmentCheck:void appendEnvironmentReport(org.w3c.dom.Node,org.w3c.dom.Document,java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.Extensions:org.w3c.dom.Node checkEnvironment(org.apache.xalan.extensions.ExpressionContext)"
        ]
    },
    "org.apache.xalan.xslt.EnvironmentCheck:boolean appendFoundJars(org.w3c.dom.Node,org.w3c.dom.Document,java.util.Vector,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xslt.EnvironmentCheck:void appendEnvironmentReport(org.w3c.dom.Node,org.w3c.dom.Document,java.util.Hashtable)"
        ]
    },
    "org.apache.xalan.xslt.EnvironmentCheck:void checkDOMVersion(java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xslt.EnvironmentCheck:java.util.Hashtable getEnvironmentHash()"
        ]
    },
    "org.apache.xalan.xslt.EnvironmentCheck:void checkSAXVersion(java.util.Hashtable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xslt.EnvironmentCheck:java.util.Hashtable getEnvironmentHash()"
        ]
    },
    "org.apache.xalan.xsltc.compiler.util.TypeCheckError:java.lang.String getMessage()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.client.XSLTProcessorApplet:java.lang.String getHtmlText()",
            "org.apache.xalan.client.XSLTProcessorApplet:java.lang.String getTreeAsText(java.lang.String)",
            "org.apache.xalan.client.XSLTProcessorApplet:java.lang.String getSource()",
            "org.apache.xalan.client.XSLTProcessorApplet:java.lang.String processTransformation()",
            "org.apache.xalan.extensions.ExtensionHandlerGeneral:java.lang.Object callFunction(java.lang.String,java.util.Vector,java.lang.Object,org.apache.xalan.extensions.ExpressionContext)",
            "org.apache.xalan.extensions.ExtensionHandlerJavaClass:void processElement(java.lang.String,org.apache.xalan.templates.ElemTemplateElement,org.apache.xalan.transformer.TransformerImpl,org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.lib.sql.DTMDocument:int addElement(int,int,int,int)",
            "org.apache.xalan.lib.sql.DTMDocument:int addAttributeToNode(java.lang.Object,int,int)",
            "org.apache.xalan.lib.sql.DTMDocument:void dumpDTM()",
            "org.apache.xalan.lib.sql.PooledConnection:void close()",
            "org.apache.xalan.processor.ProcessorInclude:void startElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.processor.ProcessorInclude:void parse(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.processor.ProcessorOutputElem:void startElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.processor.StylesheetHandler:void pushSpaceHandling(org.xml.sax.Attributes)",
            "org.apache.xalan.processor.TransformerFactoryImpl:javax.xml.transform.Templates newTemplates(javax.xml.transform.Source)",
            "org.apache.xalan.templates.FuncDocument:int getDoc(org.apache.xpath.XPathContext,int,java.lang.String,java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void transform(javax.xml.transform.Source,javax.xml.transform.Result)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void startDocument()",
            "org.apache.xalan.transformer.TransformerImpl:void fatalError(java.lang.Throwable)",
            "org.apache.xalan.transformer.TransformerImpl:void transformNode(int)",
            "org.apache.xalan.transformer.TransformerImpl:void run()",
            "org.apache.xalan.xslt.Process:void main(java.lang.String[])",
            "org.apache.xalan.xsltc.cmdline.Transform:void doTransform()",
            "org.apache.xalan.xsltc.compiler.util.ErrorMsg:void <init>(java.lang.Throwable)",
            "org.apache.xalan.xsltc.compiler.Parser:org.apache.xalan.xsltc.compiler.SyntaxTreeNode makeInstance(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:void copyNodes(org.w3c.dom.NodeList,org.w3c.dom.Document,org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator nodeList2Iterator(org.w3c.dom.NodeList,org.apache.xalan.xsltc.Translet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:javax.xml.transform.Templates newTemplates(javax.xml.transform.Source)",
            "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:void error(javax.xml.transform.TransformerException)",
            "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:void fatalError(javax.xml.transform.TransformerException)",
            "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:void warning(javax.xml.transform.TransformerException)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void setResult(javax.xml.transform.Result)",
            "org.apache.xalan.xsltc.trax.TransformerImpl:org.apache.xalan.xsltc.DOM getDOM(javax.xml.transform.Source)",
            "org.apache.xalan.xsltc.trax.TransformerImpl:void transform(javax.xml.transform.Source,org.apache.xml.serializer.SerializationHandler,java.lang.String)",
            "org.apache.xalan.xsltc.trax.TransformerImpl:org.apache.xalan.xsltc.DOM retrieveDocument(java.lang.String,java.lang.String,org.apache.xalan.xsltc.Translet)",
            "org.apache.xalan.xsltc.trax.TransformerImpl:void error(javax.xml.transform.TransformerException)",
            "org.apache.xalan.xsltc.trax.TransformerImpl:void fatalError(javax.xml.transform.TransformerException)",
            "org.apache.xalan.xsltc.trax.TransformerImpl:void warning(javax.xml.transform.TransformerException)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:void dumpDTM(java.io.OutputStream)",
            "org.apache.xml.dtm.DTMException:void <init>(java.lang.Throwable)",
            "org.apache.xml.dtm.DTMException:void <init>(java.lang.String,java.lang.Throwable)",
            "org.apache.xml.serializer.utils.WrappedRuntimeException:void <init>(java.lang.Exception)",
            "org.apache.xml.utils.ListingErrorHandler:void logExceptionLocation(java.io.PrintWriter,java.lang.Throwable)",
            "org.apache.xml.utils.ListingErrorHandler:void logSourceLine(java.io.PrintWriter,javax.xml.transform.SourceLocator)",
            "org.apache.xml.utils.WrappedRuntimeException:void <init>(java.lang.Exception)",
            "org.apache.xpath.axes.FilterExprWalker:short acceptNode(int)",
            "org.apache.xpath.axes.MatchPatternIterator:short acceptNode(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.PredicatedNodeTest:short acceptNode(int)",
            "org.apache.xpath.axes.UnionChildIterator:short acceptNode(int)",
            "org.apache.xpath.compiler.FunctionTable:org.apache.xpath.functions.Function getFunction(int)",
            "org.apache.xpath.domapi.XPathResultImpl:double getNumberValue()",
            "org.apache.xpath.domapi.XPathResultImpl:java.lang.String getStringValue()",
            "org.apache.xpath.domapi.XPathResultImpl:boolean getBooleanValue()",
            "org.apache.xpath.domapi.XPathResultImpl:org.w3c.dom.Node getSingleNodeValue()",
            "org.apache.xpath.objects.XNodeSet:org.apache.xml.dtm.DTMIterator iter()",
            "org.apache.xpath.objects.XNodeSet:org.apache.xpath.objects.XObject getFresh()",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.SourceTreeManager:int getSourceTree(java.lang.String,java.lang.String,javax.xml.transform.SourceLocator,org.apache.xpath.XPathContext)",
            "org.apache.xpath.SourceTreeManager:int parseToNode(javax.xml.transform.Source,javax.xml.transform.SourceLocator,org.apache.xpath.XPathContext)",
            "org.apache.xpath.XPath:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPath:boolean bool(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPathException:java.lang.String getMessage()"
        ]
    },
    "org.apache.xalan.xsltc.compiler.CompilerException:void <init>(java.lang.Exception)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.dom.AbsoluteIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.FilterIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.NthIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator:org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator cloneIterator()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator referenceToNodeSet(java.lang.Object)",
            "org.apache.xpath.axes.OneStepIterator:java.lang.Object clone()"
        ]
    },
    "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.FilterIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.NthIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator:org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator cloneIterator()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator referenceToNodeSet(java.lang.Object)",
            "org.apache.xpath.axes.OneStepIterator:java.lang.Object clone()"
        ]
    },
    "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.FilterIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.NthIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator:org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator cloneIterator()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator referenceToNodeSet(java.lang.Object)",
            "org.apache.xpath.axes.OneStepIterator:java.lang.Object clone()"
        ]
    },
    "org.apache.xalan.xsltc.dom.FilterIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.FilterIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.NthIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator:org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator cloneIterator()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator referenceToNodeSet(java.lang.Object)",
            "org.apache.xpath.axes.OneStepIterator:java.lang.Object clone()"
        ]
    },
    "org.apache.xalan.xsltc.dom.ForwardPositionIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.FilterIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.NthIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator:org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator cloneIterator()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator referenceToNodeSet(java.lang.Object)",
            "org.apache.xpath.axes.OneStepIterator:java.lang.Object clone()"
        ]
    },
    "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.FilterIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.NthIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator:org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator cloneIterator()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator referenceToNodeSet(java.lang.Object)",
            "org.apache.xpath.axes.OneStepIterator:java.lang.Object clone()"
        ]
    },
    "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.FilterIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.NthIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator:org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator cloneIterator()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator referenceToNodeSet(java.lang.Object)",
            "org.apache.xpath.axes.OneStepIterator:java.lang.Object clone()"
        ]
    },
    "org.apache.xalan.xsltc.dom.NodeIteratorBase:org.apache.xalan.xsltc.NodeIterator cloneIterator()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.dom.NthIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.FilterIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.NthIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator:org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator cloneIterator()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator referenceToNodeSet(java.lang.Object)",
            "org.apache.xpath.axes.OneStepIterator:java.lang.Object clone()"
        ]
    },
    "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.FilterIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.NthIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator:org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator cloneIterator()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator referenceToNodeSet(java.lang.Object)",
            "org.apache.xpath.axes.OneStepIterator:java.lang.Object clone()"
        ]
    },
    "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.FilterIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.NthIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator:org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator cloneIterator()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator referenceToNodeSet(java.lang.Object)",
            "org.apache.xpath.axes.OneStepIterator:java.lang.Object clone()"
        ]
    },
    "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.FilterIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.NthIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator:org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator cloneIterator()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator referenceToNodeSet(java.lang.Object)",
            "org.apache.xpath.axes.OneStepIterator:java.lang.Object clone()"
        ]
    },
    "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.FilterIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.NthIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator:org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator cloneIterator()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator referenceToNodeSet(java.lang.Object)",
            "org.apache.xpath.axes.OneStepIterator:java.lang.Object clone()"
        ]
    },
    "org.apache.xalan.xsltc.dom.UnionIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.FilterIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.NthIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator:org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator cloneIterator()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator referenceToNodeSet(java.lang.Object)",
            "org.apache.xpath.axes.OneStepIterator:java.lang.Object clone()"
        ]
    },
    "org.apache.xalan.xsltc.runtime.output.WriterOutputBuffer:java.lang.String close()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.runtime.output.WriterOutputBuffer:org.apache.xalan.xsltc.runtime.output.OutputBuffer append(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.runtime.output.WriterOutputBuffer:org.apache.xalan.xsltc.runtime.output.OutputBuffer append(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.runtime.output.WriterOutputBuffer:org.apache.xalan.xsltc.runtime.output.OutputBuffer append(char)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.trax.TrAXFilter:void createParent()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.trax.TrAXFilter:void setContentHandler(org.xml.sax.ContentHandler)"
        ]
    },
    "org.apache.xalan.xsltc.TransletException:void <init>(java.lang.Exception)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator documentF(java.lang.Object,org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator documentF(java.lang.Object,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator document(java.lang.String,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM,boolean)",
            "org.apache.xalan.xsltc.dom.NodeSortRecord:void initialize(int,int,org.apache.xalan.xsltc.DOM,org.apache.xalan.xsltc.dom.SortSettings)",
            "org.apache.xalan.xsltc.dom.NodeSortRecordFactory:void <init>(org.apache.xalan.xsltc.DOM,java.lang.String,org.apache.xalan.xsltc.Translet,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[])",
            "org.apache.xalan.xsltc.dom.SAXImpl:void characters(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(int,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void copyPI(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SAXImpl:java.lang.String shallowCopy(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SimpleResultTreeImpl:void characters(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.runtime.AbstractTranslet:org.apache.xml.serializer.SerializationHandler openOutputHandler(java.lang.String,boolean)",
            "org.apache.xalan.xsltc.runtime.AbstractTranslet:void characters(java.lang.String,org.apache.xml.serializer.SerializationHandler)"
        ]
    },
    "org.apache.xml.serializer.CharInfo:void <init>(java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.CharInfo:void <init>(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.CharInfo:void <init>(java.lang.String,java.lang.String,boolean,org.apache.xml.serializer.CharInfo$1)"
        ]
    },
    "org.apache.xml.utils.XMLReaderManager:org.xml.sax.XMLReader getXMLReader()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerIdentityImpl:void transform(javax.xml.transform.Source,javax.xml.transform.Result)",
            "org.apache.xalan.xsltc.trax.TrAXFilter:void parse(org.xml.sax.InputSource)",
            "org.apache.xalan.xsltc.trax.TransformerImpl:void transformIdentity(javax.xml.transform.Source,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xml.dtm.ref.DTMManagerDefault:org.xml.sax.XMLReader getXMLReader(javax.xml.transform.Source)"
        ]
    },
    "org.apache.xpath.jaxp.XPathImpl:javax.xml.parsers.DocumentBuilder getParser()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.jaxp.XPathImpl:org.w3c.dom.Document getDummyDocument()",
            "org.apache.xpath.jaxp.XPathImpl:java.lang.Object evaluate(java.lang.String,org.xml.sax.InputSource,javax.xml.namespace.QName)"
        ]
    },
    "org.apache.xpath.SourceTreeManager:org.xml.sax.XMLReader getXMLReader(javax.xml.transform.Source,javax.xml.transform.SourceLocator)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void displayContents(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.Attribute:void display(int)",
            "org.apache.xalan.xsltc.compiler.CallTemplate:void display(int)",
            "org.apache.xalan.xsltc.compiler.Choose:void display(int)",
            "org.apache.xalan.xsltc.compiler.Copy:void display(int)",
            "org.apache.xalan.xsltc.compiler.ForEach:void display(int)",
            "org.apache.xalan.xsltc.compiler.If:void display(int)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void display(int)",
            "org.apache.xalan.xsltc.compiler.Otherwise:void display(int)",
            "org.apache.xalan.xsltc.compiler.Param:void display(int)",
            "org.apache.xalan.xsltc.compiler.Stylesheet:void display(int)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void display(int)",
            "org.apache.xalan.xsltc.compiler.Template:void display(int)",
            "org.apache.xalan.xsltc.compiler.TopLevelElement:void display(int)",
            "org.apache.xalan.xsltc.compiler.UnsupportedElement:void display(int)",
            "org.apache.xalan.xsltc.compiler.VariableBase:void display(int)",
            "org.apache.xalan.xsltc.compiler.When:void display(int)",
            "org.apache.xalan.xsltc.compiler.WithParam:void display(int)",
            "org.apache.xalan.xsltc.compiler.XslAttribute:void display(int)",
            "org.apache.xalan.xsltc.compiler.XslElement:void display(int)"
        ]
    },
    "org.apache.xalan.lib.Extensions:org.w3c.dom.Node checkEnvironment(org.apache.xalan.extensions.ExpressionContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xpath.axes.ChildTestIterator:void <init>(org.apache.xpath.compiler.Compiler,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.AttributeIterator:void <init>(org.apache.xpath.compiler.Compiler,int,int)",
            "org.apache.xpath.axes.OneStepIterator:void <init>(org.apache.xpath.compiler.Compiler,int,int)",
            "org.apache.xpath.axes.OneStepIteratorForward:void <init>(org.apache.xpath.compiler.Compiler,int,int)",
            "org.apache.xpath.axes.WalkerFactory:org.apache.xml.dtm.DTMIterator newDTMIterator(org.apache.xpath.compiler.Compiler,int,boolean)"
        ]
    },
    "org.apache.xpath.axes.WalkerFactory:org.apache.xml.dtm.DTMIterator newDTMIterator(org.apache.xpath.compiler.Compiler,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.UnionPathIterator:org.apache.xpath.axes.LocPathIterator createDTMIterator(org.apache.xpath.compiler.Compiler,int)",
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression locationPath(int)"
        ]
    },
    "org.apache.xpath.axes.WalkerFactory:org.apache.xpath.patterns.StepPattern loadSteps(org.apache.xpath.axes.MatchPatternIterator,org.apache.xpath.compiler.Compiler,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.MatchPatternIterator:void <init>(org.apache.xpath.compiler.Compiler,int,int)"
        ]
    },
    "org.apache.xpath.axes.WalkerFactory:org.apache.xpath.axes.AxesWalker loadOneWalker(org.apache.xpath.axes.WalkingIterator,org.apache.xpath.compiler.Compiler,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xpath.axes.WalkerFactory:org.apache.xpath.axes.AxesWalker loadWalkers(org.apache.xpath.axes.WalkingIterator,org.apache.xpath.compiler.Compiler,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.WalkingIterator:void <init>(org.apache.xpath.compiler.Compiler,int,int,boolean)"
        ]
    },
    "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression locationPathPattern(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression compile(int)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.CastExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void <init>(org.apache.xalan.xsltc.compiler.Expression,org.apache.xalan.xsltc.compiler.util.Type)",
            "org.apache.xalan.xsltc.compiler.CastExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CopyOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ForEach:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:org.apache.xalan.xsltc.compiler.util.Type typeCheckExternal(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:java.util.Vector typeCheckArgs(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.If:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Key:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LangCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LogicalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NameBase:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Number:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Param:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Predicate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Sort:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Sort:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Step:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StringCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ValueOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Variable:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.When:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.WithParam:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.FunctionCall:org.apache.xalan.xsltc.compiler.util.Type typeCheckConstructor(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.FunctionCall:org.apache.xalan.xsltc.compiler.util.Type typeCheckExternal(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.FunctionCall:org.apache.xalan.xsltc.compiler.util.Type typeCheckExternal(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.FunctionCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.dom.KeyIndex:void add(java.lang.Object,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.runtime.AbstractTranslet:void buildKeyIndex(java.lang.String,int,java.lang.Object)"
        ]
    },
    "org.apache.xalan.xsltc.dom.KeyIndex:void lookupId(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.dom.KeyIndex:void lookupKey(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.dom.KeyIndex:int containsID(int,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.dom.KeyIndex:int containsKey(int,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.dom.MultiDOM:int getDocumentMask(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator document(java.lang.String,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM,boolean)"
        ]
    },
    "org.apache.xalan.xsltc.dom.MultiDOM:org.apache.xalan.xsltc.DOM getDOMAdapter(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator document(java.lang.String,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM,boolean)"
        ]
    },
    "org.apache.xalan.xsltc.dom.SAXImpl:short[] getNamespaceMapping(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMAdapter:short[] getNSMapping()"
        ]
    },
    "org.apache.xalan.xsltc.dom.SAXImpl:short[] getReverseNamespaceMapping(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMAdapter:short[] getNSReverse()"
        ]
    },
    "org.apache.xalan.xsltc.dom.SAXImpl:int getElementById(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:int getElementById(java.lang.String)",
            "org.apache.xalan.xsltc.dom.KeyIndex:org.apache.xalan.xsltc.util.IntegerArray getDOMNodeById(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.Element getElementById(java.lang.String)",
            "org.apache.xpath.functions.FuncId:org.apache.xml.utils.StringVector getNodesByID(org.apache.xpath.XPathContext,int,java.lang.String,org.apache.xml.utils.StringVector,org.apache.xpath.NodeSetDTM,boolean)"
        ]
    },
    "org.apache.xalan.xsltc.dom.SAXImpl:void definePrefixAndUri(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.SAXImpl:void startDocument()",
            "org.apache.xalan.xsltc.dom.SAXImpl:void startPrefixMapping(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xalan.xsltc.runtime.AbstractTranslet:java.text.DecimalFormat getDecimalFormat(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.runtime.AbstractTranslet:void buildIDIndex(org.apache.xalan.xsltc.DOM)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.runtime.AbstractTranslet:void prepassDocument(org.apache.xalan.xsltc.DOM)"
        ]
    },
    "org.apache.xalan.xsltc.runtime.AbstractTranslet:void buildKeyIndex(java.lang.String,int,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.runtime.AbstractTranslet:void buildKeyIndex(java.lang.String,org.apache.xalan.xsltc.DOM)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.runtime.AbstractTranslet:org.apache.xalan.xsltc.dom.KeyIndex getKeyIndex(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.runtime.AbstractTranslet:java.lang.Class getAuxiliaryClass(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.runtime.AttributeList:java.lang.String getValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.ProcessorExsltFunction:void startElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.processor.StylesheetHandler:void pushSpaceHandling(org.xml.sax.Attributes)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:java.lang.String getAttribute(java.lang.String)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:boolean hasAttribute(java.lang.String)",
            "org.apache.xalan.xsltc.runtime.AttributeList:java.lang.String getValue(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xalan.xsltc.runtime.AttributeList:void add(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void addAttribute(java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:void addAttribute(java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.runtime.AttributeList:void <init>(org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xalan.xsltc.trax.TransformerImpl:java.lang.Object getParameter(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.dom.KeyIndex:org.apache.xalan.xsltc.util.IntegerArray getDOMNodeById(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.KeyIndex:void lookupId(java.lang.Object)",
            "org.apache.xalan.xsltc.dom.KeyIndex:int containsID(int,java.lang.Object)"
        ]
    },
    "org.apache.xalan.xsltc.dom.MultiDOM:int addDOMAdapter(org.apache.xalan.xsltc.dom.DOMAdapter,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.MultiDOM:void <init>(org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.MultiDOM:int addDOMAdapter(org.apache.xalan.xsltc.dom.DOMAdapter)"
        ]
    },
    "org.apache.xalan.xsltc.dom.SAXImpl:void startDocument()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void startDocument()",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void flushStartDoc()",
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:void prepareNewDOM()",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse()",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startDocument()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void startDocument()",
            "org.apache.xml.serializer.ToSAXHandler:void startDocumentInternal()",
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)"
        ]
    },
    "org.apache.xalan.xsltc.dom.SAXImpl:org.apache.xalan.xsltc.runtime.Hashtable getElementsWithIDs()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:org.apache.xalan.xsltc.runtime.Hashtable getElementsWithIDs()",
            "org.apache.xalan.xsltc.dom.DOMAdapter:org.apache.xalan.xsltc.runtime.Hashtable getElementsWithIDs()",
            "org.apache.xalan.xsltc.runtime.AbstractTranslet:void buildIDIndex(org.apache.xalan.xsltc.DOM)"
        ]
    },
    "org.apache.xalan.xsltc.runtime.AbstractTranslet:void addDecimalFormat(java.lang.String,java.text.DecimalFormatSymbols)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.runtime.AbstractTranslet:void addAuxiliaryClass(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.trax.TemplatesImpl:void defineTransletClasses()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.trax.TemplatesImpl:java.lang.Class[] getTransletClasses()",
            "org.apache.xalan.xsltc.trax.TemplatesImpl:int getTransletIndex()",
            "org.apache.xalan.xsltc.trax.TemplatesImpl:org.apache.xalan.xsltc.Translet getTransletInstance()"
        ]
    },
    "org.apache.xalan.xsltc.trax.TransformerImpl:void setParameter(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.client.XSLTProcessorApplet:java.lang.String processTransformation()",
            "org.apache.xalan.lib.PipeDocument:void pipeDocument(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)",
            "org.apache.xalan.xslt.Process:void main(java.lang.String[])"
        ]
    },
    "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:int getIdForNamespace(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void processingInstruction(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void comment(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void comment(char[],int,int)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void comment(char[],int,int)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void comment(char[],int,int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void comment(char[],int,int)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void comment(char[],int,int)",
            "org.apache.xml.serializer.ToSAXHandler:void comment(java.lang.String)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void comment(char[],int,int)",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.FastStringBuffer:void sendSAXComment(org.xml.sax.ext.LexicalHandler,int,int)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xpath.objects.XString:void dispatchAsComment(org.xml.sax.ext.LexicalHandler)",
            "org.apache.xpath.objects.XStringForChars:void dispatchAsComment(org.xml.sax.ext.LexicalHandler)"
        ]
    },
    "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void processingInstruction(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDocumentImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void closeStartTag()",
            "org.apache.xml.serializer.ToXMLSAXHandler:void closeStartTag()",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDocumentImpl:int getAttributeNode(int,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.DTMNodeProxy:boolean hasAttribute(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:boolean hasAttributeNS(java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getAttributeNS(java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.Attr getAttributeNodeNS(java.lang.String,java.lang.String)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDocumentImpl:int getExpandedTypeID(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemApplyTemplates:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xpath.patterns.StepPattern:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDocumentImpl:int getExpandedTypeID(java.lang.String,java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.DescendantIterator:void setRoot(int,java.lang.Object)",
            "org.apache.xpath.axes.DescendantIterator:int asNode(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDocumentImpl:void appendNSDeclaration(int,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.DTMDocumentImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMSafeStringPool:int stringToIndex(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:int getIdForNamespace(java.lang.String)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void comment(char[],int,int)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMDocumentImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.dtm.ref.DTMDocumentImpl:int getAttributeNode(int,java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMDocumentImpl:int getExpandedTypeID(int)",
            "org.apache.xml.dtm.ref.DTMDocumentImpl:int getExpandedTypeID(java.lang.String,java.lang.String,int)",
            "org.apache.xml.dtm.ref.DTMDocumentImpl:void appendNSDeclaration(int,int,boolean)",
            "org.apache.xml.dtm.ref.DTMSafeStringPool:void main(java.lang.String[])",
            "org.apache.xml.dtm.ref.DTMStringPool:void <init>(int)",
            "org.apache.xml.dtm.ref.DTMStringPool:void main(java.lang.String[])"
        ]
    },
    "org.apache.xml.dtm.ref.DTMStringPool:void <init>(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void <init>(org.apache.xml.dtm.DTMManager,javax.xml.transform.Source,int,org.apache.xml.dtm.DTMWSFilter,org.apache.xml.utils.XMLStringFactory,boolean,int,boolean,boolean)",
            "org.apache.xml.dtm.ref.DTMStringPool:void <init>()"
        ]
    },
    "org.apache.xml.dtm.ref.DTMStringPool:void main(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.utils.DOM2Helper:org.w3c.dom.Element getElementByID(java.lang.String,org.w3c.dom.Document)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$AttributeTraverser:int next(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$FollowingIterator:int next()",
            "org.apache.xml.dtm.ref.DTMDefaultBaseIterators$TypedFollowingIterator:int next()",
            "org.apache.xml.dtm.DTMAxisTraverser:int first(int)",
            "org.apache.xpath.axes.AxesWalker:int getNextNode()",
            "org.apache.xpath.axes.ChildTestIterator:int getNextNode()",
            "org.apache.xpath.axes.DescendantIterator:int nextNode()",
            "org.apache.xpath.axes.MatchPatternIterator:int getNextNode()",
            "org.apache.xpath.axes.OneStepIteratorForward:int getNextNode()",
            "org.apache.xpath.patterns.ContextMatchStepPattern:org.apache.xpath.objects.XObject executeRelativePathPattern(org.apache.xpath.XPathContext,org.apache.xpath.patterns.StepPattern)",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.patterns.StepPattern:org.apache.xpath.objects.XObject executeRelativePathPattern(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMNamedNodeMap:int getLength()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.XConnection:org.apache.xpath.objects.XBooleanStatic connect(org.apache.xalan.extensions.ExpressionContext,java.lang.String,java.lang.String,org.w3c.dom.Element)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:void copyNodes(org.w3c.dom.NodeList,org.w3c.dom.Document,org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:void <init>(org.apache.xml.dtm.DTMManager,javax.xml.transform.dom.DOMSource,int,org.apache.xml.dtm.DTMWSFilter,org.apache.xml.utils.XMLStringFactory,boolean)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:boolean nextNode()",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode:java.lang.String lookupNamespaceURI(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String lookupNamespaceURI(java.lang.String)",
            "org.apache.xml.serializer.utils.AttList:void <init>(org.w3c.dom.NamedNodeMap,org.apache.xml.serializer.utils.DOM2Helper)",
            "org.apache.xml.serializer.utils.AttList:int getLength()",
            "org.apache.xml.serializer.utils.AttList:int getIndex(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.utils.AttList:int getIndex(java.lang.String)",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.serializer.TreeWalker:void endNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.AttList:void <init>(org.w3c.dom.NamedNodeMap,org.apache.xml.utils.DOMHelper)",
            "org.apache.xml.utils.AttList:int getLength()",
            "org.apache.xml.utils.AttList:int getIndex(java.lang.String,java.lang.String)",
            "org.apache.xml.utils.AttList:int getIndex(java.lang.String)",
            "org.apache.xml.utils.DOMHelper:boolean isNodeAfterSibling(org.w3c.dom.Node,org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xml.utils.DOMHelper:java.lang.String getNamespaceOfNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.PrefixResolverDefault:java.lang.String getNamespaceForPrefix(java.lang.String,org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void endNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.UnImplNode:java.lang.String lookupNamespaceURI(java.lang.String)",
            "org.apache.xpath.jaxp.JAXPPrefixResolver:java.lang.String getNamespaceForPrefix(java.lang.String,org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMNamedNodeMap:org.w3c.dom.Node getNamedItem(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.XConnection:void initFromElement(org.w3c.dom.Element)",
            "org.apache.xalan.lib.sql.XConnection:void addParameterFromElement(org.w3c.dom.Element)",
            "org.apache.xalan.lib.sql.XConnection:void addParameters(org.w3c.dom.Element)",
            "org.apache.xalan.xsltc.dom.SAXImpl:java.lang.String getUnparsedEntityURI(java.lang.String)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:java.lang.String getUnparsedEntityURI(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getAttribute(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.Attr getAttributeNode(java.lang.String)",
            "org.apache.xml.serializer.utils.AttList:java.lang.String getValue(java.lang.String)",
            "org.apache.xml.utils.AttList:java.lang.String getValue(java.lang.String)",
            "org.apache.xml.utils.DOMHelper:java.lang.String getUnparsedEntityURI(java.lang.String,org.w3c.dom.Document)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMNamedNodeMap:org.w3c.dom.Node item(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.XConnection:org.apache.xpath.objects.XBooleanStatic connect(org.apache.xalan.extensions.ExpressionContext,java.lang.String,java.lang.String,org.w3c.dom.Element)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:void copyNodes(org.w3c.dom.NodeList,org.w3c.dom.Document,org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:void <init>(org.apache.xml.dtm.DTMManager,javax.xml.transform.dom.DOMSource,int,org.apache.xml.dtm.DTMWSFilter,org.apache.xml.utils.XMLStringFactory,boolean)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:boolean nextNode()",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode:java.lang.String lookupNamespaceURI(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String lookupNamespaceURI(java.lang.String)",
            "org.apache.xml.serializer.utils.AttList:java.lang.String getURI(int)",
            "org.apache.xml.serializer.utils.AttList:java.lang.String getLocalName(int)",
            "org.apache.xml.serializer.utils.AttList:java.lang.String getQName(int)",
            "org.apache.xml.serializer.utils.AttList:java.lang.String getValue(int)",
            "org.apache.xml.serializer.utils.AttList:int getIndex(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.utils.AttList:int getIndex(java.lang.String)",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.serializer.TreeWalker:void endNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.AttList:java.lang.String getURI(int)",
            "org.apache.xml.utils.AttList:java.lang.String getLocalName(int)",
            "org.apache.xml.utils.AttList:java.lang.String getQName(int)",
            "org.apache.xml.utils.AttList:java.lang.String getValue(int)",
            "org.apache.xml.utils.AttList:int getIndex(java.lang.String,java.lang.String)",
            "org.apache.xml.utils.AttList:int getIndex(java.lang.String)",
            "org.apache.xml.utils.DOMHelper:boolean isNodeAfterSibling(org.w3c.dom.Node,org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xml.utils.DOMHelper:java.lang.String getNamespaceOfNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.PrefixResolverDefault:java.lang.String getNamespaceForPrefix(java.lang.String,org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void endNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.UnImplNode:java.lang.String lookupNamespaceURI(java.lang.String)",
            "org.apache.xpath.jaxp.JAXPPrefixResolver:java.lang.String getNamespaceForPrefix(java.lang.String,org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMNodeProxy:boolean hasAttributes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.runtime.BasisLibrary:void copyNodes(org.w3c.dom.NodeList,org.w3c.dom.Document,org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String lookupNamespaceURI(java.lang.String)",
            "org.apache.xpath.domapi.XPathNamespaceImpl:boolean hasAttributes()"
        ]
    },
    "org.apache.xpath.axes.AttributeIterator:int getNextNode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.BasicTestIterator:int nextNode()"
        ]
    },
    "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:int getNextAttribute(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.serialize.SerializerUtils:void addAttributes(org.apache.xml.serializer.SerializationHandler,int)",
            "org.apache.xalan.transformer.TreeWalker2Result:void startNode(int)",
            "org.apache.xml.dtm.ref.DTMNamedNodeMap:int getLength()",
            "org.apache.xml.dtm.ref.DTMNamedNodeMap:org.w3c.dom.Node getNamedItem(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNamedNodeMap:org.w3c.dom.Node item(int)",
            "org.apache.xml.dtm.ref.DTMNamedNodeMap:org.w3c.dom.Node getNamedItemNS(java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xpath.axes.AttributeIterator:int getNextNode()"
        ]
    },
    "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceAttributeIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DOMAdapter:org.apache.xml.dtm.DTMAxisIterator getChildren(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.NthIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xpath.axes.OneStepIterator:void setRoot(int,java.lang.Object)",
            "org.apache.xpath.axes.ReverseAxesWalker:void setRoot(int)",
            "org.apache.xpath.objects.XObjectFactory:org.apache.xpath.objects.XObject create(java.lang.Object,org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceAttributeIterator:int next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:int next()",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:int getNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:int next()",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:int next()",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator documentF(java.lang.Object,org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator document(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl:org.w3c.dom.Node makeNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SimpleResultTreeImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator:int step()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double sumF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double numberF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean booleanF(java.lang.Object)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String namespace_uriF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(int,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,double,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(java.lang.Object,java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String referenceToString(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator getSingleNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:org.w3c.dom.Node item(int)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:int getLength()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getLast()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getNodeByPosition(int)",
            "org.apache.xpath.axes.OneStepIterator:int getNextNode()",
            "org.apache.xpath.axes.ReverseAxesWalker:int getNextNode()"
        ]
    },
    "org.apache.xalan.xsltc.dom.SAXImpl:java.lang.String lookupNamespace(int,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:java.lang.String lookupNamespace(int,java.lang.String)",
            "org.apache.xalan.xsltc.dom.DOMAdapter:java.lang.String lookupNamespace(int,java.lang.String)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String startXslElement(java.lang.String,java.lang.String,org.apache.xml.serializer.SerializationHandler,org.apache.xalan.xsltc.DOM,int)"
        ]
    },
    "org.apache.xalan.xsltc.dom.SAXImpl$TypedNamespaceIterator:int next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:int next()",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:int getNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:int next()",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:int next()",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator documentF(java.lang.Object,org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator document(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl:java.lang.String lookupNamespace(int,java.lang.String)",
            "org.apache.xalan.xsltc.dom.SAXImpl:org.w3c.dom.Node makeNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SimpleResultTreeImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator:int step()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double sumF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double numberF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean booleanF(java.lang.Object)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String namespace_uriF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(int,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,double,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(java.lang.Object,java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String referenceToString(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator getSingleNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:org.w3c.dom.Node item(int)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:int getLength()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getLast()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getNodeByPosition(int)",
            "org.apache.xpath.axes.OneStepIterator:int getNextNode()",
            "org.apache.xpath.axes.ReverseAxesWalker:int getNextNode()"
        ]
    },
    "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:int getAttributeNode(int,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.DTMNodeProxy:boolean hasAttribute(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:boolean hasAttributeNS(java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getAttributeNS(java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.Attr getAttributeNodeNS(java.lang.String,java.lang.String)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xalan.xsltc.trax.DOM2SAX:java.lang.String getLocalName(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:java.lang.String getLocalName(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.serialize.SerializerUtils:void addAttribute(org.apache.xml.serializer.SerializationHandler,int)",
            "org.apache.xalan.templates.ElemCopy:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.TemplateList:org.apache.xalan.templates.TemplateSubPatternAssociation getHead(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.templates.TemplateList:org.apache.xalan.templates.ElemTemplate getTemplateFast(org.apache.xpath.XPathContext,int,int,org.apache.xml.utils.QName,int,boolean,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.transformer.ClonerToResultTree:void cloneToResultTree(int,int,org.apache.xml.dtm.DTM,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.transformer.TreeWalker2Result:void startNode(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:void dumpDTM(java.io.OutputStream)",
            "org.apache.xml.dtm.ref.DTMNamedNodeMap:org.w3c.dom.Node getNamedItemNS(java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getLocalName()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)",
            "org.apache.xpath.functions.FuncLocalPart:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.NodeTest:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.patterns.NodeTest:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)"
        ]
    },
    "org.apache.xml.serializer.utils.AttList:int getIndex(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.serializer.utils.DOM2Helper:java.lang.String getLocalNameOfNode(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.utils.AttList:java.lang.String getLocalName(int)",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.serializer.TreeWalker:void endNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.utils.AttList:int getIndex(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.utils.DOM2Helper:java.lang.String getLocalNameOfNode(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.utils.AttList:java.lang.String getLocalName(int)",
            "org.apache.xml.utils.DOMHelper:java.lang.String getExpandedElementName(org.w3c.dom.Element)",
            "org.apache.xml.utils.DOMHelper:java.lang.String getExpandedAttributeName(org.w3c.dom.Attr)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void endNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xalan.templates.ElemNumber$MyPrefixResolver:java.lang.String getNamespaceForPrefix(java.lang.String,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.utils.QName:void <init>(java.lang.String,org.w3c.dom.Element,org.apache.xml.utils.PrefixResolver,boolean)"
        ]
    },
    "org.apache.xml.utils.QName:void <init>(java.lang.String,org.apache.xml.utils.PrefixResolver,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.XSLTAttributeDef:java.lang.Object processENUM_OR_PQNAME(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)",
            "org.apache.xalan.processor.XSLTAttributeDef:java.lang.Object processQNAME(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)",
            "org.apache.xml.utils.QName:void <init>(java.lang.String,org.apache.xml.utils.PrefixResolver)"
        ]
    },
    "org.apache.xpath.compiler.Lexer:int mapNSTokens(java.lang.String,int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.Lexer:void tokenize(java.lang.String,java.util.Vector)"
        ]
    },
    "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:int getNSType(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMAdapter:int getNamespaceType(int)",
            "org.apache.xalan.xsltc.dom.DOMAdapter:int getNSType(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM:int getNSType(int)"
        ]
    },
    "org.apache.xalan.xsltc.dom.DOMAdapter:int getNamespaceType(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.MultiDOM:int getNamespaceType(int)"
        ]
    },
    "org.apache.xalan.xsltc.dom.DOMAdapter:int getNSType(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMAdapter:int getNamespaceType(int)",
            "org.apache.xalan.xsltc.dom.DOMAdapter:int getNSType(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM:int getNSType(int)"
        ]
    },
    "org.apache.xalan.xsltc.dom.MultiDOM:int getNSType(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMAdapter:int getNamespaceType(int)",
            "org.apache.xalan.xsltc.dom.DOMAdapter:int getNSType(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM:int getNSType(int)"
        ]
    },
    "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:java.lang.String getNamespaceName(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMAdapter:java.lang.String getNamespaceName(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM:java.lang.String getNamespaceName(int)"
        ]
    },
    "org.apache.xalan.xsltc.dom.DOMAdapter:java.lang.String getNamespaceName(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMAdapter:java.lang.String getNamespaceName(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM:java.lang.String getNamespaceName(int)"
        ]
    },
    "org.apache.xalan.xsltc.dom.MultiDOM:java.lang.String getNamespaceName(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMAdapter:java.lang.String getNamespaceName(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM:java.lang.String getNamespaceName(int)"
        ]
    },
    "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:java.lang.String getNamespaceURI(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.serialize.SerializerUtils:void addAttribute(org.apache.xml.serializer.SerializationHandler,int)",
            "org.apache.xalan.serialize.SerializerUtils:void outputResultTreeFragment(org.apache.xml.serializer.SerializationHandler,org.apache.xpath.objects.XObject,org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.ElemCopy:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemNumber$MyPrefixResolver:java.lang.String getNamespaceForPrefix(java.lang.String)",
            "org.apache.xalan.templates.ElemNumber:org.apache.xpath.XPath getCountMatchPattern(org.apache.xpath.XPathContext,int)",
            "org.apache.xalan.transformer.ClonerToResultTree:void cloneToResultTree(int,int,org.apache.xml.dtm.DTM,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.transformer.TreeWalker2Result:void startNode(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:void dumpDTM(java.io.OutputStream)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:java.lang.String dumpNode(int)",
            "org.apache.xml.dtm.ref.DTMNamedNodeMap:org.w3c.dom.Node getNamedItemNS(java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getNamespaceURI()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)",
            "org.apache.xpath.functions.FuncNamespace:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.NodeTest:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.patterns.NodeTest:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)"
        ]
    },
    "org.apache.xml.serializer.utils.DOM2Helper:java.lang.String getNamespaceOfNode(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.utils.AttList:java.lang.String getURI(int)",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.serializer.TreeWalker:void endNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.utils.DOM2Helper:java.lang.String getNamespaceOfNode(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.utils.AttList:java.lang.String getURI(int)",
            "org.apache.xml.utils.DOMHelper:java.lang.String getExpandedElementName(org.w3c.dom.Element)",
            "org.apache.xml.utils.DOMHelper:java.lang.String getExpandedAttributeName(org.w3c.dom.Attr)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void endNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xalan.xsltc.dom.SAXImpl:void endDocument()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.Redirect:void write(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)",
            "org.apache.xalan.lib.Redirect:void close(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)",
            "org.apache.xalan.transformer.TransformerHandlerImpl:void endDocument()",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void endDocument()",
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:void endDocument()",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse()",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void endDocument()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void endDocument()",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void endDocument()",
            "org.apache.xml.serializer.ToTextSAXHandler:void endDocument()",
            "org.apache.xml.serializer.ToXMLSAXHandler:void endDocument()",
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)"
        ]
    },
    "org.apache.xalan.xsltc.dom.SAXImpl:void endElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:void endElement(java.lang.String)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void endElement(java.lang.String)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.TreeWalker:void endNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void endNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xalan.xsltc.dom.SAXImpl:void processingInstruction(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xalan.xsltc.dom.SAXImpl:void startPrefixMapping(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:void namespaceAfterStartElement(java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:boolean startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:boolean startPrefixMapping(java.lang.String,java.lang.String,boolean)",
            "org.apache.xml.serializer.ToXMLSAXHandler:boolean startPrefixMapping(java.lang.String,java.lang.String,boolean)",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xalan.xsltc.dom.SAXImpl:void comment(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void comment(char[],int,int)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void comment(char[],int,int)",
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:void comment(java.lang.String)",
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:void comment(char[],int,int)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void comment(char[],int,int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void comment(char[],int,int)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void comment(char[],int,int)",
            "org.apache.xml.serializer.ToSAXHandler:void comment(java.lang.String)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void comment(char[],int,int)",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.FastStringBuffer:void sendSAXComment(org.xml.sax.ext.LexicalHandler,int,int)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xpath.objects.XString:void dispatchAsComment(org.xml.sax.ext.LexicalHandler)",
            "org.apache.xpath.objects.XStringForChars:void dispatchAsComment(org.xml.sax.ext.LexicalHandler)"
        ]
    },
    "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:java.lang.String getPrefix(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getPrefix()"
        ]
    },
    "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getPrefix()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode:boolean isEqualNode(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode:java.lang.String lookupNamespaceURI(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:boolean isEqualNode(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String lookupNamespaceURI(java.lang.String)",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.serializer.TreeWalker:void endNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.UnImplNode:boolean isEqualNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.UnImplNode:java.lang.String lookupNamespaceURI(java.lang.String)",
            "org.apache.xpath.domapi.XPathNamespaceImpl:java.lang.String getPrefix()",
            "org.apache.xpath.domapi.XPathNamespaceImpl:java.lang.String getLocalName()"
        ]
    },
    "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:void <init>(org.apache.xml.dtm.DTMManager,javax.xml.transform.dom.DOMSource,int,org.apache.xml.dtm.DTMWSFilter,org.apache.xml.utils.XMLStringFactory,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.DTMManagerDefault:org.apache.xml.dtm.DTM getDTM(javax.xml.transform.Source,boolean,org.apache.xml.dtm.DTMWSFilter,boolean,boolean)"
        ]
    },
    "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void charactersFlush()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void endDocument()",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void comment(char[],int,int)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2RTFDTM:void endDocument()"
        ]
    },
    "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void startDocument()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void startDocument()",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void flushStartDoc()",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse()",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startDocument()",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2RTFDTM:void startDocument()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void startDocument()",
            "org.apache.xml.serializer.ToSAXHandler:void startDocumentInternal()",
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void comment(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void comment(char[],int,int)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void comment(char[],int,int)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void comment(char[],int,int)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void comment(char[],int,int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void comment(char[],int,int)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void comment(char[],int,int)",
            "org.apache.xml.serializer.ToSAXHandler:void comment(java.lang.String)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void comment(char[],int,int)",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.FastStringBuffer:void sendSAXComment(org.xml.sax.ext.LexicalHandler,int,int)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xpath.objects.XString:void dispatchAsComment(org.xml.sax.ext.LexicalHandler)",
            "org.apache.xpath.objects.XStringForChars:void dispatchAsComment(org.xml.sax.ext.LexicalHandler)"
        ]
    },
    "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void startDocument()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void startDocument()",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void flushStartDoc()",
            "org.apache.xalan.xsltc.dom.SAXImpl:void startDocument()",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse()",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startDocument()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void startDocument()",
            "org.apache.xml.serializer.ToSAXHandler:void startDocumentInternal()",
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void charactersFlush()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void endDocument()",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void comment(char[],int,int)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void comment(char[],int,int)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void processingInstruction(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xalan.lib.sql.DTMDocument:java.lang.String getLocalName(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.DTMDocument:void dumpDTM()",
            "org.apache.xalan.serialize.SerializerUtils:void addAttribute(org.apache.xml.serializer.SerializationHandler,int)",
            "org.apache.xalan.templates.ElemCopy:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.TemplateList:org.apache.xalan.templates.TemplateSubPatternAssociation getHead(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.templates.TemplateList:org.apache.xalan.templates.ElemTemplate getTemplateFast(org.apache.xpath.XPathContext,int,int,org.apache.xml.utils.QName,int,boolean,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.transformer.ClonerToResultTree:void cloneToResultTree(int,int,org.apache.xml.dtm.DTM,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.transformer.TreeWalker2Result:void startNode(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:void dumpDTM(java.io.OutputStream)",
            "org.apache.xml.dtm.ref.DTMNamedNodeMap:org.w3c.dom.Node getNamedItemNS(java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getLocalName()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)",
            "org.apache.xpath.functions.FuncLocalPart:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.NodeTest:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.patterns.NodeTest:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)"
        ]
    },
    "org.apache.xalan.lib.sql.DTMDocument:java.lang.String getNodeName(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.XSLProcessorContext:void outputToResultTree(org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.lib.sql.DTMDocument:void dumpDTM()",
            "org.apache.xalan.lib.sql.DTMDocument:java.lang.String getNodeNameX(int)",
            "org.apache.xalan.serialize.SerializerUtils:void addAttribute(org.apache.xml.serializer.SerializationHandler,int)",
            "org.apache.xalan.templates.ElemCopy:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemNumber:org.apache.xpath.XPath getCountMatchPattern(org.apache.xpath.XPathContext,int)",
            "org.apache.xalan.templates.TemplateList:org.apache.xalan.templates.TemplateSubPatternAssociation getHead(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.templates.TemplateList:org.apache.xalan.templates.ElemTemplate getTemplateFast(org.apache.xpath.XPathContext,int,int,org.apache.xml.utils.QName,int,boolean,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.trace.PrintTraceListener:void selected(org.apache.xalan.trace.SelectionEvent)",
            "org.apache.xalan.transformer.ClonerToResultTree:void cloneToResultTree(int,int,org.apache.xml.dtm.DTM,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.transformer.TreeWalker2Result:void startNode(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:void dumpDTM(java.io.OutputStream)",
            "org.apache.xml.dtm.ref.DTMNamedNodeMap:org.w3c.dom.Node getNamedItem(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getNodeName()",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getTarget()",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getTagName()",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getName()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)",
            "org.apache.xpath.axes.PredicatedNodeTest:java.lang.String nodeToString(int)",
            "org.apache.xpath.functions.FuncNamespace:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.NodeTest:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.patterns.NodeTest:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)"
        ]
    },
    "org.apache.xalan.xsltc.dom.NodeCounter:java.lang.String getCounter(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.dom.AnyNodeCounter:java.lang.String getCounter()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:int getAttributeNode(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMAdapter:int getAttributeNode(int,int)",
            "org.apache.xalan.xsltc.dom.MultiDOM:int getAttributeNode(int,int)"
        ]
    },
    "org.apache.xalan.xsltc.dom.DOMAdapter:int getAttributeNode(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMAdapter:int getAttributeNode(int,int)",
            "org.apache.xalan.xsltc.dom.MultiDOM:int getAttributeNode(int,int)"
        ]
    },
    "org.apache.xalan.xsltc.dom.MultiDOM:int getAttributeNode(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMAdapter:int getAttributeNode(int,int)",
            "org.apache.xalan.xsltc.dom.MultiDOM:int getAttributeNode(int,int)"
        ]
    },
    "org.apache.xalan.xsltc.dom.SAXImpl:java.lang.String getAttributeValue(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.SAXImpl:java.lang.String getAttributeValue(java.lang.String,int)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getNodeName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.XConnection:org.apache.xpath.objects.XBooleanStatic connect(org.apache.xalan.extensions.ExpressionContext,java.lang.String,java.lang.String,org.w3c.dom.Element)",
            "org.apache.xalan.lib.sql.XConnection:void initFromElement(org.w3c.dom.Element)",
            "org.apache.xalan.templates.ElemSort:org.w3c.dom.Node appendChild(org.w3c.dom.Node)",
            "org.apache.xalan.trace.PrintTraceListener:void selected(org.apache.xalan.trace.SelectionEvent)",
            "org.apache.xalan.trace.TracerEvent:java.lang.String printNode(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:void copyNodes(org.w3c.dom.NodeList,org.w3c.dom.Document,org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:java.lang.String getLocalName(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:int addNode(org.w3c.dom.Node,int,int,int)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:boolean nextNode()",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:java.lang.String getNodeName(int)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:java.lang.String getNodeNameX(int)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:java.lang.String getLocalName(int)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:java.lang.String getPrefix(int)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode:boolean isEqualNode(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode:java.lang.String lookupNamespaceURI(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:void traverseChildren(java.util.Vector,org.w3c.dom.Node,java.lang.String,boolean)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:boolean isEqualNode(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String lookupNamespaceURI(java.lang.String)",
            "org.apache.xml.serializer.utils.AttList:int getIndex(java.lang.String)",
            "org.apache.xml.serializer.utils.DOM2Helper:java.lang.String getLocalNameOfNodeFallback(org.w3c.dom.Node)",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.serializer.TreeWalker:void endNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.AttList:int getIndex(java.lang.String)",
            "org.apache.xml.utils.DOMHelper:java.lang.String getNamespaceOfNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.DOMHelper:java.lang.String getLocalNameOfNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.DOMHelper:boolean isNamespaceNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.DOMHelper:org.w3c.dom.Node locateAttrParent(org.w3c.dom.Element,org.w3c.dom.Node)",
            "org.apache.xml.utils.PrefixResolverDefault:java.lang.String getNamespaceForPrefix(java.lang.String,org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void endNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.UnImplNode:boolean isEqualNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.UnImplNode:java.lang.String lookupNamespaceURI(java.lang.String)",
            "org.apache.xpath.domapi.XPathResultImpl:boolean isNamespaceNode(org.w3c.dom.Node)",
            "org.apache.xpath.jaxp.JAXPPrefixResolver:java.lang.String getNamespaceForPrefix(java.lang.String,org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getTarget()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getTagName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.PipeDocument:void pipeDocument(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.utils.AttList:java.lang.String getQName(int)",
            "org.apache.xml.utils.AttList:java.lang.String getQName(int)"
        ]
    },
    "org.apache.xpath.axes.PredicatedNodeTest:java.lang.String nodeToString(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:int getNamespaceType(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.MultiDOM:int getNamespaceType(int)"
        ]
    },
    "org.apache.xalan.xsltc.dom.MultiDOM:int getNamespaceType(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.MultiDOM:int getNamespaceType(int)"
        ]
    },
    "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:boolean isElement(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMAdapter:boolean isElement(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM:boolean isElement(int)"
        ]
    },
    "org.apache.xalan.xsltc.dom.DOMAdapter:boolean isElement(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMAdapter:boolean isElement(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM:boolean isElement(int)"
        ]
    },
    "org.apache.xalan.xsltc.dom.MultiDOM:boolean isElement(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMAdapter:boolean isElement(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM:boolean isElement(int)"
        ]
    },
    "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:boolean isAttribute(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMAdapter:boolean isAttribute(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM:boolean isAttribute(int)"
        ]
    },
    "org.apache.xalan.xsltc.dom.DOMAdapter:boolean isAttribute(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMAdapter:boolean isAttribute(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM:boolean isAttribute(int)"
        ]
    },
    "org.apache.xalan.xsltc.dom.MultiDOM:boolean isAttribute(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMAdapter:boolean isAttribute(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM:boolean isAttribute(int)"
        ]
    },
    "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:java.lang.String getNodeName(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.XSLProcessorContext:void outputToResultTree(org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.serialize.SerializerUtils:void addAttribute(org.apache.xml.serializer.SerializationHandler,int)",
            "org.apache.xalan.templates.ElemCopy:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemNumber:org.apache.xpath.XPath getCountMatchPattern(org.apache.xpath.XPathContext,int)",
            "org.apache.xalan.templates.TemplateList:org.apache.xalan.templates.TemplateSubPatternAssociation getHead(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.templates.TemplateList:org.apache.xalan.templates.ElemTemplate getTemplateFast(org.apache.xpath.XPathContext,int,int,org.apache.xml.utils.QName,int,boolean,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.trace.PrintTraceListener:void selected(org.apache.xalan.trace.SelectionEvent)",
            "org.apache.xalan.transformer.ClonerToResultTree:void cloneToResultTree(int,int,org.apache.xml.dtm.DTM,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.transformer.TreeWalker2Result:void startNode(int)",
            "org.apache.xalan.xsltc.dom.DOMAdapter:java.lang.String getNodeName(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM:java.lang.String getNodeName(int)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String namespace_uriF(int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xml.dtm.ref.DTMNamedNodeMap:org.w3c.dom.Node getNamedItem(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getNodeName()",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getTarget()",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getTagName()",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getName()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)",
            "org.apache.xpath.axes.PredicatedNodeTest:java.lang.String nodeToString(int)",
            "org.apache.xpath.functions.FuncNamespace:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.NodeTest:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.patterns.NodeTest:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)"
        ]
    },
    "org.apache.xalan.xsltc.dom.DOMAdapter:java.lang.String getNodeName(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMAdapter:java.lang.String getNodeName(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM:java.lang.String getNodeName(int)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String namespace_uriF(int,org.apache.xalan.xsltc.DOM)"
        ]
    },
    "org.apache.xalan.xsltc.dom.MultiDOM:java.lang.String getNodeName(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMAdapter:java.lang.String getNodeName(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM:java.lang.String getNodeName(int)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String namespace_uriF(int,org.apache.xalan.xsltc.DOM)"
        ]
    },
    "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String namespace_uriF(int,org.apache.xalan.xsltc.DOM)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String namespace_uriF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)"
        ]
    },
    "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:java.lang.String getLanguage(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMAdapter:java.lang.String getLanguage(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM:java.lang.String getLanguage(int)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean testLanguage(java.lang.String,org.apache.xalan.xsltc.DOM,int)"
        ]
    },
    "org.apache.xalan.xsltc.dom.DOMAdapter:java.lang.String getLanguage(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMAdapter:java.lang.String getLanguage(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM:java.lang.String getLanguage(int)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean testLanguage(java.lang.String,org.apache.xalan.xsltc.DOM,int)"
        ]
    },
    "org.apache.xalan.xsltc.dom.MultiDOM:java.lang.String getLanguage(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMAdapter:java.lang.String getLanguage(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM:java.lang.String getLanguage(int)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean testLanguage(java.lang.String,org.apache.xalan.xsltc.DOM,int)"
        ]
    },
    "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean testLanguage(java.lang.String,org.apache.xalan.xsltc.DOM,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.lib.sql.DTMDocument:int getOwnerDocument(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.Document getOwnerDocument()"
        ]
    },
    "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:int getOwnerDocument(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.Document getOwnerDocument()"
        ]
    },
    "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.Document getOwnerDocument()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemLiteralResult$Attribute:org.w3c.dom.Document getOwnerDocument()",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void createResultContentHandler(javax.xml.transform.Result)",
            "org.apache.xalan.transformer.TransformerImpl:org.apache.xml.serializer.SerializationHandler createSerializationHandler(javax.xml.transform.Result,org.apache.xalan.templates.OutputProperties)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void <init>(org.apache.xalan.xsltc.dom.XSLTCDTMManager,javax.xml.transform.Source,int,org.apache.xml.dtm.DTMWSFilter,org.apache.xml.utils.XMLStringFactory,boolean,int,boolean,boolean)",
            "org.apache.xalan.xsltc.trax.SAX2DOM:void <init>(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:int getHandleOfNode(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:java.lang.String getDocumentTypeDeclarationSystemIdentifier()",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:java.lang.String getDocumentTypeDeclarationPublicIdentifier()",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:int getElementById(java.lang.String)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:java.lang.String getUnparsedEntityURI(java.lang.String)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode:org.w3c.dom.Document getOwnerDocument()",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.Object setUserData(java.lang.String,java.lang.Object,org.w3c.dom.UserDataHandler)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.Object getUserData(java.lang.String)",
            "org.apache.xml.utils.DOMHelper:org.w3c.dom.Node getRootNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.DOMHelper:org.w3c.dom.Node getParentOfNode(org.w3c.dom.Node)",
            "org.apache.xpath.domapi.XPathExpressionImpl:java.lang.Object evaluate(org.w3c.dom.Node,short,java.lang.Object)",
            "org.apache.xpath.domapi.XPathNamespaceImpl:org.w3c.dom.Document getOwnerDocument()"
        ]
    },
    "org.apache.xalan.transformer.TransformerIdentityImpl:void createResultContentHandler(javax.xml.transform.Result)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerIdentityImpl:void transform(javax.xml.transform.Source,javax.xml.transform.Result)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void setDocumentLocator(org.xml.sax.Locator)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void startDocument()",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void flushStartDoc()"
        ]
    },
    "org.apache.xalan.transformer.TransformerImpl:org.apache.xml.serializer.SerializationHandler createSerializationHandler(javax.xml.transform.Result,org.apache.xalan.templates.OutputProperties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.Redirect:org.apache.xml.serializer.SerializationHandler createSerializationHandler(org.apache.xalan.transformer.TransformerImpl,java.io.FileOutputStream,java.io.File,org.apache.xalan.templates.OutputProperties)",
            "org.apache.xalan.transformer.TransformerImpl:org.apache.xml.serializer.SerializationHandler createSerializationHandler(javax.xml.transform.Result)"
        ]
    },
    "org.apache.xalan.xsltc.trax.SAX2DOM:void characters(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.DTMDocument:void dispatchNodeData(org.w3c.dom.Node,org.xml.sax.ContentHandler,int)",
            "org.apache.xalan.transformer.TransformerHandlerImpl:void characters(char[],int,int)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void characters(char[],int,int)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void characters(char[],int,int)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:void dispatchNodeData(org.w3c.dom.Node,org.xml.sax.ContentHandler,int)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void characters(char[],int,int)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void characters(char[],int,int)",
            "org.apache.xml.serializer.ToTextSAXHandler:void characters(java.lang.String)",
            "org.apache.xml.serializer.ToTextSAXHandler:void characters(char[],int,int)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void characters(char[],int,int)",
            "org.apache.xml.serializer.TreeWalker:void dispatachChars(org.w3c.dom.Node)",
            "org.apache.xml.utils.FastStringBuffer:void sendSAXcharacters(org.xml.sax.ContentHandler,int,int)",
            "org.apache.xml.utils.FastStringBuffer:int sendNormalizedSAXcharacters(char[],int,int,org.xml.sax.ContentHandler,int)",
            "org.apache.xml.utils.TreeWalker:void dispatachChars(org.w3c.dom.Node)",
            "org.apache.xpath.objects.XString:void dispatchCharactersEvents(org.xml.sax.ContentHandler)",
            "org.apache.xpath.objects.XStringForChars:void dispatchCharactersEvents(org.xml.sax.ContentHandler)"
        ]
    },
    "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:org.w3c.dom.Node logicalNextDOMTextNode(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:boolean nextNode()",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:org.apache.xml.utils.XMLString getStringValue(int)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:boolean isWhitespace(int)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:java.lang.String getNodeValue(int)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)"
        ]
    },
    "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:java.lang.String getDocumentTypeDeclarationSystemIdentifier()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:java.lang.String getDocumentTypeDeclarationPublicIdentifier()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:java.lang.String getUnparsedEntityURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.functions.FuncUnparsedEntityURI:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode:java.lang.String lookupPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String lookupPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode:java.lang.String lookupPrefix(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String lookupPrefix(java.lang.String)",
            "org.apache.xml.utils.UnImplNode:java.lang.String lookupPrefix(java.lang.String)"
        ]
    },
    "org.apache.xml.utils.DOM2Helper:org.w3c.dom.Node getParentOfNode(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.utils.DOMBuilder:void characters(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.DTMDocument:void dispatchNodeData(org.w3c.dom.Node,org.xml.sax.ContentHandler,int)",
            "org.apache.xalan.transformer.TransformerHandlerImpl:void characters(char[],int,int)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void characters(char[],int,int)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void characters(char[],int,int)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:void dispatchNodeData(org.w3c.dom.Node,org.xml.sax.ContentHandler,int)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void characters(char[],int,int)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void characters(char[],int,int)",
            "org.apache.xml.serializer.ToTextSAXHandler:void characters(java.lang.String)",
            "org.apache.xml.serializer.ToTextSAXHandler:void characters(char[],int,int)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void characters(char[],int,int)",
            "org.apache.xml.serializer.TreeWalker:void dispatachChars(org.w3c.dom.Node)",
            "org.apache.xml.utils.FastStringBuffer:void sendSAXcharacters(org.xml.sax.ContentHandler,int,int)",
            "org.apache.xml.utils.FastStringBuffer:int sendNormalizedSAXcharacters(char[],int,int,org.xml.sax.ContentHandler,int)",
            "org.apache.xml.utils.TreeWalker:void dispatachChars(org.w3c.dom.Node)",
            "org.apache.xpath.objects.XString:void dispatchCharactersEvents(org.xml.sax.ContentHandler)",
            "org.apache.xpath.objects.XStringForChars:void dispatchCharactersEvents(org.xml.sax.ContentHandler)"
        ]
    },
    "org.apache.xml.utils.DOMBuilder:boolean isOutsideDocElem()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.utils.DOMBuilder:void characters(char[],int,int)",
            "org.apache.xml.utils.DOMBuilder:void charactersRaw(char[],int,int)",
            "org.apache.xml.utils.DOMBuilder:void ignorableWhitespace(char[],int,int)",
            "org.apache.xml.utils.DOMBuilder:void cdata(char[],int,int)"
        ]
    },
    "org.apache.xml.utils.DOMHelper:boolean isNodeAfterSibling(org.w3c.dom.Node,org.w3c.dom.Node,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.utils.DOMHelper:boolean isNodeAfter(org.w3c.dom.Node,org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.utils.DOMHelper:org.w3c.dom.Node getRootNode(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.utils.DOMHelper:boolean isNamespaceNode(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.utils.DOMHelper:org.w3c.dom.Node getParentOfNode(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.utils.DOMHelper:boolean isNodeAfter(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xml.utils.DOMHelper:short getLevel(org.w3c.dom.Node)",
            "org.apache.xml.utils.DOMHelper:java.lang.String getNamespaceForPrefix(java.lang.String,org.w3c.dom.Element)",
            "org.apache.xml.utils.DOMHelper:java.lang.String getNamespaceOfNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.DOMHelper:org.w3c.dom.Node getRoot(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.utils.DOMHelper:org.w3c.dom.Node locateAttrParent(org.w3c.dom.Element,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.utils.DOMHelper:org.w3c.dom.Node getParentOfNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.DOMHelper:org.w3c.dom.Node locateAttrParent(org.w3c.dom.Element,org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.utils.UnImplNode:java.lang.String lookupPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode:java.lang.String lookupPrefix(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String lookupPrefix(java.lang.String)",
            "org.apache.xml.utils.UnImplNode:java.lang.String lookupPrefix(java.lang.String)"
        ]
    },
    "org.apache.xpath.domapi.XPathEvaluatorImpl:org.w3c.dom.xpath.XPathNSResolver createNSResolver(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xpath.domapi.XPathResultImpl:boolean isNamespaceNode(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.domapi.XPathResultImpl:org.w3c.dom.Node getSingleNodeValue()",
            "org.apache.xpath.domapi.XPathResultImpl:org.w3c.dom.Node iterateNext()",
            "org.apache.xpath.domapi.XPathResultImpl:org.w3c.dom.Node snapshotItem(int)"
        ]
    },
    "org.apache.xalan.templates.ElemTemplateElement:org.w3c.dom.Node insertBefore(org.w3c.dom.Node,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.RedundentExprEliminator:org.apache.xalan.templates.ElemVariable addVarDeclToElem(org.apache.xalan.templates.ElemTemplateElement,org.apache.xpath.axes.LocPathIterator,org.apache.xalan.templates.ElemVariable)",
            "org.apache.xalan.xsltc.trax.SAX2DOM:void characters(char[],int,int)",
            "org.apache.xalan.xsltc.trax.SAX2DOM:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.xsltc.trax.SAX2DOM:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.trax.SAX2DOM:void comment(char[],int,int)",
            "org.apache.xml.utils.DOMBuilder:void append(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xalan.templates.ElemTemplateElement:org.w3c.dom.Node getPreviousSibling()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemTemplateElement:org.w3c.dom.Node replaceChild(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xpath.domapi.XPathNamespaceImpl:org.w3c.dom.Node getPreviousSibling()"
        ]
    },
    "org.apache.xpath.domapi.XPathNamespaceImpl:org.w3c.dom.Node getNextSibling()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.DTMDocument:void dispatchNodeData(org.w3c.dom.Node,org.xml.sax.ContentHandler,int)",
            "org.apache.xalan.lib.sql.XConnection:void initFromElement(org.w3c.dom.Element)",
            "org.apache.xalan.lib.sql.XConnection:void addParameters(org.w3c.dom.Element)",
            "org.apache.xalan.templates.ElemTemplateElement:org.w3c.dom.Node insertBefore(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xalan.templates.ElemTemplateElement:org.w3c.dom.Node getPreviousSibling()",
            "org.apache.xalan.trace.TracerEvent:java.lang.String printNode(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:boolean nextNode()",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:void getNodeData(org.w3c.dom.Node,org.apache.xml.utils.FastStringBuffer)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:org.w3c.dom.Node logicalNextDOMTextNode(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:void dispatchNodeData(org.w3c.dom.Node,org.xml.sax.ContentHandler,int)",
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xml.utils.DOMHelper:boolean isNodeAfterSibling(org.w3c.dom.Node,org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xml.utils.DOMHelper:org.w3c.dom.Node locateAttrParent(org.w3c.dom.Element,org.w3c.dom.Node)",
            "org.apache.xml.utils.DOMHelper:void getNodeData(org.w3c.dom.Node,org.apache.xml.utils.FastStringBuffer)",
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xpath.domapi.XPathNamespaceImpl:org.w3c.dom.Node getNextSibling()"
        ]
    },
    "org.apache.xalan.xsltc.dom.CachedNodeListIterator:int next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:int next()",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:int getNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:int next()",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:int next()",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator documentF(java.lang.Object,org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator document(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl:org.w3c.dom.Node makeNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SimpleResultTreeImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator:int step()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double sumF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double numberF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean booleanF(java.lang.Object)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String namespace_uriF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(int,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,double,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(java.lang.Object,java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String referenceToString(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator getSingleNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:org.w3c.dom.Node item(int)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:int getLength()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getLast()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getNodeByPosition(int)",
            "org.apache.xpath.axes.OneStepIterator:int getNextNode()",
            "org.apache.xpath.axes.ReverseAxesWalker:int getNextNode()"
        ]
    },
    "org.apache.xalan.xsltc.dom.CachedNodeListIterator:int getNodeByPosition(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.NthIterator:int next()"
        ]
    },
    "org.apache.xalan.xsltc.dom.ClonedNodeListIterator:int next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:int next()",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:int getNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:int next()",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:int next()",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator documentF(java.lang.Object,org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator document(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl:org.w3c.dom.Node makeNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SimpleResultTreeImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator:int step()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double sumF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double numberF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean booleanF(java.lang.Object)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String namespace_uriF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(int,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,double,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(java.lang.Object,java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String referenceToString(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator getSingleNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:org.w3c.dom.Node item(int)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:int getLength()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getLast()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getNodeByPosition(int)",
            "org.apache.xpath.axes.OneStepIterator:int getNextNode()",
            "org.apache.xpath.axes.ReverseAxesWalker:int getNextNode()"
        ]
    },
    "org.apache.xalan.xsltc.dom.ClonedNodeListIterator:int getNodeByPosition(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.NthIterator:int next()"
        ]
    },
    "org.apache.xalan.xsltc.dom.DupFilterIterator:void <init>(org.apache.xml.dtm.DTMAxisIterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.SAXImpl:org.apache.xml.dtm.DTMAxisIterator orderNodes(org.apache.xml.dtm.DTMAxisIterator,int)"
        ]
    },
    "org.apache.xalan.xsltc.dom.DOMAdapter:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMAdapter:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:void copy(java.lang.Object,org.apache.xml.serializer.SerializationHandler,int,org.apache.xalan.xsltc.DOM)"
        ]
    },
    "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:org.w3c.dom.Node makeNode(org.apache.xml.dtm.DTMAxisIterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMAdapter:org.w3c.dom.Node makeNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.w3c.dom.Node referenceToNode(java.lang.Object,org.apache.xalan.xsltc.DOM)"
        ]
    },
    "org.apache.xalan.xsltc.dom.DOMAdapter:org.w3c.dom.Node makeNode(org.apache.xml.dtm.DTMAxisIterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMAdapter:org.w3c.dom.Node makeNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xalan.xsltc.dom.MultiDOM:org.w3c.dom.Node makeNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.w3c.dom.Node referenceToNode(java.lang.Object,org.apache.xalan.xsltc.DOM)"
        ]
    },
    "org.apache.xalan.xsltc.runtime.BasisLibrary:org.w3c.dom.Node referenceToNode(java.lang.Object,org.apache.xalan.xsltc.DOM)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMAdapter:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:void copy(java.lang.Object,org.apache.xml.serializer.SerializationHandler,int,org.apache.xalan.xsltc.DOM)"
        ]
    },
    "org.apache.xalan.xsltc.dom.AbsoluteIterator:org.apache.xml.dtm.DTMAxisIterator reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.FilterIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.NthIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.UnionIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double numberF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean booleanF(java.lang.Object)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(java.lang.Object,java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String referenceToString(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:void copy(java.lang.Object,org.apache.xml.serializer.SerializationHandler,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getLast()",
            "org.apache.xpath.axes.OneStepIterator:void reset()"
        ]
    },
    "org.apache.xalan.xsltc.dom.FilterIterator:org.apache.xml.dtm.DTMAxisIterator reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.FilterIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.FilterIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.NthIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.UnionIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double numberF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean booleanF(java.lang.Object)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(java.lang.Object,java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String referenceToString(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:void copy(java.lang.Object,org.apache.xml.serializer.SerializationHandler,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getLast()",
            "org.apache.xpath.axes.OneStepIterator:void reset()"
        ]
    },
    "org.apache.xalan.xsltc.dom.ForwardPositionIterator:org.apache.xml.dtm.DTMAxisIterator reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.FilterIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.NthIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.UnionIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double numberF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean booleanF(java.lang.Object)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(java.lang.Object,java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String referenceToString(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:void copy(java.lang.Object,org.apache.xml.serializer.SerializationHandler,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getLast()",
            "org.apache.xpath.axes.OneStepIterator:void reset()"
        ]
    },
    "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.FilterIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.NthIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.UnionIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double numberF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean booleanF(java.lang.Object)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(java.lang.Object,java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String referenceToString(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:void copy(java.lang.Object,org.apache.xml.serializer.SerializationHandler,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getLast()",
            "org.apache.xpath.axes.OneStepIterator:void reset()"
        ]
    },
    "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:org.apache.xml.dtm.DTMAxisIterator reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.FilterIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.NthIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.UnionIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double numberF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean booleanF(java.lang.Object)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(java.lang.Object,java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String referenceToString(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:void copy(java.lang.Object,org.apache.xml.serializer.SerializationHandler,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getLast()",
            "org.apache.xpath.axes.OneStepIterator:void reset()"
        ]
    },
    "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.FilterIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.NthIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.UnionIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double numberF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean booleanF(java.lang.Object)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(java.lang.Object,java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String referenceToString(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:void copy(java.lang.Object,org.apache.xml.serializer.SerializationHandler,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getLast()",
            "org.apache.xpath.axes.OneStepIterator:void reset()"
        ]
    },
    "org.apache.xalan.xsltc.dom.NthIterator:org.apache.xml.dtm.DTMAxisIterator reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.FilterIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.NthIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.UnionIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double numberF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean booleanF(java.lang.Object)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(java.lang.Object,java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String referenceToString(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:void copy(java.lang.Object,org.apache.xml.serializer.SerializationHandler,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getLast()",
            "org.apache.xpath.axes.OneStepIterator:void reset()"
        ]
    },
    "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.FilterIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.NthIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.UnionIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double numberF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean booleanF(java.lang.Object)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(java.lang.Object,java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String referenceToString(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:void copy(java.lang.Object,org.apache.xml.serializer.SerializationHandler,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getLast()",
            "org.apache.xpath.axes.OneStepIterator:void reset()"
        ]
    },
    "org.apache.xalan.xsltc.dom.UnionIterator:org.apache.xml.dtm.DTMAxisIterator reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.FilterIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.NthIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.UnionIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.UnionIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double numberF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean booleanF(java.lang.Object)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(java.lang.Object,java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String referenceToString(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:void copy(java.lang.Object,org.apache.xml.serializer.SerializationHandler,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getLast()",
            "org.apache.xpath.axes.OneStepIterator:void reset()"
        ]
    },
    "org.apache.xpath.axes.OneStepIterator:void reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.objects.XNodeSet:boolean compare(org.apache.xpath.objects.XObject,org.apache.xpath.objects.Comparator)"
        ]
    },
    "org.apache.xalan.xsltc.dom.FilteredStepIterator:int next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:int next()",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:int getNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:int next()",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:int next()",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator documentF(java.lang.Object,org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator document(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl:org.w3c.dom.Node makeNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SimpleResultTreeImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator:int step()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double sumF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double numberF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean booleanF(java.lang.Object)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String namespace_uriF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(int,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,double,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(java.lang.Object,java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String referenceToString(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator getSingleNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:org.w3c.dom.Node item(int)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:int getLength()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getLast()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getNodeByPosition(int)",
            "org.apache.xpath.axes.OneStepIterator:int getNextNode()",
            "org.apache.xpath.axes.ReverseAxesWalker:int getNextNode()"
        ]
    },
    "org.apache.xalan.xsltc.dom.UnionIterator:int next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:int next()",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:int getNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:int next()",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:int next()",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator documentF(java.lang.Object,org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator document(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl:org.w3c.dom.Node makeNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SimpleResultTreeImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator:int step()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double sumF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double numberF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean booleanF(java.lang.Object)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String namespace_uriF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(int,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,double,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(java.lang.Object,java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String referenceToString(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator getSingleNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:org.w3c.dom.Node item(int)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:int getLength()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getLast()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getNodeByPosition(int)",
            "org.apache.xpath.axes.OneStepIterator:int getNextNode()",
            "org.apache.xpath.axes.ReverseAxesWalker:int getNextNode()"
        ]
    },
    "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compareStrings(java.lang.String,java.lang.String,int,org.apache.xalan.xsltc.DOM)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,int,org.apache.xalan.xsltc.DOM)"
        ]
    },
    "org.apache.xalan.xsltc.dom.MatchingIterator:int getLast()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.MatchingIterator:int getLast()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:int getLast()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:int countF(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:int positionF(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getNodeByPosition(int)"
        ]
    },
    "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:int getLast()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.MatchingIterator:int getLast()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:int getLast()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:int countF(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:int positionF(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getNodeByPosition(int)"
        ]
    },
    "org.apache.xalan.xsltc.runtime.BasisLibrary:int countF(org.apache.xml.dtm.DTMAxisIterator)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.runtime.BasisLibrary:int positionF(org.apache.xml.dtm.DTMAxisIterator)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.dom.NthIterator:int next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:int next()",
            "org.apache.xalan.xsltc.dom.CachedNodeListIterator:int getNode(int)",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.FilterIterator:int next()",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:int next()",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator documentF(java.lang.Object,org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator document(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.MatchingIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.MultiDOM:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.MultipleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl:org.w3c.dom.Node makeNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SimpleResultTreeImpl:void copy(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter$DefaultSingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SingleNodeCounter:java.lang.String getCounter()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator setStartNode(int)",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator reset()",
            "org.apache.xalan.xsltc.dom.StepIterator:int next()",
            "org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator:int step()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double sumF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String stringF(java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:double numberF(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean booleanF(java.lang.Object)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String namespace_uriF(org.apache.xml.dtm.DTMAxisIterator,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(int,org.apache.xml.dtm.DTMAxisIterator,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,double,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(org.apache.xml.dtm.DTMAxisIterator,java.lang.String,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:boolean compare(java.lang.Object,java.lang.Object,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String referenceToString(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator getSingleNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:org.w3c.dom.Node item(int)",
            "org.apache.xml.dtm.ref.DTMAxisIterNodeList:int getLength()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getLast()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:int getNodeByPosition(int)",
            "org.apache.xpath.axes.OneStepIterator:int getNextNode()",
            "org.apache.xpath.axes.ReverseAxesWalker:int getNextNode()"
        ]
    },
    "org.apache.xalan.xsltc.dom.MultiDOM:org.apache.xml.dtm.DTMAxisIterator getChildren(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMAdapter:org.apache.xml.dtm.DTMAxisIterator getChildren(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM:org.apache.xml.dtm.DTMAxisIterator getChildren(int)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.w3c.dom.Node referenceToNode(java.lang.Object,org.apache.xalan.xsltc.DOM)"
        ]
    },
    "org.apache.xalan.xsltc.dom.SimpleResultTreeImpl:int getLastChild(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemNumber:int findPrecedingOrAncestorOrSelf(org.apache.xpath.XPathContext,org.apache.xpath.XPath,org.apache.xpath.XPath,int,org.apache.xalan.templates.ElemNumber)",
            "org.apache.xalan.templates.ElemNumber:int getPreviousNode(org.apache.xpath.XPathContext,int)",
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:int getLastChild(int)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.Node getLastChild()",
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.Element getDocumentElement()"
        ]
    },
    "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.NodeList getChildNodes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.ExsltBase:java.lang.String toString(org.w3c.dom.Node)",
            "org.apache.xalan.lib.PipeDocument:void pipeDocument(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:void copyNodes(org.w3c.dom.NodeList,org.w3c.dom.Document,org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.NodeList getElementsByTagName(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:void traverseChildren(java.util.Vector,org.w3c.dom.Node,java.lang.String,boolean)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.NodeList getElementsByTagNameNS(java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:void traverseChildren(java.util.Vector,org.w3c.dom.Node,java.lang.String,java.lang.String,boolean,boolean)",
            "org.apache.xpath.domapi.XPathNamespaceImpl:org.w3c.dom.NodeList getChildNodes()"
        ]
    },
    "org.apache.xpath.domapi.XPathNamespaceImpl:org.w3c.dom.Node getFirstChild()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.DTMDocument:void dispatchNodeData(org.w3c.dom.Node,org.xml.sax.ContentHandler,int)",
            "org.apache.xalan.lib.sql.XConnection:void initFromElement(org.w3c.dom.Element)",
            "org.apache.xalan.lib.sql.XConnection:void addParameters(org.w3c.dom.Element)",
            "org.apache.xalan.templates.ElemTemplateElement:org.w3c.dom.Node getPreviousSibling()",
            "org.apache.xalan.trace.TracerEvent:java.lang.String printNode(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:boolean nextNode()",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:void getNodeData(org.w3c.dom.Node,org.apache.xml.utils.FastStringBuffer)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:org.w3c.dom.Node logicalNextDOMTextNode(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:void dispatchNodeData(org.w3c.dom.Node,org.xml.sax.ContentHandler,int)",
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xml.utils.DOMHelper:boolean isNodeAfterSibling(org.w3c.dom.Node,org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xml.utils.DOMHelper:void getNodeData(org.w3c.dom.Node,org.apache.xml.utils.FastStringBuffer)",
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xpath.domapi.XPathNamespaceImpl:org.w3c.dom.Node getFirstChild()"
        ]
    },
    "org.apache.xml.utils.DOMBuilder:void cdata(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.utils.DOMBuilder:void characters(char[],int,int)"
        ]
    },
    "org.apache.xpath.domapi.XPathNamespaceImpl:org.w3c.dom.Node getLastChild()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.utils.DOMBuilder:void characters(char[],int,int)",
            "org.apache.xml.utils.DOMBuilder:void cdata(char[],int,int)",
            "org.apache.xpath.domapi.XPathNamespaceImpl:org.w3c.dom.Node getLastChild()"
        ]
    },
    "org.apache.xpath.domapi.XPathNamespaceImpl:org.w3c.dom.Node getPreviousSibling()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.domapi.XPathNamespaceImpl:org.w3c.dom.Node getPreviousSibling()"
        ]
    },
    "org.apache.xalan.templates.ElemTemplateElement:org.w3c.dom.Node replaceChild(org.w3c.dom.Node,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xpath.domapi.XPathNamespaceImpl:org.w3c.dom.Node getParentNode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemTemplateElement:org.w3c.dom.Node replaceChild(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:boolean nextNode()",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:int getHandleOfNode(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:org.w3c.dom.Node logicalNextDOMTextNode(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.DTMManagerDefault:int getDTMHandleFromNode(org.w3c.dom.Node)",
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xml.utils.DOM2Helper:org.w3c.dom.Node getParentOfNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.DOMHelper:java.lang.String getNamespaceOfNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.DOMHelper:org.w3c.dom.Node getParentOfNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.PrefixResolverDefault:java.lang.String getNamespaceForPrefix(java.lang.String,org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xpath.domapi.XPathNamespaceImpl:org.w3c.dom.Node getParentNode()",
            "org.apache.xpath.jaxp.JAXPPrefixResolver:java.lang.String getNamespaceForPrefix(java.lang.String,org.w3c.dom.Node)"
        ]
    },
    "org.apache.xpath.domapi.XPathNamespaceImpl:org.w3c.dom.Element getOwnerElement()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:void characters(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.SimpleResultTreeImpl:void characters(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.runtime.AbstractTranslet:void characters(java.lang.String,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:void endElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.XSLProcessorContext:void outputToResultTree(org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.templates.ElemCopy:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemElement:void constructNode(java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemLiteralResult:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.TransformerHandlerImpl:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void endElement(java.lang.String)",
            "org.apache.xml.serializer.ToUnknownStream:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.TreeWalker:void endNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void endNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xalan.xsltc.trax.SmartTransformerFactoryImpl:javax.xml.transform.sax.TransformerHandler newTransformerHandler(javax.xml.transform.Templates)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.PipeDocument:void pipeDocument(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)",
            "org.apache.xalan.xslt.Process:void main(java.lang.String[])",
            "org.apache.xalan.xsltc.trax.SmartTransformerFactoryImpl:javax.xml.transform.sax.TransformerHandler newTransformerHandler(javax.xml.transform.Templates)"
        ]
    },
    "org.apache.xalan.transformer.TrAXFilter:void setupParse()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TrAXFilter:void setParent(org.xml.sax.XMLReader)",
            "org.apache.xalan.transformer.TrAXFilter:void parse(org.xml.sax.InputSource)"
        ]
    },
    "org.apache.xml.serializer.ToStream:void endElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.XSLProcessorContext:void outputToResultTree(org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.templates.ElemCopy:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemElement:void constructNode(java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemLiteralResult:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.TransformerHandlerImpl:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void endElement(java.lang.String)",
            "org.apache.xml.serializer.ToHTMLStream:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToStream:void endElement(java.lang.String)",
            "org.apache.xml.serializer.ToUnknownStream:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToXMLStream:void endElement(java.lang.String)",
            "org.apache.xml.serializer.TreeWalker:void endNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void endNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serializer.ToUnknownStream:void skippedEntity(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void skippedEntity(java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void skippedEntity(java.lang.String)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void skippedEntity(java.lang.String)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void skippedEntity(java.lang.String)",
            "org.apache.xml.serializer.ToUnknownStream:void skippedEntity(java.lang.String)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void skippedEntity(java.lang.String)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.UnsupportedElement:void parseContents(org.apache.xalan.xsltc.compiler.Parser)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AttributeSet:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Stylesheet:void parseOwnChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void parseChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Template:void parseSimplified(org.apache.xalan.xsltc.compiler.Stylesheet,org.apache.xalan.xsltc.compiler.Parser)"
        ]
    },
    "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:javax.xml.transform.sax.TransformerHandler newTransformerHandler(javax.xml.transform.Source)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.trax.SmartTransformerFactoryImpl:javax.xml.transform.sax.TransformerHandler newTransformerHandler(javax.xml.transform.Source)"
        ]
    },
    "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void setXMLReader(org.xml.sax.XMLReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.DTMManagerDefault:org.apache.xml.dtm.DTM getDTM(javax.xml.transform.Source,boolean,org.apache.xml.dtm.DTMWSFilter,boolean,boolean)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces:org.apache.xml.dtm.ref.IncrementalSAXSource createIncrementalSAXSource()",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces:org.apache.xml.dtm.ref.IncrementalSAXSource createIncrementalSAXSource(org.apache.xerces.parsers.SAXParser)"
        ]
    },
    "org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces:void setContentHandler(org.xml.sax.ContentHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void setIncrementalSAXSource(org.apache.xml.dtm.ref.IncrementalSAXSource)",
            "org.apache.xml.dtm.ref.DTMDocumentImpl:void setIncrementalSAXSource(org.apache.xml.dtm.ref.IncrementalSAXSource)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces:void main(java.lang.String[])"
        ]
    },
    "org.apache.xalan.templates.ElemTemplateElement:boolean accept(org.apache.xalan.templates.XSLTVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemTemplateElement:void callVisitors(org.apache.xalan.templates.XSLTVisitor)"
        ]
    },
    "org.apache.xalan.templates.RedundentExprEliminator:boolean visitTopLevelInstruction(org.apache.xalan.templates.ElemTemplateElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.Stylesheet:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)"
        ]
    },
    "org.apache.xalan.transformer.TransformerImpl:void reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerImpl:void transform(javax.xml.transform.Source,boolean)",
            "org.apache.xalan.transformer.TransformerImpl:void transformNode(int)"
        ]
    },
    "org.apache.xalan.templates.AVT:void callVisitors(org.apache.xalan.templates.XSLTVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemElement:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemLiteralResult:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemNumber:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)"
        ]
    },
    "org.apache.xalan.templates.ElemTemplateElement:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemTemplateElement:void callVisitors(org.apache.xalan.templates.XSLTVisitor)",
            "org.apache.xalan.templates.RedundentExprEliminator:boolean visitInstruction(org.apache.xalan.templates.ElemTemplateElement)",
            "org.apache.xalan.templates.Stylesheet:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)"
        ]
    },
    "org.apache.xalan.templates.ElemCallTemplate:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemTemplateElement:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor)",
            "org.apache.xalan.templates.RedundentExprEliminator:boolean visitInstruction(org.apache.xalan.templates.ElemTemplateElement)"
        ]
    },
    "org.apache.xpath.axes.LocPathIterator:void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.AVTPartXPath:void callVisitors(org.apache.xalan.templates.XSLTVisitor)",
            "org.apache.xalan.templates.AbsPathChecker:boolean checkAbsolute(org.apache.xpath.axes.LocPathIterator)",
            "org.apache.xalan.templates.ElemCopyOf:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemForEach:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemIf:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemNumber:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemValueOf:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemVariable:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemWhen:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemWithParam:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.RedundentExprEliminator:org.apache.xalan.templates.ElemVariable addVarDeclToElem(org.apache.xalan.templates.ElemTemplateElement,org.apache.xpath.axes.LocPathIterator,org.apache.xalan.templates.ElemVariable)",
            "org.apache.xalan.templates.RedundentExprEliminator:boolean visitPredicate(org.apache.xpath.ExpressionOwner,org.apache.xpath.Expression)",
            "org.apache.xalan.templates.RedundentExprEliminator:boolean visitInstruction(org.apache.xalan.templates.ElemTemplateElement)",
            "org.apache.xpath.axes.FilterExprIterator:void callPredicateVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:void callPredicateVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.axes.FilterExprWalker:void callPredicateVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.axes.HasPositionalPredChecker:boolean check(org.apache.xpath.axes.LocPathIterator)",
            "org.apache.xpath.axes.HasPositionalPredChecker:boolean visitPredicate(org.apache.xpath.ExpressionOwner,org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:void callPredicateVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.axes.UnionPathIterator:void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.functions.FuncExtFunction:void callArgVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.functions.Function2Args:void callArgVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.functions.Function3Args:void callArgVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.functions.FunctionMultiArgs:void callArgVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.functions.FunctionOneArg:void callArgVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.operations.Operation:void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.operations.UnaryOperation:void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.patterns.FunctionPattern:void callSubtreeVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.patterns.StepPattern:void callSubtreeVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.XPath:void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)"
        ]
    },
    "org.apache.xpath.axes.AxesWalker:void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.AVTPartXPath:void callVisitors(org.apache.xalan.templates.XSLTVisitor)",
            "org.apache.xalan.templates.ElemCopyOf:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemForEach:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemIf:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemNumber:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemValueOf:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemVariable:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemWhen:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemWithParam:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.RedundentExprEliminator:boolean visitPredicate(org.apache.xpath.ExpressionOwner,org.apache.xpath.Expression)",
            "org.apache.xalan.templates.RedundentExprEliminator:boolean visitInstruction(org.apache.xalan.templates.ElemTemplateElement)",
            "org.apache.xpath.axes.AxesWalker:void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.axes.FilterExprIterator:void callPredicateVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:void callPredicateVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.axes.FilterExprWalker:void callPredicateVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.axes.HasPositionalPredChecker:boolean visitPredicate(org.apache.xpath.ExpressionOwner,org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:void callPredicateVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.axes.WalkingIterator:void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.functions.FuncExtFunction:void callArgVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.functions.Function2Args:void callArgVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.functions.Function3Args:void callArgVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.functions.FunctionMultiArgs:void callArgVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.functions.FunctionOneArg:void callArgVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.operations.Operation:void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.operations.UnaryOperation:void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.patterns.FunctionPattern:void callSubtreeVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.patterns.StepPattern:void callSubtreeVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.XPath:void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)"
        ]
    },
    "org.apache.xpath.patterns.StepPattern:void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.AVTPartXPath:void callVisitors(org.apache.xalan.templates.XSLTVisitor)",
            "org.apache.xalan.templates.ElemCopyOf:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemForEach:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemIf:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemNumber:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemValueOf:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemVariable:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemWhen:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemWithParam:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.RedundentExprEliminator:boolean visitPredicate(org.apache.xpath.ExpressionOwner,org.apache.xpath.Expression)",
            "org.apache.xalan.templates.RedundentExprEliminator:boolean visitInstruction(org.apache.xalan.templates.ElemTemplateElement)",
            "org.apache.xpath.axes.FilterExprIterator:void callPredicateVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:void callPredicateVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.axes.FilterExprWalker:void callPredicateVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.axes.HasPositionalPredChecker:boolean visitPredicate(org.apache.xpath.ExpressionOwner,org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:void callPredicateVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.functions.FuncExtFunction:void callArgVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.functions.Function2Args:void callArgVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.functions.Function3Args:void callArgVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.functions.FunctionMultiArgs:void callArgVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.functions.FunctionOneArg:void callArgVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.operations.Operation:void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.operations.UnaryOperation:void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.patterns.FunctionPattern:void callSubtreeVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.patterns.StepPattern:void callSubtreeVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.patterns.UnionPattern:void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.XPath:void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)"
        ]
    },
    "org.apache.xalan.processor.StylesheetHandler:org.apache.xpath.XPath createXPath(java.lang.String,org.apache.xalan.templates.ElemTemplateElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.XSLTAttributeDef:java.lang.Object processEXPR(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)",
            "org.apache.xalan.templates.AVT:void <init>(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)"
        ]
    },
    "org.apache.xalan.processor.StylesheetHandler:org.apache.xpath.XPath createMatchPatternXPath(java.lang.String,org.apache.xalan.templates.ElemTemplateElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.XSLTAttributeDef:java.lang.Object processPATTERN(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)",
            "org.apache.xalan.processor.XSLTAttributeDef:java.util.Vector processSIMPLEPATTERNLIST(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)"
        ]
    },
    "org.apache.xalan.lib.sql.XConnection:void <init>(org.apache.xalan.extensions.ExpressionContext,java.lang.String,java.lang.String,org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.lib.sql.XConnection:org.apache.xpath.objects.XBooleanStatic connect(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.utils.DOMBuilder:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void closeStartTag()",
            "org.apache.xml.serializer.ToXMLSAXHandler:void closeStartTag()",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.utils.DOMBuilder:void charactersRaw(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.utils.DOMBuilder:void entityReference(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.utils.DOMBuilder:void ignorableWhitespace(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void ignorableWhitespace(char[],int,int)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void ignorableWhitespace(char[],int,int)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void ignorableWhitespace(char[],int,int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void ignorableWhitespace(char[],int,int)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void ignorableWhitespace(char[],int,int)"
        ]
    },
    "org.apache.xml.utils.DOMBuilder:void processingInstruction(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.utils.DOMBuilder:void comment(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void comment(char[],int,int)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void comment(char[],int,int)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void comment(char[],int,int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void comment(char[],int,int)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void comment(char[],int,int)",
            "org.apache.xml.serializer.ToSAXHandler:void comment(java.lang.String)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void comment(char[],int,int)",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.FastStringBuffer:void sendSAXComment(org.xml.sax.ext.LexicalHandler,int,int)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xpath.objects.XString:void dispatchAsComment(org.xml.sax.ext.LexicalHandler)",
            "org.apache.xpath.objects.XStringForChars:void dispatchAsComment(org.xml.sax.ext.LexicalHandler)"
        ]
    },
    "org.apache.xml.utils.DOMBuilder:void startCDATA()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void startCDATA()",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void startCDATA()",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startCDATA()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void startCDATA()",
            "org.apache.xml.serializer.ToXMLSAXHandler:void characters(char[],int,int)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void startCDATA()",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.utils.AttList:java.lang.String getURI(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.ProcessorKey:void setPropertiesFromAttributes(org.apache.xalan.processor.StylesheetHandler,java.lang.String,org.xml.sax.Attributes,org.apache.xalan.templates.ElemTemplateElement)",
            "org.apache.xalan.processor.ProcessorLRE:void startElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.processor.XSLTElementProcessor:org.xml.sax.Attributes setPropertiesFromAttributes(org.apache.xalan.processor.StylesheetHandler,java.lang.String,org.xml.sax.Attributes,org.apache.xalan.templates.ElemTemplateElement,boolean)",
            "org.apache.xalan.xsltc.trax.SAX2DOM:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.dtm.ref.DTMDocumentImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.SerializerBase:void addAttributes(org.xml.sax.Attributes)",
            "org.apache.xml.utils.DOMBuilder:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.utils.MutableAttrListImpl:void addAttributes(org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xml.utils.DOMHelper:java.lang.String getExpandedElementName(org.w3c.dom.Element)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.utils.DOMHelper:java.lang.String getExpandedAttributeName(org.w3c.dom.Attr)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.utils.DOMHelper:java.lang.String getNodeData(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.utils.PrefixResolverDefault:java.lang.String getNamespaceForPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.utils.QName:void <init>(java.lang.String,org.apache.xml.utils.PrefixResolver,boolean)",
            "org.apache.xpath.compiler.Lexer:int mapNSTokens(java.lang.String,int,int,int)",
            "org.apache.xpath.domapi.XPathNSResolverImpl:java.lang.String lookupNamespaceURI(java.lang.String)",
            "org.apache.xpath.functions.FuncExtElementAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncExtFunctionAvailable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSystemProperty:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xml.utils.QName:void <init>(java.lang.String,org.w3c.dom.Element,org.apache.xml.utils.PrefixResolver,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.utils.QName:void <init>(java.lang.String,org.w3c.dom.Element,org.apache.xml.utils.PrefixResolver)"
        ]
    },
    "org.apache.xalan.processor.ProcessorKey:void setPropertiesFromAttributes(org.apache.xalan.processor.StylesheetHandler,java.lang.String,org.xml.sax.Attributes,org.apache.xalan.templates.ElemTemplateElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.ProcessorKey:void startElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.processor.ProcessorLRE:void startElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xalan.processor.StylesheetHandler:void checkForFragmentID(org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.StylesheetHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Parser:void checkForSuperfluousAttributes(org.apache.xalan.xsltc.compiler.SyntaxTreeNode,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.Parser:org.apache.xalan.xsltc.compiler.SyntaxTreeNode makeInstance(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xalan.xsltc.runtime.AttributeList:void <init>(org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.Parser:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xalan.xsltc.trax.SAX2DOM:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void closeStartTag()",
            "org.apache.xml.serializer.ToXMLSAXHandler:void closeStartTag()",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serializer.SerializerBase:void addAttributes(org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.ToHTMLStream:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToStream:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToUnknownStream:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToUnknownStream:void addAttributes(org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xml.utils.MutableAttrListImpl:void addAttributes(org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.processor.StylesheetHandler:void pushSpaceHandling(org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.StylesheetHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xalan.lib.sql.XConnection:org.apache.xpath.objects.XBooleanStatic connect(org.apache.xalan.extensions.ExpressionContext,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.XConnection:void <init>(org.apache.xalan.extensions.ExpressionContext,java.lang.String)"
        ]
    },
    "org.apache.xalan.lib.sql.XConnection:org.apache.xpath.objects.XBooleanStatic connect(org.apache.xalan.extensions.ExpressionContext,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.XConnection:void <init>(org.apache.xalan.extensions.ExpressionContext,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xalan.lib.sql.XConnection:org.apache.xpath.objects.XBooleanStatic connect(org.apache.xalan.extensions.ExpressionContext,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.XConnection:void <init>(org.apache.xalan.extensions.ExpressionContext,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xalan.lib.sql.SQLDocument:void skip(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.XConnection:void skipRec(org.apache.xalan.extensions.ExpressionContext,java.lang.Object,int)"
        ]
    },
    "org.apache.xalan.lib.sql.SQLDocument:void extractSQLMetaData(java.sql.ResultSetMetaData)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.SQLDocument:void execute(org.apache.xalan.lib.sql.XConnection,org.apache.xalan.lib.sql.SQLQueryParser)",
            "org.apache.xalan.lib.sql.SQLDocument:boolean addRowToDTMFromResultSet()"
        ]
    },
    "org.apache.xalan.lib.sql.SQLDocument:void close(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.XConnection:org.apache.xml.dtm.DTM query(org.apache.xalan.extensions.ExpressionContext,java.lang.String)",
            "org.apache.xalan.lib.sql.XConnection:org.apache.xml.dtm.DTM pquery(org.apache.xalan.extensions.ExpressionContext,java.lang.String,java.lang.String)",
            "org.apache.xalan.lib.sql.XConnection:void close()",
            "org.apache.xalan.lib.sql.XConnection:void close(org.apache.xalan.extensions.ExpressionContext,java.lang.Object)"
        ]
    },
    "org.apache.xalan.lib.sql.XConnection:org.apache.xml.dtm.DTM getError()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xslt.EnvironmentCheck:boolean checkEnvironment(java.io.PrintWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xslt.EnvironmentCheck:void main(java.lang.String[])"
        ]
    },
    "org.apache.xalan.xslt.EnvironmentCheck:java.util.Hashtable getEnvironmentHash()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.Extensions:org.w3c.dom.Node checkEnvironment(org.apache.xalan.extensions.ExpressionContext)",
            "org.apache.xalan.xslt.EnvironmentCheck:boolean checkEnvironment(java.io.PrintWriter)"
        ]
    },
    "org.apache.xalan.client.XSLTProcessorApplet:java.lang.String getHtmlText()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.client.XSLTProcessorApplet:java.lang.String getResultTreeAsText()",
            "org.apache.xalan.client.XSLTProcessorApplet:java.lang.String transformToHtml(java.lang.String,java.lang.String)",
            "org.apache.xalan.client.XSLTProcessorApplet:java.lang.String transformToHtml(java.lang.String)"
        ]
    },
    "org.apache.xalan.client.XSLTProcessorApplet:java.lang.String getTreeAsText(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.client.XSLTProcessorApplet:java.lang.String getSourceTreeAsText()",
            "org.apache.xalan.client.XSLTProcessorApplet:java.lang.String getStyleTreeAsText()"
        ]
    },
    "org.apache.xalan.lib.sql.DTMDocument:int addElement(int,int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.DTMDocument:int addElementWithData(java.lang.Object,int,int,int,int)",
            "org.apache.xalan.lib.sql.SQLDocument:void execute(org.apache.xalan.lib.sql.XConnection,org.apache.xalan.lib.sql.SQLQueryParser)",
            "org.apache.xalan.lib.sql.SQLDocument:void extractSQLMetaData(java.sql.ResultSetMetaData)",
            "org.apache.xalan.lib.sql.SQLDocument:boolean addRowToDTMFromResultSet()",
            "org.apache.xalan.lib.sql.SQLErrorDocument:void <init>(org.apache.xml.dtm.DTMManager,int,java.sql.SQLException)",
            "org.apache.xalan.lib.sql.SQLErrorDocument:void <init>(org.apache.xml.dtm.DTMManager,int,java.lang.Exception,java.sql.SQLWarning,boolean)",
            "org.apache.xalan.lib.sql.SQLErrorDocument:void buildBasicStructure(java.lang.Exception)"
        ]
    },
    "org.apache.xalan.lib.sql.DTMDocument:int addAttributeToNode(java.lang.Object,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.SQLDocument:void extractSQLMetaData(java.sql.ResultSetMetaData)",
            "org.apache.xalan.lib.sql.SQLDocument:boolean addRowToDTMFromResultSet()"
        ]
    },
    "org.apache.xalan.lib.sql.PooledConnection:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.DefaultConnectionPool:void freeUnused()",
            "org.apache.xalan.lib.sql.DefaultConnectionPool:void finalize()"
        ]
    },
    "org.apache.xalan.transformer.TransformerIdentityImpl:void startDocument()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void startDocument()",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void transform(javax.xml.transform.Source,javax.xml.transform.Result)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void flushStartDoc()",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse()",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startDocument()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void startDocument()",
            "org.apache.xml.serializer.ToSAXHandler:void startDocumentInternal()",
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)"
        ]
    },
    "org.apache.xalan.transformer.TransformerImpl:void fatalError(java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerImpl:void transform(javax.xml.transform.Source,boolean)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.util.ErrorMsg:void <init>(java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.Parser:void createAST(org.apache.xalan.xsltc.compiler.Stylesheet)",
            "org.apache.xalan.xsltc.compiler.Parser:org.apache.xalan.xsltc.compiler.SyntaxTreeNode parse(org.xml.sax.XMLReader,org.xml.sax.InputSource)",
            "org.apache.xalan.xsltc.compiler.XSLTC:boolean compile(java.net.URL)",
            "org.apache.xalan.xsltc.compiler.XSLTC:boolean compile(java.net.URL,java.lang.String)",
            "org.apache.xalan.xsltc.compiler.XSLTC:boolean compile(org.xml.sax.InputSource,java.lang.String)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Parser:org.apache.xalan.xsltc.compiler.SyntaxTreeNode makeInstance(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.Parser:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:void error(javax.xml.transform.TransformerException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.StylesheetHandler:void error(java.lang.String,java.lang.Exception)",
            "org.apache.xalan.processor.StylesheetHandler:void error(org.xml.sax.SAXParseException)",
            "org.apache.xalan.processor.StylesheetHandler:void pushSpaceHandling(org.xml.sax.Attributes)",
            "org.apache.xalan.templates.FuncDocument:void error(org.apache.xpath.XPathContext,java.lang.String,java.lang.Object[])",
            "org.apache.xalan.transformer.TransformerHandlerImpl:void error(org.xml.sax.SAXParseException)",
            "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:void passWarningsToListener(java.util.Vector)",
            "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:void passErrorsToListener(java.util.Vector)",
            "org.apache.xalan.xsltc.trax.TransformerImpl:void postErrorToListener(java.lang.String)",
            "org.apache.xpath.XPath:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPath:boolean bool(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)"
        ]
    },
    "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:void fatalError(javax.xml.transform.TransformerException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.StylesheetHandler:void fatalError(org.xml.sax.SAXParseException)",
            "org.apache.xalan.processor.TransformerFactoryImpl:javax.xml.transform.Templates processFromNode(org.w3c.dom.Node)",
            "org.apache.xalan.processor.TransformerFactoryImpl:org.xml.sax.XMLFilter newXMLFilter(javax.xml.transform.Templates)",
            "org.apache.xalan.processor.TransformerFactoryImpl:javax.xml.transform.sax.TransformerHandler newTransformerHandler(javax.xml.transform.Templates)",
            "org.apache.xalan.processor.TransformerFactoryImpl:javax.xml.transform.Transformer newTransformer(javax.xml.transform.Source)",
            "org.apache.xalan.processor.TransformerFactoryImpl:javax.xml.transform.Templates newTemplates(javax.xml.transform.Source)",
            "org.apache.xalan.templates.ElemApplyTemplates:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemExtensionCall:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemMessage:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemUnknown:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.MsgMgr:void error(javax.xml.transform.SourceLocator,java.lang.String,java.lang.Object[],java.lang.Exception)",
            "org.apache.xalan.transformer.MsgMgr:void error(javax.xml.transform.SourceLocator,org.w3c.dom.Node,org.w3c.dom.Node,java.lang.String,java.lang.Object[])",
            "org.apache.xalan.transformer.TransformerHandlerImpl:void fatalError(org.xml.sax.SAXParseException)",
            "org.apache.xalan.transformer.TransformerImpl:void transform(javax.xml.transform.Source,boolean)",
            "org.apache.xalan.transformer.TransformerImpl:void fatalError(java.lang.Throwable)",
            "org.apache.xalan.transformer.TransformerImpl:void transformNode(int)",
            "org.apache.xalan.xsltc.trax.SmartTransformerFactoryImpl:org.xml.sax.XMLFilter newXMLFilter(javax.xml.transform.Templates)",
            "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:javax.xml.transform.Templates newTemplates(javax.xml.transform.Source)",
            "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:org.xml.sax.XMLFilter newXMLFilter(javax.xml.transform.Templates)",
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression compileFunction(int)",
            "org.apache.xpath.compiler.Compiler:void error(java.lang.String,java.lang.Object[])",
            "org.apache.xpath.compiler.XPathParser:void error(java.lang.String,java.lang.Object[])",
            "org.apache.xpath.compiler.XPathParser:void errorForDOM3(java.lang.String,java.lang.Object[])",
            "org.apache.xpath.Expression:void error(org.apache.xpath.XPathContext,java.lang.String,java.lang.Object[])",
            "org.apache.xpath.XPath:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPath:boolean bool(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPath:void error(org.apache.xpath.XPathContext,int,java.lang.String,java.lang.Object[])",
            "org.apache.xpath.XPathContext:void assertion(boolean,java.lang.String)"
        ]
    },
    "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:void warning(javax.xml.transform.TransformerException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.XConnection:void setError(java.lang.Exception,org.apache.xalan.extensions.ExpressionContext)",
            "org.apache.xalan.lib.sql.XConnection:void setError(java.lang.Exception,org.apache.xalan.lib.sql.SQLDocument,java.sql.SQLWarning)",
            "org.apache.xalan.processor.StylesheetHandler:void warn(java.lang.String,java.lang.Object[])",
            "org.apache.xalan.processor.StylesheetHandler:void warning(org.xml.sax.SAXParseException)",
            "org.apache.xalan.templates.ElemExtensionCall:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.FuncDocument:void warn(org.apache.xpath.XPathContext,java.lang.String,java.lang.Object[])",
            "org.apache.xalan.templates.FuncFormatNumb:void warn(org.apache.xpath.XPathContext,java.lang.String,java.lang.Object[])",
            "org.apache.xalan.transformer.MsgMgr:void message(javax.xml.transform.SourceLocator,java.lang.String,boolean)",
            "org.apache.xalan.transformer.MsgMgr:void warn(javax.xml.transform.SourceLocator,org.w3c.dom.Node,org.w3c.dom.Node,java.lang.String,java.lang.Object[])",
            "org.apache.xalan.transformer.TransformerHandlerImpl:void warning(org.xml.sax.SAXParseException)",
            "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:void passWarningsToListener(java.util.Vector)",
            "org.apache.xalan.xsltc.trax.TransformerImpl$MessageHandler:void displayMessage(java.lang.String)",
            "org.apache.xalan.xsltc.trax.TransformerImpl:void postWarningToListener(java.lang.String)",
            "org.apache.xml.serializer.ToStream:void setEncoding(java.lang.String)",
            "org.apache.xml.serializer.ToXMLStream:void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)",
            "org.apache.xml.serializer.ToXMLStream:java.lang.String getXMLVersion()",
            "org.apache.xpath.compiler.Compiler:void warn(java.lang.String,java.lang.Object[])",
            "org.apache.xpath.compiler.XPathParser:void warn(java.lang.String,java.lang.Object[])",
            "org.apache.xpath.Expression:void warn(org.apache.xpath.XPathContext,java.lang.String,java.lang.Object[])",
            "org.apache.xpath.XPath:void warn(org.apache.xpath.XPathContext,int,java.lang.String,java.lang.Object[])"
        ]
    },
    "org.apache.xalan.xsltc.trax.TransformerImpl:void error(javax.xml.transform.TransformerException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.StylesheetHandler:void error(java.lang.String,java.lang.Exception)",
            "org.apache.xalan.processor.StylesheetHandler:void error(org.xml.sax.SAXParseException)",
            "org.apache.xalan.processor.StylesheetHandler:void pushSpaceHandling(org.xml.sax.Attributes)",
            "org.apache.xalan.templates.FuncDocument:void error(org.apache.xpath.XPathContext,java.lang.String,java.lang.Object[])",
            "org.apache.xalan.transformer.TransformerHandlerImpl:void error(org.xml.sax.SAXParseException)",
            "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:void passWarningsToListener(java.util.Vector)",
            "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:void passErrorsToListener(java.util.Vector)",
            "org.apache.xalan.xsltc.trax.TransformerImpl:void postErrorToListener(java.lang.String)",
            "org.apache.xpath.XPath:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPath:boolean bool(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)"
        ]
    },
    "org.apache.xalan.xsltc.trax.TransformerImpl:void fatalError(javax.xml.transform.TransformerException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.StylesheetHandler:void fatalError(org.xml.sax.SAXParseException)",
            "org.apache.xalan.processor.TransformerFactoryImpl:javax.xml.transform.Templates processFromNode(org.w3c.dom.Node)",
            "org.apache.xalan.processor.TransformerFactoryImpl:org.xml.sax.XMLFilter newXMLFilter(javax.xml.transform.Templates)",
            "org.apache.xalan.processor.TransformerFactoryImpl:javax.xml.transform.sax.TransformerHandler newTransformerHandler(javax.xml.transform.Templates)",
            "org.apache.xalan.processor.TransformerFactoryImpl:javax.xml.transform.Transformer newTransformer(javax.xml.transform.Source)",
            "org.apache.xalan.processor.TransformerFactoryImpl:javax.xml.transform.Templates newTemplates(javax.xml.transform.Source)",
            "org.apache.xalan.templates.ElemApplyTemplates:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemExtensionCall:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemMessage:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemUnknown:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.MsgMgr:void error(javax.xml.transform.SourceLocator,java.lang.String,java.lang.Object[],java.lang.Exception)",
            "org.apache.xalan.transformer.MsgMgr:void error(javax.xml.transform.SourceLocator,org.w3c.dom.Node,org.w3c.dom.Node,java.lang.String,java.lang.Object[])",
            "org.apache.xalan.transformer.TransformerHandlerImpl:void fatalError(org.xml.sax.SAXParseException)",
            "org.apache.xalan.transformer.TransformerImpl:void transform(javax.xml.transform.Source,boolean)",
            "org.apache.xalan.transformer.TransformerImpl:void fatalError(java.lang.Throwable)",
            "org.apache.xalan.transformer.TransformerImpl:void transformNode(int)",
            "org.apache.xalan.xsltc.trax.SmartTransformerFactoryImpl:org.xml.sax.XMLFilter newXMLFilter(javax.xml.transform.Templates)",
            "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:javax.xml.transform.Templates newTemplates(javax.xml.transform.Source)",
            "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:org.xml.sax.XMLFilter newXMLFilter(javax.xml.transform.Templates)",
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression compileFunction(int)",
            "org.apache.xpath.compiler.Compiler:void error(java.lang.String,java.lang.Object[])",
            "org.apache.xpath.compiler.XPathParser:void error(java.lang.String,java.lang.Object[])",
            "org.apache.xpath.compiler.XPathParser:void errorForDOM3(java.lang.String,java.lang.Object[])",
            "org.apache.xpath.Expression:void error(org.apache.xpath.XPathContext,java.lang.String,java.lang.Object[])",
            "org.apache.xpath.XPath:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPath:boolean bool(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPath:void error(org.apache.xpath.XPathContext,int,java.lang.String,java.lang.Object[])",
            "org.apache.xpath.XPathContext:void assertion(boolean,java.lang.String)"
        ]
    },
    "org.apache.xalan.xsltc.trax.TransformerImpl:void warning(javax.xml.transform.TransformerException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.XConnection:void setError(java.lang.Exception,org.apache.xalan.extensions.ExpressionContext)",
            "org.apache.xalan.lib.sql.XConnection:void setError(java.lang.Exception,org.apache.xalan.lib.sql.SQLDocument,java.sql.SQLWarning)",
            "org.apache.xalan.processor.StylesheetHandler:void warn(java.lang.String,java.lang.Object[])",
            "org.apache.xalan.processor.StylesheetHandler:void warning(org.xml.sax.SAXParseException)",
            "org.apache.xalan.templates.ElemExtensionCall:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.FuncDocument:void warn(org.apache.xpath.XPathContext,java.lang.String,java.lang.Object[])",
            "org.apache.xalan.templates.FuncFormatNumb:void warn(org.apache.xpath.XPathContext,java.lang.String,java.lang.Object[])",
            "org.apache.xalan.transformer.MsgMgr:void message(javax.xml.transform.SourceLocator,java.lang.String,boolean)",
            "org.apache.xalan.transformer.MsgMgr:void warn(javax.xml.transform.SourceLocator,org.w3c.dom.Node,org.w3c.dom.Node,java.lang.String,java.lang.Object[])",
            "org.apache.xalan.transformer.TransformerHandlerImpl:void warning(org.xml.sax.SAXParseException)",
            "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:void passWarningsToListener(java.util.Vector)",
            "org.apache.xalan.xsltc.trax.TransformerImpl$MessageHandler:void displayMessage(java.lang.String)",
            "org.apache.xalan.xsltc.trax.TransformerImpl:void postWarningToListener(java.lang.String)",
            "org.apache.xml.serializer.ToStream:void setEncoding(java.lang.String)",
            "org.apache.xml.serializer.ToXMLStream:void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)",
            "org.apache.xml.serializer.ToXMLStream:java.lang.String getXMLVersion()",
            "org.apache.xpath.compiler.Compiler:void warn(java.lang.String,java.lang.Object[])",
            "org.apache.xpath.compiler.XPathParser:void warn(java.lang.String,java.lang.Object[])",
            "org.apache.xpath.Expression:void warn(org.apache.xpath.XPathContext,java.lang.String,java.lang.Object[])",
            "org.apache.xpath.XPath:void warn(org.apache.xpath.XPathContext,int,java.lang.String,java.lang.Object[])"
        ]
    },
    "org.apache.xml.dtm.DTMException:void <init>(java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.DTMManagerDefault:org.apache.xml.dtm.DTM createDocumentFragment()",
            "org.apache.xml.dtm.DTMConfigurationException:void <init>(java.lang.Throwable)"
        ]
    },
    "org.apache.xml.dtm.DTMException:void <init>(java.lang.String,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.DTMManagerDefault:org.xml.sax.XMLReader getXMLReader(javax.xml.transform.Source)",
            "org.apache.xml.dtm.DTMConfigurationException:void <init>(java.lang.String,java.lang.Throwable)"
        ]
    },
    "org.apache.xml.serializer.utils.WrappedRuntimeException:void <init>(java.lang.Exception)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.CharInfo:org.apache.xml.serializer.CharInfo getCharInfo(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.Encodings:org.apache.xml.serializer.EncodingInfo[] loadEncodingInfo()",
            "org.apache.xml.serializer.SerializerFactory:org.apache.xml.serializer.Serializer getSerializer(java.util.Properties)",
            "org.apache.xml.serializer.ToStream:void serialize(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.utils.ListingErrorHandler:void logExceptionLocation(java.io.PrintWriter,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.utils.ListingErrorHandler:void warning(org.xml.sax.SAXParseException)",
            "org.apache.xml.utils.ListingErrorHandler:void error(org.xml.sax.SAXParseException)",
            "org.apache.xml.utils.ListingErrorHandler:void fatalError(org.xml.sax.SAXParseException)",
            "org.apache.xml.utils.ListingErrorHandler:void warning(javax.xml.transform.TransformerException)",
            "org.apache.xml.utils.ListingErrorHandler:void error(javax.xml.transform.TransformerException)",
            "org.apache.xml.utils.ListingErrorHandler:void fatalError(javax.xml.transform.TransformerException)"
        ]
    },
    "org.apache.xml.utils.ListingErrorHandler:void logSourceLine(java.io.PrintWriter,javax.xml.transform.SourceLocator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.utils.ListingErrorHandler:void logExceptionLocation(java.io.PrintWriter,java.lang.Throwable)"
        ]
    },
    "org.apache.xml.utils.WrappedRuntimeException:void <init>(java.lang.Exception)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.ExsltStrings$DocumentHolder:void <clinit>()",
            "org.apache.xalan.lib.Extensions$DocumentHolder:void <clinit>()",
            "org.apache.xalan.lib.Extensions:org.apache.xpath.NodeSet nodeset(org.apache.xalan.extensions.ExpressionContext,java.lang.Object)",
            "org.apache.xalan.lib.Extensions:org.w3c.dom.Node checkEnvironment(org.apache.xalan.extensions.ExpressionContext)",
            "org.apache.xalan.templates.FuncDocument:int getDoc(org.apache.xpath.XPathContext,int,java.lang.String,java.lang.String)",
            "org.apache.xalan.templates.RedundentExprEliminator:org.apache.xpath.axes.WalkingIterator createIteratorFromSteps(org.apache.xpath.axes.WalkingIterator,int)",
            "org.apache.xalan.templates.Stylesheet:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.transformer.KeyRefIterator:short filterNode(int)",
            "org.apache.xalan.transformer.KeyTable:java.util.Hashtable getRefsTable()",
            "org.apache.xalan.transformer.TransformSnapshotImpl:void <init>(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.TransformSnapshotImpl:void apply(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void setDocumentLocator(org.xml.sax.Locator)",
            "org.apache.xalan.xsltc.dom.XSLTCDTMManager:org.apache.xml.dtm.DTM getDTM(javax.xml.transform.Source,boolean,org.apache.xml.dtm.DTMWSFilter,boolean,boolean,boolean,int,boolean,boolean)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:boolean nextNode()",
            "org.apache.xml.dtm.ref.DTMAxisIteratorBase:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xml.dtm.ref.DTMManagerDefault:org.apache.xml.dtm.DTM getDTM(javax.xml.transform.Source,boolean,org.apache.xml.dtm.DTMWSFilter,boolean,boolean)",
            "org.apache.xml.dtm.ref.DTMNodeIterator:void <init>(org.apache.xml.dtm.DTMIterator)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces:void main(java.lang.String[])",
            "org.apache.xml.utils.ObjectPool:void <init>(java.lang.String)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:org.apache.xpath.objects.XNodeSet executeFilterExpr(int,org.apache.xpath.XPathContext,org.apache.xml.utils.PrefixResolver,boolean,int,org.apache.xpath.Expression)",
            "org.apache.xpath.axes.IteratorPool:org.apache.xml.dtm.DTMIterator getInstance()",
            "org.apache.xpath.axes.PredicatedNodeTest:void resetProximityPositions()",
            "org.apache.xpath.axes.UnionPathIterator:void setRoot(int,java.lang.Object)",
            "org.apache.xpath.functions.FuncPosition:int getPositionInContextNodeList(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSystemProperty:void loadPropertyFile(java.lang.String,java.util.Properties)",
            "org.apache.xpath.jaxp.JAXPExtensionsProvider:java.lang.Object extFunction(java.lang.String,java.lang.String,java.util.Vector,java.lang.Object)",
            "org.apache.xpath.jaxp.JAXPExtensionsProvider:java.lang.Object extFunction(org.apache.xpath.functions.FuncExtFunction,java.util.Vector)",
            "org.apache.xpath.objects.XBoolean:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XBooleanStatic:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XNodeSet:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XNumber:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XObjectFactory:org.apache.xpath.objects.XObject create(java.lang.Object,org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XRTreeFrag:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XString:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XString:int compareToIgnoreCase(org.apache.xml.utils.XMLString)",
            "org.apache.xpath.operations.Variable:void fixupVariables(java.util.Vector,int)"
        ]
    },
    "org.apache.xpath.compiler.FunctionTable:org.apache.xpath.functions.Function getFunction(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression compileFunction(int)"
        ]
    },
    "org.apache.xpath.objects.XNodeSet:org.apache.xml.dtm.DTMIterator iter()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.MethodResolver:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.xalan.extensions.XSLProcessorContext:void outputToResultTree(org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.templates.ElemCopyOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.trace.PrintTraceListener:void selected(org.apache.xalan.trace.SelectionEvent)",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XNodeSet:org.w3c.dom.traversal.NodeIterator nodeset()",
            "org.apache.xpath.objects.XNodeSet:org.apache.xpath.NodeSetDTM mutableNodeset()",
            "org.apache.xpath.objects.XObject:java.lang.Object castToType(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIterator(org.apache.xpath.XPathContext,int)"
        ]
    },
    "org.apache.xpath.objects.XNodeSet:org.apache.xpath.objects.XObject getFresh()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.VariableStack:org.apache.xpath.objects.XObject getLocalVariable(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.VariableStack:org.apache.xpath.objects.XObject getGlobalVariable(org.apache.xpath.XPathContext,int,boolean)"
        ]
    },
    "org.apache.xpath.XPathException:java.lang.String getMessage()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.client.XSLTProcessorApplet:java.lang.String getHtmlText()",
            "org.apache.xalan.client.XSLTProcessorApplet:java.lang.String getTreeAsText(java.lang.String)",
            "org.apache.xalan.client.XSLTProcessorApplet:java.lang.String getSource()",
            "org.apache.xalan.client.XSLTProcessorApplet:java.lang.String processTransformation()",
            "org.apache.xalan.extensions.ExtensionHandlerGeneral:java.lang.Object callFunction(java.lang.String,java.util.Vector,java.lang.Object,org.apache.xalan.extensions.ExpressionContext)",
            "org.apache.xalan.extensions.ExtensionHandlerGeneral:void processElement(java.lang.String,org.apache.xalan.templates.ElemTemplateElement,org.apache.xalan.transformer.TransformerImpl,org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.extensions.ExtensionHandlerJavaClass:void processElement(java.lang.String,org.apache.xalan.templates.ElemTemplateElement,org.apache.xalan.transformer.TransformerImpl,org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.lib.sql.DTMDocument:int addElement(int,int,int,int)",
            "org.apache.xalan.lib.sql.DTMDocument:int addAttributeToNode(java.lang.Object,int,int)",
            "org.apache.xalan.lib.sql.DTMDocument:void dumpDTM()",
            "org.apache.xalan.lib.sql.PooledConnection:void close()",
            "org.apache.xalan.processor.ProcessorInclude:void startElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.processor.ProcessorInclude:void parse(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.processor.ProcessorOutputElem:void startElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.processor.StylesheetHandler:void pushSpaceHandling(org.xml.sax.Attributes)",
            "org.apache.xalan.processor.TransformerFactoryImpl:javax.xml.transform.Templates newTemplates(javax.xml.transform.Source)",
            "org.apache.xalan.templates.FuncDocument:int getDoc(org.apache.xpath.XPathContext,int,java.lang.String,java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void transform(javax.xml.transform.Source,javax.xml.transform.Result)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void startDocument()",
            "org.apache.xalan.transformer.TransformerImpl:void fatalError(java.lang.Throwable)",
            "org.apache.xalan.transformer.TransformerImpl:void transformNode(int)",
            "org.apache.xalan.transformer.TransformerImpl:void run()",
            "org.apache.xalan.xslt.Process:void main(java.lang.String[])",
            "org.apache.xalan.xsltc.cmdline.Transform:void doTransform()",
            "org.apache.xalan.xsltc.compiler.util.ErrorMsg:void <init>(java.lang.Throwable)",
            "org.apache.xalan.xsltc.compiler.Parser:org.apache.xalan.xsltc.compiler.SyntaxTreeNode makeInstance(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:void copyNodes(org.w3c.dom.NodeList,org.w3c.dom.Document,org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator nodeList2Iterator(org.w3c.dom.NodeList,org.apache.xalan.xsltc.Translet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:javax.xml.transform.Templates newTemplates(javax.xml.transform.Source)",
            "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:void error(javax.xml.transform.TransformerException)",
            "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:void fatalError(javax.xml.transform.TransformerException)",
            "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:void warning(javax.xml.transform.TransformerException)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void setResult(javax.xml.transform.Result)",
            "org.apache.xalan.xsltc.trax.TransformerImpl:org.apache.xalan.xsltc.DOM getDOM(javax.xml.transform.Source)",
            "org.apache.xalan.xsltc.trax.TransformerImpl:void transform(javax.xml.transform.Source,org.apache.xml.serializer.SerializationHandler,java.lang.String)",
            "org.apache.xalan.xsltc.trax.TransformerImpl:org.apache.xalan.xsltc.DOM retrieveDocument(java.lang.String,java.lang.String,org.apache.xalan.xsltc.Translet)",
            "org.apache.xalan.xsltc.trax.TransformerImpl:void error(javax.xml.transform.TransformerException)",
            "org.apache.xalan.xsltc.trax.TransformerImpl:void fatalError(javax.xml.transform.TransformerException)",
            "org.apache.xalan.xsltc.trax.TransformerImpl:void warning(javax.xml.transform.TransformerException)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:void dumpDTM(java.io.OutputStream)",
            "org.apache.xml.dtm.DTMException:void <init>(java.lang.Throwable)",
            "org.apache.xml.dtm.DTMException:void <init>(java.lang.String,java.lang.Throwable)",
            "org.apache.xml.serializer.utils.WrappedRuntimeException:void <init>(java.lang.Exception)",
            "org.apache.xml.utils.DefaultErrorHandler:void warning(javax.xml.transform.TransformerException)",
            "org.apache.xml.utils.DefaultErrorHandler:void error(javax.xml.transform.TransformerException)",
            "org.apache.xml.utils.DefaultErrorHandler:void fatalError(javax.xml.transform.TransformerException)",
            "org.apache.xml.utils.ListingErrorHandler:void warning(javax.xml.transform.TransformerException)",
            "org.apache.xml.utils.ListingErrorHandler:void error(javax.xml.transform.TransformerException)",
            "org.apache.xml.utils.ListingErrorHandler:void fatalError(javax.xml.transform.TransformerException)",
            "org.apache.xml.utils.ListingErrorHandler:void logExceptionLocation(java.io.PrintWriter,java.lang.Throwable)",
            "org.apache.xml.utils.ListingErrorHandler:void logSourceLine(java.io.PrintWriter,javax.xml.transform.SourceLocator)",
            "org.apache.xml.utils.WrappedRuntimeException:void <init>(java.lang.Exception)",
            "org.apache.xpath.axes.FilterExprWalker:short acceptNode(int)",
            "org.apache.xpath.axes.MatchPatternIterator:short acceptNode(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.PredicatedNodeTest:short acceptNode(int)",
            "org.apache.xpath.axes.UnionChildIterator:short acceptNode(int)",
            "org.apache.xpath.compiler.FunctionTable:org.apache.xpath.functions.Function getFunction(int)",
            "org.apache.xpath.compiler.XPathParser:void initXPath(org.apache.xpath.compiler.Compiler,java.lang.String,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.domapi.XPathResultImpl:double getNumberValue()",
            "org.apache.xpath.domapi.XPathResultImpl:java.lang.String getStringValue()",
            "org.apache.xpath.domapi.XPathResultImpl:boolean getBooleanValue()",
            "org.apache.xpath.domapi.XPathResultImpl:org.w3c.dom.Node getSingleNodeValue()",
            "org.apache.xpath.objects.XNodeSet:org.apache.xml.dtm.DTMIterator iter()",
            "org.apache.xpath.objects.XNodeSet:org.apache.xpath.objects.XObject getFresh()",
            "org.apache.xpath.patterns.StepPattern:boolean checkProximityPosition(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int,int)",
            "org.apache.xpath.patterns.StepPattern:int getProximityPosition(org.apache.xpath.XPathContext,int,boolean)",
            "org.apache.xpath.SourceTreeManager:int getSourceTree(java.lang.String,java.lang.String,javax.xml.transform.SourceLocator,org.apache.xpath.XPathContext)",
            "org.apache.xpath.SourceTreeManager:int parseToNode(javax.xml.transform.Source,javax.xml.transform.SourceLocator,org.apache.xpath.XPathContext)",
            "org.apache.xpath.XPath:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPath:boolean bool(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPathException:java.lang.String getMessage()"
        ]
    },
    "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.FilterIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.NthIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator:org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator cloneIterator()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator referenceToNodeSet(java.lang.Object)",
            "org.apache.xpath.axes.OneStepIterator:java.lang.Object clone()"
        ]
    },
    "org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator:org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator cloneIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.UnionIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()"
        ]
    },
    "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator referenceToNodeSet(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.w3c.dom.NodeList referenceToNodeList(java.lang.Object,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.w3c.dom.Node referenceToNode(java.lang.Object,org.apache.xalan.xsltc.DOM)"
        ]
    },
    "org.apache.xpath.axes.OneStepIterator:java.lang.Object clone()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformSnapshotImpl:void <init>(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.TransformSnapshotImpl:void apply(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xml.dtm.ref.DTMNodeIterator:void <init>(org.apache.xml.dtm.DTMIterator)",
            "org.apache.xpath.axes.IteratorPool:org.apache.xml.dtm.DTMIterator getInstanceOrThrow()",
            "org.apache.xpath.axes.IteratorPool:org.apache.xml.dtm.DTMIterator getInstance()",
            "org.apache.xpath.axes.LocPathIterator:int getLength()",
            "org.apache.xpath.axes.NodeSequence:java.lang.Object clone()",
            "org.apache.xpath.axes.OneStepIterator:int getProximityPosition(int)",
            "org.apache.xpath.axes.UnionPathIterator:java.lang.Object clone()",
            "org.apache.xpath.VariableStack:java.lang.Object clone()"
        ]
    },
    "org.apache.xalan.xsltc.dom.NodeSortRecord:void initialize(int,int,org.apache.xalan.xsltc.DOM,org.apache.xalan.xsltc.dom.SortSettings)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.dom.NodeSortRecordFactory:void <init>(org.apache.xalan.xsltc.DOM,java.lang.String,org.apache.xalan.xsltc.Translet,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.NodeSortRecordFactory:void <init>(org.apache.xalan.xsltc.DOM,java.lang.String,org.apache.xalan.xsltc.Translet,java.lang.String[],java.lang.String[])"
        ]
    },
    "org.apache.xml.serializer.CharInfo:void <init>(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.serializer.CharInfo:void <init>(java.lang.String,java.lang.String,boolean,org.apache.xml.serializer.CharInfo$1)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.CharInfo$1:java.lang.Object run()"
        ]
    },
    "org.apache.xml.dtm.ref.DTMManagerDefault:org.xml.sax.XMLReader getXMLReader(javax.xml.transform.Source)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.XSLTCDTMManager:org.apache.xml.dtm.DTM getDTM(javax.xml.transform.Source,boolean,org.apache.xml.dtm.DTMWSFilter,boolean,boolean,boolean,int,boolean,boolean)",
            "org.apache.xml.dtm.ref.DTMManagerDefault:org.apache.xml.dtm.DTM getDTM(javax.xml.transform.Source,boolean,org.apache.xml.dtm.DTMWSFilter,boolean,boolean)"
        ]
    },
    "org.apache.xpath.jaxp.XPathImpl:org.w3c.dom.Document getDummyDocument()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.compiler.Attribute:void display(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void displayContents(int)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.CallTemplate:void display(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void displayContents(int)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Choose:void display(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void displayContents(int)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Copy:void display(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void displayContents(int)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.LiteralElement:void display(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void displayContents(int)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Otherwise:void display(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void displayContents(int)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Stylesheet:void display(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void displayContents(int)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void display(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void displayContents(int)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Template:void display(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void displayContents(int)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.TopLevelElement:void display(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void displayContents(int)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.UnsupportedElement:void display(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void displayContents(int)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.XslAttribute:void display(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void displayContents(int)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.XslElement:void display(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void displayContents(int)"
        ]
    },
    "org.apache.xpath.axes.AttributeIterator:void <init>(org.apache.xpath.compiler.Compiler,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.WalkerFactory:org.apache.xml.dtm.DTMIterator newDTMIterator(org.apache.xpath.compiler.Compiler,int,boolean)"
        ]
    },
    "org.apache.xpath.axes.OneStepIterator:void <init>(org.apache.xpath.compiler.Compiler,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.WalkerFactory:org.apache.xml.dtm.DTMIterator newDTMIterator(org.apache.xpath.compiler.Compiler,int,boolean)"
        ]
    },
    "org.apache.xpath.axes.OneStepIteratorForward:void <init>(org.apache.xpath.compiler.Compiler,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.WalkerFactory:org.apache.xml.dtm.DTMIterator newDTMIterator(org.apache.xpath.compiler.Compiler,int,boolean)"
        ]
    },
    "org.apache.xpath.axes.UnionPathIterator:org.apache.xpath.axes.LocPathIterator createDTMIterator(org.apache.xpath.compiler.Compiler,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.UnionPathIterator:void loadLocationPaths(org.apache.xpath.compiler.Compiler,int,int)"
        ]
    },
    "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression locationPath(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression compile(int)"
        ]
    },
    "org.apache.xpath.axes.MatchPatternIterator:void <init>(org.apache.xpath.compiler.Compiler,int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xpath.axes.WalkingIterator:void <init>(org.apache.xpath.compiler.Compiler,int,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.WalkerFactory:org.apache.xml.dtm.DTMIterator newDTMIterator(org.apache.xpath.compiler.Compiler,int,boolean)",
            "org.apache.xpath.axes.WalkingIteratorSorted:void <init>(org.apache.xpath.compiler.Compiler,int,int,boolean)"
        ]
    },
    "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression compile(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.FilterExprWalker:void init(org.apache.xpath.compiler.Compiler,int,int)",
            "org.apache.xpath.axes.WalkerFactory:org.apache.xpath.patterns.StepPattern createDefaultStepPattern(org.apache.xpath.compiler.Compiler,int,org.apache.xpath.axes.MatchPatternIterator,int,org.apache.xpath.patterns.StepPattern,org.apache.xpath.patterns.StepPattern)",
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression compile(int)",
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression compileOperation(org.apache.xpath.operations.Operation,int)",
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression compileUnary(org.apache.xpath.operations.UnaryOperation,int)",
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression group(int)",
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression arg(int)",
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression predicate(int)",
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression matchPattern(int)",
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression compileFunction(int)",
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression compileExtension(int)",
            "org.apache.xpath.XPath:void <init>(java.lang.String,javax.xml.transform.SourceLocator,org.apache.xml.utils.PrefixResolver,int,javax.xml.transform.ErrorListener)",
            "org.apache.xpath.XPath:void <init>(java.lang.String,javax.xml.transform.SourceLocator,org.apache.xml.utils.PrefixResolver,int,javax.xml.transform.ErrorListener,org.apache.xpath.compiler.FunctionTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CopyOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ForEach:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:org.apache.xalan.xsltc.compiler.util.Type typeCheckExternal(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:java.util.Vector typeCheckArgs(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.If:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Key:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LangCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LogicalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NameBase:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Number:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Param:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Predicate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Sort:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Sort:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Step:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StringCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ValueOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Variable:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.When:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.WithParam:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.ApplyTemplates:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CopyOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ForEach:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:org.apache.xalan.xsltc.compiler.util.Type typeCheckExternal(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:java.util.Vector typeCheckArgs(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.If:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Key:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LangCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LiteralAttribute:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LogicalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NameBase:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Number:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Param:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Predicate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ProcessingInstruction:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Sort:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Sort:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Step:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StringCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ValueOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Variable:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.When:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.WithParam:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.XslAttribute:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.XslElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.BinOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CopyOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ForEach:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:org.apache.xalan.xsltc.compiler.util.Type typeCheckExternal(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:java.util.Vector typeCheckArgs(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.If:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Key:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LangCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LogicalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NameBase:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Number:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Param:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Predicate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Sort:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Sort:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Step:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StringCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ValueOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Variable:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.When:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.WithParam:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.BooleanCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Choose:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CopyOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ForEach:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:org.apache.xalan.xsltc.compiler.util.Type typeCheckExternal(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:java.util.Vector typeCheckArgs(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.If:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Key:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LangCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LogicalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NameBase:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Number:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Param:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Predicate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Sort:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Sort:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Step:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StringCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ValueOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Variable:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.When:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.WithParam:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.CastCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Choose:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CopyOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ForEach:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:org.apache.xalan.xsltc.compiler.util.Type typeCheckExternal(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:java.util.Vector typeCheckArgs(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.If:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Key:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LangCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LogicalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NameBase:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Number:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Param:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Predicate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Sort:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Sort:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Step:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StringCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ValueOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Variable:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.When:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.WithParam:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.CastExpr:void <init>(org.apache.xalan.xsltc.compiler.Expression,org.apache.xalan.xsltc.compiler.util.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CopyOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ForEach:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:org.apache.xalan.xsltc.compiler.util.Type typeCheckStandard(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.If:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Key:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LangCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LogicalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Number:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Param:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Predicate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Sort:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ValueOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.When:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.WithParam:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.ConcatCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Choose:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CopyOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ForEach:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:org.apache.xalan.xsltc.compiler.util.Type typeCheckExternal(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:java.util.Vector typeCheckArgs(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.If:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Key:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LangCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LogicalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NameBase:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Number:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Param:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Predicate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Sort:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Sort:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Step:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StringCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ValueOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Variable:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.When:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.WithParam:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.ContainsCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Choose:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CopyOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ForEach:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:org.apache.xalan.xsltc.compiler.util.Type typeCheckExternal(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:java.util.Vector typeCheckArgs(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.If:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Key:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LangCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LogicalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NameBase:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Number:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Param:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Predicate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Sort:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Sort:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Step:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StringCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ValueOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Variable:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.When:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.WithParam:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.CopyOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.DocumentCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Choose:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CopyOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ForEach:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:org.apache.xalan.xsltc.compiler.util.Type typeCheckExternal(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:java.util.Vector typeCheckArgs(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.If:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Key:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LangCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LogicalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NameBase:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Number:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Param:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Predicate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Sort:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Sort:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Step:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StringCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ValueOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Variable:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.When:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.WithParam:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.EqualityExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CopyOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ForEach:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:org.apache.xalan.xsltc.compiler.util.Type typeCheckExternal(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:java.util.Vector typeCheckArgs(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.If:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Key:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LangCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LogicalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NameBase:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Number:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Param:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Predicate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Sort:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Sort:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Step:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StringCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ValueOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Variable:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.When:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.WithParam:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.FilterExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CopyOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ForEach:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:org.apache.xalan.xsltc.compiler.util.Type typeCheckExternal(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:java.util.Vector typeCheckArgs(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.If:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Key:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LangCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LogicalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NameBase:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Number:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Param:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Predicate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Sort:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Sort:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Step:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StringCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ValueOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Variable:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.When:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.WithParam:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.FilterParentPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CopyOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ForEach:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:org.apache.xalan.xsltc.compiler.util.Type typeCheckExternal(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:java.util.Vector typeCheckArgs(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.If:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Key:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LangCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LogicalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NameBase:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Number:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Param:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Predicate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Sort:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Sort:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Step:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StringCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ValueOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Variable:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.When:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.WithParam:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CopyOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ForEach:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:org.apache.xalan.xsltc.compiler.util.Type typeCheckExternal(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:java.util.Vector typeCheckArgs(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.If:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Key:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LangCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LogicalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NameBase:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Number:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Param:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Predicate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Sort:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Sort:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Step:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StringCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ValueOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Variable:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.When:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.WithParam:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.ForEach:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.FormatNumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Choose:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CopyOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ForEach:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:org.apache.xalan.xsltc.compiler.util.Type typeCheckExternal(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:java.util.Vector typeCheckArgs(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.If:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Key:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LangCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LogicalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NameBase:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Number:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Param:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Predicate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Sort:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Sort:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Step:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StringCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ValueOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Variable:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.When:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.WithParam:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.FunctionCall:java.util.Vector typeCheckArgs(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.FunctionCall:org.apache.xalan.xsltc.compiler.util.Type typeCheckStandard(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:org.apache.xalan.xsltc.compiler.util.Type typeCheckConstructor(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:org.apache.xalan.xsltc.compiler.util.Type typeCheckExternal(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.If:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Key:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Choose:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CopyOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ForEach:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:org.apache.xalan.xsltc.compiler.util.Type typeCheckExternal(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:java.util.Vector typeCheckArgs(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.If:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Key:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LangCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LogicalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NameBase:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Number:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Param:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Predicate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Sort:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Sort:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Step:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StringCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ValueOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Variable:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.When:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.WithParam:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.LangCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Choose:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CopyOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ForEach:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:org.apache.xalan.xsltc.compiler.util.Type typeCheckExternal(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:java.util.Vector typeCheckArgs(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.If:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Key:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LangCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LogicalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NameBase:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Number:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Param:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Predicate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Sort:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Sort:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Step:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StringCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ValueOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Variable:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.When:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.WithParam:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.LogicalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CopyOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ForEach:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:org.apache.xalan.xsltc.compiler.util.Type typeCheckExternal(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:java.util.Vector typeCheckArgs(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.If:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Key:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LangCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LogicalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NameBase:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Number:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Param:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Predicate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Sort:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Sort:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Step:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StringCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ValueOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Variable:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.When:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.WithParam:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.NameBase:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Choose:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CopyOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ForEach:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:org.apache.xalan.xsltc.compiler.util.Type typeCheckExternal(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:java.util.Vector typeCheckArgs(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.If:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Key:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LangCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LogicalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NameBase:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Number:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Param:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Predicate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Sort:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Sort:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Step:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StringCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ValueOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Variable:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.When:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.WithParam:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Number:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.NumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Choose:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CopyOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ForEach:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:org.apache.xalan.xsltc.compiler.util.Type typeCheckExternal(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:java.util.Vector typeCheckArgs(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.If:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Key:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LangCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LogicalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NameBase:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Number:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Param:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Predicate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Sort:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Sort:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Step:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StringCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ValueOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Variable:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.When:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.WithParam:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Param:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Stylesheet:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.VariableRefBase:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.ParentLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CopyOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ForEach:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:org.apache.xalan.xsltc.compiler.util.Type typeCheckExternal(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:java.util.Vector typeCheckArgs(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.If:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Key:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LangCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LogicalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NameBase:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Number:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Param:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Predicate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Sort:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Sort:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Step:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Step:void translatePredicates(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ValueOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Variable:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.When:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.WithParam:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Predicate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CopyOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ForEach:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:org.apache.xalan.xsltc.compiler.util.Type typeCheckExternal(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:java.util.Vector typeCheckArgs(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.If:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Key:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LangCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LogicalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NameBase:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Number:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Param:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Predicate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ProcessingInstructionPattern:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Sort:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Sort:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Step:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StepPattern:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StringCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ValueOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Variable:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.When:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.WithParam:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.RelationalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CopyOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ForEach:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:org.apache.xalan.xsltc.compiler.util.Type typeCheckExternal(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:java.util.Vector typeCheckArgs(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.If:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Key:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LangCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LogicalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NameBase:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Number:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Param:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Predicate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Sort:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Sort:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Step:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StringCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ValueOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Variable:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.When:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.WithParam:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Sort:void parseContents(org.apache.xalan.xsltc.compiler.Parser)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AttributeSet:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Stylesheet:void parseOwnChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void parseChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Template:void parseSimplified(org.apache.xalan.xsltc.compiler.Stylesheet,org.apache.xalan.xsltc.compiler.Parser)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Sort:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.StartsWithCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Choose:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CopyOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ForEach:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:org.apache.xalan.xsltc.compiler.util.Type typeCheckExternal(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:java.util.Vector typeCheckArgs(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.If:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Key:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LangCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LogicalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NameBase:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Number:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Param:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Predicate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Sort:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Sort:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Step:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StringCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ValueOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Variable:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.When:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.WithParam:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Step:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CopyOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ForEach:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:org.apache.xalan.xsltc.compiler.util.Type typeCheckExternal(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:java.util.Vector typeCheckArgs(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.If:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Key:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LangCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LogicalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NameBase:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Number:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Param:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Predicate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Sort:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Sort:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Step:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StepPattern:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StringCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ValueOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Variable:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.When:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.WithParam:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.StringCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Choose:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CopyOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ForEach:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:org.apache.xalan.xsltc.compiler.util.Type typeCheckExternal(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:java.util.Vector typeCheckArgs(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.If:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Key:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LangCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LogicalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NameBase:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Number:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Param:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Predicate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Sort:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Sort:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Step:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StringCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ValueOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Variable:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.When:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.WithParam:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.ApplyImports:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.AttributeSet:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CallTemplate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Comment:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Copy:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Expression:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Fallback:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ForEach:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.If:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Instruction:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LiteralAttribute:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Message:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Otherwise:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Param:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ProcessingInstruction:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Stylesheet:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Template:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.TopLevelElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Variable:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.When:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.WithParam:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.XslAttribute:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.XslElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.TransletOutput:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.UnaryOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CopyOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ForEach:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:org.apache.xalan.xsltc.compiler.util.Type typeCheckExternal(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:java.util.Vector typeCheckArgs(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.If:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Key:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LangCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LogicalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NameBase:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Number:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Param:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Predicate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Sort:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Sort:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Step:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StringCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ValueOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Variable:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.When:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.WithParam:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.UnionPathExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CopyOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ForEach:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:org.apache.xalan.xsltc.compiler.util.Type typeCheckExternal(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:java.util.Vector typeCheckArgs(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.If:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Key:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LangCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LogicalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NameBase:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Number:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Param:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Predicate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Sort:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Sort:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Step:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StringCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ValueOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Variable:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.When:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.WithParam:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Choose:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CopyOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ForEach:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:org.apache.xalan.xsltc.compiler.util.Type typeCheckExternal(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:java.util.Vector typeCheckArgs(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.If:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Key:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LangCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LogicalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NameBase:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Number:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Param:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Predicate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Sort:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Sort:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Step:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StringCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ValueOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Variable:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.When:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.WithParam:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.ValueOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Variable:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Stylesheet:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.VariableRefBase:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.When:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.WithParam:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.FunctionCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Choose:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CopyOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ForEach:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:org.apache.xalan.xsltc.compiler.util.Type typeCheckExternal(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:java.util.Vector typeCheckArgs(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.If:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Key:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LangCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LogicalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NameBase:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Number:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Param:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Predicate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Sort:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Sort:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Step:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StringCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ValueOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Variable:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.When:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.WithParam:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.dom.DOMAdapter:short[] getNSMapping()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMAdapter:int getNamespaceType(int)"
        ]
    },
    "org.apache.xalan.xsltc.dom.DOMAdapter:short[] getNSReverse()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMAdapter:org.apache.xml.dtm.DTMAxisIterator getNamespaceAxisIterator(int,int)"
        ]
    },
    "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:int getElementById(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.Element getElementById(java.lang.String)",
            "org.apache.xpath.functions.FuncId:org.apache.xml.utils.StringVector getNodesByID(org.apache.xpath.XPathContext,int,java.lang.String,org.apache.xml.utils.StringVector,org.apache.xpath.NodeSetDTM,boolean)"
        ]
    },
    "org.apache.xalan.xsltc.runtime.AbstractTranslet:void prepassDocument(org.apache.xalan.xsltc.DOM)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:java.lang.String getAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Attribute:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.AttributeSet:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.CallTemplate:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Copy:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.DecimalFormatting:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.DecimalFormatting:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Import:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Include:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Key:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Message:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.NamespaceAlias:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Output:void transferAttribute(org.apache.xalan.xsltc.compiler.Output,java.lang.String)",
            "org.apache.xalan.xsltc.compiler.Output:void mergeOutput(org.apache.xalan.xsltc.compiler.Output)",
            "org.apache.xalan.xsltc.compiler.Output:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Parser:org.apache.xalan.xsltc.compiler.SyntaxTreeNode findStylesheet(org.apache.xalan.xsltc.compiler.SyntaxTreeNode,java.lang.String)",
            "org.apache.xalan.xsltc.compiler.Parser:org.apache.xalan.xsltc.compiler.Expression parseExpression(org.apache.xalan.xsltc.compiler.SyntaxTreeNode,java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.compiler.Parser:org.apache.xalan.xsltc.compiler.Pattern parsePattern(org.apache.xalan.xsltc.compiler.SyntaxTreeNode,java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.compiler.ProcessingInstruction:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Sort:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Stylesheet:void excludeExtensionPrefixes(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:java.lang.String getAttribute(java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.compiler.Template:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Text:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.ValueOf:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.VariableBase:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Whitespace:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.WithParam:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.XslAttribute:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.XslElement:void parseContents(org.apache.xalan.xsltc.compiler.Parser)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:boolean hasAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.Output:void transferAttribute(org.apache.xalan.xsltc.compiler.Output,java.lang.String)",
            "org.apache.xalan.xsltc.compiler.Output:void mergeOutput(org.apache.xalan.xsltc.compiler.Output)",
            "org.apache.xalan.xsltc.compiler.XslElement:void parseContents(org.apache.xalan.xsltc.compiler.Parser)"
        ]
    },
    "org.apache.xalan.xsltc.runtime.AttributeList:java.lang.String getValue(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void addAttribute(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.Output:void transferAttribute(org.apache.xalan.xsltc.compiler.Output,java.lang.String)",
            "org.apache.xalan.xsltc.compiler.Output:void mergeOutput(org.apache.xalan.xsltc.compiler.Output)"
        ]
    },
    "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:void addAttribute(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:void addUniqueAttribute(java.lang.String,java.lang.String,int)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(int,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.xsltc.dom.SAXImpl:java.lang.String shallowCopy(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void copyAttribute(int,int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xml.serializer.ToUnknownStream:void addAttribute(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xalan.xsltc.dom.MultiDOM:void <init>(org.apache.xalan.xsltc.DOM)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.dom.MultiDOM:int addDOMAdapter(org.apache.xalan.xsltc.dom.DOMAdapter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator document(java.lang.String,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM,boolean)",
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator document(org.apache.xalan.xsltc.DOM,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.dom.MultiDOM:int addDOMAdapter(org.apache.xalan.xsltc.dom.DOMAdapter,boolean)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator nodeList2Iterator(org.w3c.dom.NodeList,org.apache.xalan.xsltc.Translet,org.apache.xalan.xsltc.DOM)"
        ]
    },
    "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:org.apache.xalan.xsltc.runtime.Hashtable getElementsWithIDs()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMAdapter:org.apache.xalan.xsltc.runtime.Hashtable getElementsWithIDs()"
        ]
    },
    "org.apache.xalan.xsltc.dom.DOMAdapter:org.apache.xalan.xsltc.runtime.Hashtable getElementsWithIDs()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMAdapter:org.apache.xalan.xsltc.runtime.Hashtable getElementsWithIDs()",
            "org.apache.xalan.xsltc.dom.MultiDOM:org.apache.xalan.xsltc.runtime.Hashtable getElementsWithIDs()"
        ]
    },
    "org.apache.xalan.xsltc.trax.TemplatesImpl:java.lang.Class[] getTransletClasses()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.trax.TemplatesImpl:int getTransletIndex()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.trax.TemplatesImpl:org.apache.xalan.xsltc.Translet getTransletInstance()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.trax.TemplatesImpl:javax.xml.transform.Transformer newTransformer()"
        ]
    },
    "org.apache.xpath.axes.DescendantIterator:void setRoot(int,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.XSLProcessorContext:void outputToResultTree(org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xpath.axes.LocPathIterator:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.axes.LocPathIterator:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.NodeSequence:void setRoot(int,java.lang.Object)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMSafeStringPool:void main(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void <init>(org.apache.xml.dtm.DTMManager,javax.xml.transform.Source,int,org.apache.xml.dtm.DTMWSFilter,org.apache.xml.utils.XMLStringFactory,boolean,int,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void <init>(org.apache.xml.dtm.DTMManager,javax.xml.transform.Source,int,org.apache.xml.dtm.DTMWSFilter,org.apache.xml.utils.XMLStringFactory,boolean)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void <init>(org.apache.xml.dtm.DTMManager,javax.xml.transform.Source,int,org.apache.xml.dtm.DTMWSFilter,org.apache.xml.utils.XMLStringFactory,boolean,int,boolean,boolean,boolean)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMStringPool:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void <init>(org.apache.xml.dtm.DTMManager,javax.xml.transform.Source,int,org.apache.xml.dtm.DTMWSFilter,org.apache.xml.utils.XMLStringFactory,boolean,int,boolean,boolean)",
            "org.apache.xml.dtm.ref.CustomStringPool:void <init>()",
            "org.apache.xml.dtm.ref.DTMDocumentImpl:void <init>(org.apache.xml.dtm.DTMManager,int,org.apache.xml.dtm.DTMWSFilter,org.apache.xml.utils.XMLStringFactory)",
            "org.apache.xml.dtm.ref.DTMSafeStringPool:void <init>()",
            "org.apache.xml.dtm.ref.DTMStringPool:void main(java.lang.String[])"
        ]
    },
    "org.apache.xml.serializer.utils.AttList:void <init>(org.w3c.dom.NamedNodeMap,org.apache.xml.serializer.utils.DOM2Helper)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serializer.utils.AttList:int getLength()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.ProcessorKey:void setPropertiesFromAttributes(org.apache.xalan.processor.StylesheetHandler,java.lang.String,org.xml.sax.Attributes,org.apache.xalan.templates.ElemTemplateElement)",
            "org.apache.xalan.processor.ProcessorLRE:void startElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.processor.StylesheetHandler:void checkForFragmentID(org.xml.sax.Attributes)",
            "org.apache.xalan.processor.XSLTElementProcessor:org.xml.sax.Attributes setPropertiesFromAttributes(org.apache.xalan.processor.StylesheetHandler,java.lang.String,org.xml.sax.Attributes,org.apache.xalan.templates.ElemTemplateElement,boolean)",
            "org.apache.xalan.xsltc.compiler.Parser:void checkForSuperfluousAttributes(org.apache.xalan.xsltc.compiler.SyntaxTreeNode,org.xml.sax.Attributes)",
            "org.apache.xalan.xsltc.runtime.AttributeList:void <init>(org.xml.sax.Attributes)",
            "org.apache.xalan.xsltc.trax.SAX2DOM:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.dtm.ref.DTMDocumentImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.AttributesImplSerializer:void setAttributes(org.xml.sax.Attributes)",
            "org.apache.xml.serializer.SerializerBase:void addAttributes(org.xml.sax.Attributes)",
            "org.apache.xml.utils.DOMBuilder:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.utils.MutableAttrListImpl:void addAttributes(org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xml.serializer.utils.AttList:int getIndex(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.SAXImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xml.utils.AttList:void <init>(org.w3c.dom.NamedNodeMap,org.apache.xml.utils.DOMHelper)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.utils.AttList:int getLength()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.ProcessorKey:void setPropertiesFromAttributes(org.apache.xalan.processor.StylesheetHandler,java.lang.String,org.xml.sax.Attributes,org.apache.xalan.templates.ElemTemplateElement)",
            "org.apache.xalan.processor.ProcessorLRE:void startElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.processor.StylesheetHandler:void checkForFragmentID(org.xml.sax.Attributes)",
            "org.apache.xalan.processor.XSLTElementProcessor:org.xml.sax.Attributes setPropertiesFromAttributes(org.apache.xalan.processor.StylesheetHandler,java.lang.String,org.xml.sax.Attributes,org.apache.xalan.templates.ElemTemplateElement,boolean)",
            "org.apache.xalan.xsltc.compiler.Parser:void checkForSuperfluousAttributes(org.apache.xalan.xsltc.compiler.SyntaxTreeNode,org.xml.sax.Attributes)",
            "org.apache.xalan.xsltc.runtime.AttributeList:void <init>(org.xml.sax.Attributes)",
            "org.apache.xalan.xsltc.trax.SAX2DOM:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.dtm.ref.DTMDocumentImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.AttributesImplSerializer:void setAttributes(org.xml.sax.Attributes)",
            "org.apache.xml.serializer.SerializerBase:void addAttributes(org.xml.sax.Attributes)",
            "org.apache.xml.utils.DOMBuilder:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.utils.MutableAttrListImpl:void addAttributes(org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xml.utils.AttList:int getIndex(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.SAXImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xalan.xsltc.dom.SAXImpl:java.lang.String getUnparsedEntityURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:java.lang.String getUnparsedEntityURI(java.lang.String)",
            "org.apache.xalan.xsltc.dom.DOMAdapter:java.lang.String getUnparsedEntityURI(java.lang.String)",
            "org.apache.xpath.functions.FuncUnparsedEntityURI:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.Attr getAttributeNode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.utils.DOMHelper:java.lang.String getNamespaceForPrefix(java.lang.String,org.w3c.dom.Element)",
            "org.apache.xml.utils.DOMHelper:org.w3c.dom.Node locateAttrParent(org.w3c.dom.Element,org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.utils.DOMHelper:java.lang.String getUnparsedEntityURI(java.lang.String,org.w3c.dom.Document)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.serializer.utils.AttList:java.lang.String getURI(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.ProcessorKey:void setPropertiesFromAttributes(org.apache.xalan.processor.StylesheetHandler,java.lang.String,org.xml.sax.Attributes,org.apache.xalan.templates.ElemTemplateElement)",
            "org.apache.xalan.processor.ProcessorLRE:void startElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.processor.XSLTElementProcessor:org.xml.sax.Attributes setPropertiesFromAttributes(org.apache.xalan.processor.StylesheetHandler,java.lang.String,org.xml.sax.Attributes,org.apache.xalan.templates.ElemTemplateElement,boolean)",
            "org.apache.xalan.xsltc.trax.SAX2DOM:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.dtm.ref.DTMDocumentImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.SerializerBase:void addAttributes(org.xml.sax.Attributes)",
            "org.apache.xml.utils.DOMBuilder:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.utils.MutableAttrListImpl:void addAttributes(org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xml.serializer.utils.AttList:java.lang.String getLocalName(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.ProcessorKey:void setPropertiesFromAttributes(org.apache.xalan.processor.StylesheetHandler,java.lang.String,org.xml.sax.Attributes,org.apache.xalan.templates.ElemTemplateElement)",
            "org.apache.xalan.processor.ProcessorLRE:void startElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.processor.XSLTElementProcessor:org.xml.sax.Attributes setPropertiesFromAttributes(org.apache.xalan.processor.StylesheetHandler,java.lang.String,org.xml.sax.Attributes,org.apache.xalan.templates.ElemTemplateElement,boolean)",
            "org.apache.xalan.xsltc.trax.SAX2DOM:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.SerializerBase:void addAttributes(org.xml.sax.Attributes)",
            "org.apache.xml.utils.MutableAttrListImpl:void addAttributes(org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xml.serializer.utils.AttList:java.lang.String getQName(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.ProcessorKey:void setPropertiesFromAttributes(org.apache.xalan.processor.StylesheetHandler,java.lang.String,org.xml.sax.Attributes,org.apache.xalan.templates.ElemTemplateElement)",
            "org.apache.xalan.processor.ProcessorLRE:void startElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.processor.StylesheetHandler:void checkForFragmentID(org.xml.sax.Attributes)",
            "org.apache.xalan.processor.XSLTElementProcessor:org.xml.sax.Attributes setPropertiesFromAttributes(org.apache.xalan.processor.StylesheetHandler,java.lang.String,org.xml.sax.Attributes,org.apache.xalan.templates.ElemTemplateElement,boolean)",
            "org.apache.xalan.xsltc.compiler.Parser:void checkForSuperfluousAttributes(org.apache.xalan.xsltc.compiler.SyntaxTreeNode,org.xml.sax.Attributes)",
            "org.apache.xalan.xsltc.runtime.AttributeList:void <init>(org.xml.sax.Attributes)",
            "org.apache.xalan.xsltc.trax.SAX2DOM:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.dtm.ref.DTMDocumentImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.SerializerBase:void addAttributes(org.xml.sax.Attributes)",
            "org.apache.xml.utils.DOMBuilder:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.utils.MutableAttrListImpl:void addAttributes(org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xml.utils.AttList:java.lang.String getLocalName(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.ProcessorKey:void setPropertiesFromAttributes(org.apache.xalan.processor.StylesheetHandler,java.lang.String,org.xml.sax.Attributes,org.apache.xalan.templates.ElemTemplateElement)",
            "org.apache.xalan.processor.ProcessorLRE:void startElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.processor.XSLTElementProcessor:org.xml.sax.Attributes setPropertiesFromAttributes(org.apache.xalan.processor.StylesheetHandler,java.lang.String,org.xml.sax.Attributes,org.apache.xalan.templates.ElemTemplateElement,boolean)",
            "org.apache.xalan.xsltc.trax.SAX2DOM:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.SerializerBase:void addAttributes(org.xml.sax.Attributes)",
            "org.apache.xml.utils.MutableAttrListImpl:void addAttributes(org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xml.utils.AttList:java.lang.String getQName(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.ProcessorKey:void setPropertiesFromAttributes(org.apache.xalan.processor.StylesheetHandler,java.lang.String,org.xml.sax.Attributes,org.apache.xalan.templates.ElemTemplateElement)",
            "org.apache.xalan.processor.ProcessorLRE:void startElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.processor.StylesheetHandler:void checkForFragmentID(org.xml.sax.Attributes)",
            "org.apache.xalan.processor.XSLTElementProcessor:org.xml.sax.Attributes setPropertiesFromAttributes(org.apache.xalan.processor.StylesheetHandler,java.lang.String,org.xml.sax.Attributes,org.apache.xalan.templates.ElemTemplateElement,boolean)",
            "org.apache.xalan.xsltc.compiler.Parser:void checkForSuperfluousAttributes(org.apache.xalan.xsltc.compiler.SyntaxTreeNode,org.xml.sax.Attributes)",
            "org.apache.xalan.xsltc.runtime.AttributeList:void <init>(org.xml.sax.Attributes)",
            "org.apache.xalan.xsltc.trax.SAX2DOM:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.dtm.ref.DTMDocumentImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.SerializerBase:void addAttributes(org.xml.sax.Attributes)",
            "org.apache.xml.utils.DOMBuilder:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.utils.MutableAttrListImpl:void addAttributes(org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xpath.domapi.XPathNamespaceImpl:boolean hasAttributes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.runtime.BasisLibrary:void copyNodes(org.w3c.dom.NodeList,org.w3c.dom.Document,org.w3c.dom.Node)",
            "org.apache.xpath.domapi.XPathNamespaceImpl:boolean hasAttributes()"
        ]
    },
    "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:java.lang.String lookupNamespace(int,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMAdapter:java.lang.String lookupNamespace(int,java.lang.String)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String startXslElement(java.lang.String,java.lang.String,org.apache.xml.serializer.SerializationHandler,org.apache.xalan.xsltc.DOM,int)"
        ]
    },
    "org.apache.xalan.xsltc.dom.DOMAdapter:java.lang.String lookupNamespace(int,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMAdapter:java.lang.String lookupNamespace(int,java.lang.String)",
            "org.apache.xalan.xsltc.dom.MultiDOM:java.lang.String lookupNamespace(int,java.lang.String)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String startXslElement(java.lang.String,java.lang.String,org.apache.xml.serializer.SerializationHandler,org.apache.xalan.xsltc.DOM,int)"
        ]
    },
    "org.apache.xalan.processor.XSLTAttributeDef:java.lang.Object processENUM_OR_PQNAME(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.XSLTAttributeDef:java.lang.Object processValue(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)"
        ]
    },
    "org.apache.xalan.processor.XSLTAttributeDef:java.lang.Object processQNAME(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.XSLTAttributeDef:java.lang.Object processValue(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)"
        ]
    },
    "org.apache.xml.utils.QName:void <init>(java.lang.String,org.apache.xml.utils.PrefixResolver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.XSLTAttributeDef:java.util.Vector processQNAMES(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.processor.XSLTAttributeDef:java.util.Vector processQNAMESRNU(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.templates.FuncFormatNumb:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.compiler.Lexer:void tokenize(java.lang.String,java.util.Vector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.Lexer:void tokenize(java.lang.String)"
        ]
    },
    "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:void endDocument()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.Redirect:void write(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)",
            "org.apache.xalan.lib.Redirect:void close(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)",
            "org.apache.xalan.transformer.TransformerHandlerImpl:void endDocument()",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void endDocument()",
            "org.apache.xalan.transformer.TransformerImpl:void transform(javax.xml.transform.Source,boolean)",
            "org.apache.xalan.transformer.TransformerImpl:void transformNode(int)",
            "org.apache.xalan.transformer.TransformerImpl:int transformToRTF(org.apache.xalan.templates.ElemTemplateElement,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.transformer.TransformerImpl:java.lang.String transformToString(org.apache.xalan.templates.ElemTemplateElement)",
            "org.apache.xalan.xsltc.runtime.AbstractTranslet:void closeOutputHandler(org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse()",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse()",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void endDocument()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void endDocument()",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void endDocument()",
            "org.apache.xml.serializer.ToTextSAXHandler:void endDocument()",
            "org.apache.xml.serializer.ToUnknownStream:void endDocument()",
            "org.apache.xml.serializer.ToXMLSAXHandler:void endDocument()",
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)"
        ]
    },
    "org.apache.xpath.domapi.XPathNamespaceImpl:java.lang.String getPrefix()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode:boolean isEqualNode(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode:java.lang.String lookupNamespaceURI(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:boolean isEqualNode(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String lookupNamespaceURI(java.lang.String)",
            "org.apache.xml.utils.UnImplNode:boolean isEqualNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.UnImplNode:java.lang.String lookupNamespaceURI(java.lang.String)",
            "org.apache.xpath.domapi.XPathNamespaceImpl:java.lang.String getPrefix()",
            "org.apache.xpath.domapi.XPathNamespaceImpl:java.lang.String getLocalName()"
        ]
    },
    "org.apache.xpath.domapi.XPathNamespaceImpl:java.lang.String getLocalName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.trax.DOM2SAX:java.lang.String getLocalName(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:int addNode(org.w3c.dom.Node,int,int,int)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:int getAttributeNode(int,java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:java.lang.String getLocalName(int)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode:boolean isEqualNode(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode:java.lang.String lookupNamespaceURI(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMManagerDefault:int getDTMHandleFromNode(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:void traverseChildren(java.util.Vector,org.w3c.dom.Node,java.lang.String,java.lang.String,boolean,boolean)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:boolean isEqualNode(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String lookupNamespaceURI(java.lang.String)",
            "org.apache.xml.serializer.utils.AttList:int getIndex(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.utils.DOM2Helper:java.lang.String getLocalNameOfNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.AttList:int getIndex(java.lang.String,java.lang.String)",
            "org.apache.xml.utils.DOM2Helper:java.lang.String getLocalNameOfNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.UnImplNode:boolean isEqualNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.UnImplNode:java.lang.String lookupNamespaceURI(java.lang.String)"
        ]
    },
    "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void endDocument()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.Redirect:void write(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)",
            "org.apache.xalan.lib.Redirect:void close(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)",
            "org.apache.xalan.transformer.TransformerHandlerImpl:void endDocument()",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void endDocument()",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse()",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void endDocument()",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void endDocument()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void endDocument()",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void endDocument()",
            "org.apache.xml.serializer.ToTextSAXHandler:void endDocument()",
            "org.apache.xml.serializer.ToXMLSAXHandler:void endDocument()",
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void endElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void endElement(java.lang.String)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.TreeWalker:void endNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void endNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.dtm.ref.sax2dtm.SAX2RTFDTM:void endDocument()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.Redirect:void write(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)",
            "org.apache.xalan.lib.Redirect:void close(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)",
            "org.apache.xalan.transformer.TransformerHandlerImpl:void endDocument()",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void endDocument()",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse()",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void endDocument()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void endDocument()",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void endDocument()",
            "org.apache.xml.serializer.ToTextSAXHandler:void endDocument()",
            "org.apache.xml.serializer.ToXMLSAXHandler:void endDocument()",
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.dtm.ref.sax2dtm.SAX2RTFDTM:void startDocument()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void startDocument()",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void flushStartDoc()",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse()",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startDocument()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void startDocument()",
            "org.apache.xml.serializer.ToSAXHandler:void startDocumentInternal()",
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void endElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void endElement(java.lang.String)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.TreeWalker:void endNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void endNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xalan.lib.sql.DTMDocument:java.lang.String getNodeNameX(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.DTMDocument:void dumpDTM()",
            "org.apache.xalan.serialize.SerializerUtils:void processNSDecls(org.apache.xml.serializer.SerializationHandler,int,int,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.serialize.SerializerUtils:boolean isDefinedNSDecl(org.apache.xml.serializer.SerializationHandler,int,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.serialize.SerializerUtils:void ensureNamespaceDeclDeclared(org.apache.xml.serializer.SerializationHandler,org.apache.xml.dtm.DTM,int)",
            "org.apache.xalan.transformer.ClonerToResultTree:void cloneToResultTree(int,int,org.apache.xml.dtm.DTM,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:void dumpDTM(java.io.OutputStream)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:java.lang.String dumpNode(int)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)",
            "org.apache.xpath.functions.FuncQname:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xalan.xsltc.dom.SAXImpl:java.lang.String getAttributeValue(java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.templates.ElemSort:org.w3c.dom.Node appendChild(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.ExsltDynamic:org.w3c.dom.NodeList map(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList,java.lang.String)",
            "org.apache.xalan.lib.ExsltStrings:org.w3c.dom.NodeList split(java.lang.String,java.lang.String)",
            "org.apache.xalan.lib.ExsltStrings:org.w3c.dom.NodeList tokenize(java.lang.String,java.lang.String)",
            "org.apache.xalan.templates.ElemTemplateElement:org.w3c.dom.Node insertBefore(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xalan.xslt.EnvironmentCheck:void appendEnvironmentReport(org.w3c.dom.Node,org.w3c.dom.Document,java.util.Hashtable)",
            "org.apache.xalan.xslt.EnvironmentCheck:boolean appendFoundJars(org.w3c.dom.Node,org.w3c.dom.Document,java.util.Vector,java.lang.String)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:void copyNodes(org.w3c.dom.NodeList,org.w3c.dom.Document,org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.SAX2DOM:void characters(char[],int,int)",
            "org.apache.xalan.xsltc.trax.SAX2DOM:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.xsltc.trax.SAX2DOM:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.trax.SAX2DOM:void comment(char[],int,int)",
            "org.apache.xml.utils.DOMBuilder:void append(org.w3c.dom.Node)",
            "org.apache.xml.utils.Hashtree2Node:void appendHashToNode(java.util.Hashtable,java.lang.String,org.w3c.dom.Node,org.w3c.dom.Document)"
        ]
    },
    "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:java.lang.String getNodeName(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.XSLProcessorContext:void outputToResultTree(org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.serialize.SerializerUtils:void addAttribute(org.apache.xml.serializer.SerializationHandler,int)",
            "org.apache.xalan.templates.ElemCopy:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemNumber:org.apache.xpath.XPath getCountMatchPattern(org.apache.xpath.XPathContext,int)",
            "org.apache.xalan.templates.TemplateList:org.apache.xalan.templates.TemplateSubPatternAssociation getHead(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.templates.TemplateList:org.apache.xalan.templates.ElemTemplate getTemplateFast(org.apache.xpath.XPathContext,int,int,org.apache.xml.utils.QName,int,boolean,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.trace.PrintTraceListener:void selected(org.apache.xalan.trace.SelectionEvent)",
            "org.apache.xalan.transformer.ClonerToResultTree:void cloneToResultTree(int,int,org.apache.xml.dtm.DTM,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.transformer.TreeWalker2Result:void startNode(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:void dumpDTM(java.io.OutputStream)",
            "org.apache.xml.dtm.ref.DTMNamedNodeMap:org.w3c.dom.Node getNamedItem(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getNodeName()",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getTarget()",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getTagName()",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getName()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)",
            "org.apache.xpath.axes.PredicatedNodeTest:java.lang.String nodeToString(int)",
            "org.apache.xpath.functions.FuncNamespace:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.NodeTest:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.patterns.NodeTest:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)"
        ]
    },
    "org.apache.xml.serializer.utils.DOM2Helper:java.lang.String getLocalNameOfNodeFallback(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.utils.DOM2Helper:java.lang.String getLocalNameOfNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.utils.DOMHelper:java.lang.String getLocalNameOfNode(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.utils.AttList:java.lang.String getLocalName(int)",
            "org.apache.xml.utils.DOM2Helper:java.lang.String getLocalNameOfNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.DOMHelper:java.lang.String getExpandedElementName(org.w3c.dom.Element)",
            "org.apache.xml.utils.DOMHelper:java.lang.String getExpandedAttributeName(org.w3c.dom.Attr)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void endNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xalan.templates.ElemLiteralResult$Attribute:org.w3c.dom.Document getOwnerDocument()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemLiteralResult$Attribute:java.lang.Object setUserData(java.lang.String,java.lang.Object,org.w3c.dom.UserDataHandler)",
            "org.apache.xalan.templates.ElemLiteralResult$Attribute:java.lang.Object getUserData(java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void createResultContentHandler(javax.xml.transform.Result)",
            "org.apache.xalan.transformer.TransformerImpl:org.apache.xml.serializer.SerializationHandler createSerializationHandler(javax.xml.transform.Result,org.apache.xalan.templates.OutputProperties)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void <init>(org.apache.xalan.xsltc.dom.XSLTCDTMManager,javax.xml.transform.Source,int,org.apache.xml.dtm.DTMWSFilter,org.apache.xml.utils.XMLStringFactory,boolean,int,boolean,boolean)",
            "org.apache.xalan.xsltc.trax.SAX2DOM:void <init>(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:int getHandleOfNode(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:java.lang.String getDocumentTypeDeclarationSystemIdentifier()",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:java.lang.String getDocumentTypeDeclarationPublicIdentifier()",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:int getElementById(java.lang.String)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:java.lang.String getUnparsedEntityURI(java.lang.String)",
            "org.apache.xml.utils.DOMHelper:org.w3c.dom.Node getRootNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.DOMHelper:org.w3c.dom.Node getParentOfNode(org.w3c.dom.Node)",
            "org.apache.xpath.domapi.XPathExpressionImpl:java.lang.Object evaluate(org.w3c.dom.Node,short,java.lang.Object)",
            "org.apache.xpath.domapi.XPathNamespaceImpl:org.w3c.dom.Document getOwnerDocument()"
        ]
    },
    "org.apache.xalan.xsltc.dom.SAXImpl:void <init>(org.apache.xalan.xsltc.dom.XSLTCDTMManager,javax.xml.transform.Source,int,org.apache.xml.dtm.DTMWSFilter,org.apache.xml.utils.XMLStringFactory,boolean,int,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.SAXImpl:void <init>(org.apache.xalan.xsltc.dom.XSLTCDTMManager,javax.xml.transform.Source,int,org.apache.xml.dtm.DTMWSFilter,org.apache.xml.utils.XMLStringFactory,boolean,boolean)",
            "org.apache.xalan.xsltc.dom.XSLTCDTMManager:org.apache.xml.dtm.DTM getDTM(javax.xml.transform.Source,boolean,org.apache.xml.dtm.DTMWSFilter,boolean,boolean,boolean,int,boolean,boolean)"
        ]
    },
    "org.apache.xalan.xsltc.trax.SAX2DOM:void <init>(org.w3c.dom.Node,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.runtime.output.TransletOutputHandlerFactory:org.apache.xml.serializer.SerializationHandler getSerializationHandler()",
            "org.apache.xalan.xsltc.trax.SAX2DOM:void <init>(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode:org.w3c.dom.Document getOwnerDocument()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerIdentityImpl:void createResultContentHandler(javax.xml.transform.Result)",
            "org.apache.xalan.transformer.TransformerImpl:org.apache.xml.serializer.SerializationHandler createSerializationHandler(javax.xml.transform.Result,org.apache.xalan.templates.OutputProperties)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void <init>(org.apache.xalan.xsltc.dom.XSLTCDTMManager,javax.xml.transform.Source,int,org.apache.xml.dtm.DTMWSFilter,org.apache.xml.utils.XMLStringFactory,boolean,int,boolean,boolean)",
            "org.apache.xalan.xsltc.trax.SAX2DOM:void <init>(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:int getHandleOfNode(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:java.lang.String getDocumentTypeDeclarationSystemIdentifier()",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:java.lang.String getDocumentTypeDeclarationPublicIdentifier()",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:int getElementById(java.lang.String)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:java.lang.String getUnparsedEntityURI(java.lang.String)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode:java.lang.Object setUserData(java.lang.String,java.lang.Object,org.w3c.dom.UserDataHandler)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode:java.lang.Object getUserData(java.lang.String)",
            "org.apache.xml.utils.DOMHelper:org.w3c.dom.Node getRootNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.DOMHelper:org.w3c.dom.Node getParentOfNode(org.w3c.dom.Node)",
            "org.apache.xpath.domapi.XPathExpressionImpl:java.lang.Object evaluate(org.w3c.dom.Node,short,java.lang.Object)",
            "org.apache.xpath.domapi.XPathNamespaceImpl:org.w3c.dom.Document getOwnerDocument()"
        ]
    },
    "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.Object setUserData(java.lang.String,java.lang.Object,org.w3c.dom.UserDataHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemLiteralResult$Attribute:java.lang.Object setUserData(java.lang.String,java.lang.Object,org.w3c.dom.UserDataHandler)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode:java.lang.Object setUserData(java.lang.String,java.lang.Object,org.w3c.dom.UserDataHandler)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.Object setUserData(java.lang.String,java.lang.Object,org.w3c.dom.UserDataHandler)",
            "org.apache.xml.utils.UnImplNode:java.lang.Object setUserData(java.lang.String,java.lang.Object,org.w3c.dom.UserDataHandler)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.Object getUserData(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemLiteralResult$Attribute:java.lang.Object getUserData(java.lang.String)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode:java.lang.Object getUserData(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.Object getUserData(java.lang.String)",
            "org.apache.xml.utils.UnImplNode:java.lang.Object getUserData(java.lang.String)"
        ]
    },
    "org.apache.xpath.domapi.XPathNamespaceImpl:org.w3c.dom.Document getOwnerDocument()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerIdentityImpl:void createResultContentHandler(javax.xml.transform.Result)",
            "org.apache.xalan.transformer.TransformerImpl:org.apache.xml.serializer.SerializationHandler createSerializationHandler(javax.xml.transform.Result,org.apache.xalan.templates.OutputProperties)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void <init>(org.apache.xalan.xsltc.dom.XSLTCDTMManager,javax.xml.transform.Source,int,org.apache.xml.dtm.DTMWSFilter,org.apache.xml.utils.XMLStringFactory,boolean,int,boolean,boolean)",
            "org.apache.xalan.xsltc.trax.SAX2DOM:void <init>(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:int getHandleOfNode(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:java.lang.String getDocumentTypeDeclarationSystemIdentifier()",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:java.lang.String getDocumentTypeDeclarationPublicIdentifier()",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:int getElementById(java.lang.String)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:java.lang.String getUnparsedEntityURI(java.lang.String)",
            "org.apache.xml.utils.DOMHelper:org.w3c.dom.Node getRootNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.DOMHelper:org.w3c.dom.Node getParentOfNode(org.w3c.dom.Node)",
            "org.apache.xpath.domapi.XPathExpressionImpl:java.lang.Object evaluate(org.w3c.dom.Node,short,java.lang.Object)",
            "org.apache.xpath.domapi.XPathNamespaceImpl:org.w3c.dom.Document getOwnerDocument()"
        ]
    },
    "org.apache.xalan.transformer.TransformerIdentityImpl:void setDocumentLocator(org.xml.sax.Locator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void setDocumentLocator(org.xml.sax.Locator)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void setDocumentLocator(org.xml.sax.Locator)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startDocument()",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void setDocumentLocator(org.xml.sax.Locator)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void setDocumentLocator(org.xml.sax.Locator)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void setDocumentLocator(org.xml.sax.Locator)",
            "org.apache.xml.serializer.TreeWalker:void <init>(org.xml.sax.ContentHandler,java.lang.String)",
            "org.apache.xml.utils.TreeWalker:void <init>(org.xml.sax.ContentHandler,org.apache.xml.utils.DOMHelper,java.lang.String)",
            "org.apache.xml.utils.TreeWalker:void <init>(org.xml.sax.ContentHandler,org.apache.xml.utils.DOMHelper)",
            "org.apache.xml.utils.TreeWalker:void <init>(org.xml.sax.ContentHandler)"
        ]
    },
    "org.apache.xalan.lib.Redirect:org.apache.xml.serializer.SerializationHandler createSerializationHandler(org.apache.xalan.transformer.TransformerImpl,java.io.FileOutputStream,java.io.File,org.apache.xalan.templates.OutputProperties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.Redirect:org.xml.sax.ContentHandler makeFormatterListener(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall,java.lang.String,boolean,boolean,boolean)"
        ]
    },
    "org.apache.xalan.transformer.TransformerImpl:org.apache.xml.serializer.SerializationHandler createSerializationHandler(javax.xml.transform.Result)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void setResult(javax.xml.transform.Result)",
            "org.apache.xalan.transformer.TransformerImpl:void transform(javax.xml.transform.Source,javax.xml.transform.Result,boolean)",
            "org.apache.xalan.transformer.TransformerImpl:void transformNode(int,javax.xml.transform.Result)"
        ]
    },
    "org.apache.xml.utils.DOMHelper:boolean isNodeAfter(org.w3c.dom.Node,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.ExsltSets:org.w3c.dom.NodeList leading(org.w3c.dom.NodeList,org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.ExsltSets:org.w3c.dom.NodeList trailing(org.w3c.dom.NodeList,org.w3c.dom.NodeList)",
            "org.apache.xml.utils.DOM2Helper:boolean isNodeAfter(org.w3c.dom.Node,org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.utils.DOMHelper:short getLevel(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.utils.DOMHelper:org.w3c.dom.Node getRoot(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.templates.RedundentExprEliminator:org.apache.xalan.templates.ElemVariable addVarDeclToElem(org.apache.xalan.templates.ElemTemplateElement,org.apache.xpath.axes.LocPathIterator,org.apache.xalan.templates.ElemVariable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.RedundentExprEliminator:org.apache.xalan.templates.ElemVariable createLocalPseudoVarDecl(org.apache.xml.utils.QName,org.apache.xalan.templates.ElemTemplateElement,org.apache.xpath.axes.LocPathIterator)"
        ]
    },
    "org.apache.xalan.xsltc.trax.SAX2DOM:void processingInstruction(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xalan.xsltc.trax.SAX2DOM:void comment(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void comment(char[],int,int)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void comment(char[],int,int)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void comment(char[],int,int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void comment(char[],int,int)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void comment(char[],int,int)",
            "org.apache.xml.serializer.ToSAXHandler:void comment(java.lang.String)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void comment(char[],int,int)",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.FastStringBuffer:void sendSAXComment(org.xml.sax.ext.LexicalHandler,int,int)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xpath.objects.XString:void dispatchAsComment(org.xml.sax.ext.LexicalHandler)",
            "org.apache.xpath.objects.XStringForChars:void dispatchAsComment(org.xml.sax.ext.LexicalHandler)"
        ]
    },
    "org.apache.xalan.xsltc.dom.SAXImpl:org.apache.xml.dtm.DTMAxisIterator orderNodes(org.apache.xml.dtm.DTMAxisIterator,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:org.apache.xml.dtm.DTMAxisIterator orderNodes(org.apache.xml.dtm.DTMAxisIterator,int)",
            "org.apache.xalan.xsltc.dom.DOMAdapter:org.apache.xml.dtm.DTMAxisIterator orderNodes(org.apache.xml.dtm.DTMAxisIterator,int)",
            "org.apache.xalan.xsltc.dom.MultiDOM:org.apache.xml.dtm.DTMAxisIterator orderNodes(org.apache.xml.dtm.DTMAxisIterator,int)"
        ]
    },
    "org.apache.xalan.xsltc.dom.MultiDOM:org.w3c.dom.Node makeNode(org.apache.xml.dtm.DTMAxisIterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMAdapter:org.w3c.dom.Node makeNode(org.apache.xml.dtm.DTMAxisIterator)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.w3c.dom.Node referenceToNode(java.lang.Object,org.apache.xalan.xsltc.DOM)"
        ]
    },
    "org.apache.xpath.domapi.XPathNamespaceImpl:org.w3c.dom.NodeList getChildNodes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.ExsltBase:java.lang.String toString(org.w3c.dom.Node)",
            "org.apache.xalan.lib.PipeDocument:void pipeDocument(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:void copyNodes(org.w3c.dom.NodeList,org.w3c.dom.Document,org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.NodeList getElementsByTagName(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:void traverseChildren(java.util.Vector,org.w3c.dom.Node,java.lang.String,boolean)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.NodeList getElementsByTagNameNS(java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:void traverseChildren(java.util.Vector,org.w3c.dom.Node,java.lang.String,java.lang.String,boolean,boolean)",
            "org.apache.xpath.domapi.XPathNamespaceImpl:org.w3c.dom.NodeList getChildNodes()"
        ]
    },
    "org.apache.xalan.transformer.TrAXFilter:void setParent(org.xml.sax.XMLReader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TrAXFilter:void parse(org.xml.sax.InputSource)"
        ]
    },
    "org.apache.xml.serializer.ToHTMLStream:void endElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.XSLProcessorContext:void outputToResultTree(org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.templates.ElemCopy:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemElement:void constructNode(java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemLiteralResult:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.TransformerHandlerImpl:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void endElement(java.lang.String)",
            "org.apache.xml.serializer.ToHTMLStream:void endElement(java.lang.String)",
            "org.apache.xml.serializer.ToStream:void endElement(java.lang.String)",
            "org.apache.xml.serializer.ToUnknownStream:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.TreeWalker:void endNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void endNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serializer.ToStream:void endElement(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.serializer.ToXMLStream:void endElement(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(int,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.w3c.dom.Node)",
            "org.apache.xml.serializer.ToUnknownStream:void endElement(java.lang.String)"
        ]
    },
    "org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces:org.apache.xml.dtm.ref.IncrementalSAXSource createIncrementalSAXSource()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces:void main(java.lang.String[])"
        ]
    },
    "org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces:org.apache.xml.dtm.ref.IncrementalSAXSource createIncrementalSAXSource(org.apache.xerces.parsers.SAXParser)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void setIncrementalSAXSource(org.apache.xml.dtm.ref.IncrementalSAXSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.DTMManagerDefault:org.apache.xml.dtm.DTM getDTM(javax.xml.transform.Source,boolean,org.apache.xml.dtm.DTMWSFilter,boolean,boolean)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMDocumentImpl:void setIncrementalSAXSource(org.apache.xml.dtm.ref.IncrementalSAXSource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.dtm.ref.IncrementalSAXSource_Xerces:void main(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.templates.ElemTemplateElement:void callVisitors(org.apache.xalan.templates.XSLTVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemTemplateElement:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.Stylesheet:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)"
        ]
    },
    "org.apache.xalan.templates.Stylesheet:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemTemplateElement:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor)",
            "org.apache.xalan.templates.RedundentExprEliminator:boolean visitInstruction(org.apache.xalan.templates.ElemTemplateElement)"
        ]
    },
    "org.apache.xalan.templates.ElemElement:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemTemplateElement:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor)",
            "org.apache.xalan.templates.RedundentExprEliminator:boolean visitInstruction(org.apache.xalan.templates.ElemTemplateElement)"
        ]
    },
    "org.apache.xalan.templates.ElemLiteralResult:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemTemplateElement:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor)",
            "org.apache.xalan.templates.RedundentExprEliminator:boolean visitInstruction(org.apache.xalan.templates.ElemTemplateElement)"
        ]
    },
    "org.apache.xalan.templates.AbsPathChecker:boolean checkAbsolute(org.apache.xpath.axes.LocPathIterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.RedundentExprEliminator:boolean isAbsolute(org.apache.xpath.axes.LocPathIterator)"
        ]
    },
    "org.apache.xpath.axes.HasPositionalPredChecker:boolean check(org.apache.xpath.axes.LocPathIterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.UnionPathIterator:org.apache.xpath.axes.LocPathIterator createUnionIterator(org.apache.xpath.compiler.Compiler,int)"
        ]
    },
    "org.apache.xpath.axes.UnionPathIterator:void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.AVTPartXPath:void callVisitors(org.apache.xalan.templates.XSLTVisitor)",
            "org.apache.xalan.templates.AbsPathChecker:boolean checkAbsolute(org.apache.xpath.axes.LocPathIterator)",
            "org.apache.xalan.templates.ElemCopyOf:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemForEach:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemIf:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemNumber:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemValueOf:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemVariable:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemWhen:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemWithParam:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.RedundentExprEliminator:org.apache.xalan.templates.ElemVariable addVarDeclToElem(org.apache.xalan.templates.ElemTemplateElement,org.apache.xpath.axes.LocPathIterator,org.apache.xalan.templates.ElemVariable)",
            "org.apache.xalan.templates.RedundentExprEliminator:boolean visitPredicate(org.apache.xpath.ExpressionOwner,org.apache.xpath.Expression)",
            "org.apache.xalan.templates.RedundentExprEliminator:boolean visitInstruction(org.apache.xalan.templates.ElemTemplateElement)",
            "org.apache.xpath.axes.FilterExprIterator:void callPredicateVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:void callPredicateVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.axes.FilterExprWalker:void callPredicateVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.axes.HasPositionalPredChecker:boolean check(org.apache.xpath.axes.LocPathIterator)",
            "org.apache.xpath.axes.HasPositionalPredChecker:boolean visitPredicate(org.apache.xpath.ExpressionOwner,org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:void callPredicateVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.axes.UnionPathIterator:void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.functions.FuncExtFunction:void callArgVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.functions.Function2Args:void callArgVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.functions.Function3Args:void callArgVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.functions.FunctionMultiArgs:void callArgVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.functions.FunctionOneArg:void callArgVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.operations.Operation:void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.operations.UnaryOperation:void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.patterns.FunctionPattern:void callSubtreeVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.patterns.StepPattern:void callSubtreeVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.XPath:void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)"
        ]
    },
    "org.apache.xpath.axes.WalkingIterator:void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.AVTPartXPath:void callVisitors(org.apache.xalan.templates.XSLTVisitor)",
            "org.apache.xalan.templates.AbsPathChecker:boolean checkAbsolute(org.apache.xpath.axes.LocPathIterator)",
            "org.apache.xalan.templates.ElemCopyOf:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemForEach:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemIf:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemNumber:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemValueOf:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemVariable:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemWhen:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemWithParam:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.RedundentExprEliminator:org.apache.xalan.templates.ElemVariable addVarDeclToElem(org.apache.xalan.templates.ElemTemplateElement,org.apache.xpath.axes.LocPathIterator,org.apache.xalan.templates.ElemVariable)",
            "org.apache.xalan.templates.RedundentExprEliminator:boolean visitPredicate(org.apache.xpath.ExpressionOwner,org.apache.xpath.Expression)",
            "org.apache.xalan.templates.RedundentExprEliminator:boolean visitInstruction(org.apache.xalan.templates.ElemTemplateElement)",
            "org.apache.xpath.axes.FilterExprIterator:void callPredicateVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:void callPredicateVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.axes.FilterExprWalker:void callPredicateVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.axes.HasPositionalPredChecker:boolean check(org.apache.xpath.axes.LocPathIterator)",
            "org.apache.xpath.axes.HasPositionalPredChecker:boolean visitPredicate(org.apache.xpath.ExpressionOwner,org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:void callPredicateVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.axes.UnionPathIterator:void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.functions.FuncExtFunction:void callArgVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.functions.Function2Args:void callArgVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.functions.Function3Args:void callArgVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.functions.FunctionMultiArgs:void callArgVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.functions.FunctionOneArg:void callArgVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.operations.Operation:void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.operations.UnaryOperation:void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.patterns.FunctionPattern:void callSubtreeVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.patterns.StepPattern:void callSubtreeVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.XPath:void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)"
        ]
    },
    "org.apache.xpath.patterns.UnionPattern:void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.AVTPartXPath:void callVisitors(org.apache.xalan.templates.XSLTVisitor)",
            "org.apache.xalan.templates.ElemCopyOf:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemForEach:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemIf:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemNumber:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemValueOf:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemVariable:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemWhen:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemWithParam:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.RedundentExprEliminator:boolean visitPredicate(org.apache.xpath.ExpressionOwner,org.apache.xpath.Expression)",
            "org.apache.xalan.templates.RedundentExprEliminator:boolean visitInstruction(org.apache.xalan.templates.ElemTemplateElement)",
            "org.apache.xpath.axes.FilterExprIterator:void callPredicateVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:void callPredicateVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.axes.FilterExprWalker:void callPredicateVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.axes.HasPositionalPredChecker:boolean visitPredicate(org.apache.xpath.ExpressionOwner,org.apache.xpath.Expression)",
            "org.apache.xpath.axes.PredicatedNodeTest:void callPredicateVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.functions.FuncExtFunction:void callArgVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.functions.Function2Args:void callArgVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.functions.Function3Args:void callArgVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.functions.FunctionMultiArgs:void callArgVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.functions.FunctionOneArg:void callArgVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.operations.Operation:void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.operations.UnaryOperation:void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.patterns.FunctionPattern:void callSubtreeVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.patterns.StepPattern:void callSubtreeVisitors(org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.XPath:void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)"
        ]
    },
    "org.apache.xalan.processor.XSLTAttributeDef:java.lang.Object processEXPR(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.XSLTAttributeDef:java.lang.Object processValue(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)"
        ]
    },
    "org.apache.xalan.templates.AVT:void <init>(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.XSLTAttributeDef:org.apache.xalan.templates.AVT processAVT(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)",
            "org.apache.xalan.processor.XSLTAttributeDef:java.lang.Object processCDATA(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)",
            "org.apache.xalan.processor.XSLTAttributeDef:java.lang.Object processCHAR(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)",
            "org.apache.xalan.processor.XSLTAttributeDef:java.lang.Object processENUM(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)",
            "org.apache.xalan.processor.XSLTAttributeDef:java.lang.Object processENUM_OR_PQNAME(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)",
            "org.apache.xalan.processor.XSLTAttributeDef:java.lang.Object processNMTOKEN(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)",
            "org.apache.xalan.processor.XSLTAttributeDef:java.lang.Object processNUMBER(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)",
            "org.apache.xalan.processor.XSLTAttributeDef:java.lang.Object processAVT_QNAME(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)",
            "org.apache.xalan.processor.XSLTAttributeDef:java.lang.Object processNCNAME(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)",
            "org.apache.xalan.processor.XSLTAttributeDef:java.lang.Object processURL(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)"
        ]
    },
    "org.apache.xalan.processor.XSLTAttributeDef:java.lang.Object processPATTERN(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.XSLTAttributeDef:java.lang.Object processValue(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)"
        ]
    },
    "org.apache.xalan.processor.XSLTAttributeDef:java.util.Vector processSIMPLEPATTERNLIST(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.XSLTAttributeDef:java.lang.Object processValue(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)"
        ]
    },
    "org.apache.xpath.domapi.XPathNSResolverImpl:java.lang.String lookupNamespaceURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.utils.QName:void <init>(java.lang.String,org.w3c.dom.Element,org.apache.xml.utils.PrefixResolver)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.processor.ProcessorKey:void startElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.StylesheetHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Parser:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TemplatesHandlerImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void closeStartTag()",
            "org.apache.xml.serializer.ToXMLSAXHandler:void closeStartTag()",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serializer.ToHTMLStream:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void closeStartTag()",
            "org.apache.xml.serializer.ToStream:void startElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToStream:void startElement(java.lang.String)",
            "org.apache.xml.serializer.ToUnknownStream:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToUnknownStream:void emitFirstTag()",
            "org.apache.xml.serializer.ToXMLSAXHandler:void closeStartTag()",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serializer.ToStream:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void closeStartTag()",
            "org.apache.xml.serializer.ToHTMLStream:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToStream:void startElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToStream:void startElement(java.lang.String)",
            "org.apache.xml.serializer.ToUnknownStream:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToUnknownStream:void emitFirstTag()",
            "org.apache.xml.serializer.ToXMLSAXHandler:void closeStartTag()",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serializer.ToUnknownStream:void addAttributes(org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.ToUnknownStream:void addAttributes(org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xalan.lib.sql.XConnection:void <init>(org.apache.xalan.extensions.ExpressionContext,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.lib.sql.XConnection:void <init>(org.apache.xalan.extensions.ExpressionContext,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.lib.sql.XConnection:void <init>(org.apache.xalan.extensions.ExpressionContext,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.lib.sql.XConnection:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.XConnection:void finalize()"
        ]
    },
    "org.apache.xalan.client.XSLTProcessorApplet:java.lang.String getResultTreeAsText()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.client.XSLTProcessorApplet:java.lang.String transformToHtml(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.client.XSLTProcessorApplet:java.lang.String transformToHtml(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.client.XSLTProcessorApplet:java.lang.String getSourceTreeAsText()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.client.XSLTProcessorApplet:java.lang.String getStyleTreeAsText()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.lib.sql.DTMDocument:int addElementWithData(java.lang.Object,int,int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.SQLDocument:boolean addRowToDTMFromResultSet()",
            "org.apache.xalan.lib.sql.SQLErrorDocument:void <init>(org.apache.xml.dtm.DTMManager,int,java.sql.SQLException)",
            "org.apache.xalan.lib.sql.SQLErrorDocument:void <init>(org.apache.xml.dtm.DTMManager,int,java.lang.Exception,java.sql.SQLWarning,boolean)",
            "org.apache.xalan.lib.sql.SQLErrorDocument:void buildBasicStructure(java.lang.Exception)"
        ]
    },
    "org.apache.xalan.lib.sql.SQLErrorDocument:void <init>(org.apache.xml.dtm.DTMManager,int,java.sql.SQLException)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.lib.sql.SQLErrorDocument:void <init>(org.apache.xml.dtm.DTMManager,int,java.lang.Exception,java.sql.SQLWarning,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.XConnection:org.apache.xalan.lib.sql.SQLErrorDocument buildErrorDocument()"
        ]
    },
    "org.apache.xalan.lib.sql.SQLErrorDocument:void buildBasicStructure(java.lang.Exception)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.SQLErrorDocument:void <init>(org.apache.xml.dtm.DTMManager,int,java.sql.SQLException)",
            "org.apache.xalan.lib.sql.SQLErrorDocument:void <init>(org.apache.xml.dtm.DTMManager,int,java.lang.Exception)",
            "org.apache.xalan.lib.sql.SQLErrorDocument:void <init>(org.apache.xml.dtm.DTMManager,int,java.lang.Exception,java.sql.SQLWarning,boolean)"
        ]
    },
    "org.apache.xalan.lib.sql.DefaultConnectionPool:void freeUnused()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.DefaultConnectionPool:void setPoolEnabled(boolean)"
        ]
    },
    "org.apache.xalan.lib.sql.DefaultConnectionPool:void finalize()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.DefaultConnectionPool:void <init>()"
        ]
    },
    "org.apache.xalan.processor.StylesheetHandler:void error(java.lang.String,java.lang.Exception)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.ProcessorExsltFuncResult:void startElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.processor.ProcessorExsltFunction:void startElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.processor.ProcessorExsltFunction:void validate(org.apache.xalan.templates.ElemTemplateElement,org.apache.xalan.processor.StylesheetHandler)",
            "org.apache.xalan.processor.ProcessorInclude:void startElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.processor.ProcessorInclude:void parse(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.processor.ProcessorKey:void setPropertiesFromAttributes(org.apache.xalan.processor.StylesheetHandler,java.lang.String,org.xml.sax.Attributes,org.apache.xalan.templates.ElemTemplateElement)",
            "org.apache.xalan.processor.ProcessorOutputElem:void startElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.processor.StylesheetHandler:org.apache.xalan.processor.XSLTElementProcessor getProcessorFor(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.processor.StylesheetHandler:void characters(char[],int,int)",
            "org.apache.xalan.processor.StylesheetHandler:void error(java.lang.String,java.lang.Object[],java.lang.Exception)",
            "org.apache.xalan.processor.XSLTElementProcessor:org.xml.sax.Attributes setPropertiesFromAttributes(org.apache.xalan.processor.StylesheetHandler,java.lang.String,org.xml.sax.Attributes,org.apache.xalan.templates.ElemTemplateElement,boolean)"
        ]
    },
    "org.apache.xalan.processor.StylesheetHandler:void error(org.xml.sax.SAXParseException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void error(org.xml.sax.SAXParseException)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void error(org.xml.sax.SAXParseException)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void fatalError(org.xml.sax.SAXParseException)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void warning(org.xml.sax.SAXParseException)",
            "org.apache.xml.serializer.ToSAXHandler:void error(org.xml.sax.SAXParseException)"
        ]
    },
    "org.apache.xalan.templates.FuncDocument:void error(org.apache.xpath.XPathContext,java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xalan.transformer.TransformerHandlerImpl:void error(org.xml.sax.SAXParseException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void error(org.xml.sax.SAXParseException)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void error(org.xml.sax.SAXParseException)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void fatalError(org.xml.sax.SAXParseException)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void warning(org.xml.sax.SAXParseException)",
            "org.apache.xml.serializer.ToSAXHandler:void error(org.xml.sax.SAXParseException)"
        ]
    },
    "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:void passWarningsToListener(java.util.Vector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:javax.xml.transform.Templates newTemplates(javax.xml.transform.Source)"
        ]
    },
    "org.apache.xalan.xsltc.trax.TransformerImpl:void postErrorToListener(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.trax.TransformerImpl:org.apache.xalan.xsltc.DOM getDOM(javax.xml.transform.Source)",
            "org.apache.xalan.xsltc.trax.TransformerImpl:void transform(javax.xml.transform.Source,org.apache.xml.serializer.SerializationHandler,java.lang.String)",
            "org.apache.xalan.xsltc.trax.TransformerImpl:org.apache.xalan.xsltc.DOM retrieveDocument(java.lang.String,java.lang.String,org.apache.xalan.xsltc.Translet)"
        ]
    },
    "org.apache.xalan.processor.StylesheetHandler:void fatalError(org.xml.sax.SAXParseException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void fatalError(org.xml.sax.SAXParseException)",
            "org.apache.xml.serializer.ToSAXHandler:void fatalError(org.xml.sax.SAXParseException)"
        ]
    },
    "org.apache.xalan.processor.TransformerFactoryImpl:org.xml.sax.XMLFilter newXMLFilter(javax.xml.transform.Templates)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.TransformerFactoryImpl:org.xml.sax.XMLFilter newXMLFilter(javax.xml.transform.Source)"
        ]
    },
    "org.apache.xalan.transformer.MsgMgr:void error(javax.xml.transform.SourceLocator,java.lang.String,java.lang.Object[],java.lang.Exception)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.MsgMgr:void error(javax.xml.transform.SourceLocator,java.lang.String,java.lang.Exception)"
        ]
    },
    "org.apache.xalan.transformer.MsgMgr:void error(javax.xml.transform.SourceLocator,org.w3c.dom.Node,org.w3c.dom.Node,java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.MsgMgr:void error(javax.xml.transform.SourceLocator,java.lang.String)",
            "org.apache.xalan.transformer.MsgMgr:void error(javax.xml.transform.SourceLocator,java.lang.String,java.lang.Object[])",
            "org.apache.xalan.transformer.MsgMgr:void error(javax.xml.transform.SourceLocator,org.w3c.dom.Node,org.w3c.dom.Node,java.lang.String)"
        ]
    },
    "org.apache.xalan.transformer.TransformerHandlerImpl:void fatalError(org.xml.sax.SAXParseException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void fatalError(org.xml.sax.SAXParseException)",
            "org.apache.xml.serializer.ToSAXHandler:void fatalError(org.xml.sax.SAXParseException)"
        ]
    },
    "org.apache.xalan.xsltc.trax.SmartTransformerFactoryImpl:org.xml.sax.XMLFilter newXMLFilter(javax.xml.transform.Templates)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.trax.SmartTransformerFactoryImpl:org.xml.sax.XMLFilter newXMLFilter(javax.xml.transform.Source)"
        ]
    },
    "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:org.xml.sax.XMLFilter newXMLFilter(javax.xml.transform.Templates)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:org.xml.sax.XMLFilter newXMLFilter(javax.xml.transform.Source)"
        ]
    },
    "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression compileFunction(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression compile(int)",
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.patterns.StepPattern stepPattern(int,int,org.apache.xpath.patterns.StepPattern)"
        ]
    },
    "org.apache.xpath.compiler.Compiler:void error(java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression compile(int)",
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.patterns.StepPattern stepPattern(int,int,org.apache.xpath.patterns.StepPattern)",
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression compileFunction(int)",
            "org.apache.xpath.compiler.OpMap:int getFirstPredicateOpPos(int)"
        ]
    },
    "org.apache.xpath.compiler.XPathParser:void error(java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.Lexer:void tokenize(java.lang.String,java.util.Vector)",
            "org.apache.xpath.compiler.XPathParser:void initXPath(org.apache.xpath.compiler.Compiler,java.lang.String,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.compiler.XPathParser:void initMatchPattern(org.apache.xpath.compiler.Compiler,java.lang.String,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.compiler.XPathParser:void consumeExpected(java.lang.String)",
            "org.apache.xpath.compiler.XPathParser:void consumeExpected(char)",
            "org.apache.xpath.compiler.XPathParser:void BooleanExpr()",
            "org.apache.xpath.compiler.XPathParser:void PathExpr()",
            "org.apache.xpath.compiler.XPathParser:boolean FunctionCall()",
            "org.apache.xpath.compiler.XPathParser:void LocationPath()",
            "org.apache.xpath.compiler.XPathParser:boolean RelativeLocationPath()",
            "org.apache.xpath.compiler.XPathParser:boolean Step()",
            "org.apache.xpath.compiler.XPathParser:int AxisName()",
            "org.apache.xpath.compiler.XPathParser:void NodeTest(int)",
            "org.apache.xpath.compiler.XPathParser:void Literal()",
            "org.apache.xpath.compiler.XPathParser:void Number()",
            "org.apache.xpath.compiler.XPathParser:void LocationPathPattern()",
            "org.apache.xpath.compiler.XPathParser:boolean AbbreviatedNodeTestStep(boolean)"
        ]
    },
    "org.apache.xpath.compiler.XPathParser:void errorForDOM3(java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.Lexer:int mapNSTokens(java.lang.String,int,int,int)"
        ]
    },
    "org.apache.xpath.Expression:void error(org.apache.xpath.XPathContext,java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.XPath:void error(org.apache.xpath.XPathContext,int,java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xpath.XPathContext:void assertion(boolean,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.processor.StylesheetHandler:void warn(java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.XSLTAttributeDef:void handleError(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.Object[],java.lang.Exception)",
            "org.apache.xalan.templates.AVT:void <init>(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)"
        ]
    },
    "org.apache.xalan.processor.StylesheetHandler:void warning(org.xml.sax.SAXParseException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void warning(org.xml.sax.SAXParseException)",
            "org.apache.xml.serializer.ToSAXHandler:void warning(org.xml.sax.SAXParseException)"
        ]
    },
    "org.apache.xalan.templates.FuncDocument:void warn(org.apache.xpath.XPathContext,java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncDocument:int getDoc(org.apache.xpath.XPathContext,int,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xalan.templates.FuncFormatNumb:void warn(org.apache.xpath.XPathContext,java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.FuncFormatNumb:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xalan.transformer.MsgMgr:void message(javax.xml.transform.SourceLocator,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemMessage:void execute(org.apache.xalan.transformer.TransformerImpl)"
        ]
    },
    "org.apache.xalan.transformer.MsgMgr:void warn(javax.xml.transform.SourceLocator,org.w3c.dom.Node,org.w3c.dom.Node,java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemNumber:java.util.Locale getLocale(org.apache.xalan.transformer.TransformerImpl,int)",
            "org.apache.xalan.transformer.MsgMgr:void warn(javax.xml.transform.SourceLocator,java.lang.String)",
            "org.apache.xalan.transformer.MsgMgr:void warn(javax.xml.transform.SourceLocator,java.lang.String,java.lang.Object[])",
            "org.apache.xalan.transformer.MsgMgr:void warn(javax.xml.transform.SourceLocator,org.w3c.dom.Node,org.w3c.dom.Node,java.lang.String)"
        ]
    },
    "org.apache.xalan.transformer.TransformerHandlerImpl:void warning(org.xml.sax.SAXParseException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void warning(org.xml.sax.SAXParseException)",
            "org.apache.xml.serializer.ToSAXHandler:void warning(org.xml.sax.SAXParseException)"
        ]
    },
    "org.apache.xalan.xsltc.trax.TransformerImpl$MessageHandler:void displayMessage(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.runtime.AbstractTranslet:void displayMessage(java.lang.String)"
        ]
    },
    "org.apache.xalan.xsltc.trax.TransformerImpl:void postWarningToListener(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.serializer.ToStream:void setEncoding(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.runtime.output.TransletOutputHandlerFactory:org.apache.xml.serializer.SerializationHandler getSerializationHandler()",
            "org.apache.xml.serializer.ToStream:void init(java.io.Writer,java.util.Properties,boolean,boolean)",
            "org.apache.xml.serializer.ToStream:void init(java.io.OutputStream,java.util.Properties,boolean)",
            "org.apache.xml.serializer.ToUnknownStream:void setEncoding(java.lang.String)",
            "org.apache.xml.serializer.ToXMLStream:void CopyFrom(org.apache.xml.serializer.ToXMLStream)"
        ]
    },
    "org.apache.xml.serializer.ToXMLStream:void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.serialize.SerializerUtils:void addAttribute(org.apache.xml.serializer.SerializationHandler,int)",
            "org.apache.xalan.templates.ElemAttribute:void constructNode(java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemLiteralResult:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xml.serializer.ToStream:java.lang.String ensureAttributesNamespaceIsDeclared(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToUnknownStream:void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)"
        ]
    },
    "org.apache.xml.serializer.ToXMLStream:java.lang.String getXMLVersion()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.ToXMLStream:void startDocumentInternal()"
        ]
    },
    "org.apache.xpath.compiler.Compiler:void warn(java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xpath.compiler.XPathParser:void warn(java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xpath.Expression:void warn(org.apache.xpath.XPathContext,java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.functions.FuncSystemProperty:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Variable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,boolean)"
        ]
    },
    "org.apache.xpath.XPath:void warn(org.apache.xpath.XPathContext,int,java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.dtm.DTMConfigurationException:void <init>(java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.dtm.DTMConfigurationException:void <init>(java.lang.String,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.DTMManager:org.apache.xml.dtm.DTMManager newInstance(org.apache.xml.utils.XMLStringFactory)"
        ]
    },
    "org.apache.xml.serializer.CharInfo:org.apache.xml.serializer.CharInfo getCharInfo(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.ToHTMLStream:void <clinit>()",
            "org.apache.xml.serializer.ToStream:void init(java.io.Writer,java.util.Properties,boolean,boolean)",
            "org.apache.xml.serializer.ToXMLStream:void <clinit>()"
        ]
    },
    "org.apache.xml.serializer.Encodings:org.apache.xml.serializer.EncodingInfo[] loadEncodingInfo()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.Encodings:void <clinit>()"
        ]
    },
    "org.apache.xml.serializer.SerializerFactory:org.apache.xml.serializer.Serializer getSerializer(java.util.Properties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.PipeDocument:void usePipe(java.util.Vector,java.lang.String,java.lang.String)",
            "org.apache.xalan.serialize.SerializerFactory:org.apache.xalan.serialize.Serializer getSerializer(java.util.Properties)",
            "org.apache.xalan.transformer.SerializerSwitcher:void switchSerializerIfHTML(org.apache.xalan.transformer.TransformerImpl,java.lang.String,java.lang.String)",
            "org.apache.xalan.transformer.SerializerSwitcher:org.apache.xml.serializer.Serializer switchSerializerIfHTML(java.lang.String,java.lang.String,java.util.Properties,org.apache.xml.serializer.Serializer)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void createResultContentHandler(javax.xml.transform.Result)",
            "org.apache.xalan.transformer.TransformerImpl:org.apache.xml.serializer.SerializationHandler createSerializationHandler(javax.xml.transform.Result,org.apache.xalan.templates.OutputProperties)",
            "org.apache.xalan.transformer.TransformerImpl:java.lang.String transformToString(org.apache.xalan.templates.ElemTemplateElement)",
            "org.apache.xml.serializer.ToUnknownStream:void initStreamOutput()"
        ]
    },
    "org.apache.xml.utils.ListingErrorHandler:void warning(org.xml.sax.SAXParseException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void warning(org.xml.sax.SAXParseException)",
            "org.apache.xml.serializer.ToSAXHandler:void warning(org.xml.sax.SAXParseException)"
        ]
    },
    "org.apache.xml.utils.ListingErrorHandler:void error(org.xml.sax.SAXParseException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void error(org.xml.sax.SAXParseException)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void error(org.xml.sax.SAXParseException)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void fatalError(org.xml.sax.SAXParseException)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void warning(org.xml.sax.SAXParseException)",
            "org.apache.xml.serializer.ToSAXHandler:void error(org.xml.sax.SAXParseException)"
        ]
    },
    "org.apache.xml.utils.ListingErrorHandler:void fatalError(org.xml.sax.SAXParseException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void fatalError(org.xml.sax.SAXParseException)",
            "org.apache.xml.serializer.ToSAXHandler:void fatalError(org.xml.sax.SAXParseException)"
        ]
    },
    "org.apache.xml.utils.ListingErrorHandler:void warning(javax.xml.transform.TransformerException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.XConnection:void setError(java.lang.Exception,org.apache.xalan.extensions.ExpressionContext)",
            "org.apache.xalan.lib.sql.XConnection:void setError(java.lang.Exception,org.apache.xalan.lib.sql.SQLDocument,java.sql.SQLWarning)",
            "org.apache.xalan.processor.StylesheetHandler:void warn(java.lang.String,java.lang.Object[])",
            "org.apache.xalan.processor.StylesheetHandler:void warning(org.xml.sax.SAXParseException)",
            "org.apache.xalan.templates.ElemExtensionCall:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.FuncDocument:void warn(org.apache.xpath.XPathContext,java.lang.String,java.lang.Object[])",
            "org.apache.xalan.templates.FuncFormatNumb:void warn(org.apache.xpath.XPathContext,java.lang.String,java.lang.Object[])",
            "org.apache.xalan.transformer.MsgMgr:void message(javax.xml.transform.SourceLocator,java.lang.String,boolean)",
            "org.apache.xalan.transformer.MsgMgr:void warn(javax.xml.transform.SourceLocator,org.w3c.dom.Node,org.w3c.dom.Node,java.lang.String,java.lang.Object[])",
            "org.apache.xalan.transformer.TransformerHandlerImpl:void warning(org.xml.sax.SAXParseException)",
            "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:void passWarningsToListener(java.util.Vector)",
            "org.apache.xalan.xsltc.trax.TransformerImpl$MessageHandler:void displayMessage(java.lang.String)",
            "org.apache.xalan.xsltc.trax.TransformerImpl:void postWarningToListener(java.lang.String)",
            "org.apache.xml.serializer.ToStream:void setEncoding(java.lang.String)",
            "org.apache.xml.serializer.ToXMLStream:void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)",
            "org.apache.xml.serializer.ToXMLStream:java.lang.String getXMLVersion()",
            "org.apache.xpath.compiler.Compiler:void warn(java.lang.String,java.lang.Object[])",
            "org.apache.xpath.compiler.XPathParser:void warn(java.lang.String,java.lang.Object[])",
            "org.apache.xpath.Expression:void warn(org.apache.xpath.XPathContext,java.lang.String,java.lang.Object[])",
            "org.apache.xpath.XPath:void warn(org.apache.xpath.XPathContext,int,java.lang.String,java.lang.Object[])"
        ]
    },
    "org.apache.xml.utils.ListingErrorHandler:void error(javax.xml.transform.TransformerException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.StylesheetHandler:void error(java.lang.String,java.lang.Exception)",
            "org.apache.xalan.processor.StylesheetHandler:void error(org.xml.sax.SAXParseException)",
            "org.apache.xalan.processor.StylesheetHandler:void pushSpaceHandling(org.xml.sax.Attributes)",
            "org.apache.xalan.templates.FuncDocument:void error(org.apache.xpath.XPathContext,java.lang.String,java.lang.Object[])",
            "org.apache.xalan.transformer.TransformerHandlerImpl:void error(org.xml.sax.SAXParseException)",
            "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:void passWarningsToListener(java.util.Vector)",
            "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:void passErrorsToListener(java.util.Vector)",
            "org.apache.xalan.xsltc.trax.TransformerImpl:void postErrorToListener(java.lang.String)",
            "org.apache.xpath.XPath:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPath:boolean bool(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)"
        ]
    },
    "org.apache.xml.utils.ListingErrorHandler:void fatalError(javax.xml.transform.TransformerException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.StylesheetHandler:void fatalError(org.xml.sax.SAXParseException)",
            "org.apache.xalan.processor.TransformerFactoryImpl:javax.xml.transform.Templates processFromNode(org.w3c.dom.Node)",
            "org.apache.xalan.processor.TransformerFactoryImpl:org.xml.sax.XMLFilter newXMLFilter(javax.xml.transform.Templates)",
            "org.apache.xalan.processor.TransformerFactoryImpl:javax.xml.transform.sax.TransformerHandler newTransformerHandler(javax.xml.transform.Templates)",
            "org.apache.xalan.processor.TransformerFactoryImpl:javax.xml.transform.Transformer newTransformer(javax.xml.transform.Source)",
            "org.apache.xalan.processor.TransformerFactoryImpl:javax.xml.transform.Templates newTemplates(javax.xml.transform.Source)",
            "org.apache.xalan.templates.ElemApplyTemplates:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemExtensionCall:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemMessage:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemUnknown:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.MsgMgr:void error(javax.xml.transform.SourceLocator,java.lang.String,java.lang.Object[],java.lang.Exception)",
            "org.apache.xalan.transformer.MsgMgr:void error(javax.xml.transform.SourceLocator,org.w3c.dom.Node,org.w3c.dom.Node,java.lang.String,java.lang.Object[])",
            "org.apache.xalan.transformer.TransformerHandlerImpl:void fatalError(org.xml.sax.SAXParseException)",
            "org.apache.xalan.transformer.TransformerImpl:void transform(javax.xml.transform.Source,boolean)",
            "org.apache.xalan.transformer.TransformerImpl:void fatalError(java.lang.Throwable)",
            "org.apache.xalan.transformer.TransformerImpl:void transformNode(int)",
            "org.apache.xalan.xsltc.trax.SmartTransformerFactoryImpl:org.xml.sax.XMLFilter newXMLFilter(javax.xml.transform.Templates)",
            "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:javax.xml.transform.Templates newTemplates(javax.xml.transform.Source)",
            "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:org.xml.sax.XMLFilter newXMLFilter(javax.xml.transform.Templates)",
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression compileFunction(int)",
            "org.apache.xpath.compiler.Compiler:void error(java.lang.String,java.lang.Object[])",
            "org.apache.xpath.compiler.XPathParser:void error(java.lang.String,java.lang.Object[])",
            "org.apache.xpath.compiler.XPathParser:void errorForDOM3(java.lang.String,java.lang.Object[])",
            "org.apache.xpath.Expression:void error(org.apache.xpath.XPathContext,java.lang.String,java.lang.Object[])",
            "org.apache.xpath.XPath:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPath:boolean bool(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPath:void error(org.apache.xpath.XPathContext,int,java.lang.String,java.lang.Object[])",
            "org.apache.xpath.XPathContext:void assertion(boolean,java.lang.String)"
        ]
    },
    "org.apache.xalan.lib.ExsltStrings$DocumentHolder:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.ExsltStrings$DocumentHolder:org.w3c.dom.Document access$000()",
            "org.apache.xalan.lib.ExsltStrings$DocumentHolder:void <clinit>()",
            "org.apache.xalan.lib.ExsltStrings:org.w3c.dom.NodeList split(java.lang.String,java.lang.String)",
            "org.apache.xalan.lib.ExsltStrings:org.w3c.dom.NodeList tokenize(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xalan.lib.Extensions$DocumentHolder:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.Extensions$DocumentHolder:org.w3c.dom.Document access$000()",
            "org.apache.xalan.lib.Extensions$DocumentHolder:void <clinit>()",
            "org.apache.xalan.lib.Extensions:org.w3c.dom.NodeList tokenize(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xalan.templates.RedundentExprEliminator:org.apache.xpath.axes.WalkingIterator createIteratorFromSteps(org.apache.xpath.axes.WalkingIterator,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.RedundentExprEliminator:org.apache.xalan.templates.RedundentExprEliminator$MultistepExprHolder matchAndEliminatePartialPaths(org.apache.xalan.templates.RedundentExprEliminator$MultistepExprHolder,org.apache.xalan.templates.RedundentExprEliminator$MultistepExprHolder,boolean,int,org.apache.xalan.templates.ElemTemplateElement)"
        ]
    },
    "org.apache.xalan.transformer.TransformSnapshotImpl:void <init>(org.apache.xalan.transformer.TransformerImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerImpl:org.apache.xalan.transformer.TransformSnapshot getSnapshot()"
        ]
    },
    "org.apache.xalan.transformer.TransformSnapshotImpl:void apply(org.apache.xalan.transformer.TransformerImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerImpl:void resetToStylesheet(org.apache.xalan.transformer.TransformSnapshot)"
        ]
    },
    "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:boolean nextNode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:int _dataOrQName(int)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:int getNextNodeIdentity(int)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:int getElementById(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int _exptype(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int _level(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int _firstch(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int _nextsib(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int _prevsib(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int _parent(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:void dumpDTM(java.io.OutputStream)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$ChildTraverser:int getNextIndexed(int,int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBaseTraversers$IndexedDTMAxisTraverser:int getNextIndexed(int,int,int)"
        ]
    },
    "org.apache.xml.dtm.ref.DTMAxisIteratorBase:org.apache.xml.dtm.DTMAxisIterator cloneIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.AbsoluteIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.CurrentNodeListIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.DupFilterIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.FilterIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.ForwardPositionIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.MatchingIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.MultiDOM$AxisIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.MultiDOM$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.NthIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NamespaceWildcardIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.SAXImpl$NodeValueIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.SortingIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.StepIterator:org.apache.xml.dtm.DTMAxisIterator cloneIterator()",
            "org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator:org.apache.xalan.xsltc.dom.UnionIterator$LookAheadIterator cloneIterator()",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:org.apache.xml.dtm.DTMAxisIterator referenceToNodeSet(java.lang.Object)",
            "org.apache.xpath.axes.OneStepIterator:java.lang.Object clone()"
        ]
    },
    "org.apache.xml.dtm.ref.DTMNodeIterator:void <init>(org.apache.xml.dtm.DTMIterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.MethodResolver:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.xalan.transformer.XalanTransformState:org.w3c.dom.traversal.NodeIterator getContextNodeList()",
            "org.apache.xpath.objects.XNodeSet:org.w3c.dom.traversal.NodeIterator nodeset()",
            "org.apache.xpath.objects.XRTreeFrag:java.lang.Object object()",
            "org.apache.xpath.XPathContext$XPathExpressionContext:org.w3c.dom.traversal.NodeIterator getContextNodes()"
        ]
    },
    "org.apache.xml.utils.ObjectPool:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xpath.axes.IteratorPool:org.apache.xml.dtm.DTMIterator getInstance()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.LocPathIterator:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.LocPathIterator:void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)",
            "org.apache.xpath.axes.LocPathIterator:org.apache.xml.dtm.DTMIterator asIterator(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.axes.LocPathIterator:int asNode(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.axes.PredicatedNodeTest:void resetProximityPositions()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.AxesWalker:void setRoot(int)",
            "org.apache.xpath.axes.BasicTestIterator:int nextNode()",
            "org.apache.xpath.axes.BasicTestIterator:org.apache.xml.dtm.DTMIterator cloneWithReset()",
            "org.apache.xpath.axes.DescendantIterator:org.apache.xml.dtm.DTMIterator cloneWithReset()",
            "org.apache.xpath.axes.DescendantIterator:int nextNode()",
            "org.apache.xpath.axes.PredicatedNodeTest:void readObject(java.io.ObjectInputStream)"
        ]
    },
    "org.apache.xpath.functions.FuncSystemProperty:void loadPropertyFile(java.lang.String,java.util.Properties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.functions.FuncSystemProperty:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.objects.XString:int compareToIgnoreCase(org.apache.xml.utils.XMLString)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xpath.operations.Variable:void fixupVariables(java.util.Vector,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void compose(org.apache.xalan.templates.StylesheetRoot)",
            "org.apache.xpath.axes.FilterExprIterator:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.FilterExprWalker:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.PredicatedNodeTest:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.FuncExtFunction:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.Function2Args:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.Function3Args:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.FunctionMultiArgs:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.FunctionOneArg:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.operations.Operation:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.operations.UnaryOperation:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.patterns.FunctionPattern:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.patterns.StepPattern:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.XPath:void fixupVariables(java.util.Vector,int)"
        ]
    },
    "org.apache.xpath.objects.XNodeSet:org.w3c.dom.traversal.NodeIterator nodeset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.MethodResolver:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.xpath.domapi.XPathResultImpl:void <init>(short,org.apache.xpath.objects.XObject,org.w3c.dom.Node,org.apache.xpath.XPath)",
            "org.apache.xpath.domapi.XPathResultImpl:org.w3c.dom.Node getSingleNodeValue()",
            "org.apache.xpath.jaxp.XPathExpressionImpl:java.lang.Object getResultAsType(org.apache.xpath.objects.XObject,javax.xml.namespace.QName)",
            "org.apache.xpath.jaxp.XPathImpl:java.lang.Object getResultAsType(org.apache.xpath.objects.XObject,javax.xml.namespace.QName)",
            "org.apache.xpath.objects.XNodeSetForDOM:org.w3c.dom.traversal.NodeIterator nodeset()",
            "org.apache.xpath.CachedXPathAPI:org.w3c.dom.traversal.NodeIterator selectNodeIterator(org.w3c.dom.Node,java.lang.String,org.w3c.dom.Node)",
            "org.apache.xpath.XPathAPI:org.w3c.dom.traversal.NodeIterator selectNodeIterator(org.w3c.dom.Node,java.lang.String,org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.utils.DefaultErrorHandler:void warning(javax.xml.transform.TransformerException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.XConnection:void setError(java.lang.Exception,org.apache.xalan.extensions.ExpressionContext)",
            "org.apache.xalan.lib.sql.XConnection:void setError(java.lang.Exception,org.apache.xalan.lib.sql.SQLDocument,java.sql.SQLWarning)",
            "org.apache.xalan.processor.StylesheetHandler:void warn(java.lang.String,java.lang.Object[])",
            "org.apache.xalan.processor.StylesheetHandler:void warning(org.xml.sax.SAXParseException)",
            "org.apache.xalan.templates.ElemExtensionCall:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.FuncDocument:void warn(org.apache.xpath.XPathContext,java.lang.String,java.lang.Object[])",
            "org.apache.xalan.templates.FuncFormatNumb:void warn(org.apache.xpath.XPathContext,java.lang.String,java.lang.Object[])",
            "org.apache.xalan.transformer.MsgMgr:void message(javax.xml.transform.SourceLocator,java.lang.String,boolean)",
            "org.apache.xalan.transformer.MsgMgr:void warn(javax.xml.transform.SourceLocator,org.w3c.dom.Node,org.w3c.dom.Node,java.lang.String,java.lang.Object[])",
            "org.apache.xalan.transformer.TransformerHandlerImpl:void warning(org.xml.sax.SAXParseException)",
            "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:void passWarningsToListener(java.util.Vector)",
            "org.apache.xalan.xsltc.trax.TransformerImpl$MessageHandler:void displayMessage(java.lang.String)",
            "org.apache.xalan.xsltc.trax.TransformerImpl:void postWarningToListener(java.lang.String)",
            "org.apache.xml.serializer.ToStream:void setEncoding(java.lang.String)",
            "org.apache.xml.serializer.ToXMLStream:void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)",
            "org.apache.xml.serializer.ToXMLStream:java.lang.String getXMLVersion()",
            "org.apache.xpath.compiler.Compiler:void warn(java.lang.String,java.lang.Object[])",
            "org.apache.xpath.compiler.XPathParser:void warn(java.lang.String,java.lang.Object[])",
            "org.apache.xpath.Expression:void warn(org.apache.xpath.XPathContext,java.lang.String,java.lang.Object[])",
            "org.apache.xpath.XPath:void warn(org.apache.xpath.XPathContext,int,java.lang.String,java.lang.Object[])"
        ]
    },
    "org.apache.xml.utils.DefaultErrorHandler:void error(javax.xml.transform.TransformerException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.StylesheetHandler:void error(java.lang.String,java.lang.Exception)",
            "org.apache.xalan.processor.StylesheetHandler:void error(org.xml.sax.SAXParseException)",
            "org.apache.xalan.processor.StylesheetHandler:void pushSpaceHandling(org.xml.sax.Attributes)",
            "org.apache.xalan.templates.FuncDocument:void error(org.apache.xpath.XPathContext,java.lang.String,java.lang.Object[])",
            "org.apache.xalan.transformer.TransformerHandlerImpl:void error(org.xml.sax.SAXParseException)",
            "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:void passWarningsToListener(java.util.Vector)",
            "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:void passErrorsToListener(java.util.Vector)",
            "org.apache.xalan.xsltc.trax.TransformerImpl:void postErrorToListener(java.lang.String)",
            "org.apache.xpath.XPath:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPath:boolean bool(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)"
        ]
    },
    "org.apache.xml.utils.DefaultErrorHandler:void fatalError(javax.xml.transform.TransformerException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.StylesheetHandler:void fatalError(org.xml.sax.SAXParseException)",
            "org.apache.xalan.processor.TransformerFactoryImpl:javax.xml.transform.Templates processFromNode(org.w3c.dom.Node)",
            "org.apache.xalan.processor.TransformerFactoryImpl:org.xml.sax.XMLFilter newXMLFilter(javax.xml.transform.Templates)",
            "org.apache.xalan.processor.TransformerFactoryImpl:javax.xml.transform.sax.TransformerHandler newTransformerHandler(javax.xml.transform.Templates)",
            "org.apache.xalan.processor.TransformerFactoryImpl:javax.xml.transform.Transformer newTransformer(javax.xml.transform.Source)",
            "org.apache.xalan.processor.TransformerFactoryImpl:javax.xml.transform.Templates newTemplates(javax.xml.transform.Source)",
            "org.apache.xalan.templates.ElemApplyTemplates:void transformSelectedNodes(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemExtensionCall:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemMessage:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemUnknown:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.MsgMgr:void error(javax.xml.transform.SourceLocator,java.lang.String,java.lang.Object[],java.lang.Exception)",
            "org.apache.xalan.transformer.MsgMgr:void error(javax.xml.transform.SourceLocator,org.w3c.dom.Node,org.w3c.dom.Node,java.lang.String,java.lang.Object[])",
            "org.apache.xalan.transformer.TransformerHandlerImpl:void fatalError(org.xml.sax.SAXParseException)",
            "org.apache.xalan.transformer.TransformerImpl:void transform(javax.xml.transform.Source,boolean)",
            "org.apache.xalan.transformer.TransformerImpl:void fatalError(java.lang.Throwable)",
            "org.apache.xalan.transformer.TransformerImpl:void transformNode(int)",
            "org.apache.xalan.xsltc.trax.SmartTransformerFactoryImpl:org.xml.sax.XMLFilter newXMLFilter(javax.xml.transform.Templates)",
            "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:javax.xml.transform.Templates newTemplates(javax.xml.transform.Source)",
            "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:org.xml.sax.XMLFilter newXMLFilter(javax.xml.transform.Templates)",
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression compileFunction(int)",
            "org.apache.xpath.compiler.Compiler:void error(java.lang.String,java.lang.Object[])",
            "org.apache.xpath.compiler.XPathParser:void error(java.lang.String,java.lang.Object[])",
            "org.apache.xpath.compiler.XPathParser:void errorForDOM3(java.lang.String,java.lang.Object[])",
            "org.apache.xpath.Expression:void error(org.apache.xpath.XPathContext,java.lang.String,java.lang.Object[])",
            "org.apache.xpath.XPath:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPath:boolean bool(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPath:void error(org.apache.xpath.XPathContext,int,java.lang.String,java.lang.Object[])",
            "org.apache.xpath.XPathContext:void assertion(boolean,java.lang.String)"
        ]
    },
    "org.apache.xpath.compiler.XPathParser:void initXPath(org.apache.xpath.compiler.Compiler,java.lang.String,org.apache.xml.utils.PrefixResolver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.XPathParser:void initXPath(org.apache.xpath.compiler.Compiler,java.lang.String,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPath:void <init>(java.lang.String,javax.xml.transform.SourceLocator,org.apache.xml.utils.PrefixResolver,int,javax.xml.transform.ErrorListener)",
            "org.apache.xpath.XPath:void <init>(java.lang.String,javax.xml.transform.SourceLocator,org.apache.xml.utils.PrefixResolver,int,javax.xml.transform.ErrorListener,org.apache.xpath.compiler.FunctionTable)"
        ]
    },
    "org.apache.xalan.xsltc.runtime.BasisLibrary:org.w3c.dom.NodeList referenceToNodeList(java.lang.Object,org.apache.xalan.xsltc.DOM)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xpath.axes.IteratorPool:org.apache.xml.dtm.DTMIterator getInstanceOrThrow()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.LocPathIterator:org.apache.xml.dtm.DTMIterator cloneWithReset()"
        ]
    },
    "org.apache.xpath.axes.NodeSequence:java.lang.Object clone()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformSnapshotImpl:void <init>(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.TransformSnapshotImpl:void apply(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xml.dtm.ref.DTMNodeIterator:void <init>(org.apache.xml.dtm.DTMIterator)",
            "org.apache.xpath.axes.FilterExprWalker:java.lang.Object clone()",
            "org.apache.xpath.axes.IteratorPool:org.apache.xml.dtm.DTMIterator getInstanceOrThrow()",
            "org.apache.xpath.axes.IteratorPool:org.apache.xml.dtm.DTMIterator getInstance()",
            "org.apache.xpath.axes.NodeSequence:java.lang.Object clone()",
            "org.apache.xpath.axes.UnionPathIterator:java.lang.Object clone()",
            "org.apache.xpath.VariableStack:java.lang.Object clone()"
        ]
    },
    "org.apache.xpath.axes.UnionPathIterator:java.lang.Object clone()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformSnapshotImpl:void <init>(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.TransformSnapshotImpl:void apply(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xml.dtm.ref.DTMNodeIterator:void <init>(org.apache.xml.dtm.DTMIterator)",
            "org.apache.xpath.axes.IteratorPool:org.apache.xml.dtm.DTMIterator getInstanceOrThrow()",
            "org.apache.xpath.axes.IteratorPool:org.apache.xml.dtm.DTMIterator getInstance()",
            "org.apache.xpath.axes.LocPathIterator:int getLength()",
            "org.apache.xpath.axes.NodeSequence:java.lang.Object clone()",
            "org.apache.xpath.axes.UnionPathIterator:java.lang.Object clone()",
            "org.apache.xpath.VariableStack:java.lang.Object clone()"
        ]
    },
    "org.apache.xpath.VariableStack:java.lang.Object clone()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformSnapshotImpl:void <init>(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.TransformSnapshotImpl:void apply(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xpath.VariableStack:java.lang.Object clone()"
        ]
    },
    "org.apache.xalan.xsltc.dom.NodeSortRecordFactory:void <init>(org.apache.xalan.xsltc.DOM,java.lang.String,org.apache.xalan.xsltc.Translet,java.lang.String[],java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.serializer.CharInfo$1:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.CharInfo:org.apache.xml.serializer.CharInfo getCharInfoBasedOnPrivilege(java.lang.String,java.lang.String,boolean)"
        ]
    },
    "org.apache.xpath.axes.UnionPathIterator:void loadLocationPaths(org.apache.xpath.compiler.Compiler,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.UnionPathIterator:void <init>(org.apache.xpath.compiler.Compiler,int)",
            "org.apache.xpath.axes.UnionPathIterator:void loadLocationPaths(org.apache.xpath.compiler.Compiler,int,int)"
        ]
    },
    "org.apache.xpath.axes.WalkingIteratorSorted:void <init>(org.apache.xpath.compiler.Compiler,int,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.WalkerFactory:org.apache.xml.dtm.DTMIterator newDTMIterator(org.apache.xpath.compiler.Compiler,int,boolean)"
        ]
    },
    "org.apache.xpath.axes.FilterExprWalker:void init(org.apache.xpath.compiler.Compiler,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.UnionPathIterator:void loadLocationPaths(org.apache.xpath.compiler.Compiler,int,int)",
            "org.apache.xpath.axes.WalkerFactory:org.apache.xpath.axes.AxesWalker loadOneWalker(org.apache.xpath.axes.WalkingIterator,org.apache.xpath.compiler.Compiler,int)",
            "org.apache.xpath.axes.WalkerFactory:org.apache.xpath.axes.AxesWalker loadWalkers(org.apache.xpath.axes.WalkingIterator,org.apache.xpath.compiler.Compiler,int,int)"
        ]
    },
    "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression compileOperation(org.apache.xpath.operations.Operation,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression or(int)",
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression and(int)",
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression notequals(int)",
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression equals(int)",
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression lte(int)",
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression lt(int)",
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression gte(int)",
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression gt(int)",
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression plus(int)",
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression minus(int)",
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression mult(int)",
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression div(int)",
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression mod(int)"
        ]
    },
    "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression compileUnary(org.apache.xpath.operations.UnaryOperation,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression 'neg'(int)",
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression string(int)",
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression bool(int)",
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression number(int)"
        ]
    },
    "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression group(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression compile(int)"
        ]
    },
    "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression arg(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression compile(int)"
        ]
    },
    "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression predicate(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.Compiler:void compilePredicates(int,org.apache.xpath.Expression[])"
        ]
    },
    "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression matchPattern(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression compile(int)"
        ]
    },
    "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression compileExtension(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression compile(int)"
        ]
    },
    "org.apache.xpath.XPath:void <init>(java.lang.String,javax.xml.transform.SourceLocator,org.apache.xml.utils.PrefixResolver,int,javax.xml.transform.ErrorListener)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.ProcessorLRE:void startElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.templates.AVTPartXPath:void <init>(java.lang.String,org.apache.xml.utils.PrefixResolver,org.apache.xpath.compiler.XPathParser,org.apache.xpath.XPathFactory,org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.ElemNumber:org.apache.xpath.XPath getCountMatchPattern(org.apache.xpath.XPathContext,int)",
            "org.apache.xalan.templates.StylesheetRoot:void <init>(javax.xml.transform.ErrorListener)",
            "org.apache.xalan.templates.StylesheetRoot:void initDefaultRule(javax.xml.transform.ErrorListener)",
            "org.apache.xpath.CachedXPathAPI:org.apache.xpath.objects.XObject eval(org.w3c.dom.Node,java.lang.String,org.w3c.dom.Node)",
            "org.apache.xpath.CachedXPathAPI:org.apache.xpath.objects.XObject eval(org.w3c.dom.Node,java.lang.String,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPath:void <init>(java.lang.String,javax.xml.transform.SourceLocator,org.apache.xml.utils.PrefixResolver,int)",
            "org.apache.xpath.XPathAPI:org.apache.xpath.objects.XObject eval(org.w3c.dom.Node,java.lang.String,org.w3c.dom.Node)",
            "org.apache.xpath.XPathAPI:org.apache.xpath.objects.XObject eval(org.w3c.dom.Node,java.lang.String,org.apache.xml.utils.PrefixResolver)"
        ]
    },
    "org.apache.xpath.XPath:void <init>(java.lang.String,javax.xml.transform.SourceLocator,org.apache.xml.utils.PrefixResolver,int,javax.xml.transform.ErrorListener,org.apache.xpath.compiler.FunctionTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.StylesheetHandler:org.apache.xpath.XPath createXPath(java.lang.String,org.apache.xalan.templates.ElemTemplateElement)",
            "org.apache.xalan.processor.StylesheetHandler:org.apache.xpath.XPath createMatchPatternXPath(java.lang.String,org.apache.xalan.templates.ElemTemplateElement)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.LiteralAttribute:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.ProcessingInstruction:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.XslAttribute:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.XslElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Choose:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.FunctionCall:org.apache.xalan.xsltc.compiler.util.Type typeCheckStandard(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.FunctionCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Stylesheet:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Parser:void createAST(org.apache.xalan.xsltc.compiler.Stylesheet)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.VariableRefBase:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CopyOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ForEach:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:org.apache.xalan.xsltc.compiler.util.Type typeCheckExternal(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:java.util.Vector typeCheckArgs(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.If:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Key:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LangCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LogicalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NameBase:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Number:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Param:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Predicate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Sort:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Sort:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Step:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StringCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnresolvedRef:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ValueOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Variable:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.When:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.WithParam:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Step:void translatePredicates(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.Step:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Step:void translatePredicates(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.ProcessingInstructionPattern:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.AbsolutePathPattern:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.AlternativePattern:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.AncestorPattern:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CopyOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ForEach:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:org.apache.xalan.xsltc.compiler.util.Type typeCheckExternal(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:java.util.Vector typeCheckArgs(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.If:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Key:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LangCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LogicalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NameBase:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Number:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Param:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ParentPattern:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Predicate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Sort:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Sort:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Step:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StringCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Template:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ValueOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Variable:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.When:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.WithParam:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.StepPattern:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.AbsolutePathPattern:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.AlternativePattern:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.AncestorPattern:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CopyOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ForEach:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:org.apache.xalan.xsltc.compiler.util.Type typeCheckExternal(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:java.util.Vector typeCheckArgs(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.If:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Key:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LangCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LogicalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NameBase:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Number:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Param:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ParentPattern:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Predicate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Sort:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Sort:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Step:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StringCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Template:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ValueOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Variable:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.When:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.WithParam:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.ApplyImports:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.AttributeSet:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.CallTemplate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Comment:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Copy:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Expression:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.compiler.Fallback:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnsupportedElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Instruction:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Message:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Otherwise:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Template:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.TopLevelElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Stylesheet:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.VariableRefBase:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.dom.DOMAdapter:org.apache.xml.dtm.DTMAxisIterator getNamespaceAxisIterator(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMAdapter:org.apache.xml.dtm.DTMAxisIterator getNamespaceAxisIterator(int,int)",
            "org.apache.xalan.xsltc.dom.MultiDOM:org.apache.xml.dtm.DTMAxisIterator getNamespaceAxisIterator(int,int)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.DecimalFormatting:void parseContents(org.apache.xalan.xsltc.compiler.Parser)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AttributeSet:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Stylesheet:void parseOwnChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void parseChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Template:void parseSimplified(org.apache.xalan.xsltc.compiler.Stylesheet,org.apache.xalan.xsltc.compiler.Parser)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.DecimalFormatting:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Stylesheet:java.lang.String compileTopLevel(org.apache.xalan.xsltc.compiler.util.ClassGenerator,java.util.Enumeration)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.TopLevelElement:org.apache.bcel.generic.InstructionList compile(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Key:void parseContents(org.apache.xalan.xsltc.compiler.Parser)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AttributeSet:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Stylesheet:void parseOwnChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void parseChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Template:void parseSimplified(org.apache.xalan.xsltc.compiler.Stylesheet,org.apache.xalan.xsltc.compiler.Parser)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.NamespaceAlias:void parseContents(org.apache.xalan.xsltc.compiler.Parser)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AttributeSet:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Stylesheet:void parseOwnChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void parseChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Template:void parseSimplified(org.apache.xalan.xsltc.compiler.Stylesheet,org.apache.xalan.xsltc.compiler.Parser)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Output:void transferAttribute(org.apache.xalan.xsltc.compiler.Output,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.Output:void mergeOutput(org.apache.xalan.xsltc.compiler.Output)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Output:void mergeOutput(org.apache.xalan.xsltc.compiler.Output)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.Parser:void setOutput(org.apache.xalan.xsltc.compiler.Output)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Output:void parseContents(org.apache.xalan.xsltc.compiler.Parser)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AttributeSet:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Stylesheet:void parseOwnChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void parseChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Template:void parseSimplified(org.apache.xalan.xsltc.compiler.Stylesheet,org.apache.xalan.xsltc.compiler.Parser)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Parser:org.apache.xalan.xsltc.compiler.SyntaxTreeNode findStylesheet(org.apache.xalan.xsltc.compiler.SyntaxTreeNode,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.Parser:org.apache.xalan.xsltc.compiler.SyntaxTreeNode getStylesheet(org.apache.xalan.xsltc.compiler.SyntaxTreeNode)",
            "org.apache.xalan.xsltc.compiler.Parser:org.apache.xalan.xsltc.compiler.SyntaxTreeNode findStylesheet(org.apache.xalan.xsltc.compiler.SyntaxTreeNode,java.lang.String)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Parser:org.apache.xalan.xsltc.compiler.Expression parseExpression(org.apache.xalan.xsltc.compiler.SyntaxTreeNode,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.CopyOf:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.ForEach:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.If:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Key:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Number:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Sort:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.ValueOf:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.VariableBase:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.When:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.WithParam:void parseContents(org.apache.xalan.xsltc.compiler.Parser)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Parser:org.apache.xalan.xsltc.compiler.Pattern parsePattern(org.apache.xalan.xsltc.compiler.SyntaxTreeNode,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.Key:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Number:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Template:void parseContents(org.apache.xalan.xsltc.compiler.Parser)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Stylesheet:void excludeExtensionPrefixes(org.apache.xalan.xsltc.compiler.Parser)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.Parser:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:java.lang.String getAttribute(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.Output:void parseContents(org.apache.xalan.xsltc.compiler.Parser)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.ValueOf:void parseContents(org.apache.xalan.xsltc.compiler.Parser)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AttributeSet:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Stylesheet:void parseOwnChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void parseChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Template:void parseSimplified(org.apache.xalan.xsltc.compiler.Stylesheet,org.apache.xalan.xsltc.compiler.Parser)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Whitespace:void parseContents(org.apache.xalan.xsltc.compiler.Parser)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AttributeSet:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Stylesheet:void parseOwnChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void parseChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Template:void parseSimplified(org.apache.xalan.xsltc.compiler.Stylesheet,org.apache.xalan.xsltc.compiler.Parser)"
        ]
    },
    "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:void addUniqueAttribute(java.lang.String,java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.ToUnknownStream:void addUniqueAttribute(java.lang.String,java.lang.String,int)"
        ]
    },
    "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator document(org.apache.xalan.xsltc.DOM,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.LoadDocument:org.apache.xml.dtm.DTMAxisIterator documentF(java.lang.Object,java.lang.String,org.apache.xalan.xsltc.runtime.AbstractTranslet,org.apache.xalan.xsltc.DOM)"
        ]
    },
    "org.apache.xalan.xsltc.dom.MultiDOM:org.apache.xalan.xsltc.runtime.Hashtable getElementsWithIDs()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMAdapter:org.apache.xalan.xsltc.runtime.Hashtable getElementsWithIDs()"
        ]
    },
    "org.apache.xalan.xsltc.trax.TemplatesImpl:javax.xml.transform.Transformer newTransformer()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.client.XSLTProcessorApplet:void start()",
            "org.apache.xalan.processor.TransformerFactoryImpl:javax.xml.transform.sax.TransformerHandler newTransformerHandler(javax.xml.transform.Templates)",
            "org.apache.xalan.processor.TransformerFactoryImpl:javax.xml.transform.Transformer newTransformer(javax.xml.transform.Source)",
            "org.apache.xalan.transformer.TrAXFilter:void <init>(javax.xml.transform.Templates)",
            "org.apache.xalan.xslt.Process:void main(java.lang.String[])",
            "org.apache.xalan.xsltc.trax.TemplatesImpl:java.util.Properties getOutputProperties()",
            "org.apache.xalan.xsltc.trax.TrAXFilter:void <init>(javax.xml.transform.Templates)",
            "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:javax.xml.transform.Transformer newTransformer(javax.xml.transform.Source)",
            "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:javax.xml.transform.sax.TransformerHandler newTransformerHandler(javax.xml.transform.Templates)"
        ]
    },
    "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void <init>(org.apache.xml.dtm.DTMManager,javax.xml.transform.Source,int,org.apache.xml.dtm.DTMWSFilter,org.apache.xml.utils.XMLStringFactory,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.sax2dtm.SAX2RTFDTM:void <init>(org.apache.xml.dtm.DTMManager,javax.xml.transform.Source,int,org.apache.xml.dtm.DTMWSFilter,org.apache.xml.utils.XMLStringFactory,boolean)",
            "org.apache.xml.dtm.ref.DTMManagerDefault:org.apache.xml.dtm.DTM getDTM(javax.xml.transform.Source,boolean,org.apache.xml.dtm.DTMWSFilter,boolean,boolean)"
        ]
    },
    "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void <init>(org.apache.xml.dtm.DTMManager,javax.xml.transform.Source,int,org.apache.xml.dtm.DTMWSFilter,org.apache.xml.utils.XMLStringFactory,boolean,int,boolean,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.SAXImpl:void <init>(org.apache.xalan.xsltc.dom.XSLTCDTMManager,javax.xml.transform.Source,int,org.apache.xml.dtm.DTMWSFilter,org.apache.xml.utils.XMLStringFactory,boolean,int,boolean,boolean)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void <init>(org.apache.xml.dtm.DTMManager,javax.xml.transform.Source,int,org.apache.xml.dtm.DTMWSFilter,org.apache.xml.utils.XMLStringFactory,boolean)"
        ]
    },
    "org.apache.xml.dtm.ref.CustomStringPool:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.dtm.ref.DTMDocumentImpl:void <init>(org.apache.xml.dtm.DTMManager,int,org.apache.xml.dtm.DTMWSFilter,org.apache.xml.utils.XMLStringFactory)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.dtm.ref.DTMSafeStringPool:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.DTMSafeStringPool:void main(java.lang.String[])"
        ]
    },
    "org.apache.xml.serializer.AttributesImplSerializer:void setAttributes(org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:java.lang.String getUnparsedEntityURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMAdapter:java.lang.String getUnparsedEntityURI(java.lang.String)",
            "org.apache.xpath.functions.FuncUnparsedEntityURI:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xalan.xsltc.dom.DOMAdapter:java.lang.String getUnparsedEntityURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMAdapter:java.lang.String getUnparsedEntityURI(java.lang.String)",
            "org.apache.xalan.xsltc.dom.MultiDOM:java.lang.String getUnparsedEntityURI(java.lang.String)"
        ]
    },
    "org.apache.xalan.xsltc.dom.MultiDOM:java.lang.String lookupNamespace(int,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMAdapter:java.lang.String lookupNamespace(int,java.lang.String)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String startXslElement(java.lang.String,java.lang.String,org.apache.xml.serializer.SerializationHandler,org.apache.xalan.xsltc.DOM,int)"
        ]
    },
    "org.apache.xalan.processor.XSLTAttributeDef:java.lang.Object processValue(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.XSLTAttributeDef:boolean setAttrValue(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)"
        ]
    },
    "org.apache.xalan.processor.XSLTAttributeDef:java.util.Vector processQNAMES(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.XSLTAttributeDef:java.lang.Object processValue(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)"
        ]
    },
    "org.apache.xalan.processor.XSLTAttributeDef:java.util.Vector processQNAMESRNU(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.XSLTAttributeDef:java.lang.Object processValue(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)"
        ]
    },
    "org.apache.xpath.compiler.Lexer:void tokenize(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.XPathParser:void initXPath(org.apache.xpath.compiler.Compiler,java.lang.String,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.compiler.XPathParser:void initMatchPattern(org.apache.xpath.compiler.Compiler,java.lang.String,org.apache.xml.utils.PrefixResolver)"
        ]
    },
    "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void endDocument()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.Redirect:void write(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)",
            "org.apache.xalan.lib.Redirect:void close(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)",
            "org.apache.xalan.transformer.TransformerHandlerImpl:void endDocument()",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void endDocument()",
            "org.apache.xalan.xsltc.dom.SAXImpl:void endDocument()",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse()",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void endDocument()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void endDocument()",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void endDocument()",
            "org.apache.xml.serializer.ToTextSAXHandler:void endDocument()",
            "org.apache.xml.serializer.ToXMLSAXHandler:void endDocument()",
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)"
        ]
    },
    "org.apache.xalan.lib.ExsltStrings:org.w3c.dom.NodeList split(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.ExsltStrings:org.w3c.dom.NodeList split(java.lang.String)"
        ]
    },
    "org.apache.xalan.lib.ExsltStrings:org.w3c.dom.NodeList tokenize(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.ExsltStrings:org.w3c.dom.NodeList tokenize(java.lang.String)"
        ]
    },
    "org.apache.xalan.templates.ElemLiteralResult$Attribute:java.lang.Object setUserData(java.lang.String,java.lang.Object,org.w3c.dom.UserDataHandler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.templates.ElemLiteralResult$Attribute:java.lang.Object getUserData(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.dom.SAXImpl:void <init>(org.apache.xalan.xsltc.dom.XSLTCDTMManager,javax.xml.transform.Source,int,org.apache.xml.dtm.DTMWSFilter,org.apache.xml.utils.XMLStringFactory,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.runtime.output.TransletOutputHandlerFactory:org.apache.xml.serializer.SerializationHandler getSerializationHandler()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.cmdline.Transform:void doTransform()",
            "org.apache.xalan.xsltc.runtime.AbstractTranslet:org.apache.xml.serializer.SerializationHandler openOutputHandler(java.lang.String,boolean)",
            "org.apache.xalan.xsltc.trax.TransformerImpl:org.apache.xml.serializer.SerializationHandler getOutputHandler(javax.xml.transform.Result)"
        ]
    },
    "org.apache.xalan.xsltc.trax.SAX2DOM:void <init>(org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode:java.lang.Object setUserData(java.lang.String,java.lang.Object,org.w3c.dom.UserDataHandler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode:java.lang.Object getUserData(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.utils.UnImplNode:java.lang.Object setUserData(java.lang.String,java.lang.Object,org.w3c.dom.UserDataHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemLiteralResult$Attribute:java.lang.Object setUserData(java.lang.String,java.lang.Object,org.w3c.dom.UserDataHandler)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode:java.lang.Object setUserData(java.lang.String,java.lang.Object,org.w3c.dom.UserDataHandler)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.Object setUserData(java.lang.String,java.lang.Object,org.w3c.dom.UserDataHandler)",
            "org.apache.xml.utils.UnImplNode:java.lang.Object setUserData(java.lang.String,java.lang.Object,org.w3c.dom.UserDataHandler)"
        ]
    },
    "org.apache.xml.utils.UnImplNode:java.lang.Object getUserData(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemLiteralResult$Attribute:java.lang.Object getUserData(java.lang.String)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode:java.lang.Object getUserData(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.Object getUserData(java.lang.String)",
            "org.apache.xml.utils.UnImplNode:java.lang.Object getUserData(java.lang.String)"
        ]
    },
    "org.apache.xalan.transformer.TransformerHandlerImpl:void setDocumentLocator(org.xml.sax.Locator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void setDocumentLocator(org.xml.sax.Locator)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void setDocumentLocator(org.xml.sax.Locator)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startDocument()",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void setDocumentLocator(org.xml.sax.Locator)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void setDocumentLocator(org.xml.sax.Locator)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void setDocumentLocator(org.xml.sax.Locator)",
            "org.apache.xml.serializer.TreeWalker:void <init>(org.xml.sax.ContentHandler,java.lang.String)",
            "org.apache.xml.utils.TreeWalker:void <init>(org.xml.sax.ContentHandler,org.apache.xml.utils.DOMHelper,java.lang.String)",
            "org.apache.xml.utils.TreeWalker:void <init>(org.xml.sax.ContentHandler,org.apache.xml.utils.DOMHelper)",
            "org.apache.xml.utils.TreeWalker:void <init>(org.xml.sax.ContentHandler)"
        ]
    },
    "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void setDocumentLocator(org.xml.sax.Locator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void setDocumentLocator(org.xml.sax.Locator)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void setDocumentLocator(org.xml.sax.Locator)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startDocument()",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void setDocumentLocator(org.xml.sax.Locator)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void setDocumentLocator(org.xml.sax.Locator)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void setDocumentLocator(org.xml.sax.Locator)",
            "org.apache.xml.serializer.TreeWalker:void <init>(org.xml.sax.ContentHandler,java.lang.String)",
            "org.apache.xml.utils.TreeWalker:void <init>(org.xml.sax.ContentHandler,org.apache.xml.utils.DOMHelper,java.lang.String)",
            "org.apache.xml.utils.TreeWalker:void <init>(org.xml.sax.ContentHandler,org.apache.xml.utils.DOMHelper)",
            "org.apache.xml.utils.TreeWalker:void <init>(org.xml.sax.ContentHandler)"
        ]
    },
    "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void setDocumentLocator(org.xml.sax.Locator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void setDocumentLocator(org.xml.sax.Locator)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void setDocumentLocator(org.xml.sax.Locator)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startDocument()",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void setDocumentLocator(org.xml.sax.Locator)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void setDocumentLocator(org.xml.sax.Locator)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void setDocumentLocator(org.xml.sax.Locator)",
            "org.apache.xml.serializer.TreeWalker:void <init>(org.xml.sax.ContentHandler,java.lang.String)",
            "org.apache.xml.utils.TreeWalker:void <init>(org.xml.sax.ContentHandler,org.apache.xml.utils.DOMHelper,java.lang.String)",
            "org.apache.xml.utils.TreeWalker:void <init>(org.xml.sax.ContentHandler,org.apache.xml.utils.DOMHelper)",
            "org.apache.xml.utils.TreeWalker:void <init>(org.xml.sax.ContentHandler)"
        ]
    },
    "org.apache.xml.serializer.ToXMLSAXHandler:void setDocumentLocator(org.xml.sax.Locator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void setDocumentLocator(org.xml.sax.Locator)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void setDocumentLocator(org.xml.sax.Locator)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startDocument()",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void setDocumentLocator(org.xml.sax.Locator)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void setDocumentLocator(org.xml.sax.Locator)",
            "org.apache.xml.serializer.ToUnknownStream:void setDocumentLocator(org.xml.sax.Locator)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void setDocumentLocator(org.xml.sax.Locator)",
            "org.apache.xml.serializer.TreeWalker:void <init>(org.xml.sax.ContentHandler,java.lang.String)",
            "org.apache.xml.utils.TreeWalker:void <init>(org.xml.sax.ContentHandler,org.apache.xml.utils.DOMHelper,java.lang.String)",
            "org.apache.xml.utils.TreeWalker:void <init>(org.xml.sax.ContentHandler,org.apache.xml.utils.DOMHelper)",
            "org.apache.xml.utils.TreeWalker:void <init>(org.xml.sax.ContentHandler)"
        ]
    },
    "org.apache.xml.serializer.TreeWalker:void <init>(org.xml.sax.ContentHandler,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerIdentityImpl:void transform(javax.xml.transform.Source,javax.xml.transform.Result)",
            "org.apache.xml.serializer.TreeWalker:void <init>(org.xml.sax.ContentHandler)"
        ]
    },
    "org.apache.xml.utils.TreeWalker:void <init>(org.xml.sax.ContentHandler,org.apache.xml.utils.DOMHelper,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.ProcessorInclude:void parse(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.processor.TransformerFactoryImpl:javax.xml.transform.Templates processFromNode(org.w3c.dom.Node)",
            "org.apache.xalan.processor.TransformerFactoryImpl:javax.xml.transform.Source getAssociatedStylesheet(javax.xml.transform.Source,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xml.utils.TreeWalker:void <init>(org.xml.sax.ContentHandler,org.apache.xml.utils.DOMHelper)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.utils.TreeWalker:void <init>(org.xml.sax.ContentHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:void <init>(org.apache.xml.dtm.DTMManager,javax.xml.transform.dom.DOMSource,int,org.apache.xml.dtm.DTMWSFilter,org.apache.xml.utils.XMLStringFactory,boolean)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:void dispatchToEvents(int,org.xml.sax.ContentHandler)"
        ]
    },
    "org.apache.xalan.transformer.TransformerHandlerImpl:void setResult(javax.xml.transform.Result)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.PipeDocument:void usePipe(java.util.Vector,java.lang.String,java.lang.String)",
            "org.apache.xalan.xslt.Process:void main(java.lang.String[])"
        ]
    },
    "org.apache.xml.utils.DOM2Helper:boolean isNodeAfter(org.w3c.dom.Node,org.w3c.dom.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.NodeSet:boolean addNodesInDocOrder(int,int,int,org.w3c.dom.NodeList,org.apache.xpath.XPathContext)",
            "org.apache.xpath.NodeSet:int addNodeInDocOrder(org.w3c.dom.Node,boolean,org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xalan.templates.RedundentExprEliminator:org.apache.xalan.templates.ElemVariable createLocalPseudoVarDecl(org.apache.xml.utils.QName,org.apache.xalan.templates.ElemTemplateElement,org.apache.xpath.axes.LocPathIterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.RedundentExprEliminator:org.apache.xalan.templates.ElemVariable createPseudoVarDecl(org.apache.xalan.templates.ElemTemplateElement,org.apache.xpath.axes.LocPathIterator,boolean)"
        ]
    },
    "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:org.apache.xml.dtm.DTMAxisIterator orderNodes(org.apache.xml.dtm.DTMAxisIterator,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMAdapter:org.apache.xml.dtm.DTMAxisIterator orderNodes(org.apache.xml.dtm.DTMAxisIterator,int)",
            "org.apache.xalan.xsltc.dom.MultiDOM:org.apache.xml.dtm.DTMAxisIterator orderNodes(org.apache.xml.dtm.DTMAxisIterator,int)"
        ]
    },
    "org.apache.xalan.xsltc.dom.DOMAdapter:org.apache.xml.dtm.DTMAxisIterator orderNodes(org.apache.xml.dtm.DTMAxisIterator,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMAdapter:org.apache.xml.dtm.DTMAxisIterator orderNodes(org.apache.xml.dtm.DTMAxisIterator,int)",
            "org.apache.xalan.xsltc.dom.MultiDOM:org.apache.xml.dtm.DTMAxisIterator orderNodes(org.apache.xml.dtm.DTMAxisIterator,int)"
        ]
    },
    "org.apache.xalan.xsltc.dom.MultiDOM:org.apache.xml.dtm.DTMAxisIterator orderNodes(org.apache.xml.dtm.DTMAxisIterator,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMAdapter:org.apache.xml.dtm.DTMAxisIterator orderNodes(org.apache.xml.dtm.DTMAxisIterator,int)",
            "org.apache.xalan.xsltc.dom.MultiDOM:org.apache.xml.dtm.DTMAxisIterator orderNodes(org.apache.xml.dtm.DTMAxisIterator,int)"
        ]
    },
    "org.apache.xml.serializer.ToHTMLStream:void endElement(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(int,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.w3c.dom.Node)",
            "org.apache.xml.serializer.ToUnknownStream:void endElement(java.lang.String)"
        ]
    },
    "org.apache.xalan.templates.ElemTemplateElement:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemCopyOf:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemElement:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemForEach:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemIf:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemLiteralResult:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemNumber:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemTemplateElement:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor)",
            "org.apache.xalan.templates.ElemValueOf:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemVariable:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemWhen:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.ElemWithParam:void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)",
            "org.apache.xalan.templates.RedundentExprEliminator:boolean visitInstruction(org.apache.xalan.templates.ElemTemplateElement)"
        ]
    },
    "org.apache.xalan.templates.RedundentExprEliminator:boolean isAbsolute(org.apache.xpath.axes.LocPathIterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.RedundentExprEliminator:boolean visitLocationPath(org.apache.xpath.ExpressionOwner,org.apache.xpath.axes.LocPathIterator)"
        ]
    },
    "org.apache.xpath.axes.UnionPathIterator:org.apache.xpath.axes.LocPathIterator createUnionIterator(org.apache.xpath.compiler.Compiler,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression union(int)"
        ]
    },
    "org.apache.xalan.processor.XSLTAttributeDef:org.apache.xalan.templates.AVT processAVT(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.XSLTAttributeDef:java.lang.Object processValue(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)"
        ]
    },
    "org.apache.xalan.processor.XSLTAttributeDef:java.lang.Object processCDATA(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.XSLTAttributeDef:java.lang.Object processValue(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)"
        ]
    },
    "org.apache.xalan.processor.XSLTAttributeDef:java.lang.Object processCHAR(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.XSLTAttributeDef:java.lang.Object processValue(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)"
        ]
    },
    "org.apache.xalan.processor.XSLTAttributeDef:java.lang.Object processENUM(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.XSLTAttributeDef:java.lang.Object processValue(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)"
        ]
    },
    "org.apache.xalan.processor.XSLTAttributeDef:java.lang.Object processNMTOKEN(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.XSLTAttributeDef:java.lang.Object processValue(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)"
        ]
    },
    "org.apache.xalan.processor.XSLTAttributeDef:java.lang.Object processNUMBER(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.XSLTAttributeDef:java.lang.Object processValue(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)"
        ]
    },
    "org.apache.xalan.processor.XSLTAttributeDef:java.lang.Object processAVT_QNAME(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.XSLTAttributeDef:java.lang.Object processValue(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)"
        ]
    },
    "org.apache.xalan.processor.XSLTAttributeDef:java.lang.Object processNCNAME(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.XSLTAttributeDef:java.lang.Object processValue(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)"
        ]
    },
    "org.apache.xalan.processor.XSLTAttributeDef:java.lang.Object processURL(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.XSLTAttributeDef:java.lang.Object processValue(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)"
        ]
    },
    "org.apache.xalan.xsltc.trax.TemplatesHandlerImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void closeStartTag()",
            "org.apache.xml.serializer.ToXMLSAXHandler:void closeStartTag()",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serializer.ToStream:void startElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemElement:void constructNode(java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemLiteralResult:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.ClonerToResultTree:void cloneToResultTree(int,int,org.apache.xml.dtm.DTM,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.transformer.TreeWalker2Result:void startNode(int)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String startXslElement(java.lang.String,java.lang.String,org.apache.xml.serializer.SerializationHandler,org.apache.xalan.xsltc.DOM,int)",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serializer.ToStream:void startElement(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:java.lang.String copyElement(int,int,org.apache.xml.serializer.SerializationHandler)"
        ]
    },
    "org.apache.xalan.lib.sql.XConnection:void finalize()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.XConnection:void <init>()",
            "org.apache.xalan.lib.sql.XConnection:void <init>(org.apache.xalan.extensions.ExpressionContext,java.lang.String)",
            "org.apache.xalan.lib.sql.XConnection:void <init>(org.apache.xalan.extensions.ExpressionContext,java.lang.String,java.lang.String)",
            "org.apache.xalan.lib.sql.XConnection:void <init>(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList)",
            "org.apache.xalan.lib.sql.XConnection:void <init>(org.apache.xalan.extensions.ExpressionContext,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.lib.sql.XConnection:void <init>(org.apache.xalan.extensions.ExpressionContext,java.lang.String,java.lang.String,org.w3c.dom.Element)"
        ]
    },
    "org.apache.xalan.lib.sql.XConnection:org.apache.xalan.lib.sql.SQLErrorDocument buildErrorDocument()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.XConnection:org.apache.xml.dtm.DTM getError()"
        ]
    },
    "org.apache.xalan.lib.sql.SQLErrorDocument:void <init>(org.apache.xml.dtm.DTMManager,int,java.lang.Exception)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.lib.sql.DefaultConnectionPool:void setPoolEnabled(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.ConnectionPoolManager:void removePool(java.lang.String)",
            "org.apache.xalan.lib.sql.XConnection:void init(java.lang.String,java.lang.String,java.util.Properties)",
            "org.apache.xalan.lib.sql.XConnection:void enableDefaultConnectionPool()",
            "org.apache.xalan.lib.sql.XConnection:void disableDefaultConnectionPool()",
            "org.apache.xalan.lib.sql.XConnection:void setFeature(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xalan.lib.sql.DefaultConnectionPool:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.XConnection:void init(java.lang.String,java.lang.String,java.util.Properties)"
        ]
    },
    "org.apache.xalan.processor.ProcessorExsltFunction:void validate(org.apache.xalan.templates.ElemTemplateElement,org.apache.xalan.processor.StylesheetHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.ProcessorExsltFunction:void endElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xalan.processor.StylesheetHandler:org.apache.xalan.processor.XSLTElementProcessor getProcessorFor(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.ProcessorLRE:void startElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.processor.ProcessorText:void appendAndPush(org.apache.xalan.processor.StylesheetHandler,org.apache.xalan.templates.ElemTemplateElement)",
            "org.apache.xalan.processor.ProcessorText:void endElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.processor.StylesheetHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xalan.processor.StylesheetHandler:void characters(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.DTMDocument:void dispatchNodeData(org.w3c.dom.Node,org.xml.sax.ContentHandler,int)",
            "org.apache.xalan.transformer.TransformerHandlerImpl:void characters(char[],int,int)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void characters(char[],int,int)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void characters(char[],int,int)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:void dispatchNodeData(org.w3c.dom.Node,org.xml.sax.ContentHandler,int)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void characters(char[],int,int)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void characters(char[],int,int)",
            "org.apache.xml.serializer.ToTextSAXHandler:void characters(java.lang.String)",
            "org.apache.xml.serializer.ToTextSAXHandler:void characters(char[],int,int)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void characters(char[],int,int)",
            "org.apache.xml.serializer.TreeWalker:void dispatachChars(org.w3c.dom.Node)",
            "org.apache.xml.utils.FastStringBuffer:void sendSAXcharacters(org.xml.sax.ContentHandler,int,int)",
            "org.apache.xml.utils.FastStringBuffer:int sendNormalizedSAXcharacters(char[],int,int,org.xml.sax.ContentHandler,int)",
            "org.apache.xml.utils.TreeWalker:void dispatachChars(org.w3c.dom.Node)",
            "org.apache.xpath.objects.XString:void dispatchCharactersEvents(org.xml.sax.ContentHandler)",
            "org.apache.xpath.objects.XStringForChars:void dispatchCharactersEvents(org.xml.sax.ContentHandler)"
        ]
    },
    "org.apache.xalan.processor.StylesheetHandler:void error(java.lang.String,java.lang.Object[],java.lang.Exception)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.ProcessorInclude:void parse(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.processor.ProcessorLRE:void startElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.processor.ProcessorNamespaceAlias:void startElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.processor.ProcessorTemplateElem:void startElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.processor.XSLTAttributeDef:boolean setAttrValue(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)",
            "org.apache.xalan.processor.XSLTAttributeDef:void handleError(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.Object[],java.lang.Exception)",
            "org.apache.xalan.processor.XSLTElementProcessor:void endElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.processor.XSLTElementProcessor:void characters(org.apache.xalan.processor.StylesheetHandler,char[],int,int)",
            "org.apache.xalan.processor.XSLTElementProcessor:org.xml.sax.Attributes setPropertiesFromAttributes(org.apache.xalan.processor.StylesheetHandler,java.lang.String,org.xml.sax.Attributes,org.apache.xalan.templates.ElemTemplateElement,boolean)"
        ]
    },
    "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void error(org.xml.sax.SAXParseException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void error(org.xml.sax.SAXParseException)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void error(org.xml.sax.SAXParseException)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void fatalError(org.xml.sax.SAXParseException)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void warning(org.xml.sax.SAXParseException)",
            "org.apache.xml.serializer.ToSAXHandler:void error(org.xml.sax.SAXParseException)"
        ]
    },
    "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void fatalError(org.xml.sax.SAXParseException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void fatalError(org.xml.sax.SAXParseException)",
            "org.apache.xml.serializer.ToSAXHandler:void fatalError(org.xml.sax.SAXParseException)"
        ]
    },
    "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void warning(org.xml.sax.SAXParseException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void warning(org.xml.sax.SAXParseException)",
            "org.apache.xml.serializer.ToSAXHandler:void warning(org.xml.sax.SAXParseException)"
        ]
    },
    "org.apache.xml.serializer.ToSAXHandler:void error(org.xml.sax.SAXParseException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void error(org.xml.sax.SAXParseException)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void error(org.xml.sax.SAXParseException)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void fatalError(org.xml.sax.SAXParseException)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void warning(org.xml.sax.SAXParseException)",
            "org.apache.xml.serializer.ToSAXHandler:void error(org.xml.sax.SAXParseException)"
        ]
    },
    "org.apache.xml.serializer.ToSAXHandler:void fatalError(org.xml.sax.SAXParseException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void fatalError(org.xml.sax.SAXParseException)",
            "org.apache.xalan.transformer.TransformerImpl:void transformNode(int)",
            "org.apache.xml.serializer.ToSAXHandler:void fatalError(org.xml.sax.SAXParseException)"
        ]
    },
    "org.apache.xalan.transformer.MsgMgr:void error(javax.xml.transform.SourceLocator,java.lang.String,java.lang.Exception)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.transformer.MsgMgr:void error(javax.xml.transform.SourceLocator,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemApplyImport:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemChoose:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemElement:void execute(org.apache.xalan.transformer.TransformerImpl)"
        ]
    },
    "org.apache.xalan.transformer.MsgMgr:void error(javax.xml.transform.SourceLocator,java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemCallTemplate:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.XUnresolvedVariable:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xalan.transformer.MsgMgr:void error(javax.xml.transform.SourceLocator,org.w3c.dom.Node,org.w3c.dom.Node,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.Redirect:java.lang.String getFilename(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)"
        ]
    },
    "org.apache.xpath.compiler.OpMap:int getFirstPredicateOpPos(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.PredicatedNodeTest:void initPredicateInfo(org.apache.xpath.compiler.Compiler,int)",
            "org.apache.xpath.axes.WalkerFactory:boolean mightBeProximate(org.apache.xpath.compiler.Compiler,int,int)",
            "org.apache.xpath.axes.WalkerFactory:org.apache.xpath.patterns.StepPattern createDefaultStepPattern(org.apache.xpath.compiler.Compiler,int,org.apache.xpath.axes.MatchPatternIterator,int,org.apache.xpath.patterns.StepPattern,org.apache.xpath.patterns.StepPattern)",
            "org.apache.xpath.axes.WalkerFactory:boolean analyzePredicate(org.apache.xpath.compiler.Compiler,int,int)"
        ]
    },
    "org.apache.xpath.compiler.XPathParser:void initMatchPattern(org.apache.xpath.compiler.Compiler,java.lang.String,org.apache.xml.utils.PrefixResolver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.XPath:void <init>(java.lang.String,javax.xml.transform.SourceLocator,org.apache.xml.utils.PrefixResolver,int,javax.xml.transform.ErrorListener)",
            "org.apache.xpath.XPath:void <init>(java.lang.String,javax.xml.transform.SourceLocator,org.apache.xml.utils.PrefixResolver,int,javax.xml.transform.ErrorListener,org.apache.xpath.compiler.FunctionTable)"
        ]
    },
    "org.apache.xpath.compiler.XPathParser:void consumeExpected(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xpath.compiler.XPathParser:void consumeExpected(char)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.XPathParser:boolean PrimaryExpr()",
            "org.apache.xpath.compiler.XPathParser:boolean FunctionCall()",
            "org.apache.xpath.compiler.XPathParser:void NodeTest(int)",
            "org.apache.xpath.compiler.XPathParser:void Predicate()",
            "org.apache.xpath.compiler.XPathParser:void QName()"
        ]
    },
    "org.apache.xpath.compiler.XPathParser:void BooleanExpr()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xpath.compiler.XPathParser:void PathExpr()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.XPathParser:void UnionExpr()"
        ]
    },
    "org.apache.xpath.compiler.XPathParser:boolean FunctionCall()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.XPathParser:boolean PrimaryExpr()",
            "org.apache.xpath.compiler.XPathParser:void IdKeyPattern()"
        ]
    },
    "org.apache.xpath.compiler.XPathParser:void LocationPath()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.XPathParser:void PathExpr()"
        ]
    },
    "org.apache.xpath.compiler.XPathParser:boolean RelativeLocationPath()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.XPathParser:void PathExpr()",
            "org.apache.xpath.compiler.XPathParser:void LocationPath()"
        ]
    },
    "org.apache.xpath.compiler.XPathParser:boolean Step()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.XPathParser:boolean RelativeLocationPath()"
        ]
    },
    "org.apache.xpath.compiler.XPathParser:int AxisName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.XPathParser:void Basis()"
        ]
    },
    "org.apache.xpath.compiler.XPathParser:void NodeTest(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.XPathParser:void Basis()",
            "org.apache.xpath.compiler.XPathParser:boolean AbbreviatedNodeTestStep(boolean)"
        ]
    },
    "org.apache.xpath.compiler.XPathParser:void Literal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.XPathParser:boolean PrimaryExpr()",
            "org.apache.xpath.compiler.XPathParser:void NodeTest(int)"
        ]
    },
    "org.apache.xpath.compiler.XPathParser:void Number()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.XPathParser:boolean PrimaryExpr()"
        ]
    },
    "org.apache.xpath.compiler.XPathParser:void LocationPathPattern()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.XPathParser:void Pattern()"
        ]
    },
    "org.apache.xpath.compiler.XPathParser:boolean AbbreviatedNodeTestStep(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.XPathParser:boolean StepPattern(boolean)"
        ]
    },
    "org.apache.xalan.processor.XSLTAttributeDef:void handleError(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.Object[],java.lang.Exception)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.XSLTAttributeDef:java.lang.Object processCHAR(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)",
            "org.apache.xalan.processor.XSLTAttributeDef:java.lang.Object processENUM(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)",
            "org.apache.xalan.processor.XSLTAttributeDef:java.lang.Object processENUM_OR_PQNAME(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)",
            "org.apache.xalan.processor.XSLTAttributeDef:java.lang.Object processNMTOKEN(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)",
            "org.apache.xalan.processor.XSLTAttributeDef:java.lang.Object processNUMBER(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)",
            "org.apache.xalan.processor.XSLTAttributeDef:java.lang.Object processQNAME(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)",
            "org.apache.xalan.processor.XSLTAttributeDef:java.lang.Object processAVT_QNAME(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)",
            "org.apache.xalan.processor.XSLTAttributeDef:java.lang.Object processNCNAME(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)",
            "org.apache.xalan.processor.XSLTAttributeDef:java.lang.Boolean processYESNO(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.processor.XSLTAttributeDef:boolean setAttrValue(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)"
        ]
    },
    "org.apache.xml.serializer.ToSAXHandler:void warning(org.xml.sax.SAXParseException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void warning(org.xml.sax.SAXParseException)",
            "org.apache.xml.serializer.ToSAXHandler:void warning(org.xml.sax.SAXParseException)"
        ]
    },
    "org.apache.xalan.transformer.MsgMgr:void warn(javax.xml.transform.SourceLocator,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.transformer.MsgMgr:void warn(javax.xml.transform.SourceLocator,java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemElement:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemNumber:java.text.DecimalFormat getNumberFormatter(org.apache.xalan.transformer.TransformerImpl,int)",
            "org.apache.xalan.templates.ElemPI:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.NodeSortKey:void <init>(org.apache.xalan.transformer.TransformerImpl,org.apache.xpath.XPath,boolean,boolean,java.lang.String,boolean,org.apache.xml.utils.PrefixResolver)"
        ]
    },
    "org.apache.xalan.transformer.MsgMgr:void warn(javax.xml.transform.SourceLocator,org.w3c.dom.Node,org.w3c.dom.Node,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.runtime.AbstractTranslet:void displayMessage(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.serializer.ToStream:void init(java.io.Writer,java.util.Properties,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.ToStream:void setOutputFormat(java.util.Properties)",
            "org.apache.xml.serializer.ToStream:void init(java.io.Writer,java.util.Properties)",
            "org.apache.xml.serializer.ToStream:void init(java.io.OutputStream,java.util.Properties,boolean)"
        ]
    },
    "org.apache.xml.serializer.ToStream:void init(java.io.OutputStream,java.util.Properties,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.ToHTMLStream:void init(java.io.OutputStream,java.util.Properties)",
            "org.apache.xml.serializer.ToHTMLStream:void setOutputStream(java.io.OutputStream)",
            "org.apache.xml.serializer.ToStream:void setOutputStream(java.io.OutputStream)"
        ]
    },
    "org.apache.xml.serializer.ToUnknownStream:void setEncoding(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.runtime.output.TransletOutputHandlerFactory:org.apache.xml.serializer.SerializationHandler getSerializationHandler()",
            "org.apache.xml.serializer.ToUnknownStream:void setEncoding(java.lang.String)"
        ]
    },
    "org.apache.xml.serializer.ToXMLStream:void CopyFrom(org.apache.xml.serializer.ToXMLStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.serializer.ToStream:java.lang.String ensureAttributesNamespaceIsDeclared(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.ToStream:boolean addAttributeAlways(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)",
            "org.apache.xml.serializer.ToXMLStream:void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)"
        ]
    },
    "org.apache.xml.serializer.ToXMLStream:void startDocumentInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.SerializerBase:void startDocument()",
            "org.apache.xml.serializer.ToStream:void characters(char[],int,int)",
            "org.apache.xml.serializer.ToStream:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToStream:void comment(char[],int,int)",
            "org.apache.xml.serializer.ToStream:void flushPending()",
            "org.apache.xml.serializer.ToXMLStream:void processingInstruction(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xml.dtm.DTMManager:org.apache.xml.dtm.DTMManager newInstance(org.apache.xml.utils.XMLStringFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.XPathContext:void <init>()",
            "org.apache.xpath.XPathContext:void <init>(java.lang.Object)",
            "org.apache.xpath.XPathContext:void reset()"
        ]
    },
    "org.apache.xml.serializer.ToHTMLStream:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xml.serializer.ElemDesc getElemDesc()",
            "org.apache.xalan.xsltc.runtime.output.TransletOutputHandlerFactory:org.apache.xml.serializer.SerializationHandler getSerializationHandler()",
            "org.apache.xml.serializer.ToHTMLStream:org.apache.xml.serializer.ElemDesc getElemDesc(java.lang.String)",
            "org.apache.xml.serializer.ToHTMLStream:org.apache.xml.serializer.ElemDesc getElemDesc2(java.lang.String)",
            "org.apache.xml.serializer.ToHTMLStream:void <init>()",
            "org.apache.xml.serializer.ToHTMLStream:void writeAttrURI(java.io.Writer,java.lang.String,boolean)",
            "org.apache.xml.serializer.ToHTMLStream:void addUniqueAttribute(java.lang.String,java.lang.String,int)",
            "org.apache.xml.serializer.ToHTMLStream:void <clinit>()"
        ]
    },
    "org.apache.xml.serializer.ToXMLStream:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.runtime.output.TransletOutputHandlerFactory:org.apache.xml.serializer.SerializationHandler getSerializationHandler()",
            "org.apache.xml.serializer.ToUnknownStream:void <init>()",
            "org.apache.xml.serializer.ToXMLStream:void <init>()",
            "org.apache.xml.serializer.ToXMLStream:void addUniqueAttribute(java.lang.String,java.lang.String,int)",
            "org.apache.xml.serializer.ToXMLStream:void <clinit>()"
        ]
    },
    "org.apache.xml.serializer.Encodings:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.Output:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xml.serializer.EncodingInfo$EncodingImpl:boolean isInEncoding(char)",
            "org.apache.xml.serializer.EncodingInfo$EncodingImpl:boolean isInEncoding(char,char)",
            "org.apache.xml.serializer.Encodings:java.io.Writer getWriter(java.io.OutputStream,java.lang.String)",
            "org.apache.xml.serializer.Encodings:org.apache.xml.serializer.EncodingInfo getEncodingInfo(java.lang.String)",
            "org.apache.xml.serializer.Encodings:java.lang.String getMimeEncoding(java.lang.String)",
            "org.apache.xml.serializer.Encodings:java.lang.String convertJava2MimeEncoding(java.lang.String)",
            "org.apache.xml.serializer.Encodings:java.lang.String convertMime2JavaEncoding(java.lang.String)",
            "org.apache.xml.serializer.Encodings:org.apache.xml.serializer.EncodingInfo[] loadEncodingInfo()",
            "org.apache.xml.serializer.Encodings:void <clinit>()",
            "org.apache.xml.serializer.OutputPropertiesFactory:java.util.Properties getDefaultMethodProperties(java.lang.String)",
            "org.apache.xml.serializer.ToHTMLStream:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToHTMLStream:void writeAttrURI(java.io.Writer,java.lang.String,boolean)",
            "org.apache.xml.serializer.ToHTMLStream:void writeAttrString(java.io.Writer,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToStream:void init(java.io.Writer,java.util.Properties,boolean,boolean)",
            "org.apache.xml.serializer.ToStream:void init(java.io.OutputStream,java.util.Properties,boolean)",
            "org.apache.xml.serializer.ToStream:int writeUTF16Surrogate(char,char[],int,int)",
            "org.apache.xml.serializer.ToStream:void writeNormalizedChars(char[],int,int,boolean,boolean)",
            "org.apache.xml.serializer.ToStream:int accumDefaultEscape(java.io.Writer,char,int,char[],int,boolean,boolean)",
            "org.apache.xml.serializer.ToStream:void setEncoding(java.lang.String)",
            "org.apache.xml.serializer.ToTextStream:void writeNormalizedChars(char[],int,int,boolean)",
            "org.apache.xml.serializer.ToXMLStream:void startDocumentInternal()"
        ]
    },
    "org.apache.xalan.serialize.SerializerFactory:org.apache.xalan.serialize.Serializer getSerializer(java.util.Properties)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.transformer.SerializerSwitcher:void switchSerializerIfHTML(org.apache.xalan.transformer.TransformerImpl,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.transformer.SerializerSwitcher:org.apache.xml.serializer.Serializer switchSerializerIfHTML(java.lang.String,java.lang.String,java.util.Properties,org.apache.xml.serializer.Serializer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerIdentityImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xalan.lib.ExsltStrings$DocumentHolder:org.w3c.dom.Document access$000()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.ExsltStrings:org.w3c.dom.NodeList split(java.lang.String,java.lang.String)",
            "org.apache.xalan.lib.ExsltStrings:org.w3c.dom.NodeList tokenize(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xalan.lib.Extensions$DocumentHolder:org.w3c.dom.Document access$000()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.Extensions:org.w3c.dom.NodeList tokenize(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xalan.lib.Extensions:org.w3c.dom.NodeList tokenize(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.Extensions:org.w3c.dom.NodeList tokenize(java.lang.String)"
        ]
    },
    "org.apache.xalan.transformer.TransformerImpl:org.apache.xalan.transformer.TransformSnapshot getSnapshot()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.transformer.TransformerImpl:void resetToStylesheet(org.apache.xalan.transformer.TransformSnapshot)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:int _dataOrQName(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:java.lang.String getNodeValue(int)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:java.lang.String getPrefix(int)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:org.apache.xml.utils.XMLString getStringValue(int)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:boolean isWhitespace(int)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:java.lang.String getLocalName(int)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:java.lang.String getNodeNameX(int)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:java.lang.String getNodeName(int)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:java.lang.String getNodeValue(int)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void copyAttribute(int,int,org.apache.xml.serializer.SerializationHandler)"
        ]
    },
    "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:int getNextNodeIdentity(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:org.apache.xml.utils.XMLString getStringValue(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getFirstAttributeIdentity(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getTypedAttribute(int,int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getNextAttributeIdentity(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getFirstNamespaceNode(int,boolean)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:int getNextNamespaceNode(int,int,boolean)"
        ]
    },
    "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:int getElementById(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.DTMNodeProxy:org.w3c.dom.Element getElementById(java.lang.String)",
            "org.apache.xpath.functions.FuncId:org.apache.xml.utils.StringVector getNodesByID(org.apache.xpath.XPathContext,int,java.lang.String,org.apache.xml.utils.StringVector,org.apache.xpath.NodeSetDTM,boolean)"
        ]
    },
    "org.apache.xalan.transformer.XalanTransformState:org.w3c.dom.traversal.NodeIterator getContextNodeList()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xpath.objects.XRTreeFrag:java.lang.Object object()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.ExtensionHandlerGeneral:java.lang.Object callFunction(java.lang.String,java.util.Vector,java.lang.Object,org.apache.xalan.extensions.ExpressionContext)",
            "org.apache.xalan.extensions.ExtensionHandlerJavaClass:java.lang.Object callFunction(java.lang.String,java.util.Vector,java.lang.Object,org.apache.xalan.extensions.ExpressionContext)",
            "org.apache.xalan.extensions.ExtensionHandlerJavaPackage:java.lang.Object callFunction(java.lang.String,java.util.Vector,java.lang.Object,org.apache.xalan.extensions.ExpressionContext)",
            "org.apache.xalan.extensions.MethodResolver:int scoreMatch(java.lang.Class[],int,java.lang.Object[],int)",
            "org.apache.xalan.extensions.MethodResolver:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.xalan.lib.sql.SQLQueryParser:void populateStatement(java.sql.PreparedStatement,org.apache.xalan.extensions.ExpressionContext)",
            "org.apache.xalan.transformer.TransformerImpl:java.lang.Object getParameter(java.lang.String)",
            "org.apache.xalan.transformer.TransformerImpl:void resetUserParameters()",
            "org.apache.xpath.jaxp.JAXPExtensionsProvider:java.lang.Object extFunction(java.lang.String,java.lang.String,java.util.Vector,java.lang.Object)",
            "org.apache.xpath.jaxp.JAXPExtensionsProvider:java.lang.Object extFunction(org.apache.xpath.functions.FuncExtFunction,java.util.Vector)",
            "org.apache.xpath.objects.XObject:java.lang.String getTypeString()"
        ]
    },
    "org.apache.xpath.XPathContext$XPathExpressionContext:org.w3c.dom.traversal.NodeIterator getContextNodes()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xpath.axes.AxesWalker:void setRoot(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.AxesWalker:int nextNode()",
            "org.apache.xpath.axes.FilterExprWalker:void setRoot(int)",
            "org.apache.xpath.axes.ReverseAxesWalker:void setRoot(int)",
            "org.apache.xpath.axes.WalkingIterator:void reset()",
            "org.apache.xpath.axes.WalkingIterator:void setRoot(int,java.lang.Object)"
        ]
    },
    "org.apache.xpath.axes.BasicTestIterator:org.apache.xml.dtm.DTMIterator cloneWithReset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.trace.PrintTraceListener:void selected(org.apache.xalan.trace.SelectionEvent)",
            "org.apache.xalan.transformer.TransformerImpl:org.apache.xml.dtm.DTMIterator getContextNodeList()",
            "org.apache.xml.dtm.ref.DTMNodeList:void <init>(org.apache.xml.dtm.DTMIterator)",
            "org.apache.xpath.axes.ChildTestIterator:org.apache.xml.dtm.DTMIterator cloneWithReset()",
            "org.apache.xpath.functions.FuncPosition:int getPositionInContextNodeList(org.apache.xpath.XPathContext)",
            "org.apache.xpath.XPathContext:org.apache.xml.dtm.DTMIterator getContextNodes()"
        ]
    },
    "org.apache.xpath.axes.DescendantIterator:org.apache.xml.dtm.DTMIterator cloneWithReset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.trace.PrintTraceListener:void selected(org.apache.xalan.trace.SelectionEvent)",
            "org.apache.xalan.transformer.TransformerImpl:org.apache.xml.dtm.DTMIterator getContextNodeList()",
            "org.apache.xml.dtm.ref.DTMNodeList:void <init>(org.apache.xml.dtm.DTMIterator)",
            "org.apache.xpath.functions.FuncPosition:int getPositionInContextNodeList(org.apache.xpath.XPathContext)",
            "org.apache.xpath.XPathContext:org.apache.xml.dtm.DTMIterator getContextNodes()"
        ]
    },
    "org.apache.xpath.axes.PredicatedNodeTest:void readObject(java.io.ObjectInputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.templates.ElemForEach:void compose(org.apache.xalan.templates.StylesheetRoot)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemCallTemplate:void compose(org.apache.xalan.templates.StylesheetRoot)",
            "org.apache.xalan.templates.StylesheetRoot:void composeTemplates(org.apache.xalan.templates.ElemTemplateElement)"
        ]
    },
    "org.apache.xpath.axes.FilterExprIterator:void fixupVariables(java.util.Vector,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void compose(org.apache.xalan.templates.StylesheetRoot)",
            "org.apache.xpath.axes.FilterExprIterator:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.FilterExprWalker:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.PredicatedNodeTest:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.UnionChildIterator:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.UnionPathIterator:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.FuncExtFunction:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.Function2Args:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.Function3Args:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.FunctionMultiArgs:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.FunctionOneArg:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.operations.Operation:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.operations.UnaryOperation:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.patterns.FunctionPattern:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.patterns.StepPattern:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.XPath:void fixupVariables(java.util.Vector,int)"
        ]
    },
    "org.apache.xpath.axes.FilterExprIteratorSimple:void fixupVariables(java.util.Vector,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void compose(org.apache.xalan.templates.StylesheetRoot)",
            "org.apache.xpath.axes.FilterExprIterator:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.FilterExprWalker:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.PredicatedNodeTest:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.UnionChildIterator:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.UnionPathIterator:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.FuncExtFunction:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.Function2Args:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.Function3Args:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.FunctionMultiArgs:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.FunctionOneArg:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.operations.Operation:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.operations.UnaryOperation:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.patterns.FunctionPattern:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.patterns.StepPattern:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.XPath:void fixupVariables(java.util.Vector,int)"
        ]
    },
    "org.apache.xpath.axes.FilterExprWalker:void fixupVariables(java.util.Vector,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void compose(org.apache.xalan.templates.StylesheetRoot)",
            "org.apache.xpath.axes.FilterExprIterator:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.FilterExprWalker:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.PredicatedNodeTest:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.UnionChildIterator:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.WalkingIterator:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.FuncExtFunction:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.Function2Args:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.Function3Args:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.FunctionMultiArgs:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.FunctionOneArg:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.operations.Operation:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.operations.UnaryOperation:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.patterns.FunctionPattern:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.patterns.StepPattern:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.XPath:void fixupVariables(java.util.Vector,int)"
        ]
    },
    "org.apache.xpath.axes.PredicatedNodeTest:void fixupVariables(java.util.Vector,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void compose(org.apache.xalan.templates.StylesheetRoot)",
            "org.apache.xpath.axes.FilterExprIterator:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.FilterExprWalker:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.PredicatedNodeTest:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.UnionChildIterator:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.UnionPathIterator:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.WalkingIterator:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.FuncExtFunction:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.Function2Args:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.Function3Args:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.FunctionMultiArgs:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.FunctionOneArg:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.operations.Operation:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.operations.UnaryOperation:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.patterns.FunctionPattern:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.patterns.StepPattern:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.XPath:void fixupVariables(java.util.Vector,int)"
        ]
    },
    "org.apache.xpath.functions.FuncExtFunction:void fixupVariables(java.util.Vector,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void compose(org.apache.xalan.templates.StylesheetRoot)",
            "org.apache.xpath.axes.FilterExprIterator:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.FilterExprWalker:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.PredicatedNodeTest:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.FuncExtFunction:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.Function2Args:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.Function3Args:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.FunctionMultiArgs:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.FunctionOneArg:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.operations.Operation:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.operations.UnaryOperation:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.patterns.FunctionPattern:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.patterns.StepPattern:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.XPath:void fixupVariables(java.util.Vector,int)"
        ]
    },
    "org.apache.xpath.functions.Function2Args:void fixupVariables(java.util.Vector,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void compose(org.apache.xalan.templates.StylesheetRoot)",
            "org.apache.xpath.axes.FilterExprIterator:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.FilterExprWalker:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.PredicatedNodeTest:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.FuncExtFunction:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.Function2Args:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.Function3Args:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.FunctionMultiArgs:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.FunctionOneArg:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.operations.Operation:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.operations.UnaryOperation:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.patterns.FunctionPattern:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.patterns.StepPattern:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.XPath:void fixupVariables(java.util.Vector,int)"
        ]
    },
    "org.apache.xpath.functions.Function3Args:void fixupVariables(java.util.Vector,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void compose(org.apache.xalan.templates.StylesheetRoot)",
            "org.apache.xpath.axes.FilterExprIterator:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.FilterExprWalker:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.PredicatedNodeTest:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.FuncExtFunction:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.Function2Args:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.Function3Args:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.FunctionMultiArgs:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.FunctionOneArg:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.operations.Operation:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.operations.UnaryOperation:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.patterns.FunctionPattern:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.patterns.StepPattern:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.XPath:void fixupVariables(java.util.Vector,int)"
        ]
    },
    "org.apache.xpath.functions.FunctionMultiArgs:void fixupVariables(java.util.Vector,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void compose(org.apache.xalan.templates.StylesheetRoot)",
            "org.apache.xpath.axes.FilterExprIterator:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.FilterExprWalker:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.PredicatedNodeTest:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.FuncExtFunction:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.Function2Args:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.Function3Args:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.FunctionMultiArgs:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.FunctionOneArg:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.operations.Operation:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.operations.UnaryOperation:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.patterns.FunctionPattern:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.patterns.StepPattern:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.XPath:void fixupVariables(java.util.Vector,int)"
        ]
    },
    "org.apache.xpath.functions.FunctionOneArg:void fixupVariables(java.util.Vector,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void compose(org.apache.xalan.templates.StylesheetRoot)",
            "org.apache.xpath.axes.FilterExprIterator:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.FilterExprWalker:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.PredicatedNodeTest:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.FuncExtFunction:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.Function2Args:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.Function3Args:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.FunctionMultiArgs:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.FunctionOneArg:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.operations.Operation:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.operations.UnaryOperation:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.patterns.FunctionPattern:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.patterns.StepPattern:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.XPath:void fixupVariables(java.util.Vector,int)"
        ]
    },
    "org.apache.xpath.objects.XRTreeFragSelectWrapper:void fixupVariables(java.util.Vector,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void compose(org.apache.xalan.templates.StylesheetRoot)",
            "org.apache.xpath.axes.FilterExprIterator:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.FilterExprWalker:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.PredicatedNodeTest:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.FuncExtFunction:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.Function2Args:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.Function3Args:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.FunctionMultiArgs:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.FunctionOneArg:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.operations.Operation:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.operations.UnaryOperation:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.patterns.FunctionPattern:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.patterns.StepPattern:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.XPath:void fixupVariables(java.util.Vector,int)"
        ]
    },
    "org.apache.xpath.operations.Operation:void fixupVariables(java.util.Vector,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void compose(org.apache.xalan.templates.StylesheetRoot)",
            "org.apache.xpath.axes.FilterExprIterator:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.FilterExprWalker:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.PredicatedNodeTest:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.FuncExtFunction:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.Function2Args:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.Function3Args:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.FunctionMultiArgs:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.FunctionOneArg:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.operations.Operation:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.operations.UnaryOperation:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.patterns.FunctionPattern:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.patterns.StepPattern:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.XPath:void fixupVariables(java.util.Vector,int)"
        ]
    },
    "org.apache.xpath.operations.UnaryOperation:void fixupVariables(java.util.Vector,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void compose(org.apache.xalan.templates.StylesheetRoot)",
            "org.apache.xpath.axes.FilterExprIterator:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.FilterExprWalker:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.PredicatedNodeTest:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.FuncExtFunction:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.Function2Args:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.Function3Args:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.FunctionMultiArgs:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.FunctionOneArg:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.operations.Operation:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.operations.UnaryOperation:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.patterns.FunctionPattern:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.patterns.StepPattern:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.XPath:void fixupVariables(java.util.Vector,int)"
        ]
    },
    "org.apache.xpath.patterns.FunctionPattern:void fixupVariables(java.util.Vector,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void compose(org.apache.xalan.templates.StylesheetRoot)",
            "org.apache.xpath.axes.FilterExprIterator:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.FilterExprWalker:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.PredicatedNodeTest:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.FuncExtFunction:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.Function2Args:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.Function3Args:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.FunctionMultiArgs:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.FunctionOneArg:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.operations.Operation:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.operations.UnaryOperation:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.patterns.FunctionPattern:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.patterns.StepPattern:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.patterns.UnionPattern:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.XPath:void fixupVariables(java.util.Vector,int)"
        ]
    },
    "org.apache.xpath.patterns.StepPattern:void fixupVariables(java.util.Vector,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void compose(org.apache.xalan.templates.StylesheetRoot)",
            "org.apache.xpath.axes.FilterExprIterator:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.FilterExprWalker:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.PredicatedNodeTest:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.FuncExtFunction:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.Function2Args:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.Function3Args:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.FunctionMultiArgs:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.FunctionOneArg:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.operations.Operation:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.operations.UnaryOperation:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.patterns.FunctionPattern:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.patterns.StepPattern:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.patterns.UnionPattern:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.XPath:void fixupVariables(java.util.Vector,int)"
        ]
    },
    "org.apache.xpath.XPath:void fixupVariables(java.util.Vector,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.AVTPartXPath:void fixupVariables(java.util.Vector,int)",
            "org.apache.xalan.templates.ElemCopyOf:void compose(org.apache.xalan.templates.StylesheetRoot)",
            "org.apache.xalan.templates.ElemIf:void compose(org.apache.xalan.templates.StylesheetRoot)",
            "org.apache.xalan.templates.ElemNumber:void compose(org.apache.xalan.templates.StylesheetRoot)",
            "org.apache.xalan.templates.ElemSort:void compose(org.apache.xalan.templates.StylesheetRoot)",
            "org.apache.xalan.templates.ElemTemplate:void compose(org.apache.xalan.templates.StylesheetRoot)",
            "org.apache.xalan.templates.ElemValueOf:void compose(org.apache.xalan.templates.StylesheetRoot)",
            "org.apache.xalan.templates.ElemVariable:void compose(org.apache.xalan.templates.StylesheetRoot)",
            "org.apache.xalan.templates.ElemWhen:void compose(org.apache.xalan.templates.StylesheetRoot)",
            "org.apache.xalan.templates.ElemWithParam:void compose(org.apache.xalan.templates.StylesheetRoot)",
            "org.apache.xalan.templates.KeyDeclaration:void compose(org.apache.xalan.templates.StylesheetRoot)"
        ]
    },
    "org.apache.xpath.objects.XNodeSetForDOM:org.w3c.dom.traversal.NodeIterator nodeset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.MethodResolver:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.xpath.domapi.XPathResultImpl:void <init>(short,org.apache.xpath.objects.XObject,org.w3c.dom.Node,org.apache.xpath.XPath)",
            "org.apache.xpath.domapi.XPathResultImpl:org.w3c.dom.Node getSingleNodeValue()",
            "org.apache.xpath.jaxp.XPathExpressionImpl:java.lang.Object getResultAsType(org.apache.xpath.objects.XObject,javax.xml.namespace.QName)",
            "org.apache.xpath.jaxp.XPathImpl:java.lang.Object getResultAsType(org.apache.xpath.objects.XObject,javax.xml.namespace.QName)",
            "org.apache.xpath.CachedXPathAPI:org.w3c.dom.traversal.NodeIterator selectNodeIterator(org.w3c.dom.Node,java.lang.String,org.w3c.dom.Node)",
            "org.apache.xpath.XPathAPI:org.w3c.dom.traversal.NodeIterator selectNodeIterator(org.w3c.dom.Node,java.lang.String,org.w3c.dom.Node)"
        ]
    },
    "org.apache.xpath.axes.LocPathIterator:org.apache.xml.dtm.DTMIterator cloneWithReset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.trace.PrintTraceListener:void selected(org.apache.xalan.trace.SelectionEvent)",
            "org.apache.xalan.transformer.TransformerImpl:org.apache.xml.dtm.DTMIterator getContextNodeList()",
            "org.apache.xml.dtm.ref.DTMNodeList:void <init>(org.apache.xml.dtm.DTMIterator)",
            "org.apache.xpath.axes.BasicTestIterator:org.apache.xml.dtm.DTMIterator cloneWithReset()",
            "org.apache.xpath.axes.DescendantIterator:org.apache.xml.dtm.DTMIterator cloneWithReset()",
            "org.apache.xpath.functions.FuncPosition:int getPositionInContextNodeList(org.apache.xpath.XPathContext)",
            "org.apache.xpath.XPathContext:org.apache.xml.dtm.DTMIterator getContextNodes()"
        ]
    },
    "org.apache.xpath.axes.FilterExprWalker:java.lang.Object clone()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.RedundentExprEliminator:org.apache.xpath.axes.WalkingIterator createIteratorFromSteps(org.apache.xpath.axes.WalkingIterator,int)",
            "org.apache.xpath.axes.AxesWalker:org.apache.xpath.axes.AxesWalker cloneDeep(org.apache.xpath.axes.WalkingIterator,java.util.Vector)",
            "org.apache.xpath.axes.AxesWalker:int getLastPos(org.apache.xpath.XPathContext)",
            "org.apache.xpath.VariableStack:java.lang.Object clone()"
        ]
    },
    "org.apache.xml.serializer.CharInfo:org.apache.xml.serializer.CharInfo getCharInfoBasedOnPrivilege(java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.CharInfo:org.apache.xml.serializer.CharInfo getCharInfo(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xpath.axes.UnionPathIterator:void <init>(org.apache.xpath.compiler.Compiler,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.UnionPathIterator:org.apache.xpath.axes.LocPathIterator createUnionIterator(org.apache.xpath.compiler.Compiler,int)"
        ]
    },
    "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression or(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression compile(int)"
        ]
    },
    "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression and(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression compile(int)"
        ]
    },
    "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression notequals(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression compile(int)"
        ]
    },
    "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression equals(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression compile(int)"
        ]
    },
    "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression lte(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression compile(int)"
        ]
    },
    "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression lt(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression compile(int)"
        ]
    },
    "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression gte(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression compile(int)"
        ]
    },
    "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression gt(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression compile(int)"
        ]
    },
    "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression plus(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression compile(int)"
        ]
    },
    "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression minus(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression compile(int)"
        ]
    },
    "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression mult(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression compile(int)"
        ]
    },
    "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression div(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression compile(int)"
        ]
    },
    "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression mod(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression compile(int)"
        ]
    },
    "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression 'neg'(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression compile(int)"
        ]
    },
    "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression string(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression compile(int)"
        ]
    },
    "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression bool(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression compile(int)"
        ]
    },
    "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression number(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression compile(int)"
        ]
    },
    "org.apache.xpath.compiler.Compiler:void compilePredicates(int,org.apache.xpath.Expression[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression[] getCompiledPredicates(int)"
        ]
    },
    "org.apache.xalan.templates.AVTPartXPath:void <init>(java.lang.String,org.apache.xml.utils.PrefixResolver,org.apache.xpath.compiler.XPathParser,org.apache.xpath.XPathFactory,org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.templates.StylesheetRoot:void <init>(javax.xml.transform.ErrorListener)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.StylesheetRoot:void <init>(org.apache.xalan.processor.XSLTSchema,javax.xml.transform.ErrorListener)"
        ]
    },
    "org.apache.xalan.templates.StylesheetRoot:void initDefaultRule(javax.xml.transform.ErrorListener)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.StylesheetRoot:void <init>(javax.xml.transform.ErrorListener)"
        ]
    },
    "org.apache.xpath.XPath:void <init>(java.lang.String,javax.xml.transform.SourceLocator,org.apache.xml.utils.PrefixResolver,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.ExsltDynamic:double max(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList,java.lang.String)",
            "org.apache.xalan.lib.ExsltDynamic:double min(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList,java.lang.String)",
            "org.apache.xalan.lib.ExsltDynamic:double sum(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList,java.lang.String)",
            "org.apache.xalan.lib.ExsltDynamic:org.w3c.dom.NodeList map(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList,java.lang.String)",
            "org.apache.xalan.lib.ExsltDynamic:org.apache.xpath.objects.XObject evaluate(org.apache.xalan.extensions.ExpressionContext,java.lang.String)",
            "org.apache.xalan.lib.ExsltDynamic:org.w3c.dom.NodeList closure(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList,java.lang.String)",
            "org.apache.xalan.lib.Redirect:java.lang.String getFilename(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)",
            "org.apache.xpath.domapi.XPathEvaluatorImpl:org.w3c.dom.xpath.XPathExpression createExpression(java.lang.String,org.w3c.dom.xpath.XPathNSResolver)",
            "org.apache.xpath.jaxp.XPathImpl:org.apache.xpath.objects.XObject eval(java.lang.String,java.lang.Object)",
            "org.apache.xpath.jaxp.XPathImpl:javax.xml.xpath.XPathExpression compile(java.lang.String)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Choose:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Comment:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Copy:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Fallback:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ForEach:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.If:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Message:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ProcessingInstruction:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void compileResultTree(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Template:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Text:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslAttribute:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void compileResultTree(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateLiteral(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.UnresolvedRef:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CopyOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ForEach:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:org.apache.xalan.xsltc.compiler.util.Type typeCheckExternal(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:java.util.Vector typeCheckArgs(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.If:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Key:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LangCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LogicalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NameBase:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Number:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Param:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Predicate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Sort:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Sort:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Step:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StringCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnresolvedRef:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ValueOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Variable:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.When:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.WithParam:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Step:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CeilingCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CopyOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:org.apache.bcel.generic.InstructionList compile(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FloorCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ForEach:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.GenerateIdCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Key:void traverseNodeSet(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,int)",
            "org.apache.xalan.xsltc.compiler.Key:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.bcel.generic.LocalVariableGen translateCall(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LangCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NameBase:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NotCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Number:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void compileFilter(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RoundCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSelect(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSortIterator(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,org.apache.xalan.xsltc.compiler.Expression,java.util.Vector)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Step:void translatePredicates(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StepPattern:void translateSimpleContext(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StepPattern:void translateGeneralContext(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringLengthCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ValueOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.VariableBase:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.WithParam:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.AbsolutePathPattern:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.AlternativePattern:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.AncestorPattern:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CopyOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ForEach:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:org.apache.xalan.xsltc.compiler.util.Type typeCheckExternal(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:java.util.Vector typeCheckArgs(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.If:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Key:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LangCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LogicalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NameBase:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Number:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Param:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ParentPattern:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Predicate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Sort:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Sort:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Step:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StringCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Template:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ValueOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Variable:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.When:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.WithParam:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.AlternativePattern:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.AlternativePattern:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.AncestorPattern:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CopyOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ForEach:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:org.apache.xalan.xsltc.compiler.util.Type typeCheckExternal(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:java.util.Vector typeCheckArgs(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.If:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Key:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LangCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LogicalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NameBase:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Number:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Param:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ParentPattern:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Predicate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Sort:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Sort:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Step:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StringCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Template:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ValueOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Variable:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.When:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.WithParam:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.AncestorPattern:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.AbsolutePathPattern:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.AlternativePattern:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.AncestorPattern:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CopyOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ForEach:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:org.apache.xalan.xsltc.compiler.util.Type typeCheckExternal(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:java.util.Vector typeCheckArgs(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.If:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Key:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LangCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LogicalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NameBase:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Number:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Param:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ParentPattern:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Predicate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Sort:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Sort:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Step:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StringCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Template:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ValueOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Variable:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.When:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.WithParam:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.ParentPattern:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.AbsolutePathPattern:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.AlternativePattern:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.AncestorPattern:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CastExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.CopyOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ForEach:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:org.apache.xalan.xsltc.compiler.util.Type typeCheckExternal(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:java.util.Vector typeCheckArgs(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.If:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Key:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LangCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.LogicalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NameBase:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Number:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.NumberCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Param:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ParentPattern:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Predicate:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Sort:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Sort:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Step:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.StringCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Template:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.ValueOf:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.Variable:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.When:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.WithParam:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.UnsupportedElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:org.apache.xalan.xsltc.compiler.util.Type typeCheckContents(org.apache.xalan.xsltc.compiler.SymbolTable)"
        ]
    },
    "org.apache.xalan.xsltc.dom.MultiDOM:org.apache.xml.dtm.DTMAxisIterator getNamespaceAxisIterator(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMAdapter:org.apache.xml.dtm.DTMAxisIterator getNamespaceAxisIterator(int,int)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Stylesheet:java.lang.String compileTopLevel(org.apache.xalan.xsltc.compiler.util.ClassGenerator,java.util.Enumeration)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.Stylesheet:void compileTransform(org.apache.xalan.xsltc.compiler.util.ClassGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.TopLevelElement:org.apache.bcel.generic.InstructionList compile(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.Mode:void compileNamedTemplate(org.apache.xalan.xsltc.compiler.Template,org.apache.xalan.xsltc.compiler.util.ClassGenerator)",
            "org.apache.xalan.xsltc.compiler.Mode:void compileTemplates(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,org.apache.bcel.generic.InstructionHandle)",
            "org.apache.xalan.xsltc.compiler.Mode:void compileTemplateCalls(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,org.apache.bcel.generic.InstructionHandle,int,int)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Parser:void setOutput(org.apache.xalan.xsltc.compiler.Output)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.Output:void parseContents(org.apache.xalan.xsltc.compiler.Parser)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.CopyOf:void parseContents(org.apache.xalan.xsltc.compiler.Parser)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AttributeSet:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Stylesheet:void parseOwnChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void parseChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Template:void parseSimplified(org.apache.xalan.xsltc.compiler.Stylesheet,org.apache.xalan.xsltc.compiler.Parser)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Number:void parseContents(org.apache.xalan.xsltc.compiler.Parser)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AttributeSet:void parseContents(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Stylesheet:void parseOwnChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void parseChildren(org.apache.xalan.xsltc.compiler.Parser)",
            "org.apache.xalan.xsltc.compiler.Template:void parseSimplified(org.apache.xalan.xsltc.compiler.Stylesheet,org.apache.xalan.xsltc.compiler.Parser)"
        ]
    },
    "org.apache.xalan.transformer.TrAXFilter:void <init>(javax.xml.transform.Templates)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.TransformerFactoryImpl:org.xml.sax.XMLFilter newXMLFilter(javax.xml.transform.Templates)"
        ]
    },
    "org.apache.xalan.xsltc.trax.TemplatesImpl:java.util.Properties getOutputProperties()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xslt.Process:void main(java.lang.String[])"
        ]
    },
    "org.apache.xalan.xsltc.trax.TrAXFilter:void <init>(javax.xml.transform.Templates)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.trax.SmartTransformerFactoryImpl:org.xml.sax.XMLFilter newXMLFilter(javax.xml.transform.Templates)",
            "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:org.xml.sax.XMLFilter newXMLFilter(javax.xml.transform.Templates)"
        ]
    },
    "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:javax.xml.transform.sax.TransformerHandler newTransformerHandler(javax.xml.transform.Templates)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.PipeDocument:void pipeDocument(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)",
            "org.apache.xalan.xslt.Process:void main(java.lang.String[])",
            "org.apache.xalan.xsltc.trax.SmartTransformerFactoryImpl:javax.xml.transform.sax.TransformerHandler newTransformerHandler(javax.xml.transform.Templates)"
        ]
    },
    "org.apache.xml.dtm.ref.sax2dtm.SAX2RTFDTM:void <init>(org.apache.xml.dtm.DTMManager,javax.xml.transform.Source,int,org.apache.xml.dtm.DTMWSFilter,org.apache.xml.utils.XMLStringFactory,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.DTMManagerDefault:org.apache.xml.dtm.DTM getDTM(javax.xml.transform.Source,boolean,org.apache.xml.dtm.DTMWSFilter,boolean,boolean)"
        ]
    },
    "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void <init>(org.apache.xml.dtm.DTMManager,javax.xml.transform.Source,int,org.apache.xml.dtm.DTMWSFilter,org.apache.xml.utils.XMLStringFactory,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.dom.MultiDOM:java.lang.String getUnparsedEntityURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMAdapter:java.lang.String getUnparsedEntityURI(java.lang.String)"
        ]
    },
    "org.apache.xalan.processor.XSLTAttributeDef:boolean setAttrValue(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.ProcessorKey:void setPropertiesFromAttributes(org.apache.xalan.processor.StylesheetHandler,java.lang.String,org.xml.sax.Attributes,org.apache.xalan.templates.ElemTemplateElement)",
            "org.apache.xalan.processor.XSLTAttributeDef:void setDefAttrValue(org.apache.xalan.processor.StylesheetHandler,org.apache.xalan.templates.ElemTemplateElement)",
            "org.apache.xalan.processor.XSLTElementProcessor:org.xml.sax.Attributes setPropertiesFromAttributes(org.apache.xalan.processor.StylesheetHandler,java.lang.String,org.xml.sax.Attributes,org.apache.xalan.templates.ElemTemplateElement,boolean)"
        ]
    },
    "org.apache.xalan.lib.ExsltStrings:org.w3c.dom.NodeList split(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.lib.ExsltStrings:org.w3c.dom.NodeList tokenize(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.trax.TransformerImpl:org.apache.xml.serializer.SerializationHandler getOutputHandler(javax.xml.transform.Result)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void setResult(javax.xml.transform.Result)",
            "org.apache.xalan.xsltc.trax.TransformerImpl:void transform(javax.xml.transform.Source,javax.xml.transform.Result)"
        ]
    },
    "org.apache.xml.serializer.ToUnknownStream:void setDocumentLocator(org.xml.sax.Locator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void setDocumentLocator(org.xml.sax.Locator)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void setDocumentLocator(org.xml.sax.Locator)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startDocument()",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void setDocumentLocator(org.xml.sax.Locator)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void setDocumentLocator(org.xml.sax.Locator)",
            "org.apache.xml.serializer.ToUnknownStream:void setDocumentLocator(org.xml.sax.Locator)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void setDocumentLocator(org.xml.sax.Locator)",
            "org.apache.xml.serializer.TreeWalker:void <init>(org.xml.sax.ContentHandler,java.lang.String)",
            "org.apache.xml.utils.TreeWalker:void <init>(org.xml.sax.ContentHandler,org.apache.xml.utils.DOMHelper,java.lang.String)",
            "org.apache.xml.utils.TreeWalker:void <init>(org.xml.sax.ContentHandler,org.apache.xml.utils.DOMHelper)",
            "org.apache.xml.utils.TreeWalker:void <init>(org.xml.sax.ContentHandler)"
        ]
    },
    "org.apache.xml.serializer.TreeWalker:void <init>(org.xml.sax.ContentHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.ToStream:void serialize(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xpath.NodeSet:int addNodeInDocOrder(org.w3c.dom.Node,boolean,org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.NodeSet:int addNodeInDocOrder(org.w3c.dom.Node,org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xalan.templates.RedundentExprEliminator:org.apache.xalan.templates.ElemVariable createPseudoVarDecl(org.apache.xalan.templates.ElemTemplateElement,org.apache.xpath.axes.LocPathIterator,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.RedundentExprEliminator:org.apache.xalan.templates.RedundentExprEliminator$MultistepExprHolder matchAndEliminatePartialPaths(org.apache.xalan.templates.RedundentExprEliminator$MultistepExprHolder,org.apache.xalan.templates.RedundentExprEliminator$MultistepExprHolder,boolean,int,org.apache.xalan.templates.ElemTemplateElement)",
            "org.apache.xalan.templates.RedundentExprEliminator:int findAndEliminateRedundant(int,int,org.apache.xpath.ExpressionOwner,org.apache.xalan.templates.ElemTemplateElement,java.util.Vector)",
            "org.apache.xalan.templates.RedundentExprEliminator:int oldFindAndEliminateRedundant(int,int,org.apache.xpath.ExpressionOwner,org.apache.xalan.templates.ElemTemplateElement,java.util.Vector)"
        ]
    },
    "org.apache.xalan.templates.RedundentExprEliminator:boolean visitLocationPath(org.apache.xpath.ExpressionOwner,org.apache.xpath.axes.LocPathIterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.LocPathIterator:void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)",
            "org.apache.xpath.axes.WalkingIterator:void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)"
        ]
    },
    "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression union(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression compile(int)"
        ]
    },
    "org.apache.xalan.lib.sql.XConnection:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.lib.sql.ConnectionPoolManager:void removePool(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.lib.sql.XConnection:void init(java.lang.String,java.lang.String,java.util.Properties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.sql.XConnection:org.apache.xpath.objects.XBooleanStatic connect(org.apache.xalan.extensions.ExpressionContext,java.lang.String,java.lang.String)",
            "org.apache.xalan.lib.sql.XConnection:org.apache.xpath.objects.XBooleanStatic connect(org.apache.xalan.extensions.ExpressionContext,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.lib.sql.XConnection:org.apache.xpath.objects.XBooleanStatic connect(org.apache.xalan.extensions.ExpressionContext,java.lang.String,java.lang.String,org.w3c.dom.Element)",
            "org.apache.xalan.lib.sql.XConnection:void initFromElement(org.w3c.dom.Element)"
        ]
    },
    "org.apache.xalan.lib.sql.XConnection:void enableDefaultConnectionPool()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.lib.sql.XConnection:void disableDefaultConnectionPool()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.lib.sql.XConnection:void setFeature(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.processor.ProcessorExsltFunction:void endElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.ProcessorCharacters:void endElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.processor.StylesheetHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xalan.processor.ProcessorText:void appendAndPush(org.apache.xalan.processor.StylesheetHandler,org.apache.xalan.templates.ElemTemplateElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.ProcessorTemplateElem:void startElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xalan.processor.ProcessorText:void endElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.ProcessorCharacters:void endElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.processor.StylesheetHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xalan.processor.XSLTElementProcessor:void endElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.ProcessorCharacters:void endElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.processor.ProcessorStylesheetElement:void endElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.processor.ProcessorTemplateElem:void endElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.processor.StylesheetHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xalan.processor.XSLTElementProcessor:void characters(org.apache.xalan.processor.StylesheetHandler,char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.StylesheetHandler:void characters(char[],int,int)"
        ]
    },
    "org.apache.xpath.axes.PredicatedNodeTest:void initPredicateInfo(org.apache.xpath.compiler.Compiler,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.AxesWalker:void init(org.apache.xpath.compiler.Compiler,int,int)",
            "org.apache.xpath.axes.BasicTestIterator:void <init>(org.apache.xpath.compiler.Compiler,int,int)",
            "org.apache.xpath.axes.DescendantIterator:void <init>(org.apache.xpath.compiler.Compiler,int,int)"
        ]
    },
    "org.apache.xpath.axes.WalkerFactory:boolean mightBeProximate(org.apache.xpath.compiler.Compiler,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.WalkerFactory:boolean isOptimizableForDescendantIterator(org.apache.xpath.compiler.Compiler,int,int)"
        ]
    },
    "org.apache.xpath.axes.WalkerFactory:boolean analyzePredicate(org.apache.xpath.compiler.Compiler,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.WalkerFactory:int analyze(org.apache.xpath.compiler.Compiler,int,int)"
        ]
    },
    "org.apache.xpath.compiler.XPathParser:boolean PrimaryExpr()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.XPathParser:int FilterExpr()"
        ]
    },
    "org.apache.xpath.compiler.XPathParser:void Predicate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.XPathParser:int FilterExpr()",
            "org.apache.xpath.compiler.XPathParser:boolean Step()",
            "org.apache.xpath.compiler.XPathParser:boolean AbbreviatedNodeTestStep(boolean)"
        ]
    },
    "org.apache.xpath.compiler.XPathParser:void QName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.XPathParser:boolean PrimaryExpr()"
        ]
    },
    "org.apache.xpath.compiler.XPathParser:void UnionExpr()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.XPathParser:void UnaryExpr()"
        ]
    },
    "org.apache.xpath.compiler.XPathParser:void IdKeyPattern()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.XPathParser:void LocationPathPattern()"
        ]
    },
    "org.apache.xpath.compiler.XPathParser:void Basis()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.XPathParser:boolean Step()"
        ]
    },
    "org.apache.xpath.compiler.XPathParser:void Pattern()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.XPathParser:void initMatchPattern(org.apache.xpath.compiler.Compiler,java.lang.String,org.apache.xml.utils.PrefixResolver)"
        ]
    },
    "org.apache.xpath.compiler.XPathParser:boolean StepPattern(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.XPathParser:void RelativePathPattern()"
        ]
    },
    "org.apache.xalan.processor.XSLTAttributeDef:java.lang.Boolean processYESNO(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.XSLTAttributeDef:java.lang.Object processValue(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.templates.ElemTemplateElement)"
        ]
    },
    "org.apache.xalan.transformer.NodeSortKey:void <init>(org.apache.xalan.transformer.TransformerImpl,org.apache.xpath.XPath,boolean,boolean,java.lang.String,boolean,org.apache.xml.utils.PrefixResolver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerImpl:java.util.Vector processSortKeys(org.apache.xalan.templates.ElemForEach,int)"
        ]
    },
    "org.apache.xml.serializer.ToStream:void setOutputFormat(java.util.Properties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.serialize.SerializerFactory$SerializerWrapper:void setOutputFormat(java.util.Properties)",
            "org.apache.xml.serializer.SerializerFactory:org.apache.xml.serializer.Serializer getSerializer(java.util.Properties)",
            "org.apache.xml.serializer.ToHTMLStream:void setOutputFormat(java.util.Properties)",
            "org.apache.xml.serializer.ToUnknownStream:void setOutputFormat(java.util.Properties)"
        ]
    },
    "org.apache.xml.serializer.ToStream:void init(java.io.Writer,java.util.Properties)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.serializer.ToHTMLStream:void init(java.io.OutputStream,java.util.Properties)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.serializer.ToHTMLStream:void setOutputStream(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.PipeDocument:void usePipe(java.util.Vector,java.lang.String,java.lang.String)",
            "org.apache.xalan.serialize.SerializerFactory$SerializerWrapper:void setOutputStream(java.io.OutputStream)",
            "org.apache.xalan.transformer.SerializerSwitcher:org.apache.xml.serializer.Serializer switchSerializerIfHTML(java.lang.String,java.lang.String,java.util.Properties,org.apache.xml.serializer.Serializer)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void createResultContentHandler(javax.xml.transform.Result)",
            "org.apache.xalan.transformer.TransformerImpl:org.apache.xml.serializer.SerializationHandler createSerializationHandler(javax.xml.transform.Result,org.apache.xalan.templates.OutputProperties)",
            "org.apache.xalan.xsltc.runtime.output.TransletOutputHandlerFactory:org.apache.xml.serializer.SerializationHandler getSerializationHandler()",
            "org.apache.xml.serializer.ToUnknownStream:void setOutputStream(java.io.OutputStream)",
            "org.apache.xml.serializer.ToUnknownStream:void initStreamOutput()"
        ]
    },
    "org.apache.xml.serializer.ToStream:void setOutputStream(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.PipeDocument:void usePipe(java.util.Vector,java.lang.String,java.lang.String)",
            "org.apache.xalan.serialize.SerializerFactory$SerializerWrapper:void setOutputStream(java.io.OutputStream)",
            "org.apache.xalan.transformer.SerializerSwitcher:org.apache.xml.serializer.Serializer switchSerializerIfHTML(java.lang.String,java.lang.String,java.util.Properties,org.apache.xml.serializer.Serializer)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void createResultContentHandler(javax.xml.transform.Result)",
            "org.apache.xalan.transformer.TransformerImpl:org.apache.xml.serializer.SerializationHandler createSerializationHandler(javax.xml.transform.Result,org.apache.xalan.templates.OutputProperties)",
            "org.apache.xalan.xsltc.runtime.output.TransletOutputHandlerFactory:org.apache.xml.serializer.SerializationHandler getSerializationHandler()",
            "org.apache.xml.serializer.ToUnknownStream:void setOutputStream(java.io.OutputStream)",
            "org.apache.xml.serializer.ToUnknownStream:void initStreamOutput()"
        ]
    },
    "org.apache.xml.serializer.ToStream:boolean addAttributeAlways(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.SerializerBase:void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)",
            "org.apache.xml.serializer.SerializerBase:void addAttribute(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.SerializerBase:void addXSLAttribute(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.SerializerBase:void addAttributes(org.xml.sax.Attributes)",
            "org.apache.xml.serializer.SerializerBase:void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToStream:boolean startPrefixMapping(java.lang.String,java.lang.String,boolean)",
            "org.apache.xml.serializer.ToStream:void ensurePrefixIsDeclared(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToXMLStream:void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)"
        ]
    },
    "org.apache.xml.serializer.ToStream:void characters(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.XSLProcessorContext:void outputToResultTree(org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.lib.sql.DTMDocument:void dispatchNodeData(org.w3c.dom.Node,org.xml.sax.ContentHandler,int)",
            "org.apache.xalan.templates.ElemCopyOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemNumber:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemTextLiteral:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.TransformerHandlerImpl:void characters(char[],int,int)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void characters(char[],int,int)",
            "org.apache.xalan.transformer.TransformerImpl:void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement,boolean)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:void copy(java.lang.Object,org.apache.xml.serializer.SerializationHandler,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void characters(char[],int,int)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:void dispatchNodeData(org.w3c.dom.Node,org.xml.sax.ContentHandler,int)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void characters(char[],int,int)",
            "org.apache.xml.serializer.SerializerBase:void characters(org.w3c.dom.Node)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void characters(char[],int,int)",
            "org.apache.xml.serializer.ToHTMLStream:void characters(char[],int,int)",
            "org.apache.xml.serializer.ToStream:void characters(java.lang.String)",
            "org.apache.xml.serializer.ToStream:void ignorableWhitespace(char[],int,int)",
            "org.apache.xml.serializer.ToTextSAXHandler:void characters(java.lang.String)",
            "org.apache.xml.serializer.ToTextSAXHandler:void characters(char[],int,int)",
            "org.apache.xml.serializer.ToUnknownStream:void characters(char[],int,int)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void characters(char[],int,int)",
            "org.apache.xml.serializer.TreeWalker:void dispatachChars(org.w3c.dom.Node)",
            "org.apache.xml.utils.FastStringBuffer:void sendSAXcharacters(org.xml.sax.ContentHandler,int,int)",
            "org.apache.xml.utils.FastStringBuffer:int sendNormalizedSAXcharacters(char[],int,int,org.xml.sax.ContentHandler,int)",
            "org.apache.xml.utils.TreeWalker:void dispatachChars(org.w3c.dom.Node)",
            "org.apache.xpath.objects.XString:void dispatchCharactersEvents(org.xml.sax.ContentHandler)",
            "org.apache.xpath.objects.XStringForChars:void dispatchCharactersEvents(org.xml.sax.ContentHandler)"
        ]
    },
    "org.apache.xml.serializer.ToStream:void comment(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void comment(char[],int,int)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void comment(char[],int,int)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void comment(char[],int,int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void comment(char[],int,int)",
            "org.apache.xml.serializer.SerializerBase:void comment(java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void comment(char[],int,int)",
            "org.apache.xml.serializer.ToHTMLStream:void comment(char[],int,int)",
            "org.apache.xml.serializer.ToSAXHandler:void comment(java.lang.String)",
            "org.apache.xml.serializer.ToUnknownStream:void comment(char[],int,int)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void comment(char[],int,int)",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.FastStringBuffer:void sendSAXComment(org.xml.sax.ext.LexicalHandler,int,int)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xpath.objects.XString:void dispatchAsComment(org.xml.sax.ext.LexicalHandler)",
            "org.apache.xpath.objects.XStringForChars:void dispatchAsComment(org.xml.sax.ext.LexicalHandler)"
        ]
    },
    "org.apache.xml.serializer.ToStream:void flushPending()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.XSLProcessorContext:void outputToResultTree(org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.serialize.SerializerUtils:void outputResultTreeFragment(org.apache.xml.serializer.SerializationHandler,org.apache.xpath.objects.XObject,org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.ElemExtensionCall:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemLiteralResult:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemTextLiteral:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.TransformerImpl:int transformToRTF(org.apache.xalan.templates.ElemTemplateElement,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.transformer.TransformerImpl:void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement,org.xml.sax.ContentHandler)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String startXslElement(java.lang.String,java.lang.String,org.apache.xml.serializer.SerializationHandler,org.apache.xalan.xsltc.DOM,int)",
            "org.apache.xml.serializer.SerializerBase:void entityReference(java.lang.String)",
            "org.apache.xml.serializer.SerializerBase:void characters(org.w3c.dom.Node)",
            "org.apache.xml.serializer.ToHTMLStream:void endDocument()",
            "org.apache.xml.serializer.ToHTMLStream:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToStream:boolean startPrefixMapping(java.lang.String,java.lang.String,boolean)",
            "org.apache.xml.serializer.ToUnknownStream:void flushPending()",
            "org.apache.xml.serializer.ToXMLStream:void endDocument()",
            "org.apache.xml.serializer.ToXMLStream:void processingInstruction(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xml.serializer.ToXMLStream:void processingInstruction(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemPI:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemTextLiteral:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemValueOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.ClonerToResultTree:void cloneToResultTree(int,int,org.apache.xml.dtm.DTM,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.transformer.TransformerHandlerImpl:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void copyPI(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToUnknownStream:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xpath.XPathContext:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.domapi.XPathExpressionImpl:java.lang.Object evaluate(org.w3c.dom.Node,short,java.lang.Object)",
            "org.apache.xpath.jaxp.XPathExpressionImpl:org.apache.xpath.objects.XObject eval(java.lang.Object)",
            "org.apache.xpath.jaxp.XPathImpl:org.apache.xpath.objects.XObject eval(java.lang.String,java.lang.Object)",
            "org.apache.xpath.CachedXPathAPI:void <init>()",
            "org.apache.xpath.CachedXPathAPI:org.apache.xpath.objects.XObject eval(org.w3c.dom.Node,java.lang.String,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.XPathAPI:org.apache.xpath.objects.XObject eval(org.w3c.dom.Node,java.lang.String,org.w3c.dom.Node)",
            "org.apache.xpath.XPathAPI:org.apache.xpath.objects.XObject eval(org.w3c.dom.Node,java.lang.String,org.apache.xml.utils.PrefixResolver)"
        ]
    },
    "org.apache.xpath.XPathContext:void <init>(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerImpl:void <init>(org.apache.xalan.templates.StylesheetRoot)",
            "org.apache.xpath.jaxp.XPathExpressionImpl:org.apache.xpath.objects.XObject eval(java.lang.Object)",
            "org.apache.xpath.jaxp.XPathImpl:org.apache.xpath.objects.XObject eval(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.xpath.XPathContext:void reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerImpl:void reset()"
        ]
    },
    "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xml.serializer.ElemDesc getElemDesc()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.LiteralAttribute:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslAttribute:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xml.serializer.ToHTMLStream:org.apache.xml.serializer.ElemDesc getElemDesc(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.LiteralElement:org.apache.xml.serializer.ElemDesc getElemDesc()"
        ]
    },
    "org.apache.xml.serializer.ToHTMLStream:org.apache.xml.serializer.ElemDesc getElemDesc2(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.ToHTMLStream:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xml.serializer.ToHTMLStream:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.runtime.output.TransletOutputHandlerFactory:org.apache.xml.serializer.SerializationHandler getSerializationHandler()"
        ]
    },
    "org.apache.xml.serializer.ToHTMLStream:void writeAttrURI(java.io.Writer,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.ToHTMLStream:void processAttribute(java.io.Writer,java.lang.String,java.lang.String,org.apache.xml.serializer.ElemDesc)",
            "org.apache.xml.serializer.ToHTMLStream:void addUniqueAttribute(java.lang.String,java.lang.String,int)"
        ]
    },
    "org.apache.xml.serializer.ToHTMLStream:void addUniqueAttribute(java.lang.String,java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.ToUnknownStream:void addUniqueAttribute(java.lang.String,java.lang.String,int)"
        ]
    },
    "org.apache.xml.serializer.ToUnknownStream:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.runtime.output.TransletOutputHandlerFactory:org.apache.xml.serializer.SerializationHandler getSerializationHandler()"
        ]
    },
    "org.apache.xml.serializer.ToXMLStream:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.runtime.output.TransletOutputHandlerFactory:org.apache.xml.serializer.SerializationHandler getSerializationHandler()",
            "org.apache.xml.serializer.ToUnknownStream:void <init>()"
        ]
    },
    "org.apache.xml.serializer.ToXMLStream:void addUniqueAttribute(java.lang.String,java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.ToUnknownStream:void addUniqueAttribute(java.lang.String,java.lang.String,int)"
        ]
    },
    "org.apache.xml.serializer.EncodingInfo$EncodingImpl:boolean isInEncoding(char)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.EncodingInfo$EncodingImpl:boolean isInEncoding(char)",
            "org.apache.xml.serializer.EncodingInfo:boolean isInEncoding(char)"
        ]
    },
    "org.apache.xml.serializer.EncodingInfo$EncodingImpl:boolean isInEncoding(char,char)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.EncodingInfo$EncodingImpl:boolean isInEncoding(char,char)",
            "org.apache.xml.serializer.EncodingInfo:boolean isInEncoding(char,char)"
        ]
    },
    "org.apache.xml.serializer.Encodings:java.io.Writer getWriter(java.io.OutputStream,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.ToStream:void init(java.io.OutputStream,java.util.Properties,boolean)"
        ]
    },
    "org.apache.xml.serializer.Encodings:org.apache.xml.serializer.EncodingInfo getEncodingInfo(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.ToStream:void setEncoding(java.lang.String)"
        ]
    },
    "org.apache.xml.serializer.Encodings:java.lang.String getMimeEncoding(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.OutputPropertiesFactory:java.util.Properties getDefaultMethodProperties(java.lang.String)",
            "org.apache.xml.serializer.ToHTMLStream:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToStream:void init(java.io.Writer,java.util.Properties,boolean,boolean)",
            "org.apache.xml.serializer.ToStream:void init(java.io.OutputStream,java.util.Properties,boolean)",
            "org.apache.xml.serializer.ToXMLStream:void startDocumentInternal()"
        ]
    },
    "org.apache.xml.serializer.Encodings:java.lang.String convertJava2MimeEncoding(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.Encodings:java.lang.String getMimeEncoding(java.lang.String)"
        ]
    },
    "org.apache.xml.serializer.Encodings:java.lang.String convertMime2JavaEncoding(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.Output:void parseContents(org.apache.xalan.xsltc.compiler.Parser)"
        ]
    },
    "org.apache.xml.serializer.OutputPropertiesFactory:java.util.Properties getDefaultMethodProperties(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.OutputProperties:void <init>(java.lang.String)",
            "org.apache.xalan.templates.OutputProperties:void setMethodDefaults(java.lang.String)",
            "org.apache.xalan.templates.OutputProperties:java.util.Properties getDefaultMethodProperties(java.lang.String)",
            "org.apache.xalan.xsltc.trax.TransformerImpl:void setDefaults(java.util.Properties,java.lang.String)",
            "org.apache.xml.serializer.SerializerFactory:org.apache.xml.serializer.Serializer getSerializer(java.util.Properties)",
            "org.apache.xml.serializer.ToHTMLStream:void init(java.io.OutputStream,java.util.Properties)",
            "org.apache.xml.serializer.ToHTMLStream:void setOutputStream(java.io.OutputStream)",
            "org.apache.xml.serializer.ToStream:void setOutputStream(java.io.OutputStream)",
            "org.apache.xml.serializer.ToUnknownStream:void initStreamOutput()"
        ]
    },
    "org.apache.xml.serializer.ToHTMLStream:void writeAttrString(java.io.Writer,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.ToHTMLStream:void processAttribute(java.io.Writer,java.lang.String,java.lang.String,org.apache.xml.serializer.ElemDesc)",
            "org.apache.xml.serializer.ToHTMLStream:void addUniqueAttribute(java.lang.String,java.lang.String,int)",
            "org.apache.xml.serializer.ToStream:void processAttributes(java.io.Writer,int)"
        ]
    },
    "org.apache.xml.serializer.ToStream:int writeUTF16Surrogate(char,char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.ToHTMLStream:void writeAttrString(java.io.Writer,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToStream:void writeNormalizedChars(char[],int,int,boolean,boolean)",
            "org.apache.xml.serializer.ToTextStream:void writeNormalizedChars(char[],int,int,boolean)"
        ]
    },
    "org.apache.xml.serializer.ToStream:void writeNormalizedChars(char[],int,int,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.ToHTMLStream:void characters(char[],int,int)",
            "org.apache.xml.serializer.ToHTMLStream:void cdata(char[],int,int)",
            "org.apache.xml.serializer.ToStream:void cdata(char[],int,int)"
        ]
    },
    "org.apache.xml.serializer.ToStream:int accumDefaultEscape(java.io.Writer,char,int,char[],int,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.ToStream:int processDirty(char[],int,int,char,int,boolean)",
            "org.apache.xml.serializer.ToStream:void writeAttrString(java.io.Writer,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xml.serializer.ToTextStream:void writeNormalizedChars(char[],int,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.ToTextStream:void characters(char[],int,int)",
            "org.apache.xml.serializer.ToTextStream:void charactersRaw(char[],int,int)",
            "org.apache.xml.serializer.ToTextStream:void cdata(char[],int,int)",
            "org.apache.xml.serializer.ToTextStream:void ignorableWhitespace(char[],int,int)"
        ]
    },
    "org.apache.xalan.lib.Extensions:org.w3c.dom.NodeList tokenize(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:java.lang.String getLocalName(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.serialize.SerializerUtils:void addAttribute(org.apache.xml.serializer.SerializationHandler,int)",
            "org.apache.xalan.templates.ElemCopy:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.TemplateList:org.apache.xalan.templates.TemplateSubPatternAssociation getHead(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.templates.TemplateList:org.apache.xalan.templates.ElemTemplate getTemplateFast(org.apache.xpath.XPathContext,int,int,org.apache.xml.utils.QName,int,boolean,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.transformer.ClonerToResultTree:void cloneToResultTree(int,int,org.apache.xml.dtm.DTM,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.transformer.TreeWalker2Result:void startNode(int)",
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:java.lang.String getLocalName(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl$TypedNamespaceIterator:int next()",
            "org.apache.xalan.xsltc.dom.SAXImpl:java.lang.String lookupNamespace(int,java.lang.String)",
            "org.apache.xalan.xsltc.dom.SAXImpl:java.lang.String getNodeName(int)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:int getAttributeNode(int,java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:void dumpDTM(java.io.OutputStream)",
            "org.apache.xml.dtm.ref.DTMNamedNodeMap:org.w3c.dom.Node getNamedItemNS(java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getLocalName()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)",
            "org.apache.xpath.functions.FuncLocalPart:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.NodeTest:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.patterns.NodeTest:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)"
        ]
    },
    "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:java.lang.String getNodeNameX(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.serialize.SerializerUtils:void processNSDecls(org.apache.xml.serializer.SerializationHandler,int,int,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.serialize.SerializerUtils:boolean isDefinedNSDecl(org.apache.xml.serializer.SerializationHandler,int,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.serialize.SerializerUtils:void ensureNamespaceDeclDeclared(org.apache.xml.serializer.SerializationHandler,org.apache.xml.dtm.DTM,int)",
            "org.apache.xalan.transformer.ClonerToResultTree:void cloneToResultTree(int,int,org.apache.xml.dtm.DTM,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:java.lang.String getNodeNameX(int)",
            "org.apache.xalan.xsltc.dom.DOMAdapter:java.lang.String getNodeNameX(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM:java.lang.String getNodeNameX(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(int,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.xsltc.dom.SAXImpl:java.lang.String shallowCopy(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:void dumpDTM(java.io.OutputStream)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:java.lang.String dumpNode(int)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)",
            "org.apache.xpath.functions.FuncQname:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:java.lang.String getNodeName(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.XSLProcessorContext:void outputToResultTree(org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.serialize.SerializerUtils:void addAttribute(org.apache.xml.serializer.SerializationHandler,int)",
            "org.apache.xalan.templates.ElemCopy:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemNumber:org.apache.xpath.XPath getCountMatchPattern(org.apache.xpath.XPathContext,int)",
            "org.apache.xalan.templates.TemplateList:org.apache.xalan.templates.TemplateSubPatternAssociation getHead(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.templates.TemplateList:org.apache.xalan.templates.ElemTemplate getTemplateFast(org.apache.xpath.XPathContext,int,int,org.apache.xml.utils.QName,int,boolean,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.trace.PrintTraceListener:void selected(org.apache.xalan.trace.SelectionEvent)",
            "org.apache.xalan.transformer.ClonerToResultTree:void cloneToResultTree(int,int,org.apache.xml.dtm.DTM,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.transformer.TreeWalker2Result:void startNode(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl:java.lang.String getNodeName(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:void dumpDTM(java.io.OutputStream)",
            "org.apache.xml.dtm.ref.DTMNamedNodeMap:org.w3c.dom.Node getNamedItem(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getNodeName()",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getTarget()",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getTagName()",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getName()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)",
            "org.apache.xpath.axes.PredicatedNodeTest:java.lang.String nodeToString(int)",
            "org.apache.xpath.functions.FuncNamespace:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.NodeTest:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.patterns.NodeTest:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)"
        ]
    },
    "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:java.lang.String getNodeValue(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.serialize.SerializerUtils:void addAttribute(org.apache.xml.serializer.SerializationHandler,int)",
            "org.apache.xalan.serialize.SerializerUtils:void processNSDecls(org.apache.xml.serializer.SerializationHandler,int,int,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.serialize.SerializerUtils:void ensureNamespaceDeclDeclared(org.apache.xml.serializer.SerializationHandler,org.apache.xml.dtm.DTM,int)",
            "org.apache.xalan.transformer.ClonerToResultTree:void cloneToResultTree(int,int,org.apache.xml.dtm.DTM,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:java.lang.String getNodeValue(int)",
            "org.apache.xalan.xsltc.dom.SAXImpl:java.lang.String lookupNamespace(int,java.lang.String)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(int,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.xsltc.dom.SAXImpl:java.lang.String shallowCopy(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.dom.SAXImpl:java.lang.String getLanguage(int)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:void dumpDTM(java.io.OutputStream)",
            "org.apache.xml.dtm.ref.DTMDefaultBase:java.lang.String dumpNode(int)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getNodeValue()",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getData()",
            "org.apache.xml.dtm.ref.DTMNodeProxy:int getLength()",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getValue()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xalan.extensions.MethodResolver:int scoreMatch(java.lang.Class[],int,java.lang.Object[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.MethodResolver:java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Object[],java.lang.Object[][],org.apache.xalan.extensions.ExpressionContext)",
            "org.apache.xalan.extensions.MethodResolver:java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Object[],java.lang.Object[][],org.apache.xalan.extensions.ExpressionContext,int)"
        ]
    },
    "org.apache.xalan.transformer.TransformerImpl:java.lang.Object getParameter(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xpath.objects.XObject:java.lang.String getTypeString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.MethodResolver:java.lang.String errArgs(java.lang.Object[],int)",
            "org.apache.xpath.domapi.XPathResultImpl:java.lang.String getStringValue()",
            "org.apache.xpath.objects.XObject:double num()",
            "org.apache.xpath.objects.XObject:boolean bool()",
            "org.apache.xpath.objects.XObject:org.apache.xml.dtm.DTMIterator iter()",
            "org.apache.xpath.objects.XObject:org.w3c.dom.traversal.NodeIterator nodeset()",
            "org.apache.xpath.objects.XObject:org.w3c.dom.NodeList nodelist()",
            "org.apache.xpath.objects.XObject:org.apache.xpath.NodeSetDTM mutableNodeset()",
            "org.apache.xpath.objects.XObject:java.lang.Object castToType(int,org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xalan.transformer.TransformerImpl:org.apache.xml.dtm.DTMIterator getContextNodeList()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.XalanTransformState:void resetState(javax.xml.transform.Transformer)",
            "org.apache.xalan.transformer.XalanTransformState:org.w3c.dom.traversal.NodeIterator getContextNodeList()"
        ]
    },
    "org.apache.xpath.axes.ChildTestIterator:org.apache.xml.dtm.DTMIterator cloneWithReset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.trace.PrintTraceListener:void selected(org.apache.xalan.trace.SelectionEvent)",
            "org.apache.xalan.transformer.TransformerImpl:org.apache.xml.dtm.DTMIterator getContextNodeList()",
            "org.apache.xml.dtm.ref.DTMNodeList:void <init>(org.apache.xml.dtm.DTMIterator)",
            "org.apache.xpath.axes.OneStepIterator:org.apache.xml.dtm.DTMIterator cloneWithReset()",
            "org.apache.xpath.functions.FuncPosition:int getPositionInContextNodeList(org.apache.xpath.XPathContext)",
            "org.apache.xpath.XPathContext:org.apache.xml.dtm.DTMIterator getContextNodes()"
        ]
    },
    "org.apache.xpath.XPathContext:org.apache.xml.dtm.DTMIterator getContextNodes()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.templates.ElemCallTemplate:void compose(org.apache.xalan.templates.StylesheetRoot)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemApplyTemplates:void compose(org.apache.xalan.templates.StylesheetRoot)",
            "org.apache.xalan.templates.StylesheetRoot:void composeTemplates(org.apache.xalan.templates.ElemTemplateElement)"
        ]
    },
    "org.apache.xalan.templates.StylesheetRoot:void composeTemplates(org.apache.xalan.templates.ElemTemplateElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.StylesheetRoot:void recompose()",
            "org.apache.xalan.templates.StylesheetRoot:void composeTemplates(org.apache.xalan.templates.ElemTemplateElement)"
        ]
    },
    "org.apache.xpath.axes.UnionChildIterator:void fixupVariables(java.util.Vector,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void compose(org.apache.xalan.templates.StylesheetRoot)",
            "org.apache.xpath.axes.FilterExprIterator:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.FilterExprWalker:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.PredicatedNodeTest:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.UnionChildIterator:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.UnionPathIterator:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.FuncExtFunction:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.Function2Args:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.Function3Args:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.FunctionMultiArgs:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.FunctionOneArg:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.operations.Operation:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.operations.UnaryOperation:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.patterns.FunctionPattern:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.patterns.StepPattern:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.XPath:void fixupVariables(java.util.Vector,int)"
        ]
    },
    "org.apache.xpath.axes.UnionPathIterator:void fixupVariables(java.util.Vector,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void compose(org.apache.xalan.templates.StylesheetRoot)",
            "org.apache.xpath.axes.FilterExprIterator:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.FilterExprWalker:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.PredicatedNodeTest:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.UnionChildIterator:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.UnionPathIterator:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.FuncExtFunction:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.Function2Args:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.Function3Args:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.FunctionMultiArgs:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.FunctionOneArg:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.operations.Operation:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.operations.UnaryOperation:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.patterns.FunctionPattern:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.patterns.StepPattern:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.XPath:void fixupVariables(java.util.Vector,int)"
        ]
    },
    "org.apache.xpath.axes.WalkingIterator:void fixupVariables(java.util.Vector,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void compose(org.apache.xalan.templates.StylesheetRoot)",
            "org.apache.xpath.axes.FilterExprIterator:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.FilterExprWalker:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.PredicatedNodeTest:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.UnionChildIterator:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.UnionPathIterator:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.WalkingIteratorSorted:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.FuncExtFunction:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.Function2Args:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.Function3Args:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.FunctionMultiArgs:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.FunctionOneArg:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.operations.Operation:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.operations.UnaryOperation:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.patterns.FunctionPattern:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.patterns.StepPattern:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.XPath:void fixupVariables(java.util.Vector,int)"
        ]
    },
    "org.apache.xpath.patterns.UnionPattern:void fixupVariables(java.util.Vector,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void compose(org.apache.xalan.templates.StylesheetRoot)",
            "org.apache.xpath.axes.FilterExprIterator:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.FilterExprWalker:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.PredicatedNodeTest:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.FuncExtFunction:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.Function2Args:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.Function3Args:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.FunctionMultiArgs:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.FunctionOneArg:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.operations.Operation:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.operations.UnaryOperation:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.patterns.FunctionPattern:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.patterns.StepPattern:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.XPath:void fixupVariables(java.util.Vector,int)"
        ]
    },
    "org.apache.xalan.templates.AVTPartXPath:void fixupVariables(java.util.Vector,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.AVT:void fixupVariables(java.util.Vector,int)"
        ]
    },
    "org.apache.xalan.templates.ElemCopyOf:void compose(org.apache.xalan.templates.StylesheetRoot)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.StylesheetRoot:void composeTemplates(org.apache.xalan.templates.ElemTemplateElement)"
        ]
    },
    "org.apache.xalan.templates.ElemIf:void compose(org.apache.xalan.templates.StylesheetRoot)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.StylesheetRoot:void composeTemplates(org.apache.xalan.templates.ElemTemplateElement)"
        ]
    },
    "org.apache.xalan.templates.ElemNumber:void compose(org.apache.xalan.templates.StylesheetRoot)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.StylesheetRoot:void composeTemplates(org.apache.xalan.templates.ElemTemplateElement)"
        ]
    },
    "org.apache.xalan.templates.ElemSort:void compose(org.apache.xalan.templates.StylesheetRoot)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void compose(org.apache.xalan.templates.StylesheetRoot)",
            "org.apache.xalan.templates.StylesheetRoot:void composeTemplates(org.apache.xalan.templates.ElemTemplateElement)"
        ]
    },
    "org.apache.xalan.templates.ElemTemplate:void compose(org.apache.xalan.templates.StylesheetRoot)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemExsltFunction:void compose(org.apache.xalan.templates.StylesheetRoot)",
            "org.apache.xalan.templates.StylesheetRoot:void composeTemplates(org.apache.xalan.templates.ElemTemplateElement)"
        ]
    },
    "org.apache.xalan.templates.ElemValueOf:void compose(org.apache.xalan.templates.StylesheetRoot)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.StylesheetRoot:void composeTemplates(org.apache.xalan.templates.ElemTemplateElement)"
        ]
    },
    "org.apache.xalan.templates.ElemVariable:void compose(org.apache.xalan.templates.StylesheetRoot)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemParam:void compose(org.apache.xalan.templates.StylesheetRoot)",
            "org.apache.xalan.templates.StylesheetRoot:void composeTemplates(org.apache.xalan.templates.ElemTemplateElement)"
        ]
    },
    "org.apache.xalan.templates.ElemWhen:void compose(org.apache.xalan.templates.StylesheetRoot)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.StylesheetRoot:void composeTemplates(org.apache.xalan.templates.ElemTemplateElement)"
        ]
    },
    "org.apache.xalan.templates.ElemWithParam:void compose(org.apache.xalan.templates.StylesheetRoot)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemCallTemplate:void compose(org.apache.xalan.templates.StylesheetRoot)",
            "org.apache.xalan.templates.StylesheetRoot:void composeTemplates(org.apache.xalan.templates.ElemTemplateElement)"
        ]
    },
    "org.apache.xalan.templates.KeyDeclaration:void compose(org.apache.xalan.templates.StylesheetRoot)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.StylesheetRoot:void composeTemplates(org.apache.xalan.templates.ElemTemplateElement)"
        ]
    },
    "org.apache.xpath.axes.AxesWalker:org.apache.xpath.axes.AxesWalker cloneDeep(org.apache.xpath.axes.WalkingIterator,java.util.Vector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.AxesWalker:org.apache.xpath.axes.AxesWalker cloneDeep(org.apache.xpath.axes.WalkingIterator,java.util.Vector)",
            "org.apache.xpath.axes.WalkingIterator:java.lang.Object clone()"
        ]
    },
    "org.apache.xpath.compiler.Compiler:org.apache.xpath.Expression[] getCompiledPredicates(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.PredicatedNodeTest:void initPredicateInfo(org.apache.xpath.compiler.Compiler,int)",
            "org.apache.xpath.axes.WalkerFactory:org.apache.xpath.patterns.StepPattern createDefaultStepPattern(org.apache.xpath.compiler.Compiler,int,org.apache.xpath.axes.MatchPatternIterator,int,org.apache.xpath.patterns.StepPattern,org.apache.xpath.patterns.StepPattern)",
            "org.apache.xpath.compiler.Compiler:org.apache.xpath.patterns.StepPattern stepPattern(int,int,org.apache.xpath.patterns.StepPattern)"
        ]
    },
    "org.apache.xalan.templates.StylesheetRoot:void <init>(org.apache.xalan.processor.XSLTSchema,javax.xml.transform.ErrorListener)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.ProcessorLRE:org.apache.xalan.templates.Stylesheet getStylesheetRoot(org.apache.xalan.processor.StylesheetHandler)",
            "org.apache.xalan.processor.ProcessorStylesheetElement:org.apache.xalan.templates.Stylesheet getStylesheetRoot(org.apache.xalan.processor.StylesheetHandler)"
        ]
    },
    "org.apache.xpath.domapi.XPathEvaluatorImpl:org.w3c.dom.xpath.XPathExpression createExpression(java.lang.String,org.w3c.dom.xpath.XPathNSResolver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.domapi.XPathEvaluatorImpl:java.lang.Object evaluate(java.lang.String,org.w3c.dom.Node,org.w3c.dom.xpath.XPathNSResolver,short,java.lang.Object)"
        ]
    },
    "org.apache.xpath.jaxp.XPathImpl:javax.xml.xpath.XPathExpression compile(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.compiler.ApplyTemplates:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Comment:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Copy:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Fallback:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnsupportedElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.ForEach:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.If:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Message:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.ProcessingInstruction:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void compileResultTree(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.VariableBase:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.WithParam:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Template:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.TopLevelElement:org.apache.bcel.generic.InstructionList compile(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Text:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.TransletOutput:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.XslAttribute:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AttributeSet:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.XslElement:void translateLiteral(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.XslElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.XslElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CeilingCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CopyOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:org.apache.bcel.generic.InstructionList compile(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FloorCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ForEach:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.GenerateIdCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Key:void traverseNodeSet(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,int)",
            "org.apache.xalan.xsltc.compiler.Key:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.bcel.generic.LocalVariableGen translateCall(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LangCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NameBase:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NotCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Number:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void compileFilter(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RoundCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSelect(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSortIterator(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,org.apache.xalan.xsltc.compiler.Expression,java.util.Vector)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringLengthCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ValueOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.VariableBase:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.WithParam:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CeilingCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CopyOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:org.apache.bcel.generic.InstructionList compile(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FloorCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ForEach:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.GenerateIdCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Key:void traverseNodeSet(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,int)",
            "org.apache.xalan.xsltc.compiler.Key:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.bcel.generic.LocalVariableGen translateCall(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LangCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralAttribute:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NameBase:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NotCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Number:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void compileFilter(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ProcessingInstruction:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RoundCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSortType(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSortOrder(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateCaseOrder(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSelect(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSortIterator(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,org.apache.xalan.xsltc.compiler.Expression,java.util.Vector)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringLengthCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ValueOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.VariableBase:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.WithParam:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslAttribute:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateLiteral(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.BinOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CeilingCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CopyOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:org.apache.bcel.generic.InstructionList compile(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FloorCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ForEach:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.GenerateIdCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Key:void traverseNodeSet(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,int)",
            "org.apache.xalan.xsltc.compiler.Key:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.bcel.generic.LocalVariableGen translateCall(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LangCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NameBase:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NotCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Number:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void compileFilter(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RoundCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSelect(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSortIterator(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,org.apache.xalan.xsltc.compiler.Expression,java.util.Vector)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringLengthCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ValueOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.VariableBase:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.WithParam:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.BooleanCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CeilingCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CopyOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:org.apache.bcel.generic.InstructionList compile(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FloorCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ForEach:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.GenerateIdCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Key:void traverseNodeSet(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,int)",
            "org.apache.xalan.xsltc.compiler.Key:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.bcel.generic.LocalVariableGen translateCall(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LangCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NameBase:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NotCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Number:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void compileFilter(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RoundCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSelect(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSortIterator(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,org.apache.xalan.xsltc.compiler.Expression,java.util.Vector)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringLengthCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ValueOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.VariableBase:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.WithParam:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.CastCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CeilingCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CopyOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:org.apache.bcel.generic.InstructionList compile(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FloorCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ForEach:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.GenerateIdCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Key:void traverseNodeSet(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,int)",
            "org.apache.xalan.xsltc.compiler.Key:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.bcel.generic.LocalVariableGen translateCall(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LangCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NameBase:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NotCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Number:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void compileFilter(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RoundCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSelect(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSortIterator(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,org.apache.xalan.xsltc.compiler.Expression,java.util.Vector)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringLengthCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ValueOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.VariableBase:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.WithParam:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.CastExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.Choose:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.If:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LogicalExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NotCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ProcessingInstructionPattern:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StepPattern:void translateNoContext(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StepPattern:void translateSimpleContext(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.CastExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CeilingCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CopyOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:org.apache.bcel.generic.InstructionList compile(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FloorCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ForEach:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.GenerateIdCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Key:void traverseNodeSet(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,int)",
            "org.apache.xalan.xsltc.compiler.Key:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.bcel.generic.LocalVariableGen translateCall(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LangCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NameBase:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NotCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Number:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void compileFilter(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RoundCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSelect(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSortIterator(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,org.apache.xalan.xsltc.compiler.Expression,java.util.Vector)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringLengthCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ValueOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.VariableBase:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.WithParam:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.CeilingCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CeilingCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CopyOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:org.apache.bcel.generic.InstructionList compile(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FloorCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ForEach:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.GenerateIdCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Key:void traverseNodeSet(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,int)",
            "org.apache.xalan.xsltc.compiler.Key:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.bcel.generic.LocalVariableGen translateCall(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LangCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NameBase:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NotCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Number:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void compileFilter(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RoundCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSelect(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSortIterator(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,org.apache.xalan.xsltc.compiler.Expression,java.util.Vector)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringLengthCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ValueOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.VariableBase:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.WithParam:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.ConcatCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CeilingCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CopyOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:org.apache.bcel.generic.InstructionList compile(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FloorCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ForEach:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.GenerateIdCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Key:void traverseNodeSet(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,int)",
            "org.apache.xalan.xsltc.compiler.Key:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.bcel.generic.LocalVariableGen translateCall(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LangCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NameBase:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NotCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Number:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void compileFilter(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RoundCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSelect(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSortIterator(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,org.apache.xalan.xsltc.compiler.Expression,java.util.Vector)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringLengthCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ValueOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.VariableBase:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.WithParam:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.ContainsCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.Choose:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.If:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LogicalExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NotCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ProcessingInstructionPattern:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StepPattern:void translateNoContext(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StepPattern:void translateSimpleContext(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.CopyOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.DocumentCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CeilingCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CopyOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:org.apache.bcel.generic.InstructionList compile(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FloorCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ForEach:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.GenerateIdCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Key:void traverseNodeSet(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,int)",
            "org.apache.xalan.xsltc.compiler.Key:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.bcel.generic.LocalVariableGen translateCall(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LangCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NameBase:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NotCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Number:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void compileFilter(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RoundCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSelect(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSortIterator(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,org.apache.xalan.xsltc.compiler.Expression,java.util.Vector)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringLengthCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ValueOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.VariableBase:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.WithParam:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.EqualityExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.Choose:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.If:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LogicalExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NotCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ProcessingInstructionPattern:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StepPattern:void translateNoContext(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StepPattern:void translateSimpleContext(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.EqualityExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CeilingCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CopyOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:org.apache.bcel.generic.InstructionList compile(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FloorCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ForEach:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.GenerateIdCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Key:void traverseNodeSet(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,int)",
            "org.apache.xalan.xsltc.compiler.Key:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.bcel.generic.LocalVariableGen translateCall(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LangCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NameBase:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NotCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Number:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void compileFilter(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RoundCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSelect(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSortIterator(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,org.apache.xalan.xsltc.compiler.Expression,java.util.Vector)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringLengthCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ValueOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.VariableBase:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.WithParam:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Expression:org.apache.bcel.generic.InstructionList compile(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.TestSeq:org.apache.bcel.generic.InstructionHandle compile(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,org.apache.bcel.generic.InstructionHandle)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Expression:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.Choose:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.If:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LogicalExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NotCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ProcessingInstructionPattern:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StepPattern:void translateNoContext(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StepPattern:void translateSimpleContext(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.FilterExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CeilingCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CopyOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:org.apache.bcel.generic.InstructionList compile(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:void translatePredicates(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FloorCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ForEach:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.GenerateIdCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Key:void traverseNodeSet(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,int)",
            "org.apache.xalan.xsltc.compiler.Key:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.bcel.generic.LocalVariableGen translateCall(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LangCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NameBase:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NotCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Number:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void compileFilter(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RoundCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSelect(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSortIterator(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,org.apache.xalan.xsltc.compiler.Expression,java.util.Vector)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringLengthCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ValueOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.VariableBase:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.WithParam:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.FilterParentPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CeilingCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CopyOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:org.apache.bcel.generic.InstructionList compile(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FloorCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ForEach:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.GenerateIdCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Key:void traverseNodeSet(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,int)",
            "org.apache.xalan.xsltc.compiler.Key:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.bcel.generic.LocalVariableGen translateCall(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LangCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NameBase:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NotCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Number:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void compileFilter(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RoundCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSelect(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSortIterator(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,org.apache.xalan.xsltc.compiler.Expression,java.util.Vector)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringLengthCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ValueOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.VariableBase:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.WithParam:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CeilingCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CopyOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:org.apache.bcel.generic.InstructionList compile(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FloorCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ForEach:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.GenerateIdCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Key:void traverseNodeSet(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,int)",
            "org.apache.xalan.xsltc.compiler.Key:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.bcel.generic.LocalVariableGen translateCall(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LangCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NameBase:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NotCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Number:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void compileFilter(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RoundCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSelect(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSortIterator(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,org.apache.xalan.xsltc.compiler.Expression,java.util.Vector)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringLengthCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ValueOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.VariableBase:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.WithParam:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.FloorCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CeilingCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CopyOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:org.apache.bcel.generic.InstructionList compile(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FloorCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ForEach:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.GenerateIdCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Key:void traverseNodeSet(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,int)",
            "org.apache.xalan.xsltc.compiler.Key:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.bcel.generic.LocalVariableGen translateCall(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LangCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NameBase:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NotCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Number:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void compileFilter(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RoundCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSelect(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSortIterator(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,org.apache.xalan.xsltc.compiler.Expression,java.util.Vector)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringLengthCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ValueOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.VariableBase:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.WithParam:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.FormatNumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CeilingCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CopyOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:org.apache.bcel.generic.InstructionList compile(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FloorCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ForEach:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.GenerateIdCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Key:void traverseNodeSet(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,int)",
            "org.apache.xalan.xsltc.compiler.Key:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.bcel.generic.LocalVariableGen translateCall(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LangCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NameBase:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NotCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Number:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void compileFilter(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RoundCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSelect(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSortIterator(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,org.apache.xalan.xsltc.compiler.Expression,java.util.Vector)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringLengthCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ValueOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.VariableBase:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.WithParam:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.FunctionCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CeilingCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CopyOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:org.apache.bcel.generic.InstructionList compile(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FloorCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ForEach:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.GenerateIdCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Key:void traverseNodeSet(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,int)",
            "org.apache.xalan.xsltc.compiler.Key:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.bcel.generic.LocalVariableGen translateCall(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LangCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NameBase:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NotCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Number:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void compileFilter(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RoundCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSelect(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSortIterator(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,org.apache.xalan.xsltc.compiler.Expression,java.util.Vector)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringLengthCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ValueOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.VariableBase:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.WithParam:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.GenerateIdCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CeilingCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CopyOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:org.apache.bcel.generic.InstructionList compile(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FloorCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ForEach:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.GenerateIdCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Key:void traverseNodeSet(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,int)",
            "org.apache.xalan.xsltc.compiler.Key:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.bcel.generic.LocalVariableGen translateCall(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LangCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NameBase:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NotCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Number:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void compileFilter(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RoundCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSelect(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSortIterator(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,org.apache.xalan.xsltc.compiler.Expression,java.util.Vector)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringLengthCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ValueOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.VariableBase:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.WithParam:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Key:void traverseNodeSet(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.Key:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Key:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Stylesheet:java.lang.String compileBuildKeys(org.apache.xalan.xsltc.compiler.util.ClassGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.TopLevelElement:org.apache.bcel.generic.InstructionList compile(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.bcel.generic.LocalVariableGen translateCall(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.KeyCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.LangCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CeilingCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CopyOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:org.apache.bcel.generic.InstructionList compile(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FloorCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ForEach:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.GenerateIdCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Key:void traverseNodeSet(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,int)",
            "org.apache.xalan.xsltc.compiler.Key:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.bcel.generic.LocalVariableGen translateCall(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LangCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NameBase:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NotCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Number:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void compileFilter(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RoundCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSelect(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSortIterator(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,org.apache.xalan.xsltc.compiler.Expression,java.util.Vector)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringLengthCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ValueOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.VariableBase:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.WithParam:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.NameBase:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CeilingCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CopyOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:org.apache.bcel.generic.InstructionList compile(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FloorCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ForEach:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.GenerateIdCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Key:void traverseNodeSet(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,int)",
            "org.apache.xalan.xsltc.compiler.Key:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.bcel.generic.LocalVariableGen translateCall(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LangCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LocalNameCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NameBase:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NameCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NamespaceUriCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NotCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Number:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void compileFilter(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RoundCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSelect(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSortIterator(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,org.apache.xalan.xsltc.compiler.Expression,java.util.Vector)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringLengthCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ValueOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.VariableBase:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.WithParam:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.NotCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CeilingCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CopyOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:org.apache.bcel.generic.InstructionList compile(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FloorCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ForEach:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.GenerateIdCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Key:void traverseNodeSet(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,int)",
            "org.apache.xalan.xsltc.compiler.Key:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.bcel.generic.LocalVariableGen translateCall(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LangCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NameBase:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NotCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Number:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void compileFilter(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RoundCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSelect(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSortIterator(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,org.apache.xalan.xsltc.compiler.Expression,java.util.Vector)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringLengthCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ValueOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.VariableBase:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.WithParam:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Number:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.NumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CeilingCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CopyOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:org.apache.bcel.generic.InstructionList compile(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FloorCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ForEach:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.GenerateIdCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Key:void traverseNodeSet(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,int)",
            "org.apache.xalan.xsltc.compiler.Key:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.bcel.generic.LocalVariableGen translateCall(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LangCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NameBase:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NotCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Number:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void compileFilter(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RoundCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSelect(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSortIterator(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,org.apache.xalan.xsltc.compiler.Expression,java.util.Vector)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringLengthCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ValueOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.VariableBase:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.WithParam:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.ParentLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CeilingCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CopyOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:org.apache.bcel.generic.InstructionList compile(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FloorCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ForEach:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.GenerateIdCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Key:void traverseNodeSet(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,int)",
            "org.apache.xalan.xsltc.compiler.Key:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.bcel.generic.LocalVariableGen translateCall(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LangCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NameBase:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NotCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Number:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void compileFilter(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RoundCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSelect(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSortIterator(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,org.apache.xalan.xsltc.compiler.Expression,java.util.Vector)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Step:void translatePredicates(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringLengthCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ValueOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.VariableBase:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.WithParam:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Predicate:void compileFilter(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.Predicate:void translateFilter(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Predicate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CeilingCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CopyOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:org.apache.bcel.generic.InstructionList compile(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:void translatePredicates(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FloorCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ForEach:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.GenerateIdCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Key:void traverseNodeSet(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,int)",
            "org.apache.xalan.xsltc.compiler.Key:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.bcel.generic.LocalVariableGen translateCall(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LangCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NameBase:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NotCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Number:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void compileFilter(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RoundCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSelect(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSortIterator(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,org.apache.xalan.xsltc.compiler.Expression,java.util.Vector)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Step:void translatePredicates(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringLengthCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ValueOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.VariableBase:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.WithParam:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.RelationalExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CeilingCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CopyOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:org.apache.bcel.generic.InstructionList compile(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FloorCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ForEach:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.GenerateIdCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Key:void traverseNodeSet(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,int)",
            "org.apache.xalan.xsltc.compiler.Key:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.bcel.generic.LocalVariableGen translateCall(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LangCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NameBase:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NotCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Number:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void compileFilter(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RoundCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSelect(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSortIterator(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,org.apache.xalan.xsltc.compiler.Expression,java.util.Vector)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringLengthCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ValueOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.VariableBase:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.WithParam:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.RelationalExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.Choose:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.If:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LogicalExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NotCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ProcessingInstructionPattern:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StepPattern:void translateNoContext(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StepPattern:void translateSimpleContext(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.RoundCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CeilingCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CopyOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:org.apache.bcel.generic.InstructionList compile(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FloorCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ForEach:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.GenerateIdCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Key:void traverseNodeSet(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,int)",
            "org.apache.xalan.xsltc.compiler.Key:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.bcel.generic.LocalVariableGen translateCall(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LangCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NameBase:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NotCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Number:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void compileFilter(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RoundCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSelect(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSortIterator(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,org.apache.xalan.xsltc.compiler.Expression,java.util.Vector)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringLengthCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ValueOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.VariableBase:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.WithParam:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Sort:void translateSelect(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.Sort:org.apache.bcel.classfile.Method compileExtract(java.util.Vector,org.apache.xalan.xsltc.compiler.util.NodeSortRecordGenerator,org.apache.bcel.generic.ConstantPoolGen,java.lang.String)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Sort:void translateSortIterator(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,org.apache.xalan.xsltc.compiler.Expression,java.util.Vector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ForEach:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.StartsWithCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CeilingCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CopyOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:org.apache.bcel.generic.InstructionList compile(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FloorCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ForEach:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.GenerateIdCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Key:void traverseNodeSet(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,int)",
            "org.apache.xalan.xsltc.compiler.Key:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.bcel.generic.LocalVariableGen translateCall(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LangCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NameBase:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NotCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Number:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void compileFilter(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RoundCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSelect(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSortIterator(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,org.apache.xalan.xsltc.compiler.Expression,java.util.Vector)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringLengthCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ValueOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.VariableBase:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.WithParam:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.StepPattern:void translateSimpleContext(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.StepPattern:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.StepPattern:void translateGeneralContext(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.StepPattern:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.StringCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CeilingCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CopyOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:org.apache.bcel.generic.InstructionList compile(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FloorCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ForEach:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.GenerateIdCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Key:void traverseNodeSet(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,int)",
            "org.apache.xalan.xsltc.compiler.Key:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.bcel.generic.LocalVariableGen translateCall(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LangCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NameBase:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NotCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Number:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void compileFilter(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RoundCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSelect(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSortIterator(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,org.apache.xalan.xsltc.compiler.Expression,java.util.Vector)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringLengthCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ValueOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.VariableBase:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.WithParam:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.StringLengthCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CeilingCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CopyOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:org.apache.bcel.generic.InstructionList compile(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FloorCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ForEach:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.GenerateIdCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Key:void traverseNodeSet(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,int)",
            "org.apache.xalan.xsltc.compiler.Key:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.bcel.generic.LocalVariableGen translateCall(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LangCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NameBase:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NotCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Number:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void compileFilter(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RoundCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSelect(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSortIterator(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,org.apache.xalan.xsltc.compiler.Expression,java.util.Vector)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringLengthCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ValueOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.VariableBase:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.WithParam:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.UnaryOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CeilingCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CopyOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:org.apache.bcel.generic.InstructionList compile(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FloorCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ForEach:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.GenerateIdCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Key:void traverseNodeSet(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,int)",
            "org.apache.xalan.xsltc.compiler.Key:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.bcel.generic.LocalVariableGen translateCall(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LangCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NameBase:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NotCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Number:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void compileFilter(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RoundCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSelect(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSortIterator(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,org.apache.xalan.xsltc.compiler.Expression,java.util.Vector)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringLengthCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ValueOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.VariableBase:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.WithParam:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.UnionPathExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CeilingCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CopyOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:org.apache.bcel.generic.InstructionList compile(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FloorCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ForEach:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.GenerateIdCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Key:void traverseNodeSet(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,int)",
            "org.apache.xalan.xsltc.compiler.Key:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.bcel.generic.LocalVariableGen translateCall(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LangCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NameBase:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NotCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Number:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void compileFilter(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RoundCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSelect(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSortIterator(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,org.apache.xalan.xsltc.compiler.Expression,java.util.Vector)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringLengthCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ValueOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.VariableBase:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.WithParam:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CeilingCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CopyOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:org.apache.bcel.generic.InstructionList compile(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FloorCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ForEach:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.GenerateIdCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Key:void traverseNodeSet(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,int)",
            "org.apache.xalan.xsltc.compiler.Key:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.bcel.generic.LocalVariableGen translateCall(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LangCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NameBase:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NotCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Number:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void compileFilter(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RoundCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSelect(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSortIterator(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,org.apache.xalan.xsltc.compiler.Expression,java.util.Vector)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringLengthCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ValueOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.VariableBase:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.WithParam:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.ValueOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.VariableBase:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.Param:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Variable:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.WithParam:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.WithParam:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Stylesheet:void compileTransform(org.apache.xalan.xsltc.compiler.util.ClassGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.Stylesheet:void translate()"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Mode:void compileNamedTemplate(org.apache.xalan.xsltc.compiler.Template,org.apache.xalan.xsltc.compiler.util.ClassGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.Mode:void compileTemplates(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,org.apache.bcel.generic.InstructionHandle)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Mode:void compileTemplates(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,org.apache.bcel.generic.InstructionHandle)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.Mode:void compileApplyTemplates(org.apache.xalan.xsltc.compiler.util.ClassGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Mode:void compileTemplateCalls(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,org.apache.bcel.generic.InstructionHandle,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.Mode:void compileApplyImports(org.apache.xalan.xsltc.compiler.util.ClassGenerator,int,int)"
        ]
    },
    "org.apache.xalan.processor.XSLTAttributeDef:void setDefAttrValue(org.apache.xalan.processor.StylesheetHandler,org.apache.xalan.templates.ElemTemplateElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.ProcessorKey:void setPropertiesFromAttributes(org.apache.xalan.processor.StylesheetHandler,java.lang.String,org.xml.sax.Attributes,org.apache.xalan.templates.ElemTemplateElement)",
            "org.apache.xalan.processor.XSLTElementProcessor:org.xml.sax.Attributes setPropertiesFromAttributes(org.apache.xalan.processor.StylesheetHandler,java.lang.String,org.xml.sax.Attributes,org.apache.xalan.templates.ElemTemplateElement,boolean)"
        ]
    },
    "org.apache.xpath.NodeSet:int addNodeInDocOrder(org.w3c.dom.Node,org.apache.xpath.XPathContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.NodeSet:void addNodesInDocOrder(org.w3c.dom.NodeList,org.apache.xpath.XPathContext)",
            "org.apache.xpath.NodeSet:void addNodesInDocOrder(org.w3c.dom.traversal.NodeIterator,org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xalan.processor.ProcessorCharacters:void endElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.ProcessorCharacters:void endElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.processor.StylesheetHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xalan.processor.StylesheetHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void endElement(java.lang.String)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.TreeWalker:void endNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void endNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xalan.processor.ProcessorStylesheetElement:void endElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.ProcessorCharacters:void endElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.processor.StylesheetHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xalan.processor.ProcessorTemplateElem:void endElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.ProcessorCharacters:void endElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.processor.ProcessorExsltFunction:void endElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.processor.ProcessorGlobalParamDecl:void endElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.processor.ProcessorGlobalVariableDecl:void endElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.processor.ProcessorLRE:void endElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.processor.StylesheetHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xpath.axes.AxesWalker:void init(org.apache.xpath.compiler.Compiler,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.FilterExprWalker:void init(org.apache.xpath.compiler.Compiler,int,int)",
            "org.apache.xpath.axes.UnionPathIterator:void loadLocationPaths(org.apache.xpath.compiler.Compiler,int,int)",
            "org.apache.xpath.axes.WalkerFactory:org.apache.xpath.axes.AxesWalker loadOneWalker(org.apache.xpath.axes.WalkingIterator,org.apache.xpath.compiler.Compiler,int)",
            "org.apache.xpath.axes.WalkerFactory:org.apache.xpath.axes.AxesWalker loadWalkers(org.apache.xpath.axes.WalkingIterator,org.apache.xpath.compiler.Compiler,int,int)"
        ]
    },
    "org.apache.xpath.axes.WalkerFactory:boolean isOptimizableForDescendantIterator(org.apache.xpath.compiler.Compiler,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.WalkerFactory:org.apache.xml.dtm.DTMIterator newDTMIterator(org.apache.xpath.compiler.Compiler,int,boolean)"
        ]
    },
    "org.apache.xpath.axes.WalkerFactory:int analyze(org.apache.xpath.compiler.Compiler,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.axes.WalkerFactory:org.apache.xpath.axes.AxesWalker loadWalkers(org.apache.xpath.axes.WalkingIterator,org.apache.xpath.compiler.Compiler,int,int)",
            "org.apache.xpath.axes.WalkerFactory:org.apache.xml.dtm.DTMIterator newDTMIterator(org.apache.xpath.compiler.Compiler,int,boolean)",
            "org.apache.xpath.axes.WalkerFactory:org.apache.xpath.patterns.StepPattern loadSteps(org.apache.xpath.axes.MatchPatternIterator,org.apache.xpath.compiler.Compiler,int,int)"
        ]
    },
    "org.apache.xpath.compiler.XPathParser:int FilterExpr()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.XPathParser:void PathExpr()"
        ]
    },
    "org.apache.xpath.compiler.XPathParser:void UnaryExpr()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.XPathParser:int MultiplicativeExpr(int)"
        ]
    },
    "org.apache.xpath.compiler.XPathParser:void RelativePathPattern()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.XPathParser:void LocationPathPattern()"
        ]
    },
    "org.apache.xalan.serialize.SerializerFactory$SerializerWrapper:void setOutputFormat(java.util.Properties)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.serializer.ToHTMLStream:void setOutputFormat(java.util.Properties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.serialize.SerializerFactory$SerializerWrapper:void setOutputFormat(java.util.Properties)",
            "org.apache.xml.serializer.SerializerFactory:org.apache.xml.serializer.Serializer getSerializer(java.util.Properties)",
            "org.apache.xml.serializer.ToUnknownStream:void setOutputFormat(java.util.Properties)"
        ]
    },
    "org.apache.xml.serializer.ToUnknownStream:void setOutputFormat(java.util.Properties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.serialize.SerializerFactory$SerializerWrapper:void setOutputFormat(java.util.Properties)",
            "org.apache.xml.serializer.SerializerFactory:org.apache.xml.serializer.Serializer getSerializer(java.util.Properties)",
            "org.apache.xml.serializer.ToUnknownStream:void setOutputFormat(java.util.Properties)"
        ]
    },
    "org.apache.xalan.serialize.SerializerFactory$SerializerWrapper:void setOutputStream(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.serializer.ToUnknownStream:void setOutputStream(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.PipeDocument:void usePipe(java.util.Vector,java.lang.String,java.lang.String)",
            "org.apache.xalan.serialize.SerializerFactory$SerializerWrapper:void setOutputStream(java.io.OutputStream)",
            "org.apache.xalan.transformer.SerializerSwitcher:org.apache.xml.serializer.Serializer switchSerializerIfHTML(java.lang.String,java.lang.String,java.util.Properties,org.apache.xml.serializer.Serializer)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void createResultContentHandler(javax.xml.transform.Result)",
            "org.apache.xalan.transformer.TransformerImpl:org.apache.xml.serializer.SerializationHandler createSerializationHandler(javax.xml.transform.Result,org.apache.xalan.templates.OutputProperties)",
            "org.apache.xalan.xsltc.runtime.output.TransletOutputHandlerFactory:org.apache.xml.serializer.SerializationHandler getSerializationHandler()",
            "org.apache.xml.serializer.ToUnknownStream:void setOutputStream(java.io.OutputStream)",
            "org.apache.xml.serializer.ToUnknownStream:void initStreamOutput()"
        ]
    },
    "org.apache.xml.serializer.SerializerBase:void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.serialize.SerializerUtils:void addAttribute(org.apache.xml.serializer.SerializationHandler,int)",
            "org.apache.xalan.templates.ElemAttribute:void constructNode(java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemLiteralResult:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xml.serializer.ToStream:java.lang.String ensureAttributesNamespaceIsDeclared(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToUnknownStream:void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)"
        ]
    },
    "org.apache.xml.serializer.SerializerBase:void addAttribute(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(int,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.xsltc.dom.SAXImpl:java.lang.String shallowCopy(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void copyAttribute(int,int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xml.serializer.ToSAXHandler:void addUniqueAttribute(java.lang.String,java.lang.String,int)",
            "org.apache.xml.serializer.ToUnknownStream:void addAttribute(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xml.serializer.SerializerBase:void addXSLAttribute(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.serializer.SerializerBase:void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xml.serializer.ToStream:boolean startPrefixMapping(java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.serialize.SerializerUtils:void processNSDecls(org.apache.xml.serializer.SerializationHandler,int,int,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.serialize.SerializerUtils:void ensureNamespaceDeclDeclared(org.apache.xml.serializer.SerializationHandler,org.apache.xml.dtm.DTM,int)",
            "org.apache.xalan.templates.ElemElement:void constructNode(java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemTemplateElement:void executeNSDecls(org.apache.xalan.transformer.TransformerImpl,java.lang.String)",
            "org.apache.xml.serializer.ToHTMLStream:void namespaceAfterStartElement(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToStream:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToStream:java.lang.String ensureAttributesNamespaceIsDeclared(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToUnknownStream:boolean startPrefixMapping(java.lang.String,java.lang.String,boolean)",
            "org.apache.xml.serializer.ToUnknownStream:void emitFirstTag()",
            "org.apache.xml.serializer.ToXMLStream:void namespaceAfterStartElement(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xml.serializer.ToStream:void ensurePrefixIsDeclared(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.ToStream:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xml.serializer.ToHTMLStream:void characters(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.XSLProcessorContext:void outputToResultTree(org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.lib.sql.DTMDocument:void dispatchNodeData(org.w3c.dom.Node,org.xml.sax.ContentHandler,int)",
            "org.apache.xalan.templates.ElemCopyOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemNumber:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemTextLiteral:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.TransformerHandlerImpl:void characters(char[],int,int)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void characters(char[],int,int)",
            "org.apache.xalan.transformer.TransformerImpl:void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement,boolean)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:void copy(java.lang.Object,org.apache.xml.serializer.SerializationHandler,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void characters(char[],int,int)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:void dispatchNodeData(org.w3c.dom.Node,org.xml.sax.ContentHandler,int)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void characters(char[],int,int)",
            "org.apache.xml.serializer.SerializerBase:void characters(org.w3c.dom.Node)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void characters(char[],int,int)",
            "org.apache.xml.serializer.ToStream:void characters(java.lang.String)",
            "org.apache.xml.serializer.ToStream:void ignorableWhitespace(char[],int,int)",
            "org.apache.xml.serializer.ToTextSAXHandler:void characters(java.lang.String)",
            "org.apache.xml.serializer.ToTextSAXHandler:void characters(char[],int,int)",
            "org.apache.xml.serializer.ToUnknownStream:void characters(char[],int,int)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void characters(char[],int,int)",
            "org.apache.xml.serializer.TreeWalker:void dispatachChars(org.w3c.dom.Node)",
            "org.apache.xml.utils.FastStringBuffer:void sendSAXcharacters(org.xml.sax.ContentHandler,int,int)",
            "org.apache.xml.utils.FastStringBuffer:int sendNormalizedSAXcharacters(char[],int,int,org.xml.sax.ContentHandler,int)",
            "org.apache.xml.utils.TreeWalker:void dispatachChars(org.w3c.dom.Node)",
            "org.apache.xpath.objects.XString:void dispatchCharactersEvents(org.xml.sax.ContentHandler)",
            "org.apache.xpath.objects.XStringForChars:void dispatchCharactersEvents(org.xml.sax.ContentHandler)"
        ]
    },
    "org.apache.xml.serializer.ToStream:void characters(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.SimpleResultTreeImpl:void characters(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.runtime.AbstractTranslet:void characters(java.lang.String,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.w3c.dom.Node)",
            "org.apache.xml.serializer.ToStream:void startEntity(java.lang.String)"
        ]
    },
    "org.apache.xml.serializer.ToStream:void ignorableWhitespace(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void ignorableWhitespace(char[],int,int)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void ignorableWhitespace(char[],int,int)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void ignorableWhitespace(char[],int,int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void ignorableWhitespace(char[],int,int)",
            "org.apache.xml.serializer.ToUnknownStream:void ignorableWhitespace(char[],int,int)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void ignorableWhitespace(char[],int,int)"
        ]
    },
    "org.apache.xml.serializer.ToHTMLStream:void comment(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void comment(char[],int,int)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void comment(char[],int,int)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void comment(char[],int,int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void comment(char[],int,int)",
            "org.apache.xml.serializer.SerializerBase:void comment(java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void comment(char[],int,int)",
            "org.apache.xml.serializer.ToSAXHandler:void comment(java.lang.String)",
            "org.apache.xml.serializer.ToUnknownStream:void comment(char[],int,int)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void comment(char[],int,int)",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.FastStringBuffer:void sendSAXComment(org.xml.sax.ext.LexicalHandler,int,int)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xpath.objects.XString:void dispatchAsComment(org.xml.sax.ext.LexicalHandler)",
            "org.apache.xpath.objects.XStringForChars:void dispatchAsComment(org.xml.sax.ext.LexicalHandler)"
        ]
    },
    "org.apache.xml.serializer.ToHTMLStream:void endDocument()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.Redirect:void write(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)",
            "org.apache.xalan.lib.Redirect:void close(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)",
            "org.apache.xalan.transformer.TransformerHandlerImpl:void endDocument()",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void endDocument()",
            "org.apache.xalan.transformer.TransformerImpl:void transform(javax.xml.transform.Source,boolean)",
            "org.apache.xalan.transformer.TransformerImpl:void transformNode(int)",
            "org.apache.xalan.transformer.TransformerImpl:int transformToRTF(org.apache.xalan.templates.ElemTemplateElement,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.transformer.TransformerImpl:java.lang.String transformToString(org.apache.xalan.templates.ElemTemplateElement)",
            "org.apache.xalan.xsltc.runtime.AbstractTranslet:void closeOutputHandler(org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse()",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse()",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void endDocument()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void endDocument()",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void endDocument()",
            "org.apache.xml.serializer.ToTextSAXHandler:void endDocument()",
            "org.apache.xml.serializer.ToUnknownStream:void endDocument()",
            "org.apache.xml.serializer.ToXMLSAXHandler:void endDocument()",
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serializer.ToHTMLStream:void processingInstruction(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemPI:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemTextLiteral:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemValueOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.ClonerToResultTree:void cloneToResultTree(int,int,org.apache.xml.dtm.DTM,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.transformer.TransformerHandlerImpl:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.dom.SAXImpl:void copyPI(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToUnknownStream:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serializer.ToXMLStream:void endDocument()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.Redirect:void write(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)",
            "org.apache.xalan.lib.Redirect:void close(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)",
            "org.apache.xalan.transformer.TransformerHandlerImpl:void endDocument()",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void endDocument()",
            "org.apache.xalan.transformer.TransformerImpl:void transform(javax.xml.transform.Source,boolean)",
            "org.apache.xalan.transformer.TransformerImpl:void transformNode(int)",
            "org.apache.xalan.transformer.TransformerImpl:int transformToRTF(org.apache.xalan.templates.ElemTemplateElement,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.transformer.TransformerImpl:java.lang.String transformToString(org.apache.xalan.templates.ElemTemplateElement)",
            "org.apache.xalan.xsltc.runtime.AbstractTranslet:void closeOutputHandler(org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse()",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse()",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void endDocument()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void endDocument()",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void endDocument()",
            "org.apache.xml.serializer.ToTextSAXHandler:void endDocument()",
            "org.apache.xml.serializer.ToUnknownStream:void endDocument()",
            "org.apache.xml.serializer.ToXMLSAXHandler:void endDocument()",
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)"
        ]
    },
    "org.apache.xpath.CachedXPathAPI:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.transformer.TransformerImpl:void <init>(org.apache.xalan.templates.StylesheetRoot)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.StylesheetRoot:javax.xml.transform.Transformer newTransformer()"
        ]
    },
    "org.apache.xalan.xsltc.compiler.LiteralAttribute:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xml.serializer.ToHTMLStream:void processAttribute(java.io.Writer,java.lang.String,java.lang.String,org.apache.xml.serializer.ElemDesc)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.ToHTMLStream:void processAttributes(java.io.Writer,int)"
        ]
    },
    "org.apache.xml.serializer.EncodingInfo:boolean isInEncoding(char)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.ToStream:boolean escapingNotNeeded(char)",
            "org.apache.xml.serializer.ToTextStream:void writeNormalizedChars(char[],int,int,boolean)"
        ]
    },
    "org.apache.xml.serializer.EncodingInfo:boolean isInEncoding(char,char)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.ToStream:int writeUTF16Surrogate(char,char[],int,int)"
        ]
    },
    "org.apache.xalan.templates.OutputProperties:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.OutputProperties:void <init>()",
            "org.apache.xalan.templates.StylesheetRoot:void recompose()",
            "org.apache.xalan.transformer.SerializerSwitcher:void switchSerializerIfHTML(org.apache.xalan.transformer.TransformerImpl,java.lang.String,java.lang.String)",
            "org.apache.xalan.transformer.SerializerSwitcher:org.apache.xml.serializer.Serializer switchSerializerIfHTML(java.lang.String,java.lang.String,java.util.Properties,org.apache.xml.serializer.Serializer)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void <init>(boolean)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void reset()",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void setOutputProperties(java.util.Properties)",
            "org.apache.xalan.transformer.TransformerImpl:void <init>(org.apache.xalan.templates.StylesheetRoot)",
            "org.apache.xalan.transformer.TransformerImpl:void setOutputProperties(java.util.Properties)"
        ]
    },
    "org.apache.xalan.templates.OutputProperties:void setMethodDefaults(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.OutputProperties:void setProperty(java.lang.String,java.lang.String)",
            "org.apache.xalan.templates.OutputProperties:void copyFrom(java.util.Properties,boolean)"
        ]
    },
    "org.apache.xalan.templates.OutputProperties:java.util.Properties getDefaultMethodProperties(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.xsltc.trax.TransformerImpl:void setDefaults(java.util.Properties,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.trax.TransformerImpl:java.util.Properties createOutputProperties(java.util.Properties)"
        ]
    },
    "org.apache.xml.serializer.ToStream:void processAttributes(java.io.Writer,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.ToStream:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToStream:void closeStartTag()",
            "org.apache.xml.serializer.ToStream:void firePseudoAttributes()"
        ]
    },
    "org.apache.xml.serializer.ToHTMLStream:void cdata(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.ToStream:void characters(char[],int,int)"
        ]
    },
    "org.apache.xml.serializer.ToStream:void cdata(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.ToHTMLStream:void cdata(char[],int,int)",
            "org.apache.xml.serializer.ToStream:void characters(char[],int,int)"
        ]
    },
    "org.apache.xml.serializer.ToStream:int processDirty(char[],int,int,char,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.ToStream:void characters(char[],int,int)"
        ]
    },
    "org.apache.xml.serializer.ToStream:void writeAttrString(java.io.Writer,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.ToStream:void processAttributes(java.io.Writer,int)",
            "org.apache.xml.serializer.ToXMLStream:void addUniqueAttribute(java.lang.String,java.lang.String,int)"
        ]
    },
    "org.apache.xml.serializer.ToTextStream:void characters(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.XSLProcessorContext:void outputToResultTree(org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.lib.sql.DTMDocument:void dispatchNodeData(org.w3c.dom.Node,org.xml.sax.ContentHandler,int)",
            "org.apache.xalan.templates.ElemCopyOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemNumber:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemTextLiteral:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.TransformerHandlerImpl:void characters(char[],int,int)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void characters(char[],int,int)",
            "org.apache.xalan.transformer.TransformerImpl:void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement,boolean)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:void copy(java.lang.Object,org.apache.xml.serializer.SerializationHandler,int,org.apache.xalan.xsltc.DOM)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void characters(char[],int,int)",
            "org.apache.xml.dtm.ref.dom2dtm.DOM2DTM:void dispatchNodeData(org.w3c.dom.Node,org.xml.sax.ContentHandler,int)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM:void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void characters(char[],int,int)",
            "org.apache.xml.serializer.SerializerBase:void characters(org.w3c.dom.Node)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void characters(char[],int,int)",
            "org.apache.xml.serializer.ToStream:void characters(java.lang.String)",
            "org.apache.xml.serializer.ToStream:void ignorableWhitespace(char[],int,int)",
            "org.apache.xml.serializer.ToTextSAXHandler:void characters(java.lang.String)",
            "org.apache.xml.serializer.ToTextSAXHandler:void characters(char[],int,int)",
            "org.apache.xml.serializer.ToTextStream:void characters(java.lang.String)",
            "org.apache.xml.serializer.ToUnknownStream:void characters(char[],int,int)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void characters(char[],int,int)",
            "org.apache.xml.serializer.TreeWalker:void dispatachChars(org.w3c.dom.Node)",
            "org.apache.xml.utils.FastStringBuffer:void sendSAXcharacters(org.xml.sax.ContentHandler,int,int)",
            "org.apache.xml.utils.FastStringBuffer:int sendNormalizedSAXcharacters(char[],int,int,org.xml.sax.ContentHandler,int)",
            "org.apache.xml.utils.TreeWalker:void dispatachChars(org.w3c.dom.Node)",
            "org.apache.xpath.objects.XString:void dispatchCharactersEvents(org.xml.sax.ContentHandler)",
            "org.apache.xpath.objects.XStringForChars:void dispatchCharactersEvents(org.xml.sax.ContentHandler)"
        ]
    },
    "org.apache.xml.serializer.ToTextStream:void charactersRaw(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.ToStream:void cdata(char[],int,int)",
            "org.apache.xml.serializer.ToStream:void characters(char[],int,int)"
        ]
    },
    "org.apache.xml.serializer.ToTextStream:void cdata(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.ToStream:void characters(char[],int,int)"
        ]
    },
    "org.apache.xml.serializer.ToTextStream:void ignorableWhitespace(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void ignorableWhitespace(char[],int,int)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void ignorableWhitespace(char[],int,int)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void ignorableWhitespace(char[],int,int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void ignorableWhitespace(char[],int,int)",
            "org.apache.xml.serializer.ToUnknownStream:void ignorableWhitespace(char[],int,int)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void ignorableWhitespace(char[],int,int)"
        ]
    },
    "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:java.lang.String getLocalName(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.serialize.SerializerUtils:void addAttribute(org.apache.xml.serializer.SerializationHandler,int)",
            "org.apache.xalan.templates.ElemCopy:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.TemplateList:org.apache.xalan.templates.TemplateSubPatternAssociation getHead(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.templates.TemplateList:org.apache.xalan.templates.ElemTemplate getTemplateFast(org.apache.xpath.XPathContext,int,int,org.apache.xml.utils.QName,int,boolean,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.transformer.ClonerToResultTree:void cloneToResultTree(int,int,org.apache.xml.dtm.DTM,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.transformer.TreeWalker2Result:void startNode(int)",
            "org.apache.xml.dtm.ref.DTMNamedNodeMap:org.w3c.dom.Node getNamedItemNS(java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getLocalName()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)",
            "org.apache.xpath.functions.FuncLocalPart:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.patterns.NodeTest:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.patterns.NodeTest:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM,int)"
        ]
    },
    "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:java.lang.String getNodeNameX(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.serialize.SerializerUtils:void processNSDecls(org.apache.xml.serializer.SerializationHandler,int,int,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.serialize.SerializerUtils:boolean isDefinedNSDecl(org.apache.xml.serializer.SerializationHandler,int,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.serialize.SerializerUtils:void ensureNamespaceDeclDeclared(org.apache.xml.serializer.SerializationHandler,org.apache.xml.dtm.DTM,int)",
            "org.apache.xalan.transformer.ClonerToResultTree:void cloneToResultTree(int,int,org.apache.xml.dtm.DTM,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.xsltc.dom.DOMAdapter:java.lang.String getNodeNameX(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM:java.lang.String getNodeNameX(int)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)",
            "org.apache.xpath.functions.FuncQname:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xalan.xsltc.dom.DOMAdapter:java.lang.String getNodeNameX(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMAdapter:java.lang.String getNodeNameX(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM:java.lang.String getNodeNameX(int)"
        ]
    },
    "org.apache.xalan.xsltc.dom.MultiDOM:java.lang.String getNodeNameX(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.DOMAdapter:java.lang.String getNodeNameX(int)",
            "org.apache.xalan.xsltc.dom.MultiDOM:java.lang.String getNodeNameX(int)"
        ]
    },
    "org.apache.xalan.xsltc.dom.AdaptiveResultTreeImpl:java.lang.String getNodeValue(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.serialize.SerializerUtils:void addAttribute(org.apache.xml.serializer.SerializationHandler,int)",
            "org.apache.xalan.serialize.SerializerUtils:void processNSDecls(org.apache.xml.serializer.SerializationHandler,int,int,org.apache.xml.dtm.DTM)",
            "org.apache.xalan.serialize.SerializerUtils:void ensureNamespaceDeclDeclared(org.apache.xml.serializer.SerializationHandler,org.apache.xml.dtm.DTM,int)",
            "org.apache.xalan.transformer.ClonerToResultTree:void cloneToResultTree(int,int,org.apache.xml.dtm.DTM,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getNodeValue()",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getData()",
            "org.apache.xml.dtm.ref.DTMNodeProxy:int getLength()",
            "org.apache.xml.dtm.ref.DTMNodeProxy:java.lang.String getValue()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xpath.functions.FuncLang:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xalan.extensions.MethodResolver:java.lang.String errArgs(java.lang.Object[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.MethodResolver:java.lang.String errString(java.lang.String,java.lang.String,java.lang.Class,java.lang.String,int,java.lang.Object[])"
        ]
    },
    "org.apache.xpath.objects.XObject:double num()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.MethodResolver:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.xalan.lib.ExsltDynamic:double max(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList,java.lang.String)",
            "org.apache.xalan.lib.ExsltDynamic:double min(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList,java.lang.String)",
            "org.apache.xalan.lib.ExsltDynamic:double sum(org.apache.xalan.extensions.ExpressionContext,org.w3c.dom.NodeList,java.lang.String)",
            "org.apache.xalan.templates.ElemNumber:java.lang.String getCountString(org.apache.xalan.transformer.TransformerImpl,int)",
            "org.apache.xalan.templates.FuncFormatNumb:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.transformer.NodeSorter$NodeCompareElem:void <init>(org.apache.xalan.transformer.NodeSorter,int)",
            "org.apache.xalan.transformer.NodeSorter:int compare(org.apache.xalan.transformer.NodeSorter$NodeCompareElem,org.apache.xalan.transformer.NodeSorter$NodeCompareElem,int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean executePredicates(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.domapi.XPathResultImpl:double getNumberValue()",
            "org.apache.xpath.functions.FuncCeiling:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncFloor:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncRound:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncSubstring:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FunctionDef1Arg:double getArg0AsNumber(org.apache.xpath.XPathContext)",
            "org.apache.xpath.jaxp.XPathExpressionImpl:java.lang.Object getResultAsType(org.apache.xpath.objects.XObject,javax.xml.namespace.QName)",
            "org.apache.xpath.jaxp.XPathImpl:java.lang.Object getResultAsType(org.apache.xpath.objects.XObject,javax.xml.namespace.QName)",
            "org.apache.xpath.objects.XNodeSet:boolean compare(org.apache.xpath.objects.XObject,org.apache.xpath.objects.Comparator)",
            "org.apache.xpath.objects.XNumber:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XObject:double numWithSideEffects()",
            "org.apache.xpath.objects.XObject:java.lang.Object castToType(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XObject:boolean lessThan(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XObject:boolean lessThanOrEqual(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XObject:boolean greaterThan(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XObject:boolean greaterThanOrEqual(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XRTreeFrag:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XString:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.operations.Div:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject,org.apache.xpath.objects.XObject)",
            "org.apache.xpath.operations.Minus:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject,org.apache.xpath.objects.XObject)",
            "org.apache.xpath.operations.Mod:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject,org.apache.xpath.objects.XObject)",
            "org.apache.xpath.operations.Mult:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject,org.apache.xpath.objects.XObject)",
            "org.apache.xpath.operations.Neg:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.operations.Number:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.operations.Plus:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject,org.apache.xpath.objects.XObject)",
            "org.apache.xpath.operations.Quo:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject,org.apache.xpath.objects.XObject)",
            "org.apache.xpath.patterns.StepPattern:boolean executePredicates(org.apache.xpath.XPathContext,org.apache.xml.dtm.DTM,int)",
            "org.apache.xpath.patterns.StepPattern:double getMatchScore(org.apache.xpath.XPathContext,int)",
            "org.apache.xpath.patterns.UnionPattern:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:double num(org.apache.xpath.XPathContext)",
            "org.apache.xpath.XPath:double getMatchScore(org.apache.xpath.XPathContext,int)"
        ]
    },
    "org.apache.xpath.objects.XObject:boolean bool()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.MethodResolver:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.xalan.templates.ElemChoose:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemIf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xpath.axes.PredicatedNodeTest:boolean executePredicates(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.domapi.XPathResultImpl:boolean getBooleanValue()",
            "org.apache.xpath.functions.FuncBoolean:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.functions.FuncNot:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.jaxp.XPathExpressionImpl:java.lang.Object getResultAsType(org.apache.xpath.objects.XObject,javax.xml.namespace.QName)",
            "org.apache.xpath.jaxp.XPathImpl:java.lang.Object getResultAsType(org.apache.xpath.objects.XObject,javax.xml.namespace.QName)",
            "org.apache.xpath.objects.XBoolean:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XBooleanStatic:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XNumber:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XObject:boolean boolWithSideEffects()",
            "org.apache.xpath.objects.XObject:java.lang.Object castToType(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XRTreeFrag:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.objects.XString:boolean equals(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.operations.And:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.operations.Bool:org.apache.xpath.objects.XObject operate(org.apache.xpath.objects.XObject)",
            "org.apache.xpath.operations.Or:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:boolean bool(org.apache.xpath.XPathContext)"
        ]
    },
    "org.apache.xpath.objects.XObject:org.apache.xml.dtm.DTMIterator iter()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.MethodResolver:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.xalan.extensions.XSLProcessorContext:void outputToResultTree(org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.templates.ElemCopyOf:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.FuncDocument:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.FuncKey:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xalan.trace.PrintTraceListener:void selected(org.apache.xalan.trace.SelectionEvent)",
            "org.apache.xpath.functions.FuncId:org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)",
            "org.apache.xpath.objects.XObject:java.lang.Object castToType(int,org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:int asNode(org.apache.xpath.XPathContext)",
            "org.apache.xpath.Expression:org.apache.xml.dtm.DTMIterator asIterator(org.apache.xpath.XPathContext,int)"
        ]
    },
    "org.apache.xpath.objects.XObject:org.w3c.dom.traversal.NodeIterator nodeset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.MethodResolver:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.xpath.domapi.XPathResultImpl:void <init>(short,org.apache.xpath.objects.XObject,org.w3c.dom.Node,org.apache.xpath.XPath)",
            "org.apache.xpath.domapi.XPathResultImpl:org.w3c.dom.Node getSingleNodeValue()",
            "org.apache.xpath.jaxp.XPathExpressionImpl:java.lang.Object getResultAsType(org.apache.xpath.objects.XObject,javax.xml.namespace.QName)",
            "org.apache.xpath.jaxp.XPathImpl:java.lang.Object getResultAsType(org.apache.xpath.objects.XObject,javax.xml.namespace.QName)",
            "org.apache.xpath.CachedXPathAPI:org.w3c.dom.traversal.NodeIterator selectNodeIterator(org.w3c.dom.Node,java.lang.String,org.w3c.dom.Node)",
            "org.apache.xpath.XPathAPI:org.w3c.dom.traversal.NodeIterator selectNodeIterator(org.w3c.dom.Node,java.lang.String,org.w3c.dom.Node)"
        ]
    },
    "org.apache.xpath.objects.XObject:org.w3c.dom.NodeList nodelist()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.MethodResolver:java.lang.Object convert(java.lang.Object,java.lang.Class)",
            "org.apache.xpath.domapi.XPathResultImpl:void <init>(short,org.apache.xpath.objects.XObject,org.w3c.dom.Node,org.apache.xpath.XPath)",
            "org.apache.xpath.jaxp.XPathExpressionImpl:java.lang.Object getResultAsType(org.apache.xpath.objects.XObject,javax.xml.namespace.QName)",
            "org.apache.xpath.jaxp.XPathImpl:java.lang.Object getResultAsType(org.apache.xpath.objects.XObject,javax.xml.namespace.QName)",
            "org.apache.xpath.CachedXPathAPI:org.w3c.dom.NodeList selectNodeList(org.w3c.dom.Node,java.lang.String,org.w3c.dom.Node)",
            "org.apache.xpath.XPathAPI:org.w3c.dom.NodeList selectNodeList(org.w3c.dom.Node,java.lang.String,org.w3c.dom.Node)"
        ]
    },
    "org.apache.xpath.objects.XObject:org.apache.xpath.NodeSetDTM mutableNodeset()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.transformer.XalanTransformState:void resetState(javax.xml.transform.Transformer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.ToSAXHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToSAXHandler:void startElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToSAXHandler:void startElement(java.lang.String)"
        ]
    },
    "org.apache.xpath.axes.OneStepIterator:org.apache.xml.dtm.DTMIterator cloneWithReset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.trace.PrintTraceListener:void selected(org.apache.xalan.trace.SelectionEvent)",
            "org.apache.xalan.transformer.TransformerImpl:org.apache.xml.dtm.DTMIterator getContextNodeList()",
            "org.apache.xml.dtm.ref.DTMNodeList:void <init>(org.apache.xml.dtm.DTMIterator)",
            "org.apache.xpath.axes.OneStepIterator:int getLength()",
            "org.apache.xpath.functions.FuncPosition:int getPositionInContextNodeList(org.apache.xpath.XPathContext)",
            "org.apache.xpath.XPathContext:org.apache.xml.dtm.DTMIterator getContextNodes()"
        ]
    },
    "org.apache.xalan.templates.ElemApplyTemplates:void compose(org.apache.xalan.templates.StylesheetRoot)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.StylesheetRoot:void composeTemplates(org.apache.xalan.templates.ElemTemplateElement)"
        ]
    },
    "org.apache.xalan.templates.StylesheetRoot:void recompose()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.StylesheetHandler:void endDocument()"
        ]
    },
    "org.apache.xpath.axes.WalkingIteratorSorted:void fixupVariables(java.util.Vector,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemForEach:void compose(org.apache.xalan.templates.StylesheetRoot)",
            "org.apache.xpath.axes.FilterExprIterator:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.FilterExprIteratorSimple:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.FilterExprWalker:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.PredicatedNodeTest:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.UnionChildIterator:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.axes.UnionPathIterator:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.FuncExtFunction:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.Function2Args:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.Function3Args:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.FunctionMultiArgs:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.functions.FunctionOneArg:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.objects.XRTreeFragSelectWrapper:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.operations.Operation:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.operations.UnaryOperation:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.patterns.FunctionPattern:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.patterns.StepPattern:void fixupVariables(java.util.Vector,int)",
            "org.apache.xpath.XPath:void fixupVariables(java.util.Vector,int)"
        ]
    },
    "org.apache.xalan.templates.AVT:void fixupVariables(java.util.Vector,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemElement:void compose(org.apache.xalan.templates.StylesheetRoot)",
            "org.apache.xalan.templates.ElemLiteralResult:void compose(org.apache.xalan.templates.StylesheetRoot)",
            "org.apache.xalan.templates.ElemNumber:void compose(org.apache.xalan.templates.StylesheetRoot)",
            "org.apache.xalan.templates.ElemPI:void compose(org.apache.xalan.templates.StylesheetRoot)",
            "org.apache.xalan.templates.ElemSort:void compose(org.apache.xalan.templates.StylesheetRoot)"
        ]
    },
    "org.apache.xalan.templates.ElemExsltFunction:void compose(org.apache.xalan.templates.StylesheetRoot)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.StylesheetRoot:void composeTemplates(org.apache.xalan.templates.ElemTemplateElement)"
        ]
    },
    "org.apache.xalan.templates.ElemParam:void compose(org.apache.xalan.templates.StylesheetRoot)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.StylesheetRoot:void composeTemplates(org.apache.xalan.templates.ElemTemplateElement)"
        ]
    },
    "org.apache.xpath.axes.WalkingIterator:java.lang.Object clone()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformSnapshotImpl:void <init>(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.TransformSnapshotImpl:void apply(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xml.dtm.ref.DTMNodeIterator:void <init>(org.apache.xml.dtm.DTMIterator)",
            "org.apache.xpath.axes.IteratorPool:org.apache.xml.dtm.DTMIterator getInstanceOrThrow()",
            "org.apache.xpath.axes.IteratorPool:org.apache.xml.dtm.DTMIterator getInstance()",
            "org.apache.xpath.axes.LocPathIterator:int getLength()",
            "org.apache.xpath.axes.NodeSequence:java.lang.Object clone()",
            "org.apache.xpath.axes.UnionPathIterator:java.lang.Object clone()",
            "org.apache.xpath.VariableStack:java.lang.Object clone()"
        ]
    },
    "org.apache.xalan.processor.ProcessorLRE:org.apache.xalan.templates.Stylesheet getStylesheetRoot(org.apache.xalan.processor.StylesheetHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.ProcessorLRE:void startElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xalan.processor.ProcessorStylesheetElement:org.apache.xalan.templates.Stylesheet getStylesheetRoot(org.apache.xalan.processor.StylesheetHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.ProcessorStylesheetElement:void startElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.UnsupportedElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.AttributeSet:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Stylesheet:void translate()",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.TopLevelElement:org.apache.bcel.generic.InstructionList compile(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Sort:void translateSortType(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.Sort:void compileSortRecordFactory(java.util.Vector,org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Sort:void translateSortOrder(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.Sort:void compileSortRecordFactory(java.util.Vector,org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Sort:void translateCaseOrder(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.Sort:void compileSortRecordFactory(java.util.Vector,org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.FunctionCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.Choose:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.If:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LogicalExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NotCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ProcessingInstructionPattern:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StepPattern:void translateNoContext(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StepPattern:void translateSimpleContext(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.LogicalExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.Choose:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.If:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LogicalExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LogicalExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NotCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ProcessingInstructionPattern:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StepPattern:void translateNoContext(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StepPattern:void translateSimpleContext(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.NotCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.Choose:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.If:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LogicalExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NotCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ProcessingInstructionPattern:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StepPattern:void translateNoContext(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StepPattern:void translateSimpleContext(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.ProcessingInstructionPattern:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.AbsolutePathPattern:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.AlternativePattern:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.AncestorPattern:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CeilingCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CopyOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:org.apache.bcel.generic.InstructionList compile(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FloorCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ForEach:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.GenerateIdCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Key:void traverseNodeSet(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,int)",
            "org.apache.xalan.xsltc.compiler.Key:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.bcel.generic.LocalVariableGen translateCall(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LangCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NameBase:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NotCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Number:void compilePatterns(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Number:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ParentPattern:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void compileFilter(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RoundCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSelect(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSortIterator(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,org.apache.xalan.xsltc.compiler.Expression,java.util.Vector)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringLengthCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ValueOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.VariableBase:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.WithParam:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.StepPattern:void translateNoContext(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.StepPattern:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.ContainsCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CeilingCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CopyOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:org.apache.bcel.generic.InstructionList compile(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FloorCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ForEach:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.GenerateIdCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Key:void traverseNodeSet(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,int)",
            "org.apache.xalan.xsltc.compiler.Key:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.bcel.generic.LocalVariableGen translateCall(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LangCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NameBase:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NotCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Number:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void compileFilter(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RoundCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSelect(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSortIterator(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,org.apache.xalan.xsltc.compiler.Expression,java.util.Vector)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringLengthCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ValueOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.VariableBase:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.WithParam:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.TestSeq:org.apache.bcel.generic.InstructionHandle compile(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,org.apache.bcel.generic.InstructionHandle)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.Mode:org.apache.bcel.generic.InstructionList compileNamespaces(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,boolean[],boolean[],boolean,org.apache.bcel.generic.InstructionHandle)",
            "org.apache.xalan.xsltc.compiler.Mode:void compileApplyTemplates(org.apache.xalan.xsltc.compiler.util.ClassGenerator)",
            "org.apache.xalan.xsltc.compiler.Mode:void compileApplyImports(org.apache.xalan.xsltc.compiler.util.ClassGenerator,int,int)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.FilterExpr:void translatePredicates(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.FilterExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:void translatePredicates(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Stylesheet:java.lang.String compileBuildKeys(org.apache.xalan.xsltc.compiler.util.ClassGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.Stylesheet:void compileTransform(org.apache.xalan.xsltc.compiler.util.ClassGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.KeyCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CeilingCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CopyOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:org.apache.bcel.generic.InstructionList compile(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FloorCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ForEach:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.GenerateIdCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Key:void traverseNodeSet(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,int)",
            "org.apache.xalan.xsltc.compiler.Key:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.bcel.generic.LocalVariableGen translateCall(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LangCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NameBase:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NotCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Number:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void compileFilter(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RoundCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSelect(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSortIterator(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,org.apache.xalan.xsltc.compiler.Expression,java.util.Vector)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringLengthCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ValueOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.VariableBase:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.WithParam:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.LocalNameCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CeilingCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CopyOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:org.apache.bcel.generic.InstructionList compile(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FloorCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ForEach:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.GenerateIdCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Key:void traverseNodeSet(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,int)",
            "org.apache.xalan.xsltc.compiler.Key:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.bcel.generic.LocalVariableGen translateCall(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LangCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NameBase:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NotCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Number:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void compileFilter(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RoundCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSelect(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSortIterator(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,org.apache.xalan.xsltc.compiler.Expression,java.util.Vector)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringLengthCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ValueOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.VariableBase:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.WithParam:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.NameCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CeilingCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CopyOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:org.apache.bcel.generic.InstructionList compile(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FloorCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ForEach:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.GenerateIdCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Key:void traverseNodeSet(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,int)",
            "org.apache.xalan.xsltc.compiler.Key:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.bcel.generic.LocalVariableGen translateCall(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LangCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NameBase:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NotCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Number:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void compileFilter(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RoundCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSelect(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSortIterator(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,org.apache.xalan.xsltc.compiler.Expression,java.util.Vector)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringLengthCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ValueOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.VariableBase:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.WithParam:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.NamespaceUriCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CeilingCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CopyOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:org.apache.bcel.generic.InstructionList compile(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FloorCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ForEach:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.GenerateIdCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Key:void traverseNodeSet(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,int)",
            "org.apache.xalan.xsltc.compiler.Key:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.bcel.generic.LocalVariableGen translateCall(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LangCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NameBase:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NotCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Number:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void compileFilter(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RoundCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSelect(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSortIterator(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,org.apache.xalan.xsltc.compiler.Expression,java.util.Vector)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringLengthCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ValueOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.VariableBase:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.WithParam:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Predicate:void translateFilter(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.Predicate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Step:void translatePredicates(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Sort:org.apache.bcel.classfile.Method compileExtract(java.util.Vector,org.apache.xalan.xsltc.compiler.util.NodeSortRecordGenerator,org.apache.bcel.generic.ConstantPoolGen,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.Sort:java.lang.String compileSortRecord(java.util.Vector,org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.StepPattern:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.AbsolutePathPattern:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.AlternativePattern:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.AncestorPattern:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CeilingCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CopyOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:org.apache.bcel.generic.InstructionList compile(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FloorCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ForEach:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.GenerateIdCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Key:void traverseNodeSet(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,int)",
            "org.apache.xalan.xsltc.compiler.Key:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.bcel.generic.LocalVariableGen translateCall(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LangCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NameBase:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NotCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Number:void compilePatterns(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Number:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ParentPattern:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void compileFilter(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RoundCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSelect(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSortIterator(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,org.apache.xalan.xsltc.compiler.Expression,java.util.Vector)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringLengthCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ValueOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.VariableBase:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.WithParam:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Param:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Stylesheet:java.lang.String compileTopLevel(org.apache.xalan.xsltc.compiler.util.ClassGenerator,java.util.Enumeration)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.TopLevelElement:org.apache.bcel.generic.InstructionList compile(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Variable:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Stylesheet:java.lang.String compileTopLevel(org.apache.xalan.xsltc.compiler.util.ClassGenerator,java.util.Enumeration)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.TopLevelElement:org.apache.bcel.generic.InstructionList compile(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.WithParam:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Stylesheet:void translate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.Stylesheet:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XSLTC:boolean compile(org.xml.sax.InputSource,java.lang.String)",
            "org.apache.xalan.xsltc.trax.TemplatesHandlerImpl:void endDocument()"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Mode:void compileApplyTemplates(org.apache.xalan.xsltc.compiler.util.ClassGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.Stylesheet:void compileModes(org.apache.xalan.xsltc.compiler.util.ClassGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Mode:void compileApplyImports(org.apache.xalan.xsltc.compiler.util.ClassGenerator,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.Mode:void compileApplyTemplates(org.apache.xalan.xsltc.compiler.util.ClassGenerator)"
        ]
    },
    "org.apache.xalan.processor.ProcessorGlobalParamDecl:void endElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.ProcessorCharacters:void endElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.processor.StylesheetHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xalan.processor.ProcessorGlobalVariableDecl:void endElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.ProcessorCharacters:void endElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.processor.StylesheetHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xalan.processor.ProcessorLRE:void endElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.ProcessorCharacters:void endElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.processor.StylesheetHandler:void endElement(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xpath.compiler.XPathParser:int MultiplicativeExpr(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.XPathParser:int AdditiveExpr(int)",
            "org.apache.xpath.compiler.XPathParser:int MultiplicativeExpr(int)"
        ]
    },
    "org.apache.xml.serializer.ToSAXHandler:void addUniqueAttribute(java.lang.String,java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.ToUnknownStream:void addUniqueAttribute(java.lang.String,java.lang.String,int)"
        ]
    },
    "org.apache.xml.serializer.ToHTMLStream:void namespaceAfterStartElement(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(int,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.xsltc.dom.SAXImpl:java.lang.String shallowCopy(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String startXslElement(java.lang.String,java.lang.String,org.apache.xml.serializer.SerializationHandler,org.apache.xalan.xsltc.DOM,int)",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:java.lang.String copyElement(int,int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void copyNS(int,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void copyAttribute(int,int,org.apache.xml.serializer.SerializationHandler)"
        ]
    },
    "org.apache.xml.serializer.ToStream:void startPrefixMapping(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.serialize.SerializerUtils:void outputResultTreeFragment(org.apache.xml.serializer.SerializationHandler,org.apache.xpath.objects.XObject,org.apache.xpath.XPathContext)",
            "org.apache.xalan.templates.ElemLiteralResult:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.TransformerHandlerImpl:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:boolean startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void startPrefixMapping(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:boolean startPrefixMapping(java.lang.String,java.lang.String,boolean)",
            "org.apache.xml.serializer.ToStream:void ensurePrefixIsDeclared(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToXMLSAXHandler:boolean startPrefixMapping(java.lang.String,java.lang.String,boolean)",
            "org.apache.xml.serializer.ToXMLStream:boolean pushNamespace(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serializer.ToXMLStream:void namespaceAfterStartElement(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.SAXImpl:void copy(int,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.xsltc.dom.SAXImpl:java.lang.String shallowCopy(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String startXslElement(java.lang.String,java.lang.String,org.apache.xml.serializer.SerializationHandler,org.apache.xalan.xsltc.DOM,int)",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.w3c.dom.Node)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:java.lang.String copyElement(int,int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void copyNS(int,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:void copyAttribute(int,int,org.apache.xml.serializer.SerializationHandler)"
        ]
    },
    "org.apache.xml.serializer.ToStream:void startEntity(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void startEntity(java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void startEntity(java.lang.String)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startEntity(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void startEntity(java.lang.String)",
            "org.apache.xml.serializer.SerializerBase:void entityReference(java.lang.String)",
            "org.apache.xml.serializer.ToUnknownStream:void startEntity(java.lang.String)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void startEntity(java.lang.String)",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xalan.templates.StylesheetRoot:javax.xml.transform.Transformer newTransformer()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.client.XSLTProcessorApplet:void start()",
            "org.apache.xalan.processor.TransformerFactoryImpl:javax.xml.transform.sax.TransformerHandler newTransformerHandler(javax.xml.transform.Templates)",
            "org.apache.xalan.processor.TransformerFactoryImpl:javax.xml.transform.Transformer newTransformer(javax.xml.transform.Source)",
            "org.apache.xalan.transformer.TrAXFilter:void <init>(javax.xml.transform.Templates)",
            "org.apache.xalan.xslt.Process:void main(java.lang.String[])",
            "org.apache.xalan.xsltc.trax.TrAXFilter:void <init>(javax.xml.transform.Templates)",
            "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:javax.xml.transform.Transformer newTransformer(javax.xml.transform.Source)",
            "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:javax.xml.transform.sax.TransformerHandler newTransformerHandler(javax.xml.transform.Templates)"
        ]
    },
    "org.apache.xml.serializer.ToHTMLStream:void processAttributes(java.io.Writer,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.ToHTMLStream:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToHTMLStream:void closeStartTag()",
            "org.apache.xml.serializer.ToStream:void endElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToStream:void closeStartTag()",
            "org.apache.xml.serializer.ToStream:void firePseudoAttributes()"
        ]
    },
    "org.apache.xml.serializer.ToStream:boolean escapingNotNeeded(char)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.ToHTMLStream:void writeAttrURI(java.io.Writer,java.lang.String,boolean)",
            "org.apache.xml.serializer.ToHTMLStream:void writeAttrString(java.io.Writer,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToStream:void writeNormalizedChars(char[],int,int,boolean,boolean)",
            "org.apache.xml.serializer.ToStream:void cdata(char[],int,int)",
            "org.apache.xml.serializer.ToStream:void characters(char[],int,int)",
            "org.apache.xml.serializer.ToStream:int accumDefaultEscape(java.io.Writer,char,int,char[],int,boolean,boolean)",
            "org.apache.xml.serializer.ToStream:void writeAttrString(java.io.Writer,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xalan.templates.OutputProperties:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.ProcessorOutputElem:void startElement(org.apache.xalan.processor.StylesheetHandler,java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void setOutputProperties(java.util.Properties)",
            "org.apache.xalan.transformer.TransformerImpl:void setOutputProperties(java.util.Properties)"
        ]
    },
    "org.apache.xalan.transformer.TransformerIdentityImpl:void <init>(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.TransformerFactoryImpl:javax.xml.transform.sax.TransformerHandler newTransformerHandler()",
            "org.apache.xalan.processor.TransformerFactoryImpl:javax.xml.transform.Transformer newTransformer()",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void <init>()"
        ]
    },
    "org.apache.xalan.transformer.TransformerIdentityImpl:void reset()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.transformer.TransformerIdentityImpl:void setOutputProperties(java.util.Properties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xslt.Process:void main(java.lang.String[])"
        ]
    },
    "org.apache.xalan.transformer.TransformerImpl:void setOutputProperties(java.util.Properties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xslt.Process:void main(java.lang.String[])"
        ]
    },
    "org.apache.xalan.templates.OutputProperties:void setProperty(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.ProcessorOutputElem:void setDoctypePublic(java.lang.String)",
            "org.apache.xalan.processor.ProcessorOutputElem:void setDoctypeSystem(java.lang.String)",
            "org.apache.xalan.processor.ProcessorOutputElem:void setEncoding(java.lang.String)",
            "org.apache.xalan.processor.ProcessorOutputElem:void setMediaType(java.lang.String)",
            "org.apache.xalan.processor.ProcessorOutputElem:void setVersion(java.lang.String)",
            "org.apache.xalan.templates.OutputProperties:void setProperty(org.apache.xml.utils.QName,java.lang.String)",
            "org.apache.xalan.templates.OutputProperties:void setQNameProperty(java.lang.String,org.apache.xml.utils.QName)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void setOutputProperty(java.lang.String,java.lang.String)",
            "org.apache.xalan.transformer.TransformerImpl:void setOutputProperty(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xalan.templates.OutputProperties:void copyFrom(java.util.Properties,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.OutputProperties:void setMethodDefaults(java.lang.String)",
            "org.apache.xalan.templates.OutputProperties:void copyFrom(java.util.Properties)",
            "org.apache.xalan.transformer.SerializerSwitcher:void switchSerializerIfHTML(org.apache.xalan.transformer.TransformerImpl,java.lang.String,java.lang.String)",
            "org.apache.xalan.transformer.SerializerSwitcher:org.apache.xml.serializer.Serializer switchSerializerIfHTML(java.lang.String,java.lang.String,java.util.Properties,org.apache.xml.serializer.Serializer)"
        ]
    },
    "org.apache.xalan.xsltc.trax.TransformerImpl:java.util.Properties createOutputProperties(java.util.Properties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.trax.TransformerImpl:void <init>(org.apache.xalan.xsltc.Translet,java.util.Properties,int,org.apache.xalan.xsltc.trax.TransformerFactoryImpl)"
        ]
    },
    "org.apache.xml.serializer.ToStream:void closeStartTag()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.ToStream:void cdata(char[],int,int)",
            "org.apache.xml.serializer.ToStream:void charactersRaw(char[],int,int)",
            "org.apache.xml.serializer.ToStream:void characters(char[],int,int)",
            "org.apache.xml.serializer.ToStream:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToStream:void comment(char[],int,int)",
            "org.apache.xml.serializer.ToStream:void flushPending()",
            "org.apache.xml.serializer.ToXMLStream:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToXMLStream:void entityReference(java.lang.String)"
        ]
    },
    "org.apache.xml.serializer.ToStream:void firePseudoAttributes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.ToHTMLStream:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToStream:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToStream:boolean addAttributeAlways(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)",
            "org.apache.xml.serializer.ToTextStream:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToTextStream:void startElement(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xml.serializer.ToTextStream:void characters(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.dom.SimpleResultTreeImpl:void characters(int,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.runtime.AbstractTranslet:void characters(java.lang.String,org.apache.xml.serializer.SerializationHandler)",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.w3c.dom.Node)",
            "org.apache.xml.serializer.ToStream:void startEntity(java.lang.String)"
        ]
    },
    "org.apache.xalan.extensions.MethodResolver:java.lang.String errString(java.lang.String,java.lang.String,java.lang.Class,java.lang.String,int,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.MethodResolver:java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Object[],java.lang.Object[][],org.apache.xalan.extensions.ExpressionContext)",
            "org.apache.xalan.extensions.MethodResolver:java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Object[],java.lang.Object[][],org.apache.xalan.extensions.ExpressionContext,int)",
            "org.apache.xalan.extensions.MethodResolver:java.lang.reflect.Method getElementMethod(java.lang.Class,java.lang.String)"
        ]
    },
    "org.apache.xml.serializer.ToSAXHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.ToHTMLSAXHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToTextSAXHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)"
        ]
    },
    "org.apache.xml.serializer.ToSAXHandler:void startElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.ToHTMLSAXHandler:void startElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToTextSAXHandler:void startElement(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xml.serializer.ToSAXHandler:void startElement(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.ToTextSAXHandler:void startElement(java.lang.String)"
        ]
    },
    "org.apache.xalan.processor.StylesheetHandler:void endDocument()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.lib.Redirect:void write(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)",
            "org.apache.xalan.lib.Redirect:void close(org.apache.xalan.extensions.XSLProcessorContext,org.apache.xalan.templates.ElemExtensionCall)",
            "org.apache.xalan.transformer.TransformerHandlerImpl:void endDocument()",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void endDocument()",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse()",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void endDocument()",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void endNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void endDocument()",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void endDocument()",
            "org.apache.xml.serializer.ToTextSAXHandler:void endDocument()",
            "org.apache.xml.serializer.ToXMLSAXHandler:void endDocument()",
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.serializer.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void traverse(org.w3c.dom.Node,org.w3c.dom.Node)"
        ]
    },
    "org.apache.xalan.templates.ElemElement:void compose(org.apache.xalan.templates.StylesheetRoot)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.StylesheetRoot:void composeTemplates(org.apache.xalan.templates.ElemTemplateElement)"
        ]
    },
    "org.apache.xalan.templates.ElemLiteralResult:void compose(org.apache.xalan.templates.StylesheetRoot)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemExtensionCall:void compose(org.apache.xalan.templates.StylesheetRoot)",
            "org.apache.xalan.templates.StylesheetRoot:void composeTemplates(org.apache.xalan.templates.ElemTemplateElement)"
        ]
    },
    "org.apache.xalan.templates.ElemPI:void compose(org.apache.xalan.templates.StylesheetRoot)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.StylesheetRoot:void composeTemplates(org.apache.xalan.templates.ElemTemplateElement)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Sort:void compileSortRecordFactory(java.util.Vector,org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.Sort:void translateSortIterator(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,org.apache.xalan.xsltc.compiler.Expression,java.util.Vector)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.LogicalExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CeilingCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CopyOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:org.apache.bcel.generic.InstructionList compile(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FloorCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ForEach:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.GenerateIdCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Key:void traverseNodeSet(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,int)",
            "org.apache.xalan.xsltc.compiler.Key:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.bcel.generic.LocalVariableGen translateCall(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LangCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NameBase:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NotCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Number:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void compileFilter(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RoundCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSelect(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSortIterator(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,org.apache.xalan.xsltc.compiler.Expression,java.util.Vector)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringLengthCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ValueOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.VariableBase:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.WithParam:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.AbsolutePathPattern:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.AlternativePattern:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.AncestorPattern:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CeilingCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CopyOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:org.apache.bcel.generic.InstructionList compile(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FloorCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ForEach:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.GenerateIdCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Key:void traverseNodeSet(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,int)",
            "org.apache.xalan.xsltc.compiler.Key:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.bcel.generic.LocalVariableGen translateCall(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LangCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NameBase:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NotCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Number:void compilePatterns(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Number:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ParentPattern:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void compileFilter(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RoundCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSelect(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSortIterator(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,org.apache.xalan.xsltc.compiler.Expression,java.util.Vector)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringLengthCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ValueOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.VariableBase:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.WithParam:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.AlternativePattern:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.AlternativePattern:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.AncestorPattern:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CeilingCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CopyOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:org.apache.bcel.generic.InstructionList compile(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FloorCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ForEach:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.GenerateIdCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Key:void traverseNodeSet(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,int)",
            "org.apache.xalan.xsltc.compiler.Key:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.bcel.generic.LocalVariableGen translateCall(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LangCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NameBase:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NotCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Number:void compilePatterns(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Number:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ParentPattern:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void compileFilter(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RoundCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSelect(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSortIterator(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,org.apache.xalan.xsltc.compiler.Expression,java.util.Vector)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringLengthCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ValueOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.VariableBase:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.WithParam:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.AncestorPattern:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.AbsolutePathPattern:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.AlternativePattern:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.AncestorPattern:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CeilingCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CopyOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:org.apache.bcel.generic.InstructionList compile(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FloorCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ForEach:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.GenerateIdCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Key:void traverseNodeSet(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,int)",
            "org.apache.xalan.xsltc.compiler.Key:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.bcel.generic.LocalVariableGen translateCall(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LangCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NameBase:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NotCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Number:void compilePatterns(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Number:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ParentPattern:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void compileFilter(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RoundCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSelect(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSortIterator(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,org.apache.xalan.xsltc.compiler.Expression,java.util.Vector)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringLengthCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ValueOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.VariableBase:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.WithParam:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Number:void compilePatterns(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.Number:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.ParentPattern:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.AbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.AbsolutePathPattern:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.AlternativePattern:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.AncestorPattern:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ApplyTemplates:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.AttributeValueTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BinOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.BooleanCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CastExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CeilingCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ConcatCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ContainsCall:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.CopyOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.DocumentCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.EqualityExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:org.apache.bcel.generic.InstructionList compile(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Expression:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilterParentPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FilteredAbsoluteLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FloorCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ForEach:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FormatNumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.FunctionCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.GenerateIdCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Key:void traverseNodeSet(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,int)",
            "org.apache.xalan.xsltc.compiler.Key:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.KeyCall:org.apache.bcel.generic.LocalVariableGen translateCall(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LangCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NameBase:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NotCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Number:void compilePatterns(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Number:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.NumberCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ParentLocationPath:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ParentPattern:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void compileFilter(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Predicate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RelationalExpr:void translateDesynthesized(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.RoundCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSelect(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.Sort:void translateSortIterator(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,org.apache.xalan.xsltc.compiler.Expression,java.util.Vector)",
            "org.apache.xalan.xsltc.compiler.StartsWithCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.StringLengthCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.TransletOutput:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnaryOpExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnionPathExpr:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.UnparsedEntityUriCall:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.ValueOf:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.VariableBase:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.WithParam:void translateValue(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Mode:org.apache.bcel.generic.InstructionList compileNamespaces(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator,boolean[],boolean[],boolean,org.apache.bcel.generic.InstructionHandle)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.Mode:void compileApplyTemplates(org.apache.xalan.xsltc.compiler.util.ClassGenerator)",
            "org.apache.xalan.xsltc.compiler.Mode:void compileApplyImports(org.apache.xalan.xsltc.compiler.util.ClassGenerator,int,int)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Sort:java.lang.String compileSortRecord(java.util.Vector,org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.Sort:void compileSortRecordFactory(java.util.Vector,org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Stylesheet:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.CallTemplate:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.LiteralElement:void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.SyntaxTreeNode:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)",
            "org.apache.xalan.xsltc.compiler.XslElement:void translateContents(org.apache.xalan.xsltc.compiler.util.ClassGenerator,org.apache.xalan.xsltc.compiler.util.MethodGenerator)"
        ]
    },
    "org.apache.xalan.xsltc.compiler.Stylesheet:void compileModes(org.apache.xalan.xsltc.compiler.util.ClassGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.compiler.Stylesheet:void translate()"
        ]
    },
    "org.apache.xpath.compiler.XPathParser:int AdditiveExpr(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.XPathParser:int RelationalExpr(int)",
            "org.apache.xpath.compiler.XPathParser:int AdditiveExpr(int)"
        ]
    },
    "org.apache.xml.serializer.ToXMLStream:boolean pushNamespace(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.transformer.TransformerHandlerImpl:void startEntity(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void startEntity(java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void startEntity(java.lang.String)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startEntity(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void startEntity(java.lang.String)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void startEntity(java.lang.String)",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xalan.transformer.TransformerIdentityImpl:void startEntity(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void startEntity(java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void startEntity(java.lang.String)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startEntity(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void startEntity(java.lang.String)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void startEntity(java.lang.String)",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startEntity(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void startEntity(java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void startEntity(java.lang.String)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startEntity(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void startEntity(java.lang.String)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void startEntity(java.lang.String)",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void startEntity(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void startEntity(java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void startEntity(java.lang.String)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startEntity(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void startEntity(java.lang.String)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void startEntity(java.lang.String)",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serializer.ToUnknownStream:void startEntity(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void startEntity(java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void startEntity(java.lang.String)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startEntity(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void startEntity(java.lang.String)",
            "org.apache.xml.serializer.SerializerBase:void entityReference(java.lang.String)",
            "org.apache.xml.serializer.ToUnknownStream:void startEntity(java.lang.String)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void startEntity(java.lang.String)",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serializer.ToXMLSAXHandler:void startEntity(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void startEntity(java.lang.String)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void startEntity(java.lang.String)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startEntity(java.lang.String)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void startEntity(java.lang.String)",
            "org.apache.xml.serializer.SerializerBase:void entityReference(java.lang.String)",
            "org.apache.xml.serializer.ToUnknownStream:void startEntity(java.lang.String)",
            "org.apache.xml.serializer.ToXMLSAXHandler:void startEntity(java.lang.String)",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serializer.ToHTMLStream:void closeStartTag()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.ToHTMLStream:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToHTMLStream:void characters(char[],int,int)",
            "org.apache.xml.serializer.ToHTMLStream:void cdata(char[],int,int)",
            "org.apache.xml.serializer.ToHTMLStream:void processingInstruction(java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToStream:void cdata(char[],int,int)",
            "org.apache.xml.serializer.ToStream:void charactersRaw(char[],int,int)",
            "org.apache.xml.serializer.ToStream:void characters(char[],int,int)",
            "org.apache.xml.serializer.ToStream:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToStream:void comment(char[],int,int)",
            "org.apache.xml.serializer.ToStream:void flushPending()"
        ]
    },
    "org.apache.xalan.processor.TransformerFactoryImpl:javax.xml.transform.sax.TransformerHandler newTransformerHandler()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.trax.SmartTransformerFactoryImpl:javax.xml.transform.sax.TransformerHandler newTransformerHandler()"
        ]
    },
    "org.apache.xalan.processor.TransformerFactoryImpl:javax.xml.transform.Transformer newTransformer()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.client.XSLTProcessorApplet:java.lang.String getSource()",
            "org.apache.xalan.xslt.Process:void main(java.lang.String[])",
            "org.apache.xalan.xsltc.trax.SmartTransformerFactoryImpl:javax.xml.transform.Transformer newTransformer()"
        ]
    },
    "org.apache.xalan.transformer.TransformerIdentityImpl:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.processor.ProcessorOutputElem:void setDoctypePublic(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.processor.ProcessorOutputElem:void setDoctypeSystem(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.processor.ProcessorOutputElem:void setEncoding(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.processor.ProcessorOutputElem:void setMediaType(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.processor.ProcessorOutputElem:void setVersion(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.templates.OutputProperties:void setProperty(org.apache.xml.utils.QName,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.ProcessorOutputElem:void setForeignAttr(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xalan.processor.ProcessorOutputElem:void addLiteralResultAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.xalan.templates.OutputProperties:void setQNameProperty(java.lang.String,org.apache.xml.utils.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.processor.ProcessorOutputElem:void setMethod(org.apache.xml.utils.QName)",
            "org.apache.xalan.templates.OutputProperties:void setQNameProperty(org.apache.xml.utils.QName,org.apache.xml.utils.QName)"
        ]
    },
    "org.apache.xalan.transformer.TransformerIdentityImpl:void setOutputProperty(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xslt.Process:void main(java.lang.String[])"
        ]
    },
    "org.apache.xalan.transformer.TransformerImpl:void setOutputProperty(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xslt.Process:void main(java.lang.String[])"
        ]
    },
    "org.apache.xalan.templates.OutputProperties:void copyFrom(java.util.Properties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.OutputProperties:void copyFrom(org.apache.xalan.templates.OutputProperties)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void setOutputProperties(java.util.Properties)",
            "org.apache.xalan.transformer.TransformerImpl:void setOutputProperties(java.util.Properties)"
        ]
    },
    "org.apache.xalan.xsltc.trax.TransformerImpl:void <init>(org.apache.xalan.xsltc.Translet,java.util.Properties,int,org.apache.xalan.xsltc.trax.TransformerFactoryImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.trax.TemplatesImpl:javax.xml.transform.Transformer newTransformer()",
            "org.apache.xalan.xsltc.trax.TransformerImpl:void <init>(java.util.Properties,int,org.apache.xalan.xsltc.trax.TransformerFactoryImpl)"
        ]
    },
    "org.apache.xml.serializer.ToStream:void charactersRaw(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.serializer.ToStream:void cdata(char[],int,int)",
            "org.apache.xml.serializer.ToStream:void characters(char[],int,int)"
        ]
    },
    "org.apache.xml.serializer.ToXMLStream:void entityReference(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.ClonerToResultTree:void cloneToResultTree(int,int,org.apache.xml.dtm.DTM,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xml.serializer.ToUnknownStream:void entityReference(java.lang.String)"
        ]
    },
    "org.apache.xml.serializer.ToTextStream:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.transformer.TransformerHandlerImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.transformer.TransformerIdentityImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xalan.xsltc.trax.DOM2SAX:void parse(org.w3c.dom.Node)",
            "org.apache.xalan.xsltc.trax.TransformerHandlerImpl:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.dtm.ref.DTMTreeWalker:void startNode(int)",
            "org.apache.xml.dtm.ref.IncrementalSAXSource_Filter:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToHTMLSAXHandler:void closeStartTag()",
            "org.apache.xml.serializer.ToStream:void startElement(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.xml.serializer.ToStream:void startElement(java.lang.String)",
            "org.apache.xml.serializer.ToUnknownStream:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)",
            "org.apache.xml.serializer.ToUnknownStream:void emitFirstTag()",
            "org.apache.xml.serializer.ToXMLSAXHandler:void closeStartTag()",
            "org.apache.xml.serializer.TreeWalker:void startNode(org.w3c.dom.Node)",
            "org.apache.xml.utils.TreeWalker:void startNode(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serializer.ToTextStream:void startElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemElement:void constructNode(java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemLiteralResult:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.ClonerToResultTree:void cloneToResultTree(int,int,org.apache.xml.dtm.DTM,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.transformer.TreeWalker2Result:void startNode(int)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String startXslElement(java.lang.String,java.lang.String,org.apache.xml.serializer.SerializationHandler,org.apache.xalan.xsltc.DOM,int)",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xalan.extensions.MethodResolver:java.lang.reflect.Method getElementMethod(java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.extensions.ExtensionHandlerJavaClass:void processElement(java.lang.String,org.apache.xalan.templates.ElemTemplateElement,org.apache.xalan.transformer.TransformerImpl,org.apache.xalan.templates.Stylesheet,java.lang.Object)",
            "org.apache.xalan.extensions.ExtensionHandlerJavaPackage:void processElement(java.lang.String,org.apache.xalan.templates.ElemTemplateElement,org.apache.xalan.transformer.TransformerImpl,org.apache.xalan.templates.Stylesheet,java.lang.Object)"
        ]
    },
    "org.apache.xml.serializer.ToTextSAXHandler:void startElement(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.ElemElement:void constructNode(java.lang.String,java.lang.String,java.lang.String,org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.templates.ElemLiteralResult:void execute(org.apache.xalan.transformer.TransformerImpl)",
            "org.apache.xalan.transformer.ClonerToResultTree:void cloneToResultTree(int,int,org.apache.xml.dtm.DTM,org.apache.xml.serializer.SerializationHandler,boolean)",
            "org.apache.xalan.transformer.TreeWalker2Result:void startNode(int)",
            "org.apache.xalan.xsltc.runtime.BasisLibrary:java.lang.String startXslElement(java.lang.String,java.lang.String,org.apache.xml.serializer.SerializationHandler,org.apache.xalan.xsltc.DOM,int)",
            "org.apache.xalan.xsltc.trax.DOM2TO:void parse(org.w3c.dom.Node)"
        ]
    },
    "org.apache.xml.serializer.ToTextSAXHandler:void startElement(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xml.dtm.ref.sax2dtm.SAX2DTM2:java.lang.String copyElement(int,int,org.apache.xml.serializer.SerializationHandler)"
        ]
    },
    "org.apache.xalan.templates.ElemExtensionCall:void compose(org.apache.xalan.templates.StylesheetRoot)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.StylesheetRoot:void composeTemplates(org.apache.xalan.templates.ElemTemplateElement)"
        ]
    },
    "org.apache.xpath.compiler.XPathParser:int RelationalExpr(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.XPathParser:int EqualityExpr(int)",
            "org.apache.xpath.compiler.XPathParser:int RelationalExpr(int)"
        ]
    },
    "org.apache.xalan.xsltc.trax.SmartTransformerFactoryImpl:javax.xml.transform.sax.TransformerHandler newTransformerHandler()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.trax.SmartTransformerFactoryImpl:javax.xml.transform.sax.TransformerHandler newTransformerHandler()"
        ]
    },
    "org.apache.xalan.xsltc.trax.SmartTransformerFactoryImpl:javax.xml.transform.Transformer newTransformer()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.client.XSLTProcessorApplet:java.lang.String getSource()",
            "org.apache.xalan.xslt.Process:void main(java.lang.String[])",
            "org.apache.xalan.xsltc.trax.SmartTransformerFactoryImpl:javax.xml.transform.Transformer newTransformer()"
        ]
    },
    "org.apache.xalan.processor.ProcessorOutputElem:void setForeignAttr(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.processor.ProcessorOutputElem:void addLiteralResultAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.processor.ProcessorOutputElem:void setMethod(org.apache.xml.utils.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.templates.OutputProperties:void setQNameProperty(org.apache.xml.utils.QName,org.apache.xml.utils.QName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xalan.templates.OutputProperties:void copyFrom(org.apache.xalan.templates.OutputProperties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.StylesheetRoot:void recomposeOutput(org.apache.xalan.templates.OutputProperties)"
        ]
    },
    "org.apache.xalan.xsltc.trax.TransformerImpl:void <init>(java.util.Properties,int,org.apache.xalan.xsltc.trax.TransformerFactoryImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:javax.xml.transform.Transformer newTransformer()"
        ]
    },
    "org.apache.xpath.compiler.XPathParser:int EqualityExpr(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.XPathParser:void AndExpr()",
            "org.apache.xpath.compiler.XPathParser:int EqualityExpr(int)"
        ]
    },
    "org.apache.xalan.templates.StylesheetRoot:void recomposeOutput(org.apache.xalan.templates.OutputProperties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.OutputProperties:void recompose(org.apache.xalan.templates.StylesheetRoot)"
        ]
    },
    "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:javax.xml.transform.Transformer newTransformer()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.client.XSLTProcessorApplet:java.lang.String getSource()",
            "org.apache.xalan.xslt.Process:void main(java.lang.String[])",
            "org.apache.xalan.xsltc.trax.SmartTransformerFactoryImpl:javax.xml.transform.Transformer newTransformer()",
            "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:javax.xml.transform.sax.TransformerHandler newTransformerHandler()"
        ]
    },
    "org.apache.xpath.compiler.XPathParser:void AndExpr()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.XPathParser:void OrExpr()",
            "org.apache.xpath.compiler.XPathParser:void AndExpr()"
        ]
    },
    "org.apache.xalan.templates.OutputProperties:void recompose(org.apache.xalan.templates.StylesheetRoot)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.templates.StylesheetRoot:void recompose()"
        ]
    },
    "org.apache.xalan.xsltc.trax.TransformerFactoryImpl:javax.xml.transform.sax.TransformerHandler newTransformerHandler()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xalan.xsltc.trax.SmartTransformerFactoryImpl:javax.xml.transform.sax.TransformerHandler newTransformerHandler()"
        ]
    },
    "org.apache.xpath.compiler.XPathParser:void OrExpr()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.XPathParser:void Expr()",
            "org.apache.xpath.compiler.XPathParser:void OrExpr()"
        ]
    },
    "org.apache.xpath.compiler.XPathParser:void Expr()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.XPathParser:void initXPath(org.apache.xpath.compiler.Compiler,java.lang.String,org.apache.xml.utils.PrefixResolver)",
            "org.apache.xpath.compiler.XPathParser:void StringExpr()",
            "org.apache.xpath.compiler.XPathParser:void BooleanExpr()",
            "org.apache.xpath.compiler.XPathParser:void NumberExpr()",
            "org.apache.xpath.compiler.XPathParser:boolean PrimaryExpr()",
            "org.apache.xpath.compiler.XPathParser:void Argument()",
            "org.apache.xpath.compiler.XPathParser:void PredicateExpr()"
        ]
    },
    "org.apache.xpath.compiler.XPathParser:void StringExpr()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xpath.compiler.XPathParser:void NumberExpr()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.xpath.compiler.XPathParser:void Argument()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.XPathParser:boolean FunctionCall()"
        ]
    },
    "org.apache.xpath.compiler.XPathParser:void PredicateExpr()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.xpath.compiler.XPathParser:void Predicate()"
        ]
    }
}
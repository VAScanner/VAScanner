{
    "org.apache.pdfbox.io.ScratchFileBuffer:byte[] readFully(int)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.RandomAccessSource:byte[] readFully(int)"
        ]
    },
    "org.apache.pdfbox.io.RandomAccessBuffer:int read(byte[],int,int)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.pdfbox.io.RandomAccessBuffer:byte[] readFully(int)",
            "org.apache.pdfbox.io.RandomAccessBuffer:int read(byte[])",
            "org.apache.pdfbox.io.RandomAccessInputStream:int read(byte[],int,int)",
            "org.apache.pdfbox.pdfparser.COSParser:long getStartxrefOffset()",
            "org.apache.pdfbox.pdfparser.COSParser:void readUntilEndStream(java.io.OutputStream)",
            "org.apache.pdfbox.pdfparser.COSParser:void readValidStream(java.io.OutputStream,org.apache.pdfbox.cos.COSNumber)",
            "org.apache.pdfbox.pdfparser.COSParser:boolean isString(byte[])",
            "org.apache.pdfbox.pdfparser.RandomAccessSource:int read(byte[],int,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:void extractFromTiff(org.apache.pdfbox.io.RandomAccess,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)"
        ]
    },
    "org.apache.pdfbox.io.RandomAccessBuffer:byte[] readFully(int)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.RandomAccessSource:byte[] readFully(int)"
        ]
    },
    "org.apache.pdfbox.io.RandomAccessBuffer:int readRemainingBytes(byte[],int,int)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.pdfbox.io.RandomAccessBuffer:int read(byte[],int,int)"
        ]
    },
    "org.apache.pdfbox.pdfparser.InputStreamSource:byte[] readFully(int)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSBoolean parseBoolean()",
            "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSBase parseDirObject()"
        ]
    },
    "org.apache.pdfbox.io.RandomAccessBufferedFileInputStream:byte[] readFully(int)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.RandomAccessSource:byte[] readFully(int)"
        ]
    },
    "org.apache.pdfbox.pdfparser.RandomAccessSource:byte[] readFully(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSBoolean parseBoolean()",
            "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSBase parseDirObject()"
        ]
    },
    "org.apache.pdfbox.io.RandomAccessBuffer:int read(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.io.RandomAccessBuffer:byte[] readFully(int)",
            "org.apache.pdfbox.pdfparser.RandomAccessSource:int read(byte[])"
        ]
    },
    "org.apache.pdfbox.io.RandomAccessInputStream:int read(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.FlateFilter:void decompress(java.io.InputStream,java.io.OutputStream)",
            "org.apache.pdfbox.filter.FlateFilter:void encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.filter.Predictor:void decodePredictor(int,int,int,int,java.io.InputStream,java.io.OutputStream)",
            "org.apache.pdfbox.filter.RunLengthDecodeFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.io.IOUtils:long populateBuffer(java.io.InputStream,byte[])"
        ]
    },
    "org.apache.pdfbox.pdfparser.COSParser:long getStartxrefOffset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary retrieveTrailer()",
            "org.apache.pdfbox.pdfparser.FDFParser:void initialParse()"
        ]
    },
    "org.apache.pdfbox.pdfparser.COSParser:void readUntilEndStream(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSStream parseCOSStream(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdfparser.COSParser:void readValidStream(java.io.OutputStream,org.apache.pdfbox.cos.COSNumber)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSStream parseCOSStream(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdfparser.COSParser:boolean isString(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:boolean validateStreamLength(long)"
        ]
    },
    "org.apache.pdfbox.pdfparser.RandomAccessSource:int read(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.PDFStreamParser:boolean hasNoFollowingBinData(org.apache.pdfbox.pdfparser.SequentialSource)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:void extractFromTiff(org.apache.pdfbox.io.RandomAccess,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromRandomAccessImpl(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.io.RandomAccess,int)"
        ]
    },
    "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSBoolean parseBoolean()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSBase parseDirObject()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSBase parseCOSDictionaryValue()",
            "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSArray parseCOSArray()",
            "org.apache.pdfbox.pdfparser.COSParser:void parseFileObject(java.lang.Long,org.apache.pdfbox.cos.COSObjectKey,org.apache.pdfbox.cos.COSObject)",
            "org.apache.pdfbox.pdfparser.PDFObjectStreamParser:void parse()"
        ]
    },
    "org.apache.pdfbox.pdfparser.RandomAccessSource:int read(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.BaseParser:int checkForEndOfString(int)",
            "org.apache.pdfbox.pdfparser.PDFXrefStreamParser:void parse()"
        ]
    },
    "org.apache.pdfbox.filter.FlateFilter:void decompress(java.io.InputStream,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.FlateFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)"
        ]
    },
    "org.apache.pdfbox.filter.FlateFilter:void encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.Filter:void encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)"
        ]
    },
    "org.apache.pdfbox.filter.Predictor:void decodePredictor(int,int,int,int,java.io.InputStream,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.filter.RunLengthDecodeFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.Filter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int,org.apache.pdfbox.filter.DecodeOptions)",
            "org.apache.pdfbox.pdmodel.common.PDStream:java.io.InputStream createInputStream(java.util.List)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:void <init>(org.apache.pdfbox.cos.COSDictionary,byte[],org.apache.pdfbox.pdmodel.PDResources)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:java.io.InputStream createInputStream(java.util.List)"
        ]
    },
    "org.apache.pdfbox.io.IOUtils:long populateBuffer(java.io.InputStream,byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary retrieveTrailer()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.PDFParser:void initialParse()"
        ]
    },
    "org.apache.pdfbox.pdfparser.FDFParser:void initialParse()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.FDFParser:void parse()"
        ]
    },
    "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSStream parseCOSStream(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:long parseXrefObjStream(long,boolean)",
            "org.apache.pdfbox.pdfparser.COSParser:void parseFileObject(java.lang.Long,org.apache.pdfbox.cos.COSObjectKey,org.apache.pdfbox.cos.COSObject)",
            "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForObjStreams()"
        ]
    },
    "org.apache.pdfbox.pdfparser.COSParser:boolean validateStreamLength(long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSStream parseCOSStream(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdfparser.PDFStreamParser:boolean hasNoFollowingBinData(org.apache.pdfbox.pdfparser.SequentialSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.PDFStreamParser:java.lang.Object parseNextToken()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromRandomAccessImpl(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.io.RandomAccess,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromByteArray(org.apache.pdfbox.pdmodel.PDDocument,byte[],int)",
            "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromRandomAccess(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.io.RandomAccess)",
            "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromRandomAccess(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.io.RandomAccess,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromFile(org.apache.pdfbox.pdmodel.PDDocument,java.io.File,int)"
        ]
    },
    "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSBase parseCOSDictionaryValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.BaseParser:void parseCOSDictionaryNameValuePair(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSArray parseCOSArray()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSBase parseDirObject()",
            "org.apache.pdfbox.pdfparser.PDFStreamParser:java.lang.Object parseNextToken()"
        ]
    },
    "org.apache.pdfbox.pdfparser.COSParser:void parseFileObject(java.lang.Long,org.apache.pdfbox.cos.COSObjectKey,org.apache.pdfbox.cos.COSObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSBase parseObjectDynamically(long,int,boolean)"
        ]
    },
    "org.apache.pdfbox.pdfparser.PDFObjectStreamParser:void parse()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDocument:void dereferenceObjectStreams()",
            "org.apache.pdfbox.pdfparser.COSParser:void parseObjectStream(int)"
        ]
    },
    "org.apache.pdfbox.pdfparser.BaseParser:int checkForEndOfString(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSString parseCOSString()"
        ]
    },
    "org.apache.pdfbox.pdfparser.PDFXrefStreamParser:void parse()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:void parseXrefStream(org.apache.pdfbox.cos.COSStream,long,boolean)"
        ]
    },
    "org.apache.pdfbox.filter.FlateFilter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.Filter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int,org.apache.pdfbox.filter.DecodeOptions)",
            "org.apache.pdfbox.pdmodel.common.PDStream:java.io.InputStream createInputStream(java.util.List)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:void <init>(org.apache.pdfbox.cos.COSDictionary,byte[],org.apache.pdfbox.pdmodel.PDResources)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:java.io.InputStream createInputStream(java.util.List)"
        ]
    },
    "org.apache.pdfbox.filter.Filter:void encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSOutputStream:void close()",
            "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject prepareImageXObject(org.apache.pdfbox.pdmodel.PDDocument,byte[],int,int,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject prepareImageXObject(org.apache.pdfbox.pdmodel.PDDocument,byte[],int,int,int,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)"
        ]
    },
    "org.apache.pdfbox.filter.Filter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int,org.apache.pdfbox.filter.DecodeOptions)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSInputStream:org.apache.pdfbox.cos.COSInputStream create(java.util.List,org.apache.pdfbox.cos.COSDictionary,java.io.InputStream,org.apache.pdfbox.io.ScratchFile,org.apache.pdfbox.filter.DecodeOptions)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDStream:java.io.InputStream createInputStream(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:java.io.InputStream createInputStream(java.util.List)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:void <init>(org.apache.pdfbox.cos.COSDictionary,byte[],org.apache.pdfbox.pdmodel.PDResources)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.operator.graphics.BeginInlineImage:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:java.io.InputStream createInputStream(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdfparser.PDFParser:void initialParse()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.PDFParser:void parse()"
        ]
    },
    "org.apache.pdfbox.pdfparser.FDFParser:void parse()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFDocument:org.apache.pdfbox.pdmodel.fdf.FDFDocument load(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFDocument:org.apache.pdfbox.pdmodel.fdf.FDFDocument load(java.io.File)",
            "org.apache.pdfbox.pdmodel.fdf.FDFDocument:org.apache.pdfbox.pdmodel.fdf.FDFDocument load(java.io.InputStream)"
        ]
    },
    "org.apache.pdfbox.pdfparser.COSParser:long parseXrefObjStream(long,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary parseXref(long)"
        ]
    },
    "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForObjStreams()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary retrieveTrailer()",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary rebuildTrailer()"
        ]
    },
    "org.apache.pdfbox.pdfparser.PDFStreamParser:java.lang.Object parseNextToken()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processStreamOperators(org.apache.pdfbox.contentstream.PDContentStream)",
            "org.apache.pdfbox.pdfparser.PDFStreamParser:void parse()",
            "org.apache.pdfbox.pdfparser.PDFStreamParser:java.lang.Object parseNextToken()",
            "org.apache.pdfbox.pdmodel.font.PDType3CharProc:org.apache.pdfbox.pdmodel.common.PDRectangle getGlyphBBox()",
            "org.apache.pdfbox.pdmodel.font.PDType3CharProc:float getWidth()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:void processAppearanceStringOperators(byte[])"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromByteArray(org.apache.pdfbox.pdmodel.PDDocument,byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromByteArray(org.apache.pdfbox.pdmodel.PDDocument,byte[])"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromRandomAccess(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.io.RandomAccess)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromRandomAccess(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.io.RandomAccess,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromFile(org.apache.pdfbox.pdmodel.PDDocument,java.io.File,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromFile(org.apache.pdfbox.pdmodel.PDDocument,java.io.File)"
        ]
    },
    "org.apache.pdfbox.pdfparser.BaseParser:void parseCOSDictionaryNameValuePair(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSDictionary parseCOSDictionary()"
        ]
    },
    "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSBase parseObjectDynamically(long,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSBase parseObjectDynamically(org.apache.pdfbox.cos.COSObject,boolean)",
            "org.apache.pdfbox.pdfparser.COSParser:void parseObjectStream(int)"
        ]
    },
    "org.apache.pdfbox.cos.COSDocument:void dereferenceObjectStreams()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdfparser.COSParser:void parseObjectStream(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSBase parseObjectDynamically(long,int,boolean)",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary retrieveCOSDictionary(org.apache.pdfbox.cos.COSObjectKey,long)"
        ]
    },
    "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSString parseCOSString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSBase parseDirObject()",
            "org.apache.pdfbox.pdfparser.PDFStreamParser:java.lang.Object parseNextToken()"
        ]
    },
    "org.apache.pdfbox.pdfparser.COSParser:void parseXrefStream(org.apache.pdfbox.cos.COSStream,long,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:long parseXrefObjStream(long,boolean)"
        ]
    },
    "org.apache.pdfbox.cos.COSOutputStream:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.CCITTFaxEncoderStream:void close()",
            "org.apache.pdfbox.io.IOUtils:void closeQuietly(java.io.Closeable)",
            "org.apache.pdfbox.io.IOUtils:java.io.IOException closeAndLogException(java.io.Closeable,org.apache.commons.logging.Log,java.lang.String,java.io.IOException)",
            "org.apache.pdfbox.multipdf.LayerUtility:void wrapInSaveRestore(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.cos.COSStream createContentStream(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.cos.COSStream createStream(java.lang.String)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:org.apache.pdfbox.cos.COSBase cloneForNewDocument(java.lang.Object)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:void cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSStream parseCOSStream(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.PDFXRefStream:org.apache.pdfbox.cos.COSStream getStream()",
            "org.apache.pdfbox.pdfwriter.COSWriter:void close()",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void close()",
            "org.apache.pdfbox.pdmodel.common.PDMetadata:void importXMPMetadata(byte[])",
            "org.apache.pdfbox.pdmodel.common.PDStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void decryptStream(org.apache.pdfbox.cos.COSStream,long,long)",
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void encryptStream(org.apache.pdfbox.cos.COSStream,long,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:void extractFromTiff(org.apache.pdfbox.io.RandomAccess,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.cos.COSStream createRawStream(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void appendRawCommands(java.io.OutputStream,java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void writeToStream(byte[],org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject prepareImageXObject(org.apache.pdfbox.pdmodel.PDDocument,byte[],int,int,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject prepareImageXObject(org.apache.pdfbox.pdmodel.PDDocument,byte[],int,int,int,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromGrayImage(java.awt.image.BufferedImage,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromRGBImage(java.awt.image.BufferedImage,org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.cos.COSInputStream:org.apache.pdfbox.cos.COSInputStream create(java.util.List,org.apache.pdfbox.cos.COSDictionary,java.io.InputStream,org.apache.pdfbox.io.ScratchFile,org.apache.pdfbox.filter.DecodeOptions)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSInputStream:org.apache.pdfbox.cos.COSInputStream create(java.util.List,org.apache.pdfbox.cos.COSDictionary,java.io.InputStream,org.apache.pdfbox.io.ScratchFile)",
            "org.apache.pdfbox.cos.COSStream:org.apache.pdfbox.cos.COSInputStream createInputStream(org.apache.pdfbox.filter.DecodeOptions)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:java.io.InputStream createInputStream(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.contentstream.operator.graphics.BeginInlineImage:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.pdfparser.PDFParser:void parse()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.File,java.lang.String,java.io.InputStream,java.lang.String,org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.InputStream,java.lang.String,java.io.InputStream,java.lang.String,org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(byte[],java.lang.String,java.io.InputStream,java.lang.String,org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions:void initFromRandomAccessRead(org.apache.pdfbox.io.RandomAccessRead)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFDocument:org.apache.pdfbox.pdmodel.fdf.FDFDocument load(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFDocument:org.apache.pdfbox.pdmodel.fdf.FDFDocument load(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFDocument:org.apache.pdfbox.pdmodel.fdf.FDFDocument load(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary parseXref(long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary retrieveTrailer()",
            "org.apache.pdfbox.pdfparser.FDFParser:void initialParse()"
        ]
    },
    "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary rebuildTrailer()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary retrieveTrailer()",
            "org.apache.pdfbox.pdfparser.FDFParser:void initialParse()"
        ]
    },
    "org.apache.pdfbox.contentstream.PDFStreamEngine:void processStreamOperators(org.apache.pdfbox.contentstream.PDContentStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processTransparencyGroup(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup)",
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processType3Stream(org.apache.pdfbox.pdmodel.font.PDType3CharProc,org.apache.pdfbox.util.Matrix)",
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processAnnotation(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)",
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processTilingPattern(org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColor,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.util.Matrix)",
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processStream(org.apache.pdfbox.contentstream.PDContentStream)"
        ]
    },
    "org.apache.pdfbox.pdfparser.PDFStreamParser:void parse()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:java.util.List tokenize(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType3CharProc:org.apache.pdfbox.pdmodel.common.PDRectangle getGlyphBBox()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType3Font:org.apache.fontbox.util.BoundingBox generateBoundingBox()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType3CharProc:float getWidth()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType3Font:float getWidthFromFont(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:void processAppearanceStringOperators(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:void <init>(org.apache.pdfbox.cos.COSString,org.apache.pdfbox.pdmodel.PDResources)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromByteArray(org.apache.pdfbox.pdmodel.PDDocument,byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromByteArray(org.apache.pdfbox.pdmodel.PDDocument,byte[],java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromFile(org.apache.pdfbox.pdmodel.PDDocument,java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromFileByExtension(java.io.File,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromFileByContent(java.io.File,org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSDictionary parseCOSDictionary()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.BaseParser:org.apache.pdfbox.cos.COSBase parseDirObject()",
            "org.apache.pdfbox.pdfparser.COSParser:long parseXrefObjStream(long,boolean)",
            "org.apache.pdfbox.pdfparser.COSParser:boolean checkXRefStreamOffset(long)",
            "org.apache.pdfbox.pdfparser.COSParser:boolean bfSearchForTrailer(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForObjStreams()",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary retrieveCOSDictionary(org.apache.pdfbox.cos.COSObjectKey,long)",
            "org.apache.pdfbox.pdfparser.COSParser:boolean parseTrailer()",
            "org.apache.pdfbox.pdfparser.PDFStreamParser:java.lang.Object parseNextToken()"
        ]
    },
    "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSBase parseObjectDynamically(org.apache.pdfbox.cos.COSObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:void parseDictObjects(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName[])",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSNumber getLength(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSBase parseTrailerValuesDynamically(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.COSParser:void parseDictionaryRecursive(org.apache.pdfbox.cos.COSObject)"
        ]
    },
    "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary retrieveCOSDictionary(org.apache.pdfbox.cos.COSObjectKey,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:boolean searchForTrailerItems(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary retrieveCOSDictionary(org.apache.pdfbox.cos.COSObject)"
        ]
    },
    "org.apache.pdfbox.filter.CCITTFaxEncoderStream:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.CCITTFaxEncoderStream:void close()",
            "org.apache.pdfbox.io.IOUtils:void closeQuietly(java.io.Closeable)",
            "org.apache.pdfbox.io.IOUtils:java.io.IOException closeAndLogException(java.io.Closeable,org.apache.commons.logging.Log,java.lang.String,java.io.IOException)",
            "org.apache.pdfbox.multipdf.LayerUtility:void wrapInSaveRestore(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.cos.COSStream createContentStream(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.cos.COSStream createStream(java.lang.String)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:org.apache.pdfbox.cos.COSBase cloneForNewDocument(java.lang.Object)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:void cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSStream parseCOSStream(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfparser.PDFXRefStream:org.apache.pdfbox.cos.COSStream getStream()",
            "org.apache.pdfbox.pdfwriter.COSWriter:void close()",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void close()",
            "org.apache.pdfbox.pdmodel.common.PDMetadata:void importXMPMetadata(byte[])",
            "org.apache.pdfbox.pdmodel.common.PDStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void decryptStream(org.apache.pdfbox.cos.COSStream,long,long)",
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void encryptStream(org.apache.pdfbox.cos.COSStream,long,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:void extractFromTiff(org.apache.pdfbox.io.RandomAccess,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.cos.COSStream createRawStream(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void appendRawCommands(java.io.OutputStream,java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void writeToStream(byte[],org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)"
        ]
    },
    "org.apache.pdfbox.io.IOUtils:void closeQuietly(java.io.Closeable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSStream:java.lang.String toTextString()",
            "org.apache.pdfbox.filter.ASCII85Filter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",
            "org.apache.pdfbox.io.RandomAccessBufferedFileInputStream:java.io.File createTmpFile(java.io.InputStream)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void optimizedMergeDocuments(org.apache.pdfbox.io.MemoryUsageSetting,java.util.List)",
            "org.apache.pdfbox.pdfparser.COSParser:void prepareDecryption()",
            "org.apache.pdfbox.pdfparser.FDFParser:void parse()",
            "org.apache.pdfbox.pdfparser.PDFParser:void parse()",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.File,java.lang.String,java.io.InputStream,java.lang.String,org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.InputStream,java.lang.String,java.io.InputStream,java.lang.String,org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.pdmodel.common.PDStream:void addCompression()",
            "org.apache.pdfbox.pdmodel.common.PDStream:java.io.InputStream createInputStream(java.util.List)",
            "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:void saveDiskCache()",
            "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:java.util.List loadDiskCache(java.util.List)",
            "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:org.apache.fontbox.type1.Type1Font getType1Font(java.lang.String,java.io.File)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFont:int[] readCIDToGIDMap()",
            "org.apache.pdfbox.pdmodel.font.PDFont:org.apache.fontbox.cmap.CMap readCMap(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:void buildFontFile2(java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:void loadICCProfile()",
            "org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:void encodeImageToJPEGStream(java.awt.image.BufferedImage,float,int,java.io.OutputStream)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:void <init>(org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.PDResources)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromFileByContent(java.io.File,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage from8bit(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster,java.awt.Rectangle,int,int,int)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner signatureImage(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.io.IOUtils:java.io.IOException closeAndLogException(java.io.Closeable,org.apache.commons.logging.Log,java.lang.String,java.io.IOException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDocument:void close()",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void legacyMergeDocuments(org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.pdmodel.PDDocument:void close()"
        ]
    },
    "org.apache.pdfbox.multipdf.LayerUtility:void wrapInSaveRestore(org.apache.pdfbox.pdmodel.PDPage)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.cos.COSStream createContentStream(org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.multipdf.Overlay$LayoutPage getLayoutPage(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.Overlay:java.util.Map getLayoutPages(org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.cos.COSStream createStream(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.Overlay:void processPages(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.cos.COSStream createOverlayStream(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.multipdf.Overlay$LayoutPage,org.apache.pdfbox.cos.COSName)"
        ]
    },
    "org.apache.pdfbox.multipdf.PDFCloneUtility:org.apache.pdfbox.cos.COSBase cloneForNewDocument(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.LayerUtility:void transferDict(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSDictionary,java.util.Set,boolean)",
            "org.apache.pdfbox.multipdf.LayerUtility:void importOcProperties(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:org.apache.pdfbox.cos.COSBase cloneForNewDocument(java.lang.Object)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:void cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void optimizedMergeDocuments(org.apache.pdfbox.io.MemoryUsageSetting,java.util.List)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeOutputIntents(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeAcroForm(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void updatePageReferences(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.cos.COSDictionary,java.util.Map)"
        ]
    },
    "org.apache.pdfbox.multipdf.PDFCloneUtility:void cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.LayerUtility:org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject importPageAsForm(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.multipdf.LayerUtility:void importOcProperties(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:void cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdfparser.PDFXRefStream:org.apache.pdfbox.cos.COSStream getStream()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteXRefInc(org.apache.pdfbox.cos.COSDocument,long)"
        ]
    },
    "org.apache.pdfbox.pdfwriter.COSWriter:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.io.IOUtils:void closeQuietly(java.io.Closeable)",
            "org.apache.pdfbox.io.IOUtils:java.io.IOException closeAndLogException(java.io.Closeable,org.apache.commons.logging.Log,java.lang.String,java.io.IOException)",
            "org.apache.pdfbox.pdmodel.PDDocument:void save(java.io.OutputStream)",
            "org.apache.pdfbox.pdmodel.PDDocument:void saveIncremental(java.io.OutputStream)",
            "org.apache.pdfbox.pdmodel.fdf.FDFDocument:void save(java.io.OutputStream)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.SigningSupport:void close()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateCreator:java.io.InputStream getVisualSignatureAsStream(org.apache.pdfbox.cos.COSDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.io.IOUtils:void closeQuietly(java.io.Closeable)",
            "org.apache.pdfbox.io.IOUtils:java.io.IOException closeAndLogException(java.io.Closeable,org.apache.commons.logging.Log,java.lang.String,java.io.IOException)",
            "org.apache.pdfbox.multipdf.LayerUtility:org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup appendFormAsLayer(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject,java.awt.geom.AffineTransform,java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode,boolean,boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void initializeAppearanceContent(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,java.io.OutputStream)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void flatten(java.util.List,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDMetadata:void importXMPMetadata(byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.PDStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.PDStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.common.PDStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.common.PDStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSArray)"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void decryptStream(org.apache.pdfbox.cos.COSStream,long,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:void parseFileObject(java.lang.Long,org.apache.pdfbox.cos.COSObjectKey,org.apache.pdfbox.cos.COSObject)",
            "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForObjStreams()",
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void decrypt(org.apache.pdfbox.cos.COSBase,long,long)"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void encryptStream(org.apache.pdfbox.cos.COSStream,long,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromStream(org.apache.pdfbox.cos.COSStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.cos.COSStream createRawStream(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSBase,int,int,int,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void appendRawCommands(java.io.OutputStream,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void injectAppearanceStreams(org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void writeToStream(byte[],org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void initializeAppearanceContent(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void setAppearanceContent(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromGrayImage(java.awt.image.BufferedImage,org.apache.pdfbox.pdmodel.PDDocument)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromRGBImage(java.awt.image.BufferedImage,org.apache.pdfbox.pdmodel.PDDocument)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage)"
        ]
    },
    "org.apache.pdfbox.cos.COSInputStream:org.apache.pdfbox.cos.COSInputStream create(java.util.List,org.apache.pdfbox.cos.COSDictionary,java.io.InputStream,org.apache.pdfbox.io.ScratchFile)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.cos.COSStream:org.apache.pdfbox.cos.COSInputStream createInputStream(org.apache.pdfbox.filter.DecodeOptions)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSStream:org.apache.pdfbox.cos.COSInputStream createInputStream()",
            "org.apache.pdfbox.pdmodel.common.PDStream:org.apache.pdfbox.cos.COSInputStream createInputStream(org.apache.pdfbox.filter.DecodeOptions)"
        ]
    },
    "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processStreamOperators(org.apache.pdfbox.contentstream.PDContentStream)",
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(java.lang.String,java.util.List)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.File,java.lang.String,java.io.InputStream,java.lang.String,org.apache.pdfbox.io.MemoryUsageSetting)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.File,org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.File,java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.File,java.lang.String,org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.File,java.lang.String,java.io.InputStream,java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.InputStream,java.lang.String,java.io.InputStream,java.lang.String,org.apache.pdfbox.io.MemoryUsageSetting)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.InputStream,org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.InputStream,java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.InputStream,java.lang.String,java.io.InputStream,java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.InputStream,java.lang.String,org.apache.pdfbox.io.MemoryUsageSetting)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(byte[],java.lang.String,java.io.InputStream,java.lang.String,org.apache.pdfbox.io.MemoryUsageSetting)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(byte[],java.lang.String,java.io.InputStream,java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions:void initFromRandomAccessRead(org.apache.pdfbox.io.RandomAccessRead)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions:void setVisualSignature(java.io.File)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions:void setVisualSignature(java.io.InputStream)"
        ]
    },
    "org.apache.pdfbox.contentstream.PDFStreamEngine:void processTransparencyGroup(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void showTransparencyGroup(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup)",
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processSoftMask(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup)",
            "org.apache.pdfbox.rendering.PageDrawer:void access$1600(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup)"
        ]
    },
    "org.apache.pdfbox.contentstream.PDFStreamEngine:void processType3Stream(org.apache.pdfbox.pdmodel.font.PDType3CharProc,org.apache.pdfbox.util.Matrix)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void showType3Glyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDType3Font,int,java.lang.String,org.apache.pdfbox.util.Vector)"
        ]
    },
    "org.apache.pdfbox.contentstream.PDFStreamEngine:void processAnnotation(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void showAnnotation(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation)"
        ]
    },
    "org.apache.pdfbox.contentstream.PDFStreamEngine:void processTilingPattern(org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColor,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.util.Matrix)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processTilingPattern(org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColor,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.rendering.PageDrawer:void drawTilingPattern(java.awt.Graphics2D,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDColor,org.apache.pdfbox.util.Matrix)"
        ]
    },
    "org.apache.pdfbox.contentstream.PDFStreamEngine:void processStream(org.apache.pdfbox.contentstream.PDContentStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processPage(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void showForm(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject)",
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processChildStream(org.apache.pdfbox.contentstream.PDContentStream,org.apache.pdfbox.pdmodel.PDPage)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:java.util.List tokenize(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void setAppearanceContent(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType3Font:org.apache.fontbox.util.BoundingBox generateBoundingBox()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType3Font:org.apache.fontbox.util.BoundingBox getBoundingBox()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType3Font:float getWidthFromFont(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDFont:float getWidth(int)",
            "org.apache.pdfbox.pdmodel.font.PDFont:float getSpaceWidth()",
            "org.apache.pdfbox.pdmodel.font.PDType3Font:float getWidth(int)",
            "org.apache.pdfbox.rendering.PageDrawer:void drawGlyph2D(org.apache.pdfbox.rendering.Glyph2D,org.apache.pdfbox.pdmodel.font.PDFont,int,org.apache.pdfbox.util.Vector,java.awt.geom.AffineTransform)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:void <init>(org.apache.pdfbox.cos.COSString,org.apache.pdfbox.pdmodel.PDResources)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString getWidgetDefaultAppearanceString(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString getDefaultAppearanceString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromByteArray(org.apache.pdfbox.pdmodel.PDDocument,byte[],java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromFileByExtension(java.io.File,org.apache.pdfbox.pdmodel.PDDocument)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromFile(java.lang.String,org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromFileByContent(java.io.File,org.apache.pdfbox.pdmodel.PDDocument)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdfparser.COSParser:boolean checkXRefStreamOffset(long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:long checkXRefOffset(long)"
        ]
    },
    "org.apache.pdfbox.pdfparser.COSParser:boolean bfSearchForTrailer(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary rebuildTrailer()"
        ]
    },
    "org.apache.pdfbox.pdfparser.COSParser:boolean parseTrailer()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary parseXref(long)"
        ]
    },
    "org.apache.pdfbox.pdfparser.COSParser:void parseDictObjects(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.FDFParser:void initialParse()",
            "org.apache.pdfbox.pdfparser.PDFParser:void initialParse()"
        ]
    },
    "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSNumber getLength(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSStream parseCOSStream(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSBase parseTrailerValuesDynamically(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.FDFParser:void initialParse()",
            "org.apache.pdfbox.pdfparser.PDFParser:void initialParse()"
        ]
    },
    "org.apache.pdfbox.pdfparser.COSParser:void parseDictionaryRecursive(org.apache.pdfbox.cos.COSObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:void prepareDecryption()",
            "org.apache.pdfbox.pdfparser.COSParser:void parseDictionaryRecursive(org.apache.pdfbox.cos.COSObject)"
        ]
    },
    "org.apache.pdfbox.pdfparser.COSParser:boolean searchForTrailerItems(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary rebuildTrailer()"
        ]
    },
    "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary retrieveCOSDictionary(org.apache.pdfbox.cos.COSObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:boolean bfSearchForTrailer(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.cos.COSStream:java.lang.String toTextString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSStream:java.lang.String getString()",
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:java.lang.String getStringOrStream(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:java.lang.Object getValue()",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:java.lang.String getRichText()",
            "org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:java.lang.String getBefore()",
            "org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:java.lang.String getAfter()",
            "org.apache.pdfbox.pdmodel.interactive.action.PDActionJavaScript:java.lang.String getAction()",
            "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:java.lang.String getRichContents()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDField:void importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:java.lang.String getStringOrStream(org.apache.pdfbox.cos.COSBase)"
        ]
    },
    "org.apache.pdfbox.filter.ASCII85Filter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.Filter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int,org.apache.pdfbox.filter.DecodeOptions)",
            "org.apache.pdfbox.pdmodel.common.PDStream:java.io.InputStream createInputStream(java.util.List)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:void <init>(org.apache.pdfbox.cos.COSDictionary,byte[],org.apache.pdfbox.pdmodel.PDResources)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:java.io.InputStream createInputStream(java.util.List)"
        ]
    },
    "org.apache.pdfbox.io.RandomAccessBufferedFileInputStream:java.io.File createTmpFile(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.io.RandomAccessBufferedFileInputStream:void <init>(java.io.InputStream)"
        ]
    },
    "org.apache.pdfbox.multipdf.PDFMergerUtility:void optimizedMergeDocuments(org.apache.pdfbox.io.MemoryUsageSetting,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeDocuments(org.apache.pdfbox.io.MemoryUsageSetting)"
        ]
    },
    "org.apache.pdfbox.pdfparser.COSParser:void prepareDecryption()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary retrieveTrailer()",
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary rebuildTrailer()"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDStream:void addCompression()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:void saveDiskCache()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:void <init>(org.apache.pdfbox.pdmodel.font.FontCache)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:java.util.List loadDiskCache(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:void <init>(org.apache.pdfbox.pdmodel.font.FontCache)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:org.apache.fontbox.type1.Type1Font getType1Font(java.lang.String,java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:org.apache.fontbox.type1.Type1Font access$100(org.apache.pdfbox.pdmodel.font.FileSystemFontProvider,java.lang.String,java.io.File)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDFont:int[] readCIDToGIDMap()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType0:void <init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2:void <init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font,org.apache.fontbox.ttf.TrueTypeFont)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFont:org.apache.fontbox.cmap.CMap readCMap(org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDFont:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.font.PDType0Font:void readEncoding()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:void buildFontFile2(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildSubset(java.io.InputStream,java.lang.String,java.util.Map)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:void loadICCProfile()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:void <init>(org.apache.pdfbox.cos.COSArray)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:void encodeImageToJPEGStream(java.awt.image.BufferedImage,float,int,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createJPEG(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:void <init>(org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.PDResources)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.PDXObject:org.apache.pdfbox.pdmodel.graphics.PDXObject createXObject(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.pdmodel.PDResources)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:void <init>(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createThumbnail(org.apache.pdfbox.cos.COSStream)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject getMask()",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject getSoftMask()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage from8bit(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster,java.awt.Rectangle,int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage getRGBImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle,int,org.apache.pdfbox.cos.COSArray)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner signatureImage(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.cos.COSDocument:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDocument:void finalize()",
            "org.apache.pdfbox.io.IOUtils:void closeQuietly(java.io.Closeable)",
            "org.apache.pdfbox.io.IOUtils:java.io.IOException closeAndLogException(java.io.Closeable,org.apache.commons.logging.Log,java.lang.String,java.io.IOException)",
            "org.apache.pdfbox.pdmodel.fdf.FDFDocument:void close()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions:void close()"
        ]
    },
    "org.apache.pdfbox.multipdf.PDFMergerUtility:void legacyMergeDocuments(org.apache.pdfbox.io.MemoryUsageSetting)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeDocuments(org.apache.pdfbox.io.MemoryUsageSetting)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.io.IOUtils:void closeQuietly(java.io.Closeable)",
            "org.apache.pdfbox.io.IOUtils:java.io.IOException closeAndLogException(java.io.Closeable,org.apache.commons.logging.Log,java.lang.String,java.io.IOException)",
            "org.apache.pdfbox.multipdf.Overlay:void close()",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void optimizedMergeDocuments(org.apache.pdfbox.io.MemoryUsageSetting,java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateCreator:java.io.InputStream buildPDF(org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateStructure:java.io.ByteArrayInputStream getTemplateAppearanceStream()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void closeTemplate(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:void calculatePageSizeFromFile(java.lang.String,int)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:void calculatePageSizeFromStream(java.io.InputStream,int)"
        ]
    },
    "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.multipdf.Overlay$LayoutPage getLayoutPage(org.apache.pdfbox.pdmodel.PDDocument)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.pdmodel.PDDocument overlay(java.util.Map)",
            "org.apache.pdfbox.multipdf.Overlay:void loadPDFs()"
        ]
    },
    "org.apache.pdfbox.multipdf.Overlay:java.util.Map getLayoutPages(org.apache.pdfbox.pdmodel.PDDocument)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.Overlay:void loadPDFs()"
        ]
    },
    "org.apache.pdfbox.multipdf.Overlay:void processPages(org.apache.pdfbox.pdmodel.PDDocument)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.pdmodel.PDDocument overlay(java.util.Map)"
        ]
    },
    "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.cos.COSStream createOverlayStream(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.multipdf.Overlay$LayoutPage,org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.Overlay:void overlayPage(org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.PDPage,int,int)"
        ]
    },
    "org.apache.pdfbox.multipdf.LayerUtility:void transferDict(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSDictionary,java.util.Set,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.LayerUtility:org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject importPageAsForm(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage)"
        ]
    },
    "org.apache.pdfbox.multipdf.LayerUtility:void importOcProperties(org.apache.pdfbox.pdmodel.PDDocument)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.LayerUtility:org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject importPageAsForm(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage)"
        ]
    },
    "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void legacyMergeDocuments(org.apache.pdfbox.io.MemoryUsageSetting)"
        ]
    },
    "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeOutputIntents(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeAcroForm(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.multipdf.PDFMergerUtility:void updatePageReferences(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.cos.COSDictionary,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void updatePageReferences(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.cos.COSDictionary,java.util.Map)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void updatePageReferences(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.cos.COSArray,java.util.Map)"
        ]
    },
    "org.apache.pdfbox.multipdf.LayerUtility:org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject importPageAsForm(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.LayerUtility:org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject importPageAsForm(org.apache.pdfbox.pdmodel.PDDocument,int)"
        ]
    },
    "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteXRefInc(org.apache.pdfbox.cos.COSDocument,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromDocument(org.apache.pdfbox.cos.COSDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:void save(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void optimizedMergeDocuments(org.apache.pdfbox.io.MemoryUsageSetting,java.util.List)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void legacyMergeDocuments(org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.pdmodel.PDDocument:void save(java.io.File)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:void saveIncremental(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFDocument:void save(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFDocument:void save(java.io.File)",
            "org.apache.pdfbox.pdmodel.fdf.FDFDocument:void save(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.SigningSupport:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.io.IOUtils:void closeQuietly(java.io.Closeable)",
            "org.apache.pdfbox.io.IOUtils:java.io.IOException closeAndLogException(java.io.Closeable,org.apache.commons.logging.Log,java.lang.String,java.io.IOException)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateCreator:java.io.InputStream getVisualSignatureAsStream(org.apache.pdfbox.cos.COSDocument)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateCreator:java.io.InputStream buildPDF(org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner)"
        ]
    },
    "org.apache.pdfbox.multipdf.LayerUtility:org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup appendFormAsLayer(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject,java.awt.geom.AffineTransform,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode,boolean)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage,boolean,boolean,boolean)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void flatten(java.util.List,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void initializeAppearanceContent(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void setAppearanceValue(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void setAppearanceContent(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void flatten(java.util.List,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void flatten()"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.PDMetadata:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.LayerUtility:org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject importPageAsForm(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDPage importPage(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildToUnicodeCMap(java.util.Map)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildCIDToGIDMap(java.util.Map)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildCIDSet(java.util.Map)",
            "org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,java.io.InputStream,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",
            "org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,org.apache.fontbox.ttf.TrueTypeFont,boolean)",
            "org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:void buildFontFile2(java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:org.apache.pdfbox.pdmodel.common.PDStream configureOutputProfile(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSArray)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void decrypt(org.apache.pdfbox.cos.COSBase,long,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:void parseFileObject(java.lang.Long,org.apache.pdfbox.cos.COSObjectKey,org.apache.pdfbox.cos.COSObject)",
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void decryptDictionary(org.apache.pdfbox.cos.COSDictionary,long,long)",
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void decryptArray(org.apache.pdfbox.cos.COSArray,long,long)"
        ]
    },
    "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromStream(org.apache.pdfbox.cos.COSStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSStream:java.lang.Object accept(org.apache.pdfbox.cos.ICOSVisitor)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSBase,int,int,int,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject prepareImageXObject(org.apache.pdfbox.pdmodel.PDDocument,byte[],int,int,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromRandomAccessImpl(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.io.RandomAccess,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromByteArray(org.apache.pdfbox.pdmodel.PDDocument,byte[])",
            "org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createJPEG(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject prepareImageXObject(org.apache.pdfbox.pdmodel.PDDocument,byte[],int,int,int,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void injectAppearanceStreams(org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateCreator:java.io.InputStream buildPDF(org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void setAppearanceContent(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void setAppearanceValue(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromFileByExtension(java.io.File,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromFileByContent(java.io.File,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromByteArray(org.apache.pdfbox.pdmodel.PDDocument,byte[],java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createSignatureImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage)"
        ]
    },
    "org.apache.pdfbox.cos.COSStream:org.apache.pdfbox.cos.COSInputStream createInputStream()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSStream:java.io.InputStream getUnfilteredStream()",
            "org.apache.pdfbox.cos.COSStream:java.lang.String toTextString()",
            "org.apache.pdfbox.filter.JBIG2Filter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int,org.apache.pdfbox.filter.DecodeOptions)",
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.cos.COSStream createContentStream(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.multipdf.PDFCloneUtility:void cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdfparser.COSParser:void bfSearchForObjStreams()",
            "org.apache.pdfbox.pdfparser.PDFObjectStreamParser:void <init>(org.apache.pdfbox.cos.COSStream,org.apache.pdfbox.cos.COSDocument)",
            "org.apache.pdfbox.pdfparser.PDFStreamParser:void <init>(org.apache.pdfbox.cos.COSStream)",
            "org.apache.pdfbox.pdfparser.PDFXrefStreamParser:void <init>(org.apache.pdfbox.cos.COSStream,org.apache.pdfbox.cos.COSDocument,org.apache.pdfbox.pdfparser.XrefTrailerResolver)",
            "org.apache.pdfbox.pdmodel.PDPage:java.io.InputStream getContents()",
            "org.apache.pdfbox.pdmodel.common.PDStream:void addCompression()",
            "org.apache.pdfbox.pdmodel.common.PDStream:org.apache.pdfbox.cos.COSInputStream createInputStream()",
            "org.apache.pdfbox.pdmodel.font.PDCIDFont:int[] readCIDToGIDMap()",
            "org.apache.pdfbox.pdmodel.font.PDFont:org.apache.fontbox.cmap.CMap readCMap(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.font.PDType3CharProc:java.io.InputStream getContents()",
            "org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:java.io.InputStream getContents()",
            "org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:java.io.InputStream getContents()",
            "org.apache.pdfbox.pdmodel.graphics.shading.PatchMeshesShadingContext:java.util.List collectPatches(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType6,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,int)",
            "org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext:java.util.List collectTriangles(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)",
            "org.apache.pdfbox.pdmodel.graphics.shading.Type5ShadingContext:java.util.List collectTriangles(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDXFAResource:byte[] getBytes()"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDStream:org.apache.pdfbox.cos.COSInputStream createInputStream(org.apache.pdfbox.filter.DecodeOptions)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:java.io.InputStream createInputStream(org.apache.pdfbox.filter.DecodeOptions)"
        ]
    },
    "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(java.lang.String,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.operator.graphics.CloseAndStrokePath:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.graphics.CloseFillEvenOddAndStrokePath:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.graphics.CloseFillNonZeroAndStrokePath:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.text.MoveTextSetLeading:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.text.NextLine:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.text.ShowTextLine:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.text.ShowTextLineAndSpace:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.File,org.apache.pdfbox.io.MemoryUsageSetting)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.File,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.File,java.lang.String,org.apache.pdfbox.io.MemoryUsageSetting)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.File)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.File,java.lang.String,java.io.InputStream,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:void calculatePageSizeFromStream(java.io.InputStream,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.InputStream,org.apache.pdfbox.io.MemoryUsageSetting)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void optimizedMergeDocuments(org.apache.pdfbox.io.MemoryUsageSetting,java.util.List)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void legacyMergeDocuments(org.apache.pdfbox.io.MemoryUsageSetting)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.InputStream,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.InputStream,java.lang.String,java.io.InputStream,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.InputStream,java.lang.String,org.apache.pdfbox.io.MemoryUsageSetting)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(byte[],java.lang.String,java.io.InputStream,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(byte[],java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions:void setVisualSignature(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions:void setVisualSignature(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions:void setVisualSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigProperties)"
        ]
    },
    "org.apache.pdfbox.contentstream.PDFStreamEngine:void showTransparencyGroup(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.operator.DrawObject:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.graphics.DrawObject:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.markedcontent.DrawObject:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.contentstream.PDFStreamEngine:void processSoftMask(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:void access$1500(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup)"
        ]
    },
    "org.apache.pdfbox.rendering.PageDrawer:void access$1600(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup:void <init>(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup,boolean,org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.graphics.color.PDColor)"
        ]
    },
    "org.apache.pdfbox.contentstream.PDFStreamEngine:void showType3Glyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDType3Font,int,java.lang.String,org.apache.pdfbox.util.Vector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void showGlyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDFont,int,java.lang.String,org.apache.pdfbox.util.Vector)"
        ]
    },
    "org.apache.pdfbox.contentstream.PDFStreamEngine:void showAnnotation(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:void showAnnotation(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation)"
        ]
    },
    "org.apache.pdfbox.contentstream.PDFStreamEngine:void processTilingPattern(org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColor,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.rendering.PageDrawer:void drawTilingPattern(java.awt.Graphics2D,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDColor,org.apache.pdfbox.util.Matrix)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.TilingPaint:java.awt.image.BufferedImage getImage(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDColor,java.awt.geom.AffineTransform,java.awt.geom.Rectangle2D)"
        ]
    },
    "org.apache.pdfbox.contentstream.PDFStreamEngine:void processPage(org.apache.pdfbox.pdmodel.PDPage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:void drawPage(java.awt.Graphics,org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.text.LegacyPDFStreamEngine:void processPage(org.apache.pdfbox.pdmodel.PDPage)"
        ]
    },
    "org.apache.pdfbox.contentstream.PDFStreamEngine:void showForm(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.operator.DrawObject:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.graphics.DrawObject:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.markedcontent.DrawObject:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.contentstream.PDFStreamEngine:void processChildStream(org.apache.pdfbox.contentstream.PDContentStream,org.apache.pdfbox.pdmodel.PDPage)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDType3Font:org.apache.fontbox.util.BoundingBox getBoundingBox()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,java.io.OutputStream)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedSelectionHighlight(org.apache.pdfbox.pdmodel.PDPageContentStream,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedListboxAppearance(org.apache.pdfbox.pdmodel.PDPageContentStream,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,org.apache.pdfbox.pdmodel.common.PDRectangle,org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:float calculateFontSize(org.apache.pdfbox.pdmodel.font.PDFont,org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.text.LegacyPDFStreamEngine:void showGlyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDFont,int,java.lang.String,org.apache.pdfbox.util.Vector)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFont:float getWidth(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDFont:org.apache.pdfbox.util.Vector getDisplacement(int)",
            "org.apache.pdfbox.pdmodel.font.PDFont:float getStringWidth(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.PDFont:float getSpaceWidth()",
            "org.apache.pdfbox.text.LegacyPDFStreamEngine:void showGlyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDFont,int,java.lang.String,org.apache.pdfbox.util.Vector)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFont:float getSpaceWidth()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.text.LegacyPDFStreamEngine:void showGlyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDFont,int,java.lang.String,org.apache.pdfbox.util.Vector)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType3Font:float getWidth(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDFont:org.apache.pdfbox.util.Vector getDisplacement(int)",
            "org.apache.pdfbox.pdmodel.font.PDFont:float getStringWidth(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.PDFont:float getSpaceWidth()",
            "org.apache.pdfbox.pdmodel.font.PDType3Font:org.apache.pdfbox.util.Vector getDisplacement(int)",
            "org.apache.pdfbox.text.LegacyPDFStreamEngine:void showGlyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDFont,int,java.lang.String,org.apache.pdfbox.util.Vector)"
        ]
    },
    "org.apache.pdfbox.rendering.PageDrawer:void drawGlyph2D(org.apache.pdfbox.rendering.Glyph2D,org.apache.pdfbox.pdmodel.font.PDFont,int,org.apache.pdfbox.util.Vector,java.awt.geom.AffineTransform)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:void showFontGlyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDFont,int,java.lang.String,org.apache.pdfbox.util.Vector)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString getWidgetDefaultAppearanceString(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void setAppearanceValue(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString getDefaultAppearanceString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void <init>(org.apache.pdfbox.pdmodel.interactive.form.PDVariableText)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromFile(java.lang.String,org.apache.pdfbox.pdmodel.PDDocument)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdfparser.COSParser:long checkXRefOffset(long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:org.apache.pdfbox.cos.COSDictionary parseXref(long)"
        ]
    },
    "org.apache.pdfbox.cos.COSStream:java.lang.String getString()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:java.lang.String getStringOrStream(org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:java.lang.String getRichContents()"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFField:java.lang.Object getValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void writeXML(java.io.Writer)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFField:java.lang.String getRichText()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void writeXML(java.io.Writer)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:java.lang.String getBefore()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:java.lang.String getAfter()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.action.PDActionJavaScript:java.lang.String getAction()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:java.lang.String getRichContents()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDField:void importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:void importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:void importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:java.lang.String getStringOrStream(org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:java.lang.String getValue()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:java.lang.String getDefaultValue()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:java.lang.String getRichTextValue()"
        ]
    },
    "org.apache.pdfbox.io.RandomAccessBufferedFileInputStream:void <init>(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeDocuments(org.apache.pdfbox.io.MemoryUsageSetting)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeDocuments()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:void <init>(org.apache.pdfbox.pdmodel.font.FontCache)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl$DefaultFontProvider:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:org.apache.fontbox.type1.Type1Font access$100(org.apache.pdfbox.pdmodel.font.FileSystemFontProvider,java.lang.String,java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider$FSFontInfo:org.apache.fontbox.FontBoxFont getFont()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDFontType0:void <init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDFontFactory:org.apache.pdfbox.pdmodel.font.PDCIDFont createDescendantFont(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDFontType2:void <init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font,org.apache.fontbox.ttf.TrueTypeFont)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2:void <init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:org.apache.pdfbox.pdmodel.font.PDCIDFont getCIDFont()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFont:void <init>(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.font.PDType0Font:void <init>(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType0Font:void readEncoding()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType0Font:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.font.PDType0Font:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.fontbox.ttf.TrueTypeFont,boolean,boolean,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildSubset(java.io.InputStream,java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:void subset()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:void <init>(org.apache.pdfbox.cos.COSArray)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace create(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.pdmodel.PDResources,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createJPEG(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.PDXObject:org.apache.pdfbox.pdmodel.graphics.PDXObject createXObject(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.pdmodel.PDResources)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.pdmodel.graphics.PDXObject getXObject(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDObjectReference:org.apache.pdfbox.pdmodel.common.COSObjectable getReferencedObject()",
            "org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask:org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup getGroup()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:void <init>(org.apache.pdfbox.pdmodel.PDDocument)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createThumbnail(org.apache.pdfbox.cos.COSStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject getMask()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:java.awt.image.BufferedImage getImage(java.awt.Rectangle,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject getSoftMask()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:java.awt.image.BufferedImage getImage(java.awt.Rectangle,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage getRGBImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle,int,org.apache.pdfbox.cos.COSArray)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:java.awt.image.BufferedImage getImage(java.awt.Rectangle,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:java.awt.image.BufferedImage getImage(java.awt.Rectangle,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage getRGBImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage,org.apache.pdfbox.cos.COSArray)"
        ]
    },
    "org.apache.pdfbox.cos.COSDocument:void finalize()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDocument:void <init>()",
            "org.apache.pdfbox.cos.COSDocument:void <init>(org.apache.pdfbox.io.ScratchFile)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFDocument:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.io.IOUtils:void closeQuietly(java.io.Closeable)",
            "org.apache.pdfbox.io.IOUtils:java.io.IOException closeAndLogException(java.io.Closeable,org.apache.commons.logging.Log,java.lang.String,java.io.IOException)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.io.IOUtils:void closeQuietly(java.io.Closeable)",
            "org.apache.pdfbox.io.IOUtils:java.io.IOException closeAndLogException(java.io.Closeable,org.apache.commons.logging.Log,java.lang.String,java.io.IOException)"
        ]
    },
    "org.apache.pdfbox.multipdf.Overlay:void close()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateCreator:java.io.InputStream buildPDF(org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigProperties:void buildSignature()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateStructure:java.io.ByteArrayInputStream getTemplateAppearanceStream()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void closeTemplate(org.apache.pdfbox.pdmodel.PDDocument)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:void calculatePageSizeFromFile(java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:void <init>(java.lang.String,java.io.InputStream,int)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:void <init>(java.lang.String,java.awt.image.BufferedImage,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:void calculatePageSizeFromStream(java.io.InputStream,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:void <init>(java.io.InputStream,java.io.InputStream,int)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:void <init>(java.io.InputStream,java.awt.image.BufferedImage,int)"
        ]
    },
    "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.pdmodel.PDDocument overlay(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.multipdf.Overlay:void loadPDFs()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.pdmodel.PDDocument overlay(java.util.Map)"
        ]
    },
    "org.apache.pdfbox.multipdf.Overlay:void overlayPage(org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.PDPage,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.Overlay:void processPages(org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.multipdf.PDFMergerUtility:void updatePageReferences(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.cos.COSArray,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void updatePageReferences(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.cos.COSDictionary,java.util.Map)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void updatePageReferences(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.cos.COSArray,java.util.Map)"
        ]
    },
    "org.apache.pdfbox.multipdf.LayerUtility:org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject importPageAsForm(org.apache.pdfbox.pdmodel.PDDocument,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromDocument(org.apache.pdfbox.cos.COSDocument)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDocument:java.lang.Object accept(org.apache.pdfbox.cos.ICOSVisitor)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:void save(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:void save(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFDocument:void save(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFDocument:void save(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.LayerUtility:org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup appendFormAsLayer(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject,java.awt.geom.AffineTransform,java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void flatten(java.util.List,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage,boolean,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage,boolean,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void setAppearanceValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDComboBox:void constructAppearances()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDListBox:void constructAppearances()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:void constructAppearances()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void flatten()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.PDMetadata:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDPage importPage(org.apache.pdfbox.pdmodel.PDPage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PageExtractor:org.apache.pdfbox.pdmodel.PDDocument extract()",
            "org.apache.pdfbox.multipdf.Splitter:void processPage(org.apache.pdfbox.pdmodel.PDPage)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildToUnicodeCMap(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,org.apache.fontbox.ttf.TrueTypeFont,boolean,org.apache.pdfbox.pdmodel.font.PDType0Font,boolean)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildSubset(java.io.InputStream,java.lang.String,java.util.Map)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildCIDToGIDMap(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildSubset(java.io.InputStream,java.lang.String,java.util.Map)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildCIDSet(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void buildSubset(java.io.InputStream,java.lang.String,java.util.Map)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,java.io.InputStream,org.apache.pdfbox.pdmodel.font.encoding.Encoding)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType1Font:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.pdmodel.font.encoding.Encoding)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,org.apache.fontbox.ttf.TrueTypeFont,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,org.apache.fontbox.ttf.TrueTypeFont,boolean,org.apache.pdfbox.pdmodel.font.PDType0Font,boolean)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,org.apache.fontbox.ttf.TrueTypeFont,org.apache.pdfbox.pdmodel.font.encoding.Encoding)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:org.apache.pdfbox.pdmodel.common.PDStream configureOutputProfile(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void decryptDictionary(org.apache.pdfbox.cos.COSDictionary,long,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void decrypt(org.apache.pdfbox.cos.COSBase,long,long)",
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void decryptStream(org.apache.pdfbox.cos.COSStream,long,long)"
        ]
    },
    "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void decryptArray(org.apache.pdfbox.cos.COSArray,long,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.encryption.SecurityHandler:void decrypt(org.apache.pdfbox.cos.COSBase,long,long)"
        ]
    },
    "org.apache.pdfbox.cos.COSStream:java.lang.Object accept(org.apache.pdfbox.cos.ICOSVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSObject:java.lang.Object accept(org.apache.pdfbox.cos.ICOSVisitor)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteObject(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteTrailer(org.apache.pdfbox.cos.COSDocument)",
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromArray(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromDictionary(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromByteArray(org.apache.pdfbox.pdmodel.PDDocument,byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromStream(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromByteArray(org.apache.pdfbox.pdmodel.PDDocument,byte[],java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createSignatureImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateCreator:java.io.InputStream buildPDF(org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner)"
        ]
    },
    "org.apache.pdfbox.cos.COSStream:java.io.InputStream getUnfilteredStream()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.filter.JBIG2Filter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int,org.apache.pdfbox.filter.DecodeOptions)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSInputStream:org.apache.pdfbox.cos.COSInputStream create(java.util.List,org.apache.pdfbox.cos.COSDictionary,java.io.InputStream,org.apache.pdfbox.io.ScratchFile,org.apache.pdfbox.filter.DecodeOptions)",
            "org.apache.pdfbox.filter.JBIG2Filter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)"
        ]
    },
    "org.apache.pdfbox.pdfparser.PDFObjectStreamParser:void <init>(org.apache.pdfbox.cos.COSStream,org.apache.pdfbox.cos.COSDocument)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDocument:void dereferenceObjectStreams()",
            "org.apache.pdfbox.pdfparser.COSParser:void parseObjectStream(int)"
        ]
    },
    "org.apache.pdfbox.pdfparser.PDFStreamParser:void <init>(org.apache.pdfbox.cos.COSStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdfparser.PDFXrefStreamParser:void <init>(org.apache.pdfbox.cos.COSStream,org.apache.pdfbox.cos.COSDocument,org.apache.pdfbox.pdfparser.XrefTrailerResolver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.COSParser:void parseXrefStream(org.apache.pdfbox.cos.COSStream,long,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPage:java.io.InputStream getContents()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.LayerUtility:org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject importPageAsForm(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.pdfparser.PDFStreamParser:void <init>(org.apache.pdfbox.contentstream.PDContentStream)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDPage importPage(org.apache.pdfbox.pdmodel.PDPage)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.PDStream:org.apache.pdfbox.cos.COSInputStream createInputStream()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.PDFStreamParser:void <init>(org.apache.pdfbox.pdmodel.common.PDStream)",
            "org.apache.pdfbox.pdmodel.common.PDMetadata:java.io.InputStream exportXMPMetadata()",
            "org.apache.pdfbox.pdmodel.common.PDStream:byte[] toByteArray()",
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:int[][] getSamples()",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType0$ByteSource:byte[] getBytes()",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType0:void <init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2:void <init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font,org.apache.fontbox.ttf.TrueTypeFont)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.font.PDType1CFont$ByteSource:byte[] getBytes()",
            "org.apache.pdfbox.pdmodel.font.PDType1CFont:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:void buildFontFile2(java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:void loadICCProfile()",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:void <init>(org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.PDResources)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:java.io.InputStream createInputStream()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType3CharProc:java.io.InputStream getContents()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.PDFStreamParser:void <init>(org.apache.pdfbox.contentstream.PDContentStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:java.io.InputStream getContents()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.PDFStreamParser:void <init>(org.apache.pdfbox.contentstream.PDContentStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:java.io.InputStream getContents()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.PDFStreamParser:void <init>(org.apache.pdfbox.contentstream.PDContentStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.PatchMeshesShadingContext:java.util.List collectPatches(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType6,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.PatchMeshesShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType6,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext:java.util.List collectTriangles(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.Type5ShadingContext:java.util.List collectTriangles(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.Type5ShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDXFAResource:byte[] getBytes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDXFAResource:org.w3c.dom.Document getDocument()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:java.io.InputStream createInputStream(org.apache.pdfbox.filter.DecodeOptions)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage from1Bit(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle,int,int,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage from8bit(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster,java.awt.Rectangle,int,int,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage fromAny(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster,org.apache.pdfbox.cos.COSArray,java.awt.Rectangle,int,int,int)"
        ]
    },
    "org.apache.pdfbox.contentstream.operator.graphics.CloseAndStrokePath:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.contentstream.operator.graphics.CloseFillEvenOddAndStrokePath:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.contentstream.operator.graphics.CloseFillNonZeroAndStrokePath:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.contentstream.operator.text.MoveTextSetLeading:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.contentstream.operator.text.NextLine:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.contentstream.operator.text.ShowTextLine:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.contentstream.operator.text.ShowTextLineAndSpace:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.pdmodel.PDDocument loadPDF(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:void calculatePageSizeFromFile(java.lang.String,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(byte[],java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(byte[])"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions:void setVisualSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigProperties)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.contentstream.operator.DrawObject:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.contentstream.operator.graphics.DrawObject:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.contentstream.operator.markedcontent.DrawObject:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.rendering.PageDrawer:void access$1500(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup:void <init>(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup,boolean,org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.graphics.color.PDColor)"
        ]
    },
    "org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup:void <init>(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup,boolean,org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.graphics.color.PDColor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup:void <init>(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup,boolean,org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.graphics.color.PDColor,org.apache.pdfbox.rendering.PageDrawer$1)"
        ]
    },
    "org.apache.pdfbox.contentstream.PDFStreamEngine:void showGlyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDFont,int,java.lang.String,org.apache.pdfbox.util.Vector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void showText(byte[])"
        ]
    },
    "org.apache.pdfbox.rendering.PageDrawer:void showAnnotation(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:void drawPage(java.awt.Graphics,org.apache.pdfbox.pdmodel.common.PDRectangle)"
        ]
    },
    "org.apache.pdfbox.rendering.TilingPaint:java.awt.image.BufferedImage getImage(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDColor,java.awt.geom.AffineTransform,java.awt.geom.Rectangle2D)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.TilingPaint:void <init>(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDColor,java.awt.geom.AffineTransform)"
        ]
    },
    "org.apache.pdfbox.rendering.PageDrawer:void drawPage(java.awt.Graphics,org.apache.pdfbox.pdmodel.common.PDRectangle)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PDFRenderer:java.awt.image.BufferedImage renderImage(int,float,org.apache.pdfbox.rendering.ImageType)",
            "org.apache.pdfbox.rendering.PDFRenderer:void renderPageToGraphics(int,java.awt.Graphics2D,float,float)"
        ]
    },
    "org.apache.pdfbox.text.LegacyPDFStreamEngine:void processPage(org.apache.pdfbox.pdmodel.PDPage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.text.PDFMarkedContentExtractor:void processPage(org.apache.pdfbox.pdmodel.PDPage)",
            "org.apache.pdfbox.text.PDFTextStripper:void processPage(org.apache.pdfbox.pdmodel.PDPage)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedSelectionHighlight(org.apache.pdfbox.pdmodel.PDPageContentStream,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,org.apache.pdfbox.pdmodel.font.PDFont,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,java.io.OutputStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedListboxAppearance(org.apache.pdfbox.pdmodel.PDPageContentStream,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,org.apache.pdfbox.pdmodel.common.PDRectangle,org.apache.pdfbox.pdmodel.font.PDFont,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,java.io.OutputStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:float calculateFontSize(org.apache.pdfbox.pdmodel.font.PDFont,org.apache.pdfbox.pdmodel.common.PDRectangle)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,java.io.OutputStream)"
        ]
    },
    "org.apache.pdfbox.text.LegacyPDFStreamEngine:void showGlyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDFont,int,java.lang.String,org.apache.pdfbox.util.Vector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void showText(byte[])"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFont:org.apache.pdfbox.util.Vector getDisplacement(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void showText(byte[])",
            "org.apache.pdfbox.pdmodel.font.PDType0Font:org.apache.pdfbox.util.Vector getDisplacement(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFont:float getStringWidth(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedCombAppearance(org.apache.pdfbox.pdmodel.PDPageContentStream,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedListboxAppearance(org.apache.pdfbox.pdmodel.PDPageContentStream,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,org.apache.pdfbox.pdmodel.common.PDRectangle,org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:float calculateFontSize(org.apache.pdfbox.pdmodel.font.PDFont,org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line:float calculateWidth(org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph:java.util.List getLines(org.apache.pdfbox.pdmodel.font.PDFont,float,float)",
            "org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter:void format()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType3Font:org.apache.pdfbox.util.Vector getDisplacement(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void showText(byte[])"
        ]
    },
    "org.apache.pdfbox.rendering.PageDrawer:void showFontGlyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDFont,int,java.lang.String,org.apache.pdfbox.util.Vector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void showGlyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDFont,int,java.lang.String,org.apache.pdfbox.util.Vector)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void <init>(org.apache.pdfbox.pdmodel.interactive.form.PDVariableText)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDComboBox:void constructAppearances()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDListBox:void constructAppearances()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:void constructAppearances()"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:java.lang.String getRichContents()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFField:void writeXML(java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void writeXML(java.io.Writer)",
            "org.apache.pdfbox.pdmodel.fdf.FDFField:void writeXML(java.io.Writer)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:void importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void importFDF(org.apache.pdfbox.pdmodel.fdf.FDFDocument)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:void importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:void importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void importFDF(org.apache.pdfbox.pdmodel.fdf.FDFDocument)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:void importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:java.lang.String getValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:java.lang.String getValueAsString()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:void constructAppearances()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:java.lang.String getDefaultValue()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:java.lang.String getRichTextValue()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.multipdf.PDFMergerUtility:void mergeDocuments()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.FontMapperImpl$DefaultFontProvider:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl$DefaultFontProvider:org.apache.pdfbox.pdmodel.font.FontProvider access$100()",
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl$DefaultFontProvider:void <clinit>()",
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:org.apache.pdfbox.pdmodel.font.FontProvider getProvider()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.FileSystemFontProvider$FSFontInfo:org.apache.fontbox.FontBoxFont getFont()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:org.apache.fontbox.FontBoxFont findFont(org.apache.pdfbox.pdmodel.font.FontFormat,java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:org.apache.pdfbox.pdmodel.font.CIDFontMapping getCIDFont(java.lang.String,org.apache.pdfbox.pdmodel.font.PDFontDescriptor,org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFontFactory:org.apache.pdfbox.pdmodel.font.PDCIDFont createDescendantFont(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType0Font:void <init>(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDFontType2:void <init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDFontFactory:org.apache.pdfbox.pdmodel.font.PDCIDFont createDescendantFont(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:org.apache.pdfbox.pdmodel.font.PDCIDFont getCIDFont()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType0Font:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.fontbox.ttf.TrueTypeFont,boolean,boolean,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDSimpleFont:void <init>(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.font.PDType1CFont:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.font.PDType3Font:void <init>(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType0Font:void <init>(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDFontFactory:org.apache.pdfbox.pdmodel.font.PDFont createFont(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType0Font:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.fontbox.ttf.TrueTypeFont,boolean,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType0Font:org.apache.pdfbox.pdmodel.font.PDType0Font load(org.apache.pdfbox.pdmodel.PDDocument,java.io.File)",
            "org.apache.pdfbox.pdmodel.font.PDType0Font:org.apache.pdfbox.pdmodel.font.PDType0Font load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.font.PDType0Font:org.apache.pdfbox.pdmodel.font.PDType0Font load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,boolean)",
            "org.apache.pdfbox.pdmodel.font.PDType0Font:org.apache.pdfbox.pdmodel.font.PDType0Font load(org.apache.pdfbox.pdmodel.PDDocument,org.apache.fontbox.ttf.TrueTypeFont,boolean)",
            "org.apache.pdfbox.pdmodel.font.PDType0Font:org.apache.pdfbox.pdmodel.font.PDType0Font loadVertical(org.apache.pdfbox.pdmodel.PDDocument,java.io.File)",
            "org.apache.pdfbox.pdmodel.font.PDType0Font:org.apache.pdfbox.pdmodel.font.PDType0Font loadVertical(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.font.PDType0Font:org.apache.pdfbox.pdmodel.font.PDType0Font loadVertical(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,boolean)",
            "org.apache.pdfbox.pdmodel.font.PDType0Font:org.apache.pdfbox.pdmodel.font.PDType0Font loadVertical(org.apache.pdfbox.pdmodel.PDDocument,org.apache.fontbox.ttf.TrueTypeFont,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:void subset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType0Font:void subset()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace create(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.pdmodel.PDResources,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace(org.apache.pdfbox.cos.COSName,boolean)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace create(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.pdmodel.PDResources)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace create(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.pdmodel.PDResources,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.pdmodel.graphics.PDXObject getXObject(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.operator.DrawObject:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.graphics.DrawObject:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.markedcontent.DrawObject:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:boolean resolveNeedsTranslation(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDObjectReference:org.apache.pdfbox.pdmodel.common.COSObjectable getReferencedObject()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask:org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup getGroup()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:java.awt.Paint applySoftMaskToPaint(java.awt.Paint,org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:java.awt.image.BufferedImage getImage(java.awt.Rectangle,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:java.awt.image.BufferedImage getImage()",
            "org.apache.pdfbox.rendering.PageDrawer:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:java.awt.image.BufferedImage getImage(java.awt.Rectangle,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage getRGBImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage,org.apache.pdfbox.cos.COSArray)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:java.awt.image.BufferedImage getOpaqueImage()",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:java.awt.image.BufferedImage getImage()"
        ]
    },
    "org.apache.pdfbox.cos.COSDocument:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.FDFParser:void init()",
            "org.apache.pdfbox.pdmodel.fdf.FDFDocument:void <init>()"
        ]
    },
    "org.apache.pdfbox.cos.COSDocument:void <init>(org.apache.pdfbox.io.ScratchFile)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDocument:void <init>()",
            "org.apache.pdfbox.pdfparser.PDFParser:void init(org.apache.pdfbox.io.ScratchFile)",
            "org.apache.pdfbox.pdmodel.PDDocument:void <init>(org.apache.pdfbox.io.MemoryUsageSetting)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigProperties:void buildSignature()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:void <init>(java.lang.String,java.io.InputStream,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:void <init>(java.lang.String,java.awt.image.BufferedImage,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:void <init>(java.io.InputStream,java.io.InputStream,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:void <init>(java.io.InputStream,java.awt.image.BufferedImage,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.cos.COSDocument:java.lang.Object accept(org.apache.pdfbox.cos.ICOSVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSObject:java.lang.Object accept(org.apache.pdfbox.cos.ICOSVisitor)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteObject(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromArray(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromDictionary(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void write(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void write(org.apache.pdfbox.pdmodel.fdf.FDFDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:void save(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void optimizedMergeDocuments(org.apache.pdfbox.io.MemoryUsageSetting,java.util.List)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void legacyMergeDocuments(org.apache.pdfbox.io.MemoryUsageSetting)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDComboBox:void constructAppearances()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void refreshAppearances()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void refreshAppearances(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:void applyChange()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDListBox:void constructAppearances()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void refreshAppearances()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void refreshAppearances(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:void applyChange()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:void constructAppearances()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void refreshAppearances()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void refreshAppearances(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:void applyChange()"
        ]
    },
    "org.apache.pdfbox.multipdf.PageExtractor:org.apache.pdfbox.pdmodel.PDDocument extract()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.multipdf.Splitter:void processPage(org.apache.pdfbox.pdmodel.PDPage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.Splitter:void processPages()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,org.apache.fontbox.ttf.TrueTypeFont,boolean,org.apache.pdfbox.pdmodel.font.PDType0Font,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType0Font:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.fontbox.ttf.TrueTypeFont,boolean,boolean,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType1Font:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDType1Font:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.pdmodel.font.encoding.Encoding)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,org.apache.fontbox.ttf.TrueTypeFont,org.apache.pdfbox.pdmodel.font.encoding.Encoding)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.fontbox.ttf.TrueTypeFont,org.apache.pdfbox.pdmodel.font.encoding.Encoding,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.cos.COSObject:java.lang.Object accept(org.apache.pdfbox.cos.ICOSVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSObject:java.lang.Object accept(org.apache.pdfbox.cos.ICOSVisitor)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteObject(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromArray(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromDictionary(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteObject(org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteObjects()",
            "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteXRefInc(org.apache.pdfbox.cos.COSDocument,long)"
        ]
    },
    "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteTrailer(org.apache.pdfbox.cos.COSDocument)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteXRefInc(org.apache.pdfbox.cos.COSDocument,long)",
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromDocument(org.apache.pdfbox.cos.COSDocument)"
        ]
    },
    "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromArray(org.apache.pdfbox.cos.COSArray)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSArray:java.lang.Object accept(org.apache.pdfbox.cos.ICOSVisitor)"
        ]
    },
    "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromDictionary(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDictionary:java.lang.Object accept(org.apache.pdfbox.cos.ICOSVisitor)",
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromArray(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromDictionary(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromStream(org.apache.pdfbox.cos.COSStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromStream(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromFileByExtension(java.io.File,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromFileByContent(java.io.File,org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.filter.JBIG2Filter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.filter.Filter:org.apache.pdfbox.filter.DecodeResult decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int,org.apache.pdfbox.filter.DecodeOptions)",
            "org.apache.pdfbox.pdmodel.common.PDStream:java.io.InputStream createInputStream(java.util.List)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:void <init>(org.apache.pdfbox.cos.COSDictionary,byte[],org.apache.pdfbox.pdmodel.PDResources)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:java.io.InputStream createInputStream(java.util.List)"
        ]
    },
    "org.apache.pdfbox.pdfparser.PDFStreamParser:void <init>(org.apache.pdfbox.contentstream.PDContentStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processStreamOperators(org.apache.pdfbox.contentstream.PDContentStream)",
            "org.apache.pdfbox.pdmodel.font.PDType3CharProc:org.apache.pdfbox.pdmodel.common.PDRectangle getGlyphBBox()",
            "org.apache.pdfbox.pdmodel.font.PDType3CharProc:float getWidth()",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:java.util.List tokenize(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)"
        ]
    },
    "org.apache.pdfbox.pdfparser.PDFStreamParser:void <init>(org.apache.pdfbox.pdmodel.common.PDStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.PDMetadata:java.io.InputStream exportXMPMetadata()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.PDStream:byte[] toByteArray()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType4:void <init>(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:byte[] getLookupData()"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:int[][] getSamples()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:int[][] access$000(org.apache.pdfbox.pdmodel.common.function.PDFunctionType0)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDFontType0$ByteSource:byte[] getBytes()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:void <init>(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDFontFactory:org.apache.pdfbox.pdmodel.font.PDFont createFont(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType1CFont$ByteSource:byte[] getBytes()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDType1CFont:void <init>(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDFontFactory:org.apache.pdfbox.pdmodel.font.PDFont createFont(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:java.io.InputStream createInputStream()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage getStencilImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Paint)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.PatchMeshesShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType6,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.Type6ShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType6,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)",
            "org.apache.pdfbox.pdmodel.graphics.shading.Type7ShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType7,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingPaint:java.awt.PaintContext createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.Type5ShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.Type5ShadingPaint:java.awt.PaintContext createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDXFAResource:org.w3c.dom.Document getDocument()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage from1Bit(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle,int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage getRGBImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle,int,org.apache.pdfbox.cos.COSArray)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage fromAny(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster,org.apache.pdfbox.cos.COSArray,java.awt.Rectangle,int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage getRGBImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle,int,org.apache.pdfbox.cos.COSArray)"
        ]
    },
    "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.pdmodel.PDDocument loadPDF(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.pdmodel.PDDocument overlay(java.util.Map)",
            "org.apache.pdfbox.multipdf.Overlay:void loadPDFs()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup:void <init>(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup,boolean,org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.graphics.color.PDColor,org.apache.pdfbox.rendering.PageDrawer$1)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:java.awt.Paint applySoftMaskToPaint(java.awt.Paint,org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask)",
            "org.apache.pdfbox.rendering.PageDrawer:void showTransparencyGroup(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup)"
        ]
    },
    "org.apache.pdfbox.contentstream.PDFStreamEngine:void showText(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void showTextString(byte[])",
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void showTextStrings(org.apache.pdfbox.cos.COSArray)"
        ]
    },
    "org.apache.pdfbox.rendering.TilingPaint:void <init>(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDColor,java.awt.geom.AffineTransform)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.TilingPaint:void <init>(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,java.awt.geom.AffineTransform)",
            "org.apache.pdfbox.rendering.TilingPaintFactory:org.apache.pdfbox.rendering.TilingPaint create(org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDColor,java.awt.geom.AffineTransform)"
        ]
    },
    "org.apache.pdfbox.rendering.PDFRenderer:java.awt.image.BufferedImage renderImage(int,float,org.apache.pdfbox.rendering.ImageType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PDFRenderer:java.awt.image.BufferedImage renderImage(int,float)",
            "org.apache.pdfbox.rendering.PDFRenderer:java.awt.image.BufferedImage renderImageWithDPI(int,float)",
            "org.apache.pdfbox.rendering.PDFRenderer:java.awt.image.BufferedImage renderImageWithDPI(int,float,org.apache.pdfbox.rendering.ImageType)"
        ]
    },
    "org.apache.pdfbox.rendering.PDFRenderer:void renderPageToGraphics(int,java.awt.Graphics2D,float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PDFRenderer:void renderPageToGraphics(int,java.awt.Graphics2D,float)"
        ]
    },
    "org.apache.pdfbox.text.PDFMarkedContentExtractor:void processPage(org.apache.pdfbox.pdmodel.PDPage)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.text.PDFTextStripper:void processPage(org.apache.pdfbox.pdmodel.PDPage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.text.PDFTextStripper:void processPages(org.apache.pdfbox.pdmodel.PDPageTree)",
            "org.apache.pdfbox.text.PDFTextStripperByArea:void extractRegions(org.apache.pdfbox.pdmodel.PDPage)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType0Font:org.apache.pdfbox.util.Vector getDisplacement(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void showText(byte[])"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedCombAppearance(org.apache.pdfbox.pdmodel.PDPageContentStream,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,org.apache.pdfbox.pdmodel.font.PDFont,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,java.io.OutputStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PlainText$Line:float calculateWidth(org.apache.pdfbox.pdmodel.font.PDFont,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph:java.util.List getLines(org.apache.pdfbox.pdmodel.font.PDFont,float,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PlainText$Paragraph:java.util.List getLines(org.apache.pdfbox.pdmodel.font.PDFont,float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter:void format()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter:void format()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,java.io.OutputStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFDictionary:void writeXML(java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFCatalog:void writeXML(java.io.Writer)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void importFDF(org.apache.pdfbox.pdmodel.fdf.FDFDocument)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:java.lang.String getValueAsString()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.FontMapperImpl$DefaultFontProvider:org.apache.pdfbox.pdmodel.font.FontProvider access$100()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:org.apache.pdfbox.pdmodel.font.FontProvider getProvider()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.FontMapperImpl:org.apache.pdfbox.pdmodel.font.FontProvider getProvider()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:org.apache.fontbox.FontBoxFont findFont(org.apache.pdfbox.pdmodel.font.FontFormat,java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.FontMapperImpl:org.apache.fontbox.FontBoxFont findFont(org.apache.pdfbox.pdmodel.font.FontFormat,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:org.apache.pdfbox.pdmodel.font.FontMapping getTrueTypeFont(java.lang.String,org.apache.pdfbox.pdmodel.font.PDFontDescriptor)",
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:org.apache.fontbox.FontBoxFont findFontBoxFont(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:org.apache.pdfbox.pdmodel.font.CIDFontMapping getCIDFont(java.lang.String,org.apache.pdfbox.pdmodel.font.PDFontDescriptor,org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.FontMapperImpl:org.apache.pdfbox.pdmodel.font.CIDFontMapping getCIDFont(java.lang.String,org.apache.pdfbox.pdmodel.font.PDFontDescriptor,org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType0:void <init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font)",
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2:org.apache.fontbox.ttf.TrueTypeFont findFontOrSubstitute()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType1Font:void <init>(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDFontFactory:org.apache.pdfbox.pdmodel.font.PDFont createFont(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.font.PDMMType1Font:void <init>(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType3Font:void <init>(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDFontFactory:org.apache.pdfbox.pdmodel.font.PDFont createFont(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFontFactory:org.apache.pdfbox.pdmodel.font.PDFont createFont(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.pdmodel.font.PDFont getFont(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.font.PDFontFactory:org.apache.pdfbox.pdmodel.font.PDFont createDefaultFont()",
            "org.apache.pdfbox.pdmodel.graphics.PDFontSetting:org.apache.pdfbox.pdmodel.font.PDFont getFont()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType0Font:org.apache.pdfbox.pdmodel.font.PDType0Font load(org.apache.pdfbox.pdmodel.PDDocument,java.io.File)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDType0Font:org.apache.pdfbox.pdmodel.font.PDType0Font load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDType0Font:org.apache.pdfbox.pdmodel.font.PDType0Font load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDType0Font:org.apache.pdfbox.pdmodel.font.PDType0Font load(org.apache.pdfbox.pdmodel.PDDocument,org.apache.fontbox.ttf.TrueTypeFont,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDType0Font:org.apache.pdfbox.pdmodel.font.PDType0Font loadVertical(org.apache.pdfbox.pdmodel.PDDocument,java.io.File)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDType0Font:org.apache.pdfbox.pdmodel.font.PDType0Font loadVertical(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDType0Font:org.apache.pdfbox.pdmodel.font.PDType0Font loadVertical(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDType0Font:org.apache.pdfbox.pdmodel.font.PDType0Font loadVertical(org.apache.pdfbox.pdmodel.PDDocument,org.apache.fontbox.ttf.TrueTypeFont,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDType0Font:void subset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:void save(java.io.OutputStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace(org.apache.pdfbox.cos.COSName,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace create(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.pdmodel.PDResources,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace create(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.pdmodel.PDResources)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace create(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace createFromCOSObject(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.PDResources)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:void <init>(org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.PDResources)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace()",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace createColorSpace(org.apache.pdfbox.cos.COSBase)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage)",
            "org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createJPEG(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:boolean resolveNeedsTranslation(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void flatten(java.util.List,boolean)"
        ]
    },
    "org.apache.pdfbox.rendering.PageDrawer:java.awt.Paint applySoftMaskToPaint(java.awt.Paint,org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:java.awt.Paint getStrokingPaint()",
            "org.apache.pdfbox.rendering.PageDrawer:java.awt.Paint getNonStrokingPaint()",
            "org.apache.pdfbox.rendering.PageDrawer:void drawBufferedImage(java.awt.image.BufferedImage,java.awt.geom.AffineTransform)",
            "org.apache.pdfbox.rendering.PageDrawer:void shadingFill(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.rendering.PageDrawer:void showTransparencyGroup(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:java.awt.image.BufferedImage getImage()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage)"
        ]
    },
    "org.apache.pdfbox.rendering.PageDrawer:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.operator.graphics.BeginInlineImage:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.graphics.DrawObject:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:java.awt.image.BufferedImage getOpaqueImage()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:java.awt.image.BufferedImage getImage(java.awt.Rectangle,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:java.awt.image.BufferedImage getImage()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage)"
        ]
    },
    "org.apache.pdfbox.pdfparser.FDFParser:void init()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.FDFParser:void <init>(java.io.File)",
            "org.apache.pdfbox.pdfparser.FDFParser:void <init>(java.io.InputStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFDocument:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFDocument:void <init>(org.w3c.dom.Document)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:org.apache.pdfbox.pdmodel.fdf.FDFDocument exportFDF()"
        ]
    },
    "org.apache.pdfbox.pdfparser.PDFParser:void init(org.apache.pdfbox.io.ScratchFile)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.PDFParser:void <init>(org.apache.pdfbox.io.RandomAccessRead,java.lang.String,java.io.InputStream,java.lang.String,org.apache.pdfbox.io.ScratchFile)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:void <init>(org.apache.pdfbox.io.MemoryUsageSetting)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void optimizedMergeDocuments(org.apache.pdfbox.io.MemoryUsageSetting,java.util.List)",
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void legacyMergeDocuments(org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.multipdf.Splitter:org.apache.pdfbox.pdmodel.PDDocument createNewDocument()",
            "org.apache.pdfbox.pdmodel.PDDocument:void <init>()"
        ]
    },
    "org.apache.pdfbox.pdfwriter.COSWriter:void write(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfwriter.COSWriter:void write(org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.PDDocument:void saveIncremental(java.io.OutputStream)"
        ]
    },
    "org.apache.pdfbox.pdfwriter.COSWriter:void write(org.apache.pdfbox.pdmodel.fdf.FDFDocument)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFDocument:void save(java.io.OutputStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void refreshAppearances()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void refreshAppearances(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void flatten(java.util.List,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:void applyChange()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDButton:void setValue(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:void setValue(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:void setValue(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:void setValue(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:void setValue(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.multipdf.Splitter:void processPages()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.Splitter:java.util.List split(org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.fontbox.ttf.TrueTypeFont,org.apache.pdfbox.pdmodel.font.encoding.Encoding,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:org.apache.pdfbox.pdmodel.font.PDTrueTypeFont load(org.apache.pdfbox.pdmodel.PDDocument,java.io.File,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:org.apache.pdfbox.pdmodel.font.PDTrueTypeFont load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:org.apache.pdfbox.pdmodel.font.PDTrueTypeFont load(org.apache.pdfbox.pdmodel.PDDocument,org.apache.fontbox.ttf.TrueTypeFont,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:org.apache.pdfbox.pdmodel.font.PDTrueTypeFont loadTTF(org.apache.pdfbox.pdmodel.PDDocument,java.io.File)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:org.apache.pdfbox.pdmodel.font.PDTrueTypeFont loadTTF(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)"
        ]
    },
    "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteObjects()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteBody(org.apache.pdfbox.cos.COSDocument)"
        ]
    },
    "org.apache.pdfbox.cos.COSArray:java.lang.Object accept(org.apache.pdfbox.cos.ICOSVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSObject:java.lang.Object accept(org.apache.pdfbox.cos.ICOSVisitor)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteObject(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromArray(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromDictionary(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:java.lang.Object accept(org.apache.pdfbox.cos.ICOSVisitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSObject:java.lang.Object accept(org.apache.pdfbox.cos.ICOSVisitor)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteObject(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteTrailer(org.apache.pdfbox.cos.COSDocument)",
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromArray(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromDictionary(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.function.PDFunctionType4:void <init>(org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.PDFunction:org.apache.pdfbox.pdmodel.common.function.PDFunction create(org.apache.pdfbox.cos.COSBase)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:byte[] getLookupData()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:void readColorTable()"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:int[][] access$000(org.apache.pdfbox.pdmodel.common.function.PDFunctionType0)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0$Rinterpol:float[] rinterpol(int[],int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage getStencilImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Paint)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:java.awt.image.BufferedImage getStencilImage(java.awt.Paint)",
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:java.awt.image.BufferedImage getStencilImage(java.awt.Paint)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.Type6ShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType6,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.Type6ShadingPaint:java.awt.PaintContext createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.Type7ShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType7,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.Type7ShadingPaint:java.awt.PaintContext createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingPaint:java.awt.PaintContext createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.SoftMask:java.awt.PaintContext createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.Type5ShadingPaint:java.awt.PaintContext createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.SoftMask:java.awt.PaintContext createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)"
        ]
    },
    "org.apache.pdfbox.rendering.PageDrawer:void showTransparencyGroup(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.operator.DrawObject:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.graphics.DrawObject:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.markedcontent.DrawObject:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.contentstream.PDFStreamEngine:void showTextString(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.operator.text.ShowText:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.contentstream.PDFStreamEngine:void showTextStrings(org.apache.pdfbox.cos.COSArray)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.operator.text.ShowTextAdjusted:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.rendering.TilingPaint:void <init>(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,java.awt.geom.AffineTransform)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.rendering.TilingPaintFactory:org.apache.pdfbox.rendering.TilingPaint create(org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDColor,java.awt.geom.AffineTransform)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:java.awt.Paint getPaint(org.apache.pdfbox.pdmodel.graphics.color.PDColor)"
        ]
    },
    "org.apache.pdfbox.rendering.PDFRenderer:java.awt.image.BufferedImage renderImage(int,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PDFRenderer:java.awt.image.BufferedImage renderImage(int)"
        ]
    },
    "org.apache.pdfbox.rendering.PDFRenderer:java.awt.image.BufferedImage renderImageWithDPI(int,float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.rendering.PDFRenderer:java.awt.image.BufferedImage renderImageWithDPI(int,float,org.apache.pdfbox.rendering.ImageType)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.rendering.PDFRenderer:void renderPageToGraphics(int,java.awt.Graphics2D,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.printing.PDFPrintable:int print(java.awt.Graphics,java.awt.print.PageFormat,int)",
            "org.apache.pdfbox.rendering.PDFRenderer:void renderPageToGraphics(int,java.awt.Graphics2D)"
        ]
    },
    "org.apache.pdfbox.text.PDFTextStripper:void processPages(org.apache.pdfbox.pdmodel.PDPageTree)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.text.PDFTextStripper:void writeText(org.apache.pdfbox.pdmodel.PDDocument,java.io.Writer)"
        ]
    },
    "org.apache.pdfbox.text.PDFTextStripperByArea:void extractRegions(org.apache.pdfbox.pdmodel.PDPage)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFCatalog:void writeXML(java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFDocument:void writeXML(java.io.Writer)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.FontMapperImpl:org.apache.pdfbox.pdmodel.font.FontMapping getTrueTypeFont(java.lang.String,org.apache.pdfbox.pdmodel.font.PDFontDescriptor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:void <init>(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.FontMapperImpl:org.apache.fontbox.FontBoxFont findFontBoxFont(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.FontMapperImpl:org.apache.pdfbox.pdmodel.font.FontMapping getFontBoxFont(java.lang.String,org.apache.pdfbox.pdmodel.font.PDFontDescriptor)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDCIDFontType2:org.apache.fontbox.ttf.TrueTypeFont findFontOrSubstitute()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDCIDFontType2:void <init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font,org.apache.fontbox.ttf.TrueTypeFont)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDMMType1Font:void <init>(org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDFontFactory:org.apache.pdfbox.pdmodel.font.PDFont createFont(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.pdmodel.font.PDFont getFont(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.operator.text.SetFontAndSize:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void validateAndEnsureAcroFormResources()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:void processSetFont(java.util.List)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:void copyNeededResourcesTo(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFontFactory:org.apache.pdfbox.pdmodel.font.PDFont createDefaultFont()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void showText(byte[])"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.PDFontSetting:org.apache.pdfbox.pdmodel.font.PDFont getFont()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void copyIntoGraphicsState(org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.operator.color.SetNonStrokingColorSpace:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.color.SetNonStrokingDeviceCMYKColor:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.color.SetNonStrokingDeviceGrayColor:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.color.SetNonStrokingDeviceRGBColor:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.color.SetStrokingColorSpace:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.color.SetStrokingDeviceCMYKColor:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.color.SetStrokingDeviceGrayColor:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.color.SetStrokingDeviceRGBColor:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace create(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.pdmodel.PDResources,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace create(org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace create(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.pdmodel.PDResources,boolean)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:void <init>(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getAlternateColorSpace()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:java.util.Map getColorants()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNProcess:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getAlternateColorSpace()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:void <init>(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroupAttributes:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace()",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace createFromCOSObject(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.PDResources)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace create(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.pdmodel.PDResources,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:void <init>(org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.PDResources)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace create(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.pdmodel.PDResources,boolean)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:void <init>(org.apache.pdfbox.cos.COSArray)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage getRGBImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle,int,org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage from1Bit(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle,int,int,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage from8bit(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster,java.awt.Rectangle,int,int,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage fromAny(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster,org.apache.pdfbox.cos.COSArray,java.awt.Rectangle,int,int,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:float[] getDecodeArray(org.apache.pdfbox.pdmodel.graphics.image.PDImage)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace createColorSpace(org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject createFromImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.rendering.PageDrawer:java.awt.Paint getStrokingPaint()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:void drawGlyph2D(org.apache.pdfbox.rendering.Glyph2D,org.apache.pdfbox.pdmodel.font.PDFont,int,org.apache.pdfbox.util.Vector,java.awt.geom.AffineTransform)",
            "org.apache.pdfbox.rendering.PageDrawer:void strokePath()"
        ]
    },
    "org.apache.pdfbox.rendering.PageDrawer:java.awt.Paint getNonStrokingPaint()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:void drawGlyph2D(org.apache.pdfbox.rendering.Glyph2D,org.apache.pdfbox.pdmodel.font.PDFont,int,org.apache.pdfbox.util.Vector,java.awt.geom.AffineTransform)",
            "org.apache.pdfbox.rendering.PageDrawer:void fillPath(int)",
            "org.apache.pdfbox.rendering.PageDrawer:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage)"
        ]
    },
    "org.apache.pdfbox.rendering.PageDrawer:void drawBufferedImage(java.awt.image.BufferedImage,java.awt.geom.AffineTransform)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage)"
        ]
    },
    "org.apache.pdfbox.rendering.PageDrawer:void shadingFill(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.operator.graphics.ShadingFill:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.pdfparser.FDFParser:void <init>(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.FDFParser:void <init>(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFDocument:org.apache.pdfbox.pdmodel.fdf.FDFDocument load(java.io.File)"
        ]
    },
    "org.apache.pdfbox.pdfparser.FDFParser:void <init>(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFDocument:org.apache.pdfbox.pdmodel.fdf.FDFDocument load(java.io.InputStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFDocument:void <init>(org.w3c.dom.Document)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFDocument:org.apache.pdfbox.pdmodel.fdf.FDFDocument loadXFDF(java.io.InputStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:org.apache.pdfbox.pdmodel.fdf.FDFDocument exportFDF()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdfparser.PDFParser:void <init>(org.apache.pdfbox.io.RandomAccessRead,java.lang.String,java.io.InputStream,java.lang.String,org.apache.pdfbox.io.ScratchFile)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.PDFParser:void <init>(org.apache.pdfbox.io.RandomAccessRead,java.lang.String,org.apache.pdfbox.io.ScratchFile)",
            "org.apache.pdfbox.pdfparser.PDFParser:void <init>(org.apache.pdfbox.io.RandomAccessRead,java.lang.String,java.io.InputStream,java.lang.String)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.File,java.lang.String,java.io.InputStream,java.lang.String,org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(java.io.InputStream,java.lang.String,java.io.InputStream,java.lang.String,org.apache.pdfbox.io.MemoryUsageSetting)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.PDDocument load(byte[],java.lang.String,java.io.InputStream,java.lang.String,org.apache.pdfbox.io.MemoryUsageSetting)"
        ]
    },
    "org.apache.pdfbox.multipdf.Splitter:org.apache.pdfbox.pdmodel.PDDocument createNewDocument()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.Splitter:void createNewDocumentIfNecessary()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PageExtractor:org.apache.pdfbox.pdmodel.PDDocument extract()",
            "org.apache.pdfbox.multipdf.Splitter:org.apache.pdfbox.pdmodel.PDDocument createNewDocument()",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createTemplate(org.apache.pdfbox.pdmodel.PDPage)"
        ]
    },
    "org.apache.pdfbox.pdfwriter.COSWriter:void write(org.apache.pdfbox.pdmodel.PDDocument)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfwriter.COSWriter:void write(org.apache.pdfbox.cos.COSDocument)",
            "org.apache.pdfbox.pdmodel.PDDocument:void save(java.io.OutputStream)",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.interactive.digitalsignature.ExternalSigningSupport saveIncrementalForExternalSigning(java.io.OutputStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDButton:void setValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDCheckBox:void check()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDCheckBox:void unCheck()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDField:void importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:void setValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDField:void importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDChoice:void setValue(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDField:void importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:void setValue(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:void addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createSignature(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField,org.apache.pdfbox.pdmodel.PDPage,java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:void setSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDTextField:void setValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDField:void importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField)"
        ]
    },
    "org.apache.pdfbox.multipdf.Splitter:java.util.List split(org.apache.pdfbox.pdmodel.PDDocument)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:org.apache.pdfbox.pdmodel.font.PDTrueTypeFont load(org.apache.pdfbox.pdmodel.PDDocument,java.io.File,org.apache.pdfbox.pdmodel.font.encoding.Encoding)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:org.apache.pdfbox.pdmodel.font.PDTrueTypeFont load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.pdmodel.font.encoding.Encoding)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:org.apache.pdfbox.pdmodel.font.PDTrueTypeFont load(org.apache.pdfbox.pdmodel.PDDocument,org.apache.fontbox.ttf.TrueTypeFont,org.apache.pdfbox.pdmodel.font.encoding.Encoding)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:org.apache.pdfbox.pdmodel.font.PDTrueTypeFont loadTTF(org.apache.pdfbox.pdmodel.PDDocument,java.io.File)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:org.apache.pdfbox.pdmodel.font.PDTrueTypeFont loadTTF(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdfwriter.COSWriter:void doWriteBody(org.apache.pdfbox.cos.COSDocument)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfwriter.COSWriter:java.lang.Object visitFromDocument(org.apache.pdfbox.cos.COSDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.function.PDFunction:org.apache.pdfbox.pdmodel.common.function.PDFunction create(org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType3:float[] eval(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:void <init>(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:org.apache.pdfbox.pdmodel.common.function.PDFunction getTintTransform()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:void <init>(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:org.apache.pdfbox.pdmodel.common.function.PDFunction getFunction()",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:org.apache.pdfbox.pdmodel.common.function.PDFunction[] getFunctionsArray()",
            "org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask:org.apache.pdfbox.pdmodel.common.function.PDFunction getTransferFunction()",
            "org.apache.pdfbox.rendering.PageDrawer:java.awt.image.BufferedImage applyTransferFunction(java.awt.image.BufferedImage,org.apache.pdfbox.cos.COSBase)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:void readColorTable()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:void <init>(org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.PDResources)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0$Rinterpol:float[] rinterpol(int[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0$Rinterpol:float[] rinterpolate()",
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0$Rinterpol:float[] rinterpol(int[],int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:java.awt.image.BufferedImage getStencilImage(java.awt.Paint)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:java.awt.image.BufferedImage getStencilImage(java.awt.Paint)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.Type6ShadingPaint:java.awt.PaintContext createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.SoftMask:java.awt.PaintContext createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.Type7ShadingPaint:java.awt.PaintContext createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.SoftMask:java.awt.PaintContext createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)"
        ]
    },
    "org.apache.pdfbox.rendering.SoftMask:java.awt.PaintContext createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.SoftMask:java.awt.PaintContext createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)"
        ]
    },
    "org.apache.pdfbox.contentstream.operator.text.ShowText:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.contentstream.operator.text.ShowTextAdjusted:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.rendering.PageDrawer:java.awt.Paint getPaint(org.apache.pdfbox.pdmodel.graphics.color.PDColor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:java.awt.Paint getStrokingPaint()",
            "org.apache.pdfbox.rendering.PageDrawer:java.awt.Paint getNonStrokingPaint()",
            "org.apache.pdfbox.rendering.PageDrawer:void drawAnnotationLinkBorder(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationLink)",
            "org.apache.pdfbox.rendering.PageDrawer:void drawAnnotationInk(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationMarkup)"
        ]
    },
    "org.apache.pdfbox.rendering.PDFRenderer:java.awt.image.BufferedImage renderImage(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.printing.PDFPrintable:int print(java.awt.Graphics,java.awt.print.PageFormat,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.rendering.PDFRenderer:void renderPageToGraphics(int,java.awt.Graphics2D)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.text.PDFTextStripper:void writeText(org.apache.pdfbox.pdmodel.PDDocument,java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.text.PDFTextStripper:java.lang.String getText(org.apache.pdfbox.pdmodel.PDDocument)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFDocument:void writeXML(java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFDocument:void saveXFDF(java.io.Writer)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.FontMapperImpl:org.apache.pdfbox.pdmodel.font.FontMapping getFontBoxFont(java.lang.String,org.apache.pdfbox.pdmodel.font.PDFontDescriptor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType1CFont:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:void <init>(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:void <init>(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.contentstream.operator.text.SetFontAndSize:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void validateAndEnsureAcroFormResources()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void <init>(org.apache.pdfbox.pdmodel.interactive.form.PDVariableText)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:void processSetFont(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:void copyNeededResourcesTo(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void setAppearanceContent(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:void copyIntoGraphicsState(org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.operator.state.SetGraphicsStateParameters:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.contentstream.operator.color.SetNonStrokingColorSpace:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.contentstream.operator.color.SetNonStrokingDeviceCMYKColor:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.contentstream.operator.color.SetNonStrokingDeviceGrayColor:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.contentstream.operator.color.SetNonStrokingDeviceRGBColor:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.contentstream.operator.color.SetStrokingColorSpace:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.contentstream.operator.color.SetStrokingDeviceCMYKColor:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.contentstream.operator.color.SetStrokingDeviceGrayColor:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.contentstream.operator.color.SetStrokingDeviceRGBColor:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:void <init>(org.apache.pdfbox.cos.COSArray)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace create(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.pdmodel.PDResources,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getAlternateColorSpace()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:java.util.Map getColorants()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:void initColorConversionCache()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNProcess:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:void initColorConversionCache()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNProcess:java.lang.String toString()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getAlternateColorSpace()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:void fallbackToAlternateColorSpace(java.lang.Exception)",
            "org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup:boolean isGray(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:void <init>(org.apache.pdfbox.cos.COSArray)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace create(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.pdmodel.PDResources,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroupAttributes:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup:void <init>(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup,boolean,org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.graphics.color.PDColor)",
            "org.apache.pdfbox.rendering.PageDrawer:java.awt.Paint applySoftMaskToPaint(java.awt.Paint,org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.ShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShading,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:void <init>(org.apache.pdfbox.cos.COSArray)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:float[] getDecodeArray(org.apache.pdfbox.pdmodel.graphics.image.PDImage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage getStencilImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Paint)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage getRGBImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle,int,org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage from1Bit(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle,int,int,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage fromAny(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster,org.apache.pdfbox.cos.COSArray,java.awt.Rectangle,int,int,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace getColorSpace()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage getRGBImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle,int,org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage from1Bit(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle,int,int,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage from8bit(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster,java.awt.Rectangle,int,int,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage fromAny(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster,org.apache.pdfbox.cos.COSArray,java.awt.Rectangle,int,int,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:float[] getDecodeArray(org.apache.pdfbox.pdmodel.graphics.image.PDImage)"
        ]
    },
    "org.apache.pdfbox.rendering.PageDrawer:void strokePath()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.operator.graphics.StrokePath:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.rendering.PageDrawer:void fillAndStrokePath(int)"
        ]
    },
    "org.apache.pdfbox.rendering.PageDrawer:void fillPath(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.operator.graphics.FillEvenOddRule:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.graphics.FillNonZeroRule:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.rendering.PageDrawer:void fillAndStrokePath(int)"
        ]
    },
    "org.apache.pdfbox.contentstream.operator.graphics.ShadingFill:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.pdfparser.FDFParser:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFDocument:org.apache.pdfbox.pdmodel.fdf.FDFDocument load(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFDocument:org.apache.pdfbox.pdmodel.fdf.FDFDocument loadXFDF(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFDocument:org.apache.pdfbox.pdmodel.fdf.FDFDocument loadXFDF(java.lang.String)",
            "org.apache.pdfbox.pdmodel.fdf.FDFDocument:org.apache.pdfbox.pdmodel.fdf.FDFDocument loadXFDF(java.io.File)"
        ]
    },
    "org.apache.pdfbox.pdfparser.PDFParser:void <init>(org.apache.pdfbox.io.RandomAccessRead,java.lang.String,org.apache.pdfbox.io.ScratchFile)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdfparser.PDFParser:void <init>(org.apache.pdfbox.io.RandomAccessRead)",
            "org.apache.pdfbox.pdfparser.PDFParser:void <init>(org.apache.pdfbox.io.RandomAccessRead,org.apache.pdfbox.io.ScratchFile)",
            "org.apache.pdfbox.pdfparser.PDFParser:void <init>(org.apache.pdfbox.io.RandomAccessRead,java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdfparser.PDFParser:void <init>(org.apache.pdfbox.io.RandomAccessRead,java.lang.String,java.io.InputStream,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.multipdf.Splitter:void createNewDocumentIfNecessary()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.Splitter:void processPage(org.apache.pdfbox.pdmodel.PDPage)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createTemplate(org.apache.pdfbox.pdmodel.PDPage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateCreator:java.io.InputStream buildPDF(org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner)"
        ]
    },
    "org.apache.pdfbox.pdfwriter.COSWriter:void write(org.apache.pdfbox.cos.COSDocument)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateCreator:java.io.InputStream getVisualSignatureAsStream(org.apache.pdfbox.cos.COSDocument)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateStructure:java.io.ByteArrayInputStream getTemplateAppearanceStream()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.interactive.digitalsignature.ExternalSigningSupport saveIncrementalForExternalSigning(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDCheckBox:void check()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDCheckBox:void unCheck()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDDocument:void addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:void addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)",
            "org.apache.pdfbox.pdmodel.PDDocument:void addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface)",
            "org.apache.pdfbox.pdmodel.PDDocument:void addSignatureField(java.util.List,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createSignature(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField,org.apache.pdfbox.pdmodel.PDPage,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateCreator:java.io.InputStream buildPDF(org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:void setSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.function.PDFunctionType3:float[] eval(float[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.PDFunction:org.apache.pdfbox.cos.COSArray eval(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType3:float[] eval(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:java.awt.image.BufferedImage toRGBWithTintTransform(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:float[] toRGBWithTintTransform(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:float[] toRGB(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:java.awt.image.BufferedImage toRGBImage2(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:void tintTransform(float[],int[])",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:float[] evalFunction(float[])",
            "org.apache.pdfbox.rendering.PageDrawer:java.awt.image.BufferedImage applyTransferFunction(java.awt.image.BufferedImage,org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.rendering.SoftMask$SoftPaintContext:java.awt.image.Raster getRaster(int,int,int,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:org.apache.pdfbox.pdmodel.common.function.PDFunction getTintTransform()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:org.apache.pdfbox.pdmodel.common.function.PDFunction getFunction()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext:org.apache.pdfbox.pdmodel.common.function.PDFunction getFunction()",
            "org.apache.pdfbox.pdmodel.graphics.shading.RadialShadingContext:org.apache.pdfbox.pdmodel.common.function.PDFunction getFunction()",
            "org.apache.pdfbox.pdmodel.graphics.shading.TriangleBasedShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShading,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:org.apache.pdfbox.pdmodel.common.function.PDFunction[] getFunctionsArray()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:float[] evalFunction(float[])"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask:org.apache.pdfbox.pdmodel.common.function.PDFunction getTransferFunction()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:java.awt.Paint applySoftMaskToPaint(java.awt.Paint,org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask)"
        ]
    },
    "org.apache.pdfbox.rendering.PageDrawer:java.awt.image.BufferedImage applyTransferFunction(java.awt.image.BufferedImage,org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:void drawBufferedImage(java.awt.image.BufferedImage,java.awt.geom.AffineTransform)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0$Rinterpol:float[] rinterpolate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:float[] eval(float[])"
        ]
    },
    "org.apache.pdfbox.rendering.PageDrawer:void drawAnnotationLinkBorder(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationLink)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:void showAnnotation(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation)"
        ]
    },
    "org.apache.pdfbox.rendering.PageDrawer:void drawAnnotationInk(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationMarkup)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:void showAnnotation(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotation)"
        ]
    },
    "org.apache.pdfbox.text.PDFTextStripper:java.lang.String getText(org.apache.pdfbox.pdmodel.PDDocument)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFDocument:void saveXFDF(java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.fdf.FDFDocument:void saveXFDF(java.io.File)",
            "org.apache.pdfbox.pdmodel.fdf.FDFDocument:void saveXFDF(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType1Font:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType1Font:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:void processAppearanceStringOperators(byte[])"
        ]
    },
    "org.apache.pdfbox.contentstream.operator.state.SetGraphicsStateParameters:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:void initColorConversionCache()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:void <init>(org.apache.pdfbox.cos.COSArray)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.StandardStructureTypes:void <clinit>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacExpertEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacOSRomanEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacRomanEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.StandardEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.SymbolEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.WinAnsiEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.ZapfDingbatsEncoding:void <init>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNProcess:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.StandardStructureTypes:void <clinit>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacExpertEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacOSRomanEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacRomanEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.StandardEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.SymbolEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.WinAnsiEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.ZapfDingbatsEncoding:void <init>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:void fallbackToAlternateColorSpace(java.lang.Exception)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:void loadICCProfile()"
        ]
    },
    "org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup:boolean isGray(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup:void <init>(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup,boolean,org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.graphics.color.PDColor)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.ShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShading,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)",
            "org.apache.pdfbox.pdmodel.graphics.shading.RadialShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType3,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)",
            "org.apache.pdfbox.pdmodel.graphics.shading.TriangleBasedShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShading,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)",
            "org.apache.pdfbox.pdmodel.graphics.shading.Type1ShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType1,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawInlineImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawInlineImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)"
        ]
    },
    "org.apache.pdfbox.contentstream.operator.graphics.StrokePath:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.rendering.PageDrawer:void fillAndStrokePath(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.operator.graphics.FillEvenOddAndStrokePath:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",
            "org.apache.pdfbox.contentstream.operator.graphics.FillNonZeroAndStrokePath:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.contentstream.operator.graphics.FillEvenOddRule:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.contentstream.operator.graphics.FillNonZeroRule:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFDocument:org.apache.pdfbox.pdmodel.fdf.FDFDocument loadXFDF(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFDocument:org.apache.pdfbox.pdmodel.fdf.FDFDocument loadXFDF(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdfparser.PDFParser:void <init>(org.apache.pdfbox.io.RandomAccessRead)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions:void initFromRandomAccessRead(org.apache.pdfbox.io.RandomAccessRead)"
        ]
    },
    "org.apache.pdfbox.pdfparser.PDFParser:void <init>(org.apache.pdfbox.io.RandomAccessRead,org.apache.pdfbox.io.ScratchFile)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdfparser.PDFParser:void <init>(org.apache.pdfbox.io.RandomAccessRead,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDDocument:void addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:void addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:void addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDDocument:void addSignatureField(java.util.List,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.common.function.PDFunction:org.apache.pdfbox.cos.COSArray eval(org.apache.pdfbox.cos.COSArray)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:java.awt.image.BufferedImage toRGBWithTintTransform(java.awt.image.WritableRaster)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:java.awt.image.BufferedImage toRGBImage(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:java.awt.image.BufferedImage toRGBWithAttributes(java.awt.image.WritableRaster)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:float[] toRGBWithTintTransform(float[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:float[] toRGB(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:float[] toRGBWithAttributes(float[])"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:float[] toRGB(float[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDColor:int toRGB()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:java.awt.image.BufferedImage toRGBWithTintTransform(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:float[] toRGBWithAttributes(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:float[] toRGBWithTintTransform(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:float[] toRGB(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:float[] toRGB(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:java.awt.image.BufferedImage toRGBImage2(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.shading.ShadingContext:int convertToRGB(float[])",
            "org.apache.pdfbox.pdmodel.graphics.shading.Type1ShadingContext:java.awt.image.Raster getRaster(int,int,int,int)",
            "org.apache.pdfbox.rendering.PageDrawer:java.awt.Paint getPaint(org.apache.pdfbox.pdmodel.graphics.color.PDColor)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:java.awt.image.BufferedImage toRGBImage2(java.awt.image.WritableRaster)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:java.awt.image.BufferedImage toRGBImage(java.awt.image.WritableRaster)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:void tintTransform(float[],int[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:java.awt.image.BufferedImage toRGBImage(java.awt.image.WritableRaster)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:float[] evalFunction(float[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:float[] evalFunction(float)",
            "org.apache.pdfbox.pdmodel.graphics.shading.TriangleBasedShadingContext:int evalFunctionAndConvertToRGB(float[])",
            "org.apache.pdfbox.pdmodel.graphics.shading.Type1ShadingContext:java.awt.image.Raster getRaster(int,int,int,int)"
        ]
    },
    "org.apache.pdfbox.rendering.SoftMask$SoftPaintContext:java.awt.image.Raster getRaster(int,int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.SoftMask$SoftPaintContext:java.awt.image.Raster getRaster(int,int,int,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext:org.apache.pdfbox.pdmodel.common.function.PDFunction getFunction()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.RadialShadingContext:org.apache.pdfbox.pdmodel.common.function.PDFunction getFunction()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.TriangleBasedShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShading,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShading,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)",
            "org.apache.pdfbox.pdmodel.graphics.shading.PatchMeshesShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType6,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:float[] eval(float[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.PDFunction:org.apache.pdfbox.cos.COSArray eval(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType3:float[] eval(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:java.awt.image.BufferedImage toRGBWithTintTransform(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:float[] toRGBWithTintTransform(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:float[] toRGB(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:java.awt.image.BufferedImage toRGBImage2(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:void tintTransform(float[],int[])",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:float[] evalFunction(float[])",
            "org.apache.pdfbox.rendering.PageDrawer:java.awt.image.BufferedImage applyTransferFunction(java.awt.image.BufferedImage,org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.rendering.SoftMask$SoftPaintContext:java.awt.image.Raster getRaster(int,int,int,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFDocument:void saveXFDF(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.fdf.FDFDocument:void saveXFDF(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDType1Font:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDFontFactory:org.apache.pdfbox.pdmodel.font.PDFont createFont(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:void <init>(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:int repairLength1(byte[],int)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:int repairLength2(byte[],int,int)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:java.lang.String getNameInFont(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:org.apache.pdfbox.util.Matrix getFontMatrix()",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:void <clinit>()",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void verifyOrCreateDefaults()"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.StandardStructureTypes:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.StandardStructureTypes:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.encoding.MacExpertEncoding:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.encoding.MacExpertEncoding:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.encoding.MacOSRomanEncoding:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.encoding.MacOSRomanEncoding:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.encoding.MacRomanEncoding:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.encoding.MacOSRomanEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacRomanEncoding:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.encoding.StandardEncoding:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.encoding.StandardEncoding:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.encoding.SymbolEncoding:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.encoding.SymbolEncoding:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.encoding.WinAnsiEncoding:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.encoding.WinAnsiEncoding:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.encoding.ZapfDingbatsEncoding:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.encoding.ZapfDingbatsEncoding:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingPaint:java.awt.PaintContext createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.RadialShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType3,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.RadialShadingPaint:java.awt.PaintContext createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.Type1ShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType1,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.Type1ShadingPaint:java.awt.PaintContext createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawInlineImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawInlineImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.contentstream.operator.graphics.FillEvenOddAndStrokePath:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.contentstream.operator.graphics.FillNonZeroAndStrokePath:void process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:void addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:java.awt.image.BufferedImage toRGBImage(java.awt.image.WritableRaster)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:java.awt.image.BufferedImage toRGBWithAttributes(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:java.awt.image.BufferedImage toRGBImage(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:void initRgbColorTable()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:java.awt.image.BufferedImage toRGBImage(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage from1Bit(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle,int,int,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage from8bit(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster,java.awt.Rectangle,int,int,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage fromAny(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster,org.apache.pdfbox.cos.COSArray,java.awt.Rectangle,int,int,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:java.awt.image.BufferedImage toRGBWithAttributes(java.awt.image.WritableRaster)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:java.awt.image.BufferedImage toRGBImage(java.awt.image.WritableRaster)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:float[] toRGB(float[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDColor:int toRGB()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:java.awt.image.BufferedImage toRGBWithTintTransform(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:float[] toRGBWithAttributes(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:float[] toRGBWithTintTransform(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:float[] toRGB(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:float[] toRGB(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:java.awt.image.BufferedImage toRGBImage2(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.shading.ShadingContext:int convertToRGB(float[])",
            "org.apache.pdfbox.pdmodel.graphics.shading.Type1ShadingContext:java.awt.image.Raster getRaster(int,int,int,int)",
            "org.apache.pdfbox.rendering.PageDrawer:java.awt.Paint getPaint(org.apache.pdfbox.pdmodel.graphics.color.PDColor)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:float[] toRGBWithAttributes(float[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:float[] toRGB(float[])"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDColor:int toRGB()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup:void <init>(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup,boolean,org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.graphics.color.PDColor)",
            "org.apache.pdfbox.rendering.SoftMask:void <init>(java.awt.Paint,java.awt.image.BufferedImage,java.awt.geom.Rectangle2D,org.apache.pdfbox.pdmodel.graphics.color.PDColor,org.apache.pdfbox.pdmodel.common.function.PDFunction)",
            "org.apache.pdfbox.rendering.TilingPaintFactory$TilingPaintParameter:boolean equals(java.lang.Object)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:float[] toRGB(float[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDCIEBasedColorSpace:java.awt.image.BufferedImage toRGBImage(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDColor:int toRGB()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:java.awt.image.BufferedImage toRGBWithTintTransform(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:float[] toRGBWithAttributes(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:float[] toRGBWithTintTransform(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:float[] toRGB(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:float[] toRGB(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:java.awt.image.BufferedImage toRGBImage2(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.shading.ShadingContext:int convertToRGB(float[])",
            "org.apache.pdfbox.pdmodel.graphics.shading.Type1ShadingContext:java.awt.image.Raster getRaster(int,int,int,int)",
            "org.apache.pdfbox.rendering.PageDrawer:java.awt.Paint getPaint(org.apache.pdfbox.pdmodel.graphics.color.PDColor)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.ShadingContext:int convertToRGB(float[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext:int[] calcColorTable()",
            "org.apache.pdfbox.pdmodel.graphics.shading.RadialShadingContext:int[] calcColorTable()",
            "org.apache.pdfbox.pdmodel.graphics.shading.ShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShading,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)",
            "org.apache.pdfbox.pdmodel.graphics.shading.TriangleBasedShadingContext:int evalFunctionAndConvertToRGB(float[])"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.Type1ShadingContext:java.awt.image.Raster getRaster(int,int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.SoftMask$SoftPaintContext:java.awt.image.Raster getRaster(int,int,int,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:java.awt.image.BufferedImage toRGBImage(java.awt.image.WritableRaster)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:java.awt.image.BufferedImage toRGBWithAttributes(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:java.awt.image.BufferedImage toRGBImage(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:void initRgbColorTable()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:java.awt.image.BufferedImage toRGBImage(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage from1Bit(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle,int,int,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage from8bit(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster,java.awt.Rectangle,int,int,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage fromAny(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster,org.apache.pdfbox.cos.COSArray,java.awt.Rectangle,int,int,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:float[] evalFunction(float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext:int[] calcColorTable()",
            "org.apache.pdfbox.pdmodel.graphics.shading.RadialShadingContext:int[] calcColorTable()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.TriangleBasedShadingContext:int evalFunctionAndConvertToRGB(float[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.TriangleBasedShadingContext:void calcPixelTable(java.util.List,java.util.Map,java.awt.Rectangle)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShading,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)",
            "org.apache.pdfbox.pdmodel.graphics.shading.Type5ShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType1Font:int repairLength1(byte[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType1Font:void <init>(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType1Font:int repairLength2(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType1Font:void <init>(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType1Font:java.lang.String getNameInFont(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType1Font:byte[] encode(int)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:java.lang.String codeToName(int)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:java.awt.geom.GeneralPath getPath(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:boolean hasGlyph(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType1Font:org.apache.pdfbox.util.Matrix getFontMatrix()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType1Font:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:float calculateFontSize(org.apache.pdfbox.pdmodel.font.PDFont,org.apache.pdfbox.pdmodel.common.PDRectangle)",
            "org.apache.pdfbox.rendering.PageDrawer:void showFontGlyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDFont,int,java.lang.String,org.apache.pdfbox.util.Vector)",
            "org.apache.pdfbox.text.LegacyPDFStreamEngine:void showGlyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDFont,int,java.lang.String,org.apache.pdfbox.util.Vector)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void verifyOrCreateDefaults()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.encoding.MacExpertEncoding:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.encoding.Encoding:org.apache.pdfbox.pdmodel.font.encoding.Encoding getInstance(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.font.encoding.GlyphList:void loadList(java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.font.encoding.MacExpertEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacExpertEncoding:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.encoding.MacOSRomanEncoding:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:void <clinit>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacOSRomanEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacOSRomanEncoding:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.encoding.MacRomanEncoding:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:java.lang.Boolean isFontSymbolic()",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:void <clinit>()",
            "org.apache.pdfbox.pdmodel.font.encoding.Encoding:org.apache.pdfbox.pdmodel.font.encoding.Encoding getInstance(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.font.encoding.GlyphList:void loadList(java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.font.encoding.MacOSRomanEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacOSRomanEncoding:void <clinit>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacRomanEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.MacRomanEncoding:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.encoding.StandardEncoding:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:java.lang.Boolean isFontSymbolic()",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:org.apache.pdfbox.pdmodel.font.encoding.Encoding readEncodingFromFont()",
            "org.apache.pdfbox.pdmodel.font.PDType1CFont:org.apache.pdfbox.pdmodel.font.encoding.Encoding readEncodingFromFont()",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:org.apache.pdfbox.pdmodel.font.encoding.Encoding readEncodingFromFont()",
            "org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding:void <init>(org.apache.pdfbox.cos.COSDictionary,boolean,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",
            "org.apache.pdfbox.pdmodel.font.encoding.Encoding:org.apache.pdfbox.pdmodel.font.encoding.Encoding getInstance(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.font.encoding.StandardEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.StandardEncoding:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.encoding.SymbolEncoding:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType1Font:void <init>(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.encoding.GlyphList:void loadList(java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.font.encoding.SymbolEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.SymbolEncoding:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.encoding.WinAnsiEncoding:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:java.lang.Boolean isFontSymbolic()",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:org.apache.pdfbox.pdmodel.font.PDTrueTypeFont loadTTF(org.apache.pdfbox.pdmodel.PDDocument,java.io.File)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:org.apache.pdfbox.pdmodel.font.PDTrueTypeFont loadTTF(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:void <init>(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.encoding.Encoding:org.apache.pdfbox.pdmodel.font.encoding.Encoding getInstance(org.apache.pdfbox.cos.COSName)",
            "org.apache.pdfbox.pdmodel.font.encoding.GlyphList:void loadList(java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.font.encoding.WinAnsiEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.WinAnsiEncoding:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.encoding.ZapfDingbatsEncoding:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType1Font:void <init>(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.encoding.GlyphList:void loadList(java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.font.encoding.ZapfDingbatsEncoding:void <init>()",
            "org.apache.pdfbox.pdmodel.font.encoding.ZapfDingbatsEncoding:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingPaint:java.awt.PaintContext createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.SoftMask:java.awt.PaintContext createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.RadialShadingPaint:java.awt.PaintContext createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.SoftMask:java.awt.PaintContext createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.Type1ShadingPaint:java.awt.PaintContext createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.SoftMask:java.awt.PaintContext createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:java.awt.image.BufferedImage toRGBImage(java.awt.image.WritableRaster)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:java.awt.image.BufferedImage toRGBWithAttributes(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:java.awt.image.BufferedImage toRGBImage(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:void initRgbColorTable()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:java.awt.image.BufferedImage toRGBImage(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage from1Bit(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle,int,int,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage from8bit(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster,java.awt.Rectangle,int,int,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage fromAny(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster,org.apache.pdfbox.cos.COSArray,java.awt.Rectangle,int,int,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:void initRgbColorTable()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:void <init>(org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.PDResources)"
        ]
    },
    "org.apache.pdfbox.rendering.SoftMask:void <init>(java.awt.Paint,java.awt.image.BufferedImage,java.awt.geom.Rectangle2D,org.apache.pdfbox.pdmodel.graphics.color.PDColor,org.apache.pdfbox.pdmodel.common.function.PDFunction)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:java.awt.Paint applySoftMaskToPaint(java.awt.Paint,org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask)"
        ]
    },
    "org.apache.pdfbox.rendering.TilingPaintFactory$TilingPaintParameter:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.cos.COSDictionary:org.apache.pdfbox.cos.COSName getKeyForValue(java.lang.Object)",
            "org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$Eq:boolean isEqual(java.lang.Object,java.lang.Object)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:boolean isEntryChanged(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.color.PDCIEBasedColorSpace:java.awt.image.BufferedImage toRGBImage(java.awt.image.WritableRaster)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:java.awt.image.BufferedImage toRGBWithAttributes(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:java.awt.image.BufferedImage toRGBImage(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:void initRgbColorTable()",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:java.awt.image.BufferedImage toRGBImage(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage from1Bit(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle,int,int,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage from8bit(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster,java.awt.Rectangle,int,int,int)",
            "org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:java.awt.image.BufferedImage fromAny(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster,org.apache.pdfbox.cos.COSArray,java.awt.Rectangle,int,int,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext:int[] calcColorTable()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.RadialShadingContext:int[] calcColorTable()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.RadialShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType3,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.TriangleBasedShadingContext:void calcPixelTable(java.util.List,java.util.Map,java.awt.Rectangle)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext:java.util.Map calcPixelTable(java.awt.Rectangle)",
            "org.apache.pdfbox.pdmodel.graphics.shading.PatchMeshesShadingContext:java.util.Map calcPixelTable(java.awt.Rectangle)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType1Font:byte[] encode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDFont:byte[] encode(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType1Font:java.lang.String codeToName(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType1Font:float getHeight(int)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:float getWidthFromFont(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType1Font:java.awt.geom.GeneralPath getPath(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.Type1Glyph2D:java.awt.geom.GeneralPath getPathForCharacterCode(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType1Font:boolean hasGlyph(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.Type1Glyph2D:java.awt.geom.GeneralPath getPathForCharacterCode(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocumentCatalog:org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm getAcroForm()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.encoding.Encoding:org.apache.pdfbox.pdmodel.font.encoding.Encoding getInstance(org.apache.pdfbox.cos.COSName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:void readEncoding()",
            "org.apache.pdfbox.pdmodel.font.PDType3Font:void readEncoding()",
            "org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding:void <init>(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding:void <init>(org.apache.pdfbox.cos.COSDictionary,boolean,org.apache.pdfbox.pdmodel.font.encoding.Encoding)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.encoding.GlyphList:void loadList(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.encoding.GlyphList:void <init>(java.io.InputStream,int)",
            "org.apache.pdfbox.pdmodel.font.encoding.GlyphList:void <init>(org.apache.pdfbox.pdmodel.font.encoding.GlyphList,java.io.InputStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDFontFactory:org.apache.pdfbox.pdmodel.font.PDFont createFont(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:org.apache.pdfbox.pdmodel.font.PDTrueTypeFont load(org.apache.pdfbox.pdmodel.PDDocument,java.io.File,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:org.apache.pdfbox.pdmodel.font.PDTrueTypeFont load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:org.apache.pdfbox.pdmodel.font.PDTrueTypeFont load(org.apache.pdfbox.pdmodel.PDDocument,org.apache.fontbox.ttf.TrueTypeFont,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:org.apache.pdfbox.pdmodel.font.PDTrueTypeFont loadTTF(org.apache.pdfbox.pdmodel.PDDocument,java.io.File)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:org.apache.pdfbox.pdmodel.font.PDTrueTypeFont loadTTF(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:int codeToGID(int)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDSimpleFont:java.lang.Boolean isFontSymbolic()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:boolean isSymbolic()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:org.apache.pdfbox.pdmodel.font.encoding.Encoding readEncodingFromFont()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:void readEncoding()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType1CFont:org.apache.pdfbox.pdmodel.font.encoding.Encoding readEncodingFromFont()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:void readEncoding()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType1Font:org.apache.pdfbox.pdmodel.font.encoding.Encoding readEncodingFromFont()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:void readEncoding()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding:void <init>(org.apache.pdfbox.cos.COSDictionary,boolean,org.apache.pdfbox.pdmodel.font.encoding.Encoding)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:void readEncoding()"
        ]
    },
    "org.apache.pdfbox.cos.COSDictionary:org.apache.pdfbox.cos.COSName getKeyForValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.cos.COSName,java.lang.String,org.apache.pdfbox.pdmodel.common.COSObjectable)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$Eq:boolean isEqual(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$Eq:void execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext)",
            "org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$Ne:boolean isEqual(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:boolean isEntryChanged(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:void potentiallyNotifyChanged(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext:java.util.Map calcPixelTable(java.awt.Rectangle)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.TriangleBasedShadingContext:void createPixelTable(java.awt.Rectangle)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.PatchMeshesShadingContext:java.util.Map calcPixelTable(java.awt.Rectangle)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.TriangleBasedShadingContext:void createPixelTable(java.awt.Rectangle)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDFont:byte[] encode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void showTextInternal(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.PDFont:float getStringWidth(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType1Font:float getHeight(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDType1Font:float getWidthFromFont(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDFont:float getWidth(int)",
            "org.apache.pdfbox.pdmodel.font.PDFont:float getSpaceWidth()",
            "org.apache.pdfbox.rendering.PageDrawer:void drawGlyph2D(org.apache.pdfbox.rendering.Glyph2D,org.apache.pdfbox.pdmodel.font.PDFont,int,org.apache.pdfbox.util.Vector,java.awt.geom.AffineTransform)"
        ]
    },
    "org.apache.pdfbox.rendering.Type1Glyph2D:java.awt.geom.GeneralPath getPathForCharacterCode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:void drawGlyph2D(org.apache.pdfbox.rendering.Glyph2D,org.apache.pdfbox.pdmodel.font.PDFont,int,org.apache.pdfbox.util.Vector,java.awt.geom.AffineTransform)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocumentCatalog:org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm getAcroForm()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.PDFMergerUtility:void appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)",
            "org.apache.pdfbox.pdmodel.PDDocument:void addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)",
            "org.apache.pdfbox.pdmodel.PDDocument:void addSignatureField(java.util.List,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)",
            "org.apache.pdfbox.pdmodel.PDDocument:java.util.List getSignatureFields()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDSimpleFont:void readEncoding()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.font.PDType1CFont:void <init>(org.apache.pdfbox.cos.COSDictionary)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:void <init>(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType3Font:void readEncoding()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType3Font:void <init>(org.apache.pdfbox.cos.COSDictionary)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding:void <init>(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSArray)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.encoding.GlyphList:void <init>(java.io.InputStream,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.encoding.GlyphList:org.apache.pdfbox.pdmodel.font.encoding.GlyphList load(java.lang.String,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.encoding.GlyphList:void <init>(org.apache.pdfbox.pdmodel.font.encoding.GlyphList,java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.text.LegacyPDFStreamEngine:void <init>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:int codeToGID(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:org.apache.pdfbox.pdmodel.font.encoding.Encoding readEncodingFromFont()",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:float getWidthFromFont(int)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:float getHeight(int)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:java.util.Map getGIDToCode()",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:java.awt.geom.GeneralPath getPath(int)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:boolean hasGlyph(int)",
            "org.apache.pdfbox.rendering.TTFGlyph2D:int getGIDForCharacterCode(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDSimpleFont:boolean isSymbolic()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:int codeToGID(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.cos.COSName,java.lang.String,org.apache.pdfbox.pdmodel.common.COSObjectable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.pdmodel.font.PDFont)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.pdmodel.graphics.shading.PDShading)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject)",
            "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.pdmodel.graphics.PDXObject,java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$Eq:void execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence:void execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$Ne:boolean isEqual(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$Eq:void execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext)"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:void potentiallyNotifyChanged(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:void setName(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:void setValue(org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:void setFormattedValue(java.lang.String)",
            "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:void setHidden(boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.graphics.shading.TriangleBasedShadingContext:void createPixelTable(java.awt.Rectangle)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.graphics.shading.PatchMeshesShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType6,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle,int)",
            "org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)",
            "org.apache.pdfbox.pdmodel.graphics.shading.Type5ShadingContext:void <init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void showTextInternal(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void showTextWithPositioning(java.lang.Object[])",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void showText(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:java.util.List getSignatureFields()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:java.util.List getSignatureDictionaries()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.encoding.GlyphList:org.apache.pdfbox.pdmodel.font.encoding.GlyphList load(java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.encoding.GlyphList:void <clinit>()"
        ]
    },
    "org.apache.pdfbox.text.LegacyPDFStreamEngine:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.text.PDFMarkedContentExtractor:void <init>(java.lang.String)",
            "org.apache.pdfbox.text.PDFTextStripper:void <init>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:float getWidthFromFont(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDFont:float getWidth(int)",
            "org.apache.pdfbox.pdmodel.font.PDFont:float getSpaceWidth()",
            "org.apache.pdfbox.rendering.PageDrawer:void drawGlyph2D(org.apache.pdfbox.rendering.Glyph2D,org.apache.pdfbox.pdmodel.font.PDFont,int,org.apache.pdfbox.util.Vector,java.awt.geom.AffineTransform)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:float getHeight(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:java.util.Map getGIDToCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:byte[] encode(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:java.awt.geom.GeneralPath getPath(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.TTFGlyph2D:java.awt.geom.GeneralPath getPathForGID(int,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:boolean hasGlyph(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.rendering.TTFGlyph2D:int getGIDForCharacterCode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.TTFGlyph2D:java.awt.geom.GeneralPath getPathForCharacterCode(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.pdmodel.font.PDFont)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setFont(org.apache.pdfbox.pdmodel.font.PDFont,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageContentStream:org.apache.pdfbox.cos.COSName getName(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setGraphicsStateParameters(org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.pdmodel.graphics.shading.PDShading)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void shadingFill(org.apache.pdfbox.pdmodel.graphics.shading.PDShading)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void beginMarkedContent(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float,float,float)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.util.Matrix)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawForm(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDResources:org.apache.pdfbox.cos.COSName add(org.apache.pdfbox.pdmodel.graphics.PDXObject,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.cos.COSName createOverlayXObject(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.multipdf.Overlay$LayoutPage,org.apache.pdfbox.cos.COSStream)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawXObject(org.apache.pdfbox.pdmodel.graphics.PDXObject,java.awt.geom.AffineTransform)",
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createImageForm(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.common.PDRectangle,java.awt.geom.AffineTransform,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence:void execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType4:float[] eval(float[])",
            "org.apache.pdfbox.pdmodel.common.function.type4.ConditionalOperators$If:void execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext)",
            "org.apache.pdfbox.pdmodel.common.function.type4.ConditionalOperators$IfElse:void execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext)",
            "org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence:void execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext)"
        ]
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:void setName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:void setValue(org.apache.pdfbox.cos.COSBase)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:void setFormattedValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:void setHidden(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void showTextWithPositioning(java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void showText(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawString(java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedCombAppearance(org.apache.pdfbox.pdmodel.PDPageContentStream,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedListboxAppearance(org.apache.pdfbox.pdmodel.PDPageContentStream,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,org.apache.pdfbox.pdmodel.common.PDRectangle,org.apache.pdfbox.pdmodel.font.PDFont,float)",
            "org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter:void format()",
            "org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter:void processLines(java.util.List,boolean)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:java.util.List getSignatureDictionaries()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature getLastSignatureDictionary()",
            "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.interactive.digitalsignature.ExternalSigningSupport saveIncrementalForExternalSigning(java.io.OutputStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.encoding.GlyphList:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:void <init>(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:void readEncoding()",
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:java.lang.String toUnicode(int)",
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:java.lang.String toUnicode(int,org.apache.pdfbox.pdmodel.font.encoding.GlyphList)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.fontbox.ttf.TrueTypeFont,org.apache.pdfbox.pdmodel.font.encoding.Encoding,boolean)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:int codeToGID(int)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,org.apache.fontbox.ttf.TrueTypeFont,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",
            "org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:org.apache.pdfbox.pdmodel.font.encoding.GlyphList getGlyphList()",
            "org.apache.pdfbox.pdmodel.font.PDType3Font:void readEncoding()",
            "org.apache.pdfbox.pdmodel.font.encoding.GlyphList:org.apache.pdfbox.pdmodel.font.encoding.GlyphList load(java.lang.String,int)",
            "org.apache.pdfbox.pdmodel.font.encoding.GlyphList:org.apache.pdfbox.pdmodel.font.encoding.GlyphList getAdobeGlyphList()",
            "org.apache.pdfbox.pdmodel.font.encoding.GlyphList:org.apache.pdfbox.pdmodel.font.encoding.GlyphList getZapfDingbats()",
            "org.apache.pdfbox.pdmodel.font.encoding.GlyphList:void loadList(java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.font.encoding.GlyphList:java.lang.String toUnicode(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.encoding.GlyphList:void <clinit>()",
            "org.apache.pdfbox.text.LegacyPDFStreamEngine:void <init>()"
        ]
    },
    "org.apache.pdfbox.text.PDFMarkedContentExtractor:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.text.PDFMarkedContentExtractor:void <init>()"
        ]
    },
    "org.apache.pdfbox.text.PDFTextStripper:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.text.PDFTextStripperByArea:void <init>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:byte[] encode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDFont:byte[] encode(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.rendering.TTFGlyph2D:java.awt.geom.GeneralPath getPathForGID(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.TTFGlyph2D:java.awt.geom.GeneralPath getPathForCharacterCode(int)"
        ]
    },
    "org.apache.pdfbox.rendering.TTFGlyph2D:java.awt.geom.GeneralPath getPathForCharacterCode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.rendering.PageDrawer:void drawGlyph2D(org.apache.pdfbox.rendering.Glyph2D,org.apache.pdfbox.pdmodel.font.PDFont,int,org.apache.pdfbox.util.Vector,java.awt.geom.AffineTransform)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void setFont(org.apache.pdfbox.pdmodel.font.PDFont,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:void writeTo(org.apache.pdfbox.pdmodel.PDPageContentStream,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:org.apache.pdfbox.cos.COSName getName(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setStrokingColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setNonStrokingColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor)",
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setNonStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void setGraphicsStateParameters(org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void shadingFill(org.apache.pdfbox.pdmodel.graphics.shading.PDShading)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void beginMarkedContent(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.LayerUtility:org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup appendFormAsLayer(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject,java.awt.geom.AffineTransform,java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float,float,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.util.Matrix)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawForm(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.LayerUtility:org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup appendFormAsLayer(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject,java.awt.geom.AffineTransform,java.lang.String)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:void flatten(java.util.List,boolean)"
        ]
    },
    "org.apache.pdfbox.multipdf.Overlay:org.apache.pdfbox.cos.COSName createOverlayXObject(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.multipdf.Overlay$LayoutPage,org.apache.pdfbox.cos.COSStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.multipdf.Overlay:void overlayPage(org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.PDPage,int,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawXObject(org.apache.pdfbox.pdmodel.graphics.PDXObject,java.awt.geom.AffineTransform)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawXObject(org.apache.pdfbox.pdmodel.graphics.PDXObject,float,float,float,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:void createImageForm(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.common.PDRectangle,java.awt.geom.AffineTransform,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateCreator:java.io.InputStream buildPDF(org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.function.PDFunctionType4:float[] eval(float[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.PDFunction:org.apache.pdfbox.cos.COSArray eval(org.apache.pdfbox.cos.COSArray)",
            "org.apache.pdfbox.pdmodel.common.function.PDFunctionType3:float[] eval(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:java.awt.image.BufferedImage toRGBWithTintTransform(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:float[] toRGBWithTintTransform(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:float[] toRGB(float[])",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:java.awt.image.BufferedImage toRGBImage2(java.awt.image.WritableRaster)",
            "org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:void tintTransform(float[],int[])",
            "org.apache.pdfbox.pdmodel.graphics.shading.PDShading:float[] evalFunction(float[])",
            "org.apache.pdfbox.rendering.PageDrawer:java.awt.image.BufferedImage applyTransferFunction(java.awt.image.BufferedImage,org.apache.pdfbox.cos.COSBase)",
            "org.apache.pdfbox.rendering.SoftMask$SoftPaintContext:java.awt.image.Raster getRaster(int,int,int,int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.function.type4.ConditionalOperators$If:void execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence:void execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext)"
        ]
    },
    "org.apache.pdfbox.pdmodel.common.function.type4.ConditionalOperators$IfElse:void execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence:void execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawString(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter:void processLines(java.util.List,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.PlainTextFormatter:void format()"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDDocument:org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature getLastSignatureDictionary()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDSimpleFont:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType1Font:void <init>(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDSimpleFont:java.lang.String toUnicode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.contentstream.PDFStreamEngine:void showText(byte[])",
            "org.apache.pdfbox.pdmodel.font.PDFont:java.lang.String toUnicode(int,org.apache.pdfbox.pdmodel.font.encoding.GlyphList)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDSimpleFont:java.lang.String toUnicode(int,org.apache.pdfbox.pdmodel.font.encoding.GlyphList)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:java.lang.String toUnicode(int)",
            "org.apache.pdfbox.text.LegacyPDFStreamEngine:void showGlyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDFont,int,java.lang.String,org.apache.pdfbox.util.Vector)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:org.apache.pdfbox.pdmodel.font.encoding.GlyphList getGlyphList()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType1Font:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:void <init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.pdmodel.font.encoding.Encoding)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.encoding.GlyphList:org.apache.pdfbox.pdmodel.font.encoding.GlyphList getAdobeGlyphList()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:void <init>(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:void readEncoding()",
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:java.lang.String toUnicode(int)",
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:java.lang.String toUnicode(int,org.apache.pdfbox.pdmodel.font.encoding.GlyphList)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.fontbox.ttf.TrueTypeFont,org.apache.pdfbox.pdmodel.font.encoding.Encoding,boolean)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:int codeToGID(int)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,org.apache.fontbox.ttf.TrueTypeFont,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",
            "org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:org.apache.pdfbox.pdmodel.font.encoding.GlyphList getGlyphList()",
            "org.apache.pdfbox.pdmodel.font.PDType3Font:void readEncoding()",
            "org.apache.pdfbox.text.LegacyPDFStreamEngine:void <init>()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.encoding.GlyphList:org.apache.pdfbox.pdmodel.font.encoding.GlyphList getZapfDingbats()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:void <init>(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:void readEncoding()"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.encoding.GlyphList:java.lang.String toUnicode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDSimpleFont:java.lang.String toUnicode(int,org.apache.pdfbox.pdmodel.font.encoding.GlyphList)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:int codeToGID(int)",
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder:void setWidths(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.encoding.GlyphList)",
            "org.apache.pdfbox.pdmodel.font.PDType1CFont:java.lang.String getNameInFont(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.PDType1Font:java.lang.String getNameInFont(java.lang.String)",
            "org.apache.pdfbox.pdmodel.font.encoding.GlyphList:java.lang.String toUnicode(java.lang.String)"
        ]
    },
    "org.apache.pdfbox.text.PDFMarkedContentExtractor:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.text.PDFTextStripperByArea:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:void writeTo(org.apache.pdfbox.pdmodel.PDPageContentStream,float)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream,java.io.OutputStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void setStrokingColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void setNonStrokingColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void setStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setStrokingColor(java.awt.Color)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void initializeAppearanceContent(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void setNonStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.PDPageContentStream:void setNonStrokingColor(java.awt.Color)",
            "org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:void initializeAppearanceContent(org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.'annotation'.PDAppearanceStream)",
            "org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:void writeTo(org.apache.pdfbox.pdmodel.PDPageContentStream,float)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void drawXObject(org.apache.pdfbox.pdmodel.graphics.PDXObject,float,float,float,float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDFont:java.lang.String toUnicode(int,org.apache.pdfbox.pdmodel.font.encoding.GlyphList)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.text.LegacyPDFStreamEngine:void showGlyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDFont,int,java.lang.String,org.apache.pdfbox.util.Vector)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder:void setWidths(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.encoding.GlyphList)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder:void <init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,org.apache.fontbox.ttf.TrueTypeFont,org.apache.pdfbox.pdmodel.font.encoding.Encoding)"
        ]
    },
    "org.apache.pdfbox.pdmodel.font.PDType1CFont:java.lang.String getNameInFont(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDType1CFont:byte[] encode(int)"
        ]
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void setStrokingColor(java.awt.Color)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.PDPageContentStream:void setNonStrokingColor(java.awt.Color)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.pdfbox.pdmodel.font.PDType1CFont:byte[] encode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.pdfbox.pdmodel.font.PDFont:byte[] encode(java.lang.String)"
        ]
    }
}
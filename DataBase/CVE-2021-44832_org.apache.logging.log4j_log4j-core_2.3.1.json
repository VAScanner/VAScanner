{
    "org.apache.logging.log4j.core.appender.db.jdbc.DataSourceConnectionSource:org.apache.logging.log4j.core.appender.db.jdbc.DataSourceConnectionSource createConnectionSource(java.lang.String)": {
        "isVulRoot": true,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.net.JndiManager:java.lang.Object lookup(java.lang.String)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.mom.JmsManager:void <init>(java.lang.String,org.apache.logging.log4j.core.net.JndiManager,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.logging.log4j.core.selector.JndiContextSelector:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,boolean,java.net.URI)",
            "org.apache.logging.log4j.core.lookup.JndiLookup:java.lang.String lookup(org.apache.logging.log4j.core.LogEvent,java.lang.String)"
        ]
    },
    "org.apache.logging.log4j.core.net.JndiManager:boolean isJndiEnabled()": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.logging.log4j.core.net.JndiManager$JndiManagerFactory:org.apache.logging.log4j.core.net.JndiManager createManager(java.lang.String,java.util.Properties)"
        ]
    },
    "org.apache.logging.log4j.core.appender.mom.JmsManager:void <init>(java.lang.String,org.apache.logging.log4j.core.net.JndiManager,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.mom.JmsManager:void <init>(java.lang.String,org.apache.logging.log4j.core.net.JndiManager,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.logging.log4j.core.appender.mom.JmsManager$1)"
        ]
    },
    "org.apache.logging.log4j.core.selector.JndiContextSelector:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,boolean,java.net.URI)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.impl.Log4jContextFactory:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,java.lang.Object,boolean,org.apache.logging.log4j.core.config.ConfigurationSource)",
            "org.apache.logging.log4j.core.impl.Log4jContextFactory:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,java.lang.Object,boolean,java.net.URI,java.lang.String)",
            "org.apache.logging.log4j.core.selector.JndiContextSelector:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,boolean)"
        ]
    },
    "org.apache.logging.log4j.core.lookup.JndiLookup:java.lang.String lookup(org.apache.logging.log4j.core.LogEvent,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.lookup.Interpolator:java.lang.String lookup(org.apache.logging.log4j.core.LogEvent,java.lang.String)",
            "org.apache.logging.log4j.core.lookup.AbstractLookup:java.lang.String lookup(java.lang.String)",
            "org.apache.logging.log4j.core.lookup.StrSubstitutor:java.lang.String resolveVariable(org.apache.logging.log4j.core.LogEvent,java.lang.String,java.lang.StringBuilder,int,int)"
        ]
    },
    "org.apache.logging.log4j.core.net.JndiManager$JndiManagerFactory:org.apache.logging.log4j.core.net.JndiManager createManager(java.lang.String,java.util.Properties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.net.JndiManager$JndiManagerFactory:java.lang.Object createManager(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.logging.log4j.core.appender.mom.JmsManager:void <init>(java.lang.String,org.apache.logging.log4j.core.net.JndiManager,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.logging.log4j.core.appender.mom.JmsManager$1)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.mom.JmsManager$JmsManagerFactory:org.apache.logging.log4j.core.appender.mom.JmsManager createManager(java.lang.String,org.apache.logging.log4j.core.appender.mom.JmsManager$JmsConfiguration)"
        ]
    },
    "org.apache.logging.log4j.core.impl.Log4jContextFactory:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,java.lang.Object,boolean,org.apache.logging.log4j.core.config.ConfigurationSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.config.Configurator:org.apache.logging.log4j.core.LoggerContext initialize(java.lang.ClassLoader,org.apache.logging.log4j.core.config.ConfigurationSource,java.lang.Object)"
        ]
    },
    "org.apache.logging.log4j.core.impl.Log4jContextFactory:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,java.lang.Object,boolean,java.net.URI,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.impl.Log4jContextFactory:org.apache.logging.log4j.spi.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,java.lang.Object,boolean,java.net.URI,java.lang.String)",
            "org.apache.logging.log4j.core.config.Configurator:org.apache.logging.log4j.core.LoggerContext initialize(java.lang.String,java.lang.ClassLoader,java.net.URI,java.lang.Object)"
        ]
    },
    "org.apache.logging.log4j.core.selector.JndiContextSelector:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.impl.Log4jContextFactory:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,java.lang.Object,boolean)"
        ]
    },
    "org.apache.logging.log4j.core.lookup.Interpolator:java.lang.String lookup(org.apache.logging.log4j.core.LogEvent,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.lookup.Interpolator:java.lang.String lookup(org.apache.logging.log4j.core.LogEvent,java.lang.String)",
            "org.apache.logging.log4j.core.lookup.AbstractLookup:java.lang.String lookup(java.lang.String)",
            "org.apache.logging.log4j.core.lookup.StrSubstitutor:java.lang.String resolveVariable(org.apache.logging.log4j.core.LogEvent,java.lang.String,java.lang.StringBuilder,int,int)"
        ]
    },
    "org.apache.logging.log4j.core.lookup.AbstractLookup:java.lang.String lookup(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.lookup.JavaLookup:java.lang.String getSystemProperty(java.lang.String)",
            "org.apache.logging.log4j.core.lookup.Interpolator:java.lang.String lookup(org.apache.logging.log4j.core.LogEvent,java.lang.String)"
        ]
    },
    "org.apache.logging.log4j.core.lookup.StrSubstitutor:java.lang.String resolveVariable(org.apache.logging.log4j.core.LogEvent,java.lang.String,java.lang.StringBuilder,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.lookup.StrSubstitutor:int substitute(org.apache.logging.log4j.core.LogEvent,java.lang.StringBuilder,int,int,java.util.List)"
        ]
    },
    "org.apache.logging.log4j.core.net.JndiManager$JndiManagerFactory:java.lang.Object createManager(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.AbstractManager:org.apache.logging.log4j.core.appender.AbstractManager getManager(java.lang.String,org.apache.logging.log4j.core.appender.ManagerFactory,java.lang.Object)"
        ]
    },
    "org.apache.logging.log4j.core.appender.mom.JmsManager$JmsManagerFactory:org.apache.logging.log4j.core.appender.mom.JmsManager createManager(java.lang.String,org.apache.logging.log4j.core.appender.mom.JmsManager$JmsConfiguration)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.mom.JmsManager$JmsManagerFactory:java.lang.Object createManager(java.lang.String,java.lang.Object)",
            "org.apache.logging.log4j.core.appender.mom.JmsManager:org.apache.logging.log4j.core.appender.mom.JmsManager getJmsManager(java.lang.String,org.apache.logging.log4j.core.net.JndiManager,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.logging.log4j.core.config.Configurator:org.apache.logging.log4j.core.LoggerContext initialize(java.lang.ClassLoader,org.apache.logging.log4j.core.config.ConfigurationSource,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.config.Configurator:org.apache.logging.log4j.core.LoggerContext initialize(java.lang.ClassLoader,org.apache.logging.log4j.core.config.ConfigurationSource)"
        ]
    },
    "org.apache.logging.log4j.core.impl.Log4jContextFactory:org.apache.logging.log4j.spi.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,java.lang.Object,boolean,java.net.URI,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.config.Configurator:org.apache.logging.log4j.core.LoggerContext initialize(java.lang.String,java.lang.ClassLoader,java.net.URI,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.config.Configurator:org.apache.logging.log4j.core.LoggerContext initialize(java.lang.String,java.lang.ClassLoader,java.lang.String,java.lang.Object)",
            "org.apache.logging.log4j.core.config.Configurator:org.apache.logging.log4j.core.LoggerContext initialize(java.lang.String,java.lang.ClassLoader,java.net.URI)"
        ]
    },
    "org.apache.logging.log4j.core.impl.Log4jContextFactory:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,java.lang.Object,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.impl.Log4jContextFactory:org.apache.logging.log4j.spi.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,java.lang.Object,boolean)"
        ]
    },
    "org.apache.logging.log4j.core.lookup.JavaLookup:java.lang.String getSystemProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.lookup.JavaLookup:java.lang.String getHardware()",
            "org.apache.logging.log4j.core.lookup.JavaLookup:java.lang.String getLocale()",
            "org.apache.logging.log4j.core.lookup.JavaLookup:java.lang.String getOperatingSystem()",
            "org.apache.logging.log4j.core.lookup.JavaLookup:java.lang.String getRuntime()",
            "org.apache.logging.log4j.core.lookup.JavaLookup:java.lang.String getSystemProperty(java.lang.String,java.lang.String)",
            "org.apache.logging.log4j.core.lookup.JavaLookup:java.lang.String getVirtualMachine()",
            "org.apache.logging.log4j.core.lookup.JavaLookup:java.lang.String lookup(org.apache.logging.log4j.core.LogEvent,java.lang.String)"
        ]
    },
    "org.apache.logging.log4j.core.lookup.StrSubstitutor:int substitute(org.apache.logging.log4j.core.LogEvent,java.lang.StringBuilder,int,int,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.lookup.StrSubstitutor:boolean substitute(org.apache.logging.log4j.core.LogEvent,java.lang.StringBuilder,int,int)",
            "org.apache.logging.log4j.core.lookup.StrSubstitutor:int substitute(org.apache.logging.log4j.core.LogEvent,java.lang.StringBuilder,int,int,java.util.List)"
        ]
    },
    "org.apache.logging.log4j.core.appender.AbstractManager:org.apache.logging.log4j.core.appender.AbstractManager getManager(java.lang.String,org.apache.logging.log4j.core.appender.ManagerFactory,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.db.AbstractDatabaseManager:org.apache.logging.log4j.core.appender.db.AbstractDatabaseManager getManager(java.lang.String,org.apache.logging.log4j.core.appender.db.AbstractDatabaseManager$AbstractFactoryData,org.apache.logging.log4j.core.appender.ManagerFactory)",
            "org.apache.logging.log4j.core.appender.OutputStreamManager:org.apache.logging.log4j.core.appender.OutputStreamManager getManager(java.lang.String,java.lang.Object,org.apache.logging.log4j.core.appender.ManagerFactory)",
            "org.apache.logging.log4j.core.net.JndiManager:org.apache.logging.log4j.core.net.JndiManager getDefaultManager()",
            "org.apache.logging.log4j.core.net.JndiManager:org.apache.logging.log4j.core.net.JndiManager getDefaultManager(java.lang.String)",
            "org.apache.logging.log4j.core.net.JndiManager:org.apache.logging.log4j.core.net.JndiManager getJndiManager(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Properties)",
            "org.apache.logging.log4j.core.net.SmtpManager:org.apache.logging.log4j.core.net.SmtpManager getSMTPManager(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,boolean,java.lang.String,int)"
        ]
    },
    "org.apache.logging.log4j.core.appender.mom.JmsManager$JmsManagerFactory:java.lang.Object createManager(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.AbstractManager:org.apache.logging.log4j.core.appender.AbstractManager getManager(java.lang.String,org.apache.logging.log4j.core.appender.ManagerFactory,java.lang.Object)"
        ]
    },
    "org.apache.logging.log4j.core.appender.mom.JmsManager:org.apache.logging.log4j.core.appender.mom.JmsManager getJmsManager(java.lang.String,org.apache.logging.log4j.core.net.JndiManager,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.mom.JmsAppender$Builder:org.apache.logging.log4j.core.appender.mom.JmsAppender build()",
            "org.apache.logging.log4j.core.net.server.JmsServer:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.logging.log4j.core.config.Configurator:org.apache.logging.log4j.core.LoggerContext initialize(java.lang.ClassLoader,org.apache.logging.log4j.core.config.ConfigurationSource)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.config.Configurator:org.apache.logging.log4j.core.LoggerContext initialize(java.lang.String,java.lang.ClassLoader,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.config.Configurator:org.apache.logging.log4j.core.LoggerContext initialize(java.lang.String,java.lang.ClassLoader,java.lang.String)"
        ]
    },
    "org.apache.logging.log4j.core.config.Configurator:org.apache.logging.log4j.core.LoggerContext initialize(java.lang.String,java.lang.ClassLoader,java.net.URI)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.impl.Log4jContextFactory:org.apache.logging.log4j.spi.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,java.lang.Object,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.lookup.JavaLookup:java.lang.String getHardware()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.lookup.JavaLookup:java.lang.String lookup(org.apache.logging.log4j.core.LogEvent,java.lang.String)"
        ]
    },
    "org.apache.logging.log4j.core.lookup.JavaLookup:java.lang.String getLocale()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.lookup.JavaLookup:java.lang.String lookup(org.apache.logging.log4j.core.LogEvent,java.lang.String)"
        ]
    },
    "org.apache.logging.log4j.core.lookup.JavaLookup:java.lang.String getOperatingSystem()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.lookup.JavaLookup:java.lang.String lookup(org.apache.logging.log4j.core.LogEvent,java.lang.String)"
        ]
    },
    "org.apache.logging.log4j.core.lookup.JavaLookup:java.lang.String getRuntime()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.lookup.JavaLookup:java.lang.String lookup(org.apache.logging.log4j.core.LogEvent,java.lang.String)"
        ]
    },
    "org.apache.logging.log4j.core.lookup.JavaLookup:java.lang.String getSystemProperty(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.lookup.JavaLookup:java.lang.String getHardware()",
            "org.apache.logging.log4j.core.lookup.JavaLookup:java.lang.String getOperatingSystem()"
        ]
    },
    "org.apache.logging.log4j.core.lookup.JavaLookup:java.lang.String getVirtualMachine()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.lookup.JavaLookup:java.lang.String lookup(org.apache.logging.log4j.core.LogEvent,java.lang.String)"
        ]
    },
    "org.apache.logging.log4j.core.lookup.JavaLookup:java.lang.String lookup(org.apache.logging.log4j.core.LogEvent,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.lookup.Interpolator:java.lang.String lookup(org.apache.logging.log4j.core.LogEvent,java.lang.String)",
            "org.apache.logging.log4j.core.lookup.AbstractLookup:java.lang.String lookup(java.lang.String)",
            "org.apache.logging.log4j.core.lookup.StrSubstitutor:java.lang.String resolveVariable(org.apache.logging.log4j.core.LogEvent,java.lang.String,java.lang.StringBuilder,int,int)"
        ]
    },
    "org.apache.logging.log4j.core.lookup.StrSubstitutor:boolean substitute(org.apache.logging.log4j.core.LogEvent,java.lang.StringBuilder,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.lookup.StrSubstitutor:java.lang.String replace(org.apache.logging.log4j.core.LogEvent,java.lang.String)",
            "org.apache.logging.log4j.core.lookup.StrSubstitutor:java.lang.String replace(org.apache.logging.log4j.core.LogEvent,java.lang.String,int,int)",
            "org.apache.logging.log4j.core.lookup.StrSubstitutor:java.lang.String replace(org.apache.logging.log4j.core.LogEvent,char[])",
            "org.apache.logging.log4j.core.lookup.StrSubstitutor:java.lang.String replace(org.apache.logging.log4j.core.LogEvent,char[],int,int)",
            "org.apache.logging.log4j.core.lookup.StrSubstitutor:java.lang.String replace(org.apache.logging.log4j.core.LogEvent,java.lang.StringBuffer)",
            "org.apache.logging.log4j.core.lookup.StrSubstitutor:java.lang.String replace(org.apache.logging.log4j.core.LogEvent,java.lang.StringBuffer,int,int)",
            "org.apache.logging.log4j.core.lookup.StrSubstitutor:java.lang.String replace(org.apache.logging.log4j.core.LogEvent,java.lang.StringBuilder)",
            "org.apache.logging.log4j.core.lookup.StrSubstitutor:java.lang.String replace(org.apache.logging.log4j.core.LogEvent,java.lang.StringBuilder,int,int)",
            "org.apache.logging.log4j.core.lookup.StrSubstitutor:java.lang.String replace(org.apache.logging.log4j.core.LogEvent,java.lang.Object)",
            "org.apache.logging.log4j.core.lookup.StrSubstitutor:boolean replaceIn(org.apache.logging.log4j.core.LogEvent,java.lang.StringBuffer,int,int)",
            "org.apache.logging.log4j.core.lookup.StrSubstitutor:boolean replaceIn(org.apache.logging.log4j.core.LogEvent,java.lang.StringBuilder)",
            "org.apache.logging.log4j.core.lookup.StrSubstitutor:boolean replaceIn(org.apache.logging.log4j.core.LogEvent,java.lang.StringBuilder,int,int)"
        ]
    },
    "org.apache.logging.log4j.core.appender.db.AbstractDatabaseManager:org.apache.logging.log4j.core.appender.db.AbstractDatabaseManager getManager(java.lang.String,org.apache.logging.log4j.core.appender.db.AbstractDatabaseManager$AbstractFactoryData,org.apache.logging.log4j.core.appender.ManagerFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.db.jpa.JpaDatabaseManager:org.apache.logging.log4j.core.appender.db.jpa.JpaDatabaseManager getJPADatabaseManager(java.lang.String,int,java.lang.Class,java.lang.reflect.Constructor,java.lang.String)",
            "org.apache.logging.log4j.core.appender.db.jdbc.JdbcDatabaseManager:org.apache.logging.log4j.core.appender.db.jdbc.JdbcDatabaseManager getJDBCDatabaseManager(java.lang.String,int,org.apache.logging.log4j.core.appender.db.jdbc.ConnectionSource,java.lang.String,org.apache.logging.log4j.core.appender.db.jdbc.ColumnConfig[])"
        ]
    },
    "org.apache.logging.log4j.core.appender.OutputStreamManager:org.apache.logging.log4j.core.appender.OutputStreamManager getManager(java.lang.String,java.lang.Object,org.apache.logging.log4j.core.appender.ManagerFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.rolling.RollingRandomAccessFileManager:org.apache.logging.log4j.core.appender.rolling.RollingRandomAccessFileManager getRollingRandomAccessFileManager(java.lang.String,java.lang.String,boolean,boolean,int,org.apache.logging.log4j.core.appender.rolling.TriggeringPolicy,org.apache.logging.log4j.core.appender.rolling.RolloverStrategy,java.lang.String,org.apache.logging.log4j.core.Layout)",
            "org.apache.logging.log4j.core.appender.rolling.RollingFileManager:org.apache.logging.log4j.core.appender.rolling.RollingFileManager getFileManager(java.lang.String,java.lang.String,boolean,boolean,org.apache.logging.log4j.core.appender.rolling.TriggeringPolicy,org.apache.logging.log4j.core.appender.rolling.RolloverStrategy,java.lang.String,org.apache.logging.log4j.core.Layout,int)",
            "org.apache.logging.log4j.core.appender.ConsoleAppender:org.apache.logging.log4j.core.appender.OutputStreamManager getManager(boolean,org.apache.logging.log4j.core.appender.ConsoleAppender$Target,org.apache.logging.log4j.core.Layout)",
            "org.apache.logging.log4j.core.appender.MemoryMappedFileManager:org.apache.logging.log4j.core.appender.MemoryMappedFileManager getFileManager(java.lang.String,boolean,boolean,int,java.lang.String,org.apache.logging.log4j.core.Layout)",
            "org.apache.logging.log4j.core.appender.FileManager:org.apache.logging.log4j.core.appender.FileManager getFileManager(java.lang.String,boolean,boolean,boolean,java.lang.String,org.apache.logging.log4j.core.Layout,int)",
            "org.apache.logging.log4j.core.appender.RandomAccessFileManager:org.apache.logging.log4j.core.appender.RandomAccessFileManager getFileManager(java.lang.String,boolean,boolean,int,java.lang.String,org.apache.logging.log4j.core.Layout)",
            "org.apache.logging.log4j.core.net.TcpSocketManager:org.apache.logging.log4j.core.net.TcpSocketManager getSocketManager(java.lang.String,int,int,int,boolean,org.apache.logging.log4j.core.Layout)",
            "org.apache.logging.log4j.core.net.SslSocketManager:org.apache.logging.log4j.core.net.SslSocketManager getSocketManager(org.apache.logging.log4j.core.net.ssl.SslConfiguration,java.lang.String,int,int,int,boolean,org.apache.logging.log4j.core.Layout)",
            "org.apache.logging.log4j.core.net.DatagramSocketManager:org.apache.logging.log4j.core.net.DatagramSocketManager getSocketManager(java.lang.String,int,org.apache.logging.log4j.core.Layout)"
        ]
    },
    "org.apache.logging.log4j.core.net.JndiManager:org.apache.logging.log4j.core.net.JndiManager getDefaultManager()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.selector.JndiContextSelector:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,boolean,java.net.URI)",
            "org.apache.logging.log4j.core.lookup.JndiLookup:java.lang.String lookup(org.apache.logging.log4j.core.LogEvent,java.lang.String)"
        ]
    },
    "org.apache.logging.log4j.core.net.JndiManager:org.apache.logging.log4j.core.net.JndiManager getDefaultManager(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.net.server.JmsServer:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.logging.log4j.core.net.JndiManager:org.apache.logging.log4j.core.net.JndiManager getJndiManager(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Properties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.mom.JmsAppender$Builder:org.apache.logging.log4j.core.appender.mom.JmsAppender build()"
        ]
    },
    "org.apache.logging.log4j.core.net.SmtpManager:org.apache.logging.log4j.core.net.SmtpManager getSMTPManager(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,boolean,java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.SmtpAppender:org.apache.logging.log4j.core.appender.SmtpAppender createAppender(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.logging.log4j.core.Layout,org.apache.logging.log4j.core.Filter,java.lang.String)"
        ]
    },
    "org.apache.logging.log4j.core.appender.mom.JmsAppender$Builder:org.apache.logging.log4j.core.appender.mom.JmsAppender build()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.mom.JmsAppender$Builder:java.lang.Object build()"
        ]
    },
    "org.apache.logging.log4j.core.net.server.JmsServer:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.net.mom.jms.JmsTopicReceiver:void main(java.lang.String[])",
            "org.apache.logging.log4j.core.net.mom.jms.JmsQueueReceiver:void main(java.lang.String[])"
        ]
    },
    "org.apache.logging.log4j.core.config.Configurator:org.apache.logging.log4j.core.LoggerContext initialize(java.lang.String,java.lang.ClassLoader,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.config.Configurator:org.apache.logging.log4j.core.LoggerContext initialize(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.logging.log4j.core.lookup.StrSubstitutor:java.lang.String replace(org.apache.logging.log4j.core.LogEvent,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.routing.RoutingAppender:void append(org.apache.logging.log4j.core.LogEvent)",
            "org.apache.logging.log4j.core.config.plugins.visitors.PluginBuilderAttributeVisitor:java.lang.Object visit(org.apache.logging.log4j.core.config.Configuration,org.apache.logging.log4j.core.config.Node,org.apache.logging.log4j.core.LogEvent,java.lang.StringBuilder)",
            "org.apache.logging.log4j.core.config.plugins.visitors.PluginAttributeVisitor:java.lang.Object visit(org.apache.logging.log4j.core.config.Configuration,org.apache.logging.log4j.core.config.Node,org.apache.logging.log4j.core.LogEvent,java.lang.StringBuilder)",
            "org.apache.logging.log4j.core.config.plugins.visitors.PluginAttributeVisitor:java.lang.Object findDefaultValue(org.apache.logging.log4j.core.LogEvent)",
            "org.apache.logging.log4j.core.config.plugins.visitors.PluginValueVisitor:java.lang.Object visit(org.apache.logging.log4j.core.config.Configuration,org.apache.logging.log4j.core.config.Node,org.apache.logging.log4j.core.LogEvent,java.lang.StringBuilder)",
            "org.apache.logging.log4j.core.lookup.StrSubstitutor:java.lang.String replace(java.lang.String)",
            "org.apache.logging.log4j.core.pattern.LiteralPatternConverter:void format(org.apache.logging.log4j.core.LogEvent,java.lang.StringBuilder)"
        ]
    },
    "org.apache.logging.log4j.core.lookup.StrSubstitutor:java.lang.String replace(org.apache.logging.log4j.core.LogEvent,java.lang.String,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.lookup.StrSubstitutor:java.lang.String replace(java.lang.String,int,int)"
        ]
    },
    "org.apache.logging.log4j.core.lookup.StrSubstitutor:java.lang.String replace(org.apache.logging.log4j.core.LogEvent,char[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.lookup.StrSubstitutor:java.lang.String replace(char[])"
        ]
    },
    "org.apache.logging.log4j.core.lookup.StrSubstitutor:java.lang.String replace(org.apache.logging.log4j.core.LogEvent,char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.lookup.StrSubstitutor:java.lang.String replace(char[],int,int)"
        ]
    },
    "org.apache.logging.log4j.core.lookup.StrSubstitutor:java.lang.String replace(org.apache.logging.log4j.core.LogEvent,java.lang.StringBuffer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.lookup.StrSubstitutor:java.lang.String replace(java.lang.StringBuffer)"
        ]
    },
    "org.apache.logging.log4j.core.lookup.StrSubstitutor:java.lang.String replace(org.apache.logging.log4j.core.LogEvent,java.lang.StringBuffer,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.lookup.StrSubstitutor:java.lang.String replace(java.lang.StringBuffer,int,int)"
        ]
    },
    "org.apache.logging.log4j.core.lookup.StrSubstitutor:java.lang.String replace(org.apache.logging.log4j.core.LogEvent,java.lang.StringBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.rolling.PatternProcessor:void formatFileName(org.apache.logging.log4j.core.lookup.StrSubstitutor,java.lang.StringBuilder,java.lang.Object)",
            "org.apache.logging.log4j.core.lookup.StrSubstitutor:java.lang.String replace(java.lang.StringBuilder)"
        ]
    },
    "org.apache.logging.log4j.core.lookup.StrSubstitutor:java.lang.String replace(org.apache.logging.log4j.core.LogEvent,java.lang.StringBuilder,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.lookup.StrSubstitutor:java.lang.String replace(java.lang.StringBuilder,int,int)"
        ]
    },
    "org.apache.logging.log4j.core.lookup.StrSubstitutor:java.lang.String replace(org.apache.logging.log4j.core.LogEvent,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.lookup.StrSubstitutor:java.lang.String replace(java.lang.Object)"
        ]
    },
    "org.apache.logging.log4j.core.lookup.StrSubstitutor:boolean replaceIn(org.apache.logging.log4j.core.LogEvent,java.lang.StringBuffer,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.lookup.StrSubstitutor:boolean replaceIn(java.lang.StringBuffer,int,int)"
        ]
    },
    "org.apache.logging.log4j.core.lookup.StrSubstitutor:boolean replaceIn(org.apache.logging.log4j.core.LogEvent,java.lang.StringBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.lookup.StrSubstitutor:boolean replaceIn(java.lang.StringBuilder)"
        ]
    },
    "org.apache.logging.log4j.core.lookup.StrSubstitutor:boolean replaceIn(org.apache.logging.log4j.core.LogEvent,java.lang.StringBuilder,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.lookup.StrSubstitutor:boolean replaceIn(java.lang.StringBuilder,int,int)"
        ]
    },
    "org.apache.logging.log4j.core.appender.db.jpa.JpaDatabaseManager:org.apache.logging.log4j.core.appender.db.jpa.JpaDatabaseManager getJPADatabaseManager(java.lang.String,int,java.lang.Class,java.lang.reflect.Constructor,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.db.jpa.JpaAppender:org.apache.logging.log4j.core.appender.db.jpa.JpaAppender createAppender(java.lang.String,java.lang.String,org.apache.logging.log4j.core.Filter,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.logging.log4j.core.appender.db.jdbc.JdbcDatabaseManager:org.apache.logging.log4j.core.appender.db.jdbc.JdbcDatabaseManager getJDBCDatabaseManager(java.lang.String,int,org.apache.logging.log4j.core.appender.db.jdbc.ConnectionSource,java.lang.String,org.apache.logging.log4j.core.appender.db.jdbc.ColumnConfig[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.db.jdbc.JdbcAppender:org.apache.logging.log4j.core.appender.db.jdbc.JdbcAppender createAppender(java.lang.String,java.lang.String,org.apache.logging.log4j.core.Filter,org.apache.logging.log4j.core.appender.db.jdbc.ConnectionSource,java.lang.String,java.lang.String,org.apache.logging.log4j.core.appender.db.jdbc.ColumnConfig[])"
        ]
    },
    "org.apache.logging.log4j.core.appender.rolling.RollingRandomAccessFileManager:org.apache.logging.log4j.core.appender.rolling.RollingRandomAccessFileManager getRollingRandomAccessFileManager(java.lang.String,java.lang.String,boolean,boolean,int,org.apache.logging.log4j.core.appender.rolling.TriggeringPolicy,org.apache.logging.log4j.core.appender.rolling.RolloverStrategy,java.lang.String,org.apache.logging.log4j.core.Layout)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.RollingRandomAccessFileAppender:org.apache.logging.log4j.core.appender.RollingRandomAccessFileAppender createAppender(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.logging.log4j.core.appender.rolling.TriggeringPolicy,org.apache.logging.log4j.core.appender.rolling.RolloverStrategy,org.apache.logging.log4j.core.Layout,org.apache.logging.log4j.core.Filter,java.lang.String,java.lang.String,java.lang.String,org.apache.logging.log4j.core.config.Configuration)"
        ]
    },
    "org.apache.logging.log4j.core.appender.rolling.RollingFileManager:org.apache.logging.log4j.core.appender.rolling.RollingFileManager getFileManager(java.lang.String,java.lang.String,boolean,boolean,org.apache.logging.log4j.core.appender.rolling.TriggeringPolicy,org.apache.logging.log4j.core.appender.rolling.RolloverStrategy,java.lang.String,org.apache.logging.log4j.core.Layout,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.RollingFileAppender:org.apache.logging.log4j.core.appender.RollingFileAppender createAppender(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.logging.log4j.core.appender.rolling.TriggeringPolicy,org.apache.logging.log4j.core.appender.rolling.RolloverStrategy,org.apache.logging.log4j.core.Layout,org.apache.logging.log4j.core.Filter,java.lang.String,java.lang.String,java.lang.String,org.apache.logging.log4j.core.config.Configuration)"
        ]
    },
    "org.apache.logging.log4j.core.appender.ConsoleAppender:org.apache.logging.log4j.core.appender.OutputStreamManager getManager(boolean,org.apache.logging.log4j.core.appender.ConsoleAppender$Target,org.apache.logging.log4j.core.Layout)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.ConsoleAppender:org.apache.logging.log4j.core.appender.ConsoleAppender createAppender(org.apache.logging.log4j.core.Layout,org.apache.logging.log4j.core.Filter,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.logging.log4j.core.appender.ConsoleAppender:org.apache.logging.log4j.core.appender.ConsoleAppender createDefaultAppenderForLayout(org.apache.logging.log4j.core.Layout)",
            "org.apache.logging.log4j.core.appender.ConsoleAppender:org.apache.logging.log4j.core.appender.OutputStreamManager access$200(boolean,org.apache.logging.log4j.core.appender.ConsoleAppender$Target,org.apache.logging.log4j.core.Layout)"
        ]
    },
    "org.apache.logging.log4j.core.appender.MemoryMappedFileManager:org.apache.logging.log4j.core.appender.MemoryMappedFileManager getFileManager(java.lang.String,boolean,boolean,int,java.lang.String,org.apache.logging.log4j.core.Layout)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.MemoryMappedFileAppender:org.apache.logging.log4j.core.appender.MemoryMappedFileAppender createAppender(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.logging.log4j.core.Layout,org.apache.logging.log4j.core.Filter,java.lang.String,java.lang.String,org.apache.logging.log4j.core.config.Configuration)"
        ]
    },
    "org.apache.logging.log4j.core.appender.FileManager:org.apache.logging.log4j.core.appender.FileManager getFileManager(java.lang.String,boolean,boolean,boolean,java.lang.String,org.apache.logging.log4j.core.Layout,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.FileAppender:org.apache.logging.log4j.core.appender.FileAppender createAppender(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.logging.log4j.core.Layout,org.apache.logging.log4j.core.Filter,java.lang.String,java.lang.String,org.apache.logging.log4j.core.config.Configuration)"
        ]
    },
    "org.apache.logging.log4j.core.appender.RandomAccessFileManager:org.apache.logging.log4j.core.appender.RandomAccessFileManager getFileManager(java.lang.String,boolean,boolean,int,java.lang.String,org.apache.logging.log4j.core.Layout)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.RandomAccessFileAppender:org.apache.logging.log4j.core.appender.RandomAccessFileAppender createAppender(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.logging.log4j.core.Layout,org.apache.logging.log4j.core.Filter,java.lang.String,java.lang.String,org.apache.logging.log4j.core.config.Configuration)"
        ]
    },
    "org.apache.logging.log4j.core.net.TcpSocketManager:org.apache.logging.log4j.core.net.TcpSocketManager getSocketManager(java.lang.String,int,int,int,boolean,org.apache.logging.log4j.core.Layout)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.SocketAppender:org.apache.logging.log4j.core.net.AbstractSocketManager createSocketManager(java.lang.String,org.apache.logging.log4j.core.net.Protocol,java.lang.String,int,int,org.apache.logging.log4j.core.net.ssl.SslConfiguration,int,boolean,org.apache.logging.log4j.core.Layout)"
        ]
    },
    "org.apache.logging.log4j.core.net.SslSocketManager:org.apache.logging.log4j.core.net.SslSocketManager getSocketManager(org.apache.logging.log4j.core.net.ssl.SslConfiguration,java.lang.String,int,int,int,boolean,org.apache.logging.log4j.core.Layout)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.SocketAppender:org.apache.logging.log4j.core.net.AbstractSocketManager createSocketManager(java.lang.String,org.apache.logging.log4j.core.net.Protocol,java.lang.String,int,int,org.apache.logging.log4j.core.net.ssl.SslConfiguration,int,boolean,org.apache.logging.log4j.core.Layout)"
        ]
    },
    "org.apache.logging.log4j.core.net.DatagramSocketManager:org.apache.logging.log4j.core.net.DatagramSocketManager getSocketManager(java.lang.String,int,org.apache.logging.log4j.core.Layout)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.SocketAppender:org.apache.logging.log4j.core.net.AbstractSocketManager createSocketManager(java.lang.String,org.apache.logging.log4j.core.net.Protocol,java.lang.String,int,int,org.apache.logging.log4j.core.net.ssl.SslConfiguration,int,boolean,org.apache.logging.log4j.core.Layout)"
        ]
    },
    "org.apache.logging.log4j.core.appender.SmtpAppender:org.apache.logging.log4j.core.appender.SmtpAppender createAppender(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.logging.log4j.core.Layout,org.apache.logging.log4j.core.Filter,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.appender.mom.JmsAppender$Builder:java.lang.Object build()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.config.plugins.util.PluginBuilder:java.lang.Object build()"
        ]
    },
    "org.apache.logging.log4j.core.net.mom.jms.JmsTopicReceiver:void main(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.net.mom.jms.JmsQueueReceiver:void main(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.config.Configurator:org.apache.logging.log4j.core.LoggerContext initialize(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.appender.routing.RoutingAppender:void append(org.apache.logging.log4j.core.LogEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.config.AppenderControl:void callAppender(org.apache.logging.log4j.core.LogEvent)"
        ]
    },
    "org.apache.logging.log4j.core.config.plugins.visitors.PluginBuilderAttributeVisitor:java.lang.Object visit(org.apache.logging.log4j.core.config.Configuration,org.apache.logging.log4j.core.config.Node,org.apache.logging.log4j.core.LogEvent,java.lang.StringBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.config.plugins.util.PluginBuilder:void injectFields(org.apache.logging.log4j.core.util.Builder)",
            "org.apache.logging.log4j.core.config.plugins.util.PluginBuilder:java.lang.Object[] generateParameters(java.lang.reflect.Method)"
        ]
    },
    "org.apache.logging.log4j.core.config.plugins.visitors.PluginAttributeVisitor:java.lang.Object visit(org.apache.logging.log4j.core.config.Configuration,org.apache.logging.log4j.core.config.Node,org.apache.logging.log4j.core.LogEvent,java.lang.StringBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.config.plugins.util.PluginBuilder:void injectFields(org.apache.logging.log4j.core.util.Builder)",
            "org.apache.logging.log4j.core.config.plugins.util.PluginBuilder:java.lang.Object[] generateParameters(java.lang.reflect.Method)"
        ]
    },
    "org.apache.logging.log4j.core.config.plugins.visitors.PluginAttributeVisitor:java.lang.Object findDefaultValue(org.apache.logging.log4j.core.LogEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.config.plugins.visitors.PluginAttributeVisitor:java.lang.Object visit(org.apache.logging.log4j.core.config.Configuration,org.apache.logging.log4j.core.config.Node,org.apache.logging.log4j.core.LogEvent,java.lang.StringBuilder)"
        ]
    },
    "org.apache.logging.log4j.core.config.plugins.visitors.PluginValueVisitor:java.lang.Object visit(org.apache.logging.log4j.core.config.Configuration,org.apache.logging.log4j.core.config.Node,org.apache.logging.log4j.core.LogEvent,java.lang.StringBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.config.plugins.util.PluginBuilder:void injectFields(org.apache.logging.log4j.core.util.Builder)",
            "org.apache.logging.log4j.core.config.plugins.util.PluginBuilder:java.lang.Object[] generateParameters(java.lang.reflect.Method)"
        ]
    },
    "org.apache.logging.log4j.core.lookup.StrSubstitutor:java.lang.String replace(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.rewrite.PropertiesRewritePolicy:org.apache.logging.log4j.core.LogEvent rewrite(org.apache.logging.log4j.core.LogEvent)",
            "org.apache.logging.log4j.core.config.xml.XmlConfiguration:void <init>(org.apache.logging.log4j.core.config.ConfigurationSource)",
            "org.apache.logging.log4j.core.config.json.JsonConfiguration:void <init>(org.apache.logging.log4j.core.config.ConfigurationSource)",
            "org.apache.logging.log4j.core.config.ConfigurationFactory$Factory:org.apache.logging.log4j.core.config.Configuration getConfiguration(java.lang.String,java.net.URI)",
            "org.apache.logging.log4j.core.config.LoggerConfig:void log(java.lang.String,java.lang.String,org.apache.logging.log4j.Marker,org.apache.logging.log4j.Level,org.apache.logging.log4j.message.Message,java.lang.Throwable)",
            "org.apache.logging.log4j.core.layout.PatternLayout:byte[] strSubstitutorReplace(byte[])",
            "org.apache.logging.log4j.core.async.RingBufferLogEvent:void mergePropertiesIntoContextMap(java.util.Map,org.apache.logging.log4j.core.lookup.StrSubstitutor)",
            "org.apache.logging.log4j.core.pattern.LiteralPatternConverter:void format(java.lang.Object,java.lang.StringBuilder)",
            "org.apache.logging.log4j.core.pattern.LiteralPatternConverter:void format(java.lang.StringBuilder,java.lang.Object[])"
        ]
    },
    "org.apache.logging.log4j.core.pattern.LiteralPatternConverter:void format(org.apache.logging.log4j.core.LogEvent,java.lang.StringBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.pattern.PatternFormatter:void format(org.apache.logging.log4j.core.LogEvent,java.lang.StringBuilder)",
            "org.apache.logging.log4j.core.pattern.LogEventPatternConverter:void format(java.lang.Object,java.lang.StringBuilder)"
        ]
    },
    "org.apache.logging.log4j.core.lookup.StrSubstitutor:java.lang.String replace(java.lang.String,int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.lookup.StrSubstitutor:java.lang.String replace(char[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.lookup.StrSubstitutor:java.lang.String replace(char[],int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.lookup.StrSubstitutor:java.lang.String replace(java.lang.StringBuffer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.lookup.StrSubstitutor:java.lang.String replace(java.lang.StringBuffer,int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.appender.rolling.PatternProcessor:void formatFileName(org.apache.logging.log4j.core.lookup.StrSubstitutor,java.lang.StringBuilder,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.rolling.DefaultRolloverStrategy:int purgeAscending(int,int,org.apache.logging.log4j.core.appender.rolling.RollingFileManager)",
            "org.apache.logging.log4j.core.appender.rolling.DefaultRolloverStrategy:int purgeDescending(int,int,org.apache.logging.log4j.core.appender.rolling.RollingFileManager)",
            "org.apache.logging.log4j.core.appender.rolling.DefaultRolloverStrategy:org.apache.logging.log4j.core.appender.rolling.RolloverDescription rollover(org.apache.logging.log4j.core.appender.rolling.RollingFileManager)"
        ]
    },
    "org.apache.logging.log4j.core.lookup.StrSubstitutor:java.lang.String replace(java.lang.StringBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.rolling.DefaultRolloverStrategy:int purgeAscending(int,int,org.apache.logging.log4j.core.appender.rolling.RollingFileManager)",
            "org.apache.logging.log4j.core.appender.rolling.DefaultRolloverStrategy:int purgeDescending(int,int,org.apache.logging.log4j.core.appender.rolling.RollingFileManager)"
        ]
    },
    "org.apache.logging.log4j.core.lookup.StrSubstitutor:java.lang.String replace(java.lang.StringBuilder,int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.lookup.StrSubstitutor:java.lang.String replace(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.lookup.StrSubstitutor:java.lang.String replace(java.lang.Object,java.util.Map)",
            "org.apache.logging.log4j.core.lookup.StrSubstitutor:java.lang.String replace(java.lang.Object,java.util.Map,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.logging.log4j.core.lookup.StrSubstitutor:boolean replaceIn(java.lang.StringBuffer,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.lookup.StrSubstitutor:boolean replaceIn(java.lang.StringBuffer)"
        ]
    },
    "org.apache.logging.log4j.core.lookup.StrSubstitutor:boolean replaceIn(java.lang.StringBuilder)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.lookup.StrSubstitutor:boolean replaceIn(java.lang.StringBuilder,int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.appender.db.jpa.JpaAppender:org.apache.logging.log4j.core.appender.db.jpa.JpaAppender createAppender(java.lang.String,java.lang.String,org.apache.logging.log4j.core.Filter,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.appender.db.jdbc.JdbcAppender:org.apache.logging.log4j.core.appender.db.jdbc.JdbcAppender createAppender(java.lang.String,java.lang.String,org.apache.logging.log4j.core.Filter,org.apache.logging.log4j.core.appender.db.jdbc.ConnectionSource,java.lang.String,java.lang.String,org.apache.logging.log4j.core.appender.db.jdbc.ColumnConfig[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.appender.RollingRandomAccessFileAppender:org.apache.logging.log4j.core.appender.RollingRandomAccessFileAppender createAppender(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.logging.log4j.core.appender.rolling.TriggeringPolicy,org.apache.logging.log4j.core.appender.rolling.RolloverStrategy,org.apache.logging.log4j.core.Layout,org.apache.logging.log4j.core.Filter,java.lang.String,java.lang.String,java.lang.String,org.apache.logging.log4j.core.config.Configuration)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.appender.RollingFileAppender:org.apache.logging.log4j.core.appender.RollingFileAppender createAppender(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.logging.log4j.core.appender.rolling.TriggeringPolicy,org.apache.logging.log4j.core.appender.rolling.RolloverStrategy,org.apache.logging.log4j.core.Layout,org.apache.logging.log4j.core.Filter,java.lang.String,java.lang.String,java.lang.String,org.apache.logging.log4j.core.config.Configuration)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.appender.ConsoleAppender:org.apache.logging.log4j.core.appender.ConsoleAppender createAppender(org.apache.logging.log4j.core.Layout,org.apache.logging.log4j.core.Filter,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.appender.ConsoleAppender:org.apache.logging.log4j.core.appender.ConsoleAppender createDefaultAppenderForLayout(org.apache.logging.log4j.core.Layout)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.config.DefaultConfiguration:void <init>()",
            "org.apache.logging.log4j.core.config.AbstractConfiguration:void setToDefault()"
        ]
    },
    "org.apache.logging.log4j.core.appender.ConsoleAppender:org.apache.logging.log4j.core.appender.OutputStreamManager access$200(boolean,org.apache.logging.log4j.core.appender.ConsoleAppender$Target,org.apache.logging.log4j.core.Layout)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.ConsoleAppender$Builder:org.apache.logging.log4j.core.appender.ConsoleAppender build()"
        ]
    },
    "org.apache.logging.log4j.core.appender.MemoryMappedFileAppender:org.apache.logging.log4j.core.appender.MemoryMappedFileAppender createAppender(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.logging.log4j.core.Layout,org.apache.logging.log4j.core.Filter,java.lang.String,java.lang.String,org.apache.logging.log4j.core.config.Configuration)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.appender.FileAppender:org.apache.logging.log4j.core.appender.FileAppender createAppender(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.logging.log4j.core.Layout,org.apache.logging.log4j.core.Filter,java.lang.String,java.lang.String,org.apache.logging.log4j.core.config.Configuration)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.appender.RandomAccessFileAppender:org.apache.logging.log4j.core.appender.RandomAccessFileAppender createAppender(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.logging.log4j.core.Layout,org.apache.logging.log4j.core.Filter,java.lang.String,java.lang.String,org.apache.logging.log4j.core.config.Configuration)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.appender.SocketAppender:org.apache.logging.log4j.core.net.AbstractSocketManager createSocketManager(java.lang.String,org.apache.logging.log4j.core.net.Protocol,java.lang.String,int,int,org.apache.logging.log4j.core.net.ssl.SslConfiguration,int,boolean,org.apache.logging.log4j.core.Layout)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.SocketAppender:org.apache.logging.log4j.core.appender.SocketAppender createAppender(java.lang.String,java.lang.String,java.lang.String,org.apache.logging.log4j.core.net.ssl.SslConfiguration,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.logging.log4j.core.Layout,org.apache.logging.log4j.core.Filter,java.lang.String,org.apache.logging.log4j.core.config.Configuration)",
            "org.apache.logging.log4j.core.appender.SyslogAppender:org.apache.logging.log4j.core.appender.SyslogAppender createAppender(java.lang.String,int,java.lang.String,org.apache.logging.log4j.core.net.ssl.SslConfiguration,int,int,boolean,java.lang.String,boolean,boolean,org.apache.logging.log4j.core.net.Facility,java.lang.String,int,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.logging.log4j.core.Filter,org.apache.logging.log4j.core.config.Configuration,java.nio.charset.Charset,java.lang.String,org.apache.logging.log4j.core.layout.LoggerFields[],boolean)"
        ]
    },
    "org.apache.logging.log4j.core.config.plugins.util.PluginBuilder:java.lang.Object build()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.config.plugins.util.PluginBuilder:java.lang.Object build()",
            "org.apache.logging.log4j.core.config.AbstractConfiguration:java.lang.Object createPluginObject(org.apache.logging.log4j.core.config.plugins.util.PluginType,org.apache.logging.log4j.core.config.Node,org.apache.logging.log4j.core.LogEvent)"
        ]
    },
    "org.apache.logging.log4j.core.config.AppenderControl:void callAppender(org.apache.logging.log4j.core.LogEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.rewrite.RewriteAppender:void append(org.apache.logging.log4j.core.LogEvent)",
            "org.apache.logging.log4j.core.appender.routing.RoutingAppender:void append(org.apache.logging.log4j.core.LogEvent)",
            "org.apache.logging.log4j.core.appender.AsyncAppender:void append(org.apache.logging.log4j.core.LogEvent)",
            "org.apache.logging.log4j.core.appender.FailoverAppender:void callAppender(org.apache.logging.log4j.core.LogEvent)",
            "org.apache.logging.log4j.core.appender.FailoverAppender:void failover(org.apache.logging.log4j.core.LogEvent,java.lang.Exception)",
            "org.apache.logging.log4j.core.appender.AsyncAppender$AsyncThread:void run()",
            "org.apache.logging.log4j.core.appender.AsyncAppender$AsyncThread:boolean callAppenders(org.apache.logging.log4j.core.impl.Log4jLogEvent)",
            "org.apache.logging.log4j.core.config.LoggerConfig:void callAppenders(org.apache.logging.log4j.core.LogEvent)"
        ]
    },
    "org.apache.logging.log4j.core.config.plugins.util.PluginBuilder:void injectFields(org.apache.logging.log4j.core.util.Builder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.config.plugins.util.PluginBuilder:java.lang.Object build()"
        ]
    },
    "org.apache.logging.log4j.core.config.plugins.util.PluginBuilder:java.lang.Object[] generateParameters(java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.config.plugins.util.PluginBuilder:java.lang.Object build()"
        ]
    },
    "org.apache.logging.log4j.core.appender.rewrite.PropertiesRewritePolicy:org.apache.logging.log4j.core.LogEvent rewrite(org.apache.logging.log4j.core.LogEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.rewrite.RewriteAppender:void append(org.apache.logging.log4j.core.LogEvent)",
            "org.apache.logging.log4j.core.appender.routing.RoutingAppender:void append(org.apache.logging.log4j.core.LogEvent)"
        ]
    },
    "org.apache.logging.log4j.core.config.xml.XmlConfiguration:void <init>(org.apache.logging.log4j.core.config.ConfigurationSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.net.server.AbstractSocketServer$ServerConfigurationFactory:org.apache.logging.log4j.core.config.Configuration getConfiguration(java.lang.String,java.net.URI)",
            "org.apache.logging.log4j.core.config.xml.XmlConfigurationFactory:org.apache.logging.log4j.core.config.Configuration getConfiguration(org.apache.logging.log4j.core.config.ConfigurationSource)",
            "org.apache.logging.log4j.core.config.xml.XmlConfiguration:org.apache.logging.log4j.core.config.Configuration reconfigure()"
        ]
    },
    "org.apache.logging.log4j.core.config.json.JsonConfiguration:void <init>(org.apache.logging.log4j.core.config.ConfigurationSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.config.json.JsonConfiguration:org.apache.logging.log4j.core.config.Configuration reconfigure()",
            "org.apache.logging.log4j.core.config.json.JsonConfigurationFactory:org.apache.logging.log4j.core.config.Configuration getConfiguration(org.apache.logging.log4j.core.config.ConfigurationSource)",
            "org.apache.logging.log4j.core.config.yaml.YamlConfiguration:void <init>(org.apache.logging.log4j.core.config.ConfigurationSource)"
        ]
    },
    "org.apache.logging.log4j.core.config.ConfigurationFactory$Factory:org.apache.logging.log4j.core.config.Configuration getConfiguration(java.lang.String,java.net.URI)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.impl.Log4jContextFactory:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,java.lang.Object,boolean,java.net.URI,java.lang.String)",
            "org.apache.logging.log4j.core.config.ConfigurationFactory$Factory:org.apache.logging.log4j.core.config.Configuration getConfiguration(java.lang.String,java.net.URI)",
            "org.apache.logging.log4j.core.config.ConfigurationFactory:org.apache.logging.log4j.core.config.Configuration getConfiguration(java.lang.String,java.net.URI,java.lang.ClassLoader)"
        ]
    },
    "org.apache.logging.log4j.core.config.LoggerConfig:void log(java.lang.String,java.lang.String,org.apache.logging.log4j.Marker,org.apache.logging.log4j.Level,org.apache.logging.log4j.message.Message,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.async.AsyncLogger:void logMessage(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)",
            "org.apache.logging.log4j.core.Logger:void logMessage(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)"
        ]
    },
    "org.apache.logging.log4j.core.layout.PatternLayout:byte[] strSubstitutorReplace(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.layout.PatternLayout:byte[] getHeader()",
            "org.apache.logging.log4j.core.layout.PatternLayout:byte[] getFooter()"
        ]
    },
    "org.apache.logging.log4j.core.async.RingBufferLogEvent:void mergePropertiesIntoContextMap(java.util.Map,org.apache.logging.log4j.core.lookup.StrSubstitutor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.async.AsyncLogger:void actualAsyncLog(org.apache.logging.log4j.core.async.RingBufferLogEvent)"
        ]
    },
    "org.apache.logging.log4j.core.pattern.LiteralPatternConverter:void format(java.lang.Object,java.lang.StringBuilder)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.pattern.LiteralPatternConverter:void format(java.lang.StringBuilder,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.rolling.PatternProcessor:void formatFileName(java.lang.StringBuilder,java.lang.Object[])"
        ]
    },
    "org.apache.logging.log4j.core.pattern.PatternFormatter:void format(org.apache.logging.log4j.core.LogEvent,java.lang.StringBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.layout.Rfc5424Layout:void appendMessage(java.lang.StringBuilder,org.apache.logging.log4j.core.LogEvent)",
            "org.apache.logging.log4j.core.layout.PatternLayout:java.lang.String toSerializable(org.apache.logging.log4j.core.LogEvent)",
            "org.apache.logging.log4j.core.layout.Rfc5424Layout$FieldFormatter:org.apache.logging.log4j.core.layout.Rfc5424Layout$StructuredDataElement format(org.apache.logging.log4j.core.LogEvent)",
            "org.apache.logging.log4j.core.pattern.HighlightConverter:void format(org.apache.logging.log4j.core.LogEvent,java.lang.StringBuilder)",
            "org.apache.logging.log4j.core.pattern.StyleConverter:void format(org.apache.logging.log4j.core.LogEvent,java.lang.StringBuilder)",
            "org.apache.logging.log4j.core.pattern.AbstractStyleNameConverter:void format(org.apache.logging.log4j.core.LogEvent,java.lang.StringBuilder)",
            "org.apache.logging.log4j.core.pattern.EncodingPatternConverter:void format(org.apache.logging.log4j.core.LogEvent,java.lang.StringBuilder)",
            "org.apache.logging.log4j.core.pattern.RegexReplacementConverter:void format(org.apache.logging.log4j.core.LogEvent,java.lang.StringBuilder)"
        ]
    },
    "org.apache.logging.log4j.core.pattern.LogEventPatternConverter:void format(java.lang.Object,java.lang.StringBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.pattern.DatePatternConverter:void format(java.lang.Object,java.lang.StringBuilder)"
        ]
    },
    "org.apache.logging.log4j.core.appender.rolling.DefaultRolloverStrategy:int purgeAscending(int,int,org.apache.logging.log4j.core.appender.rolling.RollingFileManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.rolling.DefaultRolloverStrategy:int purge(int,int,org.apache.logging.log4j.core.appender.rolling.RollingFileManager)"
        ]
    },
    "org.apache.logging.log4j.core.appender.rolling.DefaultRolloverStrategy:int purgeDescending(int,int,org.apache.logging.log4j.core.appender.rolling.RollingFileManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.rolling.DefaultRolloverStrategy:int purge(int,int,org.apache.logging.log4j.core.appender.rolling.RollingFileManager)"
        ]
    },
    "org.apache.logging.log4j.core.appender.rolling.DefaultRolloverStrategy:org.apache.logging.log4j.core.appender.rolling.RolloverDescription rollover(org.apache.logging.log4j.core.appender.rolling.RollingFileManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.rolling.RollingFileManager:boolean rollover(org.apache.logging.log4j.core.appender.rolling.RolloverStrategy)"
        ]
    },
    "org.apache.logging.log4j.core.lookup.StrSubstitutor:java.lang.String replace(java.lang.Object,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.lookup.StrSubstitutor:java.lang.String replace(java.lang.Object,java.util.Properties)"
        ]
    },
    "org.apache.logging.log4j.core.lookup.StrSubstitutor:java.lang.String replace(java.lang.Object,java.util.Map,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.lookup.StrSubstitutor:boolean replaceIn(java.lang.StringBuffer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.config.DefaultConfiguration:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.config.ConfigurationFactory$Factory:org.apache.logging.log4j.core.config.Configuration getConfiguration(java.lang.String,java.net.URI)",
            "org.apache.logging.log4j.core.layout.PatternLayout$Builder:org.apache.logging.log4j.core.layout.PatternLayout build()",
            "org.apache.logging.log4j.core.LoggerContext:void <init>(java.lang.String,java.lang.Object,java.net.URI)",
            "org.apache.logging.log4j.core.LoggerContext:void <init>(java.lang.String,java.lang.Object,java.lang.String)"
        ]
    },
    "org.apache.logging.log4j.core.config.AbstractConfiguration:void setToDefault()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.config.AbstractConfiguration:void doConfigure()"
        ]
    },
    "org.apache.logging.log4j.core.appender.ConsoleAppender$Builder:org.apache.logging.log4j.core.appender.ConsoleAppender build()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.ConsoleAppender$Builder:java.lang.Object build()"
        ]
    },
    "org.apache.logging.log4j.core.appender.SocketAppender:org.apache.logging.log4j.core.appender.SocketAppender createAppender(java.lang.String,java.lang.String,java.lang.String,org.apache.logging.log4j.core.net.ssl.SslConfiguration,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.logging.log4j.core.Layout,org.apache.logging.log4j.core.Filter,java.lang.String,org.apache.logging.log4j.core.config.Configuration)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.appender.SyslogAppender:org.apache.logging.log4j.core.appender.SyslogAppender createAppender(java.lang.String,int,java.lang.String,org.apache.logging.log4j.core.net.ssl.SslConfiguration,int,int,boolean,java.lang.String,boolean,boolean,org.apache.logging.log4j.core.net.Facility,java.lang.String,int,boolean,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.logging.log4j.core.Filter,org.apache.logging.log4j.core.config.Configuration,java.nio.charset.Charset,java.lang.String,org.apache.logging.log4j.core.layout.LoggerFields[],boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.config.AbstractConfiguration:java.lang.Object createPluginObject(org.apache.logging.log4j.core.config.plugins.util.PluginType,org.apache.logging.log4j.core.config.Node,org.apache.logging.log4j.core.LogEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.config.AbstractConfiguration:void createConfiguration(org.apache.logging.log4j.core.config.Node,org.apache.logging.log4j.core.LogEvent)"
        ]
    },
    "org.apache.logging.log4j.core.appender.rewrite.RewriteAppender:void append(org.apache.logging.log4j.core.LogEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.config.AppenderControl:void callAppender(org.apache.logging.log4j.core.LogEvent)"
        ]
    },
    "org.apache.logging.log4j.core.appender.AsyncAppender:void append(org.apache.logging.log4j.core.LogEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.config.AppenderControl:void callAppender(org.apache.logging.log4j.core.LogEvent)"
        ]
    },
    "org.apache.logging.log4j.core.appender.FailoverAppender:void callAppender(org.apache.logging.log4j.core.LogEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.FailoverAppender:void append(org.apache.logging.log4j.core.LogEvent)"
        ]
    },
    "org.apache.logging.log4j.core.appender.FailoverAppender:void failover(org.apache.logging.log4j.core.LogEvent,java.lang.Exception)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.FailoverAppender:void append(org.apache.logging.log4j.core.LogEvent)",
            "org.apache.logging.log4j.core.appender.FailoverAppender:void callAppender(org.apache.logging.log4j.core.LogEvent)"
        ]
    },
    "org.apache.logging.log4j.core.appender.AsyncAppender$AsyncThread:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.rolling.RollingFileManager:boolean rollover(org.apache.logging.log4j.core.appender.rolling.RolloverStrategy)",
            "org.apache.logging.log4j.core.appender.AsyncAppender:void start()",
            "org.apache.logging.log4j.core.net.server.TcpSocketServer:void main(java.lang.String[])",
            "org.apache.logging.log4j.core.net.server.AbstractSocketServer:java.lang.Thread startNewThread()",
            "org.apache.logging.log4j.core.net.server.UdpSocketServer:void main(java.lang.String[])",
            "org.apache.logging.log4j.core.util.DefaultShutdownCallbackRegistry$1:void run()",
            "org.apache.logging.log4j.core.util.DefaultShutdownCallbackRegistry:void run()",
            "org.apache.logging.log4j.core.util.CachedClock:void <init>()",
            "org.apache.logging.log4j.core.util.CoarseCachedClock:void <init>()",
            "org.apache.logging.log4j.core.config.FileConfigurationMonitor:void checkConfiguration()"
        ]
    },
    "org.apache.logging.log4j.core.appender.AsyncAppender$AsyncThread:boolean callAppenders(org.apache.logging.log4j.core.impl.Log4jLogEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.AsyncAppender:void append(org.apache.logging.log4j.core.LogEvent)",
            "org.apache.logging.log4j.core.appender.AsyncAppender$AsyncThread:void run()"
        ]
    },
    "org.apache.logging.log4j.core.config.LoggerConfig:void callAppenders(org.apache.logging.log4j.core.LogEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.config.LoggerConfig:void log(org.apache.logging.log4j.core.LogEvent)",
            "org.apache.logging.log4j.core.async.AsyncLoggerConfig:void callAppenders(org.apache.logging.log4j.core.LogEvent)",
            "org.apache.logging.log4j.core.async.AsyncLoggerConfig:void asyncCallAppenders(org.apache.logging.log4j.core.LogEvent)"
        ]
    },
    "org.apache.logging.log4j.core.net.server.AbstractSocketServer$ServerConfigurationFactory:org.apache.logging.log4j.core.config.Configuration getConfiguration(java.lang.String,java.net.URI)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.impl.Log4jContextFactory:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,java.lang.Object,boolean,java.net.URI,java.lang.String)",
            "org.apache.logging.log4j.core.config.ConfigurationFactory$Factory:org.apache.logging.log4j.core.config.Configuration getConfiguration(java.lang.String,java.net.URI)",
            "org.apache.logging.log4j.core.config.ConfigurationFactory:org.apache.logging.log4j.core.config.Configuration getConfiguration(java.lang.String,java.net.URI,java.lang.ClassLoader)"
        ]
    },
    "org.apache.logging.log4j.core.config.xml.XmlConfigurationFactory:org.apache.logging.log4j.core.config.Configuration getConfiguration(org.apache.logging.log4j.core.config.ConfigurationSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.impl.Log4jContextFactory:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,java.lang.Object,boolean,org.apache.logging.log4j.core.config.ConfigurationSource)",
            "org.apache.logging.log4j.core.config.ConfigurationFactory$Factory:org.apache.logging.log4j.core.config.Configuration getConfiguration(java.lang.String,java.net.URI)",
            "org.apache.logging.log4j.core.config.ConfigurationFactory$Factory:org.apache.logging.log4j.core.config.Configuration getConfiguration(boolean,java.lang.String)",
            "org.apache.logging.log4j.core.config.ConfigurationFactory$Factory:org.apache.logging.log4j.core.config.Configuration getConfiguration(org.apache.logging.log4j.core.config.ConfigurationSource)",
            "org.apache.logging.log4j.core.config.ConfigurationFactory:org.apache.logging.log4j.core.config.Configuration getConfiguration(java.lang.String,java.net.URI)",
            "org.apache.logging.log4j.core.config.ConfigurationFactory:org.apache.logging.log4j.core.config.Configuration getConfiguration(java.lang.String,java.net.URI,java.lang.ClassLoader)",
            "org.apache.logging.log4j.core.jmx.LoggerContextAdmin:void setConfigLocationUri(java.lang.String)",
            "org.apache.logging.log4j.core.jmx.LoggerContextAdmin:void setConfigText(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.logging.log4j.core.config.xml.XmlConfiguration:org.apache.logging.log4j.core.config.Configuration reconfigure()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.LoggerContext:void onChange(org.apache.logging.log4j.core.config.Reconfigurable)"
        ]
    },
    "org.apache.logging.log4j.core.config.json.JsonConfiguration:org.apache.logging.log4j.core.config.Configuration reconfigure()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.LoggerContext:void onChange(org.apache.logging.log4j.core.config.Reconfigurable)"
        ]
    },
    "org.apache.logging.log4j.core.config.json.JsonConfigurationFactory:org.apache.logging.log4j.core.config.Configuration getConfiguration(org.apache.logging.log4j.core.config.ConfigurationSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.impl.Log4jContextFactory:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,java.lang.Object,boolean,org.apache.logging.log4j.core.config.ConfigurationSource)",
            "org.apache.logging.log4j.core.config.ConfigurationFactory$Factory:org.apache.logging.log4j.core.config.Configuration getConfiguration(java.lang.String,java.net.URI)",
            "org.apache.logging.log4j.core.config.ConfigurationFactory$Factory:org.apache.logging.log4j.core.config.Configuration getConfiguration(boolean,java.lang.String)",
            "org.apache.logging.log4j.core.config.ConfigurationFactory$Factory:org.apache.logging.log4j.core.config.Configuration getConfiguration(org.apache.logging.log4j.core.config.ConfigurationSource)",
            "org.apache.logging.log4j.core.config.ConfigurationFactory:org.apache.logging.log4j.core.config.Configuration getConfiguration(java.lang.String,java.net.URI)",
            "org.apache.logging.log4j.core.config.ConfigurationFactory:org.apache.logging.log4j.core.config.Configuration getConfiguration(java.lang.String,java.net.URI,java.lang.ClassLoader)",
            "org.apache.logging.log4j.core.jmx.LoggerContextAdmin:void setConfigLocationUri(java.lang.String)",
            "org.apache.logging.log4j.core.jmx.LoggerContextAdmin:void setConfigText(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.logging.log4j.core.config.yaml.YamlConfiguration:void <init>(org.apache.logging.log4j.core.config.ConfigurationSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.config.yaml.YamlConfiguration:org.apache.logging.log4j.core.config.Configuration reconfigure()",
            "org.apache.logging.log4j.core.config.yaml.YamlConfigurationFactory:org.apache.logging.log4j.core.config.Configuration getConfiguration(org.apache.logging.log4j.core.config.ConfigurationSource)"
        ]
    },
    "org.apache.logging.log4j.core.config.ConfigurationFactory:org.apache.logging.log4j.core.config.Configuration getConfiguration(java.lang.String,java.net.URI,java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.LoggerContext:void reconfigure(java.net.URI)"
        ]
    },
    "org.apache.logging.log4j.core.async.AsyncLogger:void logMessage(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.Logger:void logMessage(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.layout.PatternLayout:byte[] getHeader()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.rolling.RollingRandomAccessFileManager:void writeHeader()",
            "org.apache.logging.log4j.core.appender.OutputStreamManager:void <init>(java.io.OutputStream,java.lang.String,org.apache.logging.log4j.core.Layout)",
            "org.apache.logging.log4j.core.appender.OutputStreamManager:void setOutputStream(java.io.OutputStream)",
            "org.apache.logging.log4j.core.net.SmtpManager:void writeHeader(org.apache.logging.log4j.core.Layout,java.io.OutputStream)",
            "org.apache.logging.log4j.core.net.DatagramSocketManager$DatagramSocketManagerFactory:org.apache.logging.log4j.core.net.DatagramSocketManager createManager(java.lang.String,org.apache.logging.log4j.core.net.DatagramSocketManager$FactoryData)"
        ]
    },
    "org.apache.logging.log4j.core.layout.PatternLayout:byte[] getFooter()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.OutputStreamManager:void writeFooter()",
            "org.apache.logging.log4j.core.net.SmtpManager:void writeFooter(org.apache.logging.log4j.core.Layout,java.io.OutputStream)",
            "org.apache.logging.log4j.core.net.DatagramSocketManager$DatagramSocketManagerFactory:org.apache.logging.log4j.core.net.DatagramSocketManager createManager(java.lang.String,org.apache.logging.log4j.core.net.DatagramSocketManager$FactoryData)"
        ]
    },
    "org.apache.logging.log4j.core.async.AsyncLogger:void actualAsyncLog(org.apache.logging.log4j.core.async.RingBufferLogEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.async.RingBufferLogEvent:void execute(boolean)"
        ]
    },
    "org.apache.logging.log4j.core.appender.rolling.PatternProcessor:void formatFileName(java.lang.StringBuilder,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.rolling.PatternProcessor:void formatFileName(java.lang.StringBuilder,java.lang.Object)",
            "org.apache.logging.log4j.core.appender.rolling.PatternProcessor:void formatFileName(org.apache.logging.log4j.core.lookup.StrSubstitutor,java.lang.StringBuilder,java.lang.Object)"
        ]
    },
    "org.apache.logging.log4j.core.layout.Rfc5424Layout:void appendMessage(java.lang.StringBuilder,org.apache.logging.log4j.core.LogEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.layout.Rfc5424Layout:java.lang.String toSerializable(org.apache.logging.log4j.core.LogEvent)"
        ]
    },
    "org.apache.logging.log4j.core.layout.PatternLayout:java.lang.String toSerializable(org.apache.logging.log4j.core.LogEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.db.jdbc.JdbcDatabaseManager:void writeInternal(org.apache.logging.log4j.core.LogEvent)",
            "org.apache.logging.log4j.core.layout.PatternLayout:java.io.Serializable toSerializable(org.apache.logging.log4j.core.LogEvent)"
        ]
    },
    "org.apache.logging.log4j.core.layout.Rfc5424Layout$FieldFormatter:org.apache.logging.log4j.core.layout.Rfc5424Layout$StructuredDataElement format(org.apache.logging.log4j.core.LogEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.layout.Rfc5424Layout:void appendStructuredElements(java.lang.StringBuilder,org.apache.logging.log4j.core.LogEvent)"
        ]
    },
    "org.apache.logging.log4j.core.pattern.HighlightConverter:void format(org.apache.logging.log4j.core.LogEvent,java.lang.StringBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.pattern.PatternFormatter:void format(org.apache.logging.log4j.core.LogEvent,java.lang.StringBuilder)",
            "org.apache.logging.log4j.core.pattern.LogEventPatternConverter:void format(java.lang.Object,java.lang.StringBuilder)"
        ]
    },
    "org.apache.logging.log4j.core.pattern.StyleConverter:void format(org.apache.logging.log4j.core.LogEvent,java.lang.StringBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.pattern.PatternFormatter:void format(org.apache.logging.log4j.core.LogEvent,java.lang.StringBuilder)",
            "org.apache.logging.log4j.core.pattern.LogEventPatternConverter:void format(java.lang.Object,java.lang.StringBuilder)"
        ]
    },
    "org.apache.logging.log4j.core.pattern.AbstractStyleNameConverter:void format(org.apache.logging.log4j.core.LogEvent,java.lang.StringBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.pattern.PatternFormatter:void format(org.apache.logging.log4j.core.LogEvent,java.lang.StringBuilder)",
            "org.apache.logging.log4j.core.pattern.LogEventPatternConverter:void format(java.lang.Object,java.lang.StringBuilder)"
        ]
    },
    "org.apache.logging.log4j.core.pattern.EncodingPatternConverter:void format(org.apache.logging.log4j.core.LogEvent,java.lang.StringBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.pattern.PatternFormatter:void format(org.apache.logging.log4j.core.LogEvent,java.lang.StringBuilder)",
            "org.apache.logging.log4j.core.pattern.LogEventPatternConverter:void format(java.lang.Object,java.lang.StringBuilder)"
        ]
    },
    "org.apache.logging.log4j.core.pattern.RegexReplacementConverter:void format(org.apache.logging.log4j.core.LogEvent,java.lang.StringBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.pattern.PatternFormatter:void format(org.apache.logging.log4j.core.LogEvent,java.lang.StringBuilder)",
            "org.apache.logging.log4j.core.pattern.LogEventPatternConverter:void format(java.lang.Object,java.lang.StringBuilder)"
        ]
    },
    "org.apache.logging.log4j.core.pattern.DatePatternConverter:void format(java.lang.Object,java.lang.StringBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.pattern.DatePatternConverter:void format(java.lang.StringBuilder,java.lang.Object[])"
        ]
    },
    "org.apache.logging.log4j.core.appender.rolling.DefaultRolloverStrategy:int purge(int,int,org.apache.logging.log4j.core.appender.rolling.RollingFileManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.rolling.DefaultRolloverStrategy:org.apache.logging.log4j.core.appender.rolling.RolloverDescription rollover(org.apache.logging.log4j.core.appender.rolling.RollingFileManager)"
        ]
    },
    "org.apache.logging.log4j.core.appender.rolling.RollingFileManager:boolean rollover(org.apache.logging.log4j.core.appender.rolling.RolloverStrategy)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.rolling.RollingFileManager:void checkRollover(org.apache.logging.log4j.core.LogEvent)"
        ]
    },
    "org.apache.logging.log4j.core.lookup.StrSubstitutor:java.lang.String replace(java.lang.Object,java.util.Properties)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.layout.PatternLayout$Builder:org.apache.logging.log4j.core.layout.PatternLayout build()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.db.jdbc.ColumnConfig:org.apache.logging.log4j.core.appender.db.jdbc.ColumnConfig createColumnConfig(org.apache.logging.log4j.core.config.Configuration,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.logging.log4j.core.config.DefaultConfiguration:void <init>()",
            "org.apache.logging.log4j.core.config.AbstractConfiguration:void setToDefault()",
            "org.apache.logging.log4j.core.layout.PatternLayout:org.apache.logging.log4j.core.layout.PatternLayout createLayout(java.lang.String,org.apache.logging.log4j.core.config.Configuration,org.apache.logging.log4j.core.pattern.RegexReplacement,java.nio.charset.Charset,boolean,boolean,java.lang.String,java.lang.String)",
            "org.apache.logging.log4j.core.layout.PatternLayout:org.apache.logging.log4j.core.layout.PatternLayout createDefaultLayout()",
            "org.apache.logging.log4j.core.layout.PatternLayout$Builder:java.lang.Object build()"
        ]
    },
    "org.apache.logging.log4j.core.LoggerContext:void <init>(java.lang.String,java.lang.Object,java.net.URI)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.selector.JndiContextSelector:org.apache.logging.log4j.core.LoggerContext locateContext(java.lang.String,java.lang.Object,java.net.URI)",
            "org.apache.logging.log4j.core.selector.ClassLoaderContextSelector:org.apache.logging.log4j.core.LoggerContext locateContext(java.lang.ClassLoader,java.net.URI)",
            "org.apache.logging.log4j.core.osgi.BundleContextSelector:org.apache.logging.log4j.core.LoggerContext locateContext(org.osgi.framework.Bundle,java.net.URI)",
            "org.apache.logging.log4j.core.async.AsyncLoggerContext:void <init>(java.lang.String,java.lang.Object,java.net.URI)",
            "org.apache.logging.log4j.core.LoggerContext:void <init>(java.lang.String)",
            "org.apache.logging.log4j.core.LoggerContext:void <init>(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.logging.log4j.core.LoggerContext:void <init>(java.lang.String,java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.async.AsyncLoggerContext:void <init>(java.lang.String,java.lang.Object,java.lang.String)"
        ]
    },
    "org.apache.logging.log4j.core.config.AbstractConfiguration:void doConfigure()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.config.AbstractConfiguration:void start()"
        ]
    },
    "org.apache.logging.log4j.core.appender.ConsoleAppender$Builder:java.lang.Object build()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.config.plugins.util.PluginBuilder:java.lang.Object build()"
        ]
    },
    "org.apache.logging.log4j.core.config.AbstractConfiguration:void createConfiguration(org.apache.logging.log4j.core.config.Node,org.apache.logging.log4j.core.LogEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.routing.RoutingAppender:org.apache.logging.log4j.core.Appender createAppender(org.apache.logging.log4j.core.appender.routing.Route,org.apache.logging.log4j.core.LogEvent)",
            "org.apache.logging.log4j.core.config.AbstractConfiguration:void doConfigure()",
            "org.apache.logging.log4j.core.config.AbstractConfiguration:void createConfiguration(org.apache.logging.log4j.core.config.Node,org.apache.logging.log4j.core.LogEvent)"
        ]
    },
    "org.apache.logging.log4j.core.appender.FailoverAppender:void append(org.apache.logging.log4j.core.LogEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.config.AppenderControl:void callAppender(org.apache.logging.log4j.core.LogEvent)"
        ]
    },
    "org.apache.logging.log4j.core.appender.AsyncAppender:void start()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.routing.RoutingAppender:org.apache.logging.log4j.core.Appender createAppender(org.apache.logging.log4j.core.appender.routing.Route,org.apache.logging.log4j.core.LogEvent)",
            "org.apache.logging.log4j.core.impl.Log4jContextFactory:void initializeShutdownCallbackRegistry()",
            "org.apache.logging.log4j.core.config.AbstractConfiguration:void start()"
        ]
    },
    "org.apache.logging.log4j.core.net.server.TcpSocketServer:void main(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.net.server.AbstractSocketServer:java.lang.Thread startNewThread()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.net.server.UdpSocketServer:void main(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.util.DefaultShutdownCallbackRegistry$1:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.util.DefaultShutdownCallbackRegistry$1:void run()",
            "org.apache.logging.log4j.core.util.DefaultShutdownCallbackRegistry:void run()"
        ]
    },
    "org.apache.logging.log4j.core.util.DefaultShutdownCallbackRegistry:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.impl.Log4jContextFactory:void initializeShutdownCallbackRegistry()",
            "org.apache.logging.log4j.core.util.DefaultShutdownCallbackRegistry$1:void run()",
            "org.apache.logging.log4j.core.util.DefaultShutdownCallbackRegistry:void run()"
        ]
    },
    "org.apache.logging.log4j.core.util.CachedClock:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.util.CachedClock:org.apache.logging.log4j.core.util.CachedClock instance()"
        ]
    },
    "org.apache.logging.log4j.core.util.CoarseCachedClock:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.util.CoarseCachedClock:org.apache.logging.log4j.core.util.CoarseCachedClock instance()"
        ]
    },
    "org.apache.logging.log4j.core.config.FileConfigurationMonitor:void checkConfiguration()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.Logger$PrivateConfig:void logEvent(org.apache.logging.log4j.core.LogEvent)",
            "org.apache.logging.log4j.core.Logger$PrivateConfig:boolean filter(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String)",
            "org.apache.logging.log4j.core.Logger$PrivateConfig:boolean filter(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Throwable)",
            "org.apache.logging.log4j.core.Logger$PrivateConfig:boolean filter(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object[])",
            "org.apache.logging.log4j.core.Logger$PrivateConfig:boolean filter(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.Object,java.lang.Throwable)",
            "org.apache.logging.log4j.core.Logger$PrivateConfig:boolean filter(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)",
            "org.apache.logging.log4j.core.Logger:void logMessage(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)"
        ]
    },
    "org.apache.logging.log4j.core.config.LoggerConfig:void log(org.apache.logging.log4j.core.LogEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.config.LoggerConfig:void log(java.lang.String,java.lang.String,org.apache.logging.log4j.Marker,org.apache.logging.log4j.Level,org.apache.logging.log4j.message.Message,java.lang.Throwable)",
            "org.apache.logging.log4j.core.config.LoggerConfig:void log(org.apache.logging.log4j.core.LogEvent)",
            "org.apache.logging.log4j.core.Logger$PrivateConfig:void logEvent(org.apache.logging.log4j.core.LogEvent)"
        ]
    },
    "org.apache.logging.log4j.core.async.AsyncLoggerConfig:void callAppenders(org.apache.logging.log4j.core.LogEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.config.LoggerConfig:void log(org.apache.logging.log4j.core.LogEvent)"
        ]
    },
    "org.apache.logging.log4j.core.async.AsyncLoggerConfig:void asyncCallAppenders(org.apache.logging.log4j.core.LogEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.async.AsyncLoggerConfigHelper$Log4jEventWrapperHandler:void onEvent(org.apache.logging.log4j.core.async.AsyncLoggerConfigHelper$Log4jEventWrapper,long,boolean)"
        ]
    },
    "org.apache.logging.log4j.core.config.ConfigurationFactory$Factory:org.apache.logging.log4j.core.config.Configuration getConfiguration(boolean,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.config.ConfigurationFactory$Factory:org.apache.logging.log4j.core.config.Configuration getConfiguration(java.lang.String,java.net.URI)"
        ]
    },
    "org.apache.logging.log4j.core.config.ConfigurationFactory$Factory:org.apache.logging.log4j.core.config.Configuration getConfiguration(org.apache.logging.log4j.core.config.ConfigurationSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.impl.Log4jContextFactory:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,java.lang.Object,boolean,org.apache.logging.log4j.core.config.ConfigurationSource)",
            "org.apache.logging.log4j.core.config.ConfigurationFactory$Factory:org.apache.logging.log4j.core.config.Configuration getConfiguration(java.lang.String,java.net.URI)",
            "org.apache.logging.log4j.core.config.ConfigurationFactory$Factory:org.apache.logging.log4j.core.config.Configuration getConfiguration(boolean,java.lang.String)",
            "org.apache.logging.log4j.core.config.ConfigurationFactory$Factory:org.apache.logging.log4j.core.config.Configuration getConfiguration(org.apache.logging.log4j.core.config.ConfigurationSource)",
            "org.apache.logging.log4j.core.config.ConfigurationFactory:org.apache.logging.log4j.core.config.Configuration getConfiguration(java.lang.String,java.net.URI)",
            "org.apache.logging.log4j.core.config.ConfigurationFactory:org.apache.logging.log4j.core.config.Configuration getConfiguration(java.lang.String,java.net.URI,java.lang.ClassLoader)",
            "org.apache.logging.log4j.core.jmx.LoggerContextAdmin:void setConfigLocationUri(java.lang.String)",
            "org.apache.logging.log4j.core.jmx.LoggerContextAdmin:void setConfigText(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.logging.log4j.core.config.ConfigurationFactory:org.apache.logging.log4j.core.config.Configuration getConfiguration(java.lang.String,java.net.URI)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.impl.Log4jContextFactory:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,java.lang.Object,boolean,java.net.URI,java.lang.String)",
            "org.apache.logging.log4j.core.net.server.AbstractSocketServer$ServerConfigurationFactory:org.apache.logging.log4j.core.config.Configuration getConfiguration(java.lang.String,java.net.URI)",
            "org.apache.logging.log4j.core.config.ConfigurationFactory$Factory:org.apache.logging.log4j.core.config.Configuration getConfiguration(java.lang.String,java.net.URI)",
            "org.apache.logging.log4j.core.config.ConfigurationFactory:org.apache.logging.log4j.core.config.Configuration getConfiguration(java.lang.String,java.net.URI,java.lang.ClassLoader)"
        ]
    },
    "org.apache.logging.log4j.core.jmx.LoggerContextAdmin:void setConfigLocationUri(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.jmx.LoggerContextAdmin:void setConfigText(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.LoggerContext:void onChange(org.apache.logging.log4j.core.config.Reconfigurable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.config.FileConfigurationMonitor$ReconfigurationWorker:void run()"
        ]
    },
    "org.apache.logging.log4j.core.config.yaml.YamlConfiguration:org.apache.logging.log4j.core.config.Configuration reconfigure()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.LoggerContext:void onChange(org.apache.logging.log4j.core.config.Reconfigurable)"
        ]
    },
    "org.apache.logging.log4j.core.config.yaml.YamlConfigurationFactory:org.apache.logging.log4j.core.config.Configuration getConfiguration(org.apache.logging.log4j.core.config.ConfigurationSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.impl.Log4jContextFactory:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,java.lang.Object,boolean,org.apache.logging.log4j.core.config.ConfigurationSource)",
            "org.apache.logging.log4j.core.config.ConfigurationFactory$Factory:org.apache.logging.log4j.core.config.Configuration getConfiguration(java.lang.String,java.net.URI)",
            "org.apache.logging.log4j.core.config.ConfigurationFactory$Factory:org.apache.logging.log4j.core.config.Configuration getConfiguration(boolean,java.lang.String)",
            "org.apache.logging.log4j.core.config.ConfigurationFactory$Factory:org.apache.logging.log4j.core.config.Configuration getConfiguration(org.apache.logging.log4j.core.config.ConfigurationSource)",
            "org.apache.logging.log4j.core.config.ConfigurationFactory:org.apache.logging.log4j.core.config.Configuration getConfiguration(java.lang.String,java.net.URI)",
            "org.apache.logging.log4j.core.config.ConfigurationFactory:org.apache.logging.log4j.core.config.Configuration getConfiguration(java.lang.String,java.net.URI,java.lang.ClassLoader)",
            "org.apache.logging.log4j.core.jmx.LoggerContextAdmin:void setConfigLocationUri(java.lang.String)",
            "org.apache.logging.log4j.core.jmx.LoggerContextAdmin:void setConfigText(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.logging.log4j.core.LoggerContext:void reconfigure(java.net.URI)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.LoggerContext:void setConfigLocation(java.net.URI)",
            "org.apache.logging.log4j.core.LoggerContext:void reconfigure()"
        ]
    },
    "org.apache.logging.log4j.core.appender.rolling.RollingRandomAccessFileManager:void writeHeader()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.rolling.RollingRandomAccessFileManager:void <init>(java.io.RandomAccessFile,java.lang.String,java.lang.String,java.io.OutputStream,boolean,boolean,int,long,long,org.apache.logging.log4j.core.appender.rolling.TriggeringPolicy,org.apache.logging.log4j.core.appender.rolling.RolloverStrategy,java.lang.String,org.apache.logging.log4j.core.Layout)",
            "org.apache.logging.log4j.core.appender.rolling.RollingRandomAccessFileManager:void createFileAfterRollover()"
        ]
    },
    "org.apache.logging.log4j.core.appender.OutputStreamManager:void <init>(java.io.OutputStream,java.lang.String,org.apache.logging.log4j.core.Layout)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.ConsoleAppender$ConsoleManagerFactory:org.apache.logging.log4j.core.appender.OutputStreamManager createManager(java.lang.String,org.apache.logging.log4j.core.appender.ConsoleAppender$FactoryData)",
            "org.apache.logging.log4j.core.appender.MemoryMappedFileManager:void <init>(java.io.RandomAccessFile,java.lang.String,java.io.OutputStream,boolean,long,int,java.lang.String,org.apache.logging.log4j.core.Layout)",
            "org.apache.logging.log4j.core.appender.FileManager:void <init>(java.lang.String,java.io.OutputStream,boolean,boolean,java.lang.String,org.apache.logging.log4j.core.Layout,int)",
            "org.apache.logging.log4j.core.appender.RandomAccessFileManager:void <init>(java.io.RandomAccessFile,java.lang.String,java.io.OutputStream,boolean,int,java.lang.String,org.apache.logging.log4j.core.Layout)",
            "org.apache.logging.log4j.core.net.AbstractSocketManager:void <init>(java.lang.String,java.io.OutputStream,java.net.InetAddress,java.lang.String,int,org.apache.logging.log4j.core.Layout)"
        ]
    },
    "org.apache.logging.log4j.core.appender.OutputStreamManager:void setOutputStream(java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.rolling.RollingFileManager:void createFileAfterRollover()",
            "org.apache.logging.log4j.core.net.TcpSocketManager:void access$200(org.apache.logging.log4j.core.net.TcpSocketManager,java.io.OutputStream)"
        ]
    },
    "org.apache.logging.log4j.core.net.SmtpManager:void writeHeader(org.apache.logging.log4j.core.Layout,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.net.SmtpManager:void writeContent(org.apache.logging.log4j.core.LogEvent[],org.apache.logging.log4j.core.LogEvent,org.apache.logging.log4j.core.Layout,java.io.ByteArrayOutputStream)"
        ]
    },
    "org.apache.logging.log4j.core.net.DatagramSocketManager$DatagramSocketManagerFactory:org.apache.logging.log4j.core.net.DatagramSocketManager createManager(java.lang.String,org.apache.logging.log4j.core.net.DatagramSocketManager$FactoryData)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.net.DatagramSocketManager$DatagramSocketManagerFactory:java.lang.Object createManager(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.logging.log4j.core.appender.OutputStreamManager:void writeFooter()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.rolling.RollingFileManager:boolean rollover(org.apache.logging.log4j.core.appender.rolling.RolloverStrategy)",
            "org.apache.logging.log4j.core.appender.OutputStreamManager:void releaseSub()"
        ]
    },
    "org.apache.logging.log4j.core.net.SmtpManager:void writeFooter(org.apache.logging.log4j.core.Layout,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.net.SmtpManager:void writeContent(org.apache.logging.log4j.core.LogEvent[],org.apache.logging.log4j.core.LogEvent,org.apache.logging.log4j.core.Layout,java.io.ByteArrayOutputStream)"
        ]
    },
    "org.apache.logging.log4j.core.async.RingBufferLogEvent:void execute(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.async.RingBufferLogEventHandler:void onEvent(org.apache.logging.log4j.core.async.RingBufferLogEvent,long,boolean)"
        ]
    },
    "org.apache.logging.log4j.core.appender.rolling.PatternProcessor:void formatFileName(java.lang.StringBuilder,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.layout.Rfc5424Layout:java.lang.String toSerializable(org.apache.logging.log4j.core.LogEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.layout.Rfc5424Layout:java.io.Serializable toSerializable(org.apache.logging.log4j.core.LogEvent)"
        ]
    },
    "org.apache.logging.log4j.core.appender.db.jdbc.JdbcDatabaseManager:void writeInternal(org.apache.logging.log4j.core.LogEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.db.AbstractDatabaseManager:void flush()",
            "org.apache.logging.log4j.core.appender.db.AbstractDatabaseManager:void write(org.apache.logging.log4j.core.LogEvent)"
        ]
    },
    "org.apache.logging.log4j.core.layout.PatternLayout:java.io.Serializable toSerializable(org.apache.logging.log4j.core.LogEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.mom.JmsAppender:void append(org.apache.logging.log4j.core.LogEvent)",
            "org.apache.logging.log4j.core.layout.AbstractStringLayout:byte[] toByteArray(org.apache.logging.log4j.core.LogEvent)"
        ]
    },
    "org.apache.logging.log4j.core.layout.Rfc5424Layout:void appendStructuredElements(java.lang.StringBuilder,org.apache.logging.log4j.core.LogEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.layout.Rfc5424Layout:java.lang.String toSerializable(org.apache.logging.log4j.core.LogEvent)"
        ]
    },
    "org.apache.logging.log4j.core.pattern.DatePatternConverter:void format(java.lang.StringBuilder,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.rolling.PatternProcessor:void formatFileName(java.lang.StringBuilder,java.lang.Object[])"
        ]
    },
    "org.apache.logging.log4j.core.appender.rolling.RollingFileManager:void checkRollover(org.apache.logging.log4j.core.LogEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.RollingRandomAccessFileAppender:void append(org.apache.logging.log4j.core.LogEvent)",
            "org.apache.logging.log4j.core.appender.RollingFileAppender:void append(org.apache.logging.log4j.core.LogEvent)"
        ]
    },
    "org.apache.logging.log4j.core.appender.db.jdbc.ColumnConfig:org.apache.logging.log4j.core.appender.db.jdbc.ColumnConfig createColumnConfig(org.apache.logging.log4j.core.config.Configuration,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.layout.PatternLayout:org.apache.logging.log4j.core.layout.PatternLayout createLayout(java.lang.String,org.apache.logging.log4j.core.config.Configuration,org.apache.logging.log4j.core.pattern.RegexReplacement,java.nio.charset.Charset,boolean,boolean,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.layout.PatternLayout:org.apache.logging.log4j.core.layout.PatternLayout createDefaultLayout()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.ConsoleAppender:org.apache.logging.log4j.core.appender.ConsoleAppender createAppender(org.apache.logging.log4j.core.Layout,org.apache.logging.log4j.core.Filter,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.logging.log4j.core.appender.RollingRandomAccessFileAppender:org.apache.logging.log4j.core.appender.RollingRandomAccessFileAppender createAppender(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.logging.log4j.core.appender.rolling.TriggeringPolicy,org.apache.logging.log4j.core.appender.rolling.RolloverStrategy,org.apache.logging.log4j.core.Layout,org.apache.logging.log4j.core.Filter,java.lang.String,java.lang.String,java.lang.String,org.apache.logging.log4j.core.config.Configuration)",
            "org.apache.logging.log4j.core.appender.RollingFileAppender:org.apache.logging.log4j.core.appender.RollingFileAppender createAppender(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.logging.log4j.core.appender.rolling.TriggeringPolicy,org.apache.logging.log4j.core.appender.rolling.RolloverStrategy,org.apache.logging.log4j.core.Layout,org.apache.logging.log4j.core.Filter,java.lang.String,java.lang.String,java.lang.String,org.apache.logging.log4j.core.config.Configuration)",
            "org.apache.logging.log4j.core.appender.ConsoleAppender$Builder:void <init>()",
            "org.apache.logging.log4j.core.appender.RandomAccessFileAppender:org.apache.logging.log4j.core.appender.RandomAccessFileAppender createAppender(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.logging.log4j.core.Layout,org.apache.logging.log4j.core.Filter,java.lang.String,java.lang.String,org.apache.logging.log4j.core.config.Configuration)",
            "org.apache.logging.log4j.core.appender.FileAppender:org.apache.logging.log4j.core.appender.FileAppender createAppender(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.logging.log4j.core.Layout,org.apache.logging.log4j.core.Filter,java.lang.String,java.lang.String,org.apache.logging.log4j.core.config.Configuration)",
            "org.apache.logging.log4j.core.appender.MemoryMappedFileAppender:org.apache.logging.log4j.core.appender.MemoryMappedFileAppender createAppender(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.logging.log4j.core.Layout,org.apache.logging.log4j.core.Filter,java.lang.String,java.lang.String,org.apache.logging.log4j.core.config.Configuration)"
        ]
    },
    "org.apache.logging.log4j.core.layout.PatternLayout$Builder:java.lang.Object build()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.config.plugins.util.PluginBuilder:java.lang.Object build()"
        ]
    },
    "org.apache.logging.log4j.core.selector.JndiContextSelector:org.apache.logging.log4j.core.LoggerContext locateContext(java.lang.String,java.lang.Object,java.net.URI)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.selector.JndiContextSelector:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,boolean,java.net.URI)"
        ]
    },
    "org.apache.logging.log4j.core.selector.ClassLoaderContextSelector:org.apache.logging.log4j.core.LoggerContext locateContext(java.lang.ClassLoader,java.net.URI)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.selector.ClassLoaderContextSelector:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,boolean,java.net.URI)"
        ]
    },
    "org.apache.logging.log4j.core.osgi.BundleContextSelector:org.apache.logging.log4j.core.LoggerContext locateContext(org.osgi.framework.Bundle,java.net.URI)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.osgi.BundleContextSelector:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,boolean,java.net.URI)"
        ]
    },
    "org.apache.logging.log4j.core.async.AsyncLoggerContext:void <init>(java.lang.String,java.lang.Object,java.net.URI)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.LoggerContext:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.selector.JndiContextSelector:void <clinit>()",
            "org.apache.logging.log4j.core.selector.ClassLoaderContextSelector:org.apache.logging.log4j.core.LoggerContext getDefault()",
            "org.apache.logging.log4j.core.selector.BasicContextSelector:void <clinit>()",
            "org.apache.logging.log4j.core.async.AsyncLoggerContext:void <init>(java.lang.String)"
        ]
    },
    "org.apache.logging.log4j.core.LoggerContext:void <init>(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.async.AsyncLoggerContext:void <init>(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.logging.log4j.core.async.AsyncLoggerContext:void <init>(java.lang.String,java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.config.AbstractConfiguration:void start()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.impl.Log4jContextFactory:void initializeShutdownCallbackRegistry()",
            "org.apache.logging.log4j.core.LoggerContext:org.apache.logging.log4j.core.config.Configuration setConfiguration(org.apache.logging.log4j.core.config.Configuration)"
        ]
    },
    "org.apache.logging.log4j.core.appender.routing.RoutingAppender:org.apache.logging.log4j.core.Appender createAppender(org.apache.logging.log4j.core.appender.routing.Route,org.apache.logging.log4j.core.LogEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.routing.RoutingAppender:org.apache.logging.log4j.core.config.AppenderControl getControl(java.lang.String,org.apache.logging.log4j.core.LogEvent)"
        ]
    },
    "org.apache.logging.log4j.core.impl.Log4jContextFactory:void initializeShutdownCallbackRegistry()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.impl.Log4jContextFactory:void <init>(org.apache.logging.log4j.core.selector.ContextSelector,org.apache.logging.log4j.core.util.ShutdownCallbackRegistry)"
        ]
    },
    "org.apache.logging.log4j.core.util.CachedClock:org.apache.logging.log4j.core.util.CachedClock instance()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.util.ClockFactory:org.apache.logging.log4j.core.util.Clock createClock()"
        ]
    },
    "org.apache.logging.log4j.core.util.CoarseCachedClock:org.apache.logging.log4j.core.util.CoarseCachedClock instance()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.util.ClockFactory:org.apache.logging.log4j.core.util.Clock createClock()"
        ]
    },
    "org.apache.logging.log4j.core.Logger$PrivateConfig:void logEvent(org.apache.logging.log4j.core.LogEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.async.AsyncLogger:void actualAsyncLog(org.apache.logging.log4j.core.async.RingBufferLogEvent)",
            "org.apache.logging.log4j.core.LogEventListener:void log(org.apache.logging.log4j.core.LogEvent)"
        ]
    },
    "org.apache.logging.log4j.core.Logger$PrivateConfig:boolean filter(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.Logger:boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String)"
        ]
    },
    "org.apache.logging.log4j.core.Logger$PrivateConfig:boolean filter(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.Logger:boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Throwable)"
        ]
    },
    "org.apache.logging.log4j.core.Logger$PrivateConfig:boolean filter(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.Logger:boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object[])"
        ]
    },
    "org.apache.logging.log4j.core.Logger$PrivateConfig:boolean filter(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.Object,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.Logger:boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.Object,java.lang.Throwable)"
        ]
    },
    "org.apache.logging.log4j.core.Logger$PrivateConfig:boolean filter(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.Logger:boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)",
            "org.apache.logging.log4j.core.LogEventListener:void log(org.apache.logging.log4j.core.LogEvent)"
        ]
    },
    "org.apache.logging.log4j.core.async.AsyncLoggerConfigHelper$Log4jEventWrapperHandler:void onEvent(org.apache.logging.log4j.core.async.AsyncLoggerConfigHelper$Log4jEventWrapper,long,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.async.AsyncLoggerConfigHelper$Log4jEventWrapperHandler:void onEvent(java.lang.Object,long,boolean)"
        ]
    },
    "org.apache.logging.log4j.core.config.FileConfigurationMonitor$ReconfigurationWorker:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.util.DefaultShutdownCallbackRegistry$1:void run()",
            "org.apache.logging.log4j.core.util.DefaultShutdownCallbackRegistry:void run()"
        ]
    },
    "org.apache.logging.log4j.core.LoggerContext:void setConfigLocation(java.net.URI)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.selector.ClassLoaderContextSelector:org.apache.logging.log4j.core.LoggerContext locateContext(java.lang.ClassLoader,java.net.URI)",
            "org.apache.logging.log4j.core.osgi.BundleContextSelector:org.apache.logging.log4j.core.LoggerContext locateContext(org.osgi.framework.Bundle,java.net.URI)"
        ]
    },
    "org.apache.logging.log4j.core.LoggerContext:void reconfigure()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.LoggerContext:void start()"
        ]
    },
    "org.apache.logging.log4j.core.appender.rolling.RollingRandomAccessFileManager:void <init>(java.io.RandomAccessFile,java.lang.String,java.lang.String,java.io.OutputStream,boolean,boolean,int,long,long,org.apache.logging.log4j.core.appender.rolling.TriggeringPolicy,org.apache.logging.log4j.core.appender.rolling.RolloverStrategy,java.lang.String,org.apache.logging.log4j.core.Layout)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.rolling.RollingRandomAccessFileManager$RollingRandomAccessFileManagerFactory:org.apache.logging.log4j.core.appender.rolling.RollingRandomAccessFileManager createManager(java.lang.String,org.apache.logging.log4j.core.appender.rolling.RollingRandomAccessFileManager$FactoryData)"
        ]
    },
    "org.apache.logging.log4j.core.appender.rolling.RollingRandomAccessFileManager:void createFileAfterRollover()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.rolling.RollingFileManager:void checkRollover(org.apache.logging.log4j.core.LogEvent)"
        ]
    },
    "org.apache.logging.log4j.core.appender.ConsoleAppender$ConsoleManagerFactory:org.apache.logging.log4j.core.appender.OutputStreamManager createManager(java.lang.String,org.apache.logging.log4j.core.appender.ConsoleAppender$FactoryData)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.ConsoleAppender$ConsoleManagerFactory:java.lang.Object createManager(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.logging.log4j.core.appender.MemoryMappedFileManager:void <init>(java.io.RandomAccessFile,java.lang.String,java.io.OutputStream,boolean,long,int,java.lang.String,org.apache.logging.log4j.core.Layout)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.MemoryMappedFileManager$MemoryMappedFileManagerFactory:org.apache.logging.log4j.core.appender.MemoryMappedFileManager createManager(java.lang.String,org.apache.logging.log4j.core.appender.MemoryMappedFileManager$FactoryData)"
        ]
    },
    "org.apache.logging.log4j.core.appender.FileManager:void <init>(java.lang.String,java.io.OutputStream,boolean,boolean,java.lang.String,org.apache.logging.log4j.core.Layout,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.rolling.RollingFileManager:void <init>(java.lang.String,java.lang.String,java.io.OutputStream,boolean,long,long,org.apache.logging.log4j.core.appender.rolling.TriggeringPolicy,org.apache.logging.log4j.core.appender.rolling.RolloverStrategy,java.lang.String,org.apache.logging.log4j.core.Layout,int)",
            "org.apache.logging.log4j.core.appender.FileManager$FileManagerFactory:org.apache.logging.log4j.core.appender.FileManager createManager(java.lang.String,org.apache.logging.log4j.core.appender.FileManager$FactoryData)"
        ]
    },
    "org.apache.logging.log4j.core.appender.RandomAccessFileManager:void <init>(java.io.RandomAccessFile,java.lang.String,java.io.OutputStream,boolean,int,java.lang.String,org.apache.logging.log4j.core.Layout)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.RandomAccessFileManager$RandomAccessFileManagerFactory:org.apache.logging.log4j.core.appender.RandomAccessFileManager createManager(java.lang.String,org.apache.logging.log4j.core.appender.RandomAccessFileManager$FactoryData)"
        ]
    },
    "org.apache.logging.log4j.core.net.AbstractSocketManager:void <init>(java.lang.String,java.io.OutputStream,java.net.InetAddress,java.lang.String,int,org.apache.logging.log4j.core.Layout)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.net.TcpSocketManager:void <init>(java.lang.String,java.io.OutputStream,java.net.Socket,java.net.InetAddress,java.lang.String,int,int,int,boolean,org.apache.logging.log4j.core.Layout)",
            "org.apache.logging.log4j.core.net.DatagramSocketManager:void <init>(java.lang.String,java.io.OutputStream,java.net.InetAddress,java.lang.String,int,org.apache.logging.log4j.core.Layout)"
        ]
    },
    "org.apache.logging.log4j.core.appender.rolling.RollingFileManager:void createFileAfterRollover()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.rolling.RollingFileManager:void checkRollover(org.apache.logging.log4j.core.LogEvent)"
        ]
    },
    "org.apache.logging.log4j.core.net.TcpSocketManager:void access$200(org.apache.logging.log4j.core.net.TcpSocketManager,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.net.TcpSocketManager$Reconnector:void run()"
        ]
    },
    "org.apache.logging.log4j.core.net.SmtpManager:void writeContent(org.apache.logging.log4j.core.LogEvent[],org.apache.logging.log4j.core.LogEvent,org.apache.logging.log4j.core.Layout,java.io.ByteArrayOutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.net.SmtpManager:byte[] formatContentToBytes(org.apache.logging.log4j.core.LogEvent[],org.apache.logging.log4j.core.LogEvent,org.apache.logging.log4j.core.Layout)"
        ]
    },
    "org.apache.logging.log4j.core.net.DatagramSocketManager$DatagramSocketManagerFactory:java.lang.Object createManager(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.AbstractManager:org.apache.logging.log4j.core.appender.AbstractManager getManager(java.lang.String,org.apache.logging.log4j.core.appender.ManagerFactory,java.lang.Object)"
        ]
    },
    "org.apache.logging.log4j.core.appender.OutputStreamManager:void releaseSub()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.AbstractManager:void release()"
        ]
    },
    "org.apache.logging.log4j.core.async.RingBufferLogEventHandler:void onEvent(org.apache.logging.log4j.core.async.RingBufferLogEvent,long,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.async.RingBufferLogEventHandler:void onEvent(java.lang.Object,long,boolean)"
        ]
    },
    "org.apache.logging.log4j.core.layout.Rfc5424Layout:java.io.Serializable toSerializable(org.apache.logging.log4j.core.LogEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.mom.JmsAppender:void append(org.apache.logging.log4j.core.LogEvent)",
            "org.apache.logging.log4j.core.layout.AbstractStringLayout:byte[] toByteArray(org.apache.logging.log4j.core.LogEvent)"
        ]
    },
    "org.apache.logging.log4j.core.appender.db.AbstractDatabaseManager:void flush()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.db.AbstractDatabaseManager:void shutdown()",
            "org.apache.logging.log4j.core.appender.db.AbstractDatabaseManager:void write(org.apache.logging.log4j.core.LogEvent)"
        ]
    },
    "org.apache.logging.log4j.core.appender.db.AbstractDatabaseManager:void write(org.apache.logging.log4j.core.LogEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.db.AbstractDatabaseAppender:void append(org.apache.logging.log4j.core.LogEvent)"
        ]
    },
    "org.apache.logging.log4j.core.appender.mom.JmsAppender:void append(org.apache.logging.log4j.core.LogEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.config.AppenderControl:void callAppender(org.apache.logging.log4j.core.LogEvent)"
        ]
    },
    "org.apache.logging.log4j.core.layout.AbstractStringLayout:byte[] toByteArray(org.apache.logging.log4j.core.LogEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender:void append(org.apache.logging.log4j.core.LogEvent)",
            "org.apache.logging.log4j.core.net.SmtpManager:void writeBuffer(org.apache.logging.log4j.core.LogEvent[],org.apache.logging.log4j.core.LogEvent,org.apache.logging.log4j.core.Layout,java.io.OutputStream)"
        ]
    },
    "org.apache.logging.log4j.core.appender.RollingRandomAccessFileAppender:void append(org.apache.logging.log4j.core.LogEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.config.AppenderControl:void callAppender(org.apache.logging.log4j.core.LogEvent)"
        ]
    },
    "org.apache.logging.log4j.core.appender.RollingFileAppender:void append(org.apache.logging.log4j.core.LogEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.config.AppenderControl:void callAppender(org.apache.logging.log4j.core.LogEvent)"
        ]
    },
    "org.apache.logging.log4j.core.appender.ConsoleAppender$Builder:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.ConsoleAppender:org.apache.logging.log4j.core.appender.ConsoleAppender$Builder newBuilder()"
        ]
    },
    "org.apache.logging.log4j.core.selector.ClassLoaderContextSelector:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,boolean,java.net.URI)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.impl.Log4jContextFactory:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,java.lang.Object,boolean,org.apache.logging.log4j.core.config.ConfigurationSource)",
            "org.apache.logging.log4j.core.impl.Log4jContextFactory:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,java.lang.Object,boolean,java.net.URI,java.lang.String)",
            "org.apache.logging.log4j.core.selector.ClassLoaderContextSelector:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,boolean)"
        ]
    },
    "org.apache.logging.log4j.core.osgi.BundleContextSelector:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,boolean,java.net.URI)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.impl.Log4jContextFactory:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,java.lang.Object,boolean,org.apache.logging.log4j.core.config.ConfigurationSource)",
            "org.apache.logging.log4j.core.impl.Log4jContextFactory:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,java.lang.Object,boolean,java.net.URI,java.lang.String)",
            "org.apache.logging.log4j.core.selector.ClassLoaderContextSelector:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,boolean)"
        ]
    },
    "org.apache.logging.log4j.core.selector.JndiContextSelector:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.selector.JndiContextSelector:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,boolean,java.net.URI)",
            "org.apache.logging.log4j.core.selector.JndiContextSelector:org.apache.logging.log4j.core.LoggerContext locateContext(java.lang.String,java.lang.Object,java.net.URI)",
            "org.apache.logging.log4j.core.selector.JndiContextSelector:void removeContext(org.apache.logging.log4j.core.LoggerContext)",
            "org.apache.logging.log4j.core.selector.JndiContextSelector:org.apache.logging.log4j.core.LoggerContext removeContext(java.lang.String)",
            "org.apache.logging.log4j.core.selector.JndiContextSelector:java.util.List getLoggerContexts()",
            "org.apache.logging.log4j.core.selector.JndiContextSelector:void <clinit>()"
        ]
    },
    "org.apache.logging.log4j.core.selector.ClassLoaderContextSelector:org.apache.logging.log4j.core.LoggerContext getDefault()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.selector.ClassLoaderContextSelector:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,boolean,java.net.URI)",
            "org.apache.logging.log4j.core.osgi.BundleContextSelector:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,boolean,java.net.URI)"
        ]
    },
    "org.apache.logging.log4j.core.selector.BasicContextSelector:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.selector.BasicContextSelector:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,boolean)",
            "org.apache.logging.log4j.core.selector.BasicContextSelector:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,boolean,java.net.URI)",
            "org.apache.logging.log4j.core.selector.BasicContextSelector:org.apache.logging.log4j.core.LoggerContext locateContext(java.lang.String,java.lang.String)",
            "org.apache.logging.log4j.core.selector.BasicContextSelector:java.util.List getLoggerContexts()",
            "org.apache.logging.log4j.core.selector.BasicContextSelector:void <clinit>()"
        ]
    },
    "org.apache.logging.log4j.core.async.AsyncLoggerContext:void <init>(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.async.AsyncLoggerContextSelector:void <clinit>()"
        ]
    },
    "org.apache.logging.log4j.core.async.AsyncLoggerContext:void <init>(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.LoggerContext:org.apache.logging.log4j.core.config.Configuration setConfiguration(org.apache.logging.log4j.core.config.Configuration)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.LoggerContext:void start(org.apache.logging.log4j.core.config.Configuration)",
            "org.apache.logging.log4j.core.LoggerContext:void reconfigure(java.net.URI)",
            "org.apache.logging.log4j.core.LoggerContext:void onChange(org.apache.logging.log4j.core.config.Reconfigurable)"
        ]
    },
    "org.apache.logging.log4j.core.appender.routing.RoutingAppender:org.apache.logging.log4j.core.config.AppenderControl getControl(java.lang.String,org.apache.logging.log4j.core.LogEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.routing.RoutingAppender:void append(org.apache.logging.log4j.core.LogEvent)"
        ]
    },
    "org.apache.logging.log4j.core.impl.Log4jContextFactory:void <init>(org.apache.logging.log4j.core.selector.ContextSelector,org.apache.logging.log4j.core.util.ShutdownCallbackRegistry)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.impl.Log4jContextFactory:void <init>()",
            "org.apache.logging.log4j.core.impl.Log4jContextFactory:void <init>(org.apache.logging.log4j.core.selector.ContextSelector)",
            "org.apache.logging.log4j.core.impl.Log4jContextFactory:void <init>(org.apache.logging.log4j.core.util.ShutdownCallbackRegistry)"
        ]
    },
    "org.apache.logging.log4j.core.util.ClockFactory:org.apache.logging.log4j.core.util.Clock createClock()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.util.ClockFactory:org.apache.logging.log4j.core.util.Clock getClock()"
        ]
    },
    "org.apache.logging.log4j.core.LogEventListener:void log(org.apache.logging.log4j.core.LogEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.net.server.InputStreamLogEventBridge:void logEvents(java.io.InputStream,org.apache.logging.log4j.core.LogEventListener)",
            "org.apache.logging.log4j.core.net.server.ObjectInputStreamLogEventBridge:void logEvents(java.io.ObjectInputStream,org.apache.logging.log4j.core.LogEventListener)",
            "org.apache.logging.log4j.core.net.server.JmsServer:void onMessage(javax.jms.Message)"
        ]
    },
    "org.apache.logging.log4j.core.Logger:boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.Logger:boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.Logger:boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.Logger:boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.Object,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.Logger:boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.async.AsyncLoggerConfigHelper$Log4jEventWrapperHandler:void onEvent(java.lang.Object,long,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.LoggerContext:void start()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.impl.Log4jContextFactory:void initializeShutdownCallbackRegistry()",
            "org.apache.logging.log4j.core.impl.Log4jContextFactory:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,java.lang.Object,boolean)",
            "org.apache.logging.log4j.core.impl.Log4jContextFactory:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,java.lang.Object,boolean,org.apache.logging.log4j.core.config.ConfigurationSource)",
            "org.apache.logging.log4j.core.impl.Log4jContextFactory:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,java.lang.Object,boolean,java.net.URI,java.lang.String)"
        ]
    },
    "org.apache.logging.log4j.core.appender.rolling.RollingRandomAccessFileManager$RollingRandomAccessFileManagerFactory:org.apache.logging.log4j.core.appender.rolling.RollingRandomAccessFileManager createManager(java.lang.String,org.apache.logging.log4j.core.appender.rolling.RollingRandomAccessFileManager$FactoryData)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.rolling.RollingRandomAccessFileManager$RollingRandomAccessFileManagerFactory:java.lang.Object createManager(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.logging.log4j.core.appender.ConsoleAppender$ConsoleManagerFactory:java.lang.Object createManager(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.AbstractManager:org.apache.logging.log4j.core.appender.AbstractManager getManager(java.lang.String,org.apache.logging.log4j.core.appender.ManagerFactory,java.lang.Object)"
        ]
    },
    "org.apache.logging.log4j.core.appender.MemoryMappedFileManager$MemoryMappedFileManagerFactory:org.apache.logging.log4j.core.appender.MemoryMappedFileManager createManager(java.lang.String,org.apache.logging.log4j.core.appender.MemoryMappedFileManager$FactoryData)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.MemoryMappedFileManager$MemoryMappedFileManagerFactory:java.lang.Object createManager(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.logging.log4j.core.appender.rolling.RollingFileManager:void <init>(java.lang.String,java.lang.String,java.io.OutputStream,boolean,long,long,org.apache.logging.log4j.core.appender.rolling.TriggeringPolicy,org.apache.logging.log4j.core.appender.rolling.RolloverStrategy,java.lang.String,org.apache.logging.log4j.core.Layout,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.rolling.RollingRandomAccessFileManager:void <init>(java.io.RandomAccessFile,java.lang.String,java.lang.String,java.io.OutputStream,boolean,boolean,int,long,long,org.apache.logging.log4j.core.appender.rolling.TriggeringPolicy,org.apache.logging.log4j.core.appender.rolling.RolloverStrategy,java.lang.String,org.apache.logging.log4j.core.Layout)",
            "org.apache.logging.log4j.core.appender.rolling.RollingFileManager$RollingFileManagerFactory:org.apache.logging.log4j.core.appender.rolling.RollingFileManager createManager(java.lang.String,org.apache.logging.log4j.core.appender.rolling.RollingFileManager$FactoryData)"
        ]
    },
    "org.apache.logging.log4j.core.appender.FileManager$FileManagerFactory:org.apache.logging.log4j.core.appender.FileManager createManager(java.lang.String,org.apache.logging.log4j.core.appender.FileManager$FactoryData)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.FileManager$FileManagerFactory:java.lang.Object createManager(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.logging.log4j.core.appender.RandomAccessFileManager$RandomAccessFileManagerFactory:org.apache.logging.log4j.core.appender.RandomAccessFileManager createManager(java.lang.String,org.apache.logging.log4j.core.appender.RandomAccessFileManager$FactoryData)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.RandomAccessFileManager$RandomAccessFileManagerFactory:java.lang.Object createManager(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.logging.log4j.core.net.TcpSocketManager:void <init>(java.lang.String,java.io.OutputStream,java.net.Socket,java.net.InetAddress,java.lang.String,int,int,int,boolean,org.apache.logging.log4j.core.Layout)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.net.SslSocketManager:void <init>(java.lang.String,java.io.OutputStream,java.net.Socket,org.apache.logging.log4j.core.net.ssl.SslConfiguration,java.net.InetAddress,java.lang.String,int,int,int,boolean,org.apache.logging.log4j.core.Layout)",
            "org.apache.logging.log4j.core.net.TcpSocketManager$TcpSocketManagerFactory:org.apache.logging.log4j.core.net.TcpSocketManager createManager(java.lang.String,org.apache.logging.log4j.core.net.TcpSocketManager$FactoryData)"
        ]
    },
    "org.apache.logging.log4j.core.net.DatagramSocketManager:void <init>(java.lang.String,java.io.OutputStream,java.net.InetAddress,java.lang.String,int,org.apache.logging.log4j.core.Layout)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.net.DatagramSocketManager$DatagramSocketManagerFactory:org.apache.logging.log4j.core.net.DatagramSocketManager createManager(java.lang.String,org.apache.logging.log4j.core.net.DatagramSocketManager$FactoryData)"
        ]
    },
    "org.apache.logging.log4j.core.net.TcpSocketManager$Reconnector:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.rolling.RollingFileManager:boolean rollover(org.apache.logging.log4j.core.appender.rolling.RolloverStrategy)",
            "org.apache.logging.log4j.core.net.server.TcpSocketServer:void main(java.lang.String[])",
            "org.apache.logging.log4j.core.net.server.AbstractSocketServer:java.lang.Thread startNewThread()",
            "org.apache.logging.log4j.core.net.server.UdpSocketServer:void main(java.lang.String[])",
            "org.apache.logging.log4j.core.net.TcpSocketManager:void <init>(java.lang.String,java.io.OutputStream,java.net.Socket,java.net.InetAddress,java.lang.String,int,int,int,boolean,org.apache.logging.log4j.core.Layout)",
            "org.apache.logging.log4j.core.net.TcpSocketManager:void write(byte[],int,int)",
            "org.apache.logging.log4j.core.util.DefaultShutdownCallbackRegistry$1:void run()",
            "org.apache.logging.log4j.core.util.DefaultShutdownCallbackRegistry:void run()",
            "org.apache.logging.log4j.core.util.CachedClock:void <init>()",
            "org.apache.logging.log4j.core.util.CoarseCachedClock:void <init>()",
            "org.apache.logging.log4j.core.config.FileConfigurationMonitor:void checkConfiguration()"
        ]
    },
    "org.apache.logging.log4j.core.net.SmtpManager:byte[] formatContentToBytes(org.apache.logging.log4j.core.LogEvent[],org.apache.logging.log4j.core.LogEvent,org.apache.logging.log4j.core.Layout)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.net.SmtpManager:void sendEvents(org.apache.logging.log4j.core.Layout,org.apache.logging.log4j.core.LogEvent)"
        ]
    },
    "org.apache.logging.log4j.core.appender.AbstractManager:void release()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.db.AbstractDatabaseAppender:void stop()",
            "org.apache.logging.log4j.core.appender.db.AbstractDatabaseAppender:void replaceManager(org.apache.logging.log4j.core.appender.db.AbstractDatabaseManager)",
            "org.apache.logging.log4j.core.appender.mom.JmsManager:void releaseSub()",
            "org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender:void stop()",
            "org.apache.logging.log4j.core.selector.JndiContextSelector:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,boolean,java.net.URI)",
            "org.apache.logging.log4j.core.net.server.JmsServer:void stop()",
            "org.apache.logging.log4j.core.lookup.JndiLookup:java.lang.String lookup(org.apache.logging.log4j.core.LogEvent,java.lang.String)"
        ]
    },
    "org.apache.logging.log4j.core.async.RingBufferLogEventHandler:void onEvent(java.lang.Object,long,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.appender.db.AbstractDatabaseManager:void shutdown()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.db.AbstractDatabaseManager:void releaseSub()"
        ]
    },
    "org.apache.logging.log4j.core.appender.db.AbstractDatabaseAppender:void append(org.apache.logging.log4j.core.LogEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.config.AppenderControl:void callAppender(org.apache.logging.log4j.core.LogEvent)"
        ]
    },
    "org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender:void append(org.apache.logging.log4j.core.LogEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.RollingRandomAccessFileAppender:void append(org.apache.logging.log4j.core.LogEvent)",
            "org.apache.logging.log4j.core.appender.RollingFileAppender:void append(org.apache.logging.log4j.core.LogEvent)",
            "org.apache.logging.log4j.core.appender.RandomAccessFileAppender:void append(org.apache.logging.log4j.core.LogEvent)",
            "org.apache.logging.log4j.core.appender.MemoryMappedFileAppender:void append(org.apache.logging.log4j.core.LogEvent)",
            "org.apache.logging.log4j.core.config.AppenderControl:void callAppender(org.apache.logging.log4j.core.LogEvent)"
        ]
    },
    "org.apache.logging.log4j.core.net.SmtpManager:void writeBuffer(org.apache.logging.log4j.core.LogEvent[],org.apache.logging.log4j.core.LogEvent,org.apache.logging.log4j.core.Layout,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.net.SmtpManager:void writeContent(org.apache.logging.log4j.core.LogEvent[],org.apache.logging.log4j.core.LogEvent,org.apache.logging.log4j.core.Layout,java.io.ByteArrayOutputStream)"
        ]
    },
    "org.apache.logging.log4j.core.appender.ConsoleAppender:org.apache.logging.log4j.core.appender.ConsoleAppender$Builder newBuilder()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.selector.ClassLoaderContextSelector:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.impl.Log4jContextFactory:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,java.lang.Object,boolean)"
        ]
    },
    "org.apache.logging.log4j.core.selector.JndiContextSelector:void removeContext(org.apache.logging.log4j.core.LoggerContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.impl.Log4jContextFactory:void removeContext(org.apache.logging.log4j.spi.LoggerContext)"
        ]
    },
    "org.apache.logging.log4j.core.selector.JndiContextSelector:org.apache.logging.log4j.core.LoggerContext removeContext(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.selector.JndiContextSelector:java.util.List getLoggerContexts()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.jmx.Server:void reregisterMBeansAfterReconfigure(javax.management.MBeanServer)"
        ]
    },
    "org.apache.logging.log4j.core.selector.BasicContextSelector:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.impl.Log4jContextFactory:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,java.lang.Object,boolean)"
        ]
    },
    "org.apache.logging.log4j.core.selector.BasicContextSelector:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,boolean,java.net.URI)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.impl.Log4jContextFactory:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,java.lang.Object,boolean,org.apache.logging.log4j.core.config.ConfigurationSource)",
            "org.apache.logging.log4j.core.impl.Log4jContextFactory:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,java.lang.Object,boolean,java.net.URI,java.lang.String)"
        ]
    },
    "org.apache.logging.log4j.core.selector.BasicContextSelector:org.apache.logging.log4j.core.LoggerContext locateContext(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.selector.BasicContextSelector:java.util.List getLoggerContexts()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.jmx.Server:void reregisterMBeansAfterReconfigure(javax.management.MBeanServer)"
        ]
    },
    "org.apache.logging.log4j.core.async.AsyncLoggerContextSelector:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.async.AsyncLoggerContextSelector:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,boolean)",
            "org.apache.logging.log4j.core.async.AsyncLoggerContextSelector:java.util.List getLoggerContexts()",
            "org.apache.logging.log4j.core.async.AsyncLoggerContextSelector:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,boolean,java.net.URI)",
            "org.apache.logging.log4j.core.async.AsyncLoggerContextSelector:void <clinit>()"
        ]
    },
    "org.apache.logging.log4j.core.LoggerContext:void start(org.apache.logging.log4j.core.config.Configuration)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.impl.Log4jContextFactory:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,java.lang.Object,boolean,org.apache.logging.log4j.core.config.ConfigurationSource)",
            "org.apache.logging.log4j.core.impl.Log4jContextFactory:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,java.lang.Object,boolean,java.net.URI,java.lang.String)",
            "org.apache.logging.log4j.core.jmx.LoggerContextAdmin:void setConfigLocationUri(java.lang.String)",
            "org.apache.logging.log4j.core.jmx.LoggerContextAdmin:void setConfigText(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.logging.log4j.core.impl.Log4jContextFactory:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.impl.Log4jContextFactory:void <init>(org.apache.logging.log4j.core.selector.ContextSelector)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.impl.Log4jContextFactory:void <init>(org.apache.logging.log4j.core.util.ShutdownCallbackRegistry)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.util.ClockFactory:org.apache.logging.log4j.core.util.Clock getClock()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.impl.Log4jLogEvent:void <clinit>()",
            "org.apache.logging.log4j.core.async.AsyncLogger:void <clinit>()"
        ]
    },
    "org.apache.logging.log4j.core.net.server.InputStreamLogEventBridge:void logEvents(java.io.InputStream,org.apache.logging.log4j.core.LogEventListener)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.net.server.TcpSocketServer$SocketHandler:void run()",
            "org.apache.logging.log4j.core.net.server.UdpSocketServer:void run()"
        ]
    },
    "org.apache.logging.log4j.core.net.server.ObjectInputStreamLogEventBridge:void logEvents(java.io.ObjectInputStream,org.apache.logging.log4j.core.LogEventListener)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.net.server.ObjectInputStreamLogEventBridge:void logEvents(java.io.InputStream,org.apache.logging.log4j.core.LogEventListener)"
        ]
    },
    "org.apache.logging.log4j.core.net.server.JmsServer:void onMessage(javax.jms.Message)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.appender.rolling.RollingRandomAccessFileManager$RollingRandomAccessFileManagerFactory:java.lang.Object createManager(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.AbstractManager:org.apache.logging.log4j.core.appender.AbstractManager getManager(java.lang.String,org.apache.logging.log4j.core.appender.ManagerFactory,java.lang.Object)"
        ]
    },
    "org.apache.logging.log4j.core.appender.MemoryMappedFileManager$MemoryMappedFileManagerFactory:java.lang.Object createManager(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.AbstractManager:org.apache.logging.log4j.core.appender.AbstractManager getManager(java.lang.String,org.apache.logging.log4j.core.appender.ManagerFactory,java.lang.Object)"
        ]
    },
    "org.apache.logging.log4j.core.appender.rolling.RollingFileManager$RollingFileManagerFactory:org.apache.logging.log4j.core.appender.rolling.RollingFileManager createManager(java.lang.String,org.apache.logging.log4j.core.appender.rolling.RollingFileManager$FactoryData)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.rolling.RollingFileManager$RollingFileManagerFactory:java.lang.Object createManager(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.logging.log4j.core.appender.FileManager$FileManagerFactory:java.lang.Object createManager(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.AbstractManager:org.apache.logging.log4j.core.appender.AbstractManager getManager(java.lang.String,org.apache.logging.log4j.core.appender.ManagerFactory,java.lang.Object)"
        ]
    },
    "org.apache.logging.log4j.core.appender.RandomAccessFileManager$RandomAccessFileManagerFactory:java.lang.Object createManager(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.AbstractManager:org.apache.logging.log4j.core.appender.AbstractManager getManager(java.lang.String,org.apache.logging.log4j.core.appender.ManagerFactory,java.lang.Object)"
        ]
    },
    "org.apache.logging.log4j.core.net.SslSocketManager:void <init>(java.lang.String,java.io.OutputStream,java.net.Socket,org.apache.logging.log4j.core.net.ssl.SslConfiguration,java.net.InetAddress,java.lang.String,int,int,int,boolean,org.apache.logging.log4j.core.Layout)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.net.SslSocketManager$SslSocketManagerFactory:org.apache.logging.log4j.core.net.SslSocketManager createManager(java.lang.String,org.apache.logging.log4j.core.net.SslSocketManager$SslFactoryData)"
        ]
    },
    "org.apache.logging.log4j.core.net.TcpSocketManager$TcpSocketManagerFactory:org.apache.logging.log4j.core.net.TcpSocketManager createManager(java.lang.String,org.apache.logging.log4j.core.net.TcpSocketManager$FactoryData)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.net.TcpSocketManager$TcpSocketManagerFactory:java.lang.Object createManager(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.logging.log4j.core.net.TcpSocketManager:void write(byte[],int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.OutputStreamManager:void write(byte[])"
        ]
    },
    "org.apache.logging.log4j.core.net.SmtpManager:void sendEvents(org.apache.logging.log4j.core.Layout,org.apache.logging.log4j.core.LogEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.SmtpAppender:void append(org.apache.logging.log4j.core.LogEvent)"
        ]
    },
    "org.apache.logging.log4j.core.appender.db.AbstractDatabaseAppender:void stop()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.routing.RoutingAppender:void stop()",
            "org.apache.logging.log4j.core.config.AbstractConfiguration:void stop()",
            "org.apache.logging.log4j.core.config.AbstractConfiguration:void removeAppender(java.lang.String)"
        ]
    },
    "org.apache.logging.log4j.core.appender.db.AbstractDatabaseAppender:void replaceManager(org.apache.logging.log4j.core.appender.db.AbstractDatabaseManager)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.appender.mom.JmsManager:void releaseSub()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.AbstractManager:void release()"
        ]
    },
    "org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender:void stop()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.routing.RoutingAppender:void stop()",
            "org.apache.logging.log4j.core.appender.SocketAppender:void stop()",
            "org.apache.logging.log4j.core.appender.RollingRandomAccessFileAppender:void stop()",
            "org.apache.logging.log4j.core.appender.RollingFileAppender:void stop()",
            "org.apache.logging.log4j.core.appender.RandomAccessFileAppender:void stop()",
            "org.apache.logging.log4j.core.appender.FileAppender:void stop()",
            "org.apache.logging.log4j.core.appender.MemoryMappedFileAppender:void stop()",
            "org.apache.logging.log4j.core.config.AbstractConfiguration:void stop()",
            "org.apache.logging.log4j.core.config.AbstractConfiguration:void removeAppender(java.lang.String)"
        ]
    },
    "org.apache.logging.log4j.core.net.server.JmsServer:void stop()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.net.mom.jms.JmsTopicReceiver:void main(java.lang.String[])",
            "org.apache.logging.log4j.core.net.mom.jms.JmsQueueReceiver:void main(java.lang.String[])"
        ]
    },
    "org.apache.logging.log4j.core.appender.db.AbstractDatabaseManager:void releaseSub()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.AbstractManager:void release()"
        ]
    },
    "org.apache.logging.log4j.core.appender.RandomAccessFileAppender:void append(org.apache.logging.log4j.core.LogEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.config.AppenderControl:void callAppender(org.apache.logging.log4j.core.LogEvent)"
        ]
    },
    "org.apache.logging.log4j.core.appender.MemoryMappedFileAppender:void append(org.apache.logging.log4j.core.LogEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.config.AppenderControl:void callAppender(org.apache.logging.log4j.core.LogEvent)"
        ]
    },
    "org.apache.logging.log4j.core.impl.Log4jContextFactory:void removeContext(org.apache.logging.log4j.spi.LoggerContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.LoggerContext:void stop()"
        ]
    },
    "org.apache.logging.log4j.core.jmx.Server:void reregisterMBeansAfterReconfigure(javax.management.MBeanServer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.jmx.Server:void reregisterMBeansAfterReconfigure()"
        ]
    },
    "org.apache.logging.log4j.core.async.AsyncLoggerContextSelector:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.impl.Log4jContextFactory:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,java.lang.Object,boolean)"
        ]
    },
    "org.apache.logging.log4j.core.async.AsyncLoggerContextSelector:java.util.List getLoggerContexts()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.jmx.Server:void reregisterMBeansAfterReconfigure(javax.management.MBeanServer)"
        ]
    },
    "org.apache.logging.log4j.core.async.AsyncLoggerContextSelector:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,boolean,java.net.URI)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.impl.Log4jContextFactory:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,java.lang.Object,boolean,org.apache.logging.log4j.core.config.ConfigurationSource)",
            "org.apache.logging.log4j.core.impl.Log4jContextFactory:org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String,java.lang.ClassLoader,java.lang.Object,boolean,java.net.URI,java.lang.String)"
        ]
    },
    "org.apache.logging.log4j.core.impl.Log4jLogEvent:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.rewrite.MapRewritePolicy:org.apache.logging.log4j.core.LogEvent rewrite(org.apache.logging.log4j.core.LogEvent)",
            "org.apache.logging.log4j.core.appender.rewrite.PropertiesRewritePolicy:org.apache.logging.log4j.core.LogEvent rewrite(org.apache.logging.log4j.core.LogEvent)",
            "org.apache.logging.log4j.core.appender.rolling.PatternProcessor:void formatFileName(org.apache.logging.log4j.core.lookup.StrSubstitutor,java.lang.StringBuilder,java.lang.Object)",
            "org.apache.logging.log4j.core.appender.AsyncAppender:void append(org.apache.logging.log4j.core.LogEvent)",
            "org.apache.logging.log4j.core.appender.AsyncAppender$AsyncThread:void run()",
            "org.apache.logging.log4j.core.impl.Log4jLogEvent$LogEventProxy:void <init>(org.apache.logging.log4j.core.impl.Log4jLogEvent,boolean)",
            "org.apache.logging.log4j.core.impl.Log4jLogEvent$LogEventProxy:java.lang.Object readResolve()",
            "org.apache.logging.log4j.core.impl.DefaultLogEventFactory:org.apache.logging.log4j.core.LogEvent createEvent(java.lang.String,org.apache.logging.log4j.Marker,java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.message.Message,java.util.List,java.lang.Throwable)",
            "org.apache.logging.log4j.core.impl.Log4jLogEvent:void <init>()",
            "org.apache.logging.log4j.core.impl.Log4jLogEvent:void <init>(java.lang.String,org.apache.logging.log4j.Marker,java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.message.Message,java.util.List,java.lang.Throwable)",
            "org.apache.logging.log4j.core.impl.Log4jLogEvent:org.apache.logging.log4j.core.impl.Log4jLogEvent createEvent(java.lang.String,org.apache.logging.log4j.Marker,java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.message.Message,java.lang.Throwable,org.apache.logging.log4j.core.impl.ThrowableProxy,java.util.Map,org.apache.logging.log4j.ThreadContext$ContextStack,java.lang.String,java.lang.StackTraceElement,long)",
            "org.apache.logging.log4j.core.impl.Log4jLogEvent:java.lang.StackTraceElement getSource()",
            "org.apache.logging.log4j.core.impl.Log4jLogEvent:org.apache.logging.log4j.core.impl.Log4jLogEvent deserialize(java.io.Serializable)",
            "org.apache.logging.log4j.core.impl.Log4jLogEvent:void <clinit>()",
            "org.apache.logging.log4j.core.impl.Log4jLogEvent$Builder:org.apache.logging.log4j.core.impl.Log4jLogEvent build()",
            "org.apache.logging.log4j.core.async.RingBufferLogEvent:org.apache.logging.log4j.core.LogEvent createMemento()",
            "org.apache.logging.log4j.core.async.AsyncLogger:java.lang.StackTraceElement location(java.lang.String)"
        ]
    },
    "org.apache.logging.log4j.core.async.AsyncLogger:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.jmx.Server:void reregisterMBeansAfterReconfigure(javax.management.MBeanServer)",
            "org.apache.logging.log4j.core.async.AsyncLogger:int calculateRingBufferSize()",
            "org.apache.logging.log4j.core.async.AsyncLogger:void initInfoForExecutorThread()",
            "org.apache.logging.log4j.core.async.AsyncLogger:com.lmax.disruptor.WaitStrategy createWaitStrategy()",
            "org.apache.logging.log4j.core.async.AsyncLogger:com.lmax.disruptor.ExceptionHandler getExceptionHandler()",
            "org.apache.logging.log4j.core.async.AsyncLogger:void logMessage(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)",
            "org.apache.logging.log4j.core.async.AsyncLogger:void stop()",
            "org.apache.logging.log4j.core.async.AsyncLogger:org.apache.logging.log4j.core.jmx.RingBufferAdmin createRingBufferAdmin(java.lang.String)",
            "org.apache.logging.log4j.core.async.AsyncLogger:org.apache.logging.log4j.status.StatusLogger access$200()",
            "org.apache.logging.log4j.core.async.AsyncLogger:java.lang.ThreadLocal access$300()",
            "org.apache.logging.log4j.core.async.AsyncLogger:void <clinit>()",
            "org.apache.logging.log4j.core.async.AsyncLogger$ThreadNameStrategy:org.apache.logging.log4j.core.async.AsyncLogger$ThreadNameStrategy create()",
            "org.apache.logging.log4j.core.async.AsyncLogger$1:void run()",
            "org.apache.logging.log4j.core.async.AsyncLoggerContext:org.apache.logging.log4j.core.Logger newInstance(org.apache.logging.log4j.core.LoggerContext,java.lang.String,org.apache.logging.log4j.message.MessageFactory)",
            "org.apache.logging.log4j.core.async.AsyncLoggerContext:void stop()"
        ]
    },
    "org.apache.logging.log4j.core.net.server.TcpSocketServer$SocketHandler:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.rolling.RollingFileManager:boolean rollover(org.apache.logging.log4j.core.appender.rolling.RolloverStrategy)",
            "org.apache.logging.log4j.core.net.server.TcpSocketServer:void main(java.lang.String[])",
            "org.apache.logging.log4j.core.net.server.TcpSocketServer:void run()",
            "org.apache.logging.log4j.core.net.server.AbstractSocketServer:java.lang.Thread startNewThread()",
            "org.apache.logging.log4j.core.net.server.UdpSocketServer:void main(java.lang.String[])",
            "org.apache.logging.log4j.core.util.DefaultShutdownCallbackRegistry$1:void run()",
            "org.apache.logging.log4j.core.util.DefaultShutdownCallbackRegistry:void run()",
            "org.apache.logging.log4j.core.util.CachedClock:void <init>()",
            "org.apache.logging.log4j.core.util.CoarseCachedClock:void <init>()",
            "org.apache.logging.log4j.core.config.FileConfigurationMonitor:void checkConfiguration()"
        ]
    },
    "org.apache.logging.log4j.core.net.server.UdpSocketServer:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.util.DefaultShutdownCallbackRegistry$1:void run()",
            "org.apache.logging.log4j.core.util.DefaultShutdownCallbackRegistry:void run()"
        ]
    },
    "org.apache.logging.log4j.core.net.server.ObjectInputStreamLogEventBridge:void logEvents(java.io.InputStream,org.apache.logging.log4j.core.LogEventListener)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.net.server.TcpSocketServer$SocketHandler:void run()",
            "org.apache.logging.log4j.core.net.server.UdpSocketServer:void run()"
        ]
    },
    "org.apache.logging.log4j.core.appender.rolling.RollingFileManager$RollingFileManagerFactory:java.lang.Object createManager(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.AbstractManager:org.apache.logging.log4j.core.appender.AbstractManager getManager(java.lang.String,org.apache.logging.log4j.core.appender.ManagerFactory,java.lang.Object)"
        ]
    },
    "org.apache.logging.log4j.core.net.SslSocketManager$SslSocketManagerFactory:org.apache.logging.log4j.core.net.SslSocketManager createManager(java.lang.String,org.apache.logging.log4j.core.net.SslSocketManager$SslFactoryData)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.net.SslSocketManager$SslSocketManagerFactory:java.lang.Object createManager(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.logging.log4j.core.net.TcpSocketManager$TcpSocketManagerFactory:java.lang.Object createManager(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.AbstractManager:org.apache.logging.log4j.core.appender.AbstractManager getManager(java.lang.String,org.apache.logging.log4j.core.appender.ManagerFactory,java.lang.Object)"
        ]
    },
    "org.apache.logging.log4j.core.appender.OutputStreamManager:void write(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.OutputStreamManager:void writeFooter()",
            "org.apache.logging.log4j.core.appender.AbstractOutputStreamAppender:void append(org.apache.logging.log4j.core.LogEvent)"
        ]
    },
    "org.apache.logging.log4j.core.appender.SmtpAppender:void append(org.apache.logging.log4j.core.LogEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.config.AppenderControl:void callAppender(org.apache.logging.log4j.core.LogEvent)"
        ]
    },
    "org.apache.logging.log4j.core.appender.routing.RoutingAppender:void stop()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.routing.RoutingAppender:void stop()",
            "org.apache.logging.log4j.core.config.AbstractConfiguration:void stop()",
            "org.apache.logging.log4j.core.config.AbstractConfiguration:void removeAppender(java.lang.String)"
        ]
    },
    "org.apache.logging.log4j.core.config.AbstractConfiguration:void stop()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.LoggerContext:void stop()",
            "org.apache.logging.log4j.core.LoggerContext:org.apache.logging.log4j.core.config.Configuration setConfiguration(org.apache.logging.log4j.core.config.Configuration)"
        ]
    },
    "org.apache.logging.log4j.core.config.AbstractConfiguration:void removeAppender(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.appender.SocketAppender:void stop()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.routing.RoutingAppender:void stop()",
            "org.apache.logging.log4j.core.config.AbstractConfiguration:void stop()",
            "org.apache.logging.log4j.core.config.AbstractConfiguration:void removeAppender(java.lang.String)"
        ]
    },
    "org.apache.logging.log4j.core.appender.RollingRandomAccessFileAppender:void stop()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.routing.RoutingAppender:void stop()",
            "org.apache.logging.log4j.core.config.AbstractConfiguration:void stop()",
            "org.apache.logging.log4j.core.config.AbstractConfiguration:void removeAppender(java.lang.String)"
        ]
    },
    "org.apache.logging.log4j.core.appender.RollingFileAppender:void stop()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.routing.RoutingAppender:void stop()",
            "org.apache.logging.log4j.core.config.AbstractConfiguration:void stop()",
            "org.apache.logging.log4j.core.config.AbstractConfiguration:void removeAppender(java.lang.String)"
        ]
    },
    "org.apache.logging.log4j.core.appender.RandomAccessFileAppender:void stop()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.routing.RoutingAppender:void stop()",
            "org.apache.logging.log4j.core.config.AbstractConfiguration:void stop()",
            "org.apache.logging.log4j.core.config.AbstractConfiguration:void removeAppender(java.lang.String)"
        ]
    },
    "org.apache.logging.log4j.core.appender.FileAppender:void stop()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.routing.RoutingAppender:void stop()",
            "org.apache.logging.log4j.core.config.AbstractConfiguration:void stop()",
            "org.apache.logging.log4j.core.config.AbstractConfiguration:void removeAppender(java.lang.String)"
        ]
    },
    "org.apache.logging.log4j.core.appender.MemoryMappedFileAppender:void stop()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.routing.RoutingAppender:void stop()",
            "org.apache.logging.log4j.core.config.AbstractConfiguration:void stop()",
            "org.apache.logging.log4j.core.config.AbstractConfiguration:void removeAppender(java.lang.String)"
        ]
    },
    "org.apache.logging.log4j.core.LoggerContext:void stop()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.config.Configurator:void shutdown(org.apache.logging.log4j.core.LoggerContext)",
            "org.apache.logging.log4j.core.async.AsyncLoggerContext:void stop()",
            "org.apache.logging.log4j.core.LoggerContext$1:void run()"
        ]
    },
    "org.apache.logging.log4j.core.jmx.Server:void reregisterMBeansAfterReconfigure()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.LoggerContext:org.apache.logging.log4j.core.config.Configuration setConfiguration(org.apache.logging.log4j.core.config.Configuration)"
        ]
    },
    "org.apache.logging.log4j.core.appender.rewrite.MapRewritePolicy:org.apache.logging.log4j.core.LogEvent rewrite(org.apache.logging.log4j.core.LogEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.rewrite.RewriteAppender:void append(org.apache.logging.log4j.core.LogEvent)",
            "org.apache.logging.log4j.core.appender.routing.RoutingAppender:void append(org.apache.logging.log4j.core.LogEvent)"
        ]
    },
    "org.apache.logging.log4j.core.impl.Log4jLogEvent$LogEventProxy:void <init>(org.apache.logging.log4j.core.impl.Log4jLogEvent,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.impl.Log4jLogEvent:java.lang.Object writeReplace()",
            "org.apache.logging.log4j.core.impl.Log4jLogEvent:java.io.Serializable serialize(org.apache.logging.log4j.core.impl.Log4jLogEvent,boolean)"
        ]
    },
    "org.apache.logging.log4j.core.impl.Log4jLogEvent$LogEventProxy:java.lang.Object readResolve()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.impl.DefaultLogEventFactory:org.apache.logging.log4j.core.LogEvent createEvent(java.lang.String,org.apache.logging.log4j.Marker,java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.message.Message,java.util.List,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.config.LoggerConfig:void log(java.lang.String,java.lang.String,org.apache.logging.log4j.Marker,org.apache.logging.log4j.Level,org.apache.logging.log4j.message.Message,java.lang.Throwable)"
        ]
    },
    "org.apache.logging.log4j.core.impl.Log4jLogEvent:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.impl.Log4jLogEvent:void <init>(java.lang.String,org.apache.logging.log4j.Marker,java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.message.Message,java.util.List,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.impl.DefaultLogEventFactory:org.apache.logging.log4j.core.LogEvent createEvent(java.lang.String,org.apache.logging.log4j.Marker,java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.message.Message,java.util.List,java.lang.Throwable)",
            "org.apache.logging.log4j.core.impl.Log4jLogEvent:void <init>(java.lang.String,org.apache.logging.log4j.Marker,java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.message.Message,java.lang.Throwable)"
        ]
    },
    "org.apache.logging.log4j.core.impl.Log4jLogEvent:org.apache.logging.log4j.core.impl.Log4jLogEvent createEvent(java.lang.String,org.apache.logging.log4j.Marker,java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.message.Message,java.lang.Throwable,org.apache.logging.log4j.core.impl.ThrowableProxy,java.util.Map,org.apache.logging.log4j.ThreadContext$ContextStack,java.lang.String,java.lang.StackTraceElement,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.rewrite.MapRewritePolicy:org.apache.logging.log4j.core.LogEvent rewrite(org.apache.logging.log4j.core.LogEvent)"
        ]
    },
    "org.apache.logging.log4j.core.impl.Log4jLogEvent:java.lang.StackTraceElement getSource()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.rewrite.MapRewritePolicy:org.apache.logging.log4j.core.LogEvent rewrite(org.apache.logging.log4j.core.LogEvent)",
            "org.apache.logging.log4j.core.appender.rewrite.PropertiesRewritePolicy:org.apache.logging.log4j.core.LogEvent rewrite(org.apache.logging.log4j.core.LogEvent)",
            "org.apache.logging.log4j.core.appender.db.jpa.BasicLogEventEntity:java.lang.StackTraceElement getSource()",
            "org.apache.logging.log4j.core.impl.Log4jLogEvent$LogEventProxy:void <init>(org.apache.logging.log4j.core.impl.Log4jLogEvent,boolean)",
            "org.apache.logging.log4j.core.layout.HtmlLayout:java.lang.String toSerializable(org.apache.logging.log4j.core.LogEvent)",
            "org.apache.logging.log4j.core.async.AsyncLoggerConfig:void callAppenders(org.apache.logging.log4j.core.LogEvent)",
            "org.apache.logging.log4j.core.pattern.MethodLocationPatternConverter:void format(org.apache.logging.log4j.core.LogEvent,java.lang.StringBuilder)",
            "org.apache.logging.log4j.core.pattern.FullLocationPatternConverter:void format(org.apache.logging.log4j.core.LogEvent,java.lang.StringBuilder)",
            "org.apache.logging.log4j.core.pattern.FileLocationPatternConverter:void format(org.apache.logging.log4j.core.LogEvent,java.lang.StringBuilder)",
            "org.apache.logging.log4j.core.pattern.ClassNamePatternConverter:void format(org.apache.logging.log4j.core.LogEvent,java.lang.StringBuilder)",
            "org.apache.logging.log4j.core.pattern.LineLocationPatternConverter:void format(org.apache.logging.log4j.core.LogEvent,java.lang.StringBuilder)"
        ]
    },
    "org.apache.logging.log4j.core.impl.Log4jLogEvent:org.apache.logging.log4j.core.impl.Log4jLogEvent deserialize(java.io.Serializable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.AsyncAppender$AsyncThread:void run()"
        ]
    },
    "org.apache.logging.log4j.core.impl.Log4jLogEvent$Builder:org.apache.logging.log4j.core.impl.Log4jLogEvent build()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.impl.Log4jLogEvent$Builder:java.lang.Object build()"
        ]
    },
    "org.apache.logging.log4j.core.async.RingBufferLogEvent:org.apache.logging.log4j.core.LogEvent createMemento()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.AsyncAppender:void append(org.apache.logging.log4j.core.LogEvent)",
            "org.apache.logging.log4j.core.async.AsyncLoggerConfigHelper:boolean callAppendersFromAnotherThread(org.apache.logging.log4j.core.LogEvent)"
        ]
    },
    "org.apache.logging.log4j.core.async.AsyncLogger:java.lang.StackTraceElement location(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.async.AsyncLogger:void logMessage(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)"
        ]
    },
    "org.apache.logging.log4j.core.async.AsyncLogger:int calculateRingBufferSize()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.async.AsyncLogger:void <clinit>()"
        ]
    },
    "org.apache.logging.log4j.core.async.AsyncLogger:void initInfoForExecutorThread()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.async.AsyncLogger:void <clinit>()"
        ]
    },
    "org.apache.logging.log4j.core.async.AsyncLogger:com.lmax.disruptor.WaitStrategy createWaitStrategy()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.async.AsyncLogger:void <clinit>()"
        ]
    },
    "org.apache.logging.log4j.core.async.AsyncLogger:com.lmax.disruptor.ExceptionHandler getExceptionHandler()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.async.AsyncLogger:void <clinit>()"
        ]
    },
    "org.apache.logging.log4j.core.async.AsyncLogger:void stop()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.async.AsyncLoggerContext:void stop()"
        ]
    },
    "org.apache.logging.log4j.core.async.AsyncLogger:org.apache.logging.log4j.core.jmx.RingBufferAdmin createRingBufferAdmin(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.jmx.Server:void reregisterMBeansAfterReconfigure(javax.management.MBeanServer)"
        ]
    },
    "org.apache.logging.log4j.core.async.AsyncLogger:org.apache.logging.log4j.status.StatusLogger access$200()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.async.AsyncLogger$ThreadNameStrategy:org.apache.logging.log4j.core.async.AsyncLogger$ThreadNameStrategy create()"
        ]
    },
    "org.apache.logging.log4j.core.async.AsyncLogger:java.lang.ThreadLocal access$300()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.async.AsyncLogger$1:void run()"
        ]
    },
    "org.apache.logging.log4j.core.async.AsyncLogger$ThreadNameStrategy:org.apache.logging.log4j.core.async.AsyncLogger$ThreadNameStrategy create()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.async.AsyncLogger:void <clinit>()"
        ]
    },
    "org.apache.logging.log4j.core.async.AsyncLogger$1:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.util.DefaultShutdownCallbackRegistry$1:void run()",
            "org.apache.logging.log4j.core.util.DefaultShutdownCallbackRegistry:void run()"
        ]
    },
    "org.apache.logging.log4j.core.async.AsyncLoggerContext:org.apache.logging.log4j.core.Logger newInstance(org.apache.logging.log4j.core.LoggerContext,java.lang.String,org.apache.logging.log4j.message.MessageFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.LoggerContext:org.apache.logging.log4j.core.Logger getLogger(java.lang.String,org.apache.logging.log4j.message.MessageFactory)"
        ]
    },
    "org.apache.logging.log4j.core.async.AsyncLoggerContext:void stop()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.config.Configurator:void shutdown(org.apache.logging.log4j.core.LoggerContext)",
            "org.apache.logging.log4j.core.LoggerContext$1:void run()"
        ]
    },
    "org.apache.logging.log4j.core.net.server.TcpSocketServer:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.util.DefaultShutdownCallbackRegistry$1:void run()",
            "org.apache.logging.log4j.core.util.DefaultShutdownCallbackRegistry:void run()"
        ]
    },
    "org.apache.logging.log4j.core.net.SslSocketManager$SslSocketManagerFactory:java.lang.Object createManager(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.AbstractManager:org.apache.logging.log4j.core.appender.AbstractManager getManager(java.lang.String,org.apache.logging.log4j.core.appender.ManagerFactory,java.lang.Object)"
        ]
    },
    "org.apache.logging.log4j.core.config.Configurator:void shutdown(org.apache.logging.log4j.core.LoggerContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.LoggerContext$1:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.util.DefaultShutdownCallbackRegistry$1:void run()",
            "org.apache.logging.log4j.core.util.DefaultShutdownCallbackRegistry:void run()"
        ]
    },
    "org.apache.logging.log4j.core.impl.Log4jLogEvent:java.lang.Object writeReplace()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.impl.Log4jLogEvent:java.io.Serializable serialize(org.apache.logging.log4j.core.impl.Log4jLogEvent,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.AsyncAppender:void append(org.apache.logging.log4j.core.LogEvent)"
        ]
    },
    "org.apache.logging.log4j.core.impl.Log4jLogEvent:void <init>(java.lang.String,org.apache.logging.log4j.Marker,java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.message.Message,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.impl.Log4jLogEvent$Builder:org.apache.logging.log4j.core.impl.Log4jLogEvent build()"
        ]
    },
    "org.apache.logging.log4j.core.appender.db.jpa.BasicLogEventEntity:java.lang.StackTraceElement getSource()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.layout.HtmlLayout:java.lang.String toSerializable(org.apache.logging.log4j.core.LogEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.layout.HtmlLayout:java.io.Serializable toSerializable(org.apache.logging.log4j.core.LogEvent)"
        ]
    },
    "org.apache.logging.log4j.core.pattern.MethodLocationPatternConverter:void format(org.apache.logging.log4j.core.LogEvent,java.lang.StringBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.pattern.PatternFormatter:void format(org.apache.logging.log4j.core.LogEvent,java.lang.StringBuilder)",
            "org.apache.logging.log4j.core.pattern.LogEventPatternConverter:void format(java.lang.Object,java.lang.StringBuilder)"
        ]
    },
    "org.apache.logging.log4j.core.pattern.FullLocationPatternConverter:void format(org.apache.logging.log4j.core.LogEvent,java.lang.StringBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.pattern.PatternFormatter:void format(org.apache.logging.log4j.core.LogEvent,java.lang.StringBuilder)",
            "org.apache.logging.log4j.core.pattern.LogEventPatternConverter:void format(java.lang.Object,java.lang.StringBuilder)"
        ]
    },
    "org.apache.logging.log4j.core.pattern.FileLocationPatternConverter:void format(org.apache.logging.log4j.core.LogEvent,java.lang.StringBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.pattern.PatternFormatter:void format(org.apache.logging.log4j.core.LogEvent,java.lang.StringBuilder)",
            "org.apache.logging.log4j.core.pattern.LogEventPatternConverter:void format(java.lang.Object,java.lang.StringBuilder)"
        ]
    },
    "org.apache.logging.log4j.core.pattern.ClassNamePatternConverter:void format(org.apache.logging.log4j.core.LogEvent,java.lang.StringBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.pattern.PatternFormatter:void format(org.apache.logging.log4j.core.LogEvent,java.lang.StringBuilder)",
            "org.apache.logging.log4j.core.pattern.LogEventPatternConverter:void format(java.lang.Object,java.lang.StringBuilder)"
        ]
    },
    "org.apache.logging.log4j.core.pattern.LineLocationPatternConverter:void format(org.apache.logging.log4j.core.LogEvent,java.lang.StringBuilder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.pattern.PatternFormatter:void format(org.apache.logging.log4j.core.LogEvent,java.lang.StringBuilder)",
            "org.apache.logging.log4j.core.pattern.LogEventPatternConverter:void format(java.lang.Object,java.lang.StringBuilder)"
        ]
    },
    "org.apache.logging.log4j.core.impl.Log4jLogEvent$Builder:java.lang.Object build()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.config.plugins.util.PluginBuilder:java.lang.Object build()"
        ]
    },
    "org.apache.logging.log4j.core.async.AsyncLoggerConfigHelper:boolean callAppendersFromAnotherThread(org.apache.logging.log4j.core.LogEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.async.AsyncLoggerConfig:void callAppenders(org.apache.logging.log4j.core.LogEvent)"
        ]
    },
    "org.apache.logging.log4j.core.LoggerContext:org.apache.logging.log4j.core.Logger getLogger(java.lang.String,org.apache.logging.log4j.message.MessageFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.Logger:org.apache.logging.log4j.core.Logger getParent()",
            "org.apache.logging.log4j.core.LoggerContext:org.apache.logging.log4j.core.Logger getLogger(java.lang.String)",
            "org.apache.logging.log4j.core.LoggerContext:org.apache.logging.log4j.spi.ExtendedLogger getLogger(java.lang.String,org.apache.logging.log4j.message.MessageFactory)"
        ]
    },
    "org.apache.logging.log4j.core.layout.HtmlLayout:java.io.Serializable toSerializable(org.apache.logging.log4j.core.LogEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.appender.mom.JmsAppender:void append(org.apache.logging.log4j.core.LogEvent)",
            "org.apache.logging.log4j.core.layout.AbstractStringLayout:byte[] toByteArray(org.apache.logging.log4j.core.LogEvent)"
        ]
    },
    "org.apache.logging.log4j.core.Logger:org.apache.logging.log4j.core.Logger getParent()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.LoggerContext:org.apache.logging.log4j.core.Logger getLogger(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.logging.log4j.core.LoggerContext:org.apache.logging.log4j.spi.ExtendedLogger getLogger(java.lang.String)",
            "org.apache.logging.log4j.core.LogEventListener:void log(org.apache.logging.log4j.core.LogEvent)"
        ]
    },
    "org.apache.logging.log4j.core.LoggerContext:org.apache.logging.log4j.spi.ExtendedLogger getLogger(java.lang.String,org.apache.logging.log4j.message.MessageFactory)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.logging.log4j.core.LoggerContext:org.apache.logging.log4j.spi.ExtendedLogger getLogger(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    }
}